{"version":3,"sources":["components/ManageUserManual/UserManual.jsx","assets/image/logo.png","components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop.jsx","Service/UserService.jsx","Service/MedicalService.jsx","context/UserContext.jsx","components/Nav/Header.jsx","routes/PrivateRoutes.js","components/ErrorPage/Page404.js","components/ManageRegister/Register.jsx","components/LoginAccount/Log-in.jsx","components/ManageAlertProcessing/AlertProcessing.jsx","Service/PlaceService.jsx","components/ManageInfoPantients/ManageInfoPantients.jsx","components/MedicalRegister/ListPatientsRegister.jsx","components/ManageExaminingSession/ExaminingSession.jsx","components/ManageOldDisease/OldDisease.jsx","components/MedicalRegister/BookMedical.jsx","components/MedicalRegister/MainMedicalRegister.jsx","components/MedicalAppointment/MainAppointmentExamining.jsx","components/ManageCompleteExamining/CompleteExamining.jsx","components/DoctorExamining/PreviewLastExamining.jsx","components/DoctorExamining/MainDoctorExamining.jsx","Service/StatisticsService.jsx","components/Dashboard/MainDashboard.jsx","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["UserManual","props","_jsxs","Dialog","fullWidth","maxWidth","open","openModalUserManual","disableEscapeKeyDown","children","_jsx","DialogTitle","sx","fontWeight","fontSize","textAlign","color","textTransform","IconButton","onClick","setOpenModalUserManual","position","right","top","CloseIcon","DialogContent","dividers","pl","pr","Typography","variant","Box","AlertProcessingBackdrop","Backdrop","zIndex","theme","drawer","backgroundColor","changeBackground","openAlertProcessingBackdrop","display","flexDirection","alignItems","CircularProgress","mt","alertTitle","backendURL","createConfig","token","localStorage","getItem","headers","Authorization","concat","createMedicalBackRegister","async","axios","post","dataPatientsRegister","then","response","catch","error","createAddPredecessor","dataPredecessor","getRegistersByDateNow","config","get","data","status","getListMedicalExaminationsGiveRegister","dayOfBirth","getVaccinationByPatientId","patientId","getMedicalBook","medicalRegisterId","getUpdatePredecessor","getAppointmentsNextWeek","updateMedicalState","id","state","put","updateStateAppointment","dataAppointment","stateAppointment","medicalBookId","appointmentDate","UserContext","React","createContext","UserProvider","_ref","userDefault","isAuthenticated","isLogin","user","setUser","useState","loading","setLoading","alertVisible","setAlertVisible","isLogOutClick","setIsLogOutClick","onConfirm","setOnConfirm","setOpenAlertProcessingBackdrop","resetAlert","checkJWTExpire","result","getJWT","decodeJWT","JSON","parse","atob","split","e","parseJwt","currentDate","Date","exp","getTime","removeItem","useEffect","getUserLogin","_Fragment","Provider","value","loadingContext","loginContext","userContextLogin","logoutContext","triggerAlert","confirmCallback","confirmAlert","withRouter","useContext","location","useLocation","history","useHistory","anchorEl","setAnchorEl","Boolean","handleClick","event","currentTarget","handleClose","actionNursing","key","label","icon","LocalHospitalIcon","LinkComponent","NavLink","to","LocalPhoneIcon","actionDoctor","MedicationLiquidIcon","actionAdmin","BarChartIcon","userAction","setUserAction","pathname","findIndex","action","handleLogout","positionName","push","width","AppBar","Toolbar","height","Link","Avatar","src","Logo","mb","mr","BottomNavigation","showLabels","justifyContent","flexGrow","map","actionItem","BottomNavigationAction","Button","userFullName","Menu","onClose","MenuItem","HelpIcon","titleAccess","cursor","exact","PrivateRoutes","Route","path","component","Redirect","Page404","className","CreateAccount","showPassword","setShowPassword","handleCloseModalRegister","reason","setOpenModalRegister","openModalRegister","m","p","TextField","type","InputProps","endAdornment","InputAdornment","handleClickShowPassword","padding","VisibilityIcon","VisibilityOffIcon","Autocomplete","options","option","renderInput","params","Stack","spacing","direction","style","margin","Login","userAccount","setUserAccount","userId","password","handleLogin","userName","toast","userLogin","setItem","tokenDTO","stringify","handleKeyDown","preventDefault","document","addEventListener","removeEventListener","Container","borderRadius","ml","autoComplete","onChange","onChangeUserName","target","prevUserAccount","onChangeUserPassword","onKeyDown","which","code","handlePressEnter","Register","AlertProcessing","openAlertProcessing","getListProvince","getListDistrict","provinceId","getListWard","districtId","getFullAddressByIdWard","codeWard","ManageInfoPantients","dataPatientInfoDefault","examinationId","weight","headCircumference","vaccination","patient","identifier","address","fullName","gender","fullNameMother","phoneMother","fullNameFather","phoneFather","dataPatientInfoErrorDefault","title","isError","openTooltip","focus","examiningSession","province","district","ward","listGender","genderOrder","genderName","genderValue","selectedAutoCompleteDefault","openOption","typingRef","useRef","dateFieldRef","dataPatientInfoNotEdit","setDataPatientInfoNotEdit","dataPatientInfo","setDataPatientInfo","dataPatientInfoError","setDataPatientInfoError","selectedAutoComplete","setSelectedAutoComplete","listExaminingSession","setListExaminingSession","listProvince","setListProvince","listDistrict","setListDistrict","list","listWard","setListWard","focusField","setFocusField","setOpenAlertProcessing","tooltipTheme","createTheme","components","MuiTooltip","defaultProps","placement","arrow","componentsProps","tooltip","bgcolor","slotProps","popper","modifiers","name","offset","handleFocus","fieldName","prevSelectedAutoComplete","handleBlur","test","filterOptions","inputValue","lowercasedInput","toLowerCase","filter","lowercasedFullName","initials","word","join","includes","onChangeDOBToGetExaminingSession","responseListMedicalExaminationsGiveRegister","formattedDate","exams","handleCloseModalInfoPantients","prevListDistrict","prevListWard","setSelectedPantientInfo","setOpenModalInfoPantients","handleUpdateMedicalRegister","checkValidate","_dataPatientInfoError","isValid","Object","values","every","item","current","_","isEqual","warning","toastId","updateMedicalRegister","success","setCompleteMedicalRegister","length","responseListProvince","handleGetListProvince","selectedPantientInfo","setIsContinueUpdateMedicalRegister","editPropsDataPatientInfo","cloneDeep","responseListDistrict","provinceCode","responseListWard","districtCode","selectedGender","find","indexListExamining","indexListProvince","indexListDistrict","indexListWard","wardCode","handleApplyPantientDataToField","openModalInfoPantients","isContinueUpdateMedicalRegister","pt","pb","flexWrap","ThemeProvider","Tooltip","marginTop","inputProps","maxLength","inputRef","input","defaultValue","takenValue","clearInterval","setTimeout","prevDataPatientsRegister","onChangeIdentifier","prevDataPatientInfo","onChangeFullName","getOptionLabel","renderOption","onSelectGender","onFocus","onBlur","disableClearable","popupIcon","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DemoContainer","DatePicker","format","moment","disableFuture","disableOpenPicker","textField","_d","today","yearsDifference","getFullYear","monthsDifference","getMonth","daysDifference","getDate","age","totalMonths","totalDays","isNaN","onChangeDOB","noOptionsText","onSelectExaminingSession","size","onSelectProvine","onSelectDistrict","onSelectWard","onChangeAddress","onChangeFullNameMother","onChangePhoneMother","onChangeFullNameFather","onChangePhoneFather","onChangeHeight","onChangeWeight","onChangeHeadCircumference","FormControlLabel","control","Checkbox","checked","onChangeVaccination","bool","DialogActions","ListPatientsRegister","activeChip","setActiveChip","chipOrder","chipLabel","listPantientChipState","setListPantientChipState","chipContent","listDataPatientsRegister","setListDataPatientsRegister","listDataPatientsAppointmentsToday","setListDataPatientsAppointmentsToday","searchPatientsQuery","setSearchPatientsQuery","listDataPatientsRegisterState","setListDataPatientsRegisterState","listDataPatientsRegisterSort","setListDataPatientsRegisterSort","searchPatients","patients","searchTerm","lowerCaseSearchTerm","patientObj","handleGetRegistersByDateNow","responseGetAppointmentsToday","getAppointmentsToday","_listDataPatientsAppointmentsToday","updatedList","patientFullName","dateOfBirth","fullAddress","nextExamId","listPantientRegisterWaiting","patientsRegisterItem","listCountState","listPantientRegisterDone","setComponent1Loading","keyCode","completeMedicalRegister","border","boxShadow","pantientChipStateItem","pantientChipStateIndex","Badge","badgeContent","Chip","handleSelectedChip","chipIndex","placeholder","handleSearchPantient","startAdornment","SearchIcon","TableContainer","Paper","overflowX","borderBottomLeftRadius","borderBottomRightRadius","Table","stickyHeader","minWidth","TableHead","TableRow","TableCell","align","TableBody","patientsRegisterSortItem","patientsRegisterSortIndex","hover","role","onDoubleClick","responseVaccinationByPatientId","dataPantientOldOldDiseaseRegister","oldDisease","medicalTypeId","userIdDoctor","setDataPantientAppointmentsToday","handleSelectedPantientAppointmentsToday","handleSelectedPantientInfo","order","whiteSpace","overflow","textOverflow","ExaminingSession","isConfirmOpen","setIsConfirmOpen","handleListMedicalExaminationsGiveRegister","getListMedicalExaminationsGiveOldRegister","handleMedicalRegister","isAppointment","oldExams","setIsContinueSelectedExaminingSession","setOpenModalExaminingSession","handleResetField","createMedicalRegister","handleOpenConfirm","openModalExaminingSession","isContinueSelectedExaminingSession","monthsOfAge","Grid","container","rowSpacing","xs","oldExamItem","oldExamIndex","RadioGroup","onChangeRadioSelect","examItem","examIndex","Radio","OldDisease","dataPatientsForSearchOldDiseaseDefault","phone","dataPatientsForSearchOldDiseaseErrorDefault","listFoundOldDisease","setListFoundOldDisease","dataPatientsForSearchOldDisease","setDataPatientsForSearchOldDisease","dataPatientsForSearchOldDiseaseError","setDataPatientsForSearchOldDiseaseError","selectedRowIndex","setSelectedRowIndex","formRef","tableRef","handleEnterPress","_dataPatientsForSearchOldDiseaseError","handleCloseModalOldDisease","setOpenModalOldDisease","handleFindOldDisease","getListOldDisease","reset","querySelectorAll","forEach","dispatchEvent","Event","bubbles","handleClickFindOldDisease","validate","handleApplyDataPatientOldDisease","foundOldDiseaseItem","setDataPatientsRegister","openModalOldDisease","ref","autoFocus","prevDataPatientsForSearchOldDisease","onChangePatientId","date","onChangeDayOfBirth","onChangePhone","tabIndex","prevIndex","Math","min","max","handleTableKeyDown","foundOldDiseaseIndex","selected","BookMedical","dataPatientsRegisterDefault","autocompleteValueDefault","medicalType","dataPatientsRegisterErrorDefault","listMedicalType","medicalTypeOrder","medicalTypeName","dataPatientsRegisterError","setDataPatientsRegisterError","autocompleteValue","setAutocompleteValue","firstFocusRef","replaceSpecialCharacters","str","replace","normalizedInput","prevAutocompleteValue","_dataPatientsRegisterError","dataPantientAppointmentsToday","handleMedicalBackRegister","responseCreateMedicalBackRegister","handleOpenModalOldDisease","getElementById","_autocompleteValue","indexListGender","indexListMedicalType","handleApplyPantientOldDiseaseData","handleApplyPantientAppointmentsTodayData","onF2Press","setOnF2Press","onF4Press","setOnF4Press","onF8Press","setOnF8Press","minHeight","PopperProps","disabled","WebkitTextFillColor","InputLabelProps","shrink","DateField","disablePortal","onSelectMedicalType","paddingLeft","paddingRight","multiline","rows","onChangeReason","MainMedicalRegister","component1Loading","setHandleResetField","handleOpenModalExaminingSession","setHandleOpenModalExaminingSession","setHandleOpenModalOldDisease","marginLeft","Skeleton","MainAppointmentExamining","listPantientAppointmentChipState","listAppointment","setListAppointment","listDataPatientsAppointmentPaginate","setListDataPatientsAppointmentPaginate","listDataPatientsAppointmentState","setListDataPatientsAppointmentState","listDataPatientsAppointmentSort","setListDataPatientsAppointmentSort","page","setPage","pageCount","setPageCount","setDataAppointment","handlePaginate","calculatedPageCount","ceil","startIndex","newCurrentItems","slice","handleAcceptReExamining","findDataAppointment","responseUpdateStateAppointment","responseGetAppointmentsNextWeek","_listAppointmentNotRemind","_listAppointmentAcceptReExamining","_listAppointmentRejectReExamining","updateListPantientAppointmentChipState","dataAppointmentNotRemind","dataAppointmentAcceptReExamining","dataAppointmentRejectReExamining","handleRejectReExamining","handleGetAppointmentsNextWeek","pantientAppointmentChipStateItem","pantientAppointmentChipStateIndex","dataPantientAppointmentItem","dataPantientAppointmentIndex","examNameOld","nextExamName","disablePast","minDate","onChangeAppointmentDate","convertAppointmentDateFindDataAppointment","CheckIcon","CancelIcon","Pagination","count","handlePageChange","CompleteExamining","mainDataExaminingForConclusion","setMainDataExaminingForConclusion","textareaRef","classes","makeStyles","root","useStyles","handleCloseModalCompleteExamining","setOpenModalCompleteExamining","handleSetDataCompleteExamining","editDataExaminingForConclusion","clone","dataExaminingForConclusion","categories","categoriesItem","categoryContents","categoryContentsItem","categoryContentQuestions","responseAppointmentDate","getAppointmentDate","isVaccination","nextVaccination","reminder","conclusion","setSelectionRange","handleAddMedicalBook","some","isPredecessor","categoryPres","categoriesHealthRecordExamining","isHealthRecord","responseAddMedicalBook","dataMedicalBook","createAddMedicalBook","handleCompleteExaminingForPantient","openModalCompleteExamining","List","categoriesIndex","categoryName","categoryContentsIndex","marginBottom","categoryContentTitle","questionItem","questionIndex","borderRight","categoryContentName","categoryContentQuestionType","CheckBoxIcon","lineHeight","categoryContentCheck","categoryContentText","borderTop","categoryContentQuestionName","categoryContentAnswer","TextareaAutosize","categoryContentNote","onChangeExaminingConclusion","prevMainDataExaminingForConclusion","locale","PreviewLastExamining","previewDataExamining","setPreviewDataExamining","healthRecords","examinationName","timeUpdateState","medicakBook","nutritionals","vaccinationBook","loadingMedicalBook","setLoadingMedicalBook","openCollapsePredecessorItem","setOpenCollapsePredecessorItem","openCollapseMedicakBookItem","setOpenCollapseMedicakBookItem","prevDataExamining","responseMedicalBook","healthRecordsItem","newPredecessor","healthRecordsUpdate","newMedicalBook","medicalBookIdRecently","sort","a","b","categoryOrder","handleEditPrevDataExamining","predecessorItem","predecessorIndex","ListItemButton","prevOpen","newOpen","handleOpenPredecessorItem","ListItemIcon","transform","SendIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","predecessorItemCategoryContentsItem","predecessorItemCategoryContentsIndex","medicakBookItems","medicakBookIndex","handleOpenMedicakBookItem","medicakBookCategoryContentsItem","medicakBookCategoryContentsIndex","doctorFullName","MainDoctorExamining","dataPantientsReadyExaminingDefault","stt","patientsId","patientsName","patientsDOB","patientsMonthsOld","patientsGender","patientsHeight","patientsWeight","patientsHeadCircumference","patientsPhone","patientsAddress","isFormDirty","setIsFormDirty","dataPantientsReadyExamining","setDataPantientsReadyExamining","mainDataExamining","setMainDataExamining","setPrevDataExamining","openCollapseHealthRecords","setOpenCollapseHealthRecords","openCollapseHealthRecordsItem","setOpenCollapseHealthRecordsItem","categorySelectedExamining","setCategorySelectedExamining","contentCategorySelectedExamining","setContentCategorySelectedExamining","healthRecordsContents","setHealthRecordsContents","currentHealthRecordExamining","setCurrentHealthRecordExamining","previewPredecessor","setPreviewPredecessor","setDataExaminingForConclusion","oldDataPredecessor","setOldDataPredecessor","newDataPredecessor","setNewDataPredecessor","prevDataPredecessor","setPrevDataPredecessor","loadingPrevDataExamining","setLoadingPrevDataExamining","loadingPatient","setLoadingPatient","loadingInfoPatient","setLoadingInfoPatient","loadingCategoryExamining","setLoadingCategoryExamining","loadingContentsExamining","setLoadingContentsExamining","handleCancelExamining","editExamining","backRegister","handleDeleteExamining","window","confirm","responseDeleteMedicalBook","delete","deleteMedicalBook","handleStartExaminingButtonClick","handleBeginExaminingForPantient","alert","handleBeginEditExaminingForPantient","handleCompleteExaminingButtonClick","Promise","resolve","findListPantientNotExam","handleAppyPantientData","handleGetMedicalDetailPatient","dataPantientItem","_dataPantientsReadyExamining","_listDataPatientsRegister","findIndexPatient","handleSetMainDataExamining","handleGetCategoryReExamining","editPrevDataExaminingCategoryPres","responseGetUpdatePredecessorItem","matchingPrevDataExamining","prevDataExaminingCategoryPresItem","isLock","content2","content1","categoryContentOrder","matchingContent1","isNullCategoryPres","responseGetUpdateMedicalBook","updateHealthRecordsCategoriesForConclusion","category","content","demoDataExaminingForConclusion","healthRecordsName","categoryPatients","updateCategoriesForConclusion","editCategoryContents","itemCategoryContents","newCategoriesDemoDataExaminingForConclusion","editDataCategoryPresForConclusion","mainCategoryContentsExamining","editDataHealthRecordsForConclusion","categoryPresItem","categoryPresIndex","categoryPresOrder","getUpdateMedicalBook","handleSetMainDataReExamining","responseGetUpdateMedicalBookData","questions","allNull","q","responseGetUpdatePredecessor","handleNoteValueQuestionPredecessorForReExamOrBackExam","_categorySelectedExamining","createSelectedQuestionsValuePredecessorForReExamOrBackExam","categoryContentQuestion","findNewDataPredecessorCategoryOrder","newDataPredecessorCategoryPresItem","findNewDataPredecessorCategoryContents","newDataPredecessorCategoryContentsItem","newDataPredecessorcategoryContentQuestionsItem","categoryContentQuestionOrder","questionIndexRemove","splice","newDataPredecessorCategoryContents","newDataPredecessorCategoryPres","newCategoryPre","createSelectedQuestionsPredecessorForReExamOrBackExam","isEditNote","questionIndexNoteDontExit","createPreviewDataPredecessor","handleSaveNewDataPredecessor","saveNewDataPredecessor","findNewDataPredecessor","responseCreateAddPredecessor","_mainDataExamining","selectCategoryReExamining","handleSelectCategoryClick","responseDataExamining","getMedicalDetailPatient","previewDataPredecessor","flatMap","question","healthRecordsContentsType","categoryIncludeCotent","findHealthRecord","healthRecordsState","editDataHealthRecordsItemForConclusion","_dataExaminingForConclusion","dataHealthRecordsItemForConclusionItem","handleAnswerValueQuestion","createSelectedQuestionsExaminingForConclusion","handleNoteCheckQuestionHealthRecords","categoryPatientsIndex","categoryPatientsContentsIndex","_healthRecordsContents","questionOrder","existingQuestion","categoryContentQuestionsItem","_previewPredecessor","findQuestion","sessionStorage","handleBeforeUnload","confirmationMessage","returnValue","unblock","block","_dataPatientsRegisterSort","handleUnload","reDataPatientsRegisterSort","dataPatientsRegisterSort","reDataPantientsReadyExamining","reMainDataExamining","reDataExaminingForConclusion","isContinueExam","reCurrentHealthRecordExamining","rePrevDataPredecessor","reOldDataPredecessor","handleReloadUIWhenExamining","dataPantientIndex","handleSelectPantientExamining","CheckCircleIcon","edge","findUpdatePredecessor","handleEditDataPredecessor","EditIcon","handleEditDataPredecessorForSaving","findOldDataPredecessorCategoryOrder","oldDataPredecessorItem","findNewDataPredecessorCategoryContentsItem","findOldDataPredecessorCategoryContentsItem","newQ","findNewDataPredecessorQuestionItem","contentCategoryContentsItem","removeOldDataPredecessorCategoryPres","BeenhereIcon","handleCancelEditDataPredecessor","findPrevDataPredecessorByCategoryName","prevDataPredecessorItem","removeCategoryPredecessor","handleSelectHealthRecords","healthRecordsIndex","handleSelectHealthRecordsItem","FiberManualRecordIcon","columnSpacing","sm","md","PinIcon","PersonIcon","MaleIcon","FemaleIcon","CalendarMonthIcon","InfoIcon","PhoneIcon","GiBodyHeight","GiWeightScale","TbRulerMeasure","Home","index","handleAnswerCheckQuestionPredecessorForReExamOrBackExam","answer","handleAnswerCheckQuestion","handleNoteCheckQuestionPredecessorForReExamOrBackExam","handleNoteCheckQuestion","DescriptionIcon","timeRegister","categoryPatientsItem","handleOpenHealthRecordsItem","categoryPatientsContentsItem","handleAnswerCheckQuestionHealthRecords","currentHealthRecordsContent","getReportPatient","dateSelectedReport","dateStart","dateEnd","MainDashboard","setDateSelectedReport","mainDataDashboard","setMainDataDashboard","loadingDataDashboard","setLoadingDataDashboard","editMainDataDashboard","dayExam","examName","handleGetReportPatient","_dateSelectedReport","onChangeDateStart","onChangeDateEnd","DataGrid","localeText","viVN","MuiDataGrid","row","columns","field","headerName","headerAlign","pageSizeOptions","handleExportExcel","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","startIcon","RiFileExcel2Fill","toolbar","formattedRows","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","disableRowSelectionOnClick","AppRoutes","HashRouter","Switch","App","Header","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.10f2f11b.chunk.js","sourcesContent":["import React from 'react'\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nfunction UserManual(props) {\r\n\r\n    return (\r\n        <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalUserManual} disableEscapeKeyDown={true}>\r\n            <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Hướng dẫn sử dụng</DialogTitle>\r\n            <IconButton onClick={() => props.setOpenModalUserManual(false)} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Điều dưỡng</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F2 hoặc nút Đăng ký trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Làm mới form thông tin đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F4 hoặc nút Làm mới trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Tìm bệnh cũ</Typography>\r\n                        <Typography>Nhấn phím F8 hoặc nút Bệnh cũ trên màn hình, sau khi nhập thông tin và tìm được bệnh nhân, click đúp thông tin bệnh nhân để form thông tin đăng ký khám nhận dữ liệu</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin bệnh nhân</Typography>\r\n                        <Typography>Trong bảng danh sách đăng ký khám trong ngày, nhấn vào bệnh nhân để mở form sửa thông tin</Typography>\r\n                    </Box>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Bác sĩ</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Khám bệnh</Typography>\r\n                        <Typography>Bước 1: Nhấn chọn bệnh nhân để khám</Typography>\r\n                        <Typography>Bước 2: Nhấn F2 để bắt đầu khám</Typography>\r\n                        <Typography>Bước 3: Nhấn F4 để kết thúc khám</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin hỏi bệnh khi đã kết thúc khám</Typography>\r\n\r\n                    </Box>\r\n                \r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Admin</Typography>\r\n                {/* <Typography variant='subtitle1' sx={{color: 'red'}}>Nếu có sự cố liên hệ zalo: 0987654321 (chỉ phục vụ giờ hành chính)</Typography> */}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default UserManual","export default __webpack_public_path__ + \"static/media/logo.e5a4a234.png\";","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessingBackdrop(props) {\r\n    return (\r\n        <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: props.changeBackground ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.6)' }} open={props.openAlertProcessingBackdrop}>\r\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <CircularProgress color='inherit' />\r\n                <Typography sx={{mt: 1.4,}} variant='subtitle1'>{props.alertTitle}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n\r\nexport default AlertProcessingBackdrop\r\n","import axios from \"axios\";\r\n//import SignalService from \"./SignalService.jsx\"\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\nconst userLogin = async (userId, password) => {\r\n  return await axios.post(`${backendURL}/api/UserAccount/Login`, { userId, password })\r\n  .then(function (response) {\r\n    //SignalService.startSignalRConnection(response.data.tokenDTO.token)\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n};\r\n\r\nconst getUserLogin = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetUserLogin`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst getGetListDoctor = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetDoctors`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nexport {\r\n    userLogin, \r\n    getUserLogin, getGetListDoctor\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst createMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/Register`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createMedicalBackRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/BackRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createCurrentDoctorExamining = async (userIdDoctor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/SetDoctorExaming/${userIdDoctor}`, \r\n        {}, // Body của request, có thể là {} hoặc object\r\n        {\r\n            headers: {\r\n                \"content-type\": \"text/plain; charset=utf-8\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddPredecessor = async (dataPredecessor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddPredecessor`, dataPredecessor,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddMedicalBook = async (dataMedicalBook) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddMedicalBook`, dataMedicalBook,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getRegistersByDateNow = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetRegistersByDateNow`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveRegister = async (dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveOldRegister = async (dayOfBirth, patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}&patientId=${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListOldDisease = async (patientId, phone, fullName, dayOfBirth, gender) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/SearchPatients?patientId=${patientId}&phone=${phone}&fullName=${fullName}&dayOfBirth=${dayOfBirth}&gender=${gender}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getVaccinationByPatientId = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetVaccinationByPatientId/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getCurrentDoctorExamining = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetDoctorExamining`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalDetailPatient = async (id) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/DetailPatient/${id}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalBook = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetMediacalBook?medicalRegisterId=${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdatePredecessor = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdatePredecessor/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdateMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdateMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentDate = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentDate/${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentsNextWeek = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsNextWeek`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getAppointmentsToday = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsToday`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst updateMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/EditRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateMedicalState = async (id, state) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateState?id=${id}&state=${state}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateStateAppointment = async (dataAppointment, stateAppointment) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateStateAppointment/${dataAppointment.medicalBookId}?appointmentDate=${dataAppointment.appointmentDate}&stateAppointment=${stateAppointment}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst deleteMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.delete(`${backendURL}/api/Medical/DeleteMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    createMedicalRegister, createMedicalBackRegister, createCurrentDoctorExamining, createAddPredecessor, createAddMedicalBook,\r\n    getRegistersByDateNow, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister, getListOldDisease, getVaccinationByPatientId, getCurrentDoctorExamining, getMedicalDetailPatient, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook, getAppointmentDate, getAppointmentsNextWeek, getAppointmentsToday,\r\n    updateMedicalRegister, updateMedicalState, updateStateAppointment,\r\n    deleteMedicalBook\r\n}","import React, { useState, useEffect } from 'react';\r\n//modal\r\nimport AlertProcessingBackdrop from '../components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//api\r\nimport { getUserLogin } from '../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../Service/MedicalService';\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n\r\n    const userDefault = {\r\n        isAuthenticated: false,\r\n        isLogin: false,\r\n        token: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(userDefault);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [isLogOutClick, setIsLogOutClick] = useState(false);\r\n    const [onConfirm, setOnConfirm] = useState(null);\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const loginContext = (userContextLogin) => {\r\n        setUser({ ...userContextLogin });\r\n        setLoading(false);\r\n    };\r\n\r\n    const triggerAlert = (confirmCallback) => {\r\n        setAlertVisible(true);\r\n        setIsLogOutClick(true);\r\n        setOnConfirm(() => confirmCallback);\r\n    };\r\n\r\n    const confirmAlert = () => {\r\n        if (onConfirm) onConfirm();\r\n        setIsLogOutClick(false);\r\n        resetAlert();\r\n    };\r\n\r\n    const resetAlert = () => {\r\n        setAlertVisible(false);\r\n        setIsLogOutClick(false);\r\n        setOnConfirm(null);\r\n    };\r\n\r\n    const logoutContext = () => {\r\n        setUser({ ...userDefault });\r\n    }\r\n\r\n    const loadingContext = (loading) => {\r\n        setLoading(...loading);\r\n    }\r\n\r\n    const fetchUser = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        const response = await getUserLogin();\r\n        setUser({\r\n                isAuthenticated: true, \r\n                isLogin: true,\r\n                userId: response.userId,\r\n                userFullName: response.userFullName,\r\n                positionName: response.positionName\r\n            }) \r\n        setLoading(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const parseJwt = (token) => {\r\n        try {\r\n          return JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n    };\r\n\r\n    const checkJWTExpire = () => {\r\n        let result = false;\r\n        let getJWT = localStorage.getItem('jwt');\r\n        if(getJWT){\r\n            let decodeJWT = parseJwt(getJWT);\r\n            let currentDate  = new Date();\r\n            if(decodeJWT.exp * 1000 < currentDate.getTime()) {\r\n                //console.log('Token đã hết hạn hoặc không tồn tại')\r\n                localStorage.removeItem('jwt'); //xóa localStorage\r\n                localStorage.removeItem('userLogin');\r\n                return result \r\n            }\r\n            else{\r\n                //console.log('token còn hạn');\r\n                result = true;\r\n                return result\r\n            }\r\n        }\r\n        else{\r\n            localStorage.removeItem('userLogin');\r\n            return result\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n        if(getUserLogin){\r\n            const result = checkJWTExpire();\r\n            if(result){\r\n                const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n                setUser(getUserLogin);\r\n            }else{\r\n                //không có token\r\n                setUser(userDefault);\r\n            }\r\n        }else{\r\n            localStorage.removeItem('jwt'); //xóa localStorage\r\n            setUser(userDefault);\r\n        }\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <UserContext.Provider \r\n                value={{ user, loading, loadingContext, loginContext, \r\n                    logoutContext, alertVisible, triggerAlert, confirmAlert, resetAlert, isLogOutClick\r\n                }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop}\r\n                alertTitle={'Đang tải thông tin người dùng'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\nimport UserManual from '../ManageUserManual/UserManual';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nfunction Header(props) {\r\n\r\n  const { user, logoutContext, triggerAlert } = useContext(UserContext);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [openModalUserManual, setOpenModalUserManual] = useState(false);\r\n\r\n  //mui state menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  \r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const actionNursing = [\r\n    { key: 'medicalRegister', maxWidth: '114px', label: 'Đăng ký khám', icon: <LocalHospitalIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/medicalregister\" },\r\n    { key: 'remind-examining', maxWidth: '95px', label: 'Nhắc khám', icon: <LocalPhoneIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/remind-examining\" },\r\n  ]\r\n\r\n  const actionDoctor = [\r\n    { key: 'examining', maxWidth: '100px', label: 'Khám bệnh', icon: <MedicationLiquidIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/doctor-examining\" },\r\n  ]\r\n\r\n  const actionAdmin = [\r\n    { key: 'statistical', maxWidth: '83px', label: 'Thống kê', icon: <BarChartIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/dashboard\" },\r\n  ]\r\n\r\n  const [userAction, setUserAction] = useState([]);\r\n\r\n  const handleChangeURL = (pathname) => {\r\n    const actionIndex = userAction.findIndex(action => action.to === pathname);\r\n    return actionIndex;\r\n  }\r\n\r\n  const value = handleChangeURL(props.location.pathname);\r\n\r\n  const handleLogout = () => {\r\n    if(user.positionName === 'Doctor'){\r\n      triggerAlert(() => {\r\n        localStorage.removeItem('jwt');\r\n        localStorage.removeItem('userLogin');\r\n        logoutContext();\r\n        setAnchorEl(null);\r\n        history.push('/login');\r\n      });\r\n    }\r\n    \r\n    else{\r\n      localStorage.removeItem('jwt'); //xóa localStorage\r\n      localStorage.removeItem('userLogin');\r\n      logoutContext();\r\n      setAnchorEl(null);\r\n      history.push('/login');\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(user.positionName === 'Nursing'){        \r\n      setUserAction(actionNursing);\r\n    }\r\n    else if(user.positionName === 'Doctor'){\r\n      setUserAction(actionDoctor);\r\n    }\r\n    else if(user.positionName === 'Admin'){\r\n      setUserAction(actionAdmin);\r\n    }\r\n  }, [user])\r\n  \r\n  if(location.pathname !== '/login'){\r\n    return (\r\n      <>\r\n        <Box sx={{ width: '100%'}} >\r\n          <AppBar sx={{position: 'unset'}}>\r\n            <Toolbar sx={{backgroundColor: '#cfe8fc', height: '78px'}}>\r\n              <Link to=\"/\">\r\n                <Avatar src={Logo} sx={{ width: 62, height: 62, mt: 'auto', mb: 'auto', mr: 4 }} />\r\n              </Link>\r\n                {user.isAuthenticated === true || token ? \r\n                  <>\r\n                    <BottomNavigation showLabels value={value}\r\n                      sx={{display: 'flex', justifyContent: 'flex-start', backgroundColor: '#cfe8fc', flexGrow: 1}}>\r\n                      {userAction.map(actionItem => (\r\n                        <BottomNavigationAction\r\n                          key={actionItem.key}\r\n                          label={actionItem.label}\r\n                          icon={actionItem.icon}\r\n                          LinkComponent={actionItem.LinkComponent}\r\n                          to={actionItem.to}\r\n                          sx={{color: '#000', maxWidth: actionItem.maxWidth}}\r\n                        />\r\n                      ))}  \r\n                    </BottomNavigation>\r\n\r\n                    <Button onClick={handleClick} sx={{color: '#000', textTransform: 'none'}}>{user.userFullName}</Button>\r\n                    <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\r\n                      <MenuItem>Đổi mật khẩu</MenuItem>\r\n                      <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                    </Menu>\r\n                    <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                  </>\r\n                  :\r\n                    <>\r\n                      <Box sx={{position: 'absolute', right: 22}}>\r\n                        <NavLink exact to=\"/login\"><Button sx={{textTransform: 'none', color: '#000'}}>Đăng nhập</Button></NavLink>\r\n                        <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                      </Box>\r\n                    </>\r\n                  }            \r\n                </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n  \r\n        <UserManual openModalUserManual={openModalUserManual} setOpenModalUserManual={setOpenModalUserManual}/>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst PrivateRoutes = (props) => {\n  const token = localStorage.getItem('jwt');\n  const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\n\n  if (token && getUserLogin) {\n    return (\n      <>\n        <Route path={props.path} component={props.component}></Route>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <Redirect to='/login'></Redirect>\n      </>\n    )\n  }\n};\nexport default PrivateRoutes;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../ErrorPage/Page500.scss\";\n\nconst Page404 = () => {\n\n  let history = useHistory();\n\n  return (\n    <div>\n      <div className=\"section\">\n        <h1 className=\"error\">404</h1>\n        <div className=\"page\">Trang mà bạn đang truy cập không tồn tại.</div>\n      </div>\n    </div>\n  );\n};\nexport default Page404;\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CreateAccount = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleCloseModalRegister = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalRegister(false);\r\n      }\r\n    }\r\n\r\n    const position = [\r\n      {id: '1', positionName: 'Điều dưỡng'},\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n          <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalRegister} onClose={(event, reason) => handleCloseModalRegister(event, reason)} disableEscapeKeyDown={true}  >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n            <IconButton onClick={() => handleCloseModalRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n              <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} />\r\n              <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }}/>\r\n              <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '46ch', mb: 2.5 }} \r\n                InputProps={{ // <-- This is where the toggle button is added.\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <Autocomplete options={position.map((option) => option.positionName)} renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} sx={{ width: '45.95ch', mb: 2.5 }}/>\r\n              <Stack spacing={2} direction=\"column\">\r\n                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleCloseModalRegister()}>Tạo tài khoản</Button>\r\n              </Stack>\r\n            \r\n            </DialogContent>\r\n          </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAccount","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Register from '../ManageRegister/Register';\r\nimport { toast } from 'react-toastify';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//api\r\nimport { userLogin } from '../../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nconst Login = () => {\r\n    const { user, loadingContext, loginContext } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [userAccount, setUserAccount] = useState({userId: '', password: ''})\r\n    const [openModalRegister, setOpenModalRegister] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const onChangeUserName = (e, value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                userId: value\r\n            }\r\n        }) \r\n    }\r\n\r\n    const onChangeUserPassword = (e, value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                password: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if(userAccount.userName === ''){\r\n            toast.error('Bạn chưa nhập tài khoản!')\r\n        }\r\n        else if(userAccount.password === ''){\r\n            toast.error('Bạn chưa nhập mật khẩu!');\r\n        }\r\n        else{\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const response = await userLogin(userAccount.userId, userAccount.password);\r\n            setOpenAlertProcessingBackdrop(false);\r\n            if(response.status !== 200){\r\n                toast.error(response.data);\r\n            }\r\n            else{\r\n                localStorage.setItem('jwt', response.data.tokenDTO.token)\r\n                const userLogin = {\r\n                    isAuthenticated: true, \r\n                    isLogin: true, \r\n                    userId: response.data.userId, \r\n                    userFullName: response.data.userFullName, \r\n                    positionName: response.data.positionName\r\n                }\r\n\r\n                localStorage.setItem('userLogin', JSON.stringify(userLogin))\r\n                loginContext(userLogin);\r\n                   \r\n                if(response.data.positionName === 'Nursing'){\r\n                    history.push('/medicalregister');\r\n                }\r\n                else if(response.data.positionName === 'Doctor'){\r\n                    history.push('/doctor-examining');\r\n                }\r\n                else if(response.data.positionName === 'Admin'){\r\n                    history.push('/dashboard');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleLogin();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAuthenticated === true) {\r\n            history.push('/');\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        const userLogin = localStorage.getItem('userLogin');\r\n        if (token && userLogin) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(openAlertProcessingBackdrop){\r\n                event.preventDefault();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [openAlertProcessingBackdrop])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box sx={{ mt: 3, borderRadius: '25px' }} >\r\n                    <Box sx={{ p: 7.6 }}>\r\n                        <Avatar src={Logo} sx={{ width: 120, height: 120, ml: 'auto', mr: 'auto', mb: 2 }} />\r\n                        <Typography sx={{ textAlign: 'center', textTransform: 'uppercase', fontWeight: 'bolder', fontSize: '1.15rem', mb: 2, color: '#4caf50' }} variant=\"h5\">Chương trình khám nhi khoa phát triển</Typography>\r\n                        <Box component=\"form\" autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                            <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e, e.target.value)}/>\r\n                            <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 3 }} \r\n                            onChange={(e) => onChangeUserPassword(e, e.target.value)} onKeyDown={(e) => handlePressEnter(e)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6.5vh', width: '28ch' }} variant=\"contained\" style={{ margin: 'auto' }} onClick={(e) => handleLogin()}>Đăng nhập</Button>\r\n                                <Typography sx={{textAlign: 'center'}} variant=\"subtitle1\">Chưa có tài khoản? <strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Đăng ký</strong></Typography>\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Register\r\n                openModalRegister={openModalRegister} setOpenModalRegister={setOpenModalRegister}\r\n            />\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang đăng nhập'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessing(props) {\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={props.openAlertProcessing} disableEscapeKeyDown={true}>\r\n                <DialogContent>\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <CircularProgress/>\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang xử lý...</Typography>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertProcessing","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getListProvince = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/ListProvince`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListDistrict = async (provinceId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListDistrictByIdProvince/${provinceId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListWard = async (districtId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListWardByIdDistrict/${districtId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getFullAddressByIdWard = async (codeWard) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetFullAddressByIdWard/${codeWard}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getListProvince, getListDistrict, getListWard, getFullAddressByIdWard\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport { Autocomplete } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//lodash\r\nimport _ from 'lodash';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { updateMedicalRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalService';\r\n\r\nfunction ManageInfoPantients(props) {\r\n  const dataPatientInfoDefault = {\r\n    examinationId: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    headCircumference: \"\",\r\n    reason: \"\",\r\n    vaccination: false,\r\n    id: \"\",\r\n    patient: {\r\n      identifier: \"\",\r\n      address: \"\",\r\n      fullName: \"\",\r\n      dayOfBirth: null,\r\n      codeWard: \"\",\r\n      gender: true,\r\n      fullNameMother: \"\",\r\n      phoneMother: \"\",\r\n      fullNameFather: \"\",\r\n      phoneFather: \"\",\r\n      patientId: \"\"\r\n    }\r\n  }\r\n\r\n  const dataPatientInfoErrorDefault = {\r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    examiningSession: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n  } \r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const selectedAutoCompleteDefault = { \r\n    gender: { value: null, openOption: false }, \r\n    examiningSession: {value: null, openOption: false, loading: false},\r\n    province: { value: null, openOption: false }, \r\n    district: { value: null, openOption: false }, \r\n    ward: { value: null, openOption: false },\r\n  }\r\n\r\n  const typingRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  const [dataPatientInfoNotEdit, setDataPatientInfoNotEdit] = useState();\r\n  const [dataPatientInfo, setDataPatientInfo] = useState(dataPatientInfoDefault);\r\n  const [dataPatientInfoError, setDataPatientInfoError] = useState(dataPatientInfoErrorDefault);\r\n    \r\n  const [selectedAutoComplete, setSelectedAutoComplete] = useState(selectedAutoCompleteDefault);\r\n\r\n  const [listExaminingSession, setListExaminingSession] = useState([]);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f',\r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -8],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.gender.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'ExaminingSession'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.examiningSession.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else{\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      //const _dataPatientInfoError = {...dataPatientInfoError};\r\n      // if(fieldName === 'patientId'){\r\n      //   _dataPatientInfoError.patientId.title = '';\r\n      //   _dataPatientInfoError.patientId.openTooltip = false;\r\n      //   setDataPatientInfoError(_dataPatientInfoError);\r\n      // }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.dayOfBirth.title = '';\r\n      //     _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientInfoError.dayOfBirth.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneMother.title = '';\r\n      //     _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneMother.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneFather'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneFather.title = '';\r\n      //     _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneFather.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'Gender'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.gender.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'ExaminingSession'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n      //     prevSelectedAutoComplete.examiningSession.openOption = false\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Province'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.province.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'District'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.district.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Ward'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.ward.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.gender.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'ExaminingSession'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n          prevSelectedAutoComplete.examiningSession.openOption = false\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.district.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.ward.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n  \r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n  \r\n      return (lowercasedFullName.includes(lowercasedInput) || initials.includes(lowercasedInput));\r\n    });\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientInfoError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientInfoError.identifier.openTooltip = true;\r\n          _dataPatientInfoError.identifier.isError = true;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n        else{\r\n          setDataPatientInfo(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientInfoError.identifier.title = '';\r\n          _dataPatientInfoError.identifier.openTooltip = false;\r\n          _dataPatientInfoError.identifier.isError = false;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.identifier.title = '';\r\n      _dataPatientInfoError.identifier.openTooltip = false;\r\n      _dataPatientInfoError.identifier.isError = false;\r\n      _dataPatientInfoError.identifier.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n    \r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.fullName = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n    \r\n      if(dataPatientInfoError.fullName.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullName.title = '';\r\n        _dataPatientInfoError.fullName.openTooltip = false;\r\n        _dataPatientInfoError.fullName.isError = false;\r\n        _dataPatientInfoError.fullName.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = async (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n    \r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n            \r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n    \r\n        if(today < takenValue || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientInfoError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n          _dataPatientInfoError.dayOfBirth.isError = true;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n    \r\n        else{\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.dayOfBirth = formattedDate\r\n            return {...prevDataPatientInfo}\r\n          })\r\n    \r\n          _dataPatientInfoError.dayOfBirth.title = '';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n          _dataPatientInfoError.dayOfBirth.isError = false;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n\r\n          onChangeDOBToGetExaminingSession(formattedDate);\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onChangeDOBToGetExaminingSession = async (formattedDate) => {\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.value = null\r\n      return {...prevSelectedAutoComplete}\r\n    })\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = true\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(formattedDate);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = false\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.patient.gender = value.genderValue\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n    \r\n    if(dataPatientInfoError.gender.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.gender.isError = false;\r\n      _dataPatientInfoError.gender.title = '';\r\n      _dataPatientInfoError.gender.openTooltip = false;\r\n      _dataPatientInfoError.gender.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectExaminingSession = (e, value) => {\r\n    if(focusField === 'examiningSession'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.examinationId = value.id\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.examiningSession.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(dataPatientInfoError.examiningSession.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.examiningSession.isError = false;\r\n      _dataPatientInfoError.examiningSession.title = '';\r\n      _dataPatientInfoError.examiningSession.openTooltip = false;\r\n      _dataPatientInfoError.examiningSession.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.province.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(selectedAutoComplete.district.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.province.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.province.isError = false;\r\n      _dataPatientInfoError.province.title = '';\r\n      _dataPatientInfoError.province.openTooltip = false;\r\n      _dataPatientInfoError.province.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.district.value = value;\r\n      return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.district.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.district.isError = false;\r\n      _dataPatientInfoError.district.title = '';\r\n      _dataPatientInfoError.district.openTooltip = false;\r\n      _dataPatientInfoError.district.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n\r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.codeWard = value.code\r\n      return { ...prevDataPatientInfo }\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.ward.value = value;\r\n        return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(dataPatientInfoError.ward.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.ward.isError = false;\r\n      _dataPatientInfoError.ward.title = '';\r\n      _dataPatientInfoError.ward.openTooltip = false;\r\n      _dataPatientInfoError.ward.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    if(focusField === 'address'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.address = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.address.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.address.isError = false;\r\n        _dataPatientInfoError.address.title = '';\r\n        _dataPatientInfoError.address.openTooltip = false;\r\n        _dataPatientInfoError.address.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    if(focusField === 'fullNameMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameMother = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(focusField === 'phoneMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneMother.openTooltip = true;\r\n          _dataPatientInfoError.phoneMother.isError = true;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n          \r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneMother = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n      \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n      \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 10)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneMother.title = '';\r\n      _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      _dataPatientInfoError.phoneMother.isError = false;\r\n      _dataPatientInfoError.phoneMother.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameFather = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneFather.openTooltip = true;\r\n          _dataPatientInfoError.phoneFather.isError = true;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n\r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneFather = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n                \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n                \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneFather.title = '';\r\n      _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      _dataPatientInfoError.phoneFather.isError = false;\r\n      _dataPatientInfoError.phoneFather.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    if(focusField === 'height'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.height = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.height.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.height.title = '';\r\n        _dataPatientInfoError.height.openTooltip = false;\r\n        _dataPatientInfoError.height.isError = false;\r\n        _dataPatientInfoError.height.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    if(focusField === 'weight'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.weight = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.weight.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.weight.title = '';\r\n        _dataPatientInfoError.weight.openTooltip = false;\r\n        _dataPatientInfoError.weight.isError = false;\r\n        _dataPatientInfoError.weight.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    if(focusField === 'headCircumference'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.headCircumference = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.headCircumference.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.headCircumference.title = '';\r\n        _dataPatientInfoError.headCircumference.openTooltip = false;\r\n        _dataPatientInfoError.headCircumference.isError = false;\r\n        _dataPatientInfoError.headCircumference.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.vaccination = bool\r\n      return {...prevDataPatientInfo}\r\n    })\r\n  }\r\n\r\n  const handleCloseModalInfoPantients = (event, reason) => {\r\n    if(reason && reason === \"backdropClick\"){\r\n      return;\r\n    }\r\n    else{\r\n      setListDistrict(prevListDistrict => {\r\n        prevListDistrict.loading = false\r\n        prevListDistrict.list = []\r\n        return {...prevListDistrict}\r\n      })\r\n      setListWard(prevListWard => {\r\n        prevListWard.loading = false\r\n        prevListWard.list = []\r\n        return {...prevListWard}\r\n      })\r\n      setListExaminingSession([]);\r\n      setSelectedAutoComplete(selectedAutoCompleteDefault);\r\n      setDataPatientInfo(dataPatientInfoDefault);\r\n      setDataPatientInfoNotEdit('');\r\n      setDataPatientInfoError(dataPatientInfoErrorDefault);\r\n      setLoading(true);\r\n      props.setSelectedPantientInfo();\r\n      props.setOpenModalInfoPantients(false);\r\n    }\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const responseListProvince = await getListProvince();\r\n    setListProvince(responseListProvince);\r\n  }\r\n\r\n  const handleApplyPantientDataToField = async () => {\r\n    setOpenAlertProcessing(true);   \r\n      \r\n    const editPropsDataPatientInfo = {...dataPatientInfo};\r\n    editPropsDataPatientInfo.examinationId = props.selectedPantientInfo.examinationId\r\n    editPropsDataPatientInfo.height = props.selectedPantientInfo.height\r\n    editPropsDataPatientInfo.weight = props.selectedPantientInfo.weight\r\n    editPropsDataPatientInfo.headCircumference = props.selectedPantientInfo.headCircumference\r\n    editPropsDataPatientInfo.reason = props.selectedPantientInfo.reason\r\n    editPropsDataPatientInfo.vaccination = props.selectedPantientInfo.vaccination\r\n    editPropsDataPatientInfo.id = props.selectedPantientInfo.id\r\n    editPropsDataPatientInfo.patient.identifier = props.selectedPantientInfo.patient.identifier\r\n    editPropsDataPatientInfo.patient.address = props.selectedPantientInfo.patient.address\r\n    editPropsDataPatientInfo.patient.fullName = props.selectedPantientInfo.patient.fullName\r\n    editPropsDataPatientInfo.patient.dayOfBirth = props.selectedPantientInfo.patient.dayOfBirth\r\n    editPropsDataPatientInfo.patient.codeWard = props.selectedPantientInfo.patient.codeWard\r\n    editPropsDataPatientInfo.patient.gender = props.selectedPantientInfo.patient.gender\r\n    editPropsDataPatientInfo.patient.fullNameMother = props.selectedPantientInfo.patient.fullNameMother\r\n    editPropsDataPatientInfo.patient.phoneMother = props.selectedPantientInfo.patient.phoneMother\r\n    editPropsDataPatientInfo.patient.fullNameFather = props.selectedPantientInfo.patient.fullNameFather\r\n    editPropsDataPatientInfo.patient.phoneFather = props.selectedPantientInfo.patient.phoneFather\r\n    editPropsDataPatientInfo.patient.patientId = props.selectedPantientInfo.patient.patientId\r\n\r\n    setDataPatientInfo(_.cloneDeep(editPropsDataPatientInfo));\r\n    setDataPatientInfoNotEdit(_.cloneDeep(editPropsDataPatientInfo));\r\n        \r\n    const response = await getFullAddressByIdWard(props.selectedPantientInfo.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.list = responseListDistrict;\r\n      return {...prevListDistrict}\r\n    });\r\n    const responseListWard = await getListWard(response.districtCode);\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = responseListWard;\r\n      return {...prevListWard}\r\n    });\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(props.selectedPantientInfo.patient.dayOfBirth);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n     \r\n    const selectedGender = listGender.find(gender => gender.genderValue === props.selectedPantientInfo.patient.gender);\r\n    const indexListExamining = responseListMedicalExaminationsGiveRegister.exams.findIndex(examiningSession => examiningSession.id === props.selectedPantientInfo.examinationId)\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = selectedGender\r\n      prevSelectedAutoComplete.examiningSession.value = responseListMedicalExaminationsGiveRegister.exams[indexListExamining];\r\n      prevSelectedAutoComplete.province.value = listProvince[indexListProvince];\r\n      prevSelectedAutoComplete.district.value = responseListDistrict[indexListDistrict];\r\n      prevSelectedAutoComplete.ward.value = responseListWard[indexListWard];\r\n      return prevSelectedAutoComplete\r\n    })\r\n\r\n    setLoading(false);\r\n    setOpenAlertProcessing(false);   \r\n  }\r\n\r\n  const checkValidate = () => {\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      let isValid = true;\r\n\r\n      if(dataPatientInfoError.identifier.title !== ''){\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.identifier.focus = true;\r\n          setFocusField('identifier');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullName === ''){\r\n        _dataPatientInfoError.fullName.title = 'Bạn chưa nhập họ tên';\r\n        _dataPatientInfoError.fullName.openTooltip = true;\r\n        _dataPatientInfoError.fullName.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullName.focus = true;\r\n          setFocusField('fullName');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(dataPatientInfo.patient.gender === ''){\r\n        _dataPatientInfoError.gender.title = 'Bạn chưa chọn giới tính';\r\n        _dataPatientInfoError.gender.isError = true;\r\n        _dataPatientInfoError.gender.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.gender.focus = true;\r\n          setFocusField('gender');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.dayOfBirth === ''){\r\n        _dataPatientInfoError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfoError.dayOfBirth.title !== ''){\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.examiningSession.value === null){\r\n        _dataPatientInfoError.examiningSession.title = 'Bạn chưa chọn lại kỳ khám';\r\n        _dataPatientInfoError.examiningSession.isError = true;\r\n        _dataPatientInfoError.examiningSession.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.examiningSession.focus = true;\r\n          setFocusField('examiningSession');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.province.value === null){\r\n        _dataPatientInfoError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n        _dataPatientInfoError.province.isError = true;\r\n        _dataPatientInfoError.province.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.province.focus = true;\r\n          setFocusField('province');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.district.value === null){\r\n        _dataPatientInfoError.district.title = 'Bạn chưa chọn quận huyện';\r\n        _dataPatientInfoError.district.isError = true;\r\n        _dataPatientInfoError.district.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.district.focus = true;\r\n          setFocusField('district');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.ward.value === null){\r\n        _dataPatientInfoError.ward.title = 'Bạn chưa chọn phường xã';\r\n        _dataPatientInfoError.ward.isError = true;\r\n        _dataPatientInfoError.ward.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.ward.focus = true;\r\n          setFocusField('ward');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.address === ''){\r\n        _dataPatientInfoError.address.title = 'Bạn chưa nhập địa chỉ';\r\n        _dataPatientInfoError.address.isError = true;\r\n        _dataPatientInfoError.address.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.address.focus = true;\r\n          setFocusField('address');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullNameMother === '' && dataPatientInfo.patient.fullNameFather === ''){\r\n        _dataPatientInfoError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n        _dataPatientInfoError.fullNameMother.isError = true;\r\n        _dataPatientInfoError.fullNameMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullNameMother.focus = true;\r\n          setFocusField('fullNameMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.phoneMother === '' && dataPatientInfo.patient.phoneFather === ''){\r\n        _dataPatientInfoError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        _dataPatientInfoError.phoneMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneMother.title !== ''){\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneFather.title !== ''){\r\n        _dataPatientInfoError.phoneFather.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneFather.focus = true;\r\n          setFocusField('phoneFather');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.height === ''){\r\n        _dataPatientInfoError.height.title = 'Bạn chưa nhập chiều cao';\r\n        _dataPatientInfoError.height.isError = true;\r\n        _dataPatientInfoError.height.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.height.focus = true;\r\n          setFocusField('height');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.weight === ''){\r\n        _dataPatientInfoError.weight.title = 'Bạn chưa nhập cân nặng';\r\n        _dataPatientInfoError.weight.isError = true;\r\n        _dataPatientInfoError.weight.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.weight.focus = true;\r\n          setFocusField('weight');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.headCircumference === ''){\r\n        _dataPatientInfoError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n        _dataPatientInfoError.headCircumference.isError = true;\r\n        _dataPatientInfoError.headCircumference.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.headCircumference.focus = true;\r\n          setFocusField('headCircumference');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      // if(dataPatientInfo.reason === ''){\r\n      //   _dataPatientInfoError.reason.isError = true;\r\n      //   isValid = false;\r\n      // }\r\n\r\n      if(_.isEqual(dataPatientInfo, dataPatientInfoNotEdit) === true){\r\n        toast.warning('Hiện không có gì để cập nhật', {toastId: 'warning1'});\r\n        isValid = false;\r\n      }\r\n\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n      return isValid;\r\n  }\r\n\r\n  const handleUpdateMedicalRegister = async () => {\r\n    if(checkValidate()){\r\n      setOpenAlertProcessing(true);\r\n      const response = await updateMedicalRegister(dataPatientInfo);\r\n      if(response.status === 200){\r\n        toast.success(response.data, {toastId: 'success1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      else{\r\n        toast.error(response.data, {toastId: 'error1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      setOpenAlertProcessing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(listProvince.length === 0){\r\n      handleGetListProvince();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.selectedPantientInfo){\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n      handleApplyPantientDataToField();\r\n    }\r\n  }, [props.selectedPantientInfo])\r\n\r\n  useEffect(() => {\r\n    if(props.openModalInfoPantients && props.isContinueUpdateMedicalRegister && loading === false){\r\n      handleUpdateMedicalRegister();\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n    }\r\n  }, [props.isContinueUpdateMedicalRegister, loading])\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth={true} maxWidth='md' open={props.openModalInfoPantients} onClose={(event, reason) => handleCloseModalInfoPantients(event, reason)} >\r\n        <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center', color: 'blue' }}>Thông tin bệnh nhân</DialogTitle>\r\n        <IconButton onClick={() => handleCloseModalInfoPantients()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n          <CloseIcon fontSize='medium'/>\r\n        </IconButton>\r\n        <DialogContent dividers sx={{pt: 1.5, pb: 1.5}}>\r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', pl: 4.2, pr: 4.2, mb: 0.8}}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.identifier.title}</h6>} open={dataPatientInfoError.identifier.openTooltip} placement='left'> \r\n              <TextField error={true ? dataPatientInfoError.identifier.isError === true : false}\r\n                label=\"Mã định danh\" variant=\"outlined\" \r\n                sx={{width: '18%', '&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                inputProps={{ maxLength: 12 }}\r\n                inputRef={(input) => input && focusField === 'identifier' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.identifier}\r\n                onChange={(e) => onChangeIdentifier(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n                      \r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullName.title}</h6>} open={dataPatientInfoError.fullName.openTooltip} placement='top'\r\n              slotProps={{\r\n                popper: {\r\n                  modifiers: [\r\n                    {\r\n                      name: 'offset',\r\n                      options: { offset: [-10, -6], },\r\n                    },\r\n                  ],\r\n                },\r\n              }} \r\n            > \r\n              <TextField error={true ? dataPatientInfoError.fullName.isError === true : false}\r\n                label=\"Họ tên\" variant=\"outlined\" \r\n                sx={{width: '32%', '&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.fullName}\r\n                onChange={(e) => onChangeFullName(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.gender.title}</h6>} open={dataPatientInfoError.gender.openTooltip} placement='top'>\r\n              <Autocomplete \r\n                sx={{width: '12%', marginTop: '7.5px'}}\r\n                options={listGender} \r\n                getOptionLabel={(option) => option.genderName}\r\n                value={selectedAutoComplete.gender.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.genderName}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectGender(e, value)}\r\n                open={selectedAutoComplete.gender.openOption}\r\n                onFocus={() => handleFocus('Gender')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Giới tính\" \r\n                    inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                    error={true ? dataPatientInfoError.gender.isError === true : false}                     \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <DemoContainer components={['DatePicker']}>  \r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.dayOfBirth.title}</h6>} open={dataPatientInfoError.dayOfBirth.openTooltip}>    \r\n                  <Box sx={{width: 110}}>\r\n                    <DatePicker label=\"Ngày sinh\" \r\n                      format='DD/MM/YYYY' defaultValue={moment(dataPatientInfo.patient.dayOfBirth)}\r\n                      disableFuture={true} disableOpenPicker \r\n                      slotProps={{ \r\n                        textField: \r\n                          { \r\n                            inputRef: dateFieldRef,\r\n                            error: true ? dataPatientInfoError.dayOfBirth.isError === true : false,\r\n                            onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                          }\r\n                        }}\r\n                      onChange={(value) => onChangeDOB(value)}\r\n                    />\r\n                  </Box>\r\n                </Tooltip>\r\n              </DemoContainer>\r\n            </ThemeProvider>\r\n          </LocalizationProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.examiningSession.title}</h6>} open={dataPatientInfoError.examiningSession.openTooltip} placement='right'>\r\n              <Autocomplete \r\n                sx={{width: '18%', mt: '7.5px'}}\r\n                options={listExaminingSession} \r\n                noOptionsText={selectedAutoComplete.examiningSession.loading ? 'Đang tải...' : ''}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.examiningSession.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectExaminingSession(e, value)}\r\n                open={selectedAutoComplete.examiningSession.openOption}\r\n                onFocus={() => handleFocus('ExaminingSession')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'ExaminingSession')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Kỳ khám\" \r\n                    inputRef={(input) => input && focusField === 'examiningSession' && input.focus()}\r\n                    error={true ? dataPatientInfoError.examiningSession.isError === true : false} \r\n                    sx={{'& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot': {pl: '6px', pr: '6px'}}}\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      endAdornment: (\r\n                        <>\r\n                          {selectedAutoComplete.examiningSession.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </>\r\n                      ),\r\n                    }} \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.province.title}</h6>} open={dataPatientInfoError.province.openTooltip} placement='left'>\r\n              <Autocomplete \r\n                sx={{width: '20%', mt: 2}}\r\n                options={listProvince} \r\n                filterOptions={filterOptions}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.province.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectProvine(e, value)}\r\n                open={selectedAutoComplete.province.openOption}\r\n                onFocus={() => handleFocus('Province')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Thành phố\"\r\n                    inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                    error={true ? dataPatientInfoError.province.isError === true : false}  \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.district.title}</h6>} open={dataPatientInfoError.district.openTooltip} placement='top'>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listDistrict.list} \r\n                  noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.district.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectDistrict(e, value)}\r\n                  open={selectedAutoComplete.district.openOption}\r\n                  onFocus={() => handleFocus('District')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Quận/huyện\" \r\n                      inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                      error={true ? dataPatientInfoError.district.isError === true : false} \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.ward.title}</h6>} open={dataPatientInfoError.ward.openTooltip}>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listWard.list}\r\n                  noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.ward.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectWard(e, value)}\r\n                  open={selectedAutoComplete.ward.openOption}\r\n                  onFocus={() => handleFocus('Ward')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Phường/Xã\" \r\n                      inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                      error={true ? dataPatientInfoError.ward.isError === true : false}  \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.address.title}</h6>} open={dataPatientInfoError.address.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.address.isError === true : false}\r\n                  label=\"Địa chỉ\" variant=\"outlined\" \r\n                  sx={{width: '36%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.address}\r\n                  onChange={(e) => onChangeAddress(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullNameMother.title}</h6>} open={dataPatientInfoError.fullNameMother.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.fullNameMother.isError === true : false}\r\n                  label=\"Họ tên mẹ\" variant=\"outlined\" \r\n                  sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.fullNameMother}\r\n                  onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                />    \r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneMother.title}</h6>} open={dataPatientInfoError.phoneMother.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.phoneMother.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneMother}\r\n                  onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <TextField \r\n              label=\"Họ tên cha\" variant=\"outlined\" sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n              defaultValue={dataPatientInfo.patient.fullNameFather}\r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n            />\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneFather.title}</h6>} open={dataPatientInfoError.phoneFather.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.phoneFather.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneFather}\r\n                  onChange={(e) => onChangePhoneFather(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.height.title}</h6>} open={dataPatientInfoError.height.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.height.isError === true : false}\r\n                  label='Chiều cao' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.height}\r\n                  onChange={(e) => onChangeHeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.weight.title}</h6>} open={dataPatientInfoError.weight.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.weight.isError === true : false}\r\n                  label='Cân nặng' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(kg)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.weight}\r\n                  onChange={(e) => onChangeWeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.headCircumference.title}</h6>} open={dataPatientInfoError.headCircumference.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.headCircumference.isError === true : false}\r\n                  label='Vòng đầu' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.headCircumference}\r\n                  onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <FormControlLabel sx={{width: '30%', mt: 2}} control={<Checkbox checked={dataPatientInfo.vaccination}/>} \r\n              label=\"Có tham gia tiêm ngừa\"\r\n              onChange={(e) => onChangeVaccination(e.target.checked)}\r\n            />  \r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{justifyContent: 'center'}}>\r\n          <Button variant=\"contained\" onClick={() => handleUpdateMedicalRegister()}>Sửa (F1)</Button>\r\n          <Button variant=\"contained\" color='secondary' onClick={(event, reason) => handleCloseModalInfoPantients(event, reason)}>Đóng (ESC)</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <AlertProcessing openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageInfoPantients","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//info pantients modal\r\nimport ManageInfoPantients from '../ManageInfoPantients/ManageInfoPantients';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//mui theme\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getRegistersByDateNow, getAppointmentsToday, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction ListPatientsRegister(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n  const [listPantientChipState, setListPantientChipState] = useState(\r\n    [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n    ]\r\n  )\r\n\r\n  const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n  \r\n  const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n  const [listDataPatientsAppointmentsToday, setListDataPatientsAppointmentsToday] = useState([]); \r\n  \r\n  const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n  const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n  const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n  const [selectedPantientInfo, setSelectedPantientInfo] = useState();\r\n  const [openModalInfoPantients, setOpenModalInfoPantients] = useState(false);\r\n  const [isContinueUpdateMedicalRegister, setIsContinueUpdateMedicalRegister] = useState();\r\n\r\n  const renderPatientsStatus = (state) => {\r\n    if(state === 0 || state === 3){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterWaiting' />\r\n        </>\r\n      )\r\n    }\r\n    else if(state === 1){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterExamining' />\r\n        </>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterDone' />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSelectedChip = (chipIndex, chipLabel) => {\r\n    setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n    if(chipIndex === 0){\r\n      const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n      setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n    }\r\n    else if(chipIndex === 1){\r\n      const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n      setListDataPatientsRegisterState(listPantientRegisterDone);\r\n    }\r\n    else if(chipIndex === 2){\r\n      setListDataPatientsRegisterSort(listDataPatientsAppointmentsToday);\r\n      setListDataPatientsRegisterState(listDataPatientsAppointmentsToday);\r\n    }\r\n  };\r\n\r\n  const handleSearchPantient = (value) => {\r\n    const takenValue = value;\r\n    setSearchPatientsQuery(takenValue);\r\n\r\n    if(value === ''){\r\n      setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n    }else{\r\n      setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n    }\r\n  }\r\n\r\n  const searchPatients = (patients, searchTerm) => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return patients.filter(patientObj => {\r\n      const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n      return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n    });\r\n  }\r\n\r\n  const handleSelectedPantientInfo = (patientsRegisterSortItem) => {\r\n    setSelectedPantientInfo(patientsRegisterSortItem);\r\n    setIsContinueUpdateMedicalRegister(true);\r\n    setOpenModalInfoPantients(true);\r\n  }\r\n\r\n  const handleSelectedPantientAppointmentsToday = async (patientsRegisterSortItem) => {\r\n    setOpenAlertProcessingBackdrop(true);\r\n    const responseVaccinationByPatientId = await getVaccinationByPatientId(patientsRegisterSortItem.patient.patientId);\r\n    const dataPantientOldOldDiseaseRegister = {\r\n      examinationId: patientsRegisterSortItem.patient.nextExamId,\r\n      oldDisease: true,\r\n      height: '',\r\n      weight: '',\r\n      headCircumference: '',\r\n      reason: '',\r\n      vaccination: responseVaccinationByPatientId.vaccination,\r\n      medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n      userIdDoctor: '',\r\n      patient: patientsRegisterSortItem.patient\r\n    }\r\n    props.setDataPantientAppointmentsToday(dataPantientOldOldDiseaseRegister)\r\n    setOpenAlertProcessingBackdrop(false);\r\n  }\r\n\r\n  const handleGetRegistersByDateNow = async () => {\r\n    setLoading(true);\r\n\r\n    const response = await getRegistersByDateNow();\r\n    const responseGetAppointmentsToday = await getAppointmentsToday();\r\n\r\n    let updatedList = [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: responseGetAppointmentsToday.length }\r\n    ]\r\n\r\n    let _listDataPatientsAppointmentsToday\r\n    if(responseGetAppointmentsToday.length > 0){\r\n      _listDataPatientsAppointmentsToday = responseGetAppointmentsToday.map((item) => {\r\n        const result = {\r\n          patient : {\r\n            identifier: item.identifier,\r\n            patientId: item.patientId,\r\n            fullName: item.patientFullName,\r\n            gender: item.gender,\r\n            dayOfBirth: item.dateOfBirth,\r\n            fullNameMother: item.fullNameMother,\r\n            phoneMother: item.phoneMother,\r\n            fullNameFather: item.fullNameFather,\r\n            phoneFather: item.phoneFather,\r\n            address: item.address,\r\n            fullAddress: item.fullAddress,\r\n            codeWard: item.codeWard,\r\n            nextExamId: item.nextExamId\r\n          }\r\n        }\r\n        return result;\r\n      })\r\n      setListDataPatientsAppointmentsToday(_listDataPatientsAppointmentsToday);\r\n    }\r\n    else{\r\n      setListDataPatientsAppointmentsToday(responseGetAppointmentsToday)\r\n    }\r\n\r\n    if(response !== 400){\r\n      if(response.list.length !== 0){\r\n        setListDataPatientsRegister(response.list);\r\n        if(activeChip.chipOrder === 0){\r\n          const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám và tái khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n          setListDataPatientsRegisterState(listPantientRegisterDone);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 2){\r\n          setListDataPatientsRegisterSort(_listDataPatientsAppointmentsToday);\r\n          setListDataPatientsRegisterState(_listDataPatientsAppointmentsToday);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n      }\r\n    }\r\n    setListPantientChipState(updatedList);\r\n    props.setComponent1Loading(false);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetRegistersByDateNow();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(openModalInfoPantients){\r\n      const handleKeyDown = (event) => {\r\n        if(event.keyCode === 112){\r\n          event.preventDefault()\r\n          setIsContinueUpdateMedicalRegister(true);\r\n          //nhấn F1 để sửa thông tin đăng ký khám\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [openModalInfoPantients, isContinueUpdateMedicalRegister]);\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true){\r\n      handleGetRegistersByDateNow();\r\n      props.setCompleteMedicalRegister(false);\r\n    }\r\n  }, [props.completeMedicalRegister])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{p: 0}}>\r\n        {/* <Typography variant='h6' sx={{color: 'red', mb: 0, fontWeight: 'bolder', fontSize: '1.16rem', marginBottom: '5px'}}>\r\n          {loading ? \r\n            <Skeleton /> \r\n          : \r\n            <div style={{display: 'flex', height: '30px'}}>\r\n              {props.currentDoctorExamining.userIdDoctor !== '' ?\r\n              <>\r\n                <Typography variant='subbtitle1'>{`Bác sĩ khám hôm nay: ${props.currentDoctorExamining.userFullName}`}</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Sửa'/>\r\n              </>\r\n              :\r\n              <>\r\n                <Typography variant='subbtitle1'>Chưa chọn bác sĩ khám hôm nay</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Thêm'/>\r\n              </>}\r\n            </div>\r\n          }\r\n        </Typography> */}\r\n\r\n        <div className='container' style={{border: '1px solid #fff', borderRadius: '10px', height: '590px', padding: 0, boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)'}}>\r\n          {loading ? \r\n             <>\r\n              <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                <CircularProgress/>\r\n                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n              </Box>        \r\n            </>\r\n          :\r\n            <>\r\n              <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                  <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                    <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                      onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                  </Badge>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n            \r\n              <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                <TextField sx={{mt: 0.2, mb: 1, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                  variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc SĐT' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    startAdornment: (\r\n                      <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                    ),\r\n                    endAdornment: (\r\n                      <InputAdornment position='end'>\r\n                        {searchPatientsQuery !== '' ? \r\n                          <CloseIcon sx={{cursor: 'pointer'}} \r\n                            titleAccess='Xóa'\r\n                            onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                          /> \r\n                        : \r\n                          null\r\n                        }\r\n                        </InputAdornment>  \r\n                      )\r\n                    }}>\r\n                  </TextField>\r\n              </Box>\r\n\r\n              <TableContainer component={Paper} sx={{ height: '465px', overflowX: 'scroll', borderBottomLeftRadius: '10px', borderBottomRightRadius: '10px' }}>\r\n                <Table stickyHeader sx={{ minWidth: 1200 }}>\r\n                  <TableHead>\r\n                    <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                      {activeChip.chipOrder === 2 ? \r\n                        null\r\n                      :\r\n                        <>\r\n                          <TableCell align=\"left\" sx={{fontSize: '0.95rem', p: '10px'}}>Trạng thái</TableCell>\r\n                          <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                        </>\r\n                      }\r\n                      <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {listDataPatientsRegisterSort.length !== 0 ?\r\n                      <>\r\n                        {listDataPatientsRegisterSort.map((patientsRegisterSortItem, patientsRegisterSortIndex) => (\r\n                          <TableRow hover role=\"checkbox\" key={patientsRegisterSortIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => activeChip.chipOrder === 2 ? handleSelectedPantientAppointmentsToday(patientsRegisterSortItem) : handleSelectedPantientInfo(patientsRegisterSortItem)}>\r\n                            {activeChip.chipOrder === 2 ? \r\n                              null\r\n                            :\r\n                              <>\r\n                                <TableCell align='center' sx={{width: '90px'}}>\r\n                                  <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.state === 0 || patientsRegisterSortItem.state === 3 ? 'Chờ khám' : patientsRegisterSortItem.state === 2 ? 'Đã khám' : 'Đang khám'}</Typography>} >\r\n                                    <span>{renderPatientsStatus(patientsRegisterSortItem.state)}</span>\r\n                                  </Tooltip>\r\n                                </TableCell>\r\n                                <TableCell align='left' sx={{width: '20px'}}>{patientsRegisterSortItem.order}</TableCell>\r\n                              </>\r\n                            }\r\n                            <TableCell align='left' sx={{width: '150px'}}>{patientsRegisterSortItem.patient.patientId}</TableCell>\r\n                            <TableCell align='left' sx={{width: '200px'}}>{patientsRegisterSortItem.patient.fullName}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{patientsRegisterSortItem.patient.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{moment(patientsRegisterSortItem.patient.dayOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                            <TableCell align='left' sx={{width: '140px'}}>{patientsRegisterSortItem.patient.phoneMother !== '' ? patientsRegisterSortItem.patient.phoneMother : patientsRegisterSortItem.patient.phoneFather}</TableCell>\r\n                            <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 120}}>\r\n                              <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.patient.fullAddress}</Typography>} >\r\n                                <span>{patientsRegisterSortItem.patient.fullAddress}</span>\r\n                              </Tooltip>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))} \r\n                      </>\r\n                    :\r\n                      null\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </>\r\n          }\r\n        </div>\r\n      </Box>\r\n      \r\n      <AlertProcessingBackdrop openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n      />\r\n\r\n      <ManageInfoPantients \r\n        openModalInfoPantients={openModalInfoPantients} setOpenModalInfoPantients={setOpenModalInfoPantients}\r\n        selectedPantientInfo={selectedPantientInfo} setSelectedPantientInfo={setSelectedPantientInfo}\r\n        isContinueUpdateMedicalRegister={isContinueUpdateMedicalRegister} setIsContinueUpdateMedicalRegister={setIsContinueUpdateMedicalRegister}\r\n        setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListPatientsRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//modal\r\n// import AlertConfirmModal from '../ManageAlertConfirm/AlertConfirm';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//api\r\nimport { createMedicalRegister, createMedicalBackRegister, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister } from '../../Service/MedicalService';\r\n\r\nfunction ExaminingSession(props) {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [listExaminingSession, setListExaminingSession] = useState(null);\r\n\r\n    const onChangeRadioSelect = (value) => {\r\n        props.dataPatientsRegister.examinationId = value;\r\n    }\r\n\r\n    const handleListMedicalExaminationsGiveRegister = async () =>  {\r\n        if(props.dataPatientsRegister.oldDisease){\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveOldRegister(props.dataPatientsRegister.patient.dayOfBirth, props.dataPatientsRegister.patient.patientId);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n        else{\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveRegister(props.dataPatientsRegister.patient.dayOfBirth);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    const handleMedicalRegister = async () => {\r\n        // //bệnh cũ\r\n        if(props.dataPatientsRegister.oldDisease === true && props.dataPatientsRegister.examinationId !== ''){\r\n            //là bênh mới đã đăng ký nhưng chưa từng khám bao giờ\r\n            if(listExaminingSession.isAppointment === false && listExaminingSession.oldExams.length === 0){\r\n                setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            //có hẹn khám nhưng không nhắc khám hoặc đến trễ ngày hẹn khám\r\n            else{\r\n                setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n        }\r\n        //bệnh mới\r\n        else{\r\n            //setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalRegister(props.dataPatientsRegister);\r\n            setOpenAlertProcessing(false);\r\n\r\n            if(response.status === 200){\r\n                toast.success(response.data);\r\n                setListExaminingSession(null);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCloseConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n      };\r\n\r\n    const handleOpenConfirm = () => {\r\n        if(props.dataPatientsRegister.examinationId === ''){\r\n            // setIsConfirmOpen(false);\r\n            toast.error('Bạn chưa chọn kỳ khám', {toastId: 'error1'});\r\n        }\r\n        else{\r\n            //setIsConfirmOpen(true);\r\n            handleMedicalRegister();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.dataPatientsRegister.patient.dayOfBirth !== '' && props.openModalExaminingSession === true){\r\n            handleListMedicalExaminationsGiveRegister();\r\n        }\r\n    }, [props.openModalExaminingSession])\r\n\r\n    useEffect(() => {\r\n        if(props.isContinueSelectedExaminingSession === true){\r\n            //nhấn F2 để hoàn tất đăng ký khám\r\n            handleOpenConfirm();\r\n            props.setIsContinueSelectedExaminingSession(false);\r\n        }\r\n    }, [props.isContinueSelectedExaminingSession])\r\n\r\n    return (\r\n        <>\r\n            {listExaminingSession ? \r\n                <>\r\n                    <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalExaminingSession} disableEscapeKeyDown={true}>\r\n                        <DialogTitle \r\n                            sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'green', textTransform: 'uppercase' }}>\r\n                            {`${props.dataPatientsRegister.patient.fullName}, \r\n                            ${props.dataPatientsRegister.patient.gender === true ? 'Nam' : 'Nữ'}, \r\n                            ${listExaminingSession.monthsOfAge}`}\r\n                        </DialogTitle>\r\n\r\n                        <IconButton onClick={() => [props.setOpenModalExaminingSession(false), props.dataPatientsRegister.examinationId = '', setListExaminingSession(null)]} \r\n                            sx={{position: 'absolute', right: 5, top: 7}}>\r\n                                <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n\r\n                        <DialogContent dividers sx={{pl: '0px', pr: '0px'}}>\r\n                            <Grid container rowSpacing={0}>\r\n                                <Grid item xs={0.5}/>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid black', p: 1, height: '50vh', overflow: 'auto'}}>\r\n                                        <Typography variant='h6' sx={{fontWeight: 'bolder'}}>Lịch sử khám</Typography>\r\n                                        {listExaminingSession.oldExams ?\r\n                                            listExaminingSession.oldExams.map((oldExamItem, oldExamIndex) => (\r\n                                                <Typography key={oldExamIndex} variant='subtitle1'>{oldExamItem.name}</Typography>\r\n                                            ))\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </Box>  \r\n                                </Grid>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid red', p: 1, height: '50vh'}}>\r\n                                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', color: 'red'}}>Chọn kỳ khám</Typography>\r\n                                            <RadioGroup key={`${props.dataPatientsRegister.patient.patientId}`} defaultValue={listExaminingSession.exams[0].id} onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                {listExaminingSession.exams.map((examItem, examIndex) => (\r\n                                                    <FormControlLabel key={`${examIndex}`} value={examItem.id} control={<Radio />} label={examItem.name} />\r\n                                                ))}\r\n                                            </RadioGroup>\r\n                                            <Button variant='contained' sx={{mt: 0.5}} onClick={() => handleOpenConfirm()}>Tiếp tục (F2)</Button> \r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </>\r\n            :\r\n                null\r\n            }\r\n\r\n            {/* <AlertConfirmModal \r\n                openAlertConfirmModal={isConfirmOpen} onCloseAlertConfirmModal={handleCloseConfirm} \r\n                onConfirmAlertConfirmModal={handleMedicalRegister} \r\n                titleConfirm=\"Đăng ký khám cho bệnh nhân?\"\r\n            /> */}\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExaminingSession","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListOldDisease, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDisease(props) {\r\n\r\n    const dataPatientsForSearchOldDiseaseDefault = {patientId: '', phone: '', fullName: '', dayOfBirth: ''}\r\n    const dataPatientsForSearchOldDiseaseErrorDefault = {\r\n        patientId: { title: '', isError: false, openTooltip: false, focus: false},\r\n        phone: { title: '', isError: false, openTooltip: false, focus: false },\r\n        fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n        dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n    \r\n    const [listFoundOldDisease, setListFoundOldDisease] = useState(null);\r\n    const [dataPatientsForSearchOldDisease, setDataPatientsForSearchOldDisease] = useState(dataPatientsForSearchOldDiseaseDefault);\r\n    const [dataPatientsForSearchOldDiseaseError, setDataPatientsForSearchOldDiseaseError] = useState(dataPatientsForSearchOldDiseaseErrorDefault);\r\n    const [focusField, setFocusField] = useState(null);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n\r\n    const dateFieldRef = useRef(null);\r\n    const formRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n    const tooltipTheme = createTheme({\r\n        components: {\r\n          MuiTooltip: {\r\n            defaultProps: {\r\n              placement: 'bottom',\r\n              arrow: true,\r\n              componentsProps: {\r\n                tooltip: {\r\n                  sx: {\r\n                    bgcolor: '#d32f2f',\r\n                  },\r\n                },\r\n                arrow: {\r\n                  sx: {\r\n                    color: '#d32f2f',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n    });\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key !== 'Enter') \r\n        {\r\n            event.preventDefault();\r\n        }\r\n        else if(event.key === 'Enter'){\r\n            handleEnterPress(event);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (value, fieldName) => {\r\n        if(value === '' || value === 'DD/MM/YYYY'){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(fieldName === 'patientId'){\r\n                if(typingRef.current){\r\n                    clearInterval(typingRef.current);\r\n                }\r\n                \r\n                typingRef.current = setTimeout(() => {  \r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }, 10)\r\n                \r\n                if(focusField === 'patientId'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'dayOfBirth'){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'dayOfBirth'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'phone'){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const onChangePatientId = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 8){\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = 'Mã bệnh nhân phải từ 8 đến 12 số';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'patientId'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.patientId = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n    }\r\n\r\n    const onChangeFullName = (value) => {\r\n        if(focusField === 'fullName'){\r\n            setFocusField(null);\r\n        }\r\n\r\n        setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n            prevDataPatientsForSearchOldDisease.fullName = value;\r\n            return {...prevDataPatientsForSearchOldDisease}\r\n        })\r\n\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);      \r\n    }\r\n\r\n    const onChangeDayOfBirth = (value) => {\r\n        if(value){            \r\n            const date = value._d;\r\n            const today = new Date();\r\n            const yearsDifference = today.getFullYear() - date.getFullYear();\r\n            const monthsDifference = today.getMonth() - date.getMonth();\r\n            const daysDifference = today.getDate() - date.getDate();\r\n            const age = today.getFullYear() - date.getFullYear();\r\n\r\n            let totalMonths = yearsDifference * 12 + monthsDifference;\r\n            let totalDays = daysDifference;\r\n\r\n            if (daysDifference < 0) {\r\n                totalMonths -= 1;\r\n                totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n            }\r\n\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n\r\n            if(today < date || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = true;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n              }\r\n              else{\r\n                const formattedDate = moment(date).format('YYYY-MM-DD');\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.dayOfBirth = formattedDate;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangePhone = (value) => {\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 10){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.phone = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        }\r\n    }\r\n\r\n    const handleCloseModalOldDisease = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n          else{\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            setListFoundOldDisease(null);\r\n            setSelectedRowIndex(0);\r\n            props.setOpenModalOldDisease(false);\r\n        }\r\n    }\r\n\r\n    const handleResetField = () => {\r\n        formRef.current.reset();\r\n        const inputs = formRef.current.querySelectorAll('input, textarea');\r\n        inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n        setFocusField(null);\r\n    }\r\n\r\n    const validate = () => {\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        let isValid = true;\r\n\r\n        if(dataPatientsForSearchOldDisease.patientId === '' && dataPatientsForSearchOldDisease.fullName === '' && \r\n            dataPatientsForSearchOldDisease.dayOfBirth === '' && dataPatientsForSearchOldDisease.phone === '')\r\n        {\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.fullName.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.patientId.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.focus = true;\r\n                setFocusField('patientId');\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.dayOfBirth.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                if (dateFieldRef.current) {\r\n                    dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n                }\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.phone.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.phone.focus = true;\r\n                setFocusField('phone');\r\n            }\r\n            isValid = false;\r\n        }\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        return isValid;\r\n    }\r\n\r\n    const handleFindOldDisease = async () => {\r\n        setOpenAlertProcessing(true);\r\n        const response = await getListOldDisease(dataPatientsForSearchOldDisease.patientId, dataPatientsForSearchOldDisease.phone, dataPatientsForSearchOldDisease.fullName, dataPatientsForSearchOldDisease.dayOfBirth, '');\r\n        setOpenAlertProcessing(false);\r\n        setListFoundOldDisease(response);\r\n        setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n        setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n        handleResetField();\r\n        if(response.length > 0){\r\n            tableRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleClickFindOldDisease = () => {\r\n        if(validate()){\r\n            setTimeout(()=> {\r\n                handleFindOldDisease()\r\n            }, 200)\r\n        }\r\n    }\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleClickFindOldDisease();\r\n        }\r\n    }\r\n\r\n    const handleTableKeyDown = (event) => {\r\n        if (event.key === 'ArrowDown') {\r\n            setSelectedRowIndex((prevIndex) => (Math.min(prevIndex + 1, listFoundOldDisease.length - 1)));\r\n        } else if (event.key === 'ArrowUp') {\r\n            setSelectedRowIndex((prevIndex) => (Math.max(prevIndex - 1, 0)));\r\n        } else if (event.key === 'Enter' && selectedRowIndex !== null){\r\n            handleApplyDataPatientOldDisease(listFoundOldDisease[selectedRowIndex])\r\n        }\r\n    };\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientId: foundOldDiseaseItem.patientId,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseModalOldDisease();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalOldDisease} onClose={(event, reason) => handleCloseModalOldDisease(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Tìm bệnh cũ</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalOldDisease()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{p: '10px 24px'}}>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around'}} component=\"form\" ref={formRef}>\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.patientId.title}</h6>} open={dataPatientsForSearchOldDiseaseError.patientId.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.patientId.isError === true : false}\r\n                                    label=\"Mã BN\" variant=\"outlined\" size='small'\r\n                                    autoFocus\r\n                                    inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                                    inputProps={{ maxLength: 12 }}\r\n                                    onChange={(e) => onChangePatientId(e.target.value)}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'patientId')}\r\n                                    onKeyDown={handleKeyDown} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.fullName.title}</h6>} open={dataPatientsForSearchOldDiseaseError.fullName.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.fullName.isError === true : false}\r\n                                    label=\"Họ tên\" variant=\"outlined\" size='small'\r\n                                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                                    onKeyDown={(e) => handleEnterPress(e)} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                            <ThemeProvider theme={tooltipTheme}>\r\n                                <DemoContainer components={['DatePicker']}>\r\n                                    <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.dayOfBirth.title}</h6>} open={dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip}>    \r\n                                        <Box sx={{width: 222}}>\r\n                                            <DatePicker label=\"Ngày sinh\" format='DD/MM/YYYY' \r\n                                                disableFuture={true} disableOpenPicker \r\n                                                renderInput={(params) => <TextField {...params} size='small' />}\r\n                                                slotProps={{  \r\n                                                    textField: \r\n                                                    { \r\n                                                        inputRef: dateFieldRef,\r\n                                                        error: true ? dataPatientsForSearchOldDiseaseError.dayOfBirth.isError === true : false, \r\n                                                        size: 'small', \r\n                                                        onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                                        onKeyDown: (e) => handleEnterPress(e)\r\n                                                    }, \r\n                                                }}\r\n                                                onChange={(value) => onChangeDayOfBirth(value)}\r\n                                            />\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                </DemoContainer>\r\n                            </ThemeProvider>      \r\n                        </LocalizationProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.phone.title}</h6>} open={dataPatientsForSearchOldDiseaseError.phone.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                                    inputRef={(input) => input && focusField === 'phone' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.phone.isError === true : false}\r\n                                    label=\"Điện thoại cha/mẹ\" variant=\"outlined\" size='small'\r\n                                    inputProps={{ maxLength: 10 }}\r\n                                    onChange={(e) => onChangePhone(e.target.value)}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'phone')}\r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 1.6}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleClickFindOldDisease()}>Tìm (Enter)</Button>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        {\r\n                            listFoundOldDisease ? \r\n                                listFoundOldDisease.length !== 0 ? \r\n                                <>\r\n                                    <TableContainer component={Paper} sx={{boxShadow: 4, mt: 1.4}} tabIndex={0} onKeyDown={(event) => handleTableKeyDown(event)} ref={tableRef}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listFoundOldDisease ? \r\n                                                    listFoundOldDisease.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                        <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} \r\n                                                            selected={selectedRowIndex === foundOldDiseaseIndex} \r\n                                                            onDoubleClick={() => handleApplyDataPatientOldDisease(foundOldDiseaseItem)}\r\n                                                        >\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.patientId}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                            <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'green'}}>Tìm thấy {listFoundOldDisease.length} bệnh nhân</Typography>\r\n                                </>\r\n                                : \r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'red'}}>Không tìm thấy bệnh nhân</Typography>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Box>  \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDisease","import React, { useState, useEffect, useRef } from 'react';\r\n//ExaminingSessios modal\r\nimport ExaminingSession from '../ManageExaminingSession/ExaminingSession';\r\n//old disease modal\r\nimport OldDisease from '../ManageOldDisease/OldDisease';\r\n// import OldDiseaseForRegister from '../ManageOldDisease/OldDiseaseForRegister';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateField } from '@mui/x-date-pickers/DateField';\r\n//lodash\r\nimport _ from 'lodash';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { createMedicalBackRegister } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction BookMedical(props) {\r\n\r\n  const dataPatientsRegisterDefault = {\r\n    examinationId: '',\r\n    oldDisease: false,\r\n    height: '',\r\n    weight: '',\r\n    headCircumference: '',\r\n    reason: '',\r\n    vaccination: false,\r\n    medicalTypeId: '',\r\n    userIdDoctor: '',\r\n    patient: {\r\n      patientId: '',\r\n      identifier: '',\r\n      address: '',\r\n      fullName: '',\r\n      dayOfBirth: '',\r\n      codeWard: '',\r\n      gender: '',\r\n      fullNameMother: '',\r\n      phoneMother: '',\r\n      fullNameFather: '',\r\n      phoneFather: ''\r\n    }\r\n  }\r\n\r\n  const autocompleteValueDefault = { \r\n    dayOfBirth: null, \r\n    gender: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    province: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    district: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    ward: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    medicalType: {\r\n      value: null,\r\n      openOption: false\r\n    },\r\n    vaccination: false \r\n  }\r\n\r\n  const dataPatientsRegisterErrorDefault = { \r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    patientId: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n    medicalType: { title: '', isError: false, openTooltip: false, focus: false },\r\n    reason: { title: '', isError: false, openTooltip: false, focus: false }\r\n  }\r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const listMedicalType = [\r\n    {medicalTypeOrder: 1, medicalTypeName: 'Khám Nhi khoa phát triển', medicalTypeId: 1},\r\n    {medicalTypeOrder: 2, medicalTypeName: 'Khám trẻ nguy cơ cao', medicalTypeId: 2},\r\n  ]\r\n\r\n  const [openModalExaminingSession, setOpenModalExaminingSession] = useState(false);\r\n  const [isContinueSelectedExaminingSession, setIsContinueSelectedExaminingSession] = useState(false);\r\n\r\n  const [openModalOldDisease, setOpenModalOldDisease] = useState(false);\r\n\r\n  // const [openOldDiseaseRegister, setOpenOldDiseaseRegister] = useState(false);\r\n  // const [listOldDiseaseRegister, setListOldDiseaseRegister] = useState([]);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const [dataPatientsRegister, setDataPatientsRegister] = useState(dataPatientsRegisterDefault);\r\n  const [dataPatientsRegisterError, setDataPatientsRegisterError] = useState(dataPatientsRegisterErrorDefault);\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [autocompleteValue, setAutocompleteValue] = useState(autocompleteValueDefault);\r\n\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const formRef = useRef(null);\r\n  const firstFocusRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n  const typingRef = useRef(null);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f', \r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -7],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n        event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n\r\n    // Xử lý đặc biệt cho \"d\" và \"đ\"\r\n    const replaceSpecialCharacters = str => str.replace(/đ/g, 'd');\r\n\r\n    return options.filter(option => {\r\n        const lowercasedFullName = replaceSpecialCharacters(option.fullName.toLowerCase());\r\n        const initials = replaceSpecialCharacters(option.fullName.split(' ').map(word => word[0]).join('').toLowerCase());\r\n\r\n        const normalizedInput = replaceSpecialCharacters(lowercasedInput);\r\n\r\n        return (\r\n            lowercasedFullName.includes(normalizedInput) ||\r\n            initials.includes(normalizedInput)\r\n        );\r\n    });\r\n  };\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.gender.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.province.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Ward'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'MedicalType'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.medicalType.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n      if(fieldName === 'Identifier'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n        _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.dayOfBirth.title = '';\r\n      //     _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n      //   _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PatientId'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.patientId.title = '';\r\n      //     _dataPatientsRegisterError.patientId.openTooltip = false;\r\n      //     _dataPatientsRegisterError.patientId.isError = false;\r\n      //     _dataPatientsRegisterError.patientId.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.phoneMother.title = '';\r\n      //     _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      //     _dataPatientsRegisterError.phoneMother.isError = false;\r\n      //     _dataPatientsRegisterError.phoneFather.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      if(fieldName === 'PhoneFather'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      else if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientsRegisterError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientsRegisterError.identifier.openTooltip = true;\r\n          _dataPatientsRegisterError.identifier.isError = true;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.identifier.title = '';\r\n      _dataPatientsRegisterError.identifier.openTooltip = false;\r\n      _dataPatientsRegisterError.identifier.isError = false;\r\n      _dataPatientsRegisterError.identifier.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangePatientId = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 8){\r\n          _dataPatientsRegisterError.patientId.title = 'Mã BN phải từ 8 đến 12 số';\r\n          _dataPatientsRegisterError.patientId.openTooltip = true;\r\n          _dataPatientsRegisterError.patientId.isError = true;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          if(focusField === 'patientId'){\r\n            setFocusField(null);\r\n          }\r\n          \r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.patientId = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.patientId.title = '';\r\n          _dataPatientsRegisterError.patientId.openTooltip = false;\r\n          _dataPatientsRegisterError.patientId.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    // else{\r\n    //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n    //   _dataPatientsRegisterError.patientId.title = '';\r\n    //   _dataPatientsRegisterError.patientId.openTooltip = false;\r\n    //   _dataPatientsRegisterError.patientId.isError = false;\r\n    //   _dataPatientsRegisterError.patientId.focus = false;\r\n    //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    // }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullName = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      if(dataPatientsRegisterError.fullName.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullName.title = '';\r\n        _dataPatientsRegisterError.fullName.openTooltip = false;\r\n        _dataPatientsRegisterError.fullName.isError = false;\r\n        _dataPatientsRegisterError.fullName.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n\r\n      // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n      //   handleFindOldDisease();\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n\r\n        if(today < takenValue || age > 2 || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientsRegisterError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n        }\r\n\r\n        else{\r\n          if(focusField === 'dayOfBirth'){\r\n            setFocusField(null);\r\n          }\r\n\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n          prevDataPatientsRegister.patient.dayOfBirth = formattedDate\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.dayOfBirth.title = '';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n          //   handleFindOldDisease();\r\n          // }\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.gender = value.genderValue\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.gender.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.gender.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.gender.title = '';\r\n      _dataPatientsRegisterError.gender.openTooltip = false;\r\n      _dataPatientsRegisterError.gender.isError = false;\r\n      _dataPatientsRegisterError.gender.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n    //   handleFindOldDisease();\r\n    // }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.province.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.district.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.province.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.province.title = '';\r\n      _dataPatientsRegisterError.province.openTooltip = false;\r\n      _dataPatientsRegisterError.province.isError = false;\r\n      _dataPatientsRegisterError.province.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.district.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.district.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.district.title = '';\r\n      _dataPatientsRegisterError.district.openTooltip = false;\r\n      _dataPatientsRegisterError.district.isError = false;\r\n      _dataPatientsRegisterError.district.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n    \r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.codeWard = value.code\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.ward.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.ward.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.ward.title = '';\r\n      _dataPatientsRegisterError.ward.openTooltip = false;\r\n      _dataPatientsRegisterError.ward.isError = false;\r\n      _dataPatientsRegisterError.ward.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeFolk = (value) => {\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'address'){\r\n        setFocusField(null);\r\n      }\r\n      \r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.address = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.address.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.address.title = '';\r\n        _dataPatientsRegisterError.address.openTooltip = false;\r\n        _dataPatientsRegisterError.address.isError = false;\r\n        _dataPatientsRegisterError.address.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'fullNameMother'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameMother = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        if(focusField === 'phoneMother'){\r\n          setFocusField(null);\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneMother.isError = true;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneMother = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneMother.title = '';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneMother.isError = false;\r\n      _dataPatientsRegisterError.phoneMother.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    if(focusField === 'fullNameFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameFather = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (e, value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneFather.isError = true;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneFather = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'phoneFather'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneFather.title = '';\r\n      _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneFather.isError = false;\r\n      _dataPatientsRegisterError.phoneFather.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'height'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.height = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.height.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.height.title = '';\r\n        _dataPatientsRegisterError.height.openTooltip = false;\r\n        _dataPatientsRegisterError.height.isError = false;\r\n        _dataPatientsRegisterError.height.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'weight'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.weight = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.weight.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.weight.title = '';\r\n        _dataPatientsRegisterError.weight.openTooltip = false;\r\n        _dataPatientsRegisterError.weight.isError = false;\r\n        _dataPatientsRegisterError.weight.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'headCircumference'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.headCircumference = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.headCircumference.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.headCircumference.title = '';\r\n        _dataPatientsRegisterError.headCircumference.openTooltip = false;\r\n        _dataPatientsRegisterError.headCircumference.isError = false;\r\n        _dataPatientsRegisterError.headCircumference.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onSelectMedicalType = (e, value) => {\r\n    if(focusField === 'medicalType'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.medicalTypeId = value.medicalTypeId\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.medicalType.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.medicalType.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.medicalType.title = '';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = false;\r\n      _dataPatientsRegisterError.medicalType.isError = false;\r\n      _dataPatientsRegisterError.medicalType.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeReason = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.reason = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      // if(dataPatientsRegisterError.reason.isError){\r\n      //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      //   _dataPatientsRegisterError.reason.isError = false;\r\n      //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.vaccination = bool\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.vaccination = bool\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkValidate = () => {\r\n    let isValid = true;\r\n    const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n\r\n    if(dataPatientsRegisterError.identifier.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.identifier.focus = true;\r\n        setFocusField('identifier');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.patientId === ''){\r\n      _dataPatientsRegisterError.patientId.title = 'Bạn chưa nhập mã bệnh nhân';\r\n      _dataPatientsRegisterError.patientId.openTooltip = true;\r\n      _dataPatientsRegisterError.patientId.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.patientId.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullName === ''){\r\n      _dataPatientsRegisterError.fullName.title = 'Bạn chưa nhập họ tên';\r\n      _dataPatientsRegisterError.fullName.openTooltip = true;\r\n      _dataPatientsRegisterError.fullName.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullName.focus = true;\r\n        setFocusField('fullName');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.dayOfBirth === ''){\r\n      _dataPatientsRegisterError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n      _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n      _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.dayOfBirth.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.gender === ''){\r\n      _dataPatientsRegisterError.gender.title = 'Bạn chưa chọn giới tính';\r\n      _dataPatientsRegisterError.gender.openTooltip = true;\r\n      _dataPatientsRegisterError.gender.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.gender.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n      setFocusField('gender');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.province.value === null){\r\n      _dataPatientsRegisterError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n      _dataPatientsRegisterError.province.openTooltip = true;\r\n      _dataPatientsRegisterError.province.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.province.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('province');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.district.value === null){\r\n      _dataPatientsRegisterError.district.title = 'Bạn chưa chọn quận huyện';\r\n      _dataPatientsRegisterError.district.openTooltip = true;\r\n      _dataPatientsRegisterError.district.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.district.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('district');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.ward.value === null){\r\n      _dataPatientsRegisterError.ward.title = 'Bạn chưa chọn phường xã';\r\n      _dataPatientsRegisterError.ward.openTooltip = true;\r\n      _dataPatientsRegisterError.ward.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.ward.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('ward');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.address === ''){\r\n      _dataPatientsRegisterError.address.title = 'Bạn chưa nhập địa chỉ';\r\n      _dataPatientsRegisterError.address.openTooltip = true;\r\n      _dataPatientsRegisterError.address.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.address.focus = true;\r\n        setFocusField('address');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullNameMother === '' && dataPatientsRegister.patient.fullNameFather === ''){\r\n      _dataPatientsRegisterError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n      _dataPatientsRegisterError.fullNameMother.openTooltip = true;\r\n      _dataPatientsRegisterError.fullNameMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullNameMother.focus = true;\r\n        setFocusField('fullNameMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.phoneMother === '' && dataPatientsRegister.patient.phoneFather === ''){\r\n      _dataPatientsRegisterError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n      _dataPatientsRegisterError.phoneMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneMother.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneFather.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneFather.focus = true;\r\n        setFocusField('phoneFather');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.height === ''){\r\n      _dataPatientsRegisterError.height.title = 'Bạn chưa nhập chiều cao';\r\n      _dataPatientsRegisterError.height.openTooltip = true;\r\n      _dataPatientsRegisterError.height.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.height.focus = true;\r\n        setFocusField('height');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.weight === ''){\r\n      _dataPatientsRegisterError.weight.title = 'Bạn chưa nhập cân nặng';\r\n      _dataPatientsRegisterError.weight.openTooltip = true;\r\n      _dataPatientsRegisterError.weight.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.weight.focus = true;\r\n        setFocusField('weight');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.headCircumference === ''){\r\n      _dataPatientsRegisterError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n      _dataPatientsRegisterError.headCircumference.openTooltip = true;\r\n      _dataPatientsRegisterError.headCircumference.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.headCircumference.focus = true;\r\n        setFocusField('headCircumference');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.medicalTypeId === ''){\r\n      _dataPatientsRegisterError.medicalType.title = 'Bạn chưa chọn loại hình khám';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = true;\r\n      _dataPatientsRegisterError.medicalType.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.medicalType.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('medicalType');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    // if(dataPatientsRegister.reason === ''){\r\n    //   _dataPatientsRegisterError.reason.isError = true;\r\n    //   isValid = false;\r\n    // }\r\n\r\n    setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    return isValid;\r\n  }\r\n\r\n  const handleMedicalRegister = () => {\r\n    setTimeout(() => {\r\n      if(checkValidate()){\r\n        firstFocusRef.current.focus();\r\n        if(props.dataPantientAppointmentsToday){\r\n          handleMedicalBackRegister();\r\n        }\r\n        else{\r\n          setOpenModalExaminingSession(true);\r\n        }\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const handleMedicalBackRegister = async () => {\r\n    setOpenAlertProcessing(true);\r\n    const responseCreateMedicalBackRegister = await createMedicalBackRegister(dataPatientsRegister);\r\n    if(responseCreateMedicalBackRegister.status === 200){\r\n      toast.success(responseCreateMedicalBackRegister.data, {toastId: 'success5'})\r\n      props.setCompleteMedicalRegister(true);\r\n      handleResetField();\r\n    }\r\n    else{\r\n      toast.error(responseCreateMedicalBackRegister.data, {toastId: 'error5'})\r\n    }\r\n    setOpenAlertProcessing(false);\r\n  }\r\n\r\n  const handleApplyPantientOldDiseaseData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = dataPatientsRegister.patient.identifier;\r\n    document.getElementById('patientId').value = dataPatientsRegister.patient.patientId;\r\n    document.getElementById('patientFullName').value = dataPatientsRegister.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(dataPatientsRegister.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(dataPatientsRegister.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === dataPatientsRegister.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === dataPatientsRegister.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = dataPatientsRegister.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = dataPatientsRegister.patient.address;\r\n    document.getElementById('patientFullNameMother').value = dataPatientsRegister.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = dataPatientsRegister.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = dataPatientsRegister.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = dataPatientsRegister.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('height');\r\n  }\r\n\r\n  const handleApplyPantientAppointmentsTodayData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = props.dataPantientAppointmentsToday.patient.identifier;\r\n    document.getElementById('patientId').value = props.dataPantientAppointmentsToday.patient.patientId;\r\n    document.getElementById('patientFullName').value = props.dataPantientAppointmentsToday.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(props.dataPantientAppointmentsToday.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(props.dataPantientAppointmentsToday.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === props.dataPantientAppointmentsToday.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === props.dataPantientAppointmentsToday.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = props.dataPantientAppointmentsToday.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = props.dataPantientAppointmentsToday.patient.address;\r\n    document.getElementById('patientFullNameMother').value = props.dataPantientAppointmentsToday.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = props.dataPantientAppointmentsToday.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = props.dataPantientAppointmentsToday.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = props.dataPantientAppointmentsToday.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('height');\r\n  }\r\n\r\n  const handleResetField = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n\r\n    firstFocusRef.current.focus();\r\n  }\r\n\r\n  const handleOpenModalOldDisease = () => {\r\n    handleResetField();\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const response = await getListProvince();\r\n    if(response !== 400){\r\n      setListProvince(response);\r\n    }\r\n  }\r\n\r\n  // const handleFindOldDisease = async () => {\r\n  //   const response = await getListOldDisease('', '', dataPatientsRegister.patient.fullName, dataPatientsRegister.patient.dayOfBirth, dataPatientsRegister.patient.gender);\r\n  //   if(response.length !== 0){\r\n  //     setListOldDiseaseRegister(response);\r\n  //     setOpenOldDiseaseRegister(true);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleGetListProvince();\r\n    firstFocusRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(dataPatientsRegister.oldDisease === true){\r\n      handleApplyPantientOldDiseaseData();\r\n    }\r\n  }, [dataPatientsRegister.oldDisease])\r\n\r\n  useEffect(() => {\r\n    if(props.dataPantientAppointmentsToday){\r\n      setDataPatientsRegister(props.dataPantientAppointmentsToday);\r\n      handleApplyPantientAppointmentsTodayData();\r\n    }\r\n  }, [props.dataPantientAppointmentsToday]) \r\n\r\n  useEffect(() => {\r\n    if(props.onF2Press){\r\n      if(openModalExaminingSession === true && openModalOldDisease === false){\r\n        setIsContinueSelectedExaminingSession(true);\r\n        props.setOnF2Press(false);\r\n      }\r\n      else{\r\n        handleMedicalRegister();\r\n        props.setOnF2Press(false);\r\n      }\r\n    }\r\n    \r\n    if(props.onF4Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF4Press(false);\r\n      }\r\n      else{\r\n        handleResetField();\r\n        props.setOnF4Press(false);\r\n      }\r\n    }\r\n\r\n    if(props.onF8Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF8Press(false);\r\n      }\r\n      else{\r\n        handleOpenModalOldDisease();\r\n        props.setOnF8Press(false);\r\n      }\r\n    }\r\n  }, [props.onF2Press, props.onF4Press, props.onF8Press])\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{'&.MuiContainer-maxWidthLg': {pr: 0}, height: '100%',}}>\r\n        <Box sx={{ minHeight: '36.8rem', borderRadius: '20px', boxShadow: 5, pt: 1.2, pb: 1.2, pl: 2.4, pr: 2.4, }}>\r\n          <Typography variant='h6' sx={{textAlign: 'center', fontWeight: 'bolder', color: 'blue'}}>Thông tin đăng ký khám</Typography> \r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}} component=\"form\" ref={formRef}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.identifier.title}</h6>} open={dataPatientsRegisterError.identifier.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.identifier.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã định danh\" variant=\"outlined\" id='patientIdentifier'\r\n                  inputRef={focusField === 'identifier' ? (input) => input && focusField === 'identifier' && input.focus() : firstFocusRef}\r\n                  onChange={(e) => onChangeIdentifier(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Identifier')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.patientId.title}</h6>} open={dataPatientsRegisterError.patientId.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.patientId.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã BN\" variant=\"outlined\" id='patientId'\r\n                  inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                  onChange={(e) => onChangePatientId(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'PatientId')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullName.title}</h6>} open={dataPatientsRegisterError.fullName.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }} \r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [37, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              > \r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullName.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên\" variant=\"outlined\" id=\"patientFullName\"                   \r\n                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  /> \r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n      \r\n            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n              <ThemeProvider theme={tooltipTheme}>\r\n                <DemoContainer components={['DatePicker']} >\r\n                  <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.dayOfBirth.title}</h6>} open={dataPatientsRegisterError.dayOfBirth.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>    \r\n                    <Box sx={{width: 142, mt: '12px !important'}}>\r\n                      <div style={{width: '100%', }}>\r\n                        <DateField label=\"Ngày sinh\" \r\n                          format='DD/MM/YYYY' value={autocompleteValue.dayOfBirth}\r\n                          disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                          slotProps={{ \r\n                            textField: \r\n                              { \r\n                                inputRef: dateFieldRef,\r\n                                error: true ? dataPatientsRegisterError.dayOfBirth.isError === true : false,\r\n                                onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                sx: {'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } },\r\n                              }\r\n                          }}\r\n                          onChange={(value) => onChangeDOB(value)}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  </Tooltip>\r\n                </DemoContainer>\r\n              </ThemeProvider>      \r\n            </LocalizationProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.gender.title}</h6>} open={dataPatientsRegisterError.gender.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '12%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientGender' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.gender.value}\r\n                    options={listGender} \r\n                    getOptionLabel={(option) => option.genderName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.genderName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectGender(e, value)}\r\n                    open={autocompleteValue.gender.openOption}\r\n                    onFocus={() => handleFocus('Gender')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Giới tính\" \r\n                        inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.gender.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n             \r\n            {/* <TextField label=\"Dân tộc\" variant=\"outlined\" sx={{width: '12%', '&.MuiTextField-root' : {marginTop: '15px'}}}/> */}\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.province.title}</h6>} open={dataPatientsRegisterError.province.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '19.2%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.province.value}\r\n                    options={listProvince} \r\n                    noOptionsText={'Đang tải...'}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectProvine(e, value)}\r\n                    open={autocompleteValue.province.openOption}\r\n                    onFocus={() => handleFocus('Province')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Thành phố\" \r\n                        inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.province.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.district.title}</h6>} open={dataPatientsRegisterError.district.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '24%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.district.value}\r\n                    options={listDistrict.list} \r\n                    noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                    open={autocompleteValue.district.openOption}\r\n                    onFocus={() => handleFocus('District')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.fullName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectDistrict(e, value)}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Quận/Huyện\" \r\n                        inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.district.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <>\r\n                              {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <>\r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.ward.title}</h6>} open={dataPatientsRegisterError.ward.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                  <div style={{width: '23.5%', marginTop: '20px'}}>\r\n                    <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                      value={autocompleteValue.ward.value}\r\n                      options={listWard.list} \r\n                      noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                      filterOptions={filterOptions}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderOption={(props, option) => (\r\n                        <li {...props}>\r\n                          {option.fullName}\r\n                        </li>\r\n                      )}\r\n                      onChange={(e, value) => onSelectWard(e, value)}\r\n                      open={autocompleteValue.ward.openOption}\r\n                      onFocus={() => handleFocus('Ward')}\r\n                      onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} \r\n                          label=\"Phường/Xã\" \r\n                          inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                          error={true ? dataPatientsRegisterError.ward.isError === true : false} \r\n                          sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                              <>\r\n                                {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                              </>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      disableClearable // Bỏ icon xóa\r\n                      popupIcon={null} // Bỏ icon dropdown\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.address.title}</h6>} open={dataPatientsRegisterError.address.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.address.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Địa chỉ\" variant=\"outlined\" id='patientAddress'\r\n                    inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                    onChange={(e) => onChangeAddress(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullNameMother.title}</h6>} open={dataPatientsRegisterError.fullNameMother.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullNameMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên mẹ\" variant=\"outlined\" id='patientFullNameMother'\r\n                    inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                    autoFocus={dataPatientsRegisterError.fullNameMother.focus}\r\n                    onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneMother.title}</h6>} open={dataPatientsRegisterError.phoneMother.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.phoneMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Điện thoại\" variant=\"outlined\" id='patientPhoneMother' \r\n                    inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                    onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n\r\n            <TextField label=\"Họ tên cha\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n              variant=\"outlined\" id='patientFullNameFather' \r\n              sx={{width: '30.4%', '&.MuiTextField-root' : {marginTop: '20px'}}} \r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n              inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n              InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n            />\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneFather.title}</h6>} open={dataPatientsRegisterError.phoneFather.openTooltip}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField label=\"Điện thoại\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                    variant=\"outlined\" id='patientPhoneFather'\r\n                    onChange={(e) => onChangePhoneFather(e, e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneFather')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.weight.title}</h6>} open={dataPatientsRegisterError.weight.openTooltip} PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Cân nặng bé\" variant=\"outlined\" id='patientWeight' error={true ? dataPatientsRegisterError.weight.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(kg)</InputAdornment>}}\r\n                    onChange={(e) => onChangeWeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.height.title}</h6>} open={dataPatientsRegisterError.height.openTooltip} placement='left' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Chiều cao bé\" variant=\"outlined\" id='patientHeight' error={true ? dataPatientsRegisterError.height.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.headCircumference.title}</h6>} open={dataPatientsRegisterError.headCircumference.openTooltip} placement='top-start' PopperProps={{sx: { zIndex: 2 } }}\r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [70, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              >\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Vòng đầu bé\" variant=\"outlined\" id='patientHeadCircumference' error={true ? dataPatientsRegisterError.headCircumference.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.medicalType.title}</h6>} open={dataPatientsRegisterError.medicalType.openTooltip} placement='bottom' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30.5%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientMedicalType' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.medicalType.value}\r\n                    options={listMedicalType} \r\n                    getOptionLabel={(option) => option.medicalTypeName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.medicalTypeName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectMedicalType(e, value)}\r\n                    open={autocompleteValue.medicalType.openOption}\r\n                    onFocus={() => handleFocus('MedicalType')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'MedicalType')}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Loại hình khám\" \r\n                        inputRef={(input) => input && focusField === 'medicalType' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.medicalType.isError === true : false} \r\n                        sx={{\r\n                          '& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } ,\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.Mui-disabled.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'},\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'}\r\n                        }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.reason.title}</h6>} open={dataPatientsRegisterError.reason.openTooltip} >\r\n                <div style={{width: '100%' }}>\r\n                  <TextField fullWidth label=\"Lý do khám\" multiline rows={3} variant=\"outlined\" id='patientReason' error={true ? dataPatientsRegisterError.reason.isError === true : false}\r\n                    sx={{'&.MuiTextField-root' : {marginTop: '20px'}}} \r\n                    onChange={(e) => onChangeReason(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <FormControlLabel control={<Checkbox checked={autocompleteValue.vaccination}/>} sx={{width: '100%'}}\r\n              label=\"Bệnh nhân có tham gia tiêm ngừa\" onChange={(e) => onChangeVaccination(e.target.checked)}/>  \r\n\r\n            <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n              <Button variant=\"contained\" color=\"primary\" sx={{mr: 1}} onClick={() => handleMedicalRegister()}>Đăng ký (f2)</Button>\r\n              <Button variant=\"contained\" color=\"warning\" onClick={() => handleResetField()}>Làm mới (f4)</Button>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => handleOpenModalOldDisease()}>Bệnh cũ (f8)</Button>\r\n            </Box>\r\n          </Box>         \r\n        </Box>\r\n      </Container>\r\n\r\n      <ExaminingSession \r\n        openModalExaminingSession={openModalExaminingSession} setOpenModalExaminingSession={setOpenModalExaminingSession} \r\n        handleResetField={handleResetField} setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        isContinueSelectedExaminingSession={isContinueSelectedExaminingSession} setIsContinueSelectedExaminingSession={setIsContinueSelectedExaminingSession}\r\n        dataPatientsRegister={dataPatientsRegister} \r\n      />\r\n\r\n      <OldDisease \r\n        openModalOldDisease={openModalOldDisease} setOpenModalOldDisease={setOpenModalOldDisease}\r\n        dataPatientsRegister={dataPatientsRegister} setDataPatientsRegister={setDataPatientsRegister}\r\n      />\r\n\r\n      {/* <OldDiseaseForRegister\r\n        openOldDiseaseRegister={openOldDiseaseRegister} setOpenOldDiseaseRegister={setOpenOldDiseaseRegister}\r\n        setDataPatientsRegister={setDataPatientsRegister}\r\n        listOldDiseaseRegister={listOldDiseaseRegister} setListOldDiseaseRegister={setListOldDiseaseRegister}\r\n      /> */}\r\n\r\n      <AlertProcessing\r\n        openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookMedical","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//modal\r\nimport SelectedDoctorExamining from '../ManageSelectedDoctorExamining/SelectedDoctorExamining';\r\n//components\r\nimport ListPatientsRegister from './ListPatientsRegister';\r\nimport BookMedical from './BookMedical';\r\n//api\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nfunction MainMedicalRegister() {\r\n\r\n  const { user, loading } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [component1Loading, setComponent1Loading] = useState(true);\r\n\r\n  const [completeMedicalRegister, setCompleteMedicalRegister] = useState(false);\r\n  const [dataPantientAppointmentsToday, setDataPantientAppointmentsToday] = useState();\r\n\r\n  const [handleResetField, setHandleResetField] = useState(false); //F2\r\n  const [handleOpenModalExaminingSession, setHandleOpenModalExaminingSession] = useState(false); //F4\r\n  const [handleOpenModalOldDisease, setHandleOpenModalOldDisease] = useState(false); //F8\r\n\r\n  const handleF2Press = () => {\r\n    setHandleOpenModalExaminingSession(true);\r\n  }\r\n\r\n  const handleF4Press = () => {\r\n    setHandleResetField(true);\r\n  }\r\n\r\n  const handleF8Press = () => {\r\n    setHandleOpenModalOldDisease(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(loading === false && user.isLogin){\r\n      if(user.positionName !== 'Nursing'){\r\n        history.push('/404');\r\n      }\r\n    }\r\n  }, [loading, user])\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if(event.keyCode === 113){\r\n        event.preventDefault()\r\n        //nhấn F2 để đăng ký khám\r\n        handleF2Press();\r\n      }\r\n      else if(event.keyCode === 115){\r\n        event.preventDefault()\r\n        //nhấn F4 để reset các input field \r\n        handleF4Press();\r\n      }\r\n      else if(event.keyCode === 119){\r\n        event.preventDefault()\r\n        //nhấn F8 để tìm bệnh cũ\r\n        handleF8Press();\r\n      }\r\n      else{\r\n\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n              <Grid container spacing={0} sx={{marginLeft: 0}}>\r\n                <Grid item xs={5}>  \r\n                  <ListPatientsRegister \r\n                    completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                    component1Loading={component1Loading} setComponent1Loading={setComponent1Loading}\r\n                    dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                  />\r\n                </Grid>\r\n            \r\n                <Grid item xs={7} >\r\n                  {component1Loading ?\r\n                    <div style={{marginLeft: '18px'}}>\r\n                      <Skeleton variant='rectangular' width=\"100%\" height={590} />\r\n                    </div>\r\n                  :\r\n                    <BookMedical \r\n                      onF2Press={handleOpenModalExaminingSession} setOnF2Press={setHandleOpenModalExaminingSession}\r\n                      onF4Press={handleResetField} setOnF4Press={setHandleResetField}\r\n                      onF8Press={handleOpenModalOldDisease} setOnF8Press={setHandleOpenModalOldDisease}\r\n                      completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                      dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                    />\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n         {/* <SelectedDoctorExamining \r\n          openSelectedDoctorExaminingModal={openSelectedDoctorExaminingModal} setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n          currentDoctorExamining={currentDoctorExamining} setCurrentDoctorExamining={setCurrentDoctorExamining}\r\n         /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainMedicalRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getAppointmentsNextWeek, updateStateAppointment } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainAppointmentExamining() {\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chưa nhắc hẹn khám'});\r\n    const [listPantientAppointmentChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [listAppointment, setListAppointment] = useState();\r\n    \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n    const [listDataPatientsAppointmentPaginate, setListDataPatientsAppointmentPaginate] = useState([]);\r\n    const [listDataPatientsAppointmentState, setListDataPatientsAppointmentState] = useState();\r\n    const [listDataPatientsAppointmentSort, setListDataPatientsAppointmentSort] = useState([]);\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [pageCount, setPageCount] = useState();\r\n\r\n    const [dataAppointment, setDataAppointment] = useState();\r\n\r\n    const handlePaginate = (data) => {\r\n        const itemsPerPage = 5;\r\n        if(data){\r\n            const calculatedPageCount = Math.ceil(data.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = data.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n        else{\r\n            const calculatedPageCount = Math.ceil(listDataPatientsAppointmentPaginate.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = listDataPatientsAppointmentPaginate.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    }\r\n\r\n    const handleGetAppointmentsNextWeek = async () => {\r\n        setLoading(true);\r\n        const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n        setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n        const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n        const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n        const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n        const updateListPantientAppointmentChipState = [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n        ]\r\n\r\n        setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n        if(activeChip.chipOrder === 0){\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind)\r\n        }\r\n\r\n        else if(activeChip.chipOrder === 1){\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n            handlePaginate(_listAppointmentAcceptReExamining)\r\n        }\r\n\r\n        else{\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n            handlePaginate(_listAppointmentRejectReExamining)\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n            const _listAppointmentNotRemind = listAppointment.filter(item => item.stateAppointment === 0);\r\n\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const _listAppointmentAcceptReExamining = listAppointment.filter(item => item.stateAppointment === 1);\r\n\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining);\r\n            handlePaginate(_listAppointmentAcceptReExamining);\r\n        }\r\n        else{\r\n            const _listAppointmentRejectReExamining = listAppointment.filter(item => item.stateAppointment === 2);\r\n\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining);\r\n            handlePaginate(_listAppointmentRejectReExamining);\r\n        }\r\n    }\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsAppointmentSort(listDataPatientsAppointmentState);\r\n        }else{\r\n          setListDataPatientsAppointmentSort(searchPatients(listDataPatientsAppointmentState, takenValue));\r\n        }\r\n    }\r\n\r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, patientFullName, phoneMother, phoneFather } = patientObj;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || patientFullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const onChangeAppointmentDate = (medicalBookId, appointmentDate) => {\r\n        if(appointmentDate){\r\n            const takenValue = appointmentDate._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const today = new Date();\r\n                const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n                const convertAppointmentDateFindDataAppointment = new Date(findDataAppointment.appointmentDate)\r\n\r\n                if(today <= takenValue || takenValue >= convertAppointmentDateFindDataAppointment){\r\n                    findDataAppointment.appointmentDate = moment(takenValue).format('YYYY-MM-DD');\r\n                }\r\n            }, 100) \r\n        }\r\n        \r\n    }\r\n\r\n    const handleAcceptReExamining = async (medicalBookId) => {\r\n        setLoading(true);\r\n\r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 1);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            \r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleRejectReExamining = async (medicalBookId) => {\r\n        setLoading(true);\r\n        \r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 2);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetAppointmentsNextWeek();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handlePaginate();\r\n    }, [page]);\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1, p: 0 }}>\r\n            <TableContainer component={Paper} sx={{height: loading ? '40rem' : 'auto', position: 'relative'}}>\r\n                {loading ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>        \r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Box>\r\n                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                {listPantientAppointmentChipState.map((pantientAppointmentChipStateItem, pantientAppointmentChipStateIndex) => (\r\n                                    <Badge badgeContent={pantientAppointmentChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientAppointmentChipStateIndex}`}> \r\n                                        <Chip label={pantientAppointmentChipStateItem.chipLabel} color={pantientAppointmentChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                            onClick={() => handleSelectedChip(pantientAppointmentChipStateIndex, pantientAppointmentChipStateItem.chipLabel)} />  \r\n                                    </Badge>\r\n                                ))}\r\n                            </Stack>\r\n\r\n                            <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.15rem', fontWeight: 'bolder'}}>Danh sách {activeChip.chipLabel} trong 6 ngày tới</Typography>\r\n\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', mb: 1}}>\r\n                                <TextField sx={{width: 500, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc Số điện thoại' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                        startAdornment: (\r\n                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                        ),\r\n                                        endAdornment: (\r\n                                            <InputAdornment position='end'>\r\n                                                {searchPatientsQuery !== '' ? \r\n                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsAppointmentSort(listDataPatientsAppointmentState)]}\r\n                                                    /> \r\n                                                : \r\n                                                    null\r\n                                                }\r\n                                            </InputAdornment>  \r\n                                        )\r\n                                    }}>\r\n                                </TextField>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Table stickyHeader >\r\n                            <TableHead>\r\n                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                    <TableCell align='left' >Mã bệnh nhân</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày sinh</TableCell>\r\n                                    {/* <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Giới tính</TableCell> */}\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Địa chỉ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên Cha/Mẹ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Số điện thoại</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám cũ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám tiếp theo</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày hẹn khám</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Nhấn</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {listDataPatientsAppointmentSort.map((dataPantientAppointmentItem, dataPantientAppointmentIndex) => (\r\n                                    <TableRow hover role=\"checkbox\" key={dataPantientAppointmentIndex} sx={{':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1) !important'}}}>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientId}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientFullName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{moment(dataPantientAppointmentItem.dateOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                        {/* <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.gender === true ? 'Nam' : 'Nữ'}</TableCell> */}\r\n                                        <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 240, fontSize: '0.9rem'}}>\r\n                                            <Tooltip title={<Typography variant='subtitle2'>{dataPantientAppointmentItem.fullAddress}</Typography>} >\r\n                                                <span>{dataPantientAppointmentItem.fullAddress}</span>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.fullNameFather !== '' ? dataPantientAppointmentItem.fullNameFather : dataPantientAppointmentItem.fullNameMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.phoneFather !== '' ? dataPantientAppointmentItem.phoneFather : dataPantientAppointmentItem.phoneMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.examNameOld}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.nextExamName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto'}}>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                                <DemoContainer components={['DatePicker']}> \r\n                                                    <Box sx={{width: 145}}>\r\n                                                        <div style={{width: '100%'}}>\r\n                                                            <DatePicker label=\"Ngày khám dự kiến\" disablePast minDate={moment()}\r\n                                                                format='DD/MM/YYYY' value={moment(dataPantientAppointmentItem.appointmentDate)}\r\n                                                                onChange={(value) => onChangeAppointmentDate(dataPantientAppointmentItem.medicalBookId, value)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Box> \r\n                                                </DemoContainer>\r\n                                            </LocalizationProvider>\r\n                                        </TableCell>                                                                                                \r\n                                        <TableCell align={dataPantientAppointmentItem.stateAppointment === 0 ? 'left' : 'center'} sx={{width: 'auto', fontSize: '0.9rem'}}>\r\n                                            {dataPantientAppointmentItem.stateAppointment === 0 ?\r\n                                                <>   \r\n                                                    <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {dataPantientAppointmentItem.stateAppointment === 1 ?\r\n                                                        <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    :\r\n                                                        <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </>\r\n                }\r\n            </TableContainer>\r\n\r\n            {listDataPatientsAppointmentSort.length !== 0 && loading === false ?\r\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n                    <Pagination count={pageCount} page={page} onChange={handlePageChange} color=\"secondary\" />\r\n                </Box>\r\n            :\r\n                null\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainAppointmentExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport _ from 'lodash'\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DialogActions } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//other\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n//css\r\nimport './SCSS/CompleteExamining.scss';\r\n//api\r\nimport { createAddPredecessor, createAddMedicalBook, getAppointmentDate } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CompleteExamining(props) {\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState();\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n\r\n    const typingRef = useRef(null);\r\n    const textareaRef = useRef(null);\r\n    const dateFieldRef = useRef(null);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleCloseModalCompleteExamining = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n          return;\r\n        }\r\n        else{\r\n            setMainDataExaminingForConclusion();\r\n            props.setOpenModalCompleteExamining(false);\r\n        }\r\n      }\r\n\r\n    const onChangeExaminingConclusion = (value) => {\r\n        typingRef.current = setTimeout(() => {\r\n            setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                prevMainDataExaminingForConclusion.conclusion = value;\r\n                return {...prevMainDataExaminingForConclusion}\r\n            })\r\n        }, 300)\r\n    }\r\n\r\n    const onChangeAppointmentDate = (value) => {\r\n        if(value){\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n            typingRef.current = setTimeout(() => {\r\n                const takenValue = value._d;\r\n                const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n                if(formattedDate !== 'Invalid date'){\r\n                    setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                        prevMainDataExaminingForConclusion.appointmentDate = formattedDate;\r\n                        return {...prevMainDataExaminingForConclusion}\r\n                    })\r\n                }\r\n            }, 200)   \r\n        }\r\n    }\r\n\r\n    const handleSetDataCompleteExamining = async () => {\r\n        setOpenAlertProcessing(true);\r\n\r\n        const editDataExaminingForConclusion = _.clone(props.dataExaminingForConclusion);\r\n        editDataExaminingForConclusion.categories = editDataExaminingForConclusion.categories.map(categoriesItem => ({\r\n            ...categoriesItem,\r\n            // Lọc các categoryContents để giữ lại những phần tử có categoryContentQuestions không rỗng\r\n            categoryContents: categoriesItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length > 0)\r\n\r\n            // Loại bỏ các categories nếu tất cả categoryContents của nó đều bị loại bỏ\r\n        })).filter(categoriesItem => categoriesItem.categoryContents.length > 0);\r\n\r\n        const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        if(responseAppointmentDate.status === 200){\r\n            editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n            editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n            editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n            if(editDataExaminingForConclusion.isVaccination){\r\n                editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n                editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n                editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n            }\r\n\r\n        }else{\r\n            toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        }\r\n \r\n        setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        setOpenAlertProcessing(false);\r\n        if(props.dataExaminingForConclusion.conclusion !== ''){\r\n            const length = textareaRef.current.value.length;\r\n            textareaRef.current.setSelectionRange(length, length);\r\n            textareaRef.current.focus();\r\n        }\r\n        else{\r\n            textareaRef.current.focus();\r\n        }\r\n\r\n        // if(editDataExaminingForConclusion.categories.length !== 0){\r\n            \r\n        //     const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        //     if(responseAppointmentDate.status === 200){\r\n        //         editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n        //         editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n        //         editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n        //         if(editDataExaminingForConclusion.isVaccination){\r\n        //             editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n        //             editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n        //             editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n        //         }\r\n\r\n        //     }else{\r\n        //         toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        //     }\r\n \r\n        //     setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        //     setOpenAlertProcessing(false);\r\n        //     if(props.dataExaminingForConclusion.conclusion !== ''){\r\n        //         const length = textareaRef.current.value.length;\r\n        //         textareaRef.current.setSelectionRange(length, length);\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        //     else{\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    const handleAddMedicalBook = async () => {\r\n        if(checkValidate()){\r\n            setOpenAlertProcessing(true);\r\n    \r\n                if(mainDataExaminingForConclusion.categories.some(categoriesItem => categoriesItem.isPredecessor === true)){\r\n                    const categoryPres = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isPredecessor === true)\r\n                    const dataPredecessor = { patientId: mainDataExaminingForConclusion.patientId, categoryPres: categoryPres }\r\n                    await createAddPredecessor(dataPredecessor);\r\n                }\r\n\r\n                const categoriesHealthRecordExamining = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isHealthRecord === true)\r\n                mainDataExaminingForConclusion.categories = categoriesHealthRecordExamining\r\n                const responseAddMedicalBook = await createAddMedicalBook(mainDataExaminingForConclusion);\r\n                if(responseAddMedicalBook.status === 200){\r\n                    toast.success(responseAddMedicalBook.data, {toastId: 'success3'});\r\n                    props.handleCompleteExaminingForPantient();\r\n                    setMainDataExaminingForConclusion();\r\n                    props.setOpenModalCompleteExamining(false);\r\n                }\r\n                else{\r\n                    toast.error(responseAddMedicalBook.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            setOpenAlertProcessing(false);\r\n    }\r\n\r\n    const checkValidate = () => {\r\n        let isValid = true;\r\n        if(mainDataExaminingForConclusion.conclusion === null){\r\n            textareaRef.current.focus();\r\n            toast.error('Bạn chưa nhập kết luận khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === 'Invalid date'){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Ngày tái khám không hợp lệ', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === ''){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Bạn chưa chọn ngày tái khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalCompleteExamining){\r\n            handleSetDataCompleteExamining();\r\n        }\r\n    }, [props.openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalCompleteExamining} onClose={(event, reason) => handleCloseModalCompleteExamining(event, reason)} disableEscapeKeyDown={true}>\r\n                <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Tóm tắt quá trình khám</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalCompleteExamining()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='large'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                    <Box sx={{pl: 6, pr: 6}}>\r\n                        <List sx={{p: 0}}>\r\n                            <Box>\r\n                                {mainDataExaminingForConclusion ? \r\n                                    mainDataExaminingForConclusion.categories.length !== 0 ? \r\n                                        <div className='category-complete-examining'>\r\n                                            {mainDataExaminingForConclusion.categories.map((categoriesItem, categoriesIndex) => (\r\n                                                <div key={`categoriesItem ${categoriesIndex}`}>\r\n                                                    <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                        {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                            <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                                \r\n                                                                {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                    <div key={`questionItem ${questionIndex}`}>\r\n                                                                        <Grid container rowSpacing={0}>\r\n                                                                            {questionIndex === 0 ?\r\n                                                                                <>\r\n                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                    </Grid> \r\n\r\n                                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                        <>\r\n                                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                            </Grid>\r\n                                                                        \r\n                                                                                            <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                        </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    }   \r\n                                                                                </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n                                                                \r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                                classes={{ root: classes.root }}\r\n                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                            />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={5.5} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                :   \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={8} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                }                                                                                                                                                                          \r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    :\r\n                                        <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                :\r\n                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                }\r\n                            </Box>\r\n                        </List>\r\n                    </Box>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{borderTop: '1px solid black'}}>\r\n                    {mainDataExaminingForConclusion ? \r\n                        <div style={{width: '100%', padding: '8px 50px 8px 50px'}}>\r\n                            <TextareaAutosize key={`pantientId ${mainDataExaminingForConclusion.patientId}`} placeholder='Kết luận của bác sĩ' style={{width: '100%', padding: '15px', fontSize: '17px'}} onChange={(e) => onChangeExaminingConclusion(e.target.value)} ref={textareaRef} defaultValue={mainDataExaminingForConclusion.conclusion} /> \r\n                            \r\n                                {mainDataExaminingForConclusion.isVaccination ? \r\n                                    <>\r\n                                        <Box sx={{mb: 0.4}}>\r\n                                            {mainDataExaminingForConclusion.vaccination === '' || mainDataExaminingForConclusion.vaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.vaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.nextVaccination === '' || mainDataExaminingForConclusion.nextVaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.nextVaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.reminder === '' ||  mainDataExaminingForConclusion.reminder === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.reminder}`}</Typography>\r\n                                                </>\r\n                                            }\r\n                                        </Box>\r\n                                            \r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n\r\n                                {mainDataExaminingForConclusion.appointmentDate ? \r\n                                <>\r\n                                    <Box sx={{display: 'flex', justifyContent: 'center', mb: 2}}>\r\n                                        <Typography variant='h6' sx={{mt: 'auto', mb: 'auto', mr: 2}}>Kỳ khám tiếp theo: <span style={{fontWeight: 'bolder', color: '#ff1744'}}>{mainDataExaminingForConclusion.nextExamName}</span></Typography>\r\n                                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                            <DemoContainer components={['DatePicker']}>  \r\n                                                <DatePicker label=\"Ngày khám dự kiến\" disablePast\r\n                                                    format='DD/MM/YYYY' defaultValue={moment(mainDataExaminingForConclusion.appointmentDate)}\r\n                                                    onChange={(value) => onChangeAppointmentDate(value)}\r\n                                                    slotProps={{ \r\n                                                        textField: { inputRef: dateFieldRef, }\r\n                                                    }}\r\n                                                />\r\n                                            </DemoContainer>\r\n                                        </LocalizationProvider>\r\n                                    </Box>\r\n                                </>\r\n                                :\r\n                                    null\r\n                                }\r\n                        \r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <Stack spacing={1} direction=\"row\">\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' onClick={() => handleAddMedicalBook()}>Lưu</Button>\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' color={'error'} onClick={() => handleCloseModalCompleteExamining()}>Đóng</Button>\r\n                                </Stack>\r\n                            </div>\r\n                        </div>   \r\n                    :\r\n                        null            \r\n                    }             \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//scss\r\nimport './SCSS/PreviewLastExamining.scss'; \r\n//api\r\nimport { getMedicalBook } from '../../Service/MedicalService';\r\n//moment\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi'; \r\nmoment.locale('vi');\r\n\r\nfunction PreviewLastExamining(props) {\r\n    const previewDataExaminingDefault = {\r\n        categoryPres: [],\r\n        healthRecords: { examinationName: '', timeUpdateState: '', conclusion: '', medicakBook: [] },\r\n        nutritionals: [],\r\n        vaccinationBook: [] \r\n    }\r\n\r\n    const [previewDataExamining, setPreviewDataExamining] = useState(previewDataExaminingDefault);\r\n    // const [fullDataPredecessor, setFullDataPredecessor] = useState();\r\n    // const [fullDataHealthRecord, setFullDataHealthRecord] = useState();\r\n    \r\n    const [loadingMedicalBook, setLoadingMedicalBook] = useState(false);\r\n\r\n    const [openCollapsePredecessorItem, setOpenCollapsePredecessorItem] = useState([]);\r\n    const [openCollapseMedicakBookItem, setOpenCollapseMedicakBookItem] = useState([]);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpenPredecessorItem = (predecessorIndex) => {\r\n        setOpenCollapsePredecessorItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[predecessorIndex] = !newOpen[predecessorIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleOpenMedicakBookItem = (medicakBookIndex) => {\r\n        setOpenCollapseMedicakBookItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[medicakBookIndex] = !newOpen[medicakBookIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    // const handeOnChangePagePredecessor = (e, page, indexPredecessor) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].categoryContents = fullDataPredecessor[indexPredecessor].categoryContents[page - 1];\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    // const handeOnChangePageHealthRecords = (e, page, indexMedicakbook) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].categoryContents = fullDataHealthRecord[indexMedicakbook].categoryContents[page - 1];\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    const handleEditPrevDataExamining = async () => {\r\n        setLoadingMedicalBook(true);\r\n        const responseMedicalBook = await getMedicalBook(props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0].medicalRegisterId);\r\n        if(props.prevDataExamining.newPredecessor){\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n             \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: [],\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n\r\n        else{\r\n            if(props.prevDataExamining.categoryPres.length > 1){\r\n                props.prevDataExamining.categoryPres = props.prevDataExamining.categoryPres.sort((a, b) => a.categoryOrder - b.categoryOrder);\r\n            }\r\n\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n            \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: props.prevDataExamining.categoryPres,\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n        setLoadingMedicalBook(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.prevDataExamining){\r\n            handleEditPrevDataExamining();\r\n        }\r\n    }, [props.prevDataExamining])\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{height: '100%', position: 'relative'}}>\r\n                {loadingMedicalBook ? \r\n                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                        <CircularProgress />\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh gần nhất, hãy chờ một chút...</Typography>\r\n                    </Box>\r\n                :\r\n                    <>\r\n                        <div className='preview-last-examining-contents' >\r\n\r\n                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem'}}>\r\n                                Thông tin tóm tắt <span style={{color: 'red'}}>{previewDataExamining.healthRecords.examinationName}</span>\r\n                            </Typography>\r\n\r\n                            <List sx={{p: 0}}>\r\n                                {previewDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                    <div key={`predecessorItem ${predecessorIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenPredecessorItem(predecessorIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapsePredecessorItem[predecessorIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapsePredecessorItem[predecessorIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {predecessorItem.categoryContents.map((predecessorItemCategoryContentsItem, predecessorItemCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`predecessorItemCategoryContentsIndex ${predecessorItemCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: predecessorItemCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{predecessorItemCategoryContentsItem.categoryContentTitle}</Typography>\r\n                                                    \r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {predecessorItemCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{predecessorItemCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={6.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                                    \r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={6.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))} \r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                {previewDataExamining.healthRecords.medicakBook.map((medicakBookItems, medicakBookIndex) => (\r\n                                    <div key={`medicakBookItems ${medicakBookIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenMedicakBookItem(medicakBookIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseMedicakBookItem[medicakBookIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={medicakBookItems.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapseMedicakBookItem[medicakBookIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {medicakBookItems.categoryContents.map((medicakBookCategoryContentsItem, medicakBookCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`medicakBookCategoryContentsIndex ${medicakBookCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: medicakBookCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{medicakBookCategoryContentsItem.categoryContentTitle}</Typography>\r\n\r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {medicakBookCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{medicakBookCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={5.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))}\r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}             \r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n                            </List>\r\n\r\n                            <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận: ${previewDataExamining.healthRecords.conclusion}`}</Typography>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='time-examining' style={{marginLeft: '16px', marginTop: '4px', width: '99%'}}>\r\n                            <Typography variant='subtitle1' sx={{color: '#009688', fontWeight: 'bolder', fontSize: '1.08rem'}}>{`${previewDataExamining.healthRecords.doctorFullName}, ${moment(previewDataExamining.healthRecords.timeUpdateState).format('LLLL')}`}</Typography>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Box>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default PreviewLastExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//lodash\r\nimport _, { constant } from \"lodash\";\r\n//modal\r\nimport CompleteExamining from '../ManageCompleteExamining/CompleteExamining';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//components\r\nimport PreviewLastExamining from './PreviewLastExamining';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { GiWeightScale } from \"react-icons/gi\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport { TbRulerMeasure } from \"react-icons/tb\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport BeenhereIcon from '@mui/icons-material/Beenhere';\r\nimport VaccinesIcon from '@mui/icons-material/Vaccines';\r\n//moment\r\nimport moment from 'moment';\r\n//scss\r\nimport './SCSS/DoctorExamining.scss';\r\n//real-time\r\nimport {startSignalRConnection, stopSignalRConnection, removeFromGroup} from '../../Service/SignalService';\r\n//api\r\nimport { \r\n    createAddPredecessor,\r\n    getMedicalDetailPatient,\r\n    getRegistersByDateNow, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook,\r\n    updateMedicalState,\r\n    deleteMedicalBook\r\n} from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainDoctorExamining() {\r\n    const dataPantientsReadyExaminingDefault = {\r\n        stt: '',\r\n        id: '',\r\n        patientsId: '',\r\n        patientsName: '',\r\n        patientsDOB: '',\r\n        patientsMonthsOld: '',\r\n        patientsGender: '',\r\n        patientsHeight: '',\r\n        patientsWeight: '',\r\n        patientsHeadCircumference: '',\r\n        patientsPhone: '',\r\n        patientsAddress: ''\r\n    }\r\n\r\n    const { user, loading, alertVisible, confirmAlert, resetAlert, isLogOutClick } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isFormDirty, setIsFormDirty] = useState(false);\r\n\r\n    //state thông tin bệnh nhân ban đầu \r\n    const [dataPantientsReadyExamining, setDataPantientsReadyExamining] = useState(dataPantientsReadyExaminingDefault);\r\n\r\n    //state các category gồm tiêu đề nội dung khám và câu hỏi khám ban đầu\r\n    const [mainDataExamining, setMainDataExamining] = useState([]);\r\n\r\n    //state lưu tạm data các kỳ khám \r\n    const [prevDataExamining, setPrevDataExamining] = useState();\r\n\r\n    //state đóng mở cây thư mục khám của sổ khám bệnh\r\n    const [openCollapseHealthRecords, setOpenCollapseHealthRecords] = useState(false);\r\n\r\n    //state đóng mở chi tiết nội dung của sổ khám bệnh\r\n    const [openCollapseHealthRecordsItem, setOpenCollapseHealthRecordsItem] = useState([]);\r\n\r\n    //state chọn danh mục khám ban đầu\r\n    const [categorySelectedExamining, setCategorySelectedExamining] = useState({});\r\n\r\n    //state chọn danh mục bao gồm nội dung bên trong ban đầu\r\n    const [contentCategorySelectedExamining, setContentCategorySelectedExamining] = useState([]);\r\n\r\n    //state lưu tạm nội dung chi tiết của sổ khám bệnh\r\n    const [healthRecordsContents, setHealthRecordsContents] = useState([]);\r\n    const [currentHealthRecordExamining, setCurrentHealthRecordExamining] = useState();\r\n\r\n    //tiền căn show ở thông tin bệnh nhân\r\n    const [previewPredecessor, setPreviewPredecessor] = useState();\r\n\r\n    //state các câu hỏi được bác sĩ khám tích hoặc gõ vào\r\n    const [dataExaminingForConclusion , setDataExaminingForConclusion ] = useState({});\r\n\r\n    //state lưu tạm các data tiền căn của getUpdatePredecessor (bao gồm những data tiền căn đã chọn và chưa chọn)\r\n    const [oldDataPredecessor, setOldDataPredecessor] = useState();\r\n\r\n    //dùng khi tái khám hoặc mở khám lại cho bệnh nhân có tiền căn đã đụng\r\n    const [newDataPredecessor, setNewDataPredecessor] = useState();\r\n\r\n    //state lưu data tiền căn cũ (những data tiền căn đã chọn)  \r\n    const [prevDataPredecessor, setPrevDataPredecessor] = useState();\r\n\r\n    //state quản lý modal kết thúc khám\r\n    const [openModalCompleteExamining, setOpenModalCompleteExamining] = useState(false);\r\n\r\n    const [loadingPrevDataExamining, setLoadingPrevDataExamining] = useState(false);\r\n    const [loadingPatient, setLoadingPatient] = useState(true);\r\n    const [loadingInfoPatient, setLoadingInfoPatient] = useState(true);\r\n    const [loadingCategoryExamining, setLoadingCategoryExamining] = useState(false);\r\n    const [loadingContentsExamining, setLoadingContentsExamining] = useState(false);\r\n\r\n    const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n  \r\n    const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n    const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n    const [listPantientChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n            { chipLabel: 'BN đã khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n          const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n            setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n            setListDataPatientsRegisterState(listPantientRegisterDone);\r\n        }\r\n    };\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n        }else{\r\n          setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n        }\r\n      }\r\n    \r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const handleCompleteExaminingForPantient = () => {\r\n        setLoadingPatient(true);\r\n        toast.success(`Đã kết thúc khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setCurrentHealthRecordExamining();\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        setPreviewPredecessor();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleCancelExamining = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingCategoryExamining(true);\r\n        setLoadingContentsExamining(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, [dataPantientsReadyExamining.editExamining === true ? 2 : 0 || dataPantientsReadyExamining.backRegister === true ? 3 : 0]);\r\n        if(response.status === 200){\r\n            toast.success(`Đã hủy khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success2'});    \r\n            setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n            setMainDataExamining([]);\r\n            setOpenCollapseHealthRecords(false);\r\n            setOpenCollapseHealthRecordsItem([]);\r\n            setCategorySelectedExamining({});\r\n            setContentCategorySelectedExamining([]);\r\n            setHealthRecordsContents([]);\r\n            setCurrentHealthRecordExamining();\r\n            setDataExaminingForConclusion({});\r\n            setPrevDataPredecessor();\r\n            setCurrentHealthRecordExamining();\r\n            setOldDataPredecessor();\r\n            setPreviewPredecessor();\r\n            handleGetRegistersByDateNow();\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    const handleDeleteExamining = async () => {\r\n        const confirmLeave = window.confirm(\r\n            'Chức năng này sẽ xóa tất cả dữ liệu của kỳ khám hiện tại và đặt bệnh nhân về trạng thái chưa khám. Bạn có muốn xóa không?'\r\n        );\r\n        if (confirmLeave) {\r\n            setLoadingPatient(true);\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const responseDeleteMedicalBook = await deleteMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n            if(responseDeleteMedicalBook.status === 200){\r\n                toast.success(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingSuccess'});\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    await updateMedicalState(dataPantientsReadyExamining.id, 3);\r\n                }\r\n                setPrevDataExamining();\r\n                if(previewPredecessor && previewPredecessor.length !== 0){\r\n                    setPreviewPredecessor();\r\n                }\r\n                setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n                setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n                handleGetRegistersByDateNow();\r\n            }\r\n            else{\r\n                toast.error(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingError'});\r\n            }\r\n            setOpenAlertProcessingBackdrop(false);\r\n        } else {\r\n            return false; // Ngăn điều hướng\r\n        }\r\n    }\r\n\r\n    const handleStartExaminingButtonClick = () => {\r\n        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n            handleBeginExaminingForPantient();\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 1){\r\n            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n            handleBeginEditExaminingForPantient();\r\n        }\r\n    }\r\n\r\n    const handleCompleteExaminingButtonClick = () => {\r\n        setOpenAlertProcessingBackdrop(true)\r\n        if(dataPantientsReadyExamining.status === 1){\r\n            setTimeout(() => {\r\n            setOpenAlertProcessingBackdrop(false)\r\n                setOpenModalCompleteExamining(true);\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    //hàm này dùng khi user đang khám mà bị ngáo lỡ nhấn f5\r\n    const handleReloadUIWhenExamining = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        const reDataPatientsRegisterSort = JSON.parse(sessionStorage.dataPatientsRegisterSort)\r\n        const reDataPantientsReadyExamining = JSON.parse(sessionStorage.dataPantientsReadyExamining);\r\n        const reMainDataExamining = JSON.parse(sessionStorage.mainDataExamining);\r\n        const reDataExaminingForConclusion = JSON.parse(sessionStorage.dataExaminingForConclusion);\r\n\r\n        setListDataPatientsRegisterSort(reDataPatientsRegisterSort);\r\n        \r\n        reDataPantientsReadyExamining.isContinueExam = true;\r\n        \r\n        setDataPantientsReadyExamining(_.cloneDeep(reDataPantientsReadyExamining));\r\n        setMainDataExamining(_.cloneDeep(reMainDataExamining));\r\n        setDataExaminingForConclusion(_.cloneDeep(reDataExaminingForConclusion));\r\n\r\n        if(sessionStorage.currentHealthRecordExamining){\r\n            const reCurrentHealthRecordExamining = JSON.parse(sessionStorage.currentHealthRecordExamining);\r\n            setHealthRecordsContents(_.cloneDeep(reCurrentHealthRecordExamining));\r\n            setCurrentHealthRecordExamining(_.cloneDeep(reCurrentHealthRecordExamining));\r\n        }\r\n\r\n        if(sessionStorage.prevDataPredecessor){\r\n            const rePrevDataPredecessor = JSON.parse(sessionStorage.prevDataPredecessor);\r\n            setPrevDataPredecessor(_.cloneDeep(rePrevDataPredecessor));\r\n        }\r\n\r\n        if(sessionStorage.oldDataPredecessor){\r\n            const reOldDataPredecessor = JSON.parse(sessionStorage.oldDataPredecessor);\r\n            setOldDataPredecessor(_.cloneDeep(reOldDataPredecessor));\r\n        }\r\n        \r\n        setNewDataPredecessor({\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            categoryPres: []\r\n        })\r\n        \r\n        //sessionStorage.clear();\r\n\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //lấy danh sách đăng ký khám trong ngày\r\n    const handleGetRegistersByDateNow = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1 * 1000));\r\n        const response = await getRegistersByDateNow();\r\n        if(response !== 400){\r\n            const findListPantientNotExam = response.list.filter(item => item.state !== 1)\r\n            setListDataPatientsRegister(findListPantientNotExam);\r\n\r\n            let listPantientRegisterWaiting = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n            let listPantientRegisterDone = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n\r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const updatedList = [\r\n                { chipLabel: 'BN chờ khám', chipContent: listPantientRegisterWaiting.length },\r\n                { chipLabel: 'BN đã khám', chipContent: listPantientRegisterDone.length }\r\n            ]\r\n            setListPantientChipState(updatedList);\r\n        }\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n    }\r\n\r\n    const handleAppyPantientData = async (dataPantientItem) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingPrevDataExamining(true);\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            setPreviewPredecessor();\r\n        }\r\n        await handleGetMedicalDetailPatient(dataPantientItem.id);\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.stt = dataPantientItem.order;\r\n        _dataPantientsReadyExamining.id = dataPantientItem.id;\r\n        _dataPantientsReadyExamining.status = 0;\r\n        _dataPantientsReadyExamining.patientsId = dataPantientItem.patient.patientId;\r\n        _dataPantientsReadyExamining.patientsName = dataPantientItem.patient.fullName;\r\n        _dataPantientsReadyExamining.patientsDOB = dataPantientItem.patient.dayOfBirth;\r\n        _dataPantientsReadyExamining.patientsMonthsOld = dataPantientItem.patient.monthsOfAge;\r\n        _dataPantientsReadyExamining.patientsGender = dataPantientItem.patient.gender;\r\n        _dataPantientsReadyExamining.patientsHeight = dataPantientItem.height;\r\n        _dataPantientsReadyExamining.patientsWeight = dataPantientItem.weight;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsPhone = dataPantientItem.patient.phoneMother ? dataPantientItem.patient.phoneMother : dataPantientItem.patient.phoneFather;\r\n        _dataPantientsReadyExamining.patientsAddress = dataPantientItem.patient.fullAddress;\r\n        _dataPantientsReadyExamining.vaccination = dataPantientItem.vaccination === true ? true : false;\r\n        _dataPantientsReadyExamining.editExamining = dataPantientItem.state === 2 ? true : false;\r\n        _dataPantientsReadyExamining.backRegister = dataPantientItem.state === 3 ? true : false;\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n        setLoadingInfoPatient(false);\r\n        setLoadingPrevDataExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //nhấn chọn bệnh nhân để load vào ô thông tin bn\r\n    const handleSelectPantientExamining = async (dataPantientItem) => {\r\n        if(dataPantientItem.state === 0 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName || dataPantientItem.state === 3 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId === '' || dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 0){\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n            else{\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n        }\r\n        \r\n        else if(dataPantientItem.state === 2 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 1){\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n            else{\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    //bắt đầu khám bệnh cho bệnh nhân\r\n    const handleBeginExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            if(prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                    //backup prevDataPredecessor để khi cần dùng\r\n                    setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n                }\r\n\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleSetMainDataExamining();\r\n                toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n            }\r\n            else{\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleGetCategoryReExamining();\r\n            }\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error(response.data, {toastId: 'error1'});\r\n        }\r\n        setLoadingPatient(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu khám cho bệnh nhân khám mới\r\n    const handleSetMainDataExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        prevDataExamining.healthRecords.forEach((healthRecordsItem) => {\r\n            if(healthRecordsItem.medicalBookId === null){\r\n                healthRecordsItem.state = 1\r\n            }\r\n        })\r\n        \r\n        //tái khám và có tiền căn đã đụng\r\n        if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === false){\r\n            const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //tái khám và có tiền căn chưa đụng\r\n        else if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === true){\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n\r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //khám mới hoàn toàn\r\n        else{\r\n            const editDataCategoryPresForConclusion = prevDataExamining.categoryPres.map((predecessorItem) => {\r\n                const mainCategoryContentsExamining = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentOrder: categoryContentsItem.categoryContentOrder,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n    \r\n                const mainCategoryExamining = {\r\n                    categoryName: predecessorItem.categoryName,\r\n                    isPredecessor: true,\r\n                    categoryOrder: predecessorItem.categoryOrder,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n    \r\n                return mainCategoryExamining\r\n            })\r\n    \r\n            const editDataHealthRecordsForConclusion = prevDataExamining.healthRecords.find((healthRecordsItem) => healthRecordsItem.patientId === dataPantientsReadyExamining.patientsId)\r\n    \r\n            setDataExaminingForConclusion({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n                conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n                categories: editDataCategoryPresForConclusion,\r\n            });\r\n    \r\n            prevDataExamining.categoryPres.forEach((categoryPresItem, categoryPresIndex) => {\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.map((categoryContentsItem) => {\r\n                    return {\r\n                        ...categoryContentsItem,\r\n                        categoryPresOrder: categoryPresIndex\r\n                    }\r\n                })\r\n                return {\r\n                    ...categoryPresItem,\r\n                }\r\n            })\r\n            \r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //bắt đầu sửa dữ liệu khám bệnh\r\n    const handleBeginEditExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n            const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n            _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n            setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n            const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            await handleGetCategoryReExamining();\r\n            setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n            setLoadingPatient(false);\r\n        }\r\n    }\r\n\r\n    //lấy dữ liệu cây thư mục khám lại\r\n    const handleGetCategoryReExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        const responseGetUpdateMedicalBook = await getUpdateMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n\r\n        if(responseGetUpdateMedicalBook.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n\r\n            if(prevDataExamining.newPredecessor === false){\r\n                setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                //backup prevDataPredecessor để khi cần dùng\r\n                setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n            }\r\n            \r\n            await handleSetMainDataReExamining(responseGetUpdateMedicalBook.data);\r\n            toast.success(`Đang mở khám lại cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        }\r\n        else if(responseGetUpdateMedicalBook.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu cây thư mục khám của chức năng mở khám lại\r\n    const handleSetMainDataReExamining = async (responseGetUpdateMedicalBookData) => {\r\n        prevDataExamining.healthRecords[0].state = 1\r\n        prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBookData.categories\r\n\r\n        const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n            categoryName: category.categoryName,\r\n            isHealthRecord: true,\r\n            categoryContents: category.categoryContents.map(content => ({\r\n              ...content,\r\n              categoryContentQuestions: []\r\n            })) \r\n        }))\r\n\r\n        //demo truớc data kết luận\r\n        const demoDataExaminingForConclusion = {\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            isVaccination: prevDataExamining.vaccination,\r\n            medicalRegisterId: dataPantientsReadyExamining.id !== prevDataExamining.healthRecords[0].medicalRegisterId ? dataPantientsReadyExamining.id : prevDataExamining.healthRecords[0].medicalRegisterId,\r\n            conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n            categories: updateHealthRecordsCategoriesForConclusion\r\n        }\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        //sửa categories của conclusion phần sổ khám bệnh\r\n        let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.healthRecords[0].categories);\r\n\r\n        updateCategoriesForConclusion = updateCategoriesForConclusion.map(category => {\r\n            category.categoryContents = category.categoryContents.map(content => {\r\n                const questions = content.categoryContentQuestions;\r\n    \r\n                // Check if all questions have both categoryContentAnswer and categoryContentNote as null\r\n                const allNull = questions.every(q => q.categoryContentAnswer === null && q.categoryContentNote === null);\r\n                    \r\n                if (allNull) {\r\n                  // Set categoryContentQuestions to an empty array\r\n                  content.categoryContentQuestions = [];                    \r\n                } else {\r\n                  // Filter out questions with both categoryContentAnswer and categoryContentNote as null\r\n                  content.categoryContentQuestions = questions.filter(q => q.categoryContentAnswer !== null || q.categoryContentNote !== null);\r\n                }\r\n                    \r\n                return content;\r\n            });\r\n                  \r\n            category.isHealthRecord = true\r\n            return category;\r\n        })\r\n\r\n        demoDataExaminingForConclusion.categories = updateCategoriesForConclusion\r\n\r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        //tiền căn đợt trước đã đụng (newPredecessor = false)\r\n        if(responseGetUpdatePredecessor.status === 200)\r\n        {   \r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        \r\n        //tiền căn đợt trước chưa đụng (newPredecessor = true) \r\n        else{\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n        \r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n    }\r\n\r\n    //sửa dữ liệu tiền căn cho mở khám lại hoặc tái khám\r\n    const handleEditDataPredecessor = async (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        \r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        const findUpdatePredecessor = responseGetUpdatePredecessor.data.find(responseGetUpdatePredecessorItem => responseGetUpdatePredecessorItem.categoryOrder === categoryOrder);\r\n\r\n        mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n            if(categoryPresItem.categoryOrder === findUpdatePredecessor.categoryOrder){\r\n                categoryPresItem.categoryContents = findUpdatePredecessor.categoryContents\r\n                categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                    categoryContentsItem.isLock = false\r\n                })\r\n                categoryPresItem.isLock = false\r\n            }\r\n        })\r\n\r\n        const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n        \r\n        if(!newDataPredecessor.categoryPres.some(categoryPresItem => categoryPresItem.categoryName === categoryName)){\r\n            newDataPredecessor.categoryPres = prevDataPredecessor\r\n        }\r\n\r\n        handleSelectCategoryClick(selectCategoryReExamining);\r\n\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //huỷ không sửa dữ liệu tiền căn nữa\r\n    const handleCancelEditDataPredecessor = (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        setTimeout(() => {\r\n            const findPrevDataPredecessorByCategoryName = oldDataPredecessor.find(prevDataPredecessorItem => prevDataPredecessorItem.categoryOrder === categoryOrder);\r\n\r\n            if(findPrevDataPredecessorByCategoryName){\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        categoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                        categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                            categoryContentsItem.isLock = true\r\n                        })\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                newDataPredecessor.categoryPres.forEach((newDataPredecessorCategoryPresItem) => {\r\n                    if(newDataPredecessorCategoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        newDataPredecessorCategoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === categoryOrder){\r\n                        categoryPresItem.categoryContents = [];\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                const _newDataPredecessor = {...newDataPredecessor};\r\n                const removeCategoryPredecessor = _newDataPredecessor.categoryPres.filter(categoryPresItem => categoryPresItem.categoryOrder !== categoryOrder);\r\n                newDataPredecessor.categoryPres = removeCategoryPredecessor\r\n            }\r\n\r\n            setPrevDataPredecessor(_.cloneDeep(oldDataPredecessor));\r\n\r\n            const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n            handleSelectCategoryClick(selectCategoryReExamining)\r\n   \r\n            setOpenAlertProcessingBackdrop(false);\r\n        }, 300)       \r\n    }\r\n\r\n    //tạo data tiền căn để lưu lại khi tái khám hoặc mở khám lại\r\n    //câu trả lời dạng check chọn true false\r\n    const handleAnswerCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n    }\r\n\r\n    //câu trả lời dạng check chọn sửa lại note\r\n    const handleNoteCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n        const isEditNote = true;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], takenValue, isEditNote)\r\n        }, 300)\r\n    }\r\n\r\n    //câu trả lời dạng giá trị, sửa lại note\r\n    const handleNoteValueQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsValuePredecessorForReExamOrBackExam(\r\n                categoryContentsIndex,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, \r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], \r\n                takenValue\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const createSelectedQuestionsValuePredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue) => {\r\n        const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n        if(findNewDataPredecessorCategoryOrder){\r\n            // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n            const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n            if(findNewDataPredecessorCategoryContents){\r\n                // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue !== '');\r\n                const questionIndexRemove = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue === '');\r\n\r\n                if(questionIndex !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value khác rỗng => gán note cũ bằng note mới\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n                }\r\n\r\n                else if(questionIndexRemove !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value bằng rỗng => bỏ note đó\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexRemove, 1);\r\n                }\r\n\r\n                else{\r\n                    //nếu không tìm thấy, đẩy note mới vào\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                }\r\n            }\r\n\r\n            else{\r\n                // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                const newDataPredecessorCategoryContents = {\r\n                    categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                    categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                    categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                    categoryContentQuestions: [categoryContentQuestion],\r\n                    categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                    categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                }\r\n                findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n            }\r\n        }\r\n\r\n        else{\r\n            // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n            const newDataPredecessorCategoryContents = {\r\n                categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                categoryContentQuestions: [categoryContentQuestion],\r\n                categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n            }\r\n\r\n            const newDataPredecessorCategoryPres = {\r\n                categoryOrder: categorySelectedExamining.categoryOrder,\r\n                categoryName: categorySelectedExamining.categoryName,\r\n                newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                categoryContents: [newDataPredecessorCategoryContents]\r\n            }\r\n\r\n            newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n        }         \r\n    }\r\n\r\n    const createSelectedQuestionsPredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue, isEditNote) => {\r\n        if(isEditNote){\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){       \r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng rỗng\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n         \r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                        else{\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndex, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else{\r\n            //câu hỏi là dạng check câu trả lời là true\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote !== '');\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n                        }\r\n                        else{\r\n                            // Nếu tìm thấy categoryContentOrder, thêm câu hỏi mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }       \r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents)\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check câu trả lời là false\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndexNoteDontExit = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote === null);\r\n                        if(questionIndexNoteDontExit !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexNoteDontExit, 1);\r\n                        }\r\n                        else{\r\n                            const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n    }\r\n\r\n    //lưu dữ liệu tiền căn khi sửa xong\r\n    const handleEditDataPredecessorForSaving = (categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setTimeout(() => {\r\n            const findNewDataPredecessor = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPres => newDataPredecessorCategoryPres.categoryOrder === categoryOrder)\r\n\r\n            const findOldDataPredecessorCategoryOrder = oldDataPredecessor.find(oldDataPredecessorItem => oldDataPredecessorItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n\r\n            if(findOldDataPredecessorCategoryOrder){\r\n                // Nếu tìm thấy categoryOrder, duyệt qua categoryContents của findNewDataPredecessor\r\n                findNewDataPredecessor.categoryContents.forEach(findNewDataPredecessorCategoryContentsItem => {\r\n\r\n                    let content = findOldDataPredecessorCategoryOrder.categoryContents.find(findOldDataPredecessorCategoryContentsItem => findOldDataPredecessorCategoryContentsItem.categoryContentOrder === findNewDataPredecessorCategoryContentsItem.categoryContentOrder);\r\n\r\n                    if(content){\r\n                        // Loại bỏ các categoryContentQuestions trong content nếu không tồn tại trong findNewDataPredecessorCategoryContentsItem\r\n                        content.categoryContentQuestions = content.categoryContentQuestions.filter(q =>\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.some(newQ => newQ.categoryContentQuestionOrder === q.categoryContentQuestionOrder)\r\n                        );\r\n\r\n                        // Nếu tìm thấy categoryContentOrder, duyệt qua categoryContentQuestions\r\n                        if(findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.length !== 0){\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.forEach(findNewDataPredecessorQuestionItem => {\r\n                                if(findNewDataPredecessorQuestionItem.categoryContentAnswer === null && findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'check'){\r\n                                    // Nếu categoryContentAnswer là false và categoryContentNote là null, loại bỏ question đó\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else if(findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'string'){\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else{\r\n                                    const questionIndex = content.categoryContentQuestions.findIndex(q => q.categoryContentQuestionOrder === findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n\r\n                                    if (questionIndex !== -1) {\r\n                                        // Thay thế question nếu trùng khớp\r\n                                        content.categoryContentQuestions[questionIndex] = findNewDataPredecessorQuestionItem;\r\n                                    }\r\n\r\n                                    else {\r\n                                        // Thêm question mới nếu không trùng khớp\r\n                                        content.categoryContentQuestions.push(findNewDataPredecessorQuestionItem);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        }else{\r\n                            findOldDataPredecessorCategoryOrder.categoryContents = findOldDataPredecessorCategoryOrder.categoryContents.filter(contentCategoryContentsItem => contentCategoryContentsItem.categoryContentOrder !== findNewDataPredecessorCategoryContentsItem.categoryContentOrder)\r\n                        }\r\n                        \r\n                    }else{\r\n                        findOldDataPredecessorCategoryOrder.categoryContents.push(findNewDataPredecessorCategoryContentsItem);\r\n                    }\r\n\r\n                })\r\n            }else{\r\n                // Thêm toàn bộ object2 nếu không tìm thấy findNewDataPredecessor\r\n                oldDataPredecessor.push(findNewDataPredecessor)\r\n            }\r\n\r\n            oldDataPredecessor.forEach((oldDataPredecessorItem) => {\r\n                oldDataPredecessorItem.categoryContents = oldDataPredecessorItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length !== 0)\r\n            }) \r\n\r\n            const removeOldDataPredecessorCategoryPres = oldDataPredecessor.findIndex(item => item.categoryContents.length === 0);\r\n            if(removeOldDataPredecessorCategoryPres !== -1){\r\n                oldDataPredecessor.splice(removeOldDataPredecessorCategoryPres, 1);\r\n            }\r\n\r\n            const saveNewDataPredecessor = {\r\n                patientId: newDataPredecessor.patientId,\r\n                categoryPres: oldDataPredecessor\r\n            }\r\n\r\n            handleSaveNewDataPredecessor(saveNewDataPredecessor, findNewDataPredecessor)            \r\n        }, 500)\r\n    }\r\n\r\n    const handleSaveNewDataPredecessor = async (saveNewDataPredecessor, findNewDataPredecessor) => {\r\n        const responseCreateAddPredecessor = await createAddPredecessor(saveNewDataPredecessor);\r\n        if(responseCreateAddPredecessor.status === 200){\r\n\r\n            const _mainDataExamining = {...mainDataExamining};\r\n\r\n            _mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                if(categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder){\r\n                    categoryPresItem.categoryContents = findNewDataPredecessor.categoryContents\r\n                    categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                        categoryContentsItem.isLock = true\r\n                    })\r\n                    if(findNewDataPredecessor.categoryContents.length === 0){\r\n                        categoryPresItem.newCategoryPre = true\r\n                    }else{\r\n                        categoryPresItem.newCategoryPre = false\r\n                    }\r\n                    categoryPresItem.isLock = true\r\n                }\r\n\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.filter(item => item.categoryContentQuestions.length !== 0);\r\n            })\r\n\r\n            setMainDataExamining(_mainDataExamining);\r\n\r\n            const selectCategoryReExamining = _mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n            \r\n            toast.success('Đã cập nhật lại tiền căn', {toastId: 'handleSaveNewDataPredecessorSuccess'});\r\n            \r\n            handleSelectCategoryClick(selectCategoryReExamining);\r\n        }\r\n        else{\r\n            toast.error(responseCreateAddPredecessor.data, {toastId: 'handleSaveNewDataPredecessorError'});\r\n        }\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //tìm danh mục khám gồm tiền căn, sổ sức khỏe, dinh dưỡng...\r\n    const handleGetMedicalDetailPatient = async (id) => {\r\n        const responseDataExamining = await getMedicalDetailPatient(id);\r\n        setPrevDataExamining(responseDataExamining);\r\n\r\n        if(responseDataExamining.newPredecessor === false){\r\n            const previewDataPredecessor = responseDataExamining.categoryPres.filter(item => item.newCategoryPre === false).flatMap(item => item.categoryContents).flatMap(content => content.categoryContentQuestions).filter(question => question.categoryContentAnswer === true || question.categoryContentNote !== null)\r\n            setPreviewPredecessor(previewDataPredecessor);     \r\n        }\r\n    }\r\n\r\n    //chọn mục lục để khám\r\n    const handleSelectCategoryClick = async (categoryIncludeCotent) => {\r\n        if(openCollapseHealthRecords === true){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }\r\n\r\n        if(contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length !== 0){\r\n            setContentCategorySelectedExamining([]);\r\n        }\r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                ...categoryIncludeCotent,\r\n                //contentQuantity: categoryIncludeCotent.categoryContents.length\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining([]);\r\n    }\r\n\r\n    //chọn cây thư mục khám sổ sức khỏe\r\n    const handleSelectHealthRecords = (healthRecords) => {\r\n        if(openCollapseHealthRecords === false){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }        \r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                categoryName: 'Sổ sức khỏe',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(\r\n            {\r\n                healthRecordsContentsType: 'tree',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n    }\r\n\r\n    //chọn chỉ định một sổ khám bệnh (tìm chi tiết một sổ khám bệnh)\r\n    const handleSelectHealthRecordsItem = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingContentsExamining(true);\r\n\r\n        //dùng cho tái khám (có tiền căn đã đụng), mở khám lại\r\n        if(currentHealthRecordExamining){\r\n            if(healthRecordsContents.healthRecordsName !== examinationName){\r\n                if(healthRecordsState === 2){\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n                else if(healthRecordsState === 1 && dataPantientsReadyExamining.editExamining){\r\n                    setHealthRecordsContents({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    })\r\n\r\n                    setCurrentHealthRecordExamining({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    });\r\n                }\r\n                else if(currentHealthRecordExamining && dataPantientsReadyExamining.isContinueExam && healthRecordsState === 1){\r\n                    setContentCategorySelectedExamining([]);\r\n                }\r\n                else{\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n            }\r\n        }\r\n        //dùng cho tái khám (tiền căn chưa đụng), khám mới hoàn toàn\r\n        else{\r\n            await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n        }\r\n\r\n        setLoadingContentsExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const findHealthRecord = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        const responseMedicalBook = await getMedicalBook(medicalRegisterId);\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        });\r\n\r\n        if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && mainDataExamining.healthRecords[0].medicalBookId === null){\r\n            const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n                \r\n                const mainCategoryExamining = {\r\n                    categoryName: categoriesItem.categoryName,\r\n                    isHealthRecord: true,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n\r\n                return mainCategoryExamining\r\n            })\r\n\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    //chọn loại mục khám của một sổ khám bệnh\r\n    const handleOpenHealthRecordsItem = (categoryPatientsIndex) => {\r\n        setOpenCollapseHealthRecordsItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryPatientsIndex] = !newOpen[categoryPatientsIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleAnswerCheckQuestion = (categoryContentsIndex, questionIndex, answer) => {\r\n        //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng check\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else{\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }   \r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const handleNoteCheckQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            )\r\n        }, 1000)\r\n    }\r\n\r\n    const handleAnswerValueQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const handleAnswerCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else if(answer === true){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else{\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n    }\r\n    \r\n    //trả lời câu hỏi của mục sổ khám bệnh\r\n    const handleNoteCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            );\r\n        }, 1000)\r\n    }\r\n\r\n    const createSelectedQuestionsExaminingForConclusion = (categoryName, isPredecessor, categoryContentQuestion, questionOrder, categoryContentTitle, isEditNote) => {\r\n        if(categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            if(isEditNote){\r\n                if(categoryContentQuestion.categoryContentNote !== ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n\r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n\r\n                else if(categoryContentQuestion.categoryContentNote === ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentAnswer === null || categoryContentQuestionsItem.categoryContentAnswer === false){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n            }\r\n            else{\r\n                //question dạng check nhưng answer là true\r\n                if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n    \r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n    \r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n    \r\n                //question dạng check nhưng answer là false\r\n                else if(categoryContentQuestion.categoryContentAnswer === false && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentNote === null || categoryContentQuestionsItem.categoryContentNote === ''){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion)\r\n                }\r\n            }\r\n        }\r\n\r\n        else{\r\n            //question dạng giá trị nhưng khác rỗng\r\n            if(categoryContentQuestion.categoryContentNote !== '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                // Duyệt qua từng categoriesItem trong categories\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                    // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                    const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                        question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                    );\r\n                    \r\n                                    if (existingQuestion) {\r\n                                        // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                        existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                    } else {\r\n                                        // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                        categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                    }\r\n\r\n                                } else {\r\n                                // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                    categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                }\r\n                            }\r\n                        });        \r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n            //question dạng giá trị nhưng là rỗng\r\n            else if(categoryContentQuestion.categoryContentNote === '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n        }\r\n\r\n        if(isPredecessor === true){\r\n            createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n        }\r\n            \r\n    }\r\n\r\n    const createPreviewDataPredecessor = (categoryContentQuestion, isEditNote) => {\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            let _previewPredecessor = [...previewPredecessor];\r\n\r\n            const findQuestion = _previewPredecessor.find(item => item.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n            if(findQuestion){\r\n                if(findQuestion.categoryContentQuestionType === 'string'){\r\n                    if(categoryContentQuestion.categoryContentNote === ''){\r\n                        _previewPredecessor = previewPredecessor.filter(item => item.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName);\r\n                    }\r\n                    else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                        const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                        if(existingQuestion){\r\n                            existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                        }\r\n                        else{\r\n                            _previewPredecessor.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                }\r\n                else if(findQuestion.categoryContentQuestionType === 'check'){\r\n                    if(isEditNote){\r\n                        if(categoryContentQuestion.categoryContentNote === ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName && question.categoryContentAnswer === true);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                if(categoryContentQuestion.categoryContentAnswer === null || categoryContentQuestion.categoryContentAnswer === false){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    else{\r\n                        if(categoryContentQuestion.categoryContentAnswer === false || categoryContentQuestion.categoryContentAnswer === null){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                if(existingQuestion.categoryContentNote === '' || existingQuestion.categoryContentNote === null){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                                else if(existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                    existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                }               \r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentAnswer === true){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion || existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                            }\r\n                            else{\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }        \r\n                    }\r\n                }\r\n            }\r\n\r\n            else{\r\n                _previewPredecessor.push(categoryContentQuestion);\r\n            }\r\n            setPreviewPredecessor(_previewPredecessor)\r\n        }\r\n\r\n        else{\r\n            setPreviewPredecessor([categoryContentQuestion])\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    // useEffect(() => {\r\n    //     // Khởi tạo kết nối SignalR khi component mount\r\n    //     const token = localStorage.getItem(\"jwt\");\r\n    //     startSignalRConnection(token);\r\n\r\n    //     return () => {\r\n    //         // Dừng kết nối SignalR khi component unmount\r\n    //         stopSignalRConnection();\r\n    //     };\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        if(dataPantientsReadyExamining.status === 1 && alertVisible){\r\n                const userConfirmed = window.confirm(`Bạn đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, có chắc là muốn đăng xuất không?`);\r\n                if(userConfirmed){\r\n                    sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                    sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                    sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n\r\n                    if(currentHealthRecordExamining){\r\n                        sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                    }\r\n\r\n                    if(prevDataPredecessor){\r\n                        sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                    }\r\n\r\n                    if(oldDataPredecessor){\r\n                        sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                    }\r\n                    confirmAlert();\r\n                }\r\n                else{\r\n                    resetAlert();\r\n                }\r\n        }\r\n\r\n        else if(dataPantientsReadyExamining.status){\r\n            setIsFormDirty(true)\r\n\r\n            const handleBeforeUnload = (e) => {\r\n                const confirmationMessage = 'Bạn có chắc chắn muốn rời khỏi trang này?';\r\n                e.returnValue = confirmationMessage; // Hiển thị thông báo cảnh báo\r\n                return confirmationMessage;\r\n            };\r\n\r\n            const unblock = history.block((location, action) => {\r\n                if (isFormDirty) {\r\n                    const confirmLeave = window.confirm(\r\n                        'Bạn có chắc chắn muốn rời khỏi trang này? Những thay đổi sẽ không được lưu....'\r\n                    );\r\n                    if (confirmLeave) {\r\n                        const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                        sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                        sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                        sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                        sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                        if(currentHealthRecordExamining){\r\n                            sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                        }\r\n    \r\n                        if(prevDataPredecessor){\r\n                            sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                        }\r\n    \r\n                        if(oldDataPredecessor){\r\n                            sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                        }\r\n\r\n                        unblock(); // Hủy chặn để điều hướng\r\n                        history.push(location.pathname); // Điều hướng đến trang mới\r\n                        \r\n                    } else {\r\n                        return false; // Ngăn điều hướng\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n    \r\n            const handleUnload = () => {                \r\n                const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                \r\n                sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                if(currentHealthRecordExamining){\r\n                    sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                }\r\n    \r\n                if(prevDataPredecessor){\r\n                    sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                }\r\n    \r\n                if(oldDataPredecessor){\r\n                    sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                }\r\n            };\r\n            \r\n            window.addEventListener('beforeunload', handleBeforeUnload);\r\n            window.addEventListener('unload', handleUnload);\r\n            \r\n            return () => {\r\n                window.removeEventListener('beforeunload', handleBeforeUnload);\r\n                unblock();\r\n                window.removeEventListener('unload', handleUnload);                \r\n            };\r\n        }\r\n\r\n        else if(alertVisible){\r\n            confirmAlert();\r\n        }\r\n    }, [dataPantientsReadyExamining, mainDataExamining, currentHealthRecordExamining, dataExaminingForConclusion, alertVisible, confirmAlert, resetAlert, isLogOutClick, history, isFormDirty])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Doctor'){\r\n                history.push('/404');\r\n            }\r\n            else{\r\n                if(sessionStorage.dataPantientsReadyExamining){\r\n                    handleReloadUIWhenExamining();\r\n                }\r\n                else{\r\n                    handleGetRegistersByDateNow();\r\n                }\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(event.keyCode === 112){\r\n                event.preventDefault();\r\n            }\r\n\r\n            if(dataPantientsReadyExamining.patientsId !== '' && openAlertProcessingBackdrop === false && openModalCompleteExamining === false && event.keyCode !== 116){\r\n                if(event.keyCode === 112 && dataPantientsReadyExamining.status === 1){\r\n                    event.preventDefault();\r\n                    handleCancelExamining();\r\n                }\r\n\r\n                else if(event.keyCode === 113 && prevDataExamining){\r\n                    if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n                        handleBeginExaminingForPantient();\r\n                    }\r\n                    else if(dataPantientsReadyExamining.status === 1){\r\n                        alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n                    }\r\n                    else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n                        handleBeginEditExaminingForPantient();\r\n                    }\r\n                }\r\n\r\n                else if(event.keyCode === 115){\r\n                setOpenAlertProcessingBackdrop(true)\r\n                    if(dataPantientsReadyExamining.status === 1){\r\n                        setTimeout(() => {\r\n                            setOpenAlertProcessingBackdrop(false)\r\n                            setOpenModalCompleteExamining(true);\r\n                        }, 1000)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n\r\n    }, [dataPantientsReadyExamining, openModalCompleteExamining, openAlertProcessingBackdrop, openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n                <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                    <Grid container spacing={2} sx={{pl: 0.6, pr: 0.6}}>\r\n\r\n                        <Grid item xs={5}>\r\n                            {/* <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{`${moment().format('dddd')}, ${moment().format('LL')}`}</Typography> */}\r\n                            <TableContainer component={Paper} sx={{ height: '330px', boxShadow: 5, borderRadius: '10px' }}>\r\n                                {loadingPatient ?\r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                                            <CircularProgress />\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                                        </Box>        \r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Box>\r\n                                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                                                    <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                                                        <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                                        onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                                                    </Badge>\r\n                                                ))}\r\n                                            </Stack>\r\n                                            <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                                            <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                                                <TextField sx={{mb: 0.6, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                                        startAdornment: (\r\n                                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                                        ),\r\n                                                        endAdornment: (\r\n                                                            <InputAdornment position='end'>\r\n                                                                {searchPatientsQuery !== '' ? \r\n                                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                                                                    /> \r\n                                                                : \r\n                                                                    null\r\n                                                                }\r\n                                                            </InputAdornment>  \r\n                                                        )\r\n                                                    }}>\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Box>\r\n                                \r\n                                        <Table stickyHeader >\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listDataPatientsRegisterSort.map((dataPantientItem, dataPantientIndex) => (\r\n                                                    <TableRow hover role=\"checkbox\" key={dataPantientItem.order}\r\n                                                        sx={{ cursor: 'pointer', backgroundColor: dataPantientItem.state === 1 ? '#26c6da' : '#fff', \r\n                                                        ':hover': {backgroundColor: dataPantientItem.state === 1 ? '#00bcd4 !important' : 'rgba(0, 0, 0, 0.1) !important'} }} \r\n                                                        onClick={() => handleSelectPantientExamining(dataPantientItem)}\r\n                                                    >\r\n                                                        <TableCell align='left' sx={{width: '20px'}}>{dataPantientItem.order}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '150px'}}>{dataPantientItem.patient.patientId}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '240px'}}>{dataPantientItem.patient.fullName}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </>\r\n                                }\r\n                            </TableContainer>\r\n\r\n                            {/* cây thư mục khám */}\r\n                            <Box style={{width: '100%', marginTop: '10px', borderRadius: '10px', border: '2px solid red', height: '300px', overflow: 'auto'}} >\r\n                                {\r\n                                    mainDataExamining.length === 0 && loadingCategoryExamining === false || prevDataExamining === false ?\r\n                                        null\r\n                                    :\r\n                                    <>\r\n                                        {loadingCategoryExamining ?\r\n                                            <Box sx={{backgroundColor: '#e0e0e0', borderRadius: '10px', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu cây thư mục khám, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <>\r\n                                                <div className='category-scrollbar'>\r\n                                                    <List sx={{p: 0, display: 'inline-grid'}}>\r\n                                                        {mainDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                                            <Box sx={{display: 'inline-flex'}} key={`category ${predecessorIndex}`}>\r\n                                                                <ListItemButton\r\n                                                                    sx={{\r\n                                                                    width: 'fitContent', pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'},\r\n                                                                    backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffd54f' : ''}} \r\n                                                                    onClick={() => handleSelectCategoryClick(predecessorItem)}\r\n                                                                >\r\n                                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                        <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </Box>\r\n                                                                </ListItemButton>\r\n\r\n                                                                {predecessorItem.newCategoryPre === true && predecessorItem.newPredecessor === true ? \r\n                                                                    null\r\n                                                                :\r\n                                                                    <>\r\n                                                                        {predecessorItem.newCategoryPre === false  ?\r\n                                                                            <>  \r\n                                                                                <CheckCircleIcon sx={{color: 'green', fontSize: '1.4rem', margin: 'auto'}} titleAccess='đã theo dõi'/>\r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        {mainDataExamining.newPredecessor ? \r\n                                                                            null\r\n                                                                        :\r\n                                                                            predecessorItem.isLock === true ?\r\n                                                                                <>  \r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <EditIcon sx={{color: 'blue', fontSize: '1.6rem'}} titleAccess='Sửa'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>\r\n                                                                            \r\n                                                                            :\r\n                                                                                <>\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessorForSaving(predecessorItem.categoryOrder)}>\r\n                                                                                        <BeenhereIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Lưu'/>\r\n                                                                                    </IconButton>\r\n\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleCancelEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <CancelIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Hủy'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>   \r\n                                                                        }                                  \r\n                                                                    </>\r\n                                                                }\r\n                                                            </Box>\r\n                                                        ))}\r\n\r\n                                                        <ListItemButton \r\n                                                            sx={{pt: '4px', pb: '4px', borderRadius: '8px', backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffd54f' : '',\r\n                                                                ':hover': {backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                            onClick={() => handleSelectHealthRecords(mainDataExamining.healthRecords)}\r\n                                                        >\r\n                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}>\r\n                                                                <SendIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                            </ListItemIcon>\r\n\r\n                                                            <ListItemText primary={'Sổ sức khỏe'} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>                                                    \r\n                                                        </ListItemButton>\r\n\r\n                                                        <Collapse in={openCollapseHealthRecords} timeout=\"auto\" unmountOnExit>\r\n                                                            <div style={{ paddingLeft: '24px' }}>\r\n                                                                {mainDataExamining.healthRecords.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                    <ListItemButton key={`healthRecords ${healthRecordsIndex}`} sx={{pt: '0px', pb: '0px', width: 'auto', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                                        onClick={() => handleSelectHealthRecordsItem(healthRecordsItem.medicalRegisterId, healthRecordsItem.examinationName, healthRecordsItem.state)}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: healthRecordsItem.state === 1 ? 'red' : '#009688'}}}>\r\n                                                                            <FiberManualRecordIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={healthRecordsItem.examinationName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </ListItemButton>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </Collapse>\r\n                                                    </List>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </Box>\r\n                            {activeChip.chipOrder === 0 && dataPantientsReadyExamining.editExamining === false ?\r\n                                <div className='instruction' style={{display: 'flex', justifyContent: 'space-between', marginTop: '4.5px'}}>\r\n                                    <Button variant=\"contained\" color=\"error\" onClick={() => handleCancelExamining()}>Hủy khám (f1)</Button>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Bắt đầu khám (f2)</Button>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                </div>\r\n                            :\r\n                                dataPantientsReadyExamining.id === '' ?\r\n                                    null\r\n                                :\r\n                                    dataPantientsReadyExamining.id !== '' && dataPantientsReadyExamining.status === 0 ? \r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleDeleteExamining()}>Xóa khám (f1)</Button>\r\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Sửa đổi (f2)</Button>\r\n                                        </div>\r\n                                    :\r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleCancelExamining()}>Hủy thay đổi (f1)</Button>\r\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                        </div>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            {/* thông tin bệnh nhân */}\r\n                            <Box sx={{boxShadow: 4, borderRadius: '20px', border: '2px solid blue', height: '230px', mb: '8px', overflow: 'auto'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', mt: 0.6, mb: 0.6, fontWeight: 'bolder', fontSize: '1.2rem', textAlign: 'center'}}>Thông tin bệnh nhân</Typography>\r\n                                <Box sx={{pl: 2.8, pr: 2.8, mt: 1}}>\r\n                                    {loadingInfoPatient ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', mt: 4}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải thông tin bệnh nhân, hãy chờ một chút...</Typography>\r\n                                        </Box>\r\n                                    :\r\n                                        <>\r\n                                            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Mã BN: ${dataPantientsReadyExamining.patientsId || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Họ tên: ${dataPantientsReadyExamining.patientsName || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    {dataPantientsReadyExamining.patientsGender === true ? <MaleIcon sx={{color: 'coral', fontSize: '27px'}}/> : <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/>}\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Giới tính: ${dataPantientsReadyExamining.patientsGender !== '' ? dataPantientsReadyExamining.patientsGender === true ? 'Nam' : 'Nữ' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: {dataPantientsReadyExamining.patientsDOB ? moment(dataPantientsReadyExamining.patientsDOB).format(\"DD/MM/YYYY\") : ''}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Tháng tuổi: ${dataPantientsReadyExamining.patientsMonthsOld || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Sdt: ${dataPantientsReadyExamining.patientsPhone || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiBodyHeight style={{color: 'tomato', fontSize: '1.42rem', marginLeft: '2px'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 0.8}}>\r\n                                                        {`Chiều cao: ${dataPantientsReadyExamining.patientsHeight ? dataPantientsReadyExamining.patientsHeight + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Cân nặng: ${dataPantientsReadyExamining.patientsWeight ? dataPantientsReadyExamining.patientsWeight + ' kg' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <TbRulerMeasure style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Vòng đầu: ${dataPantientsReadyExamining.patientsHeadCircumference ? dataPantientsReadyExamining.patientsHeadCircumference + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={12} sx={{display: 'inline-flex'}}>\r\n                                                    <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Địa chỉ: ${dataPantientsReadyExamining.patientsAddress || ''}`}</Typography>\r\n                                                </Grid> \r\n\r\n                                                {previewPredecessor ? \r\n                                                    <>\r\n                                                        <Grid item xs={12} >\r\n                                                            <Box sx={{display: 'flex', flexWrap: 'wrap'}}>\r\n                                                                {previewPredecessor.map((item, index) => (\r\n                                                                    <Typography variant='subtitle1' sx={{ml: 0.5, fontSize: '1.1rem', color: 'mediumblue', fontWeight: 'bolder'}} key={index} >{`${item.categoryContentQuestionName}: ${item.categoryContentAnswer ? 'có' : ''} ${item.categoryContentNote !== null ? `${item.categoryContentNote}` : ''}, `}</Typography>\r\n                                                                ))}\r\n                                                            </Box>\r\n                                                            \r\n                                                        </Grid> \r\n                                                    </>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </Grid>\r\n                                        </>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {/* nội dung khám */}\r\n                            <div className='container-content-examining'>\r\n                                {\r\n                                    loadingPrevDataExamining ? \r\n                                        <>\r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu kỳ khám gần nhất, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    :\r\n                                    prevDataExamining ? \r\n                                        prevDataExamining.healthRecords.length === 1 && prevDataExamining.healthRecords[0].medicalBookId === null ? \r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <Typography variant='h6'>Bệnh nhân không có kỳ khám trước</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <div className='content-examining'><PreviewLastExamining prevDataExamining={prevDataExamining} /></div>\r\n                                    :\r\n                                        null\r\n                                }\r\n                                \r\n                                {categorySelectedExamining.categoryContents ? \r\n                                    <>\r\n                                        <div className='content-examining'>\r\n                                            {loadingContentsExamining ? \r\n                                                <>\r\n                                                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                        <CircularProgress />\r\n                                                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh, hãy chờ một chút...</Typography>\r\n                                                    </Box>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {categorySelectedExamining.newCategoryPre === true && categorySelectedExamining.isLock === true ? \r\n                                                        <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                            <Typography variant='h6'>Bệnh nhân không có tiền căn đang được theo dõi ở mục này</Typography>\r\n                                                        </Box>\r\n                                                    :\r\n                                                        contentCategorySelectedExamining.healthRecordsContentsType !== 'tree' && healthRecordsContents.length === 0 ? \r\n                                                            categorySelectedExamining.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                                <Box key={categoryContentsIndex} sx={categoryContentsItem.categoryContentTitle === null ? {marginTop: '30px'} : {}}>\r\n\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>{categoryContentsItem.categoryContentTitle || ''}</Typography>\r\n                                                                    {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                        <Box key={`categoryContentQuestionName ${questionIndex}`}>\r\n                                                                            <Grid container rowSpacing={0}>\r\n                                                                                {questionIndex === 0 ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                        </Grid>\r\n\r\n                                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                    <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                </Grid>\r\n\r\n                                                                                                <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            : \r\n                                                                                                <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                        }                                                                             \r\n                                                                                    </> \r\n                                                                                    : \r\n                                                                                    null\r\n                                                                                }\r\n                                                                                \r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1.2rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled={categorySelectedExamining.isLock === true ? true : false} \r\n                                                                                            checked={questionItem.categoryContentAnswer === true ? true : false } \r\n                                                                                            classes={{ root: classes.root }} color='error' \r\n                                                                                            sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} \r\n                                                                                            onClick={() => \r\n                                                                                                dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleAnswerCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer) : handleAnswerCheckQuestion(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer)} />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={7} >\r\n                                                                                            <div className='textfield-for-answer'>\r\n                                                                                                <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                        onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleNoteCheckQuestion(categoryContentsIndex, questionIndex, e.target.value)}\r\n                                                                                                        defaultValue={questionItem.categoryContentNote}\r\n                                                                                                    />\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>   \r\n                                                                                    :\r\n                                                                                    <>\r\n                                                                                        {categorySelectedExamining.categoryOrder === 4 ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8} >\r\n                                                                                                    <div className='textfield-for-answer'>\r\n                                                                                                        <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                                onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                                defaultValue={questionItem.categoryContentNote}\r\n                                                                                                            />\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            :\r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8}>\r\n                                                                                                    <div className='textfield-for-answer' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >\r\n                                                                                                        <input type='text' disabled={categorySelectedExamining.isLock === true ? true : false}\r\n                                                                                                            className='value-for-answer' \r\n                                                                                                            onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                            defaultValue={questionItem.categoryContentNote} \r\n                                                                                                        />\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                        }\r\n                                                                                    </>\r\n                                                                                }\r\n                                                                                \r\n                                                                            </Grid>\r\n                                                                        </Box>\r\n                                                                    ))}\r\n                                                                </Box>\r\n                                                            ))\r\n                                                        :\r\n                                                            contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length === 0 ? \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n                                                                    <TableContainer component={Paper}>\r\n                                                                        <Table stickyHeader>\r\n                                                                            <TableHead>\r\n                                                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                                                    <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n                                                                                </TableRow>\r\n                                                                            </TableHead>\r\n                                                                            <TableBody sx={{borderRadius: '0px'}}>\r\n                                                                                {contentCategorySelectedExamining.categoryContents.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                                    <TableRow hover role=\"checkbox\" key={healthRecordsIndex}>\r\n                                                                                        <TableCell align='left' sx={{width: '158px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{healthRecordsItem.examinationName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '144px'}}>{handleRenderExamsStatus(healthRecordsItem.state)}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '108px'}}>{moment(healthRecordsItem.timeRegister).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '115px'}}>{healthRecordsItem.doctorFullName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: 'auto'}}>{healthRecordsItem.conclusion}</TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                ))}\r\n                                                                            </TableBody>\r\n                                                                        </Table>\r\n                                                                    </TableContainer>\r\n                                                                </>\r\n                                                            :\r\n                                                                \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', lineHeight: 1, mt: 1}}>{currentHealthRecordExamining.healthRecordsName}</Typography>\r\n                                                                    <div className='health-record-content'>\r\n                                                                        <List sx={{p: 0}}>\r\n                                                                            {currentHealthRecordExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => (\r\n                                                                                <div key={`categoryPatients ${categoryPatientsIndex}`}>\r\n                                                                                    <ListItemButton     \r\n                                                                                        sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                                                                        onClick={() => handleOpenHealthRecordsItem(categoryPatientsIndex)}\r\n                                                                                    >\r\n                                                                                        <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseHealthRecordsItem[categoryPatientsIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                                                            <ListItemText primary={categoryPatientsItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                                        </Box>\r\n                                                                                    </ListItemButton>\r\n\r\n                                                                                    <Collapse in={openCollapseHealthRecordsItem[categoryPatientsIndex]} timeout=\"auto\" unmountOnExit>\r\n                                                                                        {categoryPatientsItem.categoryContents.map((categoryPatientsContentsItem, categoryPatientsContentsIndex) => (\r\n                                                                                            <div className='header-health-record' key={categoryPatientsContentsIndex} style={{marginTop: '15px', marginBottom: '15px', border: '2px solid #00bcd4', borderRadius: '20px'}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', textAlign: 'center'}}>{categoryPatientsContentsItem.categoryContentTitle}</Typography>\r\n                                                                                                \r\n                                                                                                <div className='content-health-record' style={{padding: '10px'}} >  \r\n                                                                                                    <Grid container rowSpacing={0}>\r\n                                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryPatientsContentsItem.categoryContentName}</Typography>\r\n                                                                                                        </Grid>\r\n\r\n                                                                                                        <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryPatientsContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                        </Grid>\r\n                                                                                                        \r\n                                                                                                        <Grid item xs={5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryPatientsContentsItem.categoryContentText}</Typography>\r\n                                                                                                        </Grid> \r\n\r\n                                                                                                        {categoryPatientsContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                                                            <Box key={`questionItem ${questionIndex} healthRecordsName ${contentCategorySelectedExamining.healthRecordsName}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                                                 </Grid>    \r\n\r\n                                                                                                                {questionItem.categoryContentQuestionType === 'check' ?\r\n                                                                                                                    <>\r\n                                                                                                                        <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                                                            <Checkbox classes={{ root: classes.root }} checked={questionItem.categoryContentAnswer === true ? true : false }\r\n                                                                                                                                disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                                                                onClick={(e) => handleAnswerCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, questionItem.categoryContentAnswer)} \r\n                                                                                                                            />\r\n                                                                                                                        </Grid>\r\n                                                                                                                    \r\n                                                                                                                        <Grid item xs={5} >\r\n                                                                                                                            <div className='note-for-answer'>\r\n                                                                                                                                <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                        disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                        onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                    />\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                                                                                                                        </Grid>\r\n                                                                                                                    </>\r\n                                                                                                                :\r\n                                                                                                                    <>\r\n                                                                                                                        <Grid item xs={8} >\r\n                                                                                                                            <div className='note-for-answer'>\r\n                                                                                                                                <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                        disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                        onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                    />\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                                                                                                                        </Grid>\r\n                                                                                                                    </>\r\n                                                                                                                }\r\n                                                                                                            </Box>\r\n                                                                                                        ))}\r\n                                                                                                    </Grid>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        ))}\r\n                                                                                    </Collapse>\r\n                                                                                </div>\r\n                                                                            ))}\r\n                                                                        </List>\r\n                                                                        \r\n                                                                        {currentHealthRecordExamining.conclusion !== null ?\r\n                                                                            <>\r\n                                                                                <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                                                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận của bác sĩ: ${currentHealthRecordExamining.conclusion}`}</Typography>\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                            :\r\n                                                                            null\r\n                                                                            \r\n                                                                        }\r\n                                                                        \r\n                                                                    </div>\r\n\r\n                                                                </>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n\r\n            <CompleteExamining openModalCompleteExamining={openModalCompleteExamining} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n                handleCompleteExaminingForPantient={handleCompleteExaminingForPantient} dataExaminingForConclusion={dataExaminingForConclusion}\r\n            />\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n            />\r\n            {/* <AlertConfirm openAlertConfirmModal={openAlertConfirmModal.open} onCloseAlertConfirmModal={setOpenAlertConfirmModal} \r\n                titleConfirm={openAlertConfirmModal.title} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDoctorExamining","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getReportPatient = async (dateSelectedReport) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Admin/GetReportPatient?dateStart=${dateSelectedReport.dateStart}&dateEnd=${dateSelectedReport.dateEnd}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getReportPatient\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridToolbarExport, GridToolbarColumnsButton, GridToolbarDensitySelector, GridToolbarFilterButton, GridToolbarContainer, viVN } from '@mui/x-data-grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//icon\r\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\r\n//moment\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\n//api\r\nimport { getReportPatient } from '../../Service/StatisticsService';\r\n\r\nfunction MainDashboard() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [dateSelectedReport, setDateSelectedReport] = useState({dateStart: '', dateEnd: ''})\r\n    const [mainDataDashboard, setMainDataDashboard] = useState([]);\r\n    const [loadingDataDashboard, setLoadingDataDashboard] = useState(false);\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'STT', width: 120, align: 'left', headerAlign: 'left', },\r\n        { field: 'fullName', headerName: 'Họ tên', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'dayExam', headerName: 'Ngày khám', width: 180, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'gender', headerName: 'Giới tính', width: 140, align: 'left', headerAlign: 'left' },\r\n        { field: 'dayOfBirth', headerName: 'Ngày sinh', width: 165, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'examName', headerName: 'Kỳ khám', width: 170, align: 'left', headerAlign: 'left' },\r\n        { field: 'phone', headerName: 'Điện thoại', width: 170, type: 'number', align: 'left', headerAlign: 'left'},\r\n        { field: 'district', headerName: 'Quận/Huyện', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'province', headerName: 'Tỉnh/Thành phố', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'address', headerName: 'Địa chỉ', width: 700, align: 'left', headerAlign: 'left' },\r\n    ];\r\n\r\n    // Hàm xử lý xuất file Excel\r\n    const handleExportExcel = () => {\r\n        // Tạo lại dữ liệu với các tiêu đề cột tùy chỉnh\r\n        const formattedRows = mainDataDashboard.map((row, index) => ({\r\n            'STT': index + 1,\r\n            'Họ tên': row.fullName, \r\n            'Ngày khám': row.dayExam,\r\n            'Giới tính': row.gender,\r\n            'Ngày sinh': row.dayOfBirth,\r\n            'Kỳ khám': row.examName,\r\n            'Điện thoại': row.phone,\r\n            'Quận/Huyện': row.district,\r\n            'Tỉnh/Thành phố': row.province,\r\n            'Địa chỉ': row.address\r\n          }));\r\n\r\n        // Tạo worksheet từ dữ liệu đã định dạng\r\n        const ws = XLSX.utils.json_to_sheet(formattedRows);\r\n\r\n        // Tạo workbook và thêm worksheet vào đó\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n\r\n        // Xuất file Excel\r\n        XLSX.writeFile(wb, `Danh sách bệnh nhân khám bệnh từ ${moment(dateSelectedReport.dateStart).format('DD-MM-YYYY')} đến ${moment(dateSelectedReport.dateEnd).format('DD-MM-YYYY')}.xlsx`);\r\n    };\r\n\r\n    // Custom toolbar bao gồm nút xuất Excel\r\n    const CustomToolbar = ({ handleExportExcel }) => {\r\n        return (\r\n            <GridToolbarContainer >\r\n                {/* Các chức năng của GridToolbar mặc định */}\r\n                <GridToolbarColumnsButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarFilterButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarDensitySelector sx={{fontSize: '16px'}}/>\r\n                <Button variant=\"text\" startIcon={< RiFileExcel2Fill/>} onClick={handleExportExcel} sx={{fontSize: '16px'}}>Xuất Excel</Button>\r\n            </GridToolbarContainer>\r\n        );\r\n    };\r\n\r\n    const onChangeDateStart = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateStart = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const onChangeDateEnd = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateEnd = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const handleGetReportPatient = async () => {\r\n        setLoadingDataDashboard(true);\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        const responseGetReportPatient = await getReportPatient(dateSelectedReport);\r\n        const editMainDataDashboard = responseGetReportPatient.map((item) => {\r\n            const dataReportPatient = {\r\n                patientId: item.patientId,\r\n                fullName: item.fullName,\r\n                dayExam: moment(item.dayExam).format('DD/MM/YYYY'),\r\n                gender: item.gender ? 'Nam' : 'Nữ',\r\n                dayOfBirth: moment(item.dayOfBirth).format('DD/MM/YYYY'),\r\n                examName: item.examName,\r\n                phone: item.phone,\r\n                district: item.district,\r\n                province: item.province,\r\n                address: item.address\r\n            }\r\n            return dataReportPatient\r\n        })\r\n        setMainDataDashboard(editMainDataDashboard);\r\n        setLoadingDataDashboard(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Admin'){\r\n                history.push('/404');\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(dateSelectedReport.dateStart !== '' && dateSelectedReport.dateEnd !== ''){\r\n            handleGetReportPatient();\r\n        }\r\n    }, [dateSelectedReport])\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1}}>\r\n            <Box sx={{display: 'flex', justifyContent: 'center'}}>\r\n                <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                    <DemoContainer components={['DatePicker']}> \r\n                        <DatePicker label=\"Từ ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateStart(value)}/> \r\n                        <DatePicker label=\"Đến ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateEnd(value)}/>                                   \r\n                    </DemoContainer>\r\n                </LocalizationProvider>\r\n            </Box>\r\n\r\n            <Box sx={{ height: 600, width: '100%', mt: 1.2 }}>\r\n                {loadingDataDashboard ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '80%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>  \r\n                    </>\r\n                    :\r\n                        mainDataDashboard.length !== 0 ?\r\n                            <>       \r\n                                <DataGrid \r\n                                    style={{ fontSize: '18px' }}\r\n                                    localeText={viVN.components.MuiDataGrid.defaultProps.localeText}\r\n                                    rows={mainDataDashboard.map((row, index) => ({\r\n                                        ...row,\r\n                                        id: index + 1,\r\n                                    }))}\r\n                                    columns={columns}\r\n                                    pageSizeOptions={[1]}\r\n                                    components={{\r\n                                        Toolbar: CustomToolbar, // Chèn toolbar vào đây\r\n                                      }}\r\n                                      componentsProps={{\r\n                                        toolbar: { handleExportExcel }, // Truyền hàm export vào props của toolbar\r\n                                      }}\r\n                                    disableRowSelectionOnClick\r\n                                    sx={{\r\n                                        '.MuiTablePagination-selectLabel': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                        '.MuiTablePagination-displayedRows': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        :\r\n                           <h5 style={{textAlign: 'center', color: 'blue'}}>Hãy chọn khoảng ngày khám để lấy dữ liệu thống kê</h5>\r\n                }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainDashboard","import { BrowserRouter, Route, Link, Switch, NavLink, HashRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport Header from \"../components/Nav/Header.jsx\";\nimport Page404 from \"../components/ErrorPage/Page404\";\nimport Login from \"../components/LoginAccount/Log-in\";\nimport MainMedicalRegister from \"../components/MedicalRegister/MainMedicalRegister.jsx\";\nimport MainAppointmentExamining from \"../components/MedicalAppointment/MainAppointmentExamining.jsx\";\nimport MainDoctorExamining from \"../components/DoctorExamining/MainDoctorExamining.jsx\";\nimport MainDashboard from \"../components/Dashboard/MainDashboard.jsx\";\n\nconst AppRoutes = (props) => {\n  return (\n    <>\n      <HashRouter>\n        {/* <Header />{\" \"} */}\n        <Switch>\n          <Route exact path=\"/\">home{\" \"}</Route>\n          <Route path=\"/login\"><Login /></Route>\n          <PrivateRoutes path=\"/medicalregister\" component={MainMedicalRegister}></PrivateRoutes>\n          <PrivateRoutes path=\"/doctor-examining\" component={MainDoctorExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/remind-examining\" component={MainAppointmentExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/dashboard\" component={MainDashboard}></PrivateRoutes>\n          <Route path=\"*\"><Page404 />{\" \"}</Route>\n          {/* <PrivateRoutes path=\"/users\" component={Users} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\nexport default AppRoutes;\n","import \"./App.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Nav/Header\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <div className=\"header-container\">\n          <Header />\n        </div>\n\n        <div className=\"app-container\">\n          <AppRoutes />\n        </div>\n      </HashRouter>\n\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}