{"version":3,"sources":["Service/UserService.jsx","components/ManageChangePassword/ChangePassword.jsx","assets/image/logo.png","components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop.jsx","context/UserContext.jsx","Service/SignalService.jsx","components/Nav/Header.jsx","routes/PrivateRoutes.js","components/ErrorPage/Page404.js","components/ManageRegister/Register.jsx","Service/MedicalService.jsx","components/LoginAccount/Log-in.jsx","components/ManageAlertProcessing/AlertProcessing.jsx","Service/PlaceService.jsx","components/ManageInfoPantients/ManageInfoPantients.jsx","components/MedicalRegister/ListPatientsRegister.jsx","components/ManageExaminingSession/ExaminingSession.jsx","components/ManageOldDisease/OldDisease.jsx","components/MedicalRegister/BookMedical.jsx","components/MedicalRegister/MainMedicalRegister.jsx","components/MedicalAppointment/MainAppointmentExamining.jsx","components/ManageCompleteExamining/CompleteExamining.jsx","components/DoctorExamining/PreviewLastExamining.jsx","components/DoctorExamining/MainDoctorExamining.jsx","Service/StatisticsService.jsx","components/Dashboard/MainDashboard.jsx","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["backendURL","ChangePassword","props","inputPasswordDefault","currentPassword","openCurrentPassword","newPassword","openNewPassword","inputPassword","setInputPassword","useState","loading","setLoading","handleCloseModalChangePassword","event","reason","setIsDialogChangePasswordOpen","setOpenModalChangePassword","setTimeout","handleChangePassword","async","Promise","resolve","handleValidate","isValid","toast","warning","toastId","inputPayloadPassword","password","passwordOld","responseUpdatePassword","token","localStorage","getItem","axios","put","concat","headers","Authorization","then","response","catch","error","updatePassword","status","data","success","_jsx","_Fragment","children","_jsxs","Dialog","maxWidth","fullWidth","open","openModalChangePassword","onClose","disableEscapeKeyDown","DialogTitle","sx","m","p","fontWeight","fontSize","IconButton","onClick","position","right","top","CloseIcon","DialogContent","dividers","display","flexDirection","alignItems","style","justifyContent","CircularProgress","TextField","autoFocus","label","variant","type","width","mb","onChange","e","value","_inputPassword","onChangeNewPassword","target","InputProps","endAdornment","InputAdornment","handleClickShowNewPassword","padding","VisibilityIcon","VisibilityOffIcon","onChangeCurrentPassword","handleClickShowCurrentPassword","Stack","spacing","direction","Button","height","color","margin","AlertProcessingBackdrop","Backdrop","zIndex","theme","drawer","backgroundColor","changeBackground","openAlertProcessingBackdrop","Box","Typography","mt","alertTitle","UserContext","React","createContext","UserProvider","_ref","userDefault","isAuthenticated","isLogin","user","setUser","alertVisible","setAlertVisible","isLogOutClick","setIsLogOutClick","onConfirm","setOnConfirm","setOpenAlertProcessingBackdrop","isDialogChangePasswordOpen","isOldDiseaseWithNullCodeWard","setIsOldDiseaseWithNullCodeWard","resetAlert","checkJWTExpire","result","getJWT","decodeJWT","JSON","parse","atob","split","parseJwt","currentDate","Date","exp","getTime","removeItem","sessionStorage","clear","useEffect","getUserLogin","Provider","loadingContext","loginContext","userContextLogin","logoutContext","triggerAlert","confirmCallback","confirmAlert","connection","startSignalRConnection","signalR","withUrl","accessTokenFactory","transport","WebSockets","ServerSentEvents","LongPolling","withAutomaticReconnect","configureLogging","Information","build","start","on","message","onReceiveMessage","callback","withRouter","useContext","location","useLocation","history","useHistory","anchorEl","setAnchorEl","Boolean","actionNursing","key","icon","LocalHospitalIcon","LinkComponent","NavLink","to","LocalPhoneIcon","actionDoctor","MedicationLiquidIcon","actionAdmin","BarChartIcon","userAction","setUserAction","pathname","findIndex","action","handleLogout","positionName","invoke","removeFromGroup","push","AppBar","Toolbar","Avatar","src","Logo","mr","BottomNavigation","showLabels","flexGrow","map","actionItem","BottomNavigationAction","handleClick","preventDefault","currentTarget","textTransform","userFullName","Menu","MenuItem","exact","PrivateRoutes","Route","path","component","Redirect","Page404","className","CreateAccount","showPassword","setShowPassword","handleCloseModalRegister","setOpenModalRegister","openModalRegister","handleClickShowPassword","Autocomplete","options","id","option","renderInput","params","createConfig","createMedicalBackRegister","post","dataPatientsRegister","createAddPredecessor","dataPredecessor","createNotificationForMedicalRegister","getRegistersByDateNow","config","get","getListMedicalExaminationsGiveRegister","dayOfBirth","getVaccinationByPatientId","patientId","getMedicalBook","medicalRegisterId","getUpdatePredecessor","getAppointmentsNextWeek","updateMedicalState","state","updateStateAppointment","dataAppointment","stateAppointment","medicalBookId","appointmentDate","Login","userAccount","setUserAccount","userName","handleLogin","userLogin","tokenDTO","setItem","userId","stringify","handleKeyDown","document","addEventListener","removeEventListener","Container","borderRadius","ml","textAlign","autoComplete","onChangeUserName","prevUserAccount","onChangeUserPassword","onKeyDown","which","code","handlePressEnter","cursor","Register","AlertProcessing","openAlertProcessing","getListProvince","getListDistrict","provinceId","getListWard","districtId","getFullAddressByIdWard","codeWard","ManageInfoPantients","dataPatientInfoDefault","examinationId","weight","headCircumference","vaccination","patient","identifier","address","fullName","gender","fullNameMother","phoneMother","fullNameFather","phoneFather","dataPatientInfoErrorDefault","title","isError","openTooltip","focus","examiningSession","province","district","ward","listGender","genderOrder","genderName","genderValue","selectedAutoCompleteDefault","openOption","typingRef","useRef","dateFieldRef","dataPatientInfoNotEdit","setDataPatientInfoNotEdit","dataPatientInfo","setDataPatientInfo","dataPatientInfoError","setDataPatientInfoError","selectedAutoComplete","setSelectedAutoComplete","listExaminingSession","setListExaminingSession","listProvince","setListProvince","listDistrict","setListDistrict","list","listWard","setListWard","focusField","setFocusField","setOpenAlertProcessing","tooltipTheme","createTheme","components","MuiTooltip","defaultProps","placement","arrow","componentsProps","tooltip","bgcolor","slotProps","popper","modifiers","name","offset","handleFocus","fieldName","prevSelectedAutoComplete","handleBlur","test","filterOptions","inputValue","lowercasedInput","toLowerCase","filter","lowercasedFullName","initials","word","join","includes","onChangeDOBToGetExaminingSession","responseListMedicalExaminationsGiveRegister","formattedDate","exams","handleCloseModalInfoPantients","prevListDistrict","prevListWard","setSelectedPantientInfo","setOpenModalInfoPantients","handleUpdateMedicalRegister","checkValidate","_dataPatientInfoError","Object","values","every","item","current","_","isEqual","updateMedicalRegister","setCompleteMedicalRegister","setIsEditedInfo","length","responseListProvince","handleGetListProvince","selectedPantientInfo","setIsContinueUpdateMedicalRegister","editPropsDataPatientInfo","cloneDeep","responseListDistrict","provinceCode","responseListWard","districtCode","selectedGender","find","indexListExamining","indexListProvince","indexListDistrict","indexListWard","wardCode","handleApplyPantientDataToField","openModalInfoPantients","isContinueUpdateMedicalRegister","pt","pb","flexWrap","pl","pr","ThemeProvider","Tooltip","marginTop","inputProps","maxLength","inputRef","input","defaultValue","takenValue","clearInterval","prevDataPatientsRegister","onChangeIdentifier","prevDataPatientInfo","onChangeFullName","getOptionLabel","renderOption","onSelectGender","onFocus","onBlur","disableClearable","popupIcon","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DemoContainer","DatePicker","format","moment","disableFuture","disableOpenPicker","textField","_d","today","yearsDifference","getFullYear","monthsDifference","getMonth","daysDifference","getDate","age","totalMonths","totalDays","isNaN","onChangeDOB","noOptionsText","onSelectExaminingSession","size","onSelectProvine","onSelectDistrict","onSelectWard","onChangeAddress","onChangeFullNameMother","onChangePhoneMother","onChangeFullNameFather","onChangePhoneFather","onChangeHeight","onChangeWeight","onChangeHeadCircumference","FormControlLabel","control","Checkbox","checked","onChangeVaccination","bool","DialogActions","ListPatientsRegister","activeChip","setActiveChip","chipOrder","chipLabel","listPantientChipState","setListPantientChipState","chipContent","listDataPatientsRegister","setListDataPatientsRegister","listDataPatientsAppointmentsToday","setListDataPatientsAppointmentsToday","searchPatientsQuery","setSearchPatientsQuery","listDataPatientsRegisterState","setListDataPatientsRegisterState","listDataPatientsRegisterSort","setListDataPatientsRegisterSort","isEditedInfo","searchPatients","patients","searchTerm","lowerCaseSearchTerm","patientObj","patientCode","handleGetRegistersByDateNow","responseGetAppointmentsToday","getAppointmentsToday","_listDataPatientsAppointmentsToday","updatedList","patientFullName","dateOfBirth","fullAddress","nextExamId","listPantientRegisterWaiting","patientsRegisterItem","listCountState","listPantientRegisterDone","setComponent1Loading","keyCode","completeMedicalRegister","border","boxShadow","pantientChipStateItem","pantientChipStateIndex","Badge","badgeContent","Chip","handleSelectedChip","chipIndex","placeholder","handleSearchPantient","startAdornment","SearchIcon","titleAccess","TableContainer","Paper","overflowX","borderBottomLeftRadius","borderBottomRightRadius","Table","stickyHeader","minWidth","TableHead","TableRow","TableCell","align","TableBody","patientsRegisterSortItem","patientsRegisterSortIndex","hover","role","onDoubleClick","responseVaccinationByPatientId","dataPantientOldOldDiseaseRegister","oldDisease","medicalTypeId","userIdDoctor","setDataPantientAppointmentsToday","handleSelectedPantientAppointmentsToday","handleSelectedPantientInfo","order","whiteSpace","overflow","textOverflow","ExaminingSession","isConfirmOpen","setIsConfirmOpen","handleListMedicalExaminationsGiveRegister","getListMedicalExaminationsGiveOldRegister","handleMedicalRegister","isAppointment","oldExams","setIsContinueSelectedExaminingSession","setOpenModalExaminingSession","handleResetField","createMedicalRegister","handleOpenConfirm","openModalExaminingSession","isContinueSelectedExaminingSession","monthsOfAge","Grid","container","rowSpacing","xs","oldExamItem","oldExamIndex","RadioGroup","onChangeRadioSelect","examItem","examIndex","Radio","OldDisease","dataPatientsForSearchOldDiseaseDefault","phone","dataPatientsForSearchOldDiseaseErrorDefault","listFoundOldDisease","setListFoundOldDisease","dataPatientsForSearchOldDisease","setDataPatientsForSearchOldDisease","dataPatientsForSearchOldDiseaseError","setDataPatientsForSearchOldDiseaseError","selectedRowIndex","setSelectedRowIndex","formRef","tableRef","handleEnterPress","_dataPatientsForSearchOldDiseaseError","handleCloseModalOldDisease","setOpenModalOldDisease","handleFindOldDisease","getListOldDisease","reset","querySelectorAll","forEach","dispatchEvent","Event","bubbles","handleClickFindOldDisease","validate","handleApplyDataPatientOldDisease","foundOldDiseaseItem","oldDiseaseWithNullCodeWard","setDataPatientsRegister","openModalOldDisease","ref","prevDataPatientsForSearchOldDisease","onChangePatientId","date","onChangeDayOfBirth","onChangePhone","tabIndex","prevIndex","Math","min","max","handleTableKeyDown","foundOldDiseaseIndex","selected","BookMedical","dataPatientsRegisterDefault","autocompleteValueDefault","medicalType","dataPatientsRegisterErrorDefault","listMedicalType","medicalTypeOrder","medicalTypeName","dataPatientsRegisterError","setDataPatientsRegisterError","autocompleteValue","setAutocompleteValue","firstFocusRef","nextFieldId","nextField","getElementById","select","replaceSpecialCharacters","str","replace","normalizedInput","prevAutocompleteValue","_dataPatientsRegisterError","dataPantientAppointmentsToday","handleMedicalBackRegister","responseCreateMedicalBackRegister","handleOpenModalOldDisease","_autocompleteValue","indexListGender","indexListMedicalType","handleApplyPantientOldDiseaseData","handleApplyPantientAppointmentsTodayData","onF2Press","setOnF2Press","onF4Press","setOnF4Press","onF8Press","setOnF8Press","minHeight","PopperProps","disabled","WebkitTextFillColor","InputLabelProps","shrink","DateField","disablePortal","onSelectMedicalType","paddingLeft","paddingRight","multiline","rows","onChangeReason","MainMedicalRegister","component1Loading","setHandleResetField","handleOpenModalExaminingSession","setHandleOpenModalExaminingSession","setHandleOpenModalOldDisease","marginLeft","Skeleton","MainAppointmentExamining","listPantientAppointmentChipState","listAppointment","setListAppointment","listDataPatientsAppointmentPaginate","setListDataPatientsAppointmentPaginate","listDataPatientsAppointmentState","setListDataPatientsAppointmentState","listDataPatientsAppointmentSort","setListDataPatientsAppointmentSort","page","setPage","pageCount","setPageCount","setDataAppointment","handlePaginate","calculatedPageCount","ceil","startIndex","newCurrentItems","slice","handleAcceptReExamining","findDataAppointment","responseUpdateStateAppointment","responseGetAppointmentsNextWeek","_listAppointmentNotRemind","_listAppointmentAcceptReExamining","_listAppointmentRejectReExamining","updateListPantientAppointmentChipState","dataAppointmentNotRemind","dataAppointmentAcceptReExamining","dataAppointmentRejectReExamining","handleRejectReExamining","handleGetAppointmentsNextWeek","pantientAppointmentChipStateItem","pantientAppointmentChipStateIndex","dataPantientAppointmentItem","dataPantientAppointmentIndex","examNameOld","nextExamName","disablePast","minDate","onChangeAppointmentDate","convertAppointmentDateFindDataAppointment","CheckIcon","CancelIcon","Pagination","count","handlePageChange","CompleteExamining","mainDataExaminingForConclusion","setMainDataExaminingForConclusion","textareaRef","classes","makeStyles","root","useStyles","handleCloseModalCompleteExamining","setOpenModalCompleteExamining","handleSetDataCompleteExamining","editDataExaminingForConclusion","clone","dataExaminingForConclusion","categories","categoriesItem","categoryContents","categoryContentsItem","categoryContentQuestions","responseAppointmentDate","getAppointmentDate","isVaccination","nextVaccination","reminder","conclusion","setSelectionRange","handleAddMedicalBook","some","isPredecessor","categoryPres","categoriesHealthRecordExamining","isHealthRecord","responseAddMedicalBook","dataMedicalBook","createAddMedicalBook","handleCompleteExaminingForPantient","openModalCompleteExamining","List","categoriesIndex","categoryName","categoryContentsIndex","marginBottom","categoryContentTitle","questionItem","questionIndex","borderRight","categoryContentName","categoryContentQuestionType","CheckBoxIcon","lineHeight","categoryContentCheck","categoryContentText","borderTop","categoryContentQuestionName","categoryContentAnswer","TextareaAutosize","categoryContentNote","onChangeExaminingConclusion","prevMainDataExaminingForConclusion","locale","PreviewLastExamining","previewDataExamining","setPreviewDataExamining","healthRecords","examinationName","timeUpdateState","medicakBook","nutritionals","vaccinationBook","loadingMedicalBook","setLoadingMedicalBook","openCollapsePredecessorItem","setOpenCollapsePredecessorItem","openCollapseMedicakBookItem","setOpenCollapseMedicakBookItem","prevDataExamining","responseMedicalBook","healthRecordsItem","newPredecessor","healthRecordsUpdate","newMedicalBook","medicalBookIdRecently","sort","a","b","categoryOrder","handleEditPrevDataExamining","predecessorItem","predecessorIndex","ListItemButton","prevOpen","newOpen","handleOpenPredecessorItem","ListItemIcon","transform","SendIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","predecessorItemCategoryContentsItem","predecessorItemCategoryContentsIndex","medicakBookItems","medicakBookIndex","handleOpenMedicakBookItem","medicakBookCategoryContentsItem","medicakBookCategoryContentsIndex","doctorFullName","MainDoctorExamining","dataPantientsReadyExaminingDefault","stt","patientsId","patientsName","patientsDOB","patientsMonthsOld","patientsGender","patientsHeight","patientsWeight","patientsHeadCircumference","patientsPhone","patientsAddress","isFormDirty","setIsFormDirty","dataPantientsReadyExamining","setDataPantientsReadyExamining","mainDataExamining","setMainDataExamining","setPrevDataExamining","openCollapseHealthRecords","setOpenCollapseHealthRecords","openCollapseHealthRecordsItem","setOpenCollapseHealthRecordsItem","categorySelectedExamining","setCategorySelectedExamining","contentCategorySelectedExamining","setContentCategorySelectedExamining","healthRecordsContents","setHealthRecordsContents","currentHealthRecordExamining","setCurrentHealthRecordExamining","previewPredecessor","setPreviewPredecessor","setDataExaminingForConclusion","oldDataPredecessor","setOldDataPredecessor","newDataPredecessor","setNewDataPredecessor","prevDataPredecessor","setPrevDataPredecessor","loadingPrevDataExamining","setLoadingPrevDataExamining","loadingPatient","setLoadingPatient","loadingInfoPatient","setLoadingInfoPatient","loadingCategoryExamining","setLoadingCategoryExamining","loadingContentsExamining","setLoadingContentsExamining","handleCancelExamining","editExamining","backRegister","handleDeleteExamining","window","confirm","responseDeleteMedicalBook","delete","deleteMedicalBook","handleStartExaminingButtonClick","handleBeginExaminingForPantient","alert","handleBeginEditExaminingForPantient","handleCompleteExaminingButtonClick","findListPantientNotExam","handleAppyPantientData","handleGetMedicalDetailPatient","dataPantientItem","_dataPantientsReadyExamining","isContinueExam","_listDataPatientsRegister","findIndexPatient","handleSetMainDataExamining","handleGetCategoryReExamining","editPrevDataExaminingCategoryPres","responseGetUpdatePredecessorItem","matchingPrevDataExamining","prevDataExaminingCategoryPresItem","isLock","content2","content1","categoryContentOrder","matchingContent1","isNullCategoryPres","responseGetUpdateMedicalBook","updateHealthRecordsCategoriesForConclusion","category","content","demoDataExaminingForConclusion","healthRecordsName","categoryPatients","updateCategoriesForConclusion","editCategoryContents","itemCategoryContents","newCategoriesDemoDataExaminingForConclusion","editDataCategoryPresForConclusion","mainCategoryContentsExamining","editDataHealthRecordsForConclusion","categoryPresItem","categoryPresIndex","categoryPresOrder","getUpdateMedicalBook","handleSetMainDataReExamining","responseGetUpdateMedicalBookData","questions","allNull","q","responseGetUpdatePredecessor","handleNoteValueQuestionPredecessorForReExamOrBackExam","_categorySelectedExamining","createSelectedQuestionsValuePredecessorForReExamOrBackExam","categoryContentQuestion","findNewDataPredecessorCategoryOrder","newDataPredecessorCategoryPresItem","findNewDataPredecessorCategoryContents","newDataPredecessorCategoryContentsItem","newDataPredecessorcategoryContentQuestionsItem","categoryContentQuestionOrder","questionIndexRemove","splice","newDataPredecessorCategoryContents","newDataPredecessorCategoryPres","newCategoryPre","createSelectedQuestionsPredecessorForReExamOrBackExam","isEditNote","questionIndexNoteDontExit","createPreviewDataPredecessor","handleSaveNewDataPredecessor","saveNewDataPredecessor","findNewDataPredecessor","responseCreateAddPredecessor","_mainDataExamining","selectCategoryReExamining","handleSelectCategoryClick","responseDataExamining","getMedicalDetailPatient","previewDataPredecessor","flatMap","question","healthRecordsContentsType","categoryIncludeCotent","findHealthRecord","healthRecordsState","editDataHealthRecordsItemForConclusion","_dataExaminingForConclusion","dataHealthRecordsItemForConclusionItem","handleAnswerValueQuestion","createSelectedQuestionsExaminingForConclusion","handleNoteCheckQuestionHealthRecords","categoryPatientsIndex","categoryPatientsContentsIndex","_healthRecordsContents","questionOrder","existingQuestion","categoryContentQuestionsItem","_previewPredecessor","findQuestion","handleReceiveMessage","medicalRegisterMessage","console","log","handleBeforeUnload","confirmationMessage","returnValue","unblock","block","_dataPatientsRegisterSort","handleUnload","reDataPatientsRegisterSort","dataPatientsRegisterSort","reDataPantientsReadyExamining","reMainDataExamining","reDataExaminingForConclusion","reCurrentHealthRecordExamining","rePrevDataPredecessor","reOldDataPredecessor","handleReloadUIWhenExamining","dataPantientIndex","handleSelectPantientExamining","CheckCircleIcon","edge","findUpdatePredecessor","handleEditDataPredecessor","EditIcon","handleEditDataPredecessorForSaving","findOldDataPredecessorCategoryOrder","oldDataPredecessorItem","findNewDataPredecessorCategoryContentsItem","findOldDataPredecessorCategoryContentsItem","newQ","findNewDataPredecessorQuestionItem","contentCategoryContentsItem","removeOldDataPredecessorCategoryPres","BeenhereIcon","handleCancelEditDataPredecessor","findPrevDataPredecessorByCategoryName","prevDataPredecessorItem","removeCategoryPredecessor","handleSelectHealthRecords","healthRecordsIndex","handleSelectHealthRecordsItem","FiberManualRecordIcon","columnSpacing","sm","md","PinIcon","PersonIcon","MaleIcon","FemaleIcon","CalendarMonthIcon","InfoIcon","PhoneIcon","GiBodyHeight","GiWeightScale","TbRulerMeasure","Home","index","handleAnswerCheckQuestionPredecessorForReExamOrBackExam","answer","handleAnswerCheckQuestion","handleNoteCheckQuestionPredecessorForReExamOrBackExam","handleNoteCheckQuestion","DescriptionIcon","timeRegister","categoryPatientsItem","handleOpenHealthRecordsItem","categoryPatientsContentsItem","handleAnswerCheckQuestionHealthRecords","currentHealthRecordsContent","getReportPatient","dateSelectedReport","dateStart","dateEnd","MainDashboard","setDateSelectedReport","mainDataDashboard","setMainDataDashboard","loadingDataDashboard","setLoadingDataDashboard","editMainDataDashboard","dayExam","examName","handleGetReportPatient","_dateSelectedReport","onChangeDateStart","onChangeDateEnd","DataGrid","localeText","viVN","MuiDataGrid","row","columns","field","headerName","headerAlign","pageSizeOptions","handleExportExcel","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","startIcon","RiFileExcel2Fill","toolbar","formattedRows","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","disableRowSelectionOnClick","AppRoutes","HashRouter","Switch","App","Header","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"ofAGA,MAAMA,EAAa,gC,WCkJJC,MAnIf,SAAwBC,GACpB,MAAMC,EAAuB,CACzBC,gBAAiB,GACjBC,qBAAqB,EACrBC,YAAa,GACbC,iBAAiB,IAGdC,EAAeC,GAAoBC,mBAASP,IAE5CQ,EAASC,GAAcF,oBAAS,GAEjCG,EAAiCA,CAACC,EAAOC,KACxCA,GAAqB,kBAAXA,IAITb,EAAMc,+BAA8B,GACpCd,EAAMe,4BAA2B,GACjCC,YAAW,KACPT,EAAiBN,EAAqB,GACvC,KACP,EAyCEgB,EAAuBC,UAGzB,GAFAR,GAAW,SACL,IAAIS,SAAQC,GAAWJ,WAAWI,EAAS,OAhB9BC,MACnB,IAAIC,GAAU,EAUd,MATqC,KAAlChB,EAAcJ,kBACbqB,IAAMC,QAAQ,sEAAoC,CAACC,QAAS,4BAC5DH,GAAU,GAGmB,KAA9BhB,EAAcF,cACbmB,IAAMC,QAAQ,4DAA+B,CAACC,QAAS,wBACvDH,GAAU,GAEPA,CAAO,EAMXD,GAAiB,CAChB,MAAMK,EAAuB,CAAEC,SAAUrB,EAAcF,YAAawB,YAAatB,EAAcJ,iBACzF2B,ODrCKX,WACrB,MAAMY,EAAQC,aAAaC,QAAQ,OACjC,aAAaC,IAAMC,IAAI,GAADC,OAAIrC,EAAU,mCAAmC4B,EAAsB,CACzFU,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADF,OAAYL,MAGhCQ,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,ECwB2CG,CAAehB,GAEf,MAAlCG,EAAuBc,QAAkD,8EAAhCd,EAAuBe,KAC/DrB,IAAMkB,MAAM,kEAAsC,CAAChB,QAAS,+BAEtB,MAAlCI,EAAuBc,OAC3BpB,IAAMkB,MAAMZ,EAAuBe,KAAM,CAACnB,QAAS,+BAEb,MAAlCI,EAAuBc,SAC3BpB,IAAMsB,QAAQhB,EAAuBe,KAAM,CAACnB,QAAS,gCACrDd,IAER,CACAD,GAAW,EAAM,EAGrB,OACIoC,cAAAC,WAAA,CAAAC,SACIC,eAACC,IAAM,CAACC,SAAU,KAAMC,WAAW,EAAMC,KAAMrD,EAAMsD,wBAAyBC,QAASA,CAAC3C,EAAOC,IAAWF,EAA+BC,EAAOC,GAAS2C,sBAAsB,EAAKR,SAAA,CAChLF,cAACW,IAAW,CAACC,GAAI,CAAEC,EAAG,EAAGC,EAAG,IAAKC,WAAY,SAAUC,SAAU,QAASd,SAAC,qCAC3EF,cAACiB,IAAU,CAACC,QAASA,IAAMrD,IAAiC+C,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACrGF,cAACsB,IAAS,CAACN,SAAS,aAGxBhB,cAACuB,IAAa,CAACC,UAAQ,EAACZ,GAAI,CAACa,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAUzB,SACxFvC,EACGqC,cAAA,OAAK4B,MAAO,CAACH,QAAS,OAAQI,eAAgB,UAAU3B,SACpDF,cAAC8B,IAAgB,MAGrB3B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAAC+B,IAAS,CAACC,WAAW,EAAMC,MAAM,8BAAeC,QAAQ,WAAWC,KAAM3E,EAAcD,gBAAkB,OAAS,WAAYqD,GAAI,CAAEwB,MAAO,OAAQC,GAAI,KAAOC,SAAWC,GAxDrKC,KACzB,MAAMC,EAAiB,IAAIjF,GAC3BiF,EAAenF,YAAckF,EAC7B/E,EAAiBgF,EAAe,EAqDoKC,CAAoBH,EAAEI,OAAOH,OACzMI,WAAY,CACRC,aACI7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAC1BC,eAACc,IAAU,CAACC,QAxEjB6B,KAC/B,MAAMN,EAAiB,IAAIjF,GAC3BiF,EAAelF,iBAAmBC,EAAcD,gBAChDE,EAAiBgF,EAAe,EAqEqD7B,GAAI,CAACoC,QAAS,OAAO9C,SAAA,CAAC,IAAE1C,EAAcD,gBAAkByC,cAACiD,IAAc,IAAMjD,cAACkD,IAAiB,YAMhKlD,cAAC+B,IAAS,CAACE,MAAM,wCAAoBC,QAAQ,WAAWC,KAAM3E,EAAcH,oBAAsB,OAAS,WAAYuD,GAAI,CAAEwB,MAAO,OAAQC,GAAI,KAAOC,SAAWC,GAxEzJC,KAC7B,MAAMC,EAAiB,IAAIjF,GAC3BiF,EAAerF,gBAAkBoF,EACjC/E,EAAiBgF,EAAe,EAqE4JU,CAAwBZ,EAAEI,OAAOH,OACrMI,WAAY,CACRC,aACI7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAC1BC,eAACc,IAAU,CAACC,QAxFbkC,KACnC,MAAMX,EAAiB,IAAIjF,GAC3BiF,EAAepF,qBAAuBG,EAAcH,oBACpDI,EAAiBgF,EAAe,EAqFyD7B,GAAI,CAACoC,QAAS,OAAO9C,SAAA,CAAC,IAAE1C,EAAcH,oBAAuB2C,cAACiD,IAAc,IAAMjD,cAACkD,IAAiB,YAMzKlD,cAACqD,IAAK,CAACC,QAAS,EAAGC,UAAU,SAAQrD,SACjCF,cAACwD,IAAM,CAAC5C,GAAI,CAAE6C,OAAQ,MAAOrB,MAAO,QAAUF,QAAQ,YAAYwB,MAAM,UAAU9B,MAAO,CAAE+B,OAAQ,QAAUzC,QAASA,IAAM/C,IAAuB+B,SAAC,gDASpL,E,sDCnJe,MAA0B,iC,4GCiB1B0D,MAXf,SAAiC1G,GAC7B,OACI8C,cAAC6D,IAAQ,CAACjD,GAAI,CAAE8C,MAAO,OAAQI,OAASC,GAAUA,EAAMD,OAAOE,OAAS,EAAGC,gBAAiB/G,EAAMgH,iBAAmB,qBAAuB,sBAAwB3D,KAAMrD,EAAMiH,4BAA4BjE,SACxMC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAUzB,SAAA,CACtEF,cAAC8B,IAAgB,CAAC4B,MAAM,YACxB1D,cAACqE,IAAU,CAACzD,GAAI,CAAC0D,GAAI,KAAOpC,QAAQ,YAAWhC,SAAEhD,EAAMqH,iBAIvE,ECXA,MAAMC,EAAcC,IAAMC,cAAc,MAElCC,EAAeC,IAAmB,IAAlB,SAAE1E,GAAU0E,EAE9B,MAAMC,EAAc,CAChBC,iBAAiB,EACjBC,SAAS,EACT/F,MAAO,KAGJgG,EAAMC,GAAWvH,mBAASmH,IAE1BlH,EAASC,GAAcF,oBAAS,IAEhCwH,EAAcC,GAAmBzH,oBAAS,IAC1C0H,EAAeC,GAAoB3H,oBAAS,IAC5C4H,EAAWC,GAAgB7H,mBAAS,OAEpCyG,EAA6BqB,GAAkC9H,oBAAS,IAExE+H,EAA4BzH,GAAiCN,oBAAS,IAEtEgI,EAA8BC,GAAmCjI,oBAAS,GAmB3EkI,EAAaA,KACfT,GAAgB,GAChBE,GAAiB,GACjBE,EAAa,KAAK,EAiChBM,EAAiBA,KACnB,IAAIC,GAAS,EACTC,EAAS9G,aAAaC,QAAQ,OAClC,GAAG6G,EAAO,CACN,IAAIC,EAZMhH,KACd,IACE,OAAOiH,KAAKC,MAAMC,KAAKnH,EAAMoH,MAAM,KAAK,IAC1C,CAAE,MAAO7D,GACP,OAAO,IACT,GAOoB8D,CAASN,GACrBO,EAAe,IAAIC,KACvB,OAAmB,IAAhBP,EAAUQ,IAAaF,EAAYG,WAElCxH,aAAayH,WAAW,OACxBzH,aAAayH,WAAW,aACxBC,eAAeC,QACRd,IAIPA,GAAS,EACFA,EAEf,CAGI,OADA7G,aAAayH,WAAW,aACjBZ,CACX,EAsBJ,OAnBAe,qBAAU,KACNjJ,GAAW,GAEX,GADqBqI,KAAKC,MAAMjH,aAAaC,QAAQ,cACrC,CAEZ,GADe2G,IACL,CACN,MAAMiB,EAAeb,KAAKC,MAAMjH,aAAaC,QAAQ,cACrD+F,EAAQ6B,EACZ,MAEI7B,EAAQJ,EAEhB,MACI5F,aAAayH,WAAW,OACxBzB,EAAQJ,GAEZjH,GAAW,EAAM,GAClB,IAGCuC,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACwE,EAAYuC,SAAQ,CACjBvE,MAAO,CAAEwC,OAAMrH,UAASqJ,eAzEZrJ,IACpBC,KAAcD,EAAQ,EAwE0BsJ,aApG9BC,IAClBjC,EAAQ,IAAKiC,IACbtJ,GAAW,EAAM,EAmGLuJ,cA9EMA,KAClBlC,EAAQ,IAAKJ,GAAc,EA6EAK,eAAckC,aAhGvBC,IAClBlC,GAAgB,GAChBE,GAAiB,GACjBE,GAAa,IAAM8B,GAAgB,EA6FoBC,aA1FtCA,KACbhC,GAAWA,IACfD,GAAiB,GACjBO,GAAY,EAuFyDA,aAAYR,gBACrEK,6BAA4BzH,gCAC5B0H,+BAA8BC,mCAChCzF,SACDA,IAGLF,cAAC4D,EAAuB,CACpBO,4BAA6BA,EAC7BI,WAAY,8DAEjB,E,+BCxIX,IAAIgD,GAAa,KAGjB,MAAMC,GAAyBpJ,UAC3B,GAAImJ,GAEA,OAAOA,GAGXA,IAAa,IAAIE,KACZC,QAAQ,GAADrI,OAZG,gCAYW,oBAAoB,CACtCsI,mBAAoBA,IAAM3I,EAC1B4I,UAAWH,KAA0BI,WACzBJ,KAA0BK,iBAC1BL,KAA0BM,cAEzCC,uBAAuB,CAAC,EAAG,IAAM,IAAO,MACxCC,iBAAiBR,KAAiBS,aAClCC,QAGL,UACUZ,GAAWa,QAIjBb,GAAWc,GAAG,kBAAmBC,IAEzBC,IACAA,GAAiBD,EACrB,GAGR,CAAE,MAAO3I,GAELzB,YAAW,IAAMsJ,GAAuBxI,EAAOuJ,KAAmB,IACtE,GAIEA,GAAoBC,IAClBjB,IACAA,GAAWc,GAAG,iBAAkBG,EAEhC,EC2HOC,6BA9If,SAAgBvL,GAEd,MAAM,KAAE8H,EAAI,cAAEmC,EAAa,aAAEC,EAAY,2BAAE3B,EAA0B,8BAAEzH,EAA6B,6BAAE0H,GAAiCgD,qBAAWlE,GAE5ImE,EAAWC,wBACXC,EAAUC,wBAGTtI,EAAyBvC,GAA8BP,oBAAS,IAGhEqL,EAAUC,GAAetL,mBAAS,MAEnCsB,EAAQC,aAAaC,QAAQ,OAE7BqB,EAAO0I,QAAQF,GAcfG,EAAgB,CACpB,CAAEC,IAAK,kBAAmB9I,SAAU,QAAS4B,MAAO,+BAAgBmH,KAAMpJ,cAACqJ,IAAiB,CAACzI,GAAI,CAACI,SAAU,MAAQsI,cAAeC,IAASC,GAAI,oBAChJ,CAAEL,IAAK,mBAAoB9I,SAAU,OAAQ4B,MAAO,oBAAamH,KAAMpJ,cAACyJ,IAAc,CAAC7I,GAAI,CAACI,SAAU,MAAQsI,cAAeC,IAASC,GAAI,sBAGtIE,EAAe,CACnB,CAAEP,IAAK,YAAa9I,SAAU,QAAS4B,MAAO,oBAAamH,KAAMpJ,cAAC2J,IAAoB,CAAC/I,GAAI,CAACI,SAAU,MAAQsI,cAAeC,IAASC,GAAI,sBAGtII,EAAc,CAClB,CAAET,IAAK,cAAe9I,SAAU,OAAQ4B,MAAO,mBAAYmH,KAAMpJ,cAAC6J,IAAY,CAACjJ,GAAI,CAACI,SAAU,MAAQsI,cAAeC,IAASC,GAAI,gBAG7HM,EAAYC,GAAiBrM,mBAAS,IAOvC8E,GALmBwH,EAKK9M,EAAMyL,SAASqB,SAJvBF,EAAWG,WAAUC,GAAUA,EAAOV,KAAOQ,KAD1CA,MAOzB,MAAMG,EAAeA,KACM,WAAtBnF,EAAKoF,aACNhD,GAAahJ,eDjBKA,WACpB,GAAImJ,GACA,UACUA,GAAW8C,OAAO,kBAE5B,CAAE,MAAO1K,GACL,CAGJ,ECSM2K,GACNrL,aAAayH,WAAW,OACxBzH,aAAayH,WAAW,aACxBS,IACA6B,EAAY,MACZH,EAAQ0B,KAAK,SAAS,KAKxBtL,aAAayH,WAAW,OACxBzH,aAAayH,WAAW,aACxBS,IACA6B,EAAY,MACZH,EAAQ0B,KAAK,UACf,EAmBF,OAhBA1D,qBAAU,QAEP,CAACnB,IAEJmB,qBAAU,KACiB,YAAtB7B,EAAKoF,aACNL,EAAcb,GAEc,WAAtBlE,EAAKoF,aACXL,EAAcL,GAEc,UAAtB1E,EAAKoF,cACXL,EAAcH,EAChB,GACC,CAAC5E,IAEqB,WAAtB2D,EAASqB,SAER7J,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACoE,IAAG,CAACxD,GAAI,CAAEwB,MAAO,QAAQlC,SACxBF,cAACwK,IAAM,CAAC5J,GAAI,CAACO,SAAU,SAASjB,SAC9BC,eAACsK,IAAO,CAAC7J,GAAI,CAACqD,gBAAiB,UAAWR,OAAQ,QAAQvD,SAAA,CAEtDF,cAAC0K,IAAM,CAACC,IAAKC,EAAMhK,GAAI,CAAEwB,MAAO,GAAIqB,OAAQ,GAAIa,GAAI,OAAQjC,GAAI,OAAQwI,GAAI,MAEpD,IAAzB7F,EAAKF,iBAA4B9F,EAChCmB,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAAC8K,IAAgB,CAACC,YAAU,EAACvI,MAAOA,EAClC5B,GAAI,CAACa,QAAS,OAAQI,eAAgB,aAAcoC,gBAAiB,UAAW+G,SAAU,GAAG9K,SAC5F4J,EAAWmB,KAAIC,GACdlL,cAACmL,IAAsB,CAErBlJ,MAAOiJ,EAAWjJ,MAClBmH,KAAM8B,EAAW9B,KACjBE,cAAe4B,EAAW5B,cAC1BE,GAAI0B,EAAW1B,GACf5I,GAAI,CAAC8C,MAAO,OAAQrD,SAAU6K,EAAW7K,WALpC6K,EAAW/B,SAUtBnJ,cAACwD,IAAM,CAACtC,QAAUqB,IAAM6I,OAhGnBtN,EAgG+ByE,QA/Fd,IAAjCmD,EACD5H,EAAMuN,iBAENrC,EAAYlL,EAAMwN,gBAJDxN,KAgGkC,EAAC8C,GAAI,CAAC8C,MAAO,OAAQ6H,cAAe,QAAQrL,SAAE8E,EAAKwG,eAC1FrL,eAACsL,IAAI,CAAC1C,SAAUA,EAAUxI,KAAMA,EAAME,QAASA,KAxF7DuI,EAAY,KAwFqE,EAAA9I,SAAA,CACjEF,cAAC0L,IAAQ,CAACxK,QAASA,IAAM,CAACjD,GAA2B,GAAOD,GAA8B,GAAOgL,EAAY,OAAO9I,SAAC,qCACrHF,cAAC0L,IAAQ,CAACxK,QAASiJ,EAAajK,SAAC,mCAKnCF,cAAAC,WAAA,CAAAC,SACEF,cAACoE,IAAG,CAACxD,GAAI,CAACO,SAAU,WAAYC,MAAO,IAAIlB,SACzCF,cAACuJ,IAAO,CAACoC,OAAK,EAACnC,GAAG,SAAQtJ,SAACF,cAACwD,IAAM,CAAC5C,GAAI,CAAC2K,cAAe,OAAQ7H,MAAO,QAAQxD,SAAC,0CAU7FF,cAAC/C,EAAc,CAACuD,wBAAyBA,EAAyBvC,2BAA4BA,EAA4BD,8BAA+BA,OAKtJgC,cAAAC,WAAA,GAEX,IClJe2L,OAnBQ1O,IACrB,MAAM8B,EAAQC,aAAaC,QAAQ,OAC7B4H,EAAeb,KAAKC,MAAMjH,aAAaC,QAAQ,cAErD,OAAIF,GAAS8H,EAET9G,cAAAC,WAAA,CAAAC,SACEF,cAAC6L,QAAK,CAACC,KAAM5O,EAAM4O,KAAMC,UAAW7O,EAAM6O,cAM5C/L,cAAAC,WAAA,CAAAC,SACEF,cAACgM,WAAQ,CAACxC,GAAG,YAGnB,E,OCJayC,OAbCA,KAEAnD,uBAEd,OACE9I,cAAA,OAAAE,SACEC,eAAA,OAAK+L,UAAU,UAAShM,SAAA,CACtBF,cAAA,MAAIkM,UAAU,QAAOhM,SAAC,QACtBF,cAAA,OAAKkM,UAAU,OAAMhM,SAAC,iFAEpB,E,oBCiDKiM,OAjDQjP,IACnB,MAAOkP,EAAcC,GAAmB3O,oBAAS,GAI3C4O,EAA2BA,CAACxO,EAAOC,KACpCA,GAAqB,kBAAXA,GAIXb,EAAMqP,sBAAqB,EAC7B,EAQF,OACIvM,cAAAC,WAAA,CAAAC,SACEC,eAACC,IAAM,CAACC,SAAU,KAAMC,WAAW,EAAMC,KAAMrD,EAAMsP,kBAAmB/L,QAASA,CAAC3C,EAAOC,IAAWuO,EAAyBxO,EAAOC,GAAS2C,sBAAsB,EAAKR,SAAA,CACtKF,cAACW,IAAW,CAACC,GAAI,CAAEC,EAAG,EAAGC,EAAG,IAAKC,WAAY,SAAUC,SAAU,QAASd,SAAC,+BAC3EF,cAACiB,IAAU,CAACC,QAASA,IAAMoL,IAA2B1L,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACjGF,cAACsB,IAAS,CAACN,SAAS,aAEtBb,eAACoB,IAAa,CAACC,UAAQ,EAAAtB,SAAA,CACrBF,cAAC+B,IAAS,CAACE,MAAM,iBAASC,QAAQ,WAAWtB,GAAI,CAAEwB,MAAO,OAAQC,GAAI,OACtErC,cAAC+B,IAAS,CAACE,MAAM,oBAAYC,QAAQ,WAAWtB,GAAI,CAAEwB,MAAO,OAAQC,GAAI,OACzErC,cAAC+B,IAAS,CAACE,MAAM,qBAAWC,QAAQ,WAAWC,KAAMiK,EAAe,OAAS,WAAYxL,GAAI,CAAEwB,MAAO,OAAQC,GAAI,KAChHO,WAAY,CACVC,aACE7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAC5BC,eAACc,IAAU,CAACC,QA9BEuL,IAAMJ,GAAiBD,GA8BSxL,GAAI,CAACoC,QAAS,OAAO9C,SAAA,CAAC,IAAEkM,EAAepM,cAACiD,IAAc,IAAMjD,cAACkD,IAAiB,YAKpIlD,cAAC0M,KAAY,CAACC,QAxBP,CACf,CAACC,GAAI,IAAKxC,aAAc,kCACxB,CAACwC,GAAI,IAAKxC,aAAc,mBAsBgBa,KAAK4B,GAAWA,EAAOzC,eAAe0C,YAAcC,GAAW/M,cAAC+B,IAAS,IAAKgL,EAAQ9K,MAAM,mBAAarB,GAAI,CAAEwB,MAAO,UAAWC,GAAI,OACrKrC,cAACqD,IAAK,CAACC,QAAS,EAAGC,UAAU,SAAQrD,SACnCF,cAACwD,IAAM,CAAC5C,GAAI,CAAE6C,OAAQ,MAAOrB,MAAO,QAAUF,QAAQ,YAAYwB,MAAM,UAAU9B,MAAO,CAAE+B,OAAQ,QAAUzC,QAASA,IAAMoL,IAA2BpM,SAAC,wCAK7J,ECzDX,MAAMlD,GAAa,gCAEbgQ,GAAeA,KACjB,MAAMhO,EAAQC,aAAaC,QAAQ,OAOnC,MALe,CACbI,QAAS,CACPC,cAAc,UAADF,OAAYL,IAGhB,EAmBXiO,GAA4B7O,UAC9B,MAAMY,EAAQC,aAAaC,QAAQ,OACnC,aAAaC,IAAM+N,KAAK,GAAD7N,OAAIrC,GAAU,6BAA6BmQ,EAAsB,CACpF7N,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADF,OAAYL,MAGhCQ,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAsBA2N,GAAuBhP,UACzB,MAAMY,EAAQC,aAAaC,QAAQ,OACnC,aAAaC,IAAM+N,KAAK,GAAD7N,OAAIrC,GAAU,+BAA+BqQ,EAChE,CACI/N,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADF,OAAYL,MAIpCQ,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAqBA6N,GAAuClP,UACzC,MAAMY,EAAQC,aAAaC,QAAQ,OAEnC,aAAaC,IAAM+N,KAAK,GAAD7N,OAAIrC,GAAU,sDADN,EAE3B,CACIsC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADF,OAAYL,MAIpCQ,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGA8N,GAAwBnP,UAC1B,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,sCAAsCwQ,GACzEhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAGA6N,GAAyCtP,UAC3C,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,wDAAAqC,OAAuDsO,GAAcH,GACxGhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAyBA+N,GAA4BxP,UAC9B,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,2CAAAqC,OAA0CwO,GAAaL,GAC1FhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAyBAiO,GAAiB1P,UACnB,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,mDAAAqC,OAAkD0O,GAAqBP,GAC1GhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGAuO,GAAuB5P,UACzB,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,sCAAAqC,OAAqCwO,GAAaL,GACrFhO,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAyBAwO,GAA0B7P,UAC5B,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,wCAAwCwQ,GAC3EhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EA8BAqO,GAAqB9P,MAAOwO,EAAIuB,KAClC,MAAMnP,EAAQC,aAAaC,QAAQ,OACnC,aAAaC,IAAMC,IAAI,GAADC,OAAIrC,GAAU,gCAAAqC,OAA+BuN,EAAE,WAAAvN,OAAU8O,GAAS,CAAC,EAAG,CACxF7O,QAAS,CACL,eAAgB,4BAChBC,cAAc,UAADF,OAAYL,MAGhCQ,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGA2O,GAAyBhQ,MAAOiQ,EAAiBC,KACnD,MAAMtP,EAAQC,aAAaC,QAAQ,OACnC,aAAaC,IAAMC,IAAI,GAADC,OAAIrC,GAAU,wCAAAqC,OAAuCgP,EAAgBE,cAAa,qBAAAlP,OAAoBgP,EAAgBG,gBAAe,sBAAAnP,OAAqBiP,GAAoB,CAAC,EAAG,CACpMhP,QAAS,CACL,eAAgB,4BAChBC,cAAc,UAADF,OAAYL,MAGhCQ,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,ECpISgP,OArJDA,KACV,MAAM,KAAEzJ,EAAI,eAAEgC,EAAc,aAAEC,GAAiByB,qBAAWlE,GACpDqE,EAAUC,wBAET3E,EAA6BqB,GAAkC9H,oBAAS,IAExEgR,EAAaC,GAAkBjR,mBAAS,CAACkR,SAAU,GAAI/P,SAAU,MACjE2N,EAAmBD,GAAwB7O,oBAAS,IACpD0O,EAAcC,GAAmB3O,oBAAS,GAsB3CmR,EAAczQ,UAChB,GAA4B,KAAzBsQ,EAAYE,SACXnQ,IAAMkB,MAAM,wDAEX,GAA4B,KAAzB+O,EAAY7P,SAChBJ,IAAMkB,MAAM,wDAEZ,CACA6F,GAA+B,GAC/B,MAAM/F,OXnDArB,OAAOwQ,EAAU/P,UACpBM,IAAM+N,KAAK,GAAD7N,OAAIrC,EAAU,0BAA0B,CAAE4R,WAAU/P,aAC1EW,MAAK,SAAUC,GAEZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACf,OAAOA,EAAMF,QACf,IW2CiCqP,CAAUJ,EAAYE,SAAUF,EAAY7P,UACnE,GAAuB,MAApBY,EAASI,OACRpB,IAAMkB,MAAMF,EAASK,MACrB0F,GAA+B,OAE/B,CACkC,WAA/B/F,EAASK,KAAKsK,oBACP5C,GAAuB/H,EAASK,KAAKiP,SAAS/P,OAGxDC,aAAa+P,QAAQ,MAAOvP,EAASK,KAAKiP,SAAS/P,OACnD,MAAM8P,EAAY,CACdhK,iBAAiB,EACjBC,SAAS,EACTkK,OAAQxP,EAASK,KAAKmP,OACtBL,SAAUnP,EAASK,KAAK8O,SACxBpD,aAAc/L,EAASK,KAAK0L,aAC5BpB,aAAc3K,EAASK,KAAKsK,cAGhCnL,aAAa+P,QAAQ,YAAa/I,KAAKiJ,UAAUJ,IACjD7H,EAAa6H,GAEqB,YAA/BrP,EAASK,KAAKsK,aACbvB,EAAQ0B,KAAK,oBAEsB,WAA/B9K,EAASK,KAAKsK,aAClBvB,EAAQ0B,KAAK,qBAEsB,UAA/B9K,EAASK,KAAKsK,cAClBvB,EAAQ0B,KAAK,cAEjB/E,GAA+B,EACnC,CACJ,GAmCJ,OA1BAqB,qBAAU,KACF7B,IAAiC,IAAzBA,EAAKF,iBACb+D,EAAQ0B,KAAK,KAGjB,MAAMvL,EAAQC,aAAaC,QAAQ,OAC7B4P,EAAY7P,aAAaC,QAAQ,aACnCF,GAAS8P,GACTjG,EAAQ0B,KAAK,IACjB,GACD,IAEH1D,qBAAU,KACN,MAAMsI,EAAiBrR,IAChBqG,GACCrG,EAAMuN,gBACV,EAKJ,OAFA+D,SAASC,iBAAiB,UAAWF,GAE9B,KACHC,SAASE,oBAAoB,UAAWH,EAAc,CACzD,GACF,CAAChL,IAGAhE,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACuP,KAAS,CAAClP,SAAS,KAAIH,SACpBF,cAACoE,IAAG,CAACxD,GAAI,CAAE0D,GAAI,EAAGkL,aAAc,QAAStP,SACrCC,eAACiE,IAAG,CAACxD,GAAI,CAAEE,EAAG,KAAMZ,SAAA,CAChBF,cAAC0K,IAAM,CAACC,IAAKC,EAAMhK,GAAI,CAAEwB,MAAO,IAAKqB,OAAQ,IAAKgM,GAAI,OAAQ5E,GAAI,OAAQxI,GAAI,KAC9ErC,cAACqE,IAAU,CAACzD,GAAI,CAAE8O,UAAW,SAAUnE,cAAe,YAAaxK,WAAY,SAAUC,SAAU,UAAWqB,GAAI,EAAGqB,MAAO,WAAaxB,QAAQ,KAAIhC,SAAC,kEACtJC,eAACiE,IAAG,CAAC2H,UAAU,OAAO4D,aAAa,MAAM/N,MAAO,CAAE8N,UAAW,UAAWxP,SAAA,CACpEF,cAAC+B,IAAS,CAACE,MAAM,oBAAYC,QAAQ,WAAWtB,GAAI,CAAEwB,MAAO,OAAQC,GAAI,KAAOC,SAAWC,IAAMqN,OAxG/FpN,EAwGgHD,EAAEI,OAAOH,WAvG/ImM,GAAekB,IACJ,IACAA,EACHjB,SAAUpM,MAJIA,KAwGgI,IAClIxC,cAAC+B,IAAS,CAACE,MAAM,qBAAWC,QAAQ,WAAWC,KAAMiK,EAAe,OAAS,WAAYxL,GAAI,CAAEwB,MAAO,OAAQC,GAAI,GAClHC,SAAWC,IAAMuN,OAjGXtN,EAiGgCD,EAAEI,OAAOH,WAhGnEmM,GAAekB,IACJ,IACAA,EACHhR,SAAU2D,MAJQA,KAiGgD,EAACuN,UAAYxN,GA1CjEA,KACN,KAAZA,EAAEyN,OAA2B,UAAXzN,EAAE0N,MACpBpB,GACJ,EAuC6FqB,CAAiB3N,GACtFK,WAAY,CACRC,aACI7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAC9BC,eAACc,IAAU,CAACC,QAhHhBuL,IAAMJ,GAAiBD,GAgH2BxL,GAAI,CAACoC,QAAS,OAAO9C,SAAA,CAAC,IAAEkM,EAAepM,cAACiD,IAAc,IAAMjD,cAACkD,IAAiB,YAKxI/C,eAACkD,IAAK,CAACC,QAAS,EAAGC,UAAU,SAAQrD,SAAA,CACjCF,cAACwD,IAAM,CAAC5C,GAAI,CAAE6C,OAAQ,QAASrB,MAAO,QAAUF,QAAQ,YAAYN,MAAO,CAAE+B,OAAQ,QAAUzC,QAAUqB,GAAMsM,IAAc3O,SAAC,6BAC9HF,cAACqE,IAAU,CAACzD,GAAI,CAAC8O,UAAW,SAAUhM,MAAO,MAAO1C,SAAU,QAASkB,QAAQ,YAAWhC,SAACF,cAAA,UAAQ4B,MAAO,CAACuO,OAAQ,WAAYjP,QAASA,IAAMqL,GAAqB,GAAMrM,SAAC,iCAC1KC,eAACkE,IAAU,CAACzD,GAAI,CAAC8O,UAAW,SAAUpL,GAAI,mBAAoBpC,QAAQ,YAAWhC,SAAA,CAAC,sCAAmBF,cAAA,UAAQ4B,MAAO,CAACuO,OAAQ,WAAYjP,QAASA,IAAMqL,GAAqB,GAAMrM,SAAC,yCAOxMF,cAACoQ,GAAQ,CACL5D,kBAAmBA,EAAmBD,qBAAsBA,IAGhEvM,cAAC4D,EAAuB,CACpBO,4BAA6BA,EAA6BqB,+BAAgCA,EAC1FjB,WAAY,yCAEjB,E,+CCvJI8L,OAff,SAAyBnT,GACrB,OACI8C,cAAAC,WAAA,CAAAC,SACIF,cAACI,IAAM,CAACE,WAAW,EAAMD,SAAU,KAAME,KAAMrD,EAAMoT,oBAAqB5P,sBAAsB,EAAKR,SACjGF,cAACuB,IAAa,CAAArB,SACVC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUH,cAAe,SAAUC,WAAY,UAAUzB,SAAA,CAChGF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,uCAMrE,E,wHClBA,MAAMlD,GAAa,gCAEbgQ,GAAeA,KACjB,MAAMhO,EAAQC,aAAaC,QAAQ,OAOnC,MALe,CACbI,QAAS,CACPC,cAAc,UAADF,OAAYL,IAGhB,EAGXuR,GAAkBnS,UACpB,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,oCAAoCwQ,GACvEhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAGA2Q,GAAkBpS,UACpB,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,oDAAAqC,OAAmDoR,GAAcjD,GACpGhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAGA6Q,GAActS,UAChB,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,gDAAAqC,OAA+CsR,GAAcnD,GAChGhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAGA+Q,GAAyBxS,UAC3B,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,+CAAAqC,OAA8CwR,GAAYrD,GAC7FhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EC8+CSiR,OAngDf,SAA6B5T,GAC3B,MAAM6T,EAAyB,CAC7BC,cAAe,GACfvN,OAAQ,GACRwN,OAAQ,GACRC,kBAAmB,GACnBnT,OAAQ,GACRoT,aAAa,EACbvE,GAAI,GACJwE,QAAS,CACPC,WAAY,GACZC,QAAS,GACTC,SAAU,GACV5D,WAAY,KACZkD,SAAU,GACVW,QAAQ,EACRC,eAAgB,GAChBC,YAAa,GACbC,eAAgB,GAChBC,YAAa,GACb/D,UAAW,KAITgE,EAA8B,CAClCR,WAAY,CAAES,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpEV,SAAU,CAAEO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClET,OAAQ,CAAEM,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEtE,WAAY,CAAEmE,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpEC,iBAAkB,CAAEJ,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC1EE,SAAU,CAAEL,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEG,SAAU,CAAEN,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEI,KAAM,CAAEP,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC9DX,QAAS,CAAEQ,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACjER,eAAgB,CAAEK,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACxEP,YAAa,CAAEI,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrEL,YAAa,CAAEE,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrExO,OAAQ,CAAEqO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEhB,OAAQ,CAAEa,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEf,kBAAmB,CAAEY,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,IAGvEK,EAAa,CACjB,CAACC,YAAa,EAAGC,WAAY,MAAOC,aAAa,GACjD,CAACF,YAAa,EAAGC,WAAY,UAAMC,aAAa,IAG5CC,EAA8B,CAClClB,OAAQ,CAAEhP,MAAO,KAAMmQ,YAAY,GACnCT,iBAAkB,CAAC1P,MAAO,KAAMmQ,YAAY,EAAOhV,SAAS,GAC5DwU,SAAU,CAAE3P,MAAO,KAAMmQ,YAAY,GACrCP,SAAU,CAAE5P,MAAO,KAAMmQ,YAAY,GACrCN,KAAM,CAAE7P,MAAO,KAAMmQ,YAAY,IAG7BC,EAAYC,iBAAO,MACnBC,EAAeD,iBAAO,OAErBlV,EAASC,GAAcF,sBAEvBqV,EAAwBC,GAA6BtV,sBACrDuV,EAAiBC,GAAsBxV,mBAASqT,IAChDoC,EAAsBC,GAA2B1V,mBAASmU,IAE1DwB,EAAsBC,GAA2B5V,mBAASgV,IAE1Da,EAAsBC,GAA2B9V,mBAAS,KAC1D+V,EAAcC,GAAmBhW,mBAAS,KAC1CiW,EAAcC,GAAmBlW,mBAAS,CAACmW,KAAM,GAAIlW,SAAS,KAC9DmW,EAAUC,GAAerW,mBAAS,CAACmW,KAAM,GAAIlW,SAAS,KAEtDqW,EAAYC,GAAiBvW,mBAAS,OAEtC4S,EAAqB4D,GAA0BxW,oBAAS,GAEzDyW,EAAeC,aAAY,CAC/BC,WAAY,CACVC,WAAY,CACVC,aAAc,CACZC,UAAW,SACXC,OAAO,EACPC,gBAAiB,CACfC,QAAS,CACP/T,GAAI,CACFgU,QAAS,YAGbH,MAAO,CACL7T,GAAI,CACF8C,MAAO,aAIbmR,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACNrI,QAAS,CACPsI,OAAQ,CAAC,GAAI,aAWzBC,EAAeC,IAEjB7B,EADe,WAAd6B,EACuBC,IACtBA,EAAyB5D,OAAOmB,YAAa,EACtC,IAAIyC,IAGO,qBAAdD,EACkBC,IACtBA,EAAyBlD,iBAAiBS,YAAa,EAChD,IAAIyC,IAGO,aAAdD,EACkBC,IACtBA,EAAyBjD,SAASQ,YAAa,EACxC,IAAIyC,IAGQ,aAAdD,EACiBC,IACtBA,EAAyBhD,SAASO,YAAa,EACxC,IAAIyC,IAIWA,IACtBA,EAAyB/C,KAAKM,YAAa,EACpC,IAAIyC,IAEf,EAGIC,EAAaA,CAAC7S,EAAO2S,KACZ,KAAV3S,GAA0B,eAAVA,GAuED,KAAVA,IACW,WAAd2S,EACD7B,GAAwB8B,IACtBA,EAAyB5D,OAAOmB,YAAa,EACtC,IAAIyC,MAGO,qBAAdD,EACN7B,GAAwB8B,IACtBA,EAAyBlD,iBAAiBS,YAAa,EAChD,IAAIyC,MAGO,aAAdD,EACN7B,GAAwB8B,IACxBA,EAAyBjD,SAASQ,YAAa,EACtC,IAAIyC,MAGO,aAAdD,EACN7B,GAAwB8B,IACtBA,EAAyBhD,SAASO,YAAa,EACxC,IAAIyC,MAGO,SAAdD,GACN7B,GAAwB8B,IACtBA,EAAyB/C,KAAKM,YAAa,EACpC,IAAIyC,MAGjB,EAGIjG,EAAiBrR,IAChB,QAAQwX,KAAKxX,EAAMqL,MAAsB,cAAdrL,EAAMqL,KAAqC,WAAdrL,EAAMqL,KAAkC,cAAdrL,EAAMqL,KAAqC,eAAdrL,EAAMqL,KAAsC,QAAdrL,EAAMqL,KAEtJrL,EAAMuN,gBACR,EAGIkK,EAAgBA,CAAC5I,EAAO/H,KAAsB,IAApB,WAAE4Q,GAAY5Q,EAC5C,MAAM6Q,EAAkBD,EAAWE,cAEnC,OAAO/I,EAAQgJ,QAAO9I,IACpB,MAAM+I,EAAqB/I,EAAO0E,SAASmE,cACrCG,EAAWhJ,EAAO0E,SAASnL,MAAM,KAAK6E,KAAI6K,GAAQA,EAAK,KAAIC,KAAK,IAAIL,cAE1E,OAAQE,EAAmBI,SAASP,IAAoBI,EAASG,SAASP,EAAgB,GAC1F,EAkIEQ,EAAmC7X,UACvCkV,GAAwB8B,IACtBA,EAAyBlD,iBAAiB1P,MAAQ,KAC3C,IAAI4S,MAGb9B,GAAwB8B,IACtBA,EAAyBlD,iBAAiBvU,SAAU,EAC7C,IAAIyX,MAGb,MAAMc,QAAoDxI,GAAuCyI,GACjG3C,EAAwB0C,EAA4CE,OAEpE9C,GAAwB8B,IACtBA,EAAyBlD,iBAAiBvU,SAAU,EAC7C,IAAIyX,KACX,EAobEiB,EAAgCA,CAACvY,EAAOC,KACzCA,GAAqB,kBAAXA,IAIX6V,GAAgB0C,IACdA,EAAiB3Y,SAAU,EAC3B2Y,EAAiBzC,KAAO,GACjB,IAAIyC,MAEbvC,GAAYwC,IACVA,EAAa5Y,SAAU,EACvB4Y,EAAa1C,KAAO,GACb,IAAI0C,MAEb/C,EAAwB,IACxBF,EAAwBZ,GACxBQ,EAAmBnC,GACnBiC,EAA0B,IAC1BI,EAAwBvB,GACxBjU,GAAW,GACXV,EAAMsZ,0BACNtZ,EAAMuZ,2BAA0B,GAClC,EA2QIC,EAA8BtY,UAClC,GAzMoBuY,MAClB,MAAMC,EAAwB,IAAIzD,GAClC,IAAI3U,GAAU,EAmMd,MAjM6C,KAA1C2U,EAAqB9B,WAAWS,QAC9B+E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBvF,WAAWY,OAAQ,EACzCgC,EAAc,eAEhBzV,GAAU,GAG4B,KAArCyU,EAAgB7B,QAAQG,WACzBqF,EAAsBrF,SAASO,MAAQ,8CACvC8E,EAAsBrF,SAASS,aAAc,EAC7C4E,EAAsBrF,SAASQ,SAAU,EACtC8E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBrF,SAASU,OAAQ,EACvCgC,EAAc,aAEhBzV,GAAU,GAG0B,KAAnCyU,EAAgB7B,QAAQI,SACzBoF,EAAsBpF,OAAOM,MAAQ,iDACrC8E,EAAsBpF,OAAOO,SAAU,EACvC6E,EAAsBpF,OAAOQ,aAAc,EACxC6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBpF,OAAOS,OAAQ,EACrCgC,EAAc,WAEhBzV,GAAU,GAG8B,KAAvCyU,EAAgB7B,QAAQzD,aACzBiJ,EAAsBjJ,WAAWmE,MAAQ,4CACzC8E,EAAsBjJ,WAAWoE,SAAU,EAC3C6E,EAAsBjJ,WAAWqE,aAAc,EAC5C6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBjJ,WAAWsE,OAAQ,EACrCa,EAAamE,SACfnE,EAAamE,QAAQhF,SAGzBzT,GAAU,GAGiC,KAA1C2U,EAAqBxF,WAAWmE,QACjC8E,EAAsBjJ,WAAWoE,SAAU,EACxC8E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBjJ,WAAWsE,OAAQ,EACrCa,EAAamE,SACfnE,EAAamE,QAAQhF,SAGzBzT,GAAU,GAGuC,OAAhD6U,EAAqBnB,iBAAiB1P,QACvCoU,EAAsB1E,iBAAiBJ,MAAQ,wDAC/C8E,EAAsB1E,iBAAiBH,SAAU,EACjD6E,EAAsB1E,iBAAiBF,aAAc,EAClD6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsB1E,iBAAiBD,OAAQ,EAC/CgC,EAAc,qBAEhBzV,GAAU,GAG+B,OAAxC6U,EAAqBlB,SAAS3P,QAC/BoU,EAAsBzE,SAASL,MAAQ,kDACvC8E,EAAsBzE,SAASJ,SAAU,EACzC6E,EAAsBzE,SAASH,aAAc,EAC1C6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBzE,SAASF,OAAQ,EACvCgC,EAAc,aAEhBzV,GAAU,GAG+B,OAAxC6U,EAAqBjB,SAAS5P,QAC/BoU,EAAsBxE,SAASN,MAAQ,oDACvC8E,EAAsBxE,SAASL,SAAU,EACzC6E,EAAsBxE,SAASJ,aAAc,EAC1C6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBxE,SAASH,OAAQ,EACvCgC,EAAc,aAEhBzV,GAAU,GAG2B,OAApC6U,EAAqBhB,KAAK7P,QAC3BoU,EAAsBvE,KAAKP,MAAQ,sDACnC8E,EAAsBvE,KAAKN,SAAU,EACrC6E,EAAsBvE,KAAKL,aAAc,EACtC6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBvE,KAAKJ,OAAQ,EACnCgC,EAAc,SAEhBzV,GAAU,GAG2B,KAApCyU,EAAgB7B,QAAQE,UACzBsF,EAAsBtF,QAAQQ,MAAQ,sDACtC8E,EAAsBtF,QAAQS,SAAU,EACxC6E,EAAsBtF,QAAQU,aAAc,EACzC6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBtF,QAAQW,OAAQ,EACtCgC,EAAc,YAEhBzV,GAAU,GAGkC,KAA3CyU,EAAgB7B,QAAQK,gBAAoE,KAA3CwB,EAAgB7B,QAAQO,iBAC1EiF,EAAsBnF,eAAeK,MAAQ,qDAC7C8E,EAAsBnF,eAAeM,SAAU,EAC/C6E,EAAsBnF,eAAeO,aAAc,EAChD6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBnF,eAAeQ,OAAQ,EAC7CgC,EAAc,mBAEhBzV,GAAU,GAG+B,KAAxCyU,EAAgB7B,QAAQM,aAA8D,KAAxCuB,EAAgB7B,QAAQQ,cACvEgF,EAAsBlF,YAAYI,MAAQ,iEAC1C8E,EAAsBlF,YAAYK,SAAU,EAC5C6E,EAAsBlF,YAAYM,aAAc,EAC7C6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBlF,YAAYO,OAAQ,EAC1CgC,EAAc,gBAEhBzV,GAAU,GAGmC,KAA5CoY,EAAsBlF,YAAYI,QACnC8E,EAAsBlF,YAAYK,SAAU,EACzC8E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBlF,YAAYO,OAAQ,EAC1CgC,EAAc,gBAEhBzV,GAAU,GAGmC,KAA5CoY,EAAsBhF,YAAYE,QACnC8E,EAAsBhF,YAAYG,SAAU,EACzC8E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBhF,YAAYK,OAAQ,EAC1CgC,EAAc,gBAEhBzV,GAAU,GAGkB,KAA3ByU,EAAgBxP,SACjBmT,EAAsBnT,OAAOqO,MAAQ,8CACrC8E,EAAsBnT,OAAOsO,SAAU,EACvC6E,EAAsBnT,OAAOuO,aAAc,EACxC6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBnT,OAAOwO,OAAQ,EACrCgC,EAAc,WAEhBzV,GAAU,GAGkB,KAA3ByU,EAAgBhC,SACjB2F,EAAsB3F,OAAOa,MAAQ,gDACrC8E,EAAsB3F,OAAOc,SAAU,EACvC6E,EAAsB3F,OAAOe,aAAc,EACxC6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsB3F,OAAOgB,OAAQ,EACrCgC,EAAc,WAEhBzV,GAAU,GAG6B,KAAtCyU,EAAgB/B,oBACjB0F,EAAsB1F,kBAAkBY,MAAQ,6DAChD8E,EAAsB1F,kBAAkBa,SAAU,EAClD6E,EAAsB1F,kBAAkBc,aAAc,EACnD6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsB1F,kBAAkBe,OAAQ,EAChDgC,EAAc,sBAEhBzV,GAAU,IAQ8C,IAAvD0Y,KAAEC,QAAQlE,EAAiBF,KAC5BtU,IAAMC,QAAQ,iEAAgC,CAACC,QAAS,aACxDH,GAAU,GAGZ4U,EAAwBwD,GACjBpY,CAAO,EAIbmY,GAAgB,CACjBzC,GAAuB,GACvB,MAAMzU,OJ/4BkBrB,WAC1B,MAAMY,EAAQC,aAAaC,QAAQ,OACnC,aAAaC,IAAMC,IAAI,GAADC,OAAIrC,GAAU,6BAA6BmQ,EAAsB,CACnF7N,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADF,OAAYL,MAGhCQ,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EIk4BuB2X,CAAsBnE,GACtB,MAApBxT,EAASI,QACVpB,IAAMsB,QAAQN,EAASK,KAAM,CAACnB,QAAS,aACvCzB,EAAMma,4BAA2B,GACjCna,EAAMoa,iBAAgB,GACtBjB,MAGA5X,IAAMkB,MAAMF,EAASK,KAAM,CAACnB,QAAS,WACrCzB,EAAMma,4BAA2B,GACjChB,KAEFnC,GAAuB,EACzB,GAuBF,OApBArN,qBAAU,KACmB,IAAxB4M,EAAa8D,QA5RYnZ,WAC5B,MAAMoZ,QAA6BjH,KACnCmD,EAAgB8D,EAAqB,EA2RnCC,EACF,GACC,IAEH5Q,qBAAU,KACL3J,EAAMwa,uBACPxa,EAAMya,oCAAmC,GA9RNvZ,WACrC8V,GAAuB,GAEvB,MAAM0D,EAA2B,IAAI3E,GACrC2E,EAAyB5G,cAAgB9T,EAAMwa,qBAAqB1G,cACpE4G,EAAyBnU,OAASvG,EAAMwa,qBAAqBjU,OAC7DmU,EAAyB3G,OAAS/T,EAAMwa,qBAAqBzG,OAC7D2G,EAAyB1G,kBAAoBhU,EAAMwa,qBAAqBxG,kBACxE0G,EAAyB7Z,OAASb,EAAMwa,qBAAqB3Z,OAC7D6Z,EAAyBzG,YAAcjU,EAAMwa,qBAAqBvG,YAClEyG,EAAyBhL,GAAK1P,EAAMwa,qBAAqB9K,GACzDgL,EAAyBxG,QAAQC,WAAanU,EAAMwa,qBAAqBtG,QAAQC,WACjFuG,EAAyBxG,QAAQE,QAAUpU,EAAMwa,qBAAqBtG,QAAQE,QAC9EsG,EAAyBxG,QAAQG,SAAWrU,EAAMwa,qBAAqBtG,QAAQG,SAC/EqG,EAAyBxG,QAAQzD,WAAazQ,EAAMwa,qBAAqBtG,QAAQzD,WACjFiK,EAAyBxG,QAAQP,SAAW3T,EAAMwa,qBAAqBtG,QAAQP,SAC/E+G,EAAyBxG,QAAQI,OAAStU,EAAMwa,qBAAqBtG,QAAQI,OAC7EoG,EAAyBxG,QAAQK,eAAiBvU,EAAMwa,qBAAqBtG,QAAQK,eACrFmG,EAAyBxG,QAAQM,YAAcxU,EAAMwa,qBAAqBtG,QAAQM,YAClFkG,EAAyBxG,QAAQO,eAAiBzU,EAAMwa,qBAAqBtG,QAAQO,eACrFiG,EAAyBxG,QAAQQ,YAAc1U,EAAMwa,qBAAqBtG,QAAQQ,YAClFgG,EAAyBxG,QAAQvD,UAAY3Q,EAAMwa,qBAAqBtG,QAAQvD,UAEhFqF,EAAmBgE,KAAEW,UAAUD,IAC/B5E,EAA0BkE,KAAEW,UAAUD,IAEtC,MAAMnY,QAAiBmR,GAAuB1T,EAAMwa,qBAAqBtG,QAAQP,UAC3EiH,QAA6BtH,GAAgB/Q,EAASsY,cAC5DnE,GAAgB0C,IACdA,EAAiBzC,KAAOiE,EACjB,IAAIxB,MAEb,MAAM0B,QAAyBtH,GAAYjR,EAASwY,cACpDlE,GAAYwC,IACVA,EAAa1C,KAAOmE,EACb,IAAIzB,MAEb,MAAML,QAAoDxI,GAAuCxQ,EAAMwa,qBAAqBtG,QAAQzD,YACpI6F,EAAwB0C,EAA4CE,OAEpE,MAAM8B,EAAiB5F,EAAW6F,MAAK3G,GAAUA,EAAOiB,cAAgBvV,EAAMwa,qBAAqBtG,QAAQI,SACrG4G,EAAqBlC,EAA4CE,MAAMnM,WAAUiI,GAAoBA,EAAiBtF,KAAO1P,EAAMwa,qBAAqB1G,gBACxJqH,EAAoB5E,EAAaxJ,WAAUkI,GAAYA,EAASlC,OAASxQ,EAASsY,eAClFO,EAAoBR,EAAqB7N,WAAUmI,GAAYA,EAASnC,OAASxQ,EAASwY,eAC1FM,EAAgBP,EAAiB/N,WAAUoI,GAAQA,EAAKpC,OAASxQ,EAAS+Y,WAEhFlF,GAAyB8B,IACvBA,EAAyB5D,OAAOhP,MAAQ0V,EACxC9C,EAAyBlD,iBAAiB1P,MAAQ0T,EAA4CE,MAAMgC,GACpGhD,EAAyBjD,SAAS3P,MAAQiR,EAAa4E,GACvDjD,EAAyBhD,SAAS5P,MAAQsV,EAAqBQ,GAC/DlD,EAAyB/C,KAAK7P,MAAQwV,EAAiBO,GAChDnD,KAGTxX,GAAW,GACXsW,GAAuB,EAAM,EAuO3BuE,GACF,GACC,CAACvb,EAAMwa,uBAEV7Q,qBAAU,KACL3J,EAAMwb,wBAA0Bxb,EAAMyb,kCAA+C,IAAZhb,IAC1E+Y,IACAxZ,EAAMya,oCAAmC,GAC3C,GACC,CAACza,EAAMyb,gCAAiChb,IAGzCwC,eAAAF,WAAA,CAAAC,SAAA,CACEC,eAACC,IAAM,CAACE,WAAW,EAAMD,SAAS,KAAKE,KAAMrD,EAAMwb,uBAAwBjY,QAASA,CAAC3C,EAAOC,IAAWsY,EAA8BvY,EAAOC,GAAQmC,SAAA,CAClJF,cAACW,IAAW,CAACC,GAAI,CAAEE,EAAG,EAAGC,WAAY,SAAUC,SAAU,OAAQ0O,UAAW,SAAUhM,MAAO,QAASxD,SAAC,mCACvGF,cAACiB,IAAU,CAACC,QAASA,IAAMmV,IAAiCzV,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACvGF,cAACsB,IAAS,CAACN,SAAS,aAEtBhB,cAACuB,IAAa,CAACC,UAAQ,EAACZ,GAAI,CAACgY,GAAI,IAAKC,GAAI,KAAK3Y,SAC7CC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,gBAAiBiX,SAAU,OAAQC,GAAI,IAAKC,GAAI,IAAK3W,GAAI,IAAKnC,SAAA,CAEzGF,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqB9B,WAAWS,QAAavR,KAAM4S,EAAqB9B,WAAWW,YAAawC,UAAU,OAAMtU,SAC7JF,cAAC+B,IAAS,CAACpC,OAA0D,IAA5CwT,EAAqB9B,WAAWU,QACvD9P,MAAM,4BAAeC,QAAQ,WAC7BtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAAC+W,UAAW,UACvDC,WAAY,CAAEC,UAAW,IACzBC,SAAWC,GAAUA,GAAwB,eAAfvF,GAA+BuF,EAAMtH,QACnEuH,aAAcvG,EAAgB7B,QAAQC,WACtC/O,SAAWC,GA/5BGC,KAC1B,GAAa,KAAVA,EAAa,CACI,eAAfwR,GACDC,EAAc,MAGhB,MAAMwF,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAC7B,MAAM0Y,EAAwB,IAAIzD,GAC/BsG,EAAWlC,OAAS,IACrBX,EAAsBvF,WAAWS,MAAQ,8DACzC8E,EAAsBvF,WAAWW,aAAc,EAC/C4E,EAAsBvF,WAAWU,SAAU,EAC3C6E,EAAsBvF,WAAWY,OAAQ,EACzCmB,EAAwBwD,KAGxB1D,GAAmByG,IACjBA,EAAyBvI,QAAQC,WAAaoI,EACvC,IAAKE,MAGd/C,EAAsBvF,WAAWS,MAAQ,GACzC8E,EAAsBvF,WAAWW,aAAc,EAC/C4E,EAAsBvF,WAAWU,SAAU,EAC3C6E,EAAsBvF,WAAWY,OAAQ,EACzCmB,EAAwBwD,GAC1B,GACC,IACL,KACI,CACgB,eAAf5C,GACDC,EAAc,MAGhB,MAAM2C,EAAwB,IAAIzD,GAClCyD,EAAsBvF,WAAWS,MAAQ,GACzC8E,EAAsBvF,WAAWW,aAAc,EAC/C4E,EAAsBvF,WAAWU,SAAU,EAC3C6E,EAAsBvF,WAAWY,OAAQ,EACzCmB,EAAwBwD,EAC1B,GAk3B6BgD,CAAmBrX,EAAEI,OAAOH,aAKnDxC,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqB5B,SAASO,QAAavR,KAAM4S,EAAqB5B,SAASS,YAAawC,UAAU,MACnJK,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACNrI,QAAS,CAAEsI,OAAQ,EAAE,IAAK,QAIhC/U,SAEFF,cAAC+B,IAAS,CAACpC,OAAwD,IAA1CwT,EAAqB5B,SAASQ,QACrD9P,MAAM,iBAASC,QAAQ,WACvBtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAAC+W,UAAW,UACvDG,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjEuH,aAAcvG,EAAgB7B,QAAQG,SACtCjP,SAAWC,GAt4BCC,KACxB,MAAMiX,EAAajX,EAEhBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAU7B,GATAgV,GAAmB2G,IACnBA,EAAoBzI,QAAQG,SAAWkI,EAC9B,IAAII,MAGK,aAAf7F,GACDC,EAAc,MAGbd,EAAqB5B,SAASQ,QAAQ,CACvC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBrF,SAASO,MAAQ,GACvC8E,EAAsBrF,SAASS,aAAc,EAC7C4E,EAAsBrF,SAASQ,SAAU,EACzC6E,EAAsBrF,SAASU,OAAQ,EACvCmB,EAAwBwD,EAC1B,IACC,IAAI,EA62BsBkD,CAAiBvX,EAAEI,OAAOH,aAKjDxC,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqB3B,OAAOM,QAAavR,KAAM4S,EAAqB3B,OAAOQ,YAAawC,UAAU,MAAKtU,SACpJF,cAAC0M,KAAY,CACX9L,GAAI,CAACwB,MAAO,MAAO+W,UAAW,SAC9BxM,QAAS2F,EACTyH,eAAiBlN,GAAWA,EAAO2F,WACnChQ,MAAO6Q,EAAqB7B,OAAOhP,MACnCwX,aAAcA,CAAC9c,EAAO2P,IACpB7M,cAAA,SAAQ9C,EAAKgD,SACV2M,EAAO2F,aAGZlQ,SAAUA,CAACC,EAAGC,IApzBLyX,EAAC1X,EAAGC,KAezB,GAdkB,WAAfwR,GACDC,EAAc,MAGhBf,GAAmB2G,IACjBA,EAAoBzI,QAAQI,OAAShP,EAAMiQ,YACpC,IAAIoH,MAGbvG,GAAyB8B,IACvBA,EAAyB5D,OAAOhP,MAAQA,EAClC,IAAI4S,MAGTjC,EAAqB3B,OAAOO,QAAQ,CACrC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBpF,OAAOO,SAAU,EACvC6E,EAAsBpF,OAAOM,MAAQ,GACrC8E,EAAsBpF,OAAOQ,aAAc,EAC3C4E,EAAsBpF,OAAOS,OAAQ,EACrCmB,EAAwBwD,EAC1B,GA8xBoCqD,CAAe1X,EAAGC,GAC1CjC,KAAM8S,EAAqB7B,OAAOmB,WAClCuH,QAASA,IAAMhF,EAAY,UAC3BiF,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,UAC1CsK,YAAcC,GACZ/M,cAAC+B,IAAS,IAAKgL,EACb9K,MAAM,oBACNqX,SAAWC,GAAUA,GAAwB,WAAfvF,GAA2BuF,EAAMtH,QAC/DtS,OAAsD,IAAxCwT,EAAqB3B,OAAOO,UAG9CqI,kBAAgB,EAChBC,UAAW,WAKjBra,cAACsa,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAIva,SAClEF,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAAC0a,KAAa,CAACrG,WAAY,CAAC,cAAcnU,SACxCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqBxF,WAAWmE,QAAavR,KAAM4S,EAAqBxF,WAAWqE,YAAY9R,SAC5IF,cAACoE,IAAG,CAACxD,GAAI,CAACwB,MAAO,KAAKlC,SACpBF,cAAC2a,KAAU,CAAC1Y,MAAM,eAChB2Y,OAAO,aAAapB,aAAcqB,KAAO5H,EAAgB7B,QAAQzD,YACjEmN,eAAe,EAAMC,mBAAiB,EACtClG,UAAW,CACTmG,UACE,CACE1B,SAAUxG,EACVnT,OAA0D,IAA5CwT,EAAqBxF,WAAWoE,QAC9CoI,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,gBAGhDF,SAAWE,GA55BXpE,WAClB,GAAGoE,EAAM,CACP,MAAMiX,EAAajX,EAAMyY,GACtBrI,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAC7B,MAAMgd,EAAQ,IAAI3U,KACZ4U,EAAkBD,EAAME,cAAgB3B,EAAW2B,cACnDC,EAAmBH,EAAMI,WAAa7B,EAAW6B,WACjDC,EAAiBL,EAAMM,UAAY/B,EAAW+B,UAC9CC,EAAMP,EAAME,cAAgB3B,EAAW2B,cAE7C,IAAIM,EAAgC,GAAlBP,EAAuBE,EACrCM,EAAYJ,EAEZA,EAAiB,IACnBG,GAAe,EACfC,GAAa,IAGf,MAAM/E,EAAwB,IAAIzD,GAElC,GAAG+H,EAAQzB,GAAcmC,MAAMH,IAAQC,EAAc,IAAuB,KAAhBA,GAAsBC,EAAY,GAC5F/E,EAAsBjJ,WAAWmE,MAAQ,sFACzC8E,EAAsBjJ,WAAWqE,aAAc,EAC/C4E,EAAsBjJ,WAAWoE,SAAU,EAC3C6E,EAAsBjJ,WAAWsE,OAAQ,EACzCmB,EAAwBwD,OAGtB,CACF,MAAMT,EAAgB0E,KAAOpB,GAAYmB,OAAO,cAChD1H,GAAmB2G,IACjBA,EAAoBzI,QAAQzD,WAAawI,EAClC,IAAI0D,MAGbjD,EAAsBjJ,WAAWmE,MAAQ,GACzC8E,EAAsBjJ,WAAWqE,aAAc,EAC/C4E,EAAsBjJ,WAAWoE,SAAU,EAC3C6E,EAAsBjJ,WAAWsE,OAAQ,EACzCmB,EAAwBwD,GAExBX,EAAiCE,EACnC,IACC,IACL,GA42BuC0F,CAAYrZ,eAQ7CxC,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqBjB,iBAAiBJ,QAAavR,KAAM4S,EAAqBjB,iBAAiBF,YAAawC,UAAU,QAAOtU,SAC1KF,cAAC0M,KAAY,CACX9L,GAAI,CAACwB,MAAO,MAAOkC,GAAI,SACvBqI,QAAS4G,EACTuI,cAAezI,EAAqBnB,iBAAiBvU,QAAU,wBAAgB,GAC/Eoc,eAAiBlN,GAAWA,EAAOmI,KACnCxS,MAAO6Q,EAAqBnB,iBAAiB1P,MAC7CwX,aAAcA,CAAC9c,EAAO2P,IACpB7M,cAAA,SAAQ9C,EAAKgD,SACV2M,EAAOmI,OAGZ1S,SAAUA,CAACC,EAAGC,IAj1BKuZ,EAACxZ,EAAGC,KAenC,GAdkB,qBAAfwR,GACDC,EAAc,MAGhBf,GAAmB2G,IACjBA,EAAoB7I,cAAgBxO,EAAMoK,GACnC,IAAIiN,MAGbvG,GAAyB8B,IACvBA,EAAyBlD,iBAAiB1P,MAAQA,EAC5C,IAAI4S,MAGTjC,EAAqBjB,iBAAiBH,QAAQ,CAC/C,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsB1E,iBAAiBH,SAAU,EACjD6E,EAAsB1E,iBAAiBJ,MAAQ,GAC/C8E,EAAsB1E,iBAAiBF,aAAc,EACrD4E,EAAsB1E,iBAAiBD,OAAQ,EAC/CmB,EAAwBwD,EAC1B,GA2zBoCmF,CAAyBxZ,EAAGC,GACpDjC,KAAM8S,EAAqBnB,iBAAiBS,WAC5CuH,QAASA,IAAMhF,EAAY,oBAC3BiF,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,oBAC1CsK,YAAcC,GACZ/M,cAAC+B,IAAS,IAAKgL,EACb9K,MAAM,kBACNqX,SAAWC,GAAUA,GAAwB,qBAAfvF,GAAqCuF,EAAMtH,QACzEtS,OAAgE,IAAlDwT,EAAqBjB,iBAAiBH,QACpDnR,GAAI,CAAC,yKAA0K,CAACmY,GAAI,MAAOC,GAAI,QAC/LpW,WAAY,IACPmK,EAAOnK,WACVC,aACE1C,eAAAF,WAAA,CAAAC,SAAA,CACGmT,EAAqBnB,iBAAiBvU,QAAUqC,cAAC8B,IAAgB,CAAC4B,MAAM,UAAUsY,KAAM,KAAS,KACjGjP,EAAOnK,WAAWC,mBAM7BuX,kBAAgB,EAChBC,UAAW,WAKjBra,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqBhB,SAASL,QAAavR,KAAM4S,EAAqBhB,SAASH,YAAawC,UAAU,OAAMtU,SACzJF,cAAC0M,KAAY,CACX9L,GAAI,CAACwB,MAAO,MAAOkC,GAAI,GACvBqI,QAAS8G,EACT8B,cAAeA,EACfwE,eAAiBlN,GAAWA,EAAOmI,KACnCxS,MAAO6Q,EAAqBlB,SAAS3P,MACrCwX,aAAcA,CAAC9c,EAAO2P,IACpB7M,cAAA,SAAQ9C,EAAKgD,SACV2M,EAAOmI,OAGZ1S,SAAUA,CAACC,EAAGC,IAh2BJpE,OAAOmE,EAAGC,KAwBhC,GAvBkB,aAAfwR,GACDC,EAAc,MAGhBX,GAAyB8B,IACvBA,EAAyBjD,SAAS3P,MAAQA,EACpC,IAAI4S,MAG+B,OAAxC/B,EAAqBjB,SAAS5P,OAC/B8Q,GAAwB8B,IACtBA,EAAyBhD,SAAS5P,MAAQ,KACnC,IAAI4S,MAIwB,OAApC/B,EAAqBhB,KAAK7P,OAC3B8Q,GAAwB8B,IACtBA,EAAyB/C,KAAK7P,MAAQ,KAC/B,IAAI4S,MAIZjC,EAAqBhB,SAASJ,QAAQ,CACvC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBzE,SAASJ,SAAU,EACzC6E,EAAsBzE,SAASL,MAAQ,GACvC8E,EAAsBzE,SAASH,aAAc,EAC7C4E,EAAsBzE,SAASF,OAAQ,EACvCmB,EAAwBwD,EAC1B,CAEA7C,GAAYwC,IACVA,EAAa1C,KAAO,GACb,IAAI0C,MAGb3C,GAAgB0C,IACdA,EAAiB3Y,SAAU,EACpB,IAAI2Y,MAGb,MAAMwB,QAA6BtH,GAAgBhO,EAAMyN,MACzD2D,GAAgB0C,IACdA,EAAiB3Y,SAAU,EAC3B2Y,EAAiBzC,KAAOiE,EACjB,IAAIxB,KACX,EAgzBkC2F,CAAgB1Z,EAAGC,GAC3CjC,KAAM8S,EAAqBlB,SAASQ,WACpCuH,QAASA,IAAMhF,EAAY,YAC3BiF,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,YAC1CsK,YAAcC,GACZ/M,cAAC+B,IAAS,IAAKgL,EACb9K,MAAM,oBACNqX,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjEtS,OAAwD,IAA1CwT,EAAqBhB,SAASJ,UAGhDqI,kBAAgB,EAChBC,UAAW,WAKfra,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqBf,SAASN,QAAavR,KAAM4S,EAAqBf,SAASJ,YAAawC,UAAU,MAAKtU,SACxJF,cAAC0M,KAAY,CACX9L,GAAI,CAACwB,MAAO,MAAOkC,GAAI,GACvBqI,QAASgH,EAAaE,KACtBiI,cAAenI,EAAahW,QAAU,wBAAgB,GACtD4X,cAAeA,EACfwE,eAAiBlN,GAAWA,EAAOmI,KACnCxS,MAAO6Q,EAAqBjB,SAAS5P,MACrCwX,aAAcA,CAAC9c,EAAO2P,IACpB7M,cAAA,SAAQ9C,EAAKgD,SACV2M,EAAO0E,WAGZjP,SAAUA,CAACC,EAAGC,IA50BLpE,OAAOmE,EAAGC,KAiBjC,GAhBkB,aAAfwR,GACDC,EAAc,MAGhBX,GAAyB8B,IACvBA,EAAyBhD,SAAS5P,MAAQA,EACpC,IAAK4S,MAG0B,OAApC/B,EAAqBhB,KAAK7P,OAC3B8Q,GAAwB8B,IACtBA,EAAyB/C,KAAK7P,MAAQ,KAC/B,IAAI4S,MAIZjC,EAAqBf,SAASL,QAAQ,CACvC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBxE,SAASL,SAAU,EACzC6E,EAAsBxE,SAASN,MAAQ,GACvC8E,EAAsBxE,SAASJ,aAAc,EAC7C4E,EAAsBxE,SAASH,OAAQ,EACvCmB,EAAwBwD,EAC1B,CAEA7C,GAAYwC,IACVA,EAAa5Y,SAAU,EAChB,IAAI4Y,MAGb,MAAMyB,QAAyBtH,GAAYlO,EAAMyN,MACjD8D,GAAYwC,IACVA,EAAa5Y,SAAU,EACvB4Y,EAAa1C,KAAOmE,EACb,IAAIzB,KACX,EAwyBoC2F,CAAiB3Z,EAAGC,GAC5CjC,KAAM8S,EAAqBjB,SAASO,WACpCuH,QAASA,IAAMhF,EAAY,YAC3BiF,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,YAC1CsK,YAAcC,GACZ/M,cAAC+B,IAAS,IAAKgL,EACb9K,MAAM,uBACNqX,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjEtS,OAAwD,IAA1CwT,EAAqBf,SAASL,QAC5CnP,WAAY,IACPmK,EAAOnK,WACVC,aACE1C,eAAAF,WAAA,CAAAC,SAAA,CACGyT,EAAahW,QAAUqC,cAAC8B,IAAgB,CAAC4B,MAAM,UAAUsY,KAAM,KAAS,KACxEjP,EAAOnK,WAAWC,mBAM7BuX,kBAAgB,EAChBC,UAAW,WAKjBra,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqBd,KAAKP,QAAavR,KAAM4S,EAAqBd,KAAKL,YAAY9R,SAChIF,cAAC0M,KAAY,CACX9L,GAAI,CAACwB,MAAO,MAAOkC,GAAI,GACvBqI,QAASmH,EAASD,KAClBiI,cAAehI,EAASnW,QAAU,wBAAgB,GAClD4X,cAAeA,EACfwE,eAAiBlN,GAAWA,EAAOmI,KACnCxS,MAAO6Q,EAAqBhB,KAAK7P,MACjCwX,aAAcA,CAAC9c,EAAO2P,IACpB7M,cAAA,SAAQ9C,EAAKgD,SACV2M,EAAO0E,WAGZjP,SAAUA,CAACC,EAAGC,IA70BT2Z,EAAC5Z,EAAGC,KAevB,GAdkB,SAAfwR,GACDC,EAAc,MAGhBf,GAAmB2G,IACjBA,EAAoBzI,QAAQP,SAAWrO,EAAMyN,KACtC,IAAK4J,MAGdvG,GAAyB8B,IACvBA,EAAyB/C,KAAK7P,MAAQA,EAC9B,IAAK4S,MAGZjC,EAAqBd,KAAKN,QAAQ,CACnC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBvE,KAAKN,SAAU,EACrC6E,EAAsBvE,KAAKP,MAAQ,GACnC8E,EAAsBvE,KAAKL,aAAc,EACzC4E,EAAsBvE,KAAKJ,OAAQ,EACnCmB,EAAwBwD,EAC1B,GAuzBsCuF,CAAa5Z,EAAGC,GACxCjC,KAAM8S,EAAqBhB,KAAKM,WAChCuH,QAASA,IAAMhF,EAAY,QAC3BiF,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,QAC1CsK,YAAcC,GACZ/M,cAAC+B,IAAS,IAAKgL,EACb9K,MAAM,yBACNqX,SAAWC,GAAUA,GAAwB,SAAfvF,GAAyBuF,EAAMtH,QAC7DtS,OAAoD,IAAtCwT,EAAqBd,KAAKN,QACxCnP,WAAY,IACPmK,EAAOnK,WACVC,aACE1C,eAAAF,WAAA,CAAAC,SAAA,CACG4T,EAASnW,QAAUqC,cAAC8B,IAAgB,CAAC4B,MAAM,UAAUsY,KAAM,KAAS,KACpEjP,EAAOnK,WAAWC,mBAM7BuX,kBAAgB,EAChBC,UAAW,WAKjBra,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqB7B,QAAQQ,QAAavR,KAAM4S,EAAqB7B,QAAQU,YAAawC,UAAU,QAAOtU,SACxJF,cAAC+B,IAAS,CAACpC,OAAuD,IAAzCwT,EAAqB7B,QAAQS,QACpD9P,MAAM,yBAAUC,QAAQ,WACxBtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChDgV,SAAWC,GAAUA,GAAwB,YAAfvF,GAA4BuF,EAAMtH,QAChEuH,aAAcvG,EAAgB7B,QAAQE,QACtChP,SAAWC,GAr1BFC,KACL,YAAfwR,GACDC,EAAc,MAGhB,MAAMwF,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAM7B,GALAgV,GAAmB2G,IACjBA,EAAoBzI,QAAQE,QAAUmI,EAC/B,IAAKI,MAGX1G,EAAqB7B,QAAQS,QAAQ,CACtC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBtF,QAAQS,SAAU,EACxC6E,EAAsBtF,QAAQQ,MAAQ,GACtC8E,EAAsBtF,QAAQU,aAAc,EAC5C4E,EAAsBtF,QAAQW,OAAQ,EACtCmB,EAAwBwD,EAC1B,IACC,IAAI,EA6zBwBwF,CAAgB7Z,EAAEI,OAAOH,aAKhDxC,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqB1B,eAAeK,QAAavR,KAAM4S,EAAqB1B,eAAeO,YAAawC,UAAU,OAAMtU,SACrKF,cAAC+B,IAAS,CAACpC,OAA8D,IAAhDwT,EAAqB1B,eAAeM,QAC3D9P,MAAM,yBAAYC,QAAQ,WAC1BtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChDgV,SAAWC,GAAUA,GAAwB,mBAAfvF,GAAmCuF,EAAMtH,QACvEuH,aAAcvG,EAAgB7B,QAAQK,eACtCnP,SAAWC,GAt0BKC,KACZ,mBAAfwR,GACDC,EAAc,MAGhB,MAAMwF,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAM7B,GALAgV,GAAmB2G,IACjBA,EAAoBzI,QAAQK,eAAiBgI,EACtC,IAAKI,MAGX1G,EAAqB1B,eAAeM,QAAQ,CAC7C,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBnF,eAAeM,SAAU,EAC/C6E,EAAsBnF,eAAeK,MAAQ,GAC7C8E,EAAsBnF,eAAeO,aAAc,EACnD4E,EAAsBnF,eAAeQ,OAAQ,EAC7CmB,EAAwBwD,EAC1B,IACC,IAAI,EA8yBwByF,CAAuB9Z,EAAEI,OAAOH,aAKvDxC,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqBzB,YAAYI,QAAavR,KAAM4S,EAAqBzB,YAAYM,YAAY9R,SAC9IF,cAAC+B,IAAS,CAACpC,OAA2D,IAA7CwT,EAAqBzB,YAAYK,QACxD9P,MAAM,oCAAgBC,QAAQ,WAC9BtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChD8U,WAAY,CAAEC,UAAW,IACzBC,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpEuH,aAAcvG,EAAgB7B,QAAQM,YACtCpP,SAAWC,GAxzBEC,KAK3B,GAJkB,gBAAfwR,GACDC,EAAc,MAGH,KAAVzR,EAAa,CACd,MAAMiX,EAAajX,EAEhBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAC7B,MAAM0Y,EAAwB,IAAIzD,GAC/BsG,EAAWlC,OAAS,IACrBX,EAAsBlF,YAAYI,MAAQ,sEAC1C8E,EAAsBlF,YAAYM,aAAc,EAChD4E,EAAsBlF,YAAYK,SAAU,EAC5C6E,EAAsBlF,YAAYO,OAAQ,EAC1CmB,EAAwBwD,KAIxB1D,GAAmB2G,IACjBA,EAAoBzI,QAAQM,YAAc+H,EACnC,IAAII,MAGbjD,EAAsBlF,YAAYI,MAAQ,GAC1C8E,EAAsBlF,YAAYM,aAAc,EAChD4E,EAAsBlF,YAAYK,SAAU,EAC5C6E,EAAsBlF,YAAYO,OAAQ,EAE1C2E,EAAsBhF,YAAYE,MAAQ,GAC1C8E,EAAsBhF,YAAYI,aAAc,EAChD4E,EAAsBhF,YAAYG,SAAU,EAC5C6E,EAAsBhF,YAAYK,OAAQ,EAC1CmB,EAAwBwD,GAC1B,GACC,GACL,KAEI,CACF,MAAMA,EAAwB,IAAIzD,GAClCyD,EAAsBlF,YAAYI,MAAQ,GAC1C8E,EAAsBlF,YAAYM,aAAc,EAChD4E,EAAsBlF,YAAYK,SAAU,EAC5C6E,EAAsBlF,YAAYO,OAAQ,EAC1CmB,EAAwBwD,EAC1B,GAuwB+B0F,CAAoB/Z,EAAEI,OAAOH,OAC9CuN,UAAWZ,QAKjBnP,cAAC+B,IAAS,CACRE,MAAM,qBAAaC,QAAQ,WAAWtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IACtFkV,aAAcvG,EAAgB7B,QAAQO,eACtCrP,SAAWC,GA7wBSC,KAC9B,MAAMiX,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAM7B,GALAgV,GAAmB2G,IACjBA,EAAoBzI,QAAQO,eAAiB8H,EACtC,IAAII,MAGV1G,EAAqB1B,eAAeM,QAAQ,CAC7C,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBnF,eAAeM,SAAU,EAC/C6E,EAAsBnF,eAAeK,MAAQ,GAC7C8E,EAAsBnF,eAAeO,aAAc,EACnD4E,EAAsBnF,eAAeQ,OAAQ,EAC7CmB,EAAwBwD,EAC1B,IACC,IAAI,EAyvBoB2F,CAAuBha,EAAEI,OAAOH,SAGnDxC,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqBvB,YAAYE,QAAavR,KAAM4S,EAAqBvB,YAAYI,YAAawC,UAAU,QAAOtU,SAChKF,cAAC+B,IAAS,CAACpC,OAA2D,IAA7CwT,EAAqBvB,YAAYG,QACxD9P,MAAM,oCAAgBC,QAAQ,WAC9BtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChD8U,WAAY,CAAEC,UAAW,IACzBC,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpEuH,aAAcvG,EAAgB7B,QAAQQ,YACtCtP,SAAWC,GAjwBEC,KAK3B,GAJkB,gBAAfwR,GACDC,EAAc,MAGH,KAAVzR,EAAa,CACd,MAAMiX,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAC7B,MAAM0Y,EAAwB,IAAIzD,GAC/BsG,EAAWlC,OAAS,IACrBX,EAAsBhF,YAAYE,MAAQ,sEAC1C8E,EAAsBhF,YAAYI,aAAc,EAChD4E,EAAsBhF,YAAYG,SAAU,EAC5C6E,EAAsBhF,YAAYK,OAAQ,EAC1CmB,EAAwBwD,KAIxB1D,GAAmB2G,IACjBA,EAAoBzI,QAAQQ,YAAc6H,EACnC,IAAII,MAGbjD,EAAsBhF,YAAYE,MAAQ,GAC1C8E,EAAsBhF,YAAYI,aAAc,EAChD4E,EAAsBhF,YAAYG,SAAU,EAC5C6E,EAAsBhF,YAAYK,OAAQ,EAE1C2E,EAAsBlF,YAAYI,MAAQ,GAC1C8E,EAAsBlF,YAAYM,aAAc,EAChD4E,EAAsBlF,YAAYK,SAAU,EAC5C6E,EAAsBlF,YAAYO,OAAQ,EAC1CmB,EAAwBwD,GAC1B,GACC,IACL,KAEI,CACF,MAAMA,EAAwB,IAAIzD,GAClCyD,EAAsBhF,YAAYE,MAAQ,GAC1C8E,EAAsBhF,YAAYI,aAAc,EAChD4E,EAAsBhF,YAAYG,SAAU,EAC5C6E,EAAsBhF,YAAYK,OAAQ,EAC1CmB,EAAwBwD,EAC1B,GAitB+B4F,CAAoBja,EAAEI,OAAOH,OAC9CuN,UAAWZ,QAKjBnP,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqB1P,OAAOqO,QAAavR,KAAM4S,EAAqB1P,OAAOuO,YAAawC,UAAU,OAAMtU,SACrJF,cAAC+B,IAAS,CAACpC,OAAsD,IAAxCwT,EAAqB1P,OAAOsO,QACnD9P,MAAM,iBACNrB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChDgV,SAAWC,GAAUA,GAAwB,WAAfvF,GAA2BuF,EAAMtH,QAC/DrP,WAAY,CAACC,aAAc7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAAE,UAC3DsZ,aAAcvG,EAAgBxP,OAC9BnB,SAAWC,GA5tBHC,KACJ,WAAfwR,GACDC,EAAc,MAGhB,MAAMwF,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAM7B,GALAgV,GAAmB2G,IACjBA,EAAoBpW,OAASgW,EACtB,IAAII,MAGV1G,EAAqB1P,OAAOsO,QAAQ,CACrC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBnT,OAAOqO,MAAQ,GACrC8E,EAAsBnT,OAAOuO,aAAc,EAC3C4E,EAAsBnT,OAAOsO,SAAU,EACvC6E,EAAsBnT,OAAOwO,OAAQ,EACrCmB,EAAwBwD,EAC1B,IACC,IAAI,EAosBwB6F,CAAela,EAAEI,OAAOH,aAK/CxC,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqBlC,OAAOa,QAAavR,KAAM4S,EAAqBlC,OAAOe,YAAY9R,SACpIF,cAAC+B,IAAS,CAACpC,OAAsD,IAAxCwT,EAAqBlC,OAAOc,QACnD9P,MAAM,mBACNrB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChDgV,SAAWC,GAAUA,GAAwB,WAAfvF,GAA2BuF,EAAMtH,QAC/DrP,WAAY,CAACC,aAAc7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAAE,UAC3DsZ,aAAcvG,EAAgBhC,OAC9B3O,SAAWC,GA9sBHC,KACJ,WAAfwR,GACDC,EAAc,MAGhB,MAAMwF,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAM7B,GALAgV,GAAmB2G,IACjBA,EAAoB5I,OAASwI,EACtB,IAAII,MAGV1G,EAAqBlC,OAAOc,QAAQ,CACrC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsB3F,OAAOa,MAAQ,GACrC8E,EAAsB3F,OAAOe,aAAc,EAC3C4E,EAAsB3F,OAAOc,SAAU,EACvC6E,EAAsB3F,OAAOgB,OAAQ,EACrCmB,EAAwBwD,EAC1B,IACC,IAAI,EAsrBwB8F,CAAena,EAAEI,OAAOH,aAK/CxC,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEiT,EAAqBjC,kBAAkBY,QAAavR,KAAM4S,EAAqBjC,kBAAkBc,YAAawC,UAAU,QAAOtU,SAC5KF,cAAC+B,IAAS,CAACpC,OAAiE,IAAnDwT,EAAqBjC,kBAAkBa,QAC9D9P,MAAM,wBACNrB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChDgV,SAAWC,GAAUA,GAAwB,sBAAfvF,GAAsCuF,EAAMtH,QAC1ErP,WAAY,CAACC,aAAc7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAAE,UAC3DsZ,aAAcvG,EAAgB/B,kBAC9B5O,SAAWC,GAhsBQC,KACf,sBAAfwR,GACDC,EAAc,MAGhB,MAAMwF,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAM7B,GALAgV,GAAmB2G,IACjBA,EAAoB3I,kBAAoBuI,EACjC,IAAII,MAGV1G,EAAqBjC,kBAAkBa,QAAQ,CAChD,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsB1F,kBAAkBY,MAAQ,GAChD8E,EAAsB1F,kBAAkBc,aAAc,EACtD4E,EAAsB1F,kBAAkBa,SAAU,EAClD6E,EAAsB1F,kBAAkBe,OAAQ,EAChDmB,EAAwBwD,EAC1B,IACC,IAAI,EAwqBwB+F,CAA0Bpa,EAAEI,OAAOH,aAK1DxC,cAAC4c,KAAgB,CAAChc,GAAI,CAACwB,MAAO,MAAOkC,GAAI,GAAIuY,QAAS7c,cAAC8c,KAAQ,CAACC,QAAS9J,EAAgB9B,cACvFlP,MAAM,mCACNK,SAAWC,IAAMya,OA5qBAC,EA4qBoB1a,EAAEI,OAAOoa,aA3qBxD7J,GAAmB2G,IACjBA,EAAoB1I,YAAc8L,EAC3B,IAAIpD,MAHcoD,KA4qBsC,SAI7D9c,eAAC+c,KAAa,CAACtc,GAAI,CAACiB,eAAgB,UAAU3B,SAAA,CAC5CF,cAACwD,IAAM,CAACtB,QAAQ,YAAYhB,QAASA,IAAMwV,IAA8BxW,SAAC,kBAC1EF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,YAAYxC,QAASA,CAACpD,EAAOC,IAAWsY,EAA8BvY,EAAOC,GAAQmC,SAAC,6BAI5HF,cAACqQ,GAAe,CAACC,oBAAqBA,EAAqB4D,uBAAwBA,MAGzF,E,sHC9oCeiJ,OAlXf,SAA8BjgB,GAE5B,MAAOS,EAASC,GAAcF,oBAAS,IAEhC0f,EAAYC,GAAiB3f,mBAAS,CAAC4f,UAAW,EAAGC,UAAW,yBAChEC,EAAuBC,GAA4B/f,mBACxD,CACE,CAAE6f,UAAW,sBAAeG,YAAa,GACzC,CAAEH,UAAW,wBAAcG,YAAa,GACxC,CAAEH,UAAW,sBAAeG,YAAa,MAItCvZ,EAA6BqB,GAAkC9H,oBAAS,IAExEigB,EAA0BC,GAA+BlgB,mBAAS,KAClEmgB,EAAmCC,GAAwCpgB,mBAAS,KAEpFqgB,EAAqBC,GAA0BtgB,mBAAS,KAExDugB,EAA+BC,GAAoCxgB,mBAAS,KAC5EygB,EAA8BC,GAAmC1gB,mBAAS,KAE1Ega,EAAsBlB,GAA2B9Y,sBACjDgb,EAAwBjC,GAA6B/Y,oBAAS,IAC9Dib,EAAiChB,GAAsCja,sBAEvE2gB,EAAc/G,GAAmB5Z,oBAAS,GAuD3C4gB,EAAiBA,CAACC,EAAUC,KAChC,MAAMC,EAAsBD,EAAW9I,cACvC,OAAO6I,EAAS5I,QAAO+I,IACrB,MAAM,YAAEC,EAAW,SAAEpN,EAAQ,YAAEG,EAAW,YAAEE,GAAgB8M,EAAWtN,QACvE,OAAOuN,EAAYjJ,cAAcM,SAASyI,IAAwBlN,EAASmE,cAAcM,SAASyI,IAAwB/M,EAAYgE,cAAcM,SAASyI,IAAwB7M,EAAY8D,cAAcM,SAASyI,EAAoB,GAC5O,EA4BEG,EAA8BxgB,UAClCR,GAAW,GAEX,MAAM6B,QAAiB8N,KACjBsR,OLkGmBzgB,WACzB,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,qCAAqCwQ,GACxEhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EK1GyCif,GAE3C,IAMIC,EANAC,EAAc,CAChB,CAAEzB,UAAW,sBAAeG,YAAa,GACzC,CAAEH,UAAW,wBAAcG,YAAa,GACxC,CAAEH,UAAW,sBAAeG,YAAamB,EAA6BtH,SAgCxE,GA5BGsH,EAA6BtH,OAAS,GACvCwH,EAAqCF,EAA6B5T,KAAK+L,IACtD,CACb5F,QAAU,CACRC,WAAY2F,EAAK3F,WACjBxD,UAAWmJ,EAAKnJ,UAChB8Q,YAAa3H,EAAK2H,YAClBpN,SAAUyF,EAAKiI,gBACfzN,OAAQwF,EAAKxF,OACb7D,WAAYqJ,EAAKkI,YACjBzN,eAAgBuF,EAAKvF,eACrBC,YAAasF,EAAKtF,YAClBC,eAAgBqF,EAAKrF,eACrBC,YAAaoF,EAAKpF,YAClBN,QAAS0F,EAAK1F,QACd6N,YAAanI,EAAKmI,YAClBtO,SAAUmG,EAAKnG,SACfuO,WAAYpI,EAAKoI,gBAKvBtB,EAAqCiB,IAGrCjB,EAAqCe,GAGvB,MAAbpf,GAC2B,IAAzBA,EAASoU,KAAK0D,OAEf,GADAqG,EAA4Bne,EAASoU,MACT,IAAzBuJ,EAAWE,UAAgB,CAC5B,MAAM+B,EAA8B5f,EAASoU,KAAK8B,QAAO2J,GAAuD,IAA/BA,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,QAC9KiQ,EAAgClH,KAAEW,UAAUwH,IAC5CnB,EAAiChH,KAAEW,UAAUwH,IAC7CL,EAAY,GAAGtB,YAAcje,EAAS8f,eAAe,GACrDP,EAAY,GAAGtB,YAAcje,EAAS8f,eAAe,EACvD,MACK,GAA4B,IAAzBnC,EAAWE,UAAgB,CACjC,MAAMkC,EAA2B7B,EAAyBhI,QAAO2J,GAAuD,IAA/BA,EAAqBnR,QAC9GiQ,EAAgClH,KAAEW,UAAU2H,IAC5CtB,EAAiChH,KAAEW,UAAU2H,IAC7CR,EAAY,GAAGtB,YAAcje,EAAS8f,eAAe,GACrDP,EAAY,GAAGtB,YAAcje,EAAS8f,eAAe,EACvD,MACiC,IAAzBnC,EAAWE,YACjBc,EAAgClH,KAAEW,UAAUkH,IAC5Cb,EAAiChH,KAAEW,UAAUkH,IAC7CC,EAAY,GAAGtB,YAAcje,EAAS8f,eAAe,GACrDP,EAAY,GAAGtB,YAAcje,EAAS8f,eAAe,IAI3D9B,EAAyBuB,GAEtBX,GACD/G,GAAgB,GAGlBpa,EAAMuiB,sBAAqB,GAE3B7hB,GAAW,EAAM,EAyCnB,OAtCAiJ,qBAAU,KACR+X,GAA6B,GAC5B,IAEH/X,qBAAU,KACR,GAAG6R,EAAuB,CACxB,MAAMvJ,EAAiBrR,IACA,MAAlBA,EAAM4hB,UACP5hB,EAAMuN,iBACNsM,GAAmC,GAErC,EAKF,OAFAvI,SAASC,iBAAiB,UAAWF,GAE9B,KACLC,SAASE,oBAAoB,UAAWH,EAAc,CAE1D,IACC,CAACuJ,EAAwBC,IAE5B9R,qBAAU,KACLwX,GACDO,GACF,GACC,CAACP,EAAcV,EAA0BQ,IAE5CtX,qBAAU,MAC6B,IAAlC3J,EAAMyiB,0BAAqD,IAAjBtB,IAC3CT,EAA4B,IAC5BQ,EAAgC,IAChCF,EAAiC,IACjCU,IACA1hB,EAAMma,4BAA2B,GACnC,GACC,CAACna,EAAMyiB,wBAAyBhC,EAA0BQ,IAG3Dhe,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACoE,IAAG,CAACxD,GAAI,CAACE,EAAG,GAAGZ,SAkBdF,cAAA,OAAKkM,UAAU,YAAYtK,MAAO,CAACge,OAAQ,iBAAkBpQ,aAAc,OAAQ/L,OAAQ,QAAST,QAAS,EAAG6c,UAAW,uGAAuG3f,SAC/NvC,EACEqC,cAAAC,WAAA,CAAAC,SACCC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,SAAU+B,OAAQ,QAAQvD,SAAA,CAClHF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,mFAIjDC,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACqD,IAAK,CAACE,UAAU,MAAMD,QAAS,EAAG1C,GAAI,CAACiB,eAAgB,SAAUyC,GAAI,KAAKpE,SACxEsd,EAAsBvS,KAAI,CAAC6U,EAAuBC,IACjD/f,cAACggB,KAAK,CAACC,aAAcH,EAAsBpC,YAAaha,MAAM,QAAOxD,SACnEF,cAACkgB,KAAI,CAACje,MAAO6d,EAAsBvC,UAAW7Z,MAAOqc,IAA2B3C,EAAWE,UAAY,UAAY,UACjHpc,QAASA,IAnNFif,EAACC,EAAW7C,KAErC,GADAF,EAAc,CAACC,UAAW8C,EAAW7C,UAAWA,IAC/B,IAAd6C,EAAgB,CACjB,MAAMf,EAA8B1B,EAAyBhI,QAAO2J,GAAuD,IAA/BA,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,QACzLiQ,EAAgCiB,GAChCnB,EAAiCmB,EACnC,MACK,GAAiB,IAAde,EAAgB,CACtB,MAAMZ,EAA2B7B,EAAyBhI,QAAO2J,GAAuD,IAA/BA,EAAqBnR,QAC9GiQ,EAAgCoB,GAChCtB,EAAiCsB,EACnC,MACsB,IAAdY,IACNhC,EAAgCP,GAChCK,EAAiCL,GACnC,EAoMiCsC,CAAmBJ,EAAwBD,EAAsBvC,cAAc,qBAAAle,OAFF0gB,QAOpG5f,eAACkE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC0D,GAAI,GAAKoL,UAAW,SAAU1O,SAAU,WAAWd,SAAA,CAAC,gBAAWkd,EAAWG,UAAU,YAAO1C,OAASD,OAAO,iBAEzI5a,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUV,SAAU,YAAYjB,SACzEF,cAAC+B,IAAS,CAACnB,GAAI,CAAC0D,GAAI,GAAKjC,GAAI,EAAGD,MAAO,IAAK,iCAAkC,CAACsN,UAAW,WAAYsM,KAAK,QACzG9Z,QAAQ,WAAWme,YAAY,kEAAqC7d,MAAOub,EAAqBzb,SAAWC,GA1M7FC,KAC5B,MAAMiX,EAAajX,EACnBwb,EAAuBvE,GAGrB2E,EADW,KAAV5b,EAC+Byb,EAEAK,EAAeL,EAA+BxE,GAChF,EAkM+H6G,CAAqB/d,EAAEI,OAAOH,OAC/II,WAAY,CACV2d,eACEvgB,cAAC8C,IAAc,CAAC3B,SAAS,QAAOjB,SAACF,cAACwgB,KAAU,MAE9C3d,aACE7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SACH,KAAxB6d,EACC/d,cAACsB,IAAS,CAACV,GAAI,CAACuP,OAAQ,WACtBsQ,YAAY,SACZvf,QAASA,IAAM,CAAC8c,EAAuB,IAAKI,EAAgCH,MAG9E,YAQZje,cAAC0gB,KAAc,CAAC3U,UAAW4U,KAAO/f,GAAI,CAAE6C,OAAQ,QAASmd,UAAW,SAAUC,uBAAwB,OAAQC,wBAAyB,QAAS5gB,SAC9IC,eAAC4gB,KAAK,CAACC,cAAY,EAACpgB,GAAI,CAAEqgB,SAAU,MAAO/gB,SAAA,CACzCF,cAACkhB,KAAS,CAAAhhB,SACRC,eAACghB,KAAQ,CAACvgB,GAAI,CAAC,OAAQ,CAAC8C,MAAO,mBAAoBO,gBAAiB,SAAS/D,SAAA,CACjD,IAAzBkd,EAAWE,UACV,KAEAnd,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAWF,EAAG,QAAQZ,SAAC,uBAC9DF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,WAAWd,SAAC,WAGvDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,WAAWd,SAAC,4BACnDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,WAAWd,SAAC,mBACnDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,WAAWd,SAAC,sBACnDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,WAAWd,SAAC,iBACnDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,WAAWd,SAAC,sCACnDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,WAAWd,SAAC,gCAIvDF,cAACshB,KAAS,CAAAphB,SACiC,IAAxCie,EAA6B5G,OAC5BvX,cAAAC,WAAA,CAAAC,SACGie,EAA6BlT,KAAI,CAACsW,EAA0BC,KAC3DrhB,sBAACghB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAA2C9gB,GAAI,CAACuP,OAAQ,WAAYwR,cAAeA,IAA+B,IAAzBvE,EAAWE,UA/NjGlf,WAC9CoH,GAA+B,GAC/B,MAAMoc,QAAuChU,GAA0B2T,EAAyBnQ,QAAQvD,WAClGgU,EAAoC,CACxC7Q,cAAeuQ,EAAyBnQ,QAAQgO,WAChD0C,YAAY,EACZre,OAAQ,GACRwN,OAAQ,GACRC,kBAAmB,GACnBnT,OAAQ,GACRoT,YAAayQ,EAA+BzQ,YAC5C4Q,cAAeH,EAA+BG,cAC9CC,aAAc,GACd5Q,QAASmQ,EAAyBnQ,SAEpClU,EAAM+kB,iCAAiCJ,GACvCrc,GAA+B,EAAM,EA+M4H0c,CAAwCX,GArOvKA,KAClC/K,EAAwB+K,GACxB5J,GAAmC,GACnClB,GAA0B,EAAK,EAkOsM0L,CAA2BZ,GAA0BrhB,SAAA,CACxO,IAAzBkd,EAAWE,UACV,KAEAnd,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACohB,KAAS,CAACC,MAAM,SAASzgB,GAAI,CAACwB,MAAO,QAAQlC,SAC5CF,cAACkZ,KAAO,CAACpH,MAAO9R,cAACqE,IAAU,CAACnC,QAAQ,YAAWhC,SAAqC,IAAnCqhB,EAAyBpT,OAAkD,IAAnCoT,EAAyBpT,MAAc,mBAAgD,IAAnCoT,EAAyBpT,MAAc,qBAAY,sBAA0BjO,SACxNF,cAAA,QAAAE,UAzSJiO,EAySgCoT,EAAyBpT,MAxSxE,IAAVA,GAAyB,IAAVA,EAEdnO,cAAAC,WAAA,CAAAC,SACEF,cAAA,QAAMkM,UAAU,iCAIJ,IAAViC,EAEJnO,cAAAC,WAAA,CAAAC,SACEF,cAAA,QAAMkM,UAAU,mCAMlBlM,cAAAC,WAAA,CAAAC,SACEF,cAAA,QAAMkM,UAAU,qCA0RMlM,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,QAAQlC,SAAEqhB,EAAyBa,WAG3EpiB,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,SAASlC,SAAEqhB,EAAyBnQ,QAAQuN,cAChF3e,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,SAASlC,SAAEqhB,EAAyBnQ,QAAQG,WAChFvR,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,SAASlC,UAA8C,IAA5CqhB,EAAyBnQ,QAAQI,OAAkB,MAAQ,YAC1GxR,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,SAASlC,SAAE2a,KAAO0G,EAAyBnQ,QAAQzD,YAAYiN,OAAO,gBAC1G5a,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,SAASlC,SAAmD,KAAjDqhB,EAAyBnQ,QAAQM,YAAqB6P,EAAyBnQ,QAAQM,YAAc6P,EAAyBnQ,QAAQQ,cACrL5R,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACyhB,WAAY,SAAUC,SAAU,SAAUC,aAAc,WAAYliB,SAAU,KAAKH,SAC9GF,cAACkZ,KAAO,CAACpH,MAAO9R,cAACqE,IAAU,CAACnC,QAAQ,YAAWhC,SAAEqhB,EAAyBnQ,QAAQ+N,cAA0Bjf,SAC1GF,cAAA,QAAAE,SAAOqhB,EAAyBnQ,QAAQ+N,oBApBTqC,GAlS/BrT,KA0TP,MAGH,mBAUhBnO,cAAC4D,EAAuB,CAACO,4BAA6BA,EAA6BD,kBAAkB,IAGrGlE,cAAC8Q,GAAmB,CAClB4H,uBAAwBA,EAAwBjC,0BAA2BA,EAC3EiB,qBAAsBA,EAAsBlB,wBAAyBA,EACrEmC,gCAAiCA,EAAiChB,mCAAoCA,EACtGN,2BAA4Bna,EAAMma,2BAClCC,gBAAiBA,MAIzB,E,oBCzLekL,OAjMf,SAA0BtlB,GACtB,MAAOulB,EAAeC,GAAoBhlB,oBAAS,IAC5C4S,EAAqB4D,GAA0BxW,oBAAS,IAExD6V,EAAsBC,GAA2B9V,mBAAS,OAE3D,6BAAEgI,EAA4B,gCAAEC,GAAoC+C,qBAAWlE,GAM/Eme,EAA4CvkB,UAC9C,GAAGlB,EAAMiQ,qBAAqB2U,WAAW,CACrC5N,GAAuB,GACvB,MAAMzU,ONsGgCrB,OAAOuP,EAAYE,KACjE,MAAML,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,wDAAAqC,OAAuDsO,EAAU,eAAAtO,OAAcwO,GAAaL,GAC/HhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EM9G6B+iB,CAA0C1lB,EAAMiQ,qBAAqBiE,QAAQzD,WAAYzQ,EAAMiQ,qBAAqBiE,QAAQuN,aACnJnL,EAAwB/T,GACxBvC,EAAMiQ,qBAAqB6D,cAAgBvR,EAAS2W,MAAM,GAAGxJ,GAC7DsH,GAAuB,EAC3B,KACI,CACAA,GAAuB,GACvB,MAAMzU,QAAiBiO,GAAuCxQ,EAAMiQ,qBAAqBiE,QAAQzD,YACjG6F,EAAwB/T,GACxBvC,EAAMiQ,qBAAqB6D,cAAgBvR,EAAS2W,MAAM,GAAGxJ,GAC7DsH,GAAuB,EAC3B,GAGE2O,EAAwBzkB,UAE1B,IAA6C,IAA1ClB,EAAMiQ,qBAAqB2U,YAAoE,KAA7C5kB,EAAMiQ,qBAAqB6D,cAE5E,IAA0C,IAAvCuC,EAAqBuP,eAAoE,IAAzCvP,EAAqBwP,SAASxL,OAAa,CAE1FrD,GAAuB,GACvB,MAAMzU,QAAiBwN,GAA0B/P,EAAMiQ,sBAChC,MAApB1N,EAASI,cACFyN,KACH5H,GACCC,GAAgC,GAEpClH,IAAMsB,QAAQN,EAASK,MACvB0T,EAAwB,MACxBtW,EAAM8lB,uCAAsC,GAC5C9lB,EAAMma,4BAA2B,GACjCna,EAAM+lB,8BAA6B,GACnC/lB,EAAMgmB,oBAGNzkB,IAAMkB,MAAMF,EAASK,KAAM,CAACnB,QAAS,WAEzCuV,GAAuB,EAC3B,KAEI,CAEAA,GAAuB,GACvB,MAAMzU,QAAiBwN,GAA0B/P,EAAMiQ,sBAChC,MAApB1N,EAASI,cACFyN,KACN7O,IAAMsB,QAAQN,EAASK,MACvB0T,EAAwB,MACxBtW,EAAM8lB,uCAAsC,GAC5C9lB,EAAMma,4BAA2B,GACjCna,EAAM+lB,8BAA6B,GACnC/lB,EAAMgmB,oBAGNzkB,IAAMkB,MAAMF,EAASK,KAAM,CAACnB,QAAS,WAEzCuV,GAAuB,EAC3B,KAGA,CAEAA,GAAuB,GACvB,MAAMzU,ONzFYrB,WAC1B,MAAMY,EAAQC,aAAaC,QAAQ,OACnC,aAAaC,IAAM+N,KAAK,GAAD7N,OAAIrC,GAAU,yBAAyBmQ,EAAsB,CAChF7N,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADF,OAAYL,MAGhCQ,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EM4E6B0jB,CAAsBjmB,EAAMiQ,sBAE5B,MAApB1N,EAASI,cACFyN,KACN7O,IAAMsB,QAAQN,EAASK,MACvB0T,EAAwB,MACxBtW,EAAMgmB,mBACNhmB,EAAM8lB,uCAAsC,GAC5C9lB,EAAMma,4BAA2B,GACjCna,EAAM+lB,8BAA6B,IAGnCxkB,IAAMkB,MAAMF,EAASK,KAAM,CAACnB,QAAS,WAEzCuV,GAAuB,EAC3B,GAOEkP,EAAoBA,KAC0B,KAA7ClmB,EAAMiQ,qBAAqB6D,cAE1BvS,IAAMkB,MAAM,+CAAyB,CAAChB,QAAS,WAI/CkkB,GACJ,EAiBJ,OAdAhc,qBAAU,KAC+C,KAAlD3J,EAAMiQ,qBAAqBiE,QAAQzD,aAAyD,IAApCzQ,EAAMmmB,2BAC7DV,GACJ,GACD,CAACzlB,EAAMmmB,4BAEVxc,qBAAU,MAC0C,IAA7C3J,EAAMomB,qCAELF,IACAlmB,EAAM8lB,uCAAsC,GAChD,GACD,CAAC9lB,EAAMomB,qCAGNnjB,eAAAF,WAAA,CAAAC,SAAA,CACKqT,EACGvT,cAAAC,WAAA,CAAAC,SACIC,eAACC,IAAM,CAACE,WAAW,EAAMD,SAAU,KAAME,KAAMrD,EAAMmmB,0BAA2B3iB,sBAAsB,EAAKR,SAAA,CACvGF,cAACW,IAAW,CACRC,GAAI,CAAEG,WAAY,SAAUC,SAAU,OAAQ0O,UAAW,SAAUhM,MAAO,QAAS6H,cAAe,aAAcrL,SAAA,GAAAb,OAC5GnC,EAAMiQ,qBAAqBiE,QAAQG,SAAQ,oCAAAlS,QACC,IAA9CnC,EAAMiQ,qBAAqBiE,QAAQI,OAAkB,MAAQ,UAAI,oCAAAnS,OACjEkU,EAAqBgQ,eAG3BvjB,cAACiB,IAAU,CAACC,QAASA,IAAM,CAAChE,EAAM+lB,8BAA6B,GAAQ/lB,EAAMiQ,qBAAqB6D,cAAgB,GAAIwC,EAAwB,OAC1I5S,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACzCF,cAACsB,IAAS,CAACN,SAAS,aAG5BhB,cAACuB,IAAa,CAACC,UAAQ,EAACZ,GAAI,CAACmY,GAAI,MAAOC,GAAI,OAAO9Y,SAC/CC,eAACqjB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAExjB,SAAA,CAC1BF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,KAEf3jB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAIzjB,SACfC,eAACiE,IAAG,CAACxD,GAAI,CAACgf,OAAQ,kBAAmB9e,EAAG,EAAG2C,OAAQ,OAAQ6e,SAAU,QAAQpiB,SAAA,CACzEF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACG,WAAY,UAAUb,SAAC,8BACpDqT,EAAqBwP,SAClBxP,EAAqBwP,SAAS9X,KAAI,CAAC2Y,EAAaC,IAC5C7jB,cAACqE,IAAU,CAAoBnC,QAAQ,YAAWhC,SAAE0jB,EAAY5O,MAA/C6O,KAGrB,UAKZ7jB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAIzjB,SACfF,cAACoE,IAAG,CAACxD,GAAI,CAACgf,OAAQ,gBAAiB9e,EAAG,EAAG2C,OAAQ,QAAQvD,SACrDC,eAAA,OAAKyB,MAAO,CAACH,QAAS,OAAQqX,SAAU,OAAQjX,eAAgB,UAAU3B,SAAA,CACtEF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACG,WAAY,SAAU2C,MAAO,OAAOxD,SAAC,8BACnEF,cAAC8jB,KAAU,CAA2DtK,aAAcjG,EAAqB6C,MAAM,GAAGxJ,GAAItK,SAAWC,IAAMwhB,OA3JlJvhB,EA2JsKD,EAAEI,OAAOH,WA1JxMtF,EAAMiQ,qBAAqB6D,cAAgBxO,GADlBA,KA2JsL,EAAAtC,SACtKqT,EAAqB6C,MAAMnL,KAAI,CAAC+Y,EAAUC,IACvCjkB,cAAC4c,KAAgB,CAAsBpa,MAAOwhB,EAASpX,GAAIiQ,QAAS7c,cAACkkB,KAAK,IAAKjiB,MAAO+hB,EAAShP,MAAK,GAAA3V,OAA1E4kB,OAC5B,GAAA5kB,OAHcnC,EAAMiQ,qBAAqBiE,QAAQuN,cAKvD3e,cAACwD,IAAM,CAACtB,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,IAAMpD,QAASA,IAAMkiB,IAAoBljB,SAAC,6CAS3G,KASJF,cAACqQ,GAAe,CACZC,oBAAqBA,EAAqB4D,uBAAwBA,MAIlF,ECiXeiQ,OA1iBf,SAAoBjnB,GAEhB,MAAMknB,EAAyC,CAACzF,YAAa,GAAI0F,MAAO,GAAI9S,SAAU,GAAI5D,WAAY,IAChG2W,EAA8C,CAChD3F,YAAa,CAAE7M,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrEoS,MAAO,CAAEvS,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC/DV,SAAU,CAAEO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEtE,WAAY,CAAEmE,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,IAGlEW,EAAYC,iBAAO,OAElB0R,EAAqBC,GAA0B9mB,mBAAS,OACxD+mB,EAAiCC,GAAsChnB,mBAAS0mB,IAChFO,EAAsCC,GAA2ClnB,mBAAS4mB,IAC1FtQ,EAAYC,GAAiBvW,mBAAS,OACtC4S,EAAqB4D,GAA0BxW,oBAAS,IACxDmnB,EAAkBC,GAAuBpnB,mBAAS,GAEnDoV,EAAeD,iBAAO,MACtBkS,EAAUlS,iBAAO,MACjBmS,EAAWnS,iBAAO,MAElBsB,EAAeC,aAAY,CAC7BC,WAAY,CACVC,WAAY,CACVC,aAAc,CACZC,UAAW,SACXC,OAAO,EACPC,gBAAiB,CACfC,QAAS,CACP/T,GAAI,CACFgU,QAAS,YAGbH,MAAO,CACL7T,GAAI,CACF8C,MAAO,kBASjByL,EAAiBrR,IACd,QAAQwX,KAAKxX,EAAMqL,MAAsB,cAAdrL,EAAMqL,KAAqC,WAAdrL,EAAMqL,KAAkC,cAAdrL,EAAMqL,KAAqC,eAAdrL,EAAMqL,KAAsC,QAAdrL,EAAMqL,KAA+B,UAAdrL,EAAMqL,IAIzJ,UAAdrL,EAAMqL,KACV8b,EAAiBnnB,GAHjBA,EAAMuN,gBAIV,EAGEgK,EAAaA,CAAC7S,EAAO2S,KACvB,GAAa,KAAV3S,GAA0B,eAAVA,EAAuB,CACtC,MAAM0iB,EAAwC,IAAIP,GACjC,gBAAdxP,GACIvC,EAAUqE,SACTyC,cAAc9G,EAAUqE,SAG5BrE,EAAUqE,QAAU/Y,YAAW,KAC3BgnB,EAAsCvG,YAAY7M,MAAQ,GAC1DoT,EAAsCvG,YAAY3M,aAAc,EAChE4S,EAAwCM,EAAsC,GAC/E,IAEe,gBAAflR,GACCC,EAAc,OAGA,eAAdkB,GACJ+P,EAAsCvX,WAAWmE,MAAQ,GACzDoT,EAAsCvX,WAAWqE,aAAc,EAC/D4S,EAAwCM,GACtB,eAAflR,GACCC,EAAc,OAGA,UAAdkB,IACJ+P,EAAsCb,MAAMvS,MAAQ,GACpDoT,EAAsCb,MAAMrS,aAAc,EAC1D4S,EAAwCM,GACtB,UAAflR,GACCC,EAAc,MAG1B,GA6LEkR,EAA6BA,CAACrnB,EAAOC,KACpCA,GAAqB,kBAAXA,IAIT2mB,EAAmCN,GACnCQ,EAAwCN,GACxCE,EAAuB,MACvBM,EAAoB,GACpB5nB,EAAMkoB,wBAAuB,GACjC,EAuDEC,EAAuBjnB,gBACnB,IAAIC,SAAQC,GAAWJ,WAAWI,EAAS,OACjD4V,GAAuB,GACvB,MAAMzU,OPjOYrB,OAAOyP,EAAWwW,EAAO9S,EAAU5D,EAAY6D,KACrE,MAAMhE,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,0CAAAqC,OAAyCwO,EAAS,WAAAxO,OAAUglB,EAAK,cAAAhlB,OAAakS,EAAQ,gBAAAlS,OAAesO,EAAU,YAAAtO,OAAWmS,GAAUhE,GACvKhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EOyNyBylB,CAAkBb,EAAgC9F,YAAa8F,EAAgCJ,MAAOI,EAAgClT,SAAUkT,EAAgC9W,WAAY,IACnNuG,GAAuB,GACvBsQ,EAAuB/kB,GACvBilB,EAAmCN,GACnCQ,EAAwCN,GA1DxCS,EAAQ9N,QAAQsO,QACDR,EAAQ9N,QAAQuO,iBAAiB,mBACzCC,SAAQlM,GAASA,EAAMmM,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,OAC1E3R,EAAc,MAyDXxU,EAAS8X,OAAS,GACjByN,EAAS/N,QAAQhF,OACrB,EAGE4T,EAA4BA,KA3DjBC,MACb,MAAMZ,EAAwC,IAAIP,GAClD,IAAInmB,GAAU,EAwCd,MAtCmD,KAAhDimB,EAAgC9F,aAAmE,KAA7C8F,EAAgClT,UACtC,KAA/CkT,EAAgC9W,YAA+D,KAA1C8W,EAAgCJ,QAErFa,EAAsCvG,YAAY5M,SAAU,EAC5DmT,EAAsC3T,SAASQ,SAAU,EACzDmT,EAAsCvX,WAAWoE,SAAU,EAC3DmT,EAAsCb,MAAMtS,SAAU,EACtDvT,GAAU,GAGgD,KAA3DmmB,EAAqChG,YAAY7M,QAC7C+E,OAAOC,OAAO6N,GAAsC5N,OAAMC,IAAuB,IAAfA,EAAK/E,UACtEiT,EAAsCvG,YAAY5M,SAAU,EAC5DmT,EAAsCvG,YAAY1M,OAAQ,EAC1DgC,EAAc,gBAElBzV,GAAU,GAG+C,KAA1DmmB,EAAqChX,WAAWmE,QAC5C+E,OAAOC,OAAO6N,GAAsC5N,OAAMC,IAAuB,IAAfA,EAAK/E,UACtEiT,EAAsCvX,WAAWoE,SAAU,EACvDe,EAAamE,SACbnE,EAAamE,QAAQhF,SAG7BzT,GAAU,GAG0C,KAArDmmB,EAAqCN,MAAMvS,QACvC+E,OAAOC,OAAO6N,GAAsC5N,OAAMC,IAAuB,IAAfA,EAAK/E,UACtEiT,EAAsCb,MAAMtS,SAAU,EACtDmT,EAAsCb,MAAMpS,OAAQ,EACpDgC,EAAc,UAElBzV,GAAU,GAEdomB,EAAwCM,GACjC1mB,CAAO,EAkBXsnB,IACCT,GACJ,EAGEJ,EAAoB1iB,IACN,KAAZA,EAAEyN,OAA2B,UAAXzN,EAAE0N,MACpB4V,GACJ,EAaEE,EAAmC3nB,UACrC8V,GAAuB,GACvB,MAAM0N,QAAuChU,GAA0BoY,EAAoBrH,aACrFkD,EAAoC,CACtC7Q,cAAe,GACf8Q,YAAY,EACZmE,4BAA4BD,EAAoBnV,SAChDpN,OAAQ,GACRwN,OAAQ,GACRC,kBAAmB,GACnBnT,OAAQ,GACRoT,YAAayQ,EAA+BzQ,YAC5C4Q,cAAeH,EAA+BG,cAC9CC,aAAc,GACd5Q,QAAS,CACLuN,YAAaqH,EAAoBrH,YACjCtN,WAAY2U,EAAoB3U,WAChCC,QAAS0U,EAAoB1U,QAC7BC,SAAUyU,EAAoBzU,SAC9B5D,WAAYqY,EAAoBrY,WAChCkD,SAAUmV,EAAoBnV,SAC9BW,OAAQwU,EAAoBxU,OAC5BC,eAAgBuU,EAAoBvU,eACpCC,YAAasU,EAAoBtU,YACjCC,eAAgBqU,EAAoBrU,eACpCC,YAAaoU,EAAoBpU,cAGzC1U,EAAMgpB,wBAAwBrE,GAC9B3N,GAAuB,GACvBiR,GAA4B,EAGhC,OACIhlB,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACC,IAAM,CAACE,WAAW,EAAMD,SAAU,KAAME,KAAMrD,EAAMipB,oBAAqB1lB,QAASA,CAAC3C,EAAOC,IAAWonB,EAA2BrnB,EAAOC,GAAS2C,sBAAsB,EAAME,GAAI,CAAC,0BAA2B,CAACP,SAAU,UAAUH,SAAA,CAC9NF,cAACW,IAAW,CAACC,GAAI,CAAEC,EAAG,EAAGC,EAAG,IAAKC,WAAY,SAAUC,SAAU,OAAQ0O,UAAW,UAAWxP,SAAC,6BAChGF,cAACiB,IAAU,CAACC,QAASA,IAAMikB,IAA6BvkB,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACjGF,cAACsB,IAAS,CAACN,SAAS,aAExBb,eAACoB,IAAa,CAACC,UAAQ,EAACZ,GAAI,CAACE,EAAG,aAAaZ,SAAA,CACzCC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,gBAAiBkK,UAAU,OAAOqa,IAAKrB,EAAQ7kB,SAAA,CACtFF,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SAC/BF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEykB,EAAqChG,YAAY7M,QAAavR,KAAMokB,EAAqChG,YAAY3M,YAAY9R,SAC5KF,cAAC+B,IAAS,CACNnB,GAAI,CAAC,sBAAwB,CAACuY,UAAW,UACzCxZ,OAA2E,IAA7DglB,EAAqChG,YAAY5M,QAC/D9P,MAAM,WAAQC,QAAQ,WAAW8Z,KAAK,QACtCha,WAAS,EACTsX,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpEmH,WAAY,CAAEC,UAAW,IACzB/W,SAAWC,GAlVhBC,KACvB,GAAa,KAAVA,EAAa,CACZ,MAAMiX,EAAajX,EAChBoQ,EAAUqE,SACTyC,cAAc9G,EAAUqE,SAG5BrE,EAAUqE,QAAU/Y,YAAW,KAC3B,MAAMgnB,EAAwC,IAAIP,GAC/CniB,EAAM+U,OAAS,GACd2N,EAAsCvG,YAAY7M,MAAQ,uEAC1DoT,EAAsCvG,YAAY5M,SAAU,EAC5DmT,EAAsCvG,YAAY3M,aAAc,EAChE4S,EAAwCM,KAItB,gBAAflR,GACCC,EAAc,MAGlByQ,GAAoC2B,IAChCA,EAAoC1H,YAAclF,EAC3C,IAAI4M,MAGfnB,EAAsCvG,YAAY7M,MAAQ,GAC1DoT,EAAsCvG,YAAY5M,SAAU,EAC5DmT,EAAsCvG,YAAY3M,aAAc,EAChEkT,EAAsCvG,YAAY5M,SAAU,EAC5DmT,EAAsC3T,SAASQ,SAAU,EACzDmT,EAAsCvX,WAAWoE,SAAU,EAC3DmT,EAAsCb,MAAMtS,SAAU,EACtD6S,EAAwCM,GAC5C,GACD,IACP,KACI,CACA,MAAMA,EAAwC,IAAIP,GAClDO,EAAsCvG,YAAY7M,MAAQ,GAC1DoT,EAAsCvG,YAAY3M,aAAc,EAChEkT,EAAsCvG,YAAY5M,SAAU,EAC5D6S,EAAwCM,EAC5C,GAuS6CoB,CAAkB/jB,EAAEI,OAAOH,OAC5C2X,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,eAC1CuN,UAAWZ,QAKvBnP,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SAC/BF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEykB,EAAqCpT,SAASO,QAAavR,KAAMokB,EAAqCpT,SAASS,YAAY9R,SACtKF,cAAC+B,IAAS,CACNnB,GAAI,CAAC,sBAAwB,CAACuY,UAAW,UACzCG,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjEtS,OAAwE,IAA1DglB,EAAqCpT,SAASQ,QAC5D9P,MAAM,iBAASC,QAAQ,WAAW8Z,KAAK,QACvC1Z,SAAWC,GAlTjBC,KACJ,aAAfwR,GACCC,EAAc,MAGlByQ,GAAoC2B,IAChCA,EAAoC9U,SAAW/O,EACxC,IAAI6jB,MAGf,MAAMnB,EAAwC,IAAIP,GAClDO,EAAsCvG,YAAY5M,SAAU,EAC5DmT,EAAsC3T,SAASQ,SAAU,EACzDmT,EAAsCvX,WAAWoE,SAAU,EAC3DmT,EAAsCb,MAAMtS,SAAU,EACtD6S,EAAwCM,EAAsC,EAmSjCpL,CAAiBvX,EAAEI,OAAOH,OAC3CuN,UAAYxN,GAAM0iB,EAAiB1iB,SAK/CvC,cAACsa,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAIva,SAChEF,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SAC/BF,cAAC0a,KAAa,CAACrG,WAAY,CAAC,cAAcnU,SACtCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEykB,EAAqChX,WAAWmE,QAAavR,KAAMokB,EAAqChX,WAAWqE,YAAY9R,SAC1KF,cAACoE,IAAG,CAACxD,GAAI,CAACwB,MAAO,KAAKlC,SAClBF,cAAC2a,KAAU,CAAC1Y,MAAM,eAAY2Y,OAAO,aACjCE,eAAe,EAAMC,mBAAiB,EACtCjO,YAAcC,GAAW/M,cAAC+B,IAAS,IAAKgL,EAAQiP,KAAK,UACrDnH,UAAW,CACPmG,UACA,CACI1B,SAAUxG,EACVnT,OAA0E,IAA5DglB,EAAqChX,WAAWoE,QAC9DiK,KAAM,QACN7B,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,cAC1CuN,UAAYxN,GAAM0iB,EAAiB1iB,KAG3CD,SAAWE,GAxT3BA,KACxB,GAAGA,EAAM,CACL,MAAM+jB,EAAO/jB,EAAMyY,GACbC,EAAQ,IAAI3U,KACZ4U,EAAkBD,EAAME,cAAgBmL,EAAKnL,cAC7CC,EAAmBH,EAAMI,WAAaiL,EAAKjL,WAC3CC,EAAiBL,EAAMM,UAAY+K,EAAK/K,UACxCC,EAAMP,EAAME,cAAgBmL,EAAKnL,cAEvC,IAAIM,EAAgC,GAAlBP,EAAuBE,EACrCM,EAAYJ,EAEZA,EAAiB,IACjBG,GAAe,EACfC,GAAa,IAGjB,MAAMuJ,EAAwC,IAAIP,GAElD,GAAGzJ,EAAQqL,GAAQ3K,MAAMH,IAAQC,EAAc,IAAuB,KAAhBA,GAAsBC,EAAY,GACpFuJ,EAAsCvX,WAAWmE,MAAQ,sFACzDoT,EAAsCvX,WAAWqE,aAAc,EAC/DkT,EAAsCvX,WAAWoE,SAAU,EAC3D6S,EAAwCM,OAEtC,CACF,MAAM/O,EAAgB0E,KAAO0L,GAAM3L,OAAO,cAC1C8J,GAAoC2B,IAChCA,EAAoC1Y,WAAawI,EAC1C,IAAIkQ,MAGfnB,EAAsCvX,WAAWmE,MAAQ,GACzDoT,EAAsCvX,WAAWqE,aAAc,EAC/DkT,EAAsCvG,YAAY5M,SAAU,EAC5DmT,EAAsC3T,SAASQ,SAAU,EACzDmT,EAAsCvX,WAAWoE,SAAU,EAC3DmT,EAAsCb,MAAMtS,SAAU,EACtD6S,EAAwCM,EAC5C,CACJ,GAgR6DsB,CAAmBhkB,eAQhExC,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SAC/BF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEykB,EAAqCN,MAAMvS,QAAavR,KAAMokB,EAAqCN,MAAMrS,YAAY9R,SAChKF,cAAC+B,IAAS,CACNnB,GAAI,CAAC,sBAAwB,CAACuY,UAAW,UACzCG,SAAWC,GAAUA,GAAwB,UAAfvF,GAA0BuF,EAAMtH,QAC9DtS,OAAqE,IAAvDglB,EAAqCN,MAAMtS,QACzD9P,MAAM,wCAAoBC,QAAQ,WAAW8Z,KAAK,QAClD5C,WAAY,CAAEC,UAAW,IACzB/W,SAAWC,GA7RpBC,KACnB,GAAa,KAAVA,EAAa,CACZ,MAAMiX,EAAajX,EAChBoQ,EAAUqE,SACTyC,cAAc9G,EAAUqE,SAG5BrE,EAAUqE,QAAU/Y,YAAW,KAC3B,MAAMgnB,EAAwC,IAAIP,GAC/CniB,EAAM+U,OAAS,IACd2N,EAAsCb,MAAMvS,MAAQ,sEACpDoT,EAAsCb,MAAMtS,SAAU,EACtDmT,EAAsCb,MAAMrS,aAAc,EAC1D4S,EAAwCM,KAItB,UAAflR,GACCC,EAAc,MAGlByQ,GAAoC2B,IAChCA,EAAoChC,MAAQ5K,EACrC,IAAI4M,MAGfnB,EAAsCb,MAAMvS,MAAQ,GACpDoT,EAAsCb,MAAMrS,aAAc,EAC1DkT,EAAsCb,MAAMtS,SAAU,EACtDmT,EAAsCvG,YAAY5M,SAAU,EAC5DmT,EAAsC3T,SAASQ,SAAU,EACzDmT,EAAsCvX,WAAWoE,SAAU,EAC3D6S,EAAwCM,GAC5C,GACD,IACP,KACI,CACA,MAAMA,EAAwC,IAAIP,GAClDO,EAAsCvG,YAAY7M,MAAQ,GAC1DoT,EAAsCvG,YAAY3M,aAAc,EAChEkT,EAAsCvG,YAAY5M,SAAU,EAC5D6S,EAAwCM,EAC5C,CAGA,GAAa,KAAV1iB,EAAa,CACZ,MAAM0iB,EAAwC,IAAIP,GAC/CniB,EAAM+U,OAAS,IACd2N,EAAsCb,MAAMvS,MAAQ,sEACpDoT,EAAsCb,MAAMrS,aAAc,EAC1D4S,EAAwCM,GAExCR,GAAoC2B,IAChCA,EAAoChC,MAAQ7hB,EACrC,IAAI6jB,QAIG,UAAfrS,GACCC,EAAc,MAElBiR,EAAsCb,MAAMvS,MAAQ,GACpDoT,EAAsCb,MAAMrS,aAAc,EAC1DkT,EAAsCb,MAAMtS,SAAU,EACtDmT,EAAsCvG,YAAY5M,SAAU,EAC5DmT,EAAsC3T,SAASQ,SAAU,EACzDmT,EAAsCvX,WAAWoE,SAAU,EAC3D6S,EAAwCM,GAEhD,KACI,CACA,MAAMA,EAAwC,IAAIP,GAClDO,EAAsCb,MAAMvS,MAAQ,GACpDoT,EAAsCb,MAAMrS,aAAc,EAC1DkT,EAAsCb,MAAMtS,SAAU,EACtD6S,EAAwCM,EAC5C,GAiN6CuB,CAAclkB,EAAEI,OAAOH,OACxCuN,UAAWZ,EACXgL,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,kBAO1DxC,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUyC,GAAI,KAAKpE,SAC1DF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,UAAUxC,QAASA,IAAM2kB,IAA4B3lB,SAAC,qBAG5FF,cAACoE,IAAG,CAAAlE,SAEIqkB,EACmC,IAA/BA,EAAoBhN,OACpBpX,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAAC0gB,KAAc,CAAC3U,UAAW4U,KAAO/f,GAAI,CAACif,UAAW,EAAGvb,GAAI,KAAMoiB,SAAU,EAAG3W,UAAYjS,GArI5FA,KACN,cAAdA,EAAMqL,IACN2b,GAAqB6B,GAAeC,KAAKC,IAAIF,EAAY,EAAGpC,EAAoBhN,OAAS,KACpE,YAAdzZ,EAAMqL,IACb2b,GAAqB6B,GAAeC,KAAKE,IAAIH,EAAY,EAAG,KACvC,UAAd7oB,EAAMqL,KAAwC,OAArB0b,GAChCkB,EAAiCxB,EAAoBM,GACzD,EA8H8HkC,CAAmBjpB,GAAQsoB,IAAKpB,EAAS9kB,SACvIC,eAAC4gB,KAAK,CAACC,cAAY,EAAA9gB,SAAA,CACfF,cAACkhB,KAAS,CAAAhhB,SACNC,eAACghB,KAAQ,CAACvgB,GAAI,CAAC,OAAQ,CAAC8C,MAAO,mBAAoBO,gBAAiB,SAAS/D,SAAA,CACzEF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,QAAQd,SAAC,aAChDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,QAAQd,SAAC,mBAChDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,QAAQd,SAAC,iBAChDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,QAAQd,SAAC,sBAChDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,QAAQd,SAAC,2BAChDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,QAAQd,SAAC,qBAGxDF,cAACshB,KAAS,CAAAphB,SACLqkB,EACGA,EAAoBtZ,KAAI,CAAC+a,EAAqBgB,IAC1C7mB,eAACghB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAAsC9gB,GAAI,CAACuP,OAAQ,WACpE8W,SAAUpC,IAAqBmC,EAC/BrF,cAAeA,IAAMoE,EAAiCC,GAAqB9lB,SAAA,CAE3EF,cAACohB,KAAS,CAACC,MAAM,OAAMnhB,SAAG8lB,EAAoBrH,cAC9C3e,cAACohB,KAAS,CAACC,MAAM,OAAMnhB,SAAG8lB,EAAoBzU,WAC9CvR,cAACohB,KAAS,CAACC,MAAM,OAAMnhB,SAAG2a,KAAOmL,EAAoBrY,YAAYiN,OAAO,gBACxE5a,cAACohB,KAAS,CAACC,MAAM,OAAMnhB,UAAkC,IAA/B8lB,EAAoBxU,OAAkB,MAAQ,YACxExR,cAACohB,KAAS,CAACC,MAAM,OAAMnhB,SAAG8lB,EAAoB7G,cAC9Cnf,cAACohB,KAAS,CAACC,MAAM,OAAMnhB,SAAG8lB,EAAoBvU,gBAAkBuU,EAAoBrU,mBATnDqV,KAazC,YAKhB7mB,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8O,UAAW,SAAUpL,GAAI,IAAKvD,WAAY,SAAU2C,MAAO,SAASxD,SAAA,CAAC,oBAAUqkB,EAAoBhN,OAAO,2BAG/IvX,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8O,UAAW,SAAUpL,GAAI,IAAKvD,WAAY,SAAU2C,MAAO,OAAOxD,SAAC,gDAEhH,aAMhBF,cAACqQ,GAAe,CACZC,oBAAqBA,EAAqB4D,uBAAwBA,MAIlF,E,UCy8CegT,OA3+Df,SAAqBhqB,GAEnB,MAAMiqB,EAA8B,CAClCnW,cAAe,GACf8Q,YAAY,EACZre,OAAQ,GACRwN,OAAQ,GACRC,kBAAmB,GACnBnT,OAAQ,GACRoT,aAAa,EACb4Q,cAAe,GACfC,aAAc,GACd5Q,QAAS,CACPuN,YAAa,GACbtN,WAAY,GACZC,QAAS,GACTC,SAAU,GACV5D,WAAY,GACZkD,SAAU,GACVW,OAAQ,GACRC,eAAgB,GAChBC,YAAa,GACbC,eAAgB,GAChBC,YAAa,KAIXwV,EAA2B,CAC/BzZ,WAAY,KACZ6D,OAAQ,CACNhP,MAAO,KACPmQ,YAAY,GAEdR,SAAU,CACR3P,MAAO,KACPmQ,YAAY,GAEdP,SAAU,CACR5P,MAAO,KACPmQ,YAAY,GAEdN,KAAM,CACJ7P,MAAO,KACPmQ,YAAY,GAEd0U,YAAa,CACX7kB,MAAO,KACPmQ,YAAY,GAEdxB,aAAa,GAGTmW,EAAmC,CACvCjW,WAAY,CAAES,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpE0M,YAAa,CAAE7M,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrEV,SAAU,CAAEO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEtE,WAAY,CAAEmE,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpET,OAAQ,CAAEM,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEE,SAAU,CAAEL,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEG,SAAU,CAAEN,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEI,KAAM,CAAEP,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC9DX,QAAS,CAAEQ,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACjER,eAAgB,CAAEK,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACxEP,YAAa,CAAEI,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrEL,YAAa,CAAEE,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrExO,OAAQ,CAAEqO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEhB,OAAQ,CAAEa,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEf,kBAAmB,CAAEY,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC3EoV,YAAa,CAAEvV,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrElU,OAAQ,CAAE+T,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,IAG5DK,EAAa,CACjB,CAACC,YAAa,EAAGC,WAAY,MAAOC,aAAa,GACjD,CAACF,YAAa,EAAGC,WAAY,UAAMC,aAAa,IAG5C8U,EAAkB,CACtB,CAACC,iBAAkB,EAAGC,gBAAiB,sCAA4B1F,cAAe,GAClF,CAACyF,iBAAkB,EAAGC,gBAAiB,oCAAwB1F,cAAe,KAG1E,2BAAEtc,EAA0B,6BAAEC,EAA4B,gCAAEC,GAAoC+C,qBAAWlE,IAE1G6e,EAA2BJ,GAAgCvlB,oBAAS,IACpE4lB,EAAoCN,GAAyCtlB,oBAAS,IAEtFyoB,EAAqBf,GAA0B1nB,oBAAS,IAKxD4S,EAAqB4D,GAA0BxW,oBAAS,IAExDyP,EAAsB+Y,GAA2BxoB,mBAASypB,IAC1DO,EAA2BC,GAAgCjqB,mBAAS4pB,IACpEtT,EAAYC,GAAiBvW,mBAAS,OAEtCkqB,EAAmBC,GAAwBnqB,mBAAS0pB,IAEpD3T,EAAcC,GAAmBhW,mBAAS,KAC1CiW,EAAcC,GAAmBlW,mBAAS,CAACmW,KAAM,GAAIlW,SAAS,KAC9DmW,EAAUC,GAAerW,mBAAS,CAACmW,KAAM,GAAIlW,SAAS,IAEvDonB,EAAUlS,iBAAO,MACjBiV,EAAgBjV,iBAAO,MACvBC,EAAeD,iBAAO,MACtBD,EAAYC,iBAAO,MAEnBsB,EAAeC,aAAY,CAC/BC,WAAY,CACVC,WAAY,CACVC,aAAc,CACZC,UAAW,SACXC,OAAO,EACPC,gBAAiB,CACfC,QAAS,CACP/T,GAAI,CACFgU,QAAS,YAGbH,MAAO,CACL7T,GAAI,CACF8C,MAAO,aAIbmR,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACNrI,QAAS,CACPsI,OAAQ,CAAC,GAAI,aAWzB9F,EAAgBA,CAACrR,EAAOiqB,KAC5B,IAAK,QAAQzS,KAAKxX,EAAMqL,MAAsB,cAAdrL,EAAMqL,KAAqC,WAAdrL,EAAMqL,KAAkC,cAAdrL,EAAMqL,KAAqC,eAAdrL,EAAMqL,KAAsC,QAAdrL,EAAMqL,KAA+B,UAAdrL,EAAMqL,IAE7K,GAAiB,UAAdrL,EAAMqL,IAAgB,CACvBrL,EAAMuN,iBACN,MAAM2c,EAAY5Y,SAAS6Y,eAAe9a,EAAqB8Y,4BAA8C,mBAAhB8B,EAAmC,gBAAkBA,GAC9IC,IACFA,EAAU/V,QACV+V,EAAUE,SAEd,MAEEpqB,EAAMuN,gBAEV,EAGIkK,EAAgBA,CAAC5I,EAAO/H,KAAsB,IAApB,WAAE4Q,GAAY5Q,EAC5C,MAAM6Q,EAAkBD,EAAWE,cAG7ByS,EAA2BC,GAAOA,EAAIC,QAAQ,UAAM,KAE1D,OAAO1b,EAAQgJ,QAAO9I,IAClB,MAAM+I,EAAqBuS,EAAyBtb,EAAO0E,SAASmE,eAC9DG,EAAWsS,EAAyBtb,EAAO0E,SAASnL,MAAM,KAAK6E,KAAI6K,GAAQA,EAAK,KAAIC,KAAK,IAAIL,eAE7F4S,EAAkBH,EAAyB1S,GAEjD,OACIG,EAAmBI,SAASsS,IAC5BzS,EAASG,SAASsS,EAAgB,GAExC,EAGEpT,EAAeC,IACF,WAAdA,EACD0S,GAAqBU,IACnBA,EAAsB/W,OAAOmB,YAAa,EACnC,IACF4V,MAIa,aAAdpT,EACN0S,GAAqBU,IACnBA,EAAsBpW,SAASQ,YAAa,EACrC,IACF4V,MAIc,aAAdpT,EACP0S,GAAqBU,IACnBA,EAAsBnW,SAASO,YAAa,EACrC,IACF4V,MAIa,SAAdpT,EACN0S,GAAqBU,IACnBA,EAAsBlW,KAAKM,YAAa,EACjC,IACF4V,MAIa,gBAAdpT,GACN0S,GAAqBU,IACnBA,EAAsBlB,YAAY1U,YAAa,EACxC,IACF4V,KAGT,EAGIlT,EAAaA,CAAC7S,EAAO2S,KACzB,GAAa,KAAV3S,GAA0B,eAAVA,EAAuB,CACxC,MAAMgmB,EAA6B,IAAId,GACtB,eAAdvS,IACEvC,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAE1BrE,EAAUqE,QAAU/Y,YAAW,KAC7BsqB,EAA2BnX,WAAWS,MAAQ,GAC9C0W,EAA2BnX,WAAWW,aAAc,EACpDwW,EAA2BnX,WAAWU,SAAU,EAClDyW,EAA2BnX,WAAWY,OAAQ,EAC5C0V,EAA6Ba,EAA2B,GACvD,KAsCY,gBAAdrT,GACEvC,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAE1BrE,EAAUqE,QAAU/Y,YAAW,KAC7BsqB,EAA2B5W,YAAYE,MAAQ,GAC/C0W,EAA2B5W,YAAYI,aAAc,EACrDwW,EAA2B5W,YAAYG,SAAU,EACjDyW,EAA2B7J,YAAY1M,OAAQ,EAC/C0V,EAA6Ba,EAA2B,GACvD,KAEiB,WAAdrT,EACN0S,GAAqBU,IACnBA,EAAsB/W,OAAOmB,YAAa,EACnC,IAAK4V,MAGM,aAAdpT,EACN0S,GAAqBU,IACnBA,EAAsBpW,SAASQ,YAAa,EACrC,IAAK4V,MAGM,aAAdpT,EACN0S,GAAqBU,IACnBA,EAAsBnW,SAASO,YAAa,EACrC,IAAK4V,MAGM,SAAdpT,EACN0S,GAAqBU,IACnBA,EAAsBlW,KAAKM,YAAa,EACjC,IAAK4V,MAGM,gBAAdpT,GACN0S,GAAqBU,IACnBA,EAAsBlB,YAAY1U,YAAa,EACxC,IAAK4V,KAGlB,KACkB,KAAV/lB,IACW,WAAd2S,EACD0S,GAAqBU,IACnBA,EAAsB/W,OAAOmB,YAAa,EACnC,IAAK4V,MAGM,aAAdpT,EACN0S,GAAqBU,IACnBA,EAAsBpW,SAASQ,YAAa,EACrC,IAAK4V,MAGM,aAAdpT,EACN0S,GAAqBU,IACnBA,EAAsBnW,SAASO,YAAa,EACrC,IAAK4V,MAGM,SAAdpT,EACN0S,GAAqBU,IACnBA,EAAsBlW,KAAKM,YAAa,EACjC,IAAK4V,MAGM,gBAAdpT,GACN0S,GAAqBU,IACnBA,EAAsBlB,YAAY1U,YAAa,EACxC,IAAK4V,MAGlB,EAo7BI1F,EAAwBA,KAC5B3kB,YAAW,KAxOSyY,MACpB,IAAInY,GAAU,EACd,MAAMgqB,EAA6B,IAAId,GAkOvC,MAhOkD,KAA/CA,EAA0BrW,WAAWS,QACnC+E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2BnX,WAAWY,OAAQ,EAC9CgC,EAAc,eAEhBzV,GAAU,GAGoC,KAA7C2O,EAAqBiE,QAAQuN,cAC9B6J,EAA2B7J,YAAY7M,MAAQ,uDAC/C0W,EAA2B7J,YAAY3M,aAAc,EACrDwW,EAA2B7J,YAAY5M,SAAU,EAC9C8E,OAAOC,OAAO4Q,GAA2B3Q,OAAMC,IAAuB,IAAfA,EAAK/E,UAC7DuW,EAA2B7J,YAAY1M,OAAQ,EAC/CgC,EAAc,gBAEhBzV,GAAU,GAGuC,KAAhDkpB,EAA0B/I,YAAY7M,QACpC+E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2B7J,YAAY1M,OAAQ,EAC/CgC,EAAc,gBAEhBzV,GAAU,GAGiC,KAA1C2O,EAAqBiE,QAAQG,WAC9BiX,EAA2BjX,SAASO,MAAQ,8CAC5C0W,EAA2BjX,SAASS,aAAc,EAClDwW,EAA2BjX,SAASQ,SAAU,EAC3C8E,OAAOC,OAAO4Q,GAA2B3Q,OAAMC,IAAuB,IAAfA,EAAK/E,UAC7DuW,EAA2BjX,SAASU,OAAQ,EAC5CgC,EAAc,aAEhBzV,GAAU,GAGmC,KAA5C2O,EAAqBiE,QAAQzD,aAC9B6a,EAA2B7a,WAAWmE,MAAQ,4CAC9C0W,EAA2B7a,WAAWqE,aAAc,EACpDwW,EAA2B7a,WAAWoE,SAAU,EAC7C8E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2B7a,WAAWsE,OAAQ,EAC1Ca,EAAamE,SACfnE,EAAamE,QAAQhF,SAGzBzT,GAAU,GAGsC,KAA/CkpB,EAA0B/Z,WAAWmE,QACnC+E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2B7a,WAAWsE,OAAQ,EAC1Ca,EAAamE,SACfnE,EAAamE,QAAQhF,SAGzBzT,GAAU,GAG+B,KAAxC2O,EAAqBiE,QAAQI,SAC9BgX,EAA2BhX,OAAOM,MAAQ,iDAC1C0W,EAA2BhX,OAAOQ,aAAc,EAChDwW,EAA2BhX,OAAOO,SAAU,EACzC8E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2BhX,OAAOS,OAAQ,EAC1C4V,GAAqBU,IACnBA,EAAsB/W,OAAOmB,YAAa,EACnC,IAAI4V,MAEftU,EAAc,WAEdzV,GAAU,GAG4B,OAArCopB,EAAkBzV,SAAS3P,QAC5BgmB,EAA2BrW,SAASL,MAAQ,kDAC5C0W,EAA2BrW,SAASH,aAAc,EAClDwW,EAA2BrW,SAASJ,SAAU,EAC3C8E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2BrW,SAASF,OAAQ,EAC5C4V,GAAqBU,IACnBA,EAAsBpW,SAASQ,YAAa,EACrC,IAAI4V,MAEbtU,EAAc,aAEhBzV,GAAU,GAG4B,OAArCopB,EAAkBxV,SAAS5P,QAC5BgmB,EAA2BpW,SAASN,MAAQ,oDAC5C0W,EAA2BpW,SAASJ,aAAc,EAClDwW,EAA2BpW,SAASL,SAAU,EAC3C8E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2BpW,SAASH,OAAQ,EAC5C4V,GAAqBU,IACnBA,EAAsBnW,SAASO,YAAa,EACrC,IAAI4V,MAEbtU,EAAc,aAEhBzV,GAAU,GAGwB,OAAjCopB,EAAkBvV,KAAK7P,QACxBgmB,EAA2BnW,KAAKP,MAAQ,sDACxC0W,EAA2BnW,KAAKL,aAAc,EAC9CwW,EAA2BnW,KAAKN,SAAU,EACvC8E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2BnW,KAAKJ,OAAQ,EACxC4V,GAAqBU,IACnBA,EAAsBlW,KAAKM,YAAa,EACjC,IAAI4V,MAEbtU,EAAc,SAEhBzV,GAAU,GAGgC,KAAzC2O,EAAqBiE,QAAQE,UAC9BkX,EAA2BlX,QAAQQ,MAAQ,sDAC3C0W,EAA2BlX,QAAQU,aAAc,EACjDwW,EAA2BlX,QAAQS,SAAU,EAC1C8E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2BlX,QAAQW,OAAQ,EAC3CgC,EAAc,YAEhBzV,GAAU,GAGuC,KAAhD2O,EAAqBiE,QAAQK,gBAAyE,KAAhDtE,EAAqBiE,QAAQO,iBACpF6W,EAA2B/W,eAAeK,MAAQ,qDAClD0W,EAA2B/W,eAAeO,aAAc,EACxDwW,EAA2B/W,eAAeM,SAAU,EACjD8E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2B/W,eAAeQ,OAAQ,EAClDgC,EAAc,mBAEhBzV,GAAU,GAGoC,KAA7C2O,EAAqBiE,QAAQM,aAAmE,KAA7CvE,EAAqBiE,QAAQQ,cACjF4W,EAA2B9W,YAAYI,MAAQ,iEAC/C0W,EAA2B9W,YAAYM,aAAc,EACrDwW,EAA2B9W,YAAYK,SAAU,EAC9C8E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2B9W,YAAYO,OAAQ,EAC/CgC,EAAc,gBAEhBzV,GAAU,GAGuC,KAAhDkpB,EAA0BhW,YAAYI,QACpC+E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2B9W,YAAYO,OAAQ,EAC/CgC,EAAc,gBAEhBzV,GAAU,GAGuC,KAAhDkpB,EAA0B9V,YAAYE,QACpC+E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2B5W,YAAYK,OAAQ,EAC/CgC,EAAc,gBAEhBzV,GAAU,GAGuB,KAAhC2O,EAAqB8D,SACtBuX,EAA2BvX,OAAOa,MAAQ,gDAC1C0W,EAA2BvX,OAAOe,aAAc,EAChDwW,EAA2BvX,OAAOc,SAAU,EACzC8E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2BvX,OAAOgB,OAAQ,EAC1CgC,EAAc,WAEhBzV,GAAU,GAGuB,KAAhC2O,EAAqB1J,SACtB+kB,EAA2B/kB,OAAOqO,MAAQ,8CAC1C0W,EAA2B/kB,OAAOuO,aAAc,EAChDwW,EAA2B/kB,OAAOsO,SAAU,EACzC8E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2B/kB,OAAOwO,OAAQ,EAC1CgC,EAAc,WAEhBzV,GAAU,GAGkC,KAA3C2O,EAAqB+D,oBACtBsX,EAA2BtX,kBAAkBY,MAAQ,6DACrD0W,EAA2BtX,kBAAkBc,aAAc,EAC3DwW,EAA2BtX,kBAAkBa,SAAU,EACpD8E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2BtX,kBAAkBe,OAAQ,EACrDgC,EAAc,sBAEhBzV,GAAU,GAG8B,KAAvC2O,EAAqB4U,gBACtByG,EAA2BnB,YAAYvV,MAAQ,yDAC/C0W,EAA2BnB,YAAYrV,aAAc,EACrDwW,EAA2BnB,YAAYtV,SAAU,EAC9C8E,OAAOC,OAAO0R,GAA4BzR,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9DuW,EAA2BnB,YAAYpV,OAAQ,EAC/C4V,GAAqBU,IACnBA,EAAsBlB,YAAY1U,YAAa,EACxC,IAAI4V,MAEbtU,EAAc,gBAEhBzV,GAAU,GAQZmpB,EAA6Ba,GACtBhqB,CAAO,EAKTmY,KACDmR,EAAc7Q,QAAQhF,QACnB/U,EAAMurB,8BACPC,IAGAzF,GAA6B,GAEjC,GACC,IAAI,EAGHyF,EAA4BtqB,UAChC8V,GAAuB,GACvB,MAAMyU,QAA0C1b,GAA0BE,GAC1B,MAA7Cwb,EAAkC9oB,QACnCpB,IAAMsB,QAAQ4oB,EAAkC7oB,KAAM,CAACnB,QAAS,aAChEzB,EAAMma,4BAA2B,GACjC6L,KAGAzkB,IAAMkB,MAAMgpB,EAAkC7oB,KAAM,CAACnB,QAAS,WAEhEuV,GAAuB,EAAM,EAiGzBgP,EAAmBA,KACvB6B,EAAQ9N,QAAQsO,QACDR,EAAQ9N,QAAQuO,iBAAiB,mBACzCC,SAAQlM,GAASA,EAAMmM,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,OAE1EiC,EAAqBT,GAErBxT,GAAgB0C,IACdA,EAAiB3Y,SAAU,EAC3B2Y,EAAiBzC,KAAO,GACjB,IAAIyC,MAEbvC,GAAYwC,IACVA,EAAa5Y,SAAU,EACvB4Y,EAAa1C,KAAO,GACb,IAAI0C,MAGVrZ,EAAMurB,+BACPvrB,EAAM+kB,mCAGRhO,EAAc,MAGd,MAAM6N,IAAa3U,EAAqB2U,WAExCoE,EAAwBiB,GACxBQ,EAA6BL,GAE1B5hB,GACDC,GAAgC,GAG/Bmc,EACD5jB,YAAW,KACT4pB,EAAc7Q,QAAQhF,OAAO,GAC5B,KAGH6V,EAAc7Q,QAAQhF,OACxB,EAGI2W,EAA4BA,KAChC7D,EAAQ9N,QAAQsO,QACDR,EAAQ9N,QAAQuO,iBAAiB,mBACzCC,SAAQlM,GAASA,EAAMmM,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,OAE1EiC,EAAqBT,GAErBxT,GAAgB0C,IACdA,EAAiB3Y,SAAU,EAC3B2Y,EAAiBzC,KAAO,GACjB,IAAIyC,MAEbvC,GAAYwC,IACVA,EAAa5Y,SAAU,EACvB4Y,EAAa1C,KAAO,GACb,IAAI0C,MAGVrZ,EAAMurB,+BACPvrB,EAAM+kB,mCAGRhO,EAAc,MAEd6T,EAAc7Q,QAAQhF,QAEnBvM,GACDC,GAAgC,GAGlCugB,EAAwBiB,GACxBU,EAAqBT,GACrBO,EAA6BL,GAC7BlC,GAAuB,EAAK,EAuE9B,OArDAve,qBAAU,KAfoBzI,WAC5B,MAAMqB,QAAiB8Q,KACP,MAAb9Q,GACDiU,EAAgBjU,EAClB,EAYAgY,GACAqQ,EAAc7Q,QAAQhF,OAAO,GAC5B,IAEHpL,qBAAU,MAC+B,IAApCsG,EAAqB2U,YAnMgB1jB,WACxC8V,GAAuB,GACvB9E,SAAS6Y,eAAe,qBAAqBzlB,MAAQ2K,EAAqBiE,QAAQC,WAClFjC,SAAS6Y,eAAe,eAAezlB,MAAQ2K,EAAqBiE,QAAQuN,YAC5EvP,SAAS6Y,eAAe,mBAAmBzlB,MAAQ2K,EAAqBiE,QAAQG,SAEhF,IAAIsX,EAAqB,IAAIjB,GAG7B,GAFAiB,EAAmBlb,WAAakN,KAAO1N,EAAqBiE,QAAQzD,YAEjER,EAAqBiE,QAAQP,SAAS,CACvC,MAAMpR,QAAiBmR,GAAuBzD,EAAqBiE,QAAQP,UACrEiH,QAA6BtH,GAAgB/Q,EAASsY,cACtDC,QAAyBtH,GAAYjR,EAASwY,cAE9CI,EAAoB5E,EAAaxJ,WAAUkI,GAAYA,EAASlC,OAASxQ,EAASsY,eAClFO,EAAoBR,EAAqB7N,WAAUmI,GAAYA,EAASnC,OAASxQ,EAASwY,eAC1FM,EAAgBP,EAAiB/N,WAAUoI,GAAQA,EAAKpC,OAASxQ,EAAS+Y,WAEhFqQ,EAAmB1W,SAAS3P,MAAQiR,EAAa4E,GACjDwQ,EAAmBzW,SAAS5P,MAAQsV,EAAqBQ,GACzDuQ,EAAmBxW,KAAK7P,MAAQwV,EAAiBO,GACjDsQ,EAAmB1X,YAAchE,EAAqBgE,WACxD,CAEA,MAAM2X,EAAkBxW,EAAWrI,WAAUuH,GAAUA,EAAOiB,cAAgBtF,EAAqBiE,QAAQI,SAC3GqX,EAAmBrX,OAAOhP,MAAQ8P,EAAWwW,GAE7C,MAAMC,EAAuBxB,EAAgBtd,WAAUod,GAAeA,EAAYtF,gBAAkB5U,EAAqB4U,gBACzH8G,EAAmBxB,YAAY7kB,MAAQ+kB,EAAgBwB,GAEvDlB,EAAqBgB,GAErBljB,GAAgC,GAEhCyJ,SAAS6Y,eAAe,kBAAkBzlB,MAAQ2K,EAAqBiE,QAAQE,QAC/ElC,SAAS6Y,eAAe,yBAAyBzlB,MAAQ2K,EAAqBiE,QAAQK,eACtFrC,SAAS6Y,eAAe,sBAAsBzlB,MAAQ2K,EAAqBiE,QAAQM,YACnFtC,SAAS6Y,eAAe,yBAAyBzlB,MAAQ2K,EAAqBiE,QAAQO,eACtFvC,SAAS6Y,eAAe,sBAAsBzlB,MAAQ2K,EAAqBiE,QAAQQ,YAEhFzE,EAAqB8Y,2BACtB/nB,YAAW,KACTypB,EAA6BL,GAC7BpT,GAAuB,GAEvBD,EAAc,WAAW,GACxB,MAGH0T,EAA6BL,GAC7BpT,GAAuB,GAEvBD,EAAc,UAChB,EA+IE+U,EACF,GACC,CAAC7b,EAAqB2U,aAEzBjb,qBAAU,KACL3J,EAAMurB,gCACPvC,EAAwBhpB,EAAMurB,+BAlJerqB,WAC/C8V,GAAuB,GACvB9E,SAAS6Y,eAAe,qBAAqBzlB,MAAQtF,EAAMurB,8BAA8BrX,QAAQC,WACjGjC,SAAS6Y,eAAe,eAAezlB,MAAQtF,EAAMurB,8BAA8BrX,QAAQuN,YAC3FvP,SAAS6Y,eAAe,mBAAmBzlB,MAAQtF,EAAMurB,8BAA8BrX,QAAQG,SAE/F,MAAMsX,EAAqB,IAAIjB,GAC/BiB,EAAmBlb,WAAakN,KAAO3d,EAAMurB,8BAA8BrX,QAAQzD,YAEnF,MAAMlO,QAAiBmR,GAAuB1T,EAAMurB,8BAA8BrX,QAAQP,UACpFiH,QAA6BtH,GAAgB/Q,EAASsY,cACtDC,QAAyBtH,GAAYjR,EAASwY,cAE9C6Q,EAAkBxW,EAAWrI,WAAUuH,GAAUA,EAAOiB,cAAgBvV,EAAMurB,8BAA8BrX,QAAQI,SACpH6G,EAAoB5E,EAAaxJ,WAAUkI,GAAYA,EAASlC,OAASxQ,EAASsY,eAClFO,EAAoBR,EAAqB7N,WAAUmI,GAAYA,EAASnC,OAASxQ,EAASwY,eAC1FM,EAAgBP,EAAiB/N,WAAUoI,GAAQA,EAAKpC,OAASxQ,EAAS+Y,WAC1EuQ,EAAuBxB,EAAgBtd,WAAUod,GAAeA,EAAYtF,gBAAkB7kB,EAAMurB,8BAA8B1G,gBAExI8G,EAAmBrX,OAAOhP,MAAQ8P,EAAWwW,GAC7CD,EAAmB1W,SAAS3P,MAAQiR,EAAa4E,GACjDwQ,EAAmBzW,SAAS5P,MAAQsV,EAAqBQ,GACzDuQ,EAAmBxW,KAAK7P,MAAQwV,EAAiBO,GACjDsQ,EAAmBxB,YAAY7kB,MAAQ+kB,EAAgBwB,GACvDF,EAAmB1X,YAAcjU,EAAMurB,8BAA8BtX,YACrE0W,EAAqBgB,GAErBzZ,SAAS6Y,eAAe,kBAAkBzlB,MAAQtF,EAAMurB,8BAA8BrX,QAAQE,QAC9FlC,SAAS6Y,eAAe,yBAAyBzlB,MAAQtF,EAAMurB,8BAA8BrX,QAAQK,eACrGrC,SAAS6Y,eAAe,sBAAsBzlB,MAAQtF,EAAMurB,8BAA8BrX,QAAQM,YAClGtC,SAAS6Y,eAAe,yBAAyBzlB,MAAQtF,EAAMurB,8BAA8BrX,QAAQO,eACrGvC,SAAS6Y,eAAe,sBAAsBzlB,MAAQtF,EAAMurB,8BAA8BrX,QAAQQ,YAElG+V,EAA6BL,GAC7BpT,GAAuB,GACvBD,EAAc,SAAS,EAgHrBgV,GACF,GACC,CAAC/rB,EAAMurB,gCAEV5hB,qBAAU,MAC0B,IAA/BpB,IACEvI,EAAMgsB,aAC0B,IAA9B7F,IAA8D,IAAxB8C,GACvCnD,GAAsC,GACtC9lB,EAAMisB,cAAa,KAGnBtG,IACA3lB,EAAMisB,cAAa,KAIpBjsB,EAAMksB,aAC0B,IAA9B/F,IAA8D,IAAxB8C,GAIvCjD,IAHAhmB,EAAMmsB,cAAa,IAQpBnsB,EAAMosB,aAC0B,IAA9BjG,IAA8D,IAAxB8C,GAIvCyC,IAHA1rB,EAAMqsB,cAAa,IAOzB,GACC,CAACrsB,EAAMgsB,UAAWhsB,EAAMksB,UAAWlsB,EAAMosB,UAAW7jB,IAGrDtF,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACuP,KAAS,CAAC3O,GAAI,CAAC,4BAA6B,CAACoY,GAAI,GAAIvV,OAAQ,QAASvD,SACrEC,eAACiE,IAAG,CAACxD,GAAI,CAAE4oB,UAAW,UAAWha,aAAc,OAAQqQ,UAAW,EAAGjH,GAAI,IAAKC,GAAI,IAAKE,GAAI,IAAKC,GAAI,KAAO9Y,SAAA,CACzGF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8O,UAAW,SAAU3O,WAAY,SAAU2C,MAAO,QAAQxD,SAAC,8CACzFC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,gBAAiBiX,SAAU,QAAS/M,UAAU,OAAOqa,IAAKrB,EAAQ7kB,SAAA,CAE7GF,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0BrW,WAAWS,QAAavR,KAAMmnB,EAA0BrW,WAAWW,YAAawC,UAAU,OAAOiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAAM5D,SAC1MF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAO+W,UAAW,QAAQjZ,SAC5CF,cAAC+B,IAAS,CAACpC,OAA+D,IAAjD+nB,EAA0BrW,WAAWU,QAA0B2X,UAA8C,IAApCvc,EAAqB2U,WACrH7f,MAAM,4BAAeC,QAAQ,WAAW0K,GAAG,oBAAoB+C,aAAa,MAC5E2J,SAAyB,eAAftF,EAA+BuF,GAAUA,GAAwB,eAAfvF,GAA+BuF,EAAMtH,QAAU6V,EAC3GxlB,SAAWC,GA5sCCC,KAC1B,GAAa,KAAVA,EAAa,CACI,eAAfwR,GACDC,EAAc,MAGhB,MAAMwF,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAC7B,MAAMsqB,EAA6B,IAAId,GACpCjO,EAAWlC,OAAS,IACrBiR,EAA2BnX,WAAWS,MAAQ,8DAC9C0W,EAA2BnX,WAAWW,aAAc,EACpDwW,EAA2BnX,WAAWU,SAAU,EAChDyW,EAA2BnX,WAAWY,OAAQ,EAC9C0V,EAA6Ba,KAG7BtC,GAAwBvM,IACtBA,EAAyBvI,QAAQC,WAAaoI,EACvC,IAAKE,MAGd6O,EAA2BnX,WAAWS,MAAQ,GAC9C0W,EAA2BnX,WAAWW,aAAc,EACpDwW,EAA2BnX,WAAWU,SAAU,EAChDyW,EAA2BnX,WAAWY,OAAQ,EAC9C0V,EAA6Ba,GAC/B,GACC,IACL,KACI,CACgB,eAAfxU,GACDC,EAAc,MAGhB,MAAMuU,EAA6B,IAAId,GACvCc,EAA2BnX,WAAWS,MAAQ,GAC9C0W,EAA2BnX,WAAWW,aAAc,EACpDwW,EAA2BnX,WAAWU,SAAU,EAChDyW,EAA2BnX,WAAWY,OAAQ,EAC9C0V,EAA6Ba,EAC/B,GA+pC+B5O,CAAmBrX,EAAEI,OAAOH,OAC7CuN,UAAYxN,GAAM4M,EAAc5M,EAAG,eACnC4X,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,cAC1C4W,WAAY,CAAExX,MAAO,CAAE+nB,oBAAqBxc,EAAqB2U,WAAa,UAAa,SAAUzI,UAAW,IAChHuQ,iBAAqD,IAApCzc,EAAqB2U,WAAsB,CAAC+H,OAAQ5gB,SAAQ,IAAU,aAM/FjJ,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0B/I,YAAY7M,QAAavR,KAAMmnB,EAA0B/I,YAAY3M,YAAawC,UAAU,MAAMiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAAM5D,SAC3MF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAO+W,UAAW,QAAQjZ,SAC5CF,cAAC+B,IAAS,CAACpC,OAAgE,IAAlD+nB,EAA0B/I,YAAY5M,QAA0B2X,UAA8C,IAApCvc,EAAqB2U,WACtH7f,MAAM,WAAQC,QAAQ,WAAW0K,GAAG,cAAc+C,aAAa,MAC/D2J,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpE3P,SAAWC,GA5qCAC,KACzB,GAAa,KAAVA,EAAa,CACd,MAAMiX,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAC7B,MAAMsqB,EAA6B,IAAId,GACpCjO,EAAWlC,OAAS,GACrBiR,EAA2B7J,YAAY7M,MAAQ,wDAC/C0W,EAA2B7J,YAAY3M,aAAc,EACrDwW,EAA2B7J,YAAY5M,SAAU,EACjDyW,EAA2B7J,YAAY1M,OAAQ,EAC/C0V,EAA6Ba,KAGX,gBAAfxU,GACDC,EAAc,MAGhBiS,GAAwBvM,IACtBA,EAAyBvI,QAAQuN,YAAclF,EACxC,IAAKE,MAGd6O,EAA2B7J,YAAY7M,MAAQ,GAC/C0W,EAA2B7J,YAAY3M,aAAc,EACrDwW,EAA2B7J,YAAY5M,SAAU,EACjDyW,EAA2B7J,YAAY1M,OAAQ,EAC/C0V,EAA6Ba,GAC/B,GACC,IACL,GA2oC+BlC,CAAkB/jB,EAAEI,OAAOH,OAC5CuN,UAAYxN,GAAM4M,EAAc5M,EAAG,mBACnC4X,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,aAC1C4W,WAAY,CAAExX,MAAO,CAAE+nB,oBAAqBxc,EAAqB2U,WAAa,UAAa,SAAUzI,UAAW,IAChHuQ,iBAAqD,IAApCzc,EAAqB2U,WAAsB,CAAC+H,OAAQ5gB,SAAQ,IAAU,aAM7FjJ,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0BnW,SAASO,QAAavR,KAAMmnB,EAA0BnW,SAASS,YAAawC,UAAU,MAAMiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAC/L+Q,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACNrI,QAAS,CAAEsI,OAAQ,CAAC,IAAK,QAI/B/U,SAEFF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOX,QAAS,cAAe0X,UAAW,QAAQjZ,SACpEF,cAAC+B,IAAS,CAACpC,OAA6D,IAA/C+nB,EAA0BnW,SAASQ,QAA0B2X,UAA8C,IAApCvc,EAAqB2U,WACnH7f,MAAM,iBAASC,QAAQ,WAAW0K,GAAG,kBAAkB+C,aAAa,MACpE2J,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjE3P,SAAWC,GA3pCHC,KACxB,MAAMiX,EAAajX,EAEhBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAY7B,GAXAgoB,GAAwBvM,IACtBA,EAAyBvI,QAAQG,SAAWkI,EACrC,IACFE,MAIW,aAAf3F,GACDC,EAAc,MAGbyT,EAA0BnW,SAASQ,QAAQ,CAC5C,MAAMyW,EAA6B,IAAId,GACvCc,EAA2BjX,SAASO,MAAQ,GAC5C0W,EAA2BjX,SAASS,aAAc,EAClDwW,EAA2BjX,SAASQ,SAAU,EAC9CyW,EAA2BjX,SAASU,OAAQ,EAC5C0V,EAA6Ba,EAC/B,IAKC,IAAI,EA4nC0B1O,CAAiBvX,EAAEI,OAAOH,OAC3CuN,UAAYxN,GAAM4M,EAAc5M,EAAG,qBACnC6W,WAAY,CAAExX,MAAO,CAAE+nB,oBAAqBxc,EAAqB2U,WAAa,UAAa,UAC3F8H,iBAAqD,IAApCzc,EAAqB2U,WAAsB,CAAC+H,OAAQ5gB,SAAQ,IAAU,aAM/FjJ,cAACsa,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAIva,SAClEF,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAAC0a,KAAa,CAACrG,WAAY,CAAC,cAAcnU,SACxCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0B/Z,WAAWmE,QAAavR,KAAMmnB,EAA0B/Z,WAAWqE,YAAawC,UAAU,SAASiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAAM5D,SAC5MF,cAACoE,IAAG,CAACxD,GAAI,CAACwB,MAAO,IAAKkC,GAAI,mBAAmBpE,SAC3CF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,QAAUlC,SAC5BF,cAAC8pB,KAAS,CAAC7nB,MAAM,eACf2Y,OAAO,aAAapY,MAAOolB,EAAkBja,WAC7C+b,UAA8C,IAApCvc,EAAqB2U,WAC/BjN,UAAW,CACTmG,UACE,CACE1B,SAAUxG,EACVlG,GAAI,oBACJjN,OAA+D,IAAjD+nB,EAA0B/Z,WAAWoE,QACnDoI,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,cAC1C5B,GAAI,CAAC,wBAAyB,CAAE+oB,qBAAyD,IAApCxc,EAAqB2U,WAAsB,UAAY,OAGlHxf,SAAWE,GArpCdA,KACnB,GAAGA,EAAM,CACP,MAAMiX,EAAajX,EAAMyY,GACtBrI,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAC7B,MAAMgd,EAAQ,IAAI3U,KACZ4U,EAAkBD,EAAME,cAAgB3B,EAAW2B,cACnDC,EAAmBH,EAAMI,WAAa7B,EAAW6B,WACjDC,EAAiBL,EAAMM,UAAY/B,EAAW+B,UAC9CC,EAAMP,EAAME,cAAgB3B,EAAW2B,cAE7C,IAAIM,EAAgC,GAAlBP,EAAuBE,EACrCM,EAAYJ,EAEZA,EAAiB,IACnBG,GAAe,EACfC,GAAa,IAGf,MAAM6M,EAA6B,IAAId,GAEvC,GAAGxM,EAAQzB,GAAcgC,EAAM,GAAKG,MAAMH,IAAQC,EAAc,IAAuB,KAAhBA,GAAsBC,EAAY,GACvG6M,EAA2B7a,WAAWmE,MAAQ,sFAC9C0W,EAA2B7a,WAAWqE,aAAc,EACpDwW,EAA2B7a,WAAWoE,SAAU,EAChDyW,EAA2B7a,WAAWsE,OAAQ,EAC9C0V,EAA6Ba,GAE7BX,GAAqBU,IACnBA,EAAsB5a,WAAanL,EAC5B,IACF+lB,UAKL,CACgB,eAAfvU,GACDC,EAAc,MAGhB,MAAMkC,EAAgB0E,KAAOpB,GAAYmB,OAAO,cAChDsL,GAAwBvM,IACxBA,EAAyBvI,QAAQzD,WAAawI,EACrC,IACFwD,MAIPkO,GAAqBU,IACnBA,EAAsB5a,WAAanL,EAC5B,IACF+lB,MAIPC,EAA2B7a,WAAWmE,MAAQ,GAC9C0W,EAA2B7a,WAAWqE,aAAc,EACpDwW,EAA2B7a,WAAWoE,SAAU,EAChDyW,EAA2B7a,WAAWsE,OAAQ,EAC9C0V,EAA6Ba,EAK/B,IACC,IACL,GA+kC2C3M,CAAYrZ,GACjCuN,UAAYxN,GAAM4M,EAAc5M,EAAG,+BASjDvC,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0BlW,OAAOM,QAAavR,KAAMmnB,EAA0BlW,OAAOQ,YAAawC,UAAU,MAAMiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAAM5D,SACjMF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAO+W,UAAW,QAAQjZ,SAC5CF,cAAC0M,KAAY,CAACqd,eAAa,EAACnd,GAAG,gBAAgB8c,UAA8C,IAApCvc,EAAqB2U,WAC5Etf,MAAOolB,EAAkBpW,OAAOhP,MAChCmK,QAAS2F,EACTyH,eAAiBlN,GAAWA,EAAO2F,WACnCwH,aAAcA,CAAC9c,EAAO2P,IACpB7M,cAAA,SAAQ9C,EAAKgD,SACV2M,EAAO2F,aAGZlQ,SAAUA,CAACC,EAAGC,IAlmCTyX,EAAC1X,EAAGC,KAmBzB,GAlBkB,WAAfwR,GACDC,EAAc,MAGhBiS,GAAwBvM,IACtBA,EAAyBvI,QAAQI,OAAShP,EAAMiQ,YACzC,IACFkH,MAIPkO,GAAqBU,IACnBA,EAAsB/W,OAAOhP,MAAQA,EAC9B,IACF+lB,MAIJb,EAA0BlW,OAAOO,QAAQ,CAC1C,MAAMyW,EAA6B,IAAId,GACvCc,EAA2BhX,OAAOM,MAAQ,GAC1C0W,EAA2BhX,OAAOQ,aAAc,EAChDwW,EAA2BhX,OAAOO,SAAU,EAC5CyW,EAA2BhX,OAAOS,OAAQ,EAC1C0V,EAA6Ba,EAC/B,GAwkCwCvO,CAAe1X,EAAGC,GAC1CuN,UAAYxN,GAAM4M,EAAc5M,EAAG,mBACnChC,KAAMqnB,EAAkBpW,OAAOmB,WAC/BuH,QAASA,IAAMhF,EAAY,UAC3BiF,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,UAC1CmN,cAAc,EACd7C,YAAcC,GACZ/M,cAAC+B,IAAS,IAAKgL,EACb9K,MAAM,oBACNqX,SAAWC,GAAUA,GAAwB,WAAfvF,GAA2BuF,EAAMtH,QAC/DtS,OAA2D,IAA7C+nB,EAA0BlW,OAAOO,QAC/CnR,GAAI,CAAC,wBAAyB,CAAE+oB,qBAAyD,IAApCxc,EAAqB2U,WAAsB,UAAY,OAGhH1H,kBAAgB,EAChBC,UAAW,aAQnBra,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0BvV,SAASL,QAAavR,KAAMmnB,EAA0BvV,SAASH,YAAawC,UAAU,OAAOiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAAM5D,SACtMF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,QAAS+W,UAAW,QAAQjZ,SAC9CF,cAAC0M,KAAY,CAACqd,eAAa,EAACnd,GAAG,kBAAkB8c,UAA8C,IAApCvc,EAAqB2U,aAA2E,IAApD3U,EAAqB8Y,2BAC1HzjB,MAAOolB,EAAkBzV,SAAS3P,MAClCmK,QAAS8G,EACTqI,cAAe,wBACfvG,cAAeA,EACfwE,eAAiBlN,GAAWA,EAAOmI,KACnCgF,aAAcA,CAAC9c,EAAO2P,IACpB7M,cAAA,SAAQ9C,EAAKgD,SACV2M,EAAOmI,OAGZ1S,SAAUA,CAACC,EAAGC,IAtmCRpE,OAAOmE,EAAGC,KA8BhC,GA7BkB,aAAfwR,GACDC,EAAc,MAGhB4T,GAAqBU,IACnBA,EAAsBpW,SAAS3P,MAAQA,EAChC,IACF+lB,MAIiC,OAArCX,EAAkBxV,SAAS5P,OAC5BqlB,GAAqBU,IACnBA,EAAsBnW,SAAS5P,MAAQ,KAChC,IACF+lB,MAK2B,OAAjCX,EAAkBvV,KAAK7P,OACxBqlB,GAAqBU,IACnBA,EAAsBlW,KAAK7P,MAAQ,KAC5B,IACF+lB,MAKNb,EAA0BvV,SAASJ,QAAQ,CAC5C,MAAMyW,EAA6B,IAAId,GACvCc,EAA2BrW,SAASL,MAAQ,GAC5C0W,EAA2BrW,SAASH,aAAc,EAClDwW,EAA2BrW,SAASJ,SAAU,EAC9CyW,EAA2BrW,SAASF,OAAQ,EAC5C0V,EAA6Ba,EAC/B,CAEAzU,GAAYwC,IACVA,EAAa1C,KAAO,GACb,IAAI0C,MAGb3C,GAAgB0C,IACdA,EAAiB3Y,SAAU,EACpB,IAAI2Y,MAGb,MAAMwB,QAA6BtH,GAAgBhO,EAAMyN,MACzD2D,GAAgB0C,IACdA,EAAiB3Y,SAAU,EAC3B2Y,EAAiBzC,KAAOiE,EACjB,IAAIxB,KACX,EAgjCsC2F,CAAgB1Z,EAAGC,GAC3CuN,UAAYxN,GAAM4M,EAAc5M,EAAG,mBACnChC,KAAMqnB,EAAkBzV,SAASQ,WACjCuH,QAASA,IAAMhF,EAAY,YAC3BiF,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,YAC1CmN,cAAc,EACd7C,YAAcC,GACZ/M,cAAC+B,IAAS,IAAKgL,EACb9K,MAAM,oBACNqX,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjEtS,OAA6D,IAA/C+nB,EAA0BvV,SAASJ,QACjDnR,GAAI,CAAC,wBAAyB,CAAE+oB,qBAAyD,IAApCxc,EAAqB2U,WAAsB,UAAY,OAGhH1H,kBAAgB,EAChBC,UAAW,aAMnBra,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0BtV,SAASN,QAAavR,KAAMmnB,EAA0BtV,SAASJ,YAAawC,UAAU,MAAMiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAAM5D,SACrMF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAO+W,UAAW,QAAQjZ,SAC5CF,cAAC0M,KAAY,CAACqd,eAAa,EAACnd,GAAG,kBAAkB8c,UAA8C,IAApCvc,EAAqB2U,aAA2E,IAApD3U,EAAqB8Y,2BAC1HzjB,MAAOolB,EAAkBxV,SAAS5P,MAClCmK,QAASgH,EAAaE,KACtBiI,cAAenI,EAAahW,QAAU,wBAAgB,GACtD4C,KAAMqnB,EAAkBxV,SAASO,WACjCuH,QAASA,IAAMhF,EAAY,YAC3BiF,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,YAC1C+S,cAAeA,EACfwE,eAAiBlN,GAAWA,EAAOmI,KACnCgF,aAAcA,CAAC9c,EAAO2P,IACpB7M,cAAA,SAAQ9C,EAAKgD,SACV2M,EAAO0E,WAGZjP,SAAUA,CAACC,EAAGC,IAnlCPpE,OAAOmE,EAAGC,KAqBjC,GApBkB,aAAfwR,GACDC,EAAc,MAGhB4T,GAAqBU,IACnBA,EAAsBnW,SAAS5P,MAAQA,EAChC,IACF+lB,MAI6B,OAAjCX,EAAkBvV,KAAK7P,OACxBqlB,GAAqBU,IACnBA,EAAsBlW,KAAK7P,MAAQ,KAC5B,IACF+lB,MAKNb,EAA0BtV,SAASL,QAAQ,CAC5C,MAAMyW,EAA6B,IAAId,GACvCc,EAA2BpW,SAASN,MAAQ,GAC5C0W,EAA2BpW,SAASJ,aAAc,EAClDwW,EAA2BpW,SAASL,SAAU,EAC9CyW,EAA2BpW,SAASH,OAAQ,EAC5C0V,EAA6Ba,EAC/B,CAEAzU,GAAYwC,IACVA,EAAa5Y,SAAU,EAChB,IAAI4Y,MAGb,MAAMyB,QAAyBtH,GAAYlO,EAAMyN,MACjD8D,GAAYwC,IACVA,EAAa5Y,SAAU,EACvB4Y,EAAa1C,KAAOmE,EACb,IAAIzB,KACX,EA2iCsC2F,CAAiB3Z,EAAGC,GAC5CuN,UAAYxN,GAAM4M,EAAc5M,EAAG,eACnCoN,cAAc,EACd7C,YAAcC,GACZ/M,cAAC+B,IAAS,IAAKgL,EACb9K,MAAM,uBACNqX,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjEtS,OAA6D,IAA/C+nB,EAA0BtV,SAASL,QACjDnR,GAAI,CAAC,wBAAyB,CAAE+oB,qBAAyD,IAApCxc,EAAqB2U,WAAsB,UAAY,KAC5Glf,WAAY,IACPmK,EAAOnK,WACVC,aACE1C,eAAAF,WAAA,CAAAC,SAAA,CACGyT,EAAahW,QAAUqC,cAAC8B,IAAgB,CAAC4B,MAAM,UAAUsY,KAAM,KAAS,KACxEjP,EAAOnK,WAAWC,mBAM7BuX,kBAAgB,EAChBC,UAAW,aAMnBra,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAAAC,WAAA,CAAAC,SACEF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0BrV,KAAKP,QAAavR,KAAMmnB,EAA0BrV,KAAKL,YAAawC,UAAU,SAASiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAAM5D,SAChMF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,QAAS+W,UAAW,QAAQjZ,SAC9CF,cAAC0M,KAAY,CAACqd,eAAa,EAACnd,GAAG,cAAc8c,UAA8C,IAApCvc,EAAqB2U,aAA2E,IAApD3U,EAAqB8Y,2BACtHzjB,MAAOolB,EAAkBvV,KAAK7P,MAC9BmK,QAASmH,EAASD,KAClBiI,cAAehI,EAASnW,QAAU,wBAAgB,GAClD4X,cAAeA,EACfwE,eAAiBlN,GAAWA,EAAOmI,KACnCrF,cAAc,EACdqK,aAAcA,CAAC9c,EAAO2P,IACpB7M,cAAA,SAAQ9C,EAAKgD,SACV2M,EAAO0E,WAGZjP,SAAUA,CAACC,EAAGC,IAnlCb2Z,EAAC5Z,EAAGC,KAmBvB,GAlBkB,SAAfwR,GACDC,EAAc,MAGhBiS,GAAwBvM,IACtBA,EAAyBvI,QAAQP,SAAWrO,EAAMyN,KAC3C,IACF0J,MAIPkO,GAAqBU,IACnBA,EAAsBlW,KAAK7P,MAAQA,EAC5B,IACF+lB,MAIJb,EAA0BrV,KAAKN,QAAQ,CACxC,MAAMyW,EAA6B,IAAId,GACvCc,EAA2BnW,KAAKP,MAAQ,GACxC0W,EAA2BnW,KAAKL,aAAc,EAC9CwW,EAA2BnW,KAAKN,SAAU,EAC1CyW,EAA2BnW,KAAKJ,OAAQ,EACxC0V,EAA6Ba,EAC/B,GAyjC0CrM,CAAa5Z,EAAGC,GACxCuN,UAAYxN,GAAM4M,EAAc5M,EAAG,kBACnChC,KAAMqnB,EAAkBvV,KAAKM,WAC7BuH,QAASA,IAAMhF,EAAY,QAC3BiF,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,QAC1CsK,YAAcC,GACZ/M,cAAC+B,IAAS,IAAKgL,EACb9K,MAAM,yBACNqX,SAAWC,GAAUA,GAAwB,SAAfvF,GAAyBuF,EAAMtH,QAC7DtS,OAAyD,IAA3C+nB,EAA0BrV,KAAKN,QAC7CnR,GAAI,CAAC,wBAAyB,CAAE+oB,qBAAyD,IAApCxc,EAAqB2U,WAAsB,UAAY,KAC5Glf,WAAY,IACPmK,EAAOnK,WACVC,aACE1C,eAAAF,WAAA,CAAAC,SAAA,CACG4T,EAASnW,QAAUqC,cAAC8B,IAAgB,CAAC4B,MAAM,UAAUsY,KAAM,KAAS,KACpEjP,EAAOnK,WAAWC,mBAM7BuX,kBAAgB,EAChBC,UAAW,eAOrBra,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0BpW,QAAQQ,QAAavR,KAAMmnB,EAA0BpW,QAAQU,YAAawC,UAAU,SAASiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAAM5D,SACtMF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOX,QAAS,cAAe0X,UAAW,QAAQjZ,SACpEF,cAAC+B,IAAS,CAACpC,OAA4D,IAA9C+nB,EAA0BpW,QAAQS,QAA0B2X,UAA8C,IAApCvc,EAAqB2U,WAClH7f,MAAM,yBAAUC,QAAQ,WAAW0K,GAAG,iBAAiB+C,aAAa,MACpE2J,SAAWC,GAAUA,GAAwB,YAAfvF,GAA4BuF,EAAMtH,QAChE3P,SAAWC,GAvlCJC,KACvB,MAAMiX,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAY7B,GAXkB,YAAf8V,GACDC,EAAc,MAGhBiS,GAAwBvM,IACtBA,EAAyBvI,QAAQE,QAAUmI,EACpC,IACFE,MAIJ+N,EAA0BpW,QAAQS,QAAQ,CAC3C,MAAMyW,EAA6B,IAAId,GACvCc,EAA2BlX,QAAQQ,MAAQ,GAC3C0W,EAA2BlX,QAAQU,aAAc,EACjDwW,EAA2BlX,QAAQS,SAAU,EAC7CyW,EAA2BlX,QAAQW,OAAQ,EAC3C0V,EAA6Ba,EAC/B,IACC,IAAI,EA6jC0BpM,CAAgB7Z,EAAEI,OAAOH,OAC1CuN,UAAYxN,GAAM4M,EAAc5M,EAAG,yBACnC6W,WAAY,CAAExX,MAAO,CAAE+nB,oBAAqBxc,EAAqB2U,WAAa,UAAa,UAC3F8H,iBAAqD,IAApCzc,EAAqB2U,WAAsB,CAAC+H,OAAQ5gB,SAAQ,IAAU,aAM/FjJ,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0BjW,eAAeK,QAAavR,KAAMmnB,EAA0BjW,eAAeO,YAAawC,UAAU,OAAOiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAAM5D,SAClNF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOX,QAAS,cAAe0X,UAAW,QAAQjZ,SACpEF,cAAC+B,IAAS,CAACpC,OAAmE,IAArD+nB,EAA0BjW,eAAeM,QAA0B2X,UAA8C,IAApCvc,EAAqB2U,WACzH7f,MAAM,yBAAYC,QAAQ,WAAW0K,GAAG,wBAAwB+C,aAAa,MAC7E2J,SAAWC,GAAUA,GAAwB,mBAAfvF,GAAmCuF,EAAMtH,QACvEjQ,UAAW0lB,EAA0BjW,eAAeQ,MACpD3P,SAAWC,GA1kCGC,KAC9B,MAAMiX,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAY7B,GAXkB,mBAAf8V,GACDC,EAAc,MAGhBiS,GAAwBvM,IACtBA,EAAyBvI,QAAQK,eAAiBgI,EAC3C,IACFE,MAIJ+N,EAA0BjW,eAAeM,QAAQ,CAClD,MAAMyW,EAA6B,IAAId,GACvCc,EAA2B/W,eAAeK,MAAQ,GAClD0W,EAA2B/W,eAAeO,aAAc,EACxDwW,EAA2B/W,eAAeM,SAAU,EACpDyW,EAA2B/W,eAAeQ,OAAQ,EAClD0V,EAA6Ba,EAC/B,IACC,IAAI,EAgjC0BnM,CAAuB9Z,EAAEI,OAAOH,OACjDuN,UAAYxN,GAAM4M,EAAc5M,EAAG,sBACnC6W,WAAY,CAAExX,MAAO,CAAE+nB,oBAAqBxc,EAAqB2U,WAAa,UAAa,UAC3F8H,iBAAqD,IAApCzc,EAAqB2U,WAAsB,CAAC+H,OAAQ5gB,SAAQ,IAAU,aAM/FjJ,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0BhW,YAAYI,QAAavR,KAAMmnB,EAA0BhW,YAAYM,YAAawC,UAAU,SAASiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAAM5D,SAC9MF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAO+W,UAAW,QAAQjZ,SAC5CF,cAAC+B,IAAS,CAACpC,OAAgE,IAAlD+nB,EAA0BhW,YAAYK,QAA0B2X,UAA8C,IAApCvc,EAAqB2U,WACtH7f,MAAM,4BAAaC,QAAQ,WAAW0K,GAAG,qBAAqB+C,aAAa,MAC3E2J,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpE3P,SAAWC,GA5jCAC,KAC3B,GAAa,KAAVA,EAAa,CACd,MAAMiX,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KACX,gBAAf8V,GACDC,EAAc,MAGhB,MAAMuU,EAA6B,IAAId,GACpCjO,EAAWlC,OAAS,IACrBiR,EAA2B9W,YAAYI,MAAQ,sEAC/C0W,EAA2B9W,YAAYM,aAAc,EACrDwW,EAA2B9W,YAAYK,SAAU,EACjDyW,EAA2B9W,YAAYO,OAAQ,EAC/C0V,EAA6Ba,KAG7BtC,GAAwBvM,IACtBA,EAAyBvI,QAAQM,YAAc+H,EACxC,IACFE,MAIP6O,EAA2B9W,YAAYI,MAAQ,GAC/C0W,EAA2B9W,YAAYM,aAAc,EACrDwW,EAA2B9W,YAAYK,SAAU,EACjDyW,EAA2B9W,YAAYO,OAAQ,EAE/CuW,EAA2B5W,YAAYE,MAAQ,GAC/C0W,EAA2B5W,YAAYI,aAAc,EACrDwW,EAA2B5W,YAAYG,SAAU,EACjDyW,EAA2B5W,YAAYK,OAAQ,EAC/C0V,EAA6Ba,GAC/B,GACC,IACL,KACI,CACF,MAAMA,EAA6B,IAAId,GACvCc,EAA2B9W,YAAYI,MAAQ,GAC/C0W,EAA2B9W,YAAYM,aAAc,EACrDwW,EAA2B9W,YAAYK,SAAU,EACjDyW,EAA2B9W,YAAYO,OAAQ,EAC/C0V,EAA6Ba,EAC/B,GA4gCiClM,CAAoB/Z,EAAEI,OAAOH,OAC9CuN,UAAYxN,GAAM4M,EAAc5M,EAAG,yBACnC4X,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,eAC1C4W,WAAY,CAAExX,MAAO,CAAE+nB,oBAAqBxc,EAAqB2U,WAAa,UAAa,SAAUzI,UAAW,IAChHuQ,iBAAqD,IAApCzc,EAAqB2U,WAAsB,CAAC+H,OAAQ5gB,SAAQ,IAAU,aAO/FjJ,cAAC+B,IAAS,CAACE,MAAM,qBAAaynB,UAA8C,IAApCvc,EAAqB2U,WAC3D5f,QAAQ,WAAW0K,GAAG,wBAAwB+C,aAAa,MAC3D/O,GAAI,CAACwB,MAAO,QAAS,sBAAwB,CAAC+W,UAAW,SACzD7W,SAAWC,GAvhCSC,KACZ,mBAAfwR,GACDC,EAAc,MAGhB,MAAMwF,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAQ7B,GAPAgoB,GAAwBvM,IACtBA,EAAyBvI,QAAQO,eAAiB8H,EAC3C,IACFE,MAIJ+N,EAA0BjW,eAAeM,QAAQ,CAClD,MAAMyW,EAA6B,IAAId,GACvCc,EAA2B/W,eAAeK,MAAQ,GAClD0W,EAA2B/W,eAAeO,aAAc,EACxDwW,EAA2B/W,eAAeM,SAAU,EACpDyW,EAA2B/W,eAAeQ,OAAQ,EAClD0V,EAA6Ba,EAC/B,IACC,IAAI,EA6/BoBjM,CAAuBha,EAAEI,OAAOH,OACjDuN,UAAYxN,GAAM4M,EAAc5M,EAAG,sBACnC6W,WAAY,CAAExX,MAAO,CAAE+nB,oBAAqBxc,EAAqB2U,WAAa,UAAa,UAC3F8H,iBAAqD,IAApCzc,EAAqB2U,WAAsB,CAAC+H,OAAQ5gB,SAAQ,IAAU,OAGzFjJ,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0B9V,YAAYE,QAAavR,KAAMmnB,EAA0B9V,YAAYI,YAAY9R,SACxJF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAO+W,UAAW,QAAQjZ,SAC5CF,cAAC+B,IAAS,CAACE,MAAM,4BAAaynB,UAA8C,IAApCvc,EAAqB2U,WAC3DxI,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpE/P,QAAQ,WAAW0K,GAAG,qBAAqB+C,aAAa,MACxDrN,SAAWC,GAtgCDia,EAACja,EAAGC,KAK9B,GAJkB,gBAAfwR,GACDC,EAAc,MAGH,KAAVzR,EAAa,CACd,MAAMiX,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAC7B,MAAMsqB,EAA6B,IAAId,GACpCjO,EAAWlC,OAAS,IACrBiR,EAA2B5W,YAAYE,MAAQ,sEAC/C0W,EAA2B5W,YAAYI,aAAc,EACrDwW,EAA2B5W,YAAYG,SAAU,EACjDyW,EAA2B5W,YAAYK,OAAQ,EAC/C0V,EAA6Ba,KAG7BtC,GAAwBvM,IACtBA,EAAyBvI,QAAQQ,YAAc6H,EACxC,IACFE,MAIP6O,EAA2B5W,YAAYE,MAAQ,GAC/C0W,EAA2B5W,YAAYI,aAAc,EACrDwW,EAA2B5W,YAAYG,SAAU,EACjDyW,EAA2B5W,YAAYK,OAAQ,EAE/CuW,EAA2B9W,YAAYI,MAAQ,GAC/C0W,EAA2B9W,YAAYM,aAAc,EACrDwW,EAA2B9W,YAAYK,SAAU,EACjDyW,EAA2B9W,YAAYO,OAAQ,EAC/C0V,EAA6Ba,GAC/B,GACC,IACL,KACI,CACgB,gBAAfxU,GACDC,EAAc,MAGhB,MAAMuU,EAA6B,IAAId,GACvCc,EAA2B5W,YAAYE,MAAQ,GAC/C0W,EAA2B5W,YAAYI,aAAc,EACrDwW,EAA2B5W,YAAYG,SAAU,EACjDyW,EAA2B5W,YAAYK,OAAQ,EAC/C0V,EAA6Ba,EAC/B,GAk9BiChM,CAAoBja,EAAGA,EAAEI,OAAOH,OACjDuN,UAAYxN,GAAM4M,EAAc5M,EAAG,iBACnC4X,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,eAC1C4W,WAAY,CAAExX,MAAO,CAAE+nB,oBAAqBxc,EAAqB2U,WAAa,UAAa,SAAUzI,UAAW,IAChHuQ,iBAAqD,IAApCzc,EAAqB2U,WAAsB,CAAC+H,OAAQ5gB,SAAQ,IAAU,aAM/FjJ,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0BzW,OAAOa,QAAavR,KAAMmnB,EAA0BzW,OAAOe,YAAayX,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAAM5D,SACjLF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAO+W,UAAW,QAAQjZ,SAC5CF,cAAC+B,IAAS,CAACE,MAAM,yBAAcC,QAAQ,WAAW0K,GAAG,gBAAgB+C,aAAa,MAAMhQ,OAA2D,IAA7C+nB,EAA0BzW,OAAOc,QACrIuH,SAAWC,GAAUA,GAAwB,WAAfvF,GAA2BuF,EAAMtH,QAC/DrP,WAAY,CAACC,aAAc7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAAC,UAC1DoC,SAAWC,GAl8BLC,KACtB,MAAMiX,EAAajX,EAEhBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAY7B,GAXkB,WAAf8V,GACDC,EAAc,MAGhBiS,GAAwBvM,IACtBA,EAAyB1I,OAASwI,EAC3B,IACFE,MAIJ+N,EAA0BzW,OAAOc,QAAQ,CAC1C,MAAMyW,EAA6B,IAAId,GACvCc,EAA2BvX,OAAOa,MAAQ,GAC1C0W,EAA2BvX,OAAOe,aAAc,EAChDwW,EAA2BvX,OAAOc,SAAU,EAC5CyW,EAA2BvX,OAAOgB,OAAQ,EAC1C0V,EAA6Ba,EAC/B,IACC,IAAI,EAu6B0B9L,CAAena,EAAEI,OAAOH,OACzCuN,UAAYxN,GAAM4M,EAAc5M,EAAG,yBAM3CvC,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0BjkB,OAAOqO,QAAavR,KAAMmnB,EAA0BjkB,OAAOuO,YAAawC,UAAU,OAAOiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAAM5D,SAClMF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAO+W,UAAW,QAAQjZ,SAC5CF,cAAC+B,IAAS,CAACE,MAAM,uBAAeC,QAAQ,WAAW0K,GAAG,gBAAgB+C,aAAa,MAAMhQ,OAA2D,IAA7C+nB,EAA0BjkB,OAAOsO,QACtIuH,SAAWC,GAAUA,GAAwB,WAAfvF,GAA2BuF,EAAMtH,QAC/DrP,WAAY,CAACC,aAAc7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAAC,UAC1DoC,SAAWC,GA5+BLC,KACtB,MAAMiX,EAAajX,EAChBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAY7B,GAXkB,WAAf8V,GACDC,EAAc,MAGhBiS,GAAwBvM,IACtBA,EAAyBlW,OAASgW,EAC3B,IACFE,MAIJ+N,EAA0BjkB,OAAOsO,QAAQ,CAC1C,MAAMyW,EAA6B,IAAId,GACvCc,EAA2B/kB,OAAOqO,MAAQ,GAC1C0W,EAA2B/kB,OAAOuO,aAAc,EAChDwW,EAA2B/kB,OAAOsO,SAAU,EAC5CyW,EAA2B/kB,OAAOwO,OAAQ,EAC1C0V,EAA6Ba,EAC/B,IACC,IAAI,EAk9B0B/L,CAAela,EAAEI,OAAOH,OACzCuN,UAAYxN,GAAM4M,EAAc5M,EAAG,oCAM3CvC,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0BxW,kBAAkBY,QAAavR,KAAMmnB,EAA0BxW,kBAAkBc,YAAawC,UAAU,YAAYiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IACvN+Q,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACNrI,QAAS,CAAEsI,OAAQ,CAAC,IAAK,QAI/B/U,SAEFF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAO+W,UAAW,QAAQjZ,SAC5CF,cAAC+B,IAAS,CAACE,MAAM,8BAAcC,QAAQ,WAAW0K,GAAG,2BAA2B+C,aAAa,MAAMhQ,OAAsE,IAAxD+nB,EAA0BxW,kBAAkBa,QAC3JuH,SAAWC,GAAUA,GAAwB,sBAAfvF,GAAsCuF,EAAMtH,QAC1ErP,WAAY,CAACC,aAAc7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAAC,UAC1DoC,SAAWC,GAz8BMC,KACjC,MAAMiX,EAAajX,EAEhBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAY7B,GAXkB,sBAAf8V,GACDC,EAAc,MAGhBiS,GAAwBvM,IACtBA,EAAyBzI,kBAAoBuI,EACtC,IACFE,MAIJ+N,EAA0BxW,kBAAkBa,QAAQ,CACrD,MAAMyW,EAA6B,IAAId,GACvCc,EAA2BtX,kBAAkBY,MAAQ,GACrD0W,EAA2BtX,kBAAkBc,aAAc,EAC3DwW,EAA2BtX,kBAAkBa,SAAU,EACvDyW,EAA2BtX,kBAAkBe,OAAQ,EACrD0V,EAA6Ba,EAC/B,IACC,IAAI,EA86B0B7L,CAA0Bpa,EAAEI,OAAOH,OACpDuN,UAAYxN,GAAM4M,EAAc5M,EAAG,8BAM3CvC,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0BL,YAAYvV,QAAavR,KAAMmnB,EAA0BL,YAAYrV,YAAawC,UAAU,SAASiV,YAAa,CAAC7oB,GAAI,CAAEkD,OAAQ,IAAM5D,SAC9MF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,QAAS+W,UAAW,QAAQjZ,SAC9CF,cAAC0M,KAAY,CAACqd,eAAa,EAACnd,GAAG,qBAAqB8c,UAA8C,IAApCvc,EAAqB2U,WACjFtf,MAAOolB,EAAkBP,YAAY7kB,MACrCmK,QAAS4a,EACTxN,eAAiBlN,GAAWA,EAAO4a,gBACnCzN,aAAcA,CAAC9c,EAAO2P,IACpB7M,cAAA,SAAQ9C,EAAKgD,SACV2M,EAAO4a,kBAGZnlB,SAAUA,CAACC,EAAGC,IA97BJwnB,EAACznB,EAAGC,KAmB9B,GAlBkB,gBAAfwR,GACDC,EAAc,MAGhBiS,GAAwBvM,IACtBA,EAAyBoI,cAAgBvf,EAAMuf,cACxC,IACFpI,MAIPkO,GAAqBU,IACnBA,EAAsBlB,YAAY7kB,MAAQA,EACnC,IACF+lB,MAIJb,EAA0BL,YAAYtV,QAAQ,CAC/C,MAAMyW,EAA6B,IAAId,GACvCc,EAA2BnB,YAAYvV,MAAQ,GAC/C0W,EAA2BnB,YAAYrV,aAAc,EACrDwW,EAA2BnB,YAAYtV,SAAU,EACjDyW,EAA2BnB,YAAYpV,OAAQ,EAC/C0V,EAA6Ba,EAC/B,GAo6BwCwB,CAAoBznB,EAAGC,GAC/CjC,KAAMqnB,EAAkBP,YAAY1U,WACpCuH,QAASA,IAAMhF,EAAY,eAC3BiF,OAAS5X,GAAM8S,EAAW9S,EAAEI,OAAOH,MAAO,eAC1CmN,cAAc,EACd7C,YAAcC,GACZ/M,cAAC+B,IAAS,IAAKgL,EACb9K,MAAM,4BACNqX,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpEtS,OAAgE,IAAlD+nB,EAA0BL,YAAYtV,QACpDnR,GAAI,CACF,wBAAyB,CAAE+oB,qBAAyD,IAApCxc,EAAqB2U,WAAsB,UAAY,IACvG,0OAA2O,CAACmI,YAAa,MAAOC,aAAc,OAC9Q,6NAA8N,CAACD,YAAa,MAAOC,aAAc,UAIvQ9P,kBAAgB,EAChBC,UAAW,aAMnBra,cAACiZ,KAAa,CAAClV,MAAOoQ,EAAajU,SACjCF,cAACkZ,KAAO,CAACpH,MAAO9R,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEwnB,EAA0B3pB,OAAO+T,QAAavR,KAAMmnB,EAA0B3pB,OAAOiU,YAAY9R,SAC9IF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,QAASlC,SAC3BF,cAAC+B,IAAS,CAACzB,WAAS,EAAC2B,MAAM,mBAAakoB,WAAS,EAACC,KAAM,EAAGloB,QAAQ,WAAW0K,GAAG,gBAAgB+C,aAAa,MAAMhQ,OAA2D,IAA7C+nB,EAA0B3pB,OAAOgU,QACjKnR,GAAI,CAAC,sBAAwB,CAACuY,UAAW,SACzC7W,SAAWC,GA97BLC,KACtB,MAAMiX,EAAajX,EAEhBoQ,EAAUqE,SACXyC,cAAc9G,EAAUqE,SAG1BrE,EAAUqE,QAAU/Y,YAAW,KAC7BgoB,GAAwBvM,IACtBA,EAAyB5b,OAAS0b,EAC3B,IACFE,KAEL,GAOD,IAAI,EA06B0B0Q,CAAe9nB,EAAEI,OAAOH,eAMjDxC,cAAC4c,KAAgB,CAACC,QAAS7c,cAAC8c,KAAQ,CAACC,QAAS6K,EAAkBzW,cAAgBvQ,GAAI,CAACwB,MAAO,QAC1FH,MAAM,qDAAkCK,SAAWC,IAAMya,OA96BxCC,EA86B4D1a,EAAEI,OAAOoa,QA76BhGmJ,GAAwBvM,IACtBA,EAAyBxI,YAAc8L,EAChC,IACFtD,WAIPkO,GAAqBU,IACnBA,EAAsBpX,YAAc8L,EAC7B,IACFsL,MAXoBtL,KA86B8E,IAEjG9c,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUyC,GAAI,EAAGlC,MAAO,QAAQlC,SAAA,CACzEF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,UAAU9C,GAAI,CAACiK,GAAI,GAAI3J,QAASA,IAAM2hB,IAAwB3iB,SAAC,8BACjGF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,UAAUxC,QAASA,IAAMgiB,IAAmBhjB,SAAC,yBAC/EF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,QAAQ9C,GAAI,CAAC6O,GAAI,GAAIvO,QAASA,IAAM0nB,IAA4B1oB,SAAC,sCAM3GF,cAACwiB,GAAgB,CACfa,0BAA2BA,EAA2BJ,6BAA8BA,EACpFC,iBAAkBA,EAAkB7L,2BAA4Bna,EAAMma,2BACtEiM,mCAAoCA,EAAoCN,sCAAuCA,EAC/G7V,qBAAsBA,IAGxBnN,cAACmkB,GAAU,CACTgC,oBAAqBA,EAAqBf,uBAAwBA,EAClEjY,qBAAsBA,EAAsB+Y,wBAAyBA,IASvElmB,cAACqQ,GAAe,CACdC,oBAAqBA,EAAqB4D,uBAAwBA,MAI1E,ECt5DeoW,OAxGf,WAEE,MAAM,KAAEtlB,EAAI,QAAErH,GAAY+K,qBAAWlE,GAE/BqE,EAAUC,wBAETyhB,EAAmB9K,GAAwB/hB,oBAAS,IAEpDiiB,EAAyBtI,GAA8B3Z,oBAAS,IAChE+qB,EAA+BxG,GAAoCvkB,sBAEnEwlB,EAAkBsH,GAAuB9sB,oBAAS,IAClD+sB,EAAiCC,GAAsChtB,oBAAS,IAChFkrB,EAA2B+B,GAAgCjtB,oBAAS,GAmD3E,OArCAmJ,qBAAU,MACO,IAAZlJ,GAAqBqH,EAAKD,SACF,YAAtBC,EAAKoF,cACNvB,EAAQ0B,KAAK,OAEjB,GACC,CAAC5M,EAASqH,IAEb6B,qBAAU,KACR,MAAMsI,EAAiBrR,IACA,MAAlBA,EAAM4hB,SACP5hB,EAAMuN,iBAtBVqf,GAAmC,IA0BP,MAAlB5sB,EAAM4hB,SACZ5hB,EAAMuN,iBAvBVmf,GAAoB,IA2BQ,MAAlB1sB,EAAM4hB,UACZ5hB,EAAMuN,iBAxBVsf,GAA6B,GA8B3B,EAKF,OAFAvb,SAASC,iBAAiB,UAAWF,GAE9B,KACLC,SAASE,oBAAoB,UAAWH,EAAc,CACvD,GACA,IAGDnP,cAAAC,WAAA,CAAAC,SACKF,cAACuP,KAAS,CAAClP,SAAS,KAAKO,GAAI,CAAC0D,GAAI,KAAKpE,SACpCF,cAACoE,IAAG,CAACxD,GAAI,CAAEgU,QAAS,OAAQnR,OAAQ,QAAQvD,SAC1CC,eAACqjB,KAAI,CAACC,WAAS,EAACngB,QAAS,EAAG1C,GAAI,CAACgqB,WAAY,GAAG1qB,SAAA,CAC9CF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAEzjB,SACfF,cAACmd,GAAoB,CACnBwC,wBAAyBA,EAAyBtI,2BAA4BA,EAC9EkT,kBAAmBA,EAAmB9K,qBAAsBA,EAC5DgJ,8BAA+BA,EAA+BxG,iCAAkCA,MAIpGjiB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAEzjB,SACdqqB,EACCvqB,cAAA,OAAK4B,MAAO,CAACgpB,WAAY,QAAQ1qB,SAC/BF,cAAC6qB,KAAQ,CAAC3oB,QAAQ,cAAcE,MAAM,OAAOqB,OAAQ,QAGvDzD,cAACknB,GAAW,CACVgC,UAAWuB,EAAiCtB,aAAcuB,EAC1DtB,UAAWlG,EAAkBmG,aAAcmB,EAC3ClB,UAAWV,EAA2BW,aAAcoB,EACpDhL,wBAAyBA,EAAyBtI,2BAA4BA,EAC9EoR,8BAA+BA,EAA+BxG,iCAAkCA,cActH,E,oDCube6I,OAxgBf,WAEI,MAAO1N,EAAYC,GAAiB3f,mBAAS,CAAC4f,UAAW,EAAGC,UAAW,6CAChEwN,EAAkCtN,GAA4B/f,mBACjE,CACI,CAAE6f,UAAW,0CAAyBG,YAAa,GACnD,CAAEH,UAAW,uCAAwBG,YAAa,GAClD,CAAEH,UAAW,wCAAuBG,YAAa,MAIlDsN,EAAiBC,GAAsBvtB,sBAEvCqgB,EAAqBC,GAA0BtgB,mBAAS,KAExDwtB,EAAqCC,GAA0CztB,mBAAS,KACxF0tB,EAAkCC,GAAuC3tB,sBACzE4tB,EAAiCC,GAAsC7tB,mBAAS,KAEhFC,EAASC,GAAcF,oBAAS,IAEhC8tB,EAAMC,GAAW/tB,mBAAS,IAC1BguB,EAAWC,GAAgBjuB,sBAE3B2Q,EAAiBud,GAAsBluB,qBAExCmuB,EAAkB/rB,IAEpB,GAAGA,EAAK,CACJ,MAAMgsB,EAAsBlF,KAAKmF,KAAKjsB,EAAKyX,OAF1B,GAGXyU,EAHW,GAGGR,EAAO,GACrBS,EAAkBnsB,EAAKosB,MAAMF,EAAYA,EAJ9B,GAMjBX,EAAoCY,GACpCV,EAAmCU,GAEnCN,EAAaG,EACjB,KACI,CACA,MAAMA,EAAsBlF,KAAKmF,KAAKb,EAAoC3T,OAZzD,GAaXyU,EAbW,GAaGR,EAAO,GACrBS,EAAkBf,EAAoCgB,MAAMF,EAAYA,EAd7D,GAgBjBX,EAAoCY,GACpCV,EAAmCU,GAEnCN,EAAaG,EACjB,GA8IExN,EAAiBA,CAACC,EAAUC,KAC9B,MAAMC,EAAsBD,EAAW9I,cACvC,OAAO6I,EAAS5I,QAAO+I,IACrB,MAAM,UAAE7Q,EAAS,gBAAEoR,EAAe,YAAEvN,EAAW,YAAEE,GAAgB8M,EACjE,OAAO7Q,EAAU6H,cAAcM,SAASyI,IAAwBQ,EAAgBvJ,cAAcM,SAASyI,IAAwB/M,EAAYgE,cAAcM,SAASyI,IAAwB7M,EAAY8D,cAAcM,SAASyI,EAAoB,GACjP,EAGA7L,EAAYC,iBAAO,MAuBnBsZ,EAA0B/tB,UAC5BR,GAAW,GAEX,MAAMwuB,EAAsB/d,EAAgB8J,MAAKnB,GAAQA,EAAKzI,gBAAkBA,IAC1E8d,QAAuCje,GAAuBge,EAAqB,GACzF,GAA6C,MAA1CC,EAA+BxsB,OAAe,CAE7C,MAAMysB,QAAwCre,KAEnB,KAAxB8P,GACCC,EAAuB,IAG3BiN,EAAmBqB,GAEnB,MAAMC,EAA4BD,EAAgC3W,QAAOqB,GAAkC,IAA1BA,EAAK1I,mBAC/Eke,EAAoCF,EAAgC3W,QAAOqB,GAAkC,IAA1BA,EAAK1I,mBACzFme,EAAoCH,EAAgC3W,QAAOqB,GAAkC,IAA1BA,EAAK1I,mBAExFoe,EAAyC,CAC3C,CAAEnP,UAAW,0CAAyBG,YAAa6O,EAA0BhV,QAC7E,CAAEgG,UAAW,uCAAwBG,YAAa8O,EAAkCjV,QACpF,CAAEgG,UAAW,wCAAuBG,YAAa+O,EAAkClV,SAKvF,GAFAkG,EAAyBiP,GAEG,IAAzBtP,EAAWE,UAAgB,CAC1B,MAAMqP,EAA2BJ,EAA0BthB,KAAK+L,IAExD,CACIzI,cAAeyI,EAAKzI,cACpBC,gBAAiBwI,EAAKxI,oBAMlCod,EAAmBe,GACnBxB,EAAuCoB,GACvCV,EAAeU,EACnB,MAEK,GAA4B,IAAzBnP,EAAWE,UAAgB,CAC/B,MAAMsP,EAAmCJ,EAAkCvhB,KAAK+L,IAExE,CACIzI,cAAeyI,EAAKzI,cACpBC,gBAAiBwI,EAAKxI,oBAMlCod,EAAmBgB,GACnBzB,EAAuCqB,GACvCX,EAAeW,EACnB,KACI,CACA,MAAMK,EAAmCJ,EAAkCxhB,KAAK+L,IAExE,CACIzI,cAAeyI,EAAKzI,cACpBC,gBAAiBwI,EAAKxI,oBAMlCod,EAAmBiB,GACnB1B,EAAuCsB,GACvCZ,EAAeY,EACnB,CAEAhuB,IAAMsB,QAAQssB,EAA+BvsB,KAAM,CAACnB,QAAS,kCACjE,MAEIF,IAAMkB,MAAM0sB,EAA+BvsB,KAAM,CAACnB,QAAS,iCAE/Df,GAAW,EAAM,EAGfkvB,EAA0B1uB,UAC5BR,GAAW,GAEX,MAAMwuB,EAAsB/d,EAAgB8J,MAAKnB,GAAQA,EAAKzI,gBAAkBA,IAC1E8d,QAAuCje,GAAuBge,EAAqB,GACzF,GAA6C,MAA1CC,EAA+BxsB,OAAe,CAC7C,MAAMysB,QAAwCre,KAEnB,KAAxB8P,GACCC,EAAuB,IAG3BiN,EAAmBqB,GAEnB,MAAMC,EAA4BD,EAAgC3W,QAAOqB,GAAkC,IAA1BA,EAAK1I,mBAC/Eke,EAAoCF,EAAgC3W,QAAOqB,GAAkC,IAA1BA,EAAK1I,mBACzFme,EAAoCH,EAAgC3W,QAAOqB,GAAkC,IAA1BA,EAAK1I,mBAExFoe,EAAyC,CAC3C,CAAEnP,UAAW,0CAAyBG,YAAa6O,EAA0BhV,QAC7E,CAAEgG,UAAW,uCAAwBG,YAAa8O,EAAkCjV,QACpF,CAAEgG,UAAW,wCAAuBG,YAAa+O,EAAkClV,SAKvF,GAFAkG,EAAyBiP,GAEG,IAAzBtP,EAAWE,UAAgB,CAC1B,MAAMqP,EAA2BJ,EAA0BthB,KAAK+L,IAExD,CACIzI,cAAeyI,EAAKzI,cACpBC,gBAAiBwI,EAAKxI,oBAMlCod,EAAmBe,GACnBxB,EAAuCoB,GACvCV,EAAeU,EACnB,MAEK,GAA4B,IAAzBnP,EAAWE,UAAgB,CAC/B,MAAMsP,EAAmCJ,EAAkCvhB,KAAK+L,IAExE,CACIzI,cAAeyI,EAAKzI,cACpBC,gBAAiBwI,EAAKxI,oBAMlCod,EAAmBgB,GACnBzB,EAAuCqB,GACvCX,EAAeW,EACnB,KACI,CACA,MAAMK,EAAmCJ,EAAkCxhB,KAAK+L,IAExE,CACIzI,cAAeyI,EAAKzI,cACpBC,gBAAiBwI,EAAKxI,oBAMlCod,EAAmBiB,GACnB1B,EAAuCsB,GACvCZ,EAAeY,EACnB,CAEAhuB,IAAMsB,QAAQssB,EAA+BvsB,KAAM,CAACnB,QAAS,kCACjE,MAEIF,IAAMkB,MAAM0sB,EAA+BvsB,KAAM,CAACnB,QAAS,iCAE/Df,GAAW,EAAM,EAWrB,OARAiJ,qBAAU,KAzU4BzI,WAClCR,GAAW,GACX,MAAM0uB,QAAwCre,KAE9Cgd,EAAmBqB,GAEnB,MAAMC,EAA4BD,EAAgC3W,QAAOqB,GAAkC,IAA1BA,EAAK1I,mBAC/Eke,EAAoCF,EAAgC3W,QAAOqB,GAAkC,IAA1BA,EAAK1I,mBACzFme,EAAoCH,EAAgC3W,QAAOqB,GAAkC,IAA1BA,EAAK1I,mBAExFoe,EAAyC,CAC3C,CAAEnP,UAAW,0CAAyBG,YAAa6O,EAA0BhV,QAC7E,CAAEgG,UAAW,uCAAwBG,YAAa8O,EAAkCjV,QACpF,CAAEgG,UAAW,wCAAuBG,YAAa+O,EAAkClV,SAKvF,GAFAkG,EAAyBiP,GAEG,IAAzBtP,EAAWE,UAAgB,CAC1B,MAAMqP,EAA2BJ,EAA0BthB,KAAK+L,IAExD,CACIzI,cAAeyI,EAAKzI,cACpBC,gBAAiBwI,EAAKxI,oBAMlCod,EAAmBe,GACnBxB,EAAuCoB,GACvCV,EAAeU,EACnB,MAEK,GAA4B,IAAzBnP,EAAWE,UAAgB,CAC/B,MAAMsP,EAAmCJ,EAAkCvhB,KAAK+L,IAExE,CACIzI,cAAeyI,EAAKzI,cACpBC,gBAAiBwI,EAAKxI,oBAMlCod,EAAmBgB,GACnBzB,EAAuCqB,GACvCX,EAAeW,EACnB,KAEI,CACA,MAAMK,EAAmCJ,EAAkCxhB,KAAK+L,IAExE,CACIzI,cAAeyI,EAAKzI,cACpBC,gBAAiBwI,EAAKxI,oBAMlCod,EAAmBiB,GACnB1B,EAAuCsB,GACvCZ,EAAeY,EACnB,CAEA7uB,GAAW,EAAM,EAwQjBmvB,EAA+B,GAChC,IAEHlmB,qBAAU,KACNglB,GAAgB,GACjB,CAACL,IAGArrB,eAACoP,KAAS,CAAClP,SAAS,KAAKO,GAAI,CAAC0D,GAAI,EAAGxD,EAAG,GAAIZ,SAAA,CACxCF,cAAC0gB,KAAc,CAAC3U,UAAW4U,KAAO/f,GAAI,CAAC6C,OAAQ9F,EAAU,QAAU,OAAQwD,SAAU,YAAYjB,SAC5FvC,EACGqC,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,SAAU+B,OAAQ,QAAQvD,SAAA,CAChHF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,mFAIrDC,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACiE,IAAG,CAAAlE,SAAA,CACAF,cAACqD,IAAK,CAACE,UAAU,MAAMD,QAAS,EAAG1C,GAAI,CAACiB,eAAgB,SAAUyC,GAAI,KAAKpE,SACtE6qB,EAAiC9f,KAAI,CAAC+hB,EAAkCC,IACrEjtB,cAACggB,KAAK,CAACC,aAAc+M,EAAiCtP,YAAaha,MAAM,QAAOxD,SAC5EF,cAACkgB,KAAI,CAACje,MAAO+qB,EAAiCzP,UAAW7Z,MAAOupB,IAAsC7P,EAAWE,UAAY,UAAY,UACrIpc,QAASA,IA7RtBif,EAACC,EAAW7C,KAEnC,GADAF,EAAc,CAACC,UAAW8C,EAAW7C,UAAWA,IAC/B,IAAd6C,EAAgB,CACf,MAAMmM,EAA4BvB,EAAgBrV,QAAOqB,GAAkC,IAA1BA,EAAK1I,mBAEhEqe,EAA2BJ,EAA0BthB,KAAK+L,IAExD,CACIzI,cAAeyI,EAAKzI,cACpBC,gBAAiBwI,EAAKxI,oBAMlCod,EAAmBe,GACnBxB,EAAuCoB,GACvCV,EAAeU,EACnB,MACK,GAAiB,IAAdnM,EAAgB,CACpB,MAAMoM,EAAoCxB,EAAgBrV,QAAOqB,GAAkC,IAA1BA,EAAK1I,mBAExEse,EAAmCJ,EAAkCvhB,KAAK+L,IAExE,CACIzI,cAAeyI,EAAKzI,cACpBC,gBAAiBwI,EAAKxI,oBAMlCod,EAAmBgB,GACnBzB,EAAuCqB,GACvCX,EAAeW,EACnB,KACI,CACA,MAAMC,EAAoCzB,EAAgBrV,QAAOqB,GAAkC,IAA1BA,EAAK1I,mBAExEue,EAAmCJ,EAAkCxhB,KAAK+L,IAExE,CACIzI,cAAeyI,EAAKzI,cACpBC,gBAAiBwI,EAAKxI,oBAMlCod,EAAmBiB,GACnB1B,EAAuCsB,GACvCZ,EAAeY,EACnB,GAyOmDtM,CAAmB8M,EAAmCD,EAAiCzP,cAAc,qBAAAle,OAFjB4tB,QAOnH9sB,eAACkE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8O,UAAW,SAAU1O,SAAU,UAAWD,WAAY,UAAUb,SAAA,CAAC,gBAAWkd,EAAWG,UAAU,+BAE/Hvd,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUQ,GAAI,GAAGnC,SACxDF,cAAC+B,IAAS,CAACnB,GAAI,CAACwB,MAAO,IAAK,iCAAkC,CAACsN,UAAW,WAAYsM,KAAK,QACvF9Z,QAAQ,WAAWme,YAAY,2FAA+C7d,MAAOub,EAAqBzb,SAAWC,GA/OvHC,KAC1B,MAAMiX,EAAajX,EACnBwb,EAAuBvE,GAGrB8R,EADW,KAAV/oB,EACkC4oB,EAEA9M,EAAe8M,EAAkC3R,GACtF,EAuOuJ6G,CAAqB/d,EAAEI,OAAOH,OACzJI,WAAY,CACR2d,eACIvgB,cAAC8C,IAAc,CAAC3B,SAAS,QAAOjB,SAACF,cAACwgB,KAAU,MAEhD3d,aACI7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SACD,KAAxB6d,EACG/d,cAACsB,IAAS,CAACV,GAAI,CAACuP,OAAQ,WAAYsQ,YAAY,SAC5Cvf,QAASA,IAAM,CAAC8c,EAAuB,IAAKuN,EAAmCH,MAGnF,eAS5BjrB,eAAC4gB,KAAK,CAACC,cAAY,EAAA9gB,SAAA,CACfF,cAACkhB,KAAS,CAAAhhB,SACNC,eAACghB,KAAQ,CAACvgB,GAAI,CAAC,OAAQ,CAAC8C,MAAO,mBAAoBO,gBAAiB,SAAS/D,SAAA,CACzEF,cAACohB,KAAS,CAACC,MAAM,OAAMnhB,SAAE,4BACzBF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAUd,SAAC,mBAClDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAUd,SAAC,iBAElDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAUd,SAAC,2BAClDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAUd,SAAC,+BAClDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAUd,SAAC,sCAClDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAUd,SAAC,4BAClDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAUd,SAAC,mCAClDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAUd,SAAC,6BAClDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAUd,SAAC,mBAI1DF,cAACshB,KAAS,CAAAphB,SACLorB,EAAgCrgB,KAAI,CAACiiB,EAA6BC,IAC/DhtB,eAACghB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAA8C9gB,GAAI,CAAC,SAAU,CAACqD,gBAAiB,kCAAkC/D,SAAA,CAClIF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAAEgtB,EAA4Brf,YAC9F7N,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAAEgtB,EAA4BjO,kBAC9Fjf,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAAE2a,KAAOqS,EAA4BhO,aAAatE,OAAO,gBAEzH5a,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACyhB,WAAY,SAAUC,SAAU,SAAUC,aAAc,WAAYliB,SAAU,IAAKW,SAAU,UAAUd,SAChIF,cAACkZ,KAAO,CAACpH,MAAO9R,cAACqE,IAAU,CAACnC,QAAQ,YAAWhC,SAAEgtB,EAA4B/N,cAA0Bjf,SACnGF,cAAA,QAAAE,SAAOgtB,EAA4B/N,kBAG3Cnf,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAAiD,KAA/CgtB,EAA4Bvb,eAAwBub,EAA4Bvb,eAAiBub,EAA4Bzb,iBAC/LzR,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAA8C,KAA5CgtB,EAA4Btb,YAAqBsb,EAA4Btb,YAAcsb,EAA4Bxb,cACzL1R,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAAEgtB,EAA4BE,cAC9FptB,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAAEgtB,EAA4BG,eAC9FrtB,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,QAAQlC,SACxCF,cAACsa,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAIva,SAChEF,cAAC0a,KAAa,CAACrG,WAAY,CAAC,cAAcnU,SACtCF,cAACoE,IAAG,CAACxD,GAAI,CAACwB,MAAO,KAAKlC,SAClBF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,QAAQlC,SACxBF,cAAC2a,KAAU,CAAC1Y,MAAM,oCAAoBqrB,aAAW,EAACC,QAAS1S,OACvDD,OAAO,aAAapY,MAAOqY,KAAOqS,EAA4B1e,iBAC9DlM,SAAWE,GAvRvCgrB,EAACjf,EAAeC,KAC5C,GAAGA,EAAgB,CACf,MAAMiL,EAAajL,EAAgByM,GAEhCrI,EAAUqE,SACTyC,cAAc9G,EAAUqE,SAG5BrE,EAAUqE,QAAU/Y,YAAW,KAC3B,MAAMgd,EAAQ,IAAI3U,KACZ6lB,EAAsB/d,EAAgB8J,MAAKnB,GAAQA,EAAKzI,gBAAkBA,IAC1Ekf,EAA4C,IAAIlnB,KAAK6lB,EAAoB5d,kBAE5E0M,GAASzB,GAAcA,GAAcgU,KACpCrB,EAAoB5d,gBAAkBqM,KAAOpB,GAAYmB,OAAO,cACpE,GACD,IACP,GAsQ6E4S,CAAwBN,EAA4B3e,cAAe/L,eAOhHxC,cAACohB,KAAS,CAACC,MAAwD,IAAjD6L,EAA4B5e,iBAAyB,OAAS,SAAU1N,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAC5E,IAAjDgtB,EAA4B5e,iBACzBnO,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAAC0tB,KAAS,CAACjN,YAAY,uCAAkB7f,GAAI,CAAC8C,MAAO,QAASyM,OAAQ,UAAWtF,GAAI,IAAM3J,QAASA,IAAMirB,EAAwBe,EAA4B3e,iBAC9JvO,cAAC2tB,KAAU,CAAClN,YAAY,qCAAmB7f,GAAI,CAAC8C,MAAO,MAAOyM,OAAQ,WAAYjP,QAASA,IAAM4rB,EAAwBI,EAA4B3e,oBAGzJvO,cAAAC,WAAA,CAAAC,SACsD,IAAjDgtB,EAA4B5e,iBACzBtO,cAAC2tB,KAAU,CAAClN,YAAY,qCAAmB7f,GAAI,CAAC8C,MAAO,MAAOyM,OAAQ,WAAYjP,QAASA,IAAM4rB,EAAwBI,EAA4B3e,iBAErJvO,cAAC0tB,KAAS,CAACjN,YAAY,uCAAkB7f,GAAI,CAAC8C,MAAO,QAASyM,OAAQ,UAAWtF,GAAI,IAAM3J,QAASA,IAAMirB,EAAwBe,EAA4B3e,uBAvC7I4e,eAoDjB,IAA3C7B,EAAgC/T,SAA4B,IAAZ5Z,EAC7CqC,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUyC,GAAI,EAAGlC,MAAO,QAAQlC,SACvEF,cAAC4tB,KAAU,CAACC,MAAOnC,EAAWF,KAAMA,EAAMlpB,SA7cjCwrB,CAAChwB,EAAO0E,KAC7BipB,EAAQjpB,EAAM,EA4coEkB,MAAM,gBAGhF,OAIhB,E,yDCtJeqqB,OAlXf,SAA2B7wB,GACvB,MAAO8wB,EAAgCC,GAAqCvwB,sBACrE4S,EAAqB4D,GAA0BxW,oBAAS,GAGzDkV,EAAYC,iBAAO,MACnBqb,EAAcrb,iBAAO,MACrBC,EAAeD,iBAAO,MActBsb,EAXYC,aAAW,CACzBC,KAAM,CACJ,iBAAkB,CAChB3qB,MAAO,WAET,6BAA8B,CAC5BA,MAAO,aAKC4qB,GAEVC,EAAoCA,CAACzwB,EAAOC,KAC3CA,GAAqB,kBAAXA,IAITkwB,IACA/wB,EAAMsxB,+BAA8B,GACxC,EA8BEC,EAAiCrwB,UACnC8V,GAAuB,GAEvB,MAAMwa,EAAiCxX,KAAEyX,MAAMzxB,EAAM0xB,4BACrDF,EAA+BG,WAAaH,EAA+BG,WAAW5jB,KAAI6jB,IAAc,IACjGA,EAEHC,iBAAkBD,EAAeC,iBAAiBpZ,QAAOqZ,GAAwBA,EAAqBC,yBAAyB1X,OAAS,QAGxI5B,QAAOmZ,GAAkBA,EAAeC,iBAAiBxX,OAAS,IAEtE,MAAM2X,OX2Ha9wB,WACvB,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,oCAAAqC,OAAmC0O,GAAqBP,GAC3FhO,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EWnIwC0vB,CAAmBjyB,EAAM0xB,2BAA2B7gB,mBAoB1F,GAlBsC,MAAnCmhB,EAAwBrvB,QACvB6uB,EAA+BlgB,gBAAkB0gB,EAAwBpvB,KAAK0O,gBAC9EkgB,EAA+BtP,WAAa8P,EAAwBpvB,KAAKsf,WACzEsP,EAA+BrB,aAAe6B,EAAwBpvB,KAAKutB,aAExEqB,EAA+BU,gBAC9BV,EAA+BW,gBAAkBH,EAAwBpvB,KAAKuvB,gBAC9EX,EAA+BY,SAAWJ,EAAwBpvB,KAAKwvB,SACvEZ,EAA+Bvd,YAAc+d,EAAwBpvB,KAAKqR,cAI9E1S,IAAMkB,MAAMuvB,EAAwBpvB,KAAM,CAACnB,QAAS,WAGxDsvB,EAAkCS,GAElCxa,GAAuB,GAC4B,KAAhDhX,EAAM0xB,2BAA2BW,WAAkB,CAClD,MAAMhY,EAAS2W,EAAYjX,QAAQzU,MAAM+U,OACzC2W,EAAYjX,QAAQuY,kBAAkBjY,EAAQA,GAC9C2W,EAAYjX,QAAQhF,OACxB,MAEIic,EAAYjX,QAAQhF,OACxB,EAmCEwd,EAAuBrxB,UACzB,GAAGuY,IAAgB,CAGX,GAFJzC,GAAuB,GAEhB8Z,EAA+Ba,WAAWa,MAAKZ,IAAmD,IAAjCA,EAAea,gBAAwB,CACvG,MAAMC,EAAe5B,EAA+Ba,WAAWlZ,QAAOmZ,IAAmD,IAAjCA,EAAea,gBACjGtiB,EAAkB,CAAEQ,UAAWmgB,EAA+BngB,UAAW+hB,aAAcA,SACvFxiB,GAAqBC,EAC/B,CAEA,MAAMwiB,EAAkC7B,EAA+Ba,WAAWlZ,QAAOmZ,IAAoD,IAAlCA,EAAegB,iBAC1H9B,EAA+Ba,WAAagB,EAC5C,MAAME,OXlGO3xB,WACzB,MAAMY,EAAQC,aAAaC,QAAQ,OACnC,aAAaC,IAAM+N,KAAK,GAAD7N,OAAIrC,GAAU,+BAA+BgzB,EAChE,CACI1wB,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADF,OAAYL,MAIpCQ,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EWmF+CwwB,CAAqBjC,GACrB,MAAlC+B,EAAuBlwB,QACtBpB,IAAMsB,QAAQgwB,EAAuBjwB,KAAM,CAACnB,QAAS,aACrDzB,EAAMgzB,qCACNjC,IACA/wB,EAAMsxB,+BAA8B,IAGpC/vB,IAAMkB,MAAMowB,EAAuBjwB,KAAM,CAACnB,QAAS,UAE3D,CACAuV,GAAuB,EAAM,EAG/ByC,EAAgBA,KAClB,IAAInY,GAAU,EAkBd,OAjBiD,OAA9CwvB,EAA+BuB,aAC9BrB,EAAYjX,QAAQhF,QACpBxT,IAAMkB,MAAM,0DAA+B,CAAChB,QAAS,WACrDH,GAAU,GAGwC,iBAAnDwvB,EAA+Bxf,kBAC9BsE,EAAamE,QAAQhF,QACrBxT,IAAMkB,MAAM,mDAA8B,CAAChB,QAAS,WACpDH,GAAU,GAGwC,KAAnDwvB,EAA+Bxf,kBAC9BsE,EAAamE,QAAQhF,QACrBxT,IAAMkB,MAAM,sDAA+B,CAAChB,QAAS,WACrDH,GAAU,GAEPA,CAAO,EASlB,OANAqI,qBAAU,KACH3J,EAAMizB,4BACL1B,GACJ,GACD,CAACvxB,EAAMizB,6BAGNhwB,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACC,IAAM,CAACE,WAAW,EAAMD,SAAU,KAAME,KAAMrD,EAAMizB,2BAA4B1vB,QAASA,CAAC3C,EAAOC,IAAWwwB,EAAkCzwB,EAAOC,GAAS2C,sBAAsB,EAAKR,SAAA,CACtLF,cAACW,IAAW,CAACC,GAAI,CAAEG,WAAY,SAAUC,SAAU,OAAQ0O,UAAW,SAAUhM,MAAO,MAAO6H,cAAe,aAAcrL,SAAC,4CAC5HF,cAACiB,IAAU,CAACC,QAASA,IAAMqtB,IAAqC3tB,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACzGF,cAACsB,IAAS,CAACN,SAAS,YAExBhB,cAACuB,IAAa,CAACC,UAAQ,EAACZ,GAAI,CAACmY,GAAI,OAAQC,GAAI,QAAQ9Y,SACjDF,cAACoE,IAAG,CAACxD,GAAI,CAACmY,GAAI,EAAGC,GAAI,GAAG9Y,SACpBF,cAACowB,KAAI,CAACxvB,GAAI,CAACE,EAAG,GAAGZ,SACbF,cAACoE,IAAG,CAAAlE,SACC8tB,GACwD,IAArDA,EAA+Ba,WAAWtX,OACtCvX,cAAA,OAAKkM,UAAU,8BAA6BhM,SACvC8tB,EAA+Ba,WAAW5jB,KAAI,CAAC6jB,EAAgBuB,IAC5DlwB,eAAA,OAAAD,SAAA,CACIF,cAACqE,IAAU,CAACzD,GAAI,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,YAAYxD,SAAE4uB,EAAewB,eAC3FxB,EAAeC,iBAAiB9jB,KAAI,CAAC+jB,EAAsBuB,IACxDpwB,eAAA,OAAK+L,UAAU,oCAAoCtK,MAAO,CAAC4uB,aAAc,QAAQtwB,SAAA,CAC7EF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACG,WAAY,SAAUC,SAAU,OAAQ0O,UAAW,UAAUxP,SAAE8uB,EAAqByB,uBAExHzB,EAAqBC,yBAAyBhkB,KAAI,CAACylB,EAAcC,IAC9D3wB,cAAA,OAAAE,SACIC,eAACqjB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAExjB,SAAA,CACP,IAAlBywB,EACGxwB,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BgR,YAAa,MAAO9vB,EAAG,IAAKZ,SACrFF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAE8uB,EAAqB6B,wBAGvD,UAA7CH,EAAaI,4BACV3wB,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAK/iB,GAAI,CAACgf,OAAQ,6BAA8BgR,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQI,eAAgB,SAAUF,WAAY,UAAUzB,SAAA,CACxJF,cAAC+wB,KAAY,CAACnwB,GAAI,CAACI,SAAU,SAAU0C,MAAO,OAAQmH,GAAI,MAC1D7K,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAUiwB,WAAY,OAAO9wB,SAAE8uB,EAAqBiC,0BAGxHjxB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAK/iB,GAAI,CAACgf,OAAQ,6BAA8B9e,EAAG,IAAKZ,SACnEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAU0O,GAAI,IAAKvP,SAAE8uB,EAAqBkC,2BAIlHlxB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8B9e,EAAG,IAAKZ,SACjEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAE8uB,EAAqBkC,2BAK7G,KAGJ/wB,eAACiE,IAAG,CAAuCxC,MAAO,CAACH,QAAS,OAAQW,MAAO,QAAQlC,SAAA,CAC/EF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BuR,UAAW,MAAOP,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQE,WAAY,UAAUzB,SAC9IF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACI,SAAU,QAAQd,SAAEwwB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACV3wB,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAK/iB,GAAI,CAACgf,OAAQ,6BAA8BuR,UAAW,MAAOP,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQI,eAAgB,UAAU3B,SACpJF,cAAC8c,KAAQ,CAAC4M,UAAQ,EAAC3M,QAAS2T,EAAaW,sBACrClD,QAAS,CAAEE,KAAMF,EAAQE,MACzBztB,GAAI,CAAC,+BAAgC,CAACI,SAAU,WAAY0C,MAAM,YAI1E1D,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAIzjB,SACfF,cAAA,OAAKkM,UAAU,kBAAiBhM,SAC5BF,cAAA,OAAKkM,UAAU,eAAchM,SACzBF,cAACsxB,KAAgB,CAACplB,UAAU,oBAAoBke,KAAM,EAAGV,UAAQ,EAAClQ,aAAckX,EAAaa,+BAM7GvxB,cAAAC,WAAA,CAAAC,SACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAEzjB,SACbF,cAAA,OAAKkM,UAAU,kBAAiBhM,SAC5BF,cAAA,OAAKkM,UAAU,eAAchM,SACzBF,cAACsxB,KAAgB,CAACplB,UAAU,oBAAoBke,KAAM,EAAGV,UAAQ,EAAClQ,aAAckX,EAAaa,gCAI1G,gBAAAlyB,OA/BesxB,QAkCvB,gBAAAtxB,OA/DesxB,QAiE5B,oBAAAtxB,OArEqGkxB,QAuE7G,kBAAAlxB,OA1EkBgxB,QAiFxCrwB,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAU2O,UAAW,UAAUxP,SAAC,oFAO7GF,cAACkd,KAAa,CAACtc,GAAI,CAACuwB,UAAW,mBAAmBjxB,SAC7C8tB,EACG7tB,eAAA,OAAKyB,MAAO,CAACQ,MAAO,OAAQY,QAAS,qBAAqB9C,SAAA,CACtDF,cAACsxB,KAAgB,CAAgEjR,YAAY,6CAAsBze,MAAO,CAACQ,MAAO,OAAQY,QAAS,OAAQhC,SAAU,QAASsB,SAAWC,IAAMivB,OArQlLhvB,EAqQ8MD,EAAEI,OAAOH,WApQxPoQ,EAAUqE,QAAU/Y,YAAW,KAC3B+vB,GAAkCwD,IAC9BA,EAAmClC,WAAa/sB,EACzC,IAAIivB,KACb,GACH,MAN8BjvB,KAqQ8N,EAAC4jB,IAAK8H,EAAa1U,aAAcwU,EAA+BuB,YAAW,cAAAlwB,OAAjR2uB,EAA+BngB,YAE/DmgB,EAA+BoB,cAC5BpvB,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAACyB,GAAI,IAAKnC,SAAA,CACiC,KAA/C8tB,EAA+B7c,aAAqE,OAA/C6c,EAA+B7c,YACjF,KAEAnR,cAAAC,WAAA,CAAAC,SACIF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,WAAY3C,WAAY,SAAUC,SAAU,UAAUd,SAAA,IAAAb,OAAM2uB,EAA+B7c,iBAIpF,KAAnD6c,EAA+BqB,iBAA6E,OAAnDrB,EAA+BqB,gBACrF,KAEArvB,cAAAC,WAAA,CAAAC,SACIF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,WAAY3C,WAAY,SAAUC,SAAU,UAAUd,SAAA,IAAAb,OAAM2uB,EAA+BqB,qBAI3F,KAA5CrB,EAA+BsB,UAAgE,OAA5CtB,EAA+BsB,SAC/E,KAEAtvB,cAAAC,WAAA,CAAAC,SACIF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,WAAY3C,WAAY,SAAUC,SAAU,UAAUd,SAAA,IAAAb,OAAM2uB,EAA+BsB,mBAOhJ,KAGHtB,EAA+Bxf,gBAChCxO,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUQ,GAAI,GAAGnC,SAAA,CACxDC,eAACkE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC0D,GAAI,OAAQjC,GAAI,OAAQwI,GAAI,GAAG3K,SAAA,CAAC,mCAAmBF,cAAA,QAAM4B,MAAO,CAACb,WAAY,SAAU2C,MAAO,WAAWxD,SAAE8tB,EAA+BX,kBACxKrtB,cAACsa,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAIva,SAChEF,cAAC0a,KAAa,CAACrG,WAAY,CAAC,cAAcnU,SACtCF,cAAC2a,KAAU,CAAC1Y,MAAM,oCAAoBqrB,aAAW,EAC7C1S,OAAO,aAAapB,aAAcqB,KAAOmT,EAA+Bxf,iBACxElM,SAAWE,GAvS1BA,KAC1BA,IACIoQ,EAAUqE,SACTyC,cAAc9G,EAAUqE,SAE5BrE,EAAUqE,QAAU/Y,YAAW,KAC3B,MAAMub,EAAajX,EAAMyY,GACnB9E,EAAgB0E,KAAOpB,GAAYmB,OAAO,cAC3B,iBAAlBzE,GACC8X,GAAkCwD,IAC9BA,EAAmCjjB,gBAAkB2H,EAC9C,IAAIsb,KAEnB,GACD,KACP,EAwRiEjE,CAAwBhrB,GAC7CqS,UAAW,CACPmG,UAAW,CAAE1B,SAAUxG,eAQ3C,KAGR9S,cAAA,OAAK4B,MAAO,CAACH,QAAS,OAAQI,eAAgB,UAAU3B,SACpDC,eAACkD,IAAK,CAACC,QAAS,EAAGC,UAAU,MAAKrD,SAAA,CAC9BF,cAACwD,IAAM,CAAC5C,GAAI,CAACI,SAAU,OAAQuK,cAAe,QAASrJ,QAAQ,YAAYhB,QAASA,IAAMuuB,IAAuBvvB,SAAC,aAClHF,cAACwD,IAAM,CAAC5C,GAAI,CAACI,SAAU,OAAQuK,cAAe,QAASrJ,QAAQ,YAAYwB,MAAO,QAASxC,QAASA,IAAMqtB,IAAoCruB,SAAC,yBAK3J,UAKZF,cAACqQ,GAAe,CACZC,oBAAqBA,EAAqB4D,uBAAwBA,MAIlF,E,2EC3XA2G,KAAO6W,OAAO,MA0UCC,OAxUf,SAA8Bz0B,GAC1B,MAOO00B,EAAsBC,GAA2Bn0B,mBAPpB,CAChCkyB,aAAc,GACdkC,cAAe,CAAEC,gBAAiB,GAAIC,gBAAiB,GAAIzC,WAAY,GAAI0C,YAAa,IACxFC,aAAc,GACdC,gBAAiB,MAOdC,EAAoBC,GAAyB30B,oBAAS,IAEtD40B,EAA6BC,GAAkC70B,mBAAS,KACxE80B,EAA6BC,GAAkC/0B,mBAAS,IAazEywB,EAXYC,aAAW,CACzBC,KAAM,CACJ,iBAAkB,CAChB3qB,MAAO,WAET,6BAA8B,CAC5BA,MAAO,aAKC4qB,GAuFhB,OANAznB,qBAAU,KACH3J,EAAMw1B,mBAlDuBt0B,WAChCi0B,GAAsB,GACtB,MAAMM,QAA4B7kB,GAAe5Q,EAAMw1B,kBAAkBZ,cAAc50B,EAAMw1B,kBAAkBZ,cAAcpC,MAAKkD,GAAyD,OAApCA,EAAkBrkB,gBAA0B,EAAI,GAAGR,mBAC1M,GAAG7Q,EAAMw1B,kBAAkBG,eAAe,CACtC,MAAMC,EAAsB,IACrB51B,EAAMw1B,kBAAkBZ,cAAc50B,EAAMw1B,kBAAkBZ,cAAcpC,MAAKkD,GAAyD,OAApCA,EAAkBrkB,gBAA0B,EAAI,GACzJwkB,eAAgBJ,EAAoBV,YAAYc,eAChDvkB,gBAAiBmkB,EAAoBV,YAAYzjB,gBACjD6e,aAAcsF,EAAoBV,YAAY5E,aAC9C4E,YAAaU,EAAoBV,YAAYpD,YAGjDgD,EACI,CACIjC,aAAc,GACdkC,cAAegB,EACfE,sBAAuB91B,EAAMw1B,kBAAkBM,sBAC/Cd,aAAch1B,EAAMw1B,kBAAkBR,aACtCC,gBAAiBj1B,EAAMw1B,kBAAkBP,iBAGrD,KAEI,CACGj1B,EAAMw1B,kBAAkB9C,aAAarY,OAAS,IAC7Cra,EAAMw1B,kBAAkB9C,aAAe1yB,EAAMw1B,kBAAkB9C,aAAaqD,MAAK,CAACC,EAAGC,IAAMD,EAAEE,cAAgBD,EAAEC,iBAGnH,MAAMN,EAAsB,IACrB51B,EAAMw1B,kBAAkBZ,cAAc50B,EAAMw1B,kBAAkBZ,cAAcpC,MAAKkD,GAAyD,OAApCA,EAAkBrkB,gBAA0B,EAAI,GACzJwkB,eAAgBJ,EAAoBV,YAAYc,eAChDvkB,gBAAiBmkB,EAAoBV,YAAYzjB,gBACjD6e,aAAcsF,EAAoBV,YAAY5E,aAC9C4E,YAAaU,EAAoBV,YAAYpD,YAGjDgD,EACI,CACIjC,aAAc1yB,EAAMw1B,kBAAkB9C,aACtCkC,cAAegB,EACfE,sBAAuB91B,EAAMw1B,kBAAkBM,sBAC/Cd,aAAch1B,EAAMw1B,kBAAkBR,aACtCC,gBAAiBj1B,EAAMw1B,kBAAkBP,iBAGrD,CACAE,GAAsB,EAAM,EAKxBgB,EACJ,GACD,CAACn2B,EAAMw1B,oBAGN1yB,cAAAC,WAAA,CAAAC,SACIF,cAACoE,IAAG,CAACxD,GAAI,CAAC6C,OAAQ,OAAQtC,SAAU,YAAYjB,SAC3CkyB,EACGjyB,eAACiE,IAAG,CAACxD,GAAI,CAAC6C,OAAQ,OAAQhC,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,UAAUxB,SAAA,CAChHF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,8HAGjDC,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAAA,OAAK+L,UAAU,kCAAiChM,SAAA,CAE5CC,eAACkE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACG,WAAY,SAAU2O,UAAW,SAAU1O,SAAU,UAAUd,SAAA,CAAC,gCACxEF,cAAA,QAAM4B,MAAO,CAAC8B,MAAO,OAAOxD,SAAE0xB,EAAqBE,cAAcC,qBAGvF5xB,eAACiwB,KAAI,CAACxvB,GAAI,CAACE,EAAG,GAAGZ,SAAA,CACZ0xB,EAAqBhC,aAAa3kB,KAAI,CAACqoB,EAAiBC,IACrDpzB,eAAA,OAAAD,SAAA,CACIF,cAACwzB,KAAc,CAAC5yB,GAAI,CAACgY,GAAI,MAAOC,GAAI,MAAOrJ,aAAc,MAAO,SAAU,CAACvL,gBAAiB,uBACxF/C,QAASA,IAzGdqyB,KAC/BhB,GAAgCkB,IAC5B,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQH,IAAqBG,EAAQH,GAC9BG,CAAO,GAChB,EAoGiDC,CAA0BJ,GAAkBrzB,SAE3DC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQE,WAAY,UAAUzB,SAAA,CAC7CF,cAAC4zB,KAAY,CAAChzB,GAAI,CAACqgB,SAAU,OAAQ,+BAAgC,CAACjgB,SAAU,OAAQ0C,MAAO,UAAWmwB,WAA6D,IAAlDvB,EAA4BiB,GAA6B,gBAAkB,iBAAiBrzB,SAACF,cAAC8zB,KAAQ,MAC3N9zB,cAAC+zB,KAAY,CAACC,QAASV,EAAgBhD,aAAc1vB,GAAI,CAAC,6BAA8B,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,oBAInJ1D,cAACi0B,KAAQ,CAACC,GAAI5B,EAA4BiB,GAAmBY,QAAQ,OAAOC,eAAa,EAAAl0B,SACrFF,cAAA,OAAAE,SACKozB,EAAgBvE,iBAAiB9jB,KAAI,CAACopB,EAAqCC,IACxEn0B,eAAA,OAAK+L,UAAU,yCAAyCtK,MAAO,CAAEqoB,YAAa,OAAQC,aAAc,OAAQsG,aAAc,OAAQtwB,SAAA,CAC9HF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACG,WAAY,SAAUC,SAAU,OAAQ0O,UAAW,SAAUrN,GAAIgyB,EAAoC5D,qBAAuB,EAAI,GAAIvwB,SAAEm0B,EAAoC5D,uBAE/MzwB,cAACoE,IAAG,CAACxD,GAAI,CAACyB,GAAI,GAAGnC,SACZm0B,EAAoCpF,yBAAyBhkB,KAAI,CAACylB,EAAcC,IAC7E3wB,cAACoE,IAAG,CAAAlE,SACAC,eAACqjB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAExjB,SAAA,CACP,IAAlBywB,EACGxwB,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BgR,YAAa,MAAO9vB,EAAG,IAAKZ,SACrFF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAEm0B,EAAoCxD,wBAGtE,UAA7CH,EAAaI,4BACV3wB,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAK/iB,GAAI,CAACgf,OAAQ,6BAA8BgR,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQI,eAAgB,SAAUF,WAAY,UAAUzB,SAAA,CACxJF,cAAC+wB,KAAY,CAACnwB,GAAI,CAACI,SAAU,SAAU0C,MAAO,OAAQmH,GAAI,MAC1D7K,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAUiwB,WAAY,OAAO9wB,SAAEm0B,EAAoCpD,0BAGvIjxB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAK/iB,GAAI,CAACgf,OAAQ,6BAA8B9e,EAAG,IAAKZ,SACnEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAU0O,GAAI,IAAKvP,SAAEm0B,EAAoCnD,2BAIjIlxB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8B9e,EAAG,IAAKZ,SACjEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAEm0B,EAAoCnD,2BAK5H,KAGJ/wB,eAACiE,IAAG,CAAuCxC,MAAO,CAACH,QAAS,OAAQW,MAAO,QAAQlC,SAAA,CAC/EF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BuR,UAAW,MAAOP,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQE,WAAY,UAAUzB,SAC9IF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACI,SAAU,QAAQd,SAAEwwB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACV3wB,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAK/iB,GAAI,CAACgf,OAAQ,6BAA8BuR,UAAW,MAAOP,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQI,eAAgB,UAAU3B,SACpJF,cAAC8c,KAAQ,CAAC4M,UAAQ,EAAC3M,QAAS2T,EAAaW,sBAAuBlD,QAAS,CAAEE,KAAMF,EAAQE,MAAQztB,GAAI,CAAC,+BAAgC,CAACI,SAAU,eAGrJhB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAIzjB,SACfF,cAAA,OAAKkM,UAAU,kBAAiBhM,SAC5BF,cAAA,OAAKkM,UAAU,eAAchM,SACzBF,cAACsxB,KAAgB,CAACplB,UAAU,oBAAoBke,KAAM,EAAGV,UAAQ,EAAClnB,MAAOkuB,EAAaa,+BAMtGvxB,cAAAC,WAAA,CAAAC,SACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAEzjB,SACbF,cAAA,OAAKkM,UAAU,kBAAiBhM,SAC5BF,cAAA,OAAKkM,UAAU,eAAchM,SACzBF,cAACsxB,KAAgB,CAACplB,UAAU,oBAAoBke,KAAM,EAAGV,UAAQ,EAAClnB,MAAOkuB,EAAaa,gCAInG,gBAAAlyB,OA5BesxB,QA+BvB,gBAAAtxB,OA5DesxB,UA+D5B,wCAAAtxB,OApEsKi1B,YAwEjL,mBAAAj1B,OArFck0B,MAyFhC3B,EAAqBE,cAAcG,YAAYhnB,KAAI,CAACspB,EAAkBC,IACnEr0B,eAAA,OAAAD,SAAA,CACIF,cAACwzB,KAAc,CAAC5yB,GAAI,CAACgY,GAAI,MAAOC,GAAI,MAAOrJ,aAAc,MAAO,SAAU,CAACvL,gBAAiB,uBACxF/C,QAASA,IA3LdszB,KAC/B/B,GAAgCgB,IAC5B,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQc,IAAqBd,EAAQc,GAC9Bd,CAAO,GAChB,EAsLiDe,CAA0BD,GAAkBt0B,SAE3DC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQE,WAAY,UAAUzB,SAAA,CAC7CF,cAAC4zB,KAAY,CAAChzB,GAAI,CAACqgB,SAAU,OAAQ,+BAAgC,CAACjgB,SAAU,OAAQ0C,MAAO,UAAWmwB,WAA6D,IAAlDrB,EAA4BgC,GAA6B,gBAAkB,iBAAiBt0B,SAACF,cAAC8zB,KAAQ,MAC3N9zB,cAAC+zB,KAAY,CAACC,QAASO,EAAiBjE,aAAc1vB,GAAI,CAAC,6BAA8B,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,oBAIpJ1D,cAACi0B,KAAQ,CAACC,GAAI1B,EAA4BgC,GAAmBL,QAAQ,OAAOC,eAAa,EAAAl0B,SACrFF,cAAA,OAAAE,SACKq0B,EAAiBxF,iBAAiB9jB,KAAI,CAACypB,EAAiCC,IACrEx0B,eAAA,OAAK+L,UAAU,yCAAyCtK,MAAO,CAAEqoB,YAAa,OAAQC,aAAc,OAAQsG,aAAc,OAAQtwB,SAAA,CAC9HF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACG,WAAY,SAAUC,SAAU,OAAQ0O,UAAW,SAAUrN,GAAIqyB,EAAgCjE,qBAAuB,EAAI,GAAIvwB,SAAEw0B,EAAgCjE,uBAEvMzwB,cAACoE,IAAG,CAACxD,GAAI,CAACyB,GAAI,GAAGnC,SACZw0B,EAAgCzF,yBAAyBhkB,KAAI,CAACylB,EAAcC,IACzE3wB,cAACoE,IAAG,CAAAlE,SACAC,eAACqjB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAExjB,SAAA,CACP,IAAlBywB,EACGxwB,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BgR,YAAa,MAAO9vB,EAAG,IAAKZ,SACrFF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAEw0B,EAAgC7D,wBAGlE,UAA7CH,EAAaI,4BACV3wB,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAK/iB,GAAI,CAACgf,OAAQ,6BAA8BgR,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQI,eAAgB,SAAUF,WAAY,UAAUzB,SAAA,CACxJF,cAAC+wB,KAAY,CAACnwB,GAAI,CAACI,SAAU,SAAU0C,MAAO,OAAQmH,GAAI,MAC1D7K,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAUiwB,WAAY,OAAO9wB,SAAEw0B,EAAgCzD,0BAGnIjxB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAK/iB,GAAI,CAACgf,OAAQ,6BAA8B9e,EAAG,IAAKZ,SACnEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAU0O,GAAI,IAAKvP,SAAEw0B,EAAgCxD,2BAI7HlxB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8B9e,EAAG,IAAKZ,SACjEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAEw0B,EAAgCxD,2BAKxH,KAGJ/wB,eAACiE,IAAG,CAAuCxC,MAAO,CAACH,QAAS,OAAQW,MAAO,QAAQlC,SAAA,CAC/EF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BuR,UAAW,MAAOP,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQE,WAAY,UAAUzB,SAC9IF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACI,SAAU,QAAQd,SAAEwwB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACV3wB,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAK/iB,GAAI,CAACgf,OAAQ,6BAA8BuR,UAAW,MAAOP,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQI,eAAgB,UAAU3B,SACpJF,cAAC8c,KAAQ,CAAC4M,UAAQ,EAAC3M,QAAS2T,EAAaW,sBAAuBlD,QAAS,CAAEE,KAAMF,EAAQE,MAAQztB,GAAI,CAAC,+BAAgC,CAACI,SAAU,eAGrJhB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,IAAIzjB,SACfF,cAAA,OAAKkM,UAAU,kBAAiBhM,SAC5BF,cAAA,OAAKkM,UAAU,eAAchM,SACzBF,cAACsxB,KAAgB,CAACplB,UAAU,oBAAoBke,KAAM,EAAGV,UAAQ,EAAClnB,MAAOkuB,EAAaa,+BAMtGvxB,cAAAC,WAAA,CAAAC,SACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAEzjB,SACbF,cAAA,OAAKkM,UAAU,kBAAiBhM,SAC5BF,cAAA,OAAKkM,UAAU,eAAchM,SACzBF,cAACsxB,KAAgB,CAACplB,UAAU,oBAAoBke,KAAM,EAAGV,UAAQ,EAAClnB,MAAOkuB,EAAaa,gCAInG,gBAAAlyB,OA5BesxB,QA+BvB,gBAAAtxB,OA5DesxB,UA+D5B,oCAAAtxB,OApEkKs1B,YAwE7K,oBAAAt1B,OArFem1B,SA0FtCx0B,cAAA,OAAKkM,UAAU,aAAatK,MAAO,CAACgpB,WAAY,OAAQzR,UAAW,OAAOjZ,SACtEF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAA,uBAAAb,OAAeuyB,EAAqBE,cAAcvC,mBAI7HvvB,cAAA,OAAKkM,UAAU,iBAAiBtK,MAAO,CAACgpB,WAAY,OAAQzR,UAAW,MAAO/W,MAAO,OAAOlC,SACxFF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,UAAW3C,WAAY,SAAUC,SAAU,WAAWd,SAAA,GAAAb,OAAKuyB,EAAqBE,cAAc8C,eAAc,MAAAv1B,OAAKwb,KAAO+W,EAAqBE,cAAcE,iBAAiBpX,OAAO,mBAO3P,E,4SC41Eeia,OAhnFf,WACI,MAAMC,EAAqC,CACvCC,IAAK,GACLnoB,GAAI,GACJooB,WAAY,GACZrW,YAAa,GACbsW,aAAc,GACdC,YAAa,GACbC,kBAAmB,GACnBC,eAAgB,GAChBC,eAAgB,GAChBC,eAAgB,GAChBC,0BAA2B,GAC3BC,cAAe,GACfC,gBAAiB,KAGf,KAAEzwB,EAAI,QAAErH,EAAO,aAAEuH,EAAY,aAAEoC,EAAY,WAAE1B,EAAU,cAAER,EAAa,2BAAEK,GAA+BiD,qBAAWlE,GAElHqE,EAAUC,wBAET4sB,EAAaC,GAAkBj4B,oBAAS,IAGxCk4B,EAA6BC,GAAkCn4B,mBAASo3B,IAGxEgB,EAAmBC,GAAwBr4B,mBAAS,KAGpDg1B,EAAmBsD,GAAwBt4B,sBAG3Cu4B,EAA2BC,GAAgCx4B,oBAAS,IAGpEy4B,EAA+BC,GAAoC14B,mBAAS,KAG5E24B,EAA2BC,GAAgC54B,mBAAS,CAAC,IAGrE64B,EAAkCC,GAAuC94B,mBAAS,KAGlF+4B,EAAuBC,GAA4Bh5B,mBAAS,KAC5Di5B,EAA8BC,GAAmCl5B,sBAGjEm5B,EAAoBC,GAAyBp5B,sBAG7CkxB,EAA6BmI,GAAkCr5B,mBAAS,CAAC,IAGzEs5B,EAAoBC,GAAyBv5B,sBAG7Cw5B,EAAoBC,GAAyBz5B,sBAG7C05B,EAAqBC,IAA0B35B,sBAG/CyyB,GAA4B3B,IAAiC9wB,oBAAS,IAEtE45B,GAA0BC,IAA+B75B,oBAAS,IAClE85B,GAAgBC,IAAqB/5B,oBAAS,IAC9Cg6B,GAAoBC,IAAyBj6B,oBAAS,IACtDk6B,GAA0BC,IAA+Bn6B,oBAAS,IAClEo6B,GAA0BC,IAA+Br6B,oBAAS,IAElEigB,GAA0BC,IAA+BlgB,mBAAS,KAClEqgB,GAAqBC,IAA0BtgB,mBAAS,KAExDugB,GAA+BC,IAAoCxgB,mBAAS,KAC5EygB,GAA8BC,IAAmC1gB,mBAAS,KAE1E0f,GAAYC,IAAiB3f,mBAAS,CAAC4f,UAAW,EAAGC,UAAW,yBAChEC,GAAuBC,IAA4B/f,mBACtD,CACI,CAAE6f,UAAW,sBAAeG,YAAa,GACzC,CAAEH,UAAW,wBAAcG,YAAa,MAIzCvZ,GAA6BqB,IAAkC9H,oBAAS,GA2BzE4gB,GAAiBA,CAACC,EAAUC,KAC9B,MAAMC,EAAsBD,EAAW9I,cACvC,OAAO6I,EAAS5I,QAAO+I,IACrB,MAAM,UAAE7Q,EAAS,SAAE0D,EAAQ,YAAEG,EAAW,YAAEE,GAAgB8M,EAAWtN,QACrE,OAAOvD,EAAU6H,cAAcM,SAASyI,IAAwBlN,EAASmE,cAAcM,SAASyI,IAAwB/M,EAAYgE,cAAcM,SAASyI,IAAwB7M,EAAY8D,cAAcM,SAASyI,EAAoB,GAC1O,EAsBAuZ,GAAwB55B,UAC1Bq5B,IAAkB,GAClBE,IAAsB,GACtBE,IAA4B,GAC5BE,IAA4B,GAC5B,MAAMt4B,QAAiByO,GAAmB0nB,EAA4BhpB,GAAI,EAA+C,IAA9CgpB,EAA4BqC,cAAyB,GAAsD,IAA7CrC,EAA4BsC,aAAwB,EAAI,IAC1K,MAApBz4B,EAASI,QACRpB,IAAMsB,QAAQ,qDAADV,OAA8Bu2B,EAA4BX,cAAgB,CAACt2B,QAAS,aACjGk3B,EAA+Bf,GAC/BiB,EAAqB,IACrBG,GAA6B,GAC7BE,EAAiC,IACjCE,EAA6B,CAAC,GAC9BE,EAAoC,IACpCE,EAAyB,IACzBE,IACAG,EAA8B,CAAC,GAC/BM,KACAT,IACAK,IACAH,IACAlY,MAEwB,MAApBnf,EAASI,QACbpB,IAAMkB,MAAM,sHAAoE,CAAChB,QAAS,WAE9Fk5B,IAA4B,GAC5BE,IAA4B,EAAM,EAGhCI,GAAwB/5B,UAI1B,IAHqBg6B,OAAOC,QACxB,0PAwBA,OAAO,EAtBO,CACdZ,IAAkB,GAClBjyB,IAA+B,GAC/B,MAAM8yB,Ob0DQl6B,WACtB,MAAMoP,EAASR,KACf,aAAa7N,IAAMo5B,OAAO,GAADl5B,OAAIrC,GAAU,mCAAAqC,OAAkCkP,GAAiBf,GACzFhO,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EalE8C+4B,CAAkB9F,EAAkBZ,cAAc,GAAGvjB,eACrD,MAArC+pB,EAA0Bz4B,QACzBpB,IAAMsB,QAAQu4B,EAA0Bx4B,KAAM,CAACnB,QAAS,iCACrDi3B,EAA4BsC,oBACrBhqB,GAAmB0nB,EAA4BhpB,GAAI,GAE7DopB,IACGa,GAAoD,IAA9BA,EAAmBtf,QACxCuf,IAEJjB,EAA+Bf,GAC/BzX,GAAc,CAACC,UAAW,EAAGC,UAAW,wBACxCqB,MAGAngB,IAAMkB,MAAM24B,EAA0Bx4B,KAAM,CAACnB,QAAS,+BAE1D6G,IAA+B,EACnC,CAEA,EAGEizB,GAAkCA,KACM,IAAvC7C,EAA4B/1B,SAA8D,IAA9C+1B,EAA4BqC,cACvES,KAE2C,IAAvC9C,EAA4B/1B,OAChC84B,MAAM,0EAADt5B,OAAgDu2B,EAA4BX,aAAY,gJAElD,IAAvCW,EAA4B/1B,SAA+D,IAA9C+1B,EAA4BqC,eAC7EW,IACJ,EAGEC,GAAqCA,KACvCrzB,IAA+B,GACW,IAAvCowB,EAA4B/1B,QAC3B3B,YAAW,KACXsH,IAA+B,GAC3BgpB,IAA8B,EAAK,GACpC,IACP,EAiDE5P,GAA8BxgB,gBAC1B,IAAIC,SAAQC,GAAWJ,WAAWI,EAAS,OACjD,MAAMmB,QAAiB8N,KACvB,GAAgB,MAAb9N,EAAiB,CAChB,MAAMq5B,EAA0Br5B,EAASoU,KAAK8B,QAAOqB,GAAuB,IAAfA,EAAK7I,QAClEyP,GAA4Bkb,GAE5B,IAAIzZ,EAA8ByZ,EAAwBnjB,QAAO2J,GAAuD,IAA/BA,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,QAClLqR,EAA2BsZ,EAAwBnjB,QAAO2J,GAAuD,IAA/BA,EAAqBnR,OAAemR,EAAqB0C,eAAiBhd,EAAKiK,SAErKmP,GAAgCiB,GAChCnB,GAAiCmB,GAEjC,MAAML,EAAc,CAChB,CAAEzB,UAAW,sBAAeG,YAAa2B,EAA4B9H,QACrE,CAAEgG,UAAW,wBAAcG,YAAa8B,EAAyBjI,SAErEkG,GAAyBuB,EAC7B,CACAyY,IAAkB,GAClBE,IAAsB,EAAM,EAG1BoB,GAAyB36B,UAC3BoH,IAA+B,GAC/BmyB,IAAsB,GACtBJ,IAA4B,GACzBV,GAAoD,IAA9BA,EAAmBtf,QACxCuf,UAEEkC,GAA8BC,EAAiBrsB,IACrD,MAAMssB,EAA+B,IAAItD,GACzCsD,EAA6BnE,IAAMkE,EAAiB7W,MACpD8W,EAA6BtsB,GAAKqsB,EAAiBrsB,GACnDssB,EAA6Br5B,OAAS,EACtCq5B,EAA6BlE,WAAaiE,EAAiB7nB,QAAQvD,UACnEqrB,EAA6Bva,YAAcsa,EAAiB7nB,QAAQuN,YACpEua,EAA6BjE,aAAegE,EAAiB7nB,QAAQG,SACrE2nB,EAA6BhE,YAAc+D,EAAiB7nB,QAAQzD,WACpEurB,EAA6B/D,kBAAoB8D,EAAiB7nB,QAAQmS,YAC1E2V,EAA6B9D,eAAiB6D,EAAiB7nB,QAAQI,OACvE0nB,EAA6B7D,eAAiB4D,EAAiBx1B,OAC/Dy1B,EAA6B5D,eAAiB2D,EAAiBhoB,OAC/DioB,EAA6B3D,0BAA4B0D,EAAiB/nB,kBAC1EgoB,EAA6B3D,0BAA4B0D,EAAiB/nB,kBAC1EgoB,EAA6B1D,cAAgByD,EAAiB7nB,QAAQM,YAAcunB,EAAiB7nB,QAAQM,YAAcunB,EAAiB7nB,QAAQQ,YACpJsnB,EAA6BzD,gBAAkBwD,EAAiB7nB,QAAQ+N,YACxE+Z,EAA6B/nB,aAA+C,IAAjC8nB,EAAiB9nB,YAC5D+nB,EAA6BjB,cAA2C,IAA3BgB,EAAiB9qB,MAC9D+qB,EAA6BhB,aAA0C,IAA3Be,EAAiB9qB,MAC7D+qB,EAA6BC,gBAAiB,EAC9CtD,EAA+BqD,GAC/BvB,IAAsB,GACtBJ,IAA4B,GAC5B/xB,IAA+B,EAAM,EAyBnCkzB,GAAkCt6B,UACpCq5B,IAAkB,GAClB,MAAMh4B,QAAiByO,GAAmB0nB,EAA4BhpB,GAAI,GAC1E,GAAuB,MAApBnN,EAASI,OAAe,CACvB,MAAMq5B,EAA+B,IAAItD,GAGzC,GAFAsD,EAA6Br5B,OAAS,EACtCg2B,EAA+BqD,GAC5BxG,EAAkBZ,cAAcpC,MAAKkD,GAAyD,OAApCA,EAAkBrkB,gBAAwB,CAEhGqnB,EAA4BsC,eAC3Bb,GAAuBngB,KAAEW,UAAU6a,EAAkB9C,eAErDqH,EAAsB/f,KAAEW,UAAU6a,EAAkB9C,gBAGxD,MAAMwJ,EAA4B,IAAIzb,IAChC0b,EAAmBD,EAA0BnvB,WAAU+M,GAAQA,EAAKpK,KAAOgpB,EAA4BhpB,KAC7GwsB,EAA0BC,GAAkBlrB,MAAQ,EAEpDyP,GAA4Bwb,GAE5B,MAAM/Z,EAA8B+Z,EAA0BzjB,QAAO2J,GAAuD,IAA/BA,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,QAC1LiQ,GAAgCiB,GAChCnB,GAAiCmB,SAE3Bia,KACN76B,IAAMsB,QAAQ,2CAADV,OAA4Bu2B,EAA4BX,cAAgB,CAACt2B,QAAS,YACnG,KACI,CACA,MAAMy6B,EAA4B,IAAIzb,IAChC0b,EAAmBD,EAA0BnvB,WAAU+M,GAAQA,EAAKpK,KAAOgpB,EAA4BhpB,KAC7GwsB,EAA0BC,GAAkBlrB,MAAQ,EAEpDyP,GAA4Bwb,GAE5B,MAAM/Z,EAA8B+Z,EAA0BzjB,QAAO2J,GAAuD,IAA/BA,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,QAE1LiQ,GAAgCiB,GAChCnB,GAAiCmB,SAE3Bka,IACV,CACJ,MAC4B,MAApB95B,EAASI,QACbpB,IAAMkB,MAAMF,EAASK,KAAM,CAACnB,QAAS,WAEzC84B,IAAkB,EAAM,EAItB6B,GAA6Bl7B,UAS/B,GARAy5B,IAA4B,GAC5BnF,EAAkBZ,cAAcrM,SAASmN,IACE,OAApCA,EAAkBrkB,gBACjBqkB,EAAkBzkB,MAAQ,EAC9B,KAI4C,IAA7CynB,EAA4BsC,eAA8D,IAArCxF,EAAkBG,eAAyB,CAC/F,MAEM2G,SAFqCxrB,GAAqB4nB,EAA4BZ,aAErBl1B,KAAKmL,KAAIwuB,IAC5E,MAAMC,EAA4BhH,EAAkB9C,aAAazX,MAAKwhB,GAAqCA,EAAkCvG,gBAAkBqG,EAAiCrG,gBAEhM,MAAO,IACAqG,EACHG,QAAQ,EACR7K,iBAAkB0K,EAAiC1K,iBAAiBpZ,QAAOkkB,GAChEH,GAA6BA,EAA0B3K,iBAAiBW,MAAKoK,GAAYA,EAASC,uBAAyBF,EAASE,yBAC5I9uB,KAAI4uB,IACH,MAAMG,EAAmBN,EAA0B3K,iBAAiB5W,MAAK2hB,GAAYA,EAASC,uBAAyBF,EAASE,uBAChI,MAAO,IACAF,EACHI,oBAAoBD,EACpBJ,QAAQ,EACR3K,yBAA0B+K,EAAmBA,EAAiB/K,yBAA2B,GAC5F,IAER,IAGLyD,EAAkB9C,aAAe4J,EAEjCrC,EAAsB,CAClBtpB,UAAW+nB,EAA4BZ,WACvCpF,aAAc,KAGlB,MAAMsK,QAAqCpsB,GAAe4kB,EAAkBZ,cAAc,GAAG/jB,mBAE7F2kB,EAAkBZ,cAAc,GAAGjD,WAAaqL,EAA6BjI,YAAYpD,WAEzF,MAAMsL,EAA6CzH,EAAkBZ,cAAc,GAAGjD,WAAW5jB,KAAImvB,IAAQ,CACzG9J,aAAc8J,EAAS9J,aACvBR,gBAAgB,EAChBf,iBAAkBqL,EAASrL,iBAAiB9jB,KAAIovB,IAAO,IAClDA,EACHpL,yBAA0B,WAK1BqL,EAAiC,CACnCzsB,UAAW+nB,EAA4BZ,WACvC5F,cAAesD,EAAkBvhB,YACjCpD,kBAAmB2kB,EAAkBZ,cAAc,GAAG/jB,kBACtDwhB,WAAYmD,EAAkBZ,cAAc,GAAGvC,WAC/CV,WAAYsL,GAGhBzD,EAAyB,CACrB6D,kBAAmB7H,EAAkBZ,cAAc,GAAGC,gBACtDyI,iBAAkB9H,EAAkBZ,cAAc,GAAGjD,aAGzD+H,EAAgC,CAC5B2D,kBAAmB7H,EAAkBZ,cAAc,GAAGC,gBACtDyI,iBAAkB9H,EAAkBZ,cAAc,GAAGjD,aAGzDkH,EAAqBrD,GACrBqE,EAA8B7f,KAAEW,UAAUyiB,IAC1CtE,GACJ,MAGK,IAAgD,IAA7CJ,EAA4BsC,eAA8D,IAArCxF,EAAkBG,eAAwB,CACnG,MAAMqH,QAAqCpsB,GAAe4kB,EAAkBZ,cAAc,GAAG/jB,mBAE7F2kB,EAAkBZ,cAAc,GAAGjD,WAAaqL,EAA6BjI,YAAYpD,WAEzF,MAAMsL,EAA6CzH,EAAkBZ,cAAc,GAAGjD,WAAW5jB,KAAImvB,IAAQ,CACzG9J,aAAc8J,EAAS9J,aACvBR,gBAAgB,EAChBf,iBAAkBqL,EAASrL,iBAAiB9jB,KAAIovB,IAAO,IAClDA,EACHpL,yBAA0B,WAK1BqL,EAAiC,CACnCzsB,UAAW+nB,EAA4BZ,WACvC5F,cAAesD,EAAkBvhB,YACjCpD,kBAAmB2kB,EAAkBZ,cAAc,GAAG/jB,kBACtDwhB,WAAYmD,EAAkBZ,cAAc,GAAGvC,WAC/CV,WAAYsL,GAGhBzD,EAAyB,CACrB6D,kBAAmB7H,EAAkBZ,cAAc,GAAGC,gBACtDyI,iBAAkB9H,EAAkBZ,cAAc,GAAGjD,aAGzD+H,EAAgC,CAC5B2D,kBAAmB7H,EAAkBZ,cAAc,GAAGC,gBACtDyI,iBAAkB9H,EAAkBZ,cAAc,GAAGjD,aAIzD,IAAI4L,EAAgCvjB,KAAEW,UAAU6a,EAAkB9C,cAElE6K,EAAgCA,EAA8BxvB,KAAK+L,IAC/D,MAAM0jB,EAAuB1jB,EAAK+X,iBAAiB9jB,KAAK0vB,IAC7C,CACH1J,qBAAsB0J,EAAqB1J,qBAC3CJ,oBAAqB8J,EAAqB9J,oBAC1CkJ,qBAAsBY,EAAqBZ,qBAC3C7I,oBAAqByJ,EAAqBzJ,oBAC1CT,qBAAsBkK,EAAqBlK,qBAC3CxB,yBAA0B,OAIlC,MAAO,CACHqB,aAActZ,EAAKsZ,aACnB8C,cAAepc,EAAKoc,cACpBrE,iBAAkB2L,EAClB/K,eAAe,EAClB,IAGL,MAAMiL,EAA8CH,EAA8Bp7B,OAAOi7B,EAA+BzL,YACxHyL,EAA+BzL,WAAa+L,EAE5C7E,EAAqBrD,GACrBqE,EAA8B7f,KAAEW,UAAUyiB,IAC1CtE,GACJ,KAGI,CACA,MAAM6E,EAAoCnI,EAAkB9C,aAAa3kB,KAAKqoB,IAC1E,MAAMwH,EAAgCxH,EAAgBvE,iBAAiB9jB,KAAK+jB,IAC/C,CACrByB,qBAAsBzB,EAAqByB,qBAC3CI,oBAAqB7B,EAAqB6B,oBAC1CI,qBAAsBjC,EAAqBiC,qBAC3CC,oBAAqBlC,EAAqBkC,oBAC1C6I,qBAAsB/K,EAAqB+K,qBAC3C9K,yBAA0B,OAYlC,MAP8B,CAC1BqB,aAAcgD,EAAgBhD,aAC9BX,eAAe,EACfyD,cAAeE,EAAgBF,cAC/BrE,iBAAkB+L,EAGM,IAG1BC,EAAqCrI,EAAkBZ,cAAc3Z,MAAMya,GAAsBA,EAAkB/kB,YAAc+nB,EAA4BZ,aAEnK+B,EAA8B,CAC1BlpB,UAAW+nB,EAA4BZ,WACvC5F,cAAesD,EAAkBvhB,YACjCpD,kBAAmBgtB,EAAmChtB,kBACtDwhB,WAAYwL,EAAmCxL,WAC/CV,WAAYgM,IAGhBnI,EAAkB9C,aAAanK,SAAQ,CAACuV,EAAkBC,KACtDD,EAAiBjM,iBAAmBiM,EAAiBjM,iBAAiB9jB,KAAK+jB,IAChE,IACAA,EACHkM,kBAAmBD,MAGpB,IACAD,MAIXjF,EAAqBrD,GACrBsD,GACJ,CACA6B,IAA4B,EAAM,EAIhCe,GAAsCx6B,UACxCq5B,IAAkB,GAElB,GAAuB,aADAvpB,GAAmB0nB,EAA4BhpB,GAAI,IAC9D/M,OAAe,CACvB,MAAMu5B,EAA4B,IAAIzb,IAChC0b,EAAmBD,EAA0BnvB,WAAU+M,GAAQA,EAAKpK,KAAOgpB,EAA4BhpB,KAC7GwsB,EAA0BC,GAAkBlrB,MAAQ,EAEpDyP,GAA4Bwb,GAE5B,MAAM/Z,EAA8B+Z,EAA0BzjB,QAAO2J,GAAuD,IAA/BA,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,QAE1LiQ,GAAgCiB,GAChCnB,GAAiCmB,GAEjC,MAAM6Z,EAA+B,IAAItD,GACzCsD,EAA6Br5B,OAAS,EACtCg2B,EAA+BqD,SACzBK,KACNlc,GAAc,CAACC,UAAW,EAAGC,UAAW,wBACxCka,IAAkB,EACtB,GAIE8B,GAA+Bn7B,UACjCy5B,IAA4B,GAC5B,MAAMqC,Ob5de97B,WACzB,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,sCAAAqC,OAAqCkP,GAAiBf,GACzFhO,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,Eaod6C07B,CAAqBzI,EAAkBZ,cAAc,GAAGvjB,eAEnG,GAA2C,MAAxC2rB,EAA6Br6B,OAAe,CAC3C,MAAMq5B,EAA+B,IAAItD,GACzCsD,EAA6Br5B,OAAS,EACtCg2B,EAA+BqD,IAES,IAArCxG,EAAkBG,iBACjBwE,GAAuBngB,KAAEW,UAAU6a,EAAkB9C,eAErDqH,EAAsB/f,KAAEW,UAAU6a,EAAkB9C,sBAGlDwL,GAA6BlB,EAA6Bp6B,MAChErB,IAAMsB,QAAQ,4DAADV,OAAmCu2B,EAA4BX,cAAgB,CAACt2B,QAAS,YAC1G,MACgD,MAAxCu7B,EAA6Br6B,QACjCpB,IAAMkB,MAAM,sHAAoE,CAAChB,QAAS,WAE9Fk5B,IAA4B,EAAM,EAIhCuD,GAA+Bh9B,UACjCs0B,EAAkBZ,cAAc,GAAG3jB,MAAQ,EAC3CukB,EAAkBZ,cAAc,GAAGjD,WAAawM,EAAiCxM,WAEjF,MAAMsL,EAA6CzH,EAAkBZ,cAAc,GAAGjD,WAAW5jB,KAAImvB,IAAQ,CACzG9J,aAAc8J,EAAS9J,aACvBR,gBAAgB,EAChBf,iBAAkBqL,EAASrL,iBAAiB9jB,KAAIovB,IAAO,IAClDA,EACHpL,yBAA0B,WAK1BqL,EAAiC,CACnCzsB,UAAW+nB,EAA4BZ,WACvC5F,cAAesD,EAAkBvhB,YACjCpD,kBAAmB6nB,EAA4BhpB,KAAO8lB,EAAkBZ,cAAc,GAAG/jB,kBAAoB6nB,EAA4BhpB,GAAK8lB,EAAkBZ,cAAc,GAAG/jB,kBACjLwhB,WAAYmD,EAAkBZ,cAAc,GAAGvC,WAC/CV,WAAYsL,GAGhBzD,EAAyB,CACrB6D,kBAAmB7H,EAAkBZ,cAAc,GAAGC,gBACtDyI,iBAAkB9H,EAAkBZ,cAAc,GAAGjD,aAGzD+H,EAAgC,CAC5B2D,kBAAmB7H,EAAkBZ,cAAc,GAAGC,gBACtDyI,iBAAkB9H,EAAkBZ,cAAc,GAAGjD,aAIzD,IAAI4L,EAAgCvjB,KAAEW,UAAU6a,EAAkBZ,cAAc,GAAGjD,YAEnF4L,EAAgCA,EAA8BxvB,KAAImvB,IAC9DA,EAASrL,iBAAmBqL,EAASrL,iBAAiB9jB,KAAIovB,IACtD,MAAMiB,EAAYjB,EAAQpL,yBAGpBsM,EAAUD,EAAUvkB,OAAMykB,GAAiC,OAA5BA,EAAEnK,uBAA4D,OAA1BmK,EAAEjK,sBAU3E,OANE8I,EAAQpL,yBAFNsM,EAEiC,GAGAD,EAAU3lB,QAAO6lB,GAAiC,OAA5BA,EAAEnK,uBAA4D,OAA1BmK,EAAEjK,sBAG1F8I,CAAO,IAGlBD,EAAStK,gBAAiB,EACnBsK,KAGXE,EAA+BzL,WAAa4L,EAE5C,MAAMgB,QAAqCztB,GAAqB4nB,EAA4BZ,YAG5F,GAA2C,MAAxCyG,EAA6B57B,OAChC,CACI,MAAM25B,EAAoCiC,EAA6B37B,KAAKmL,KAAIwuB,IAC5E,MAAMC,EAA4BhH,EAAkB9C,aAAazX,MAAKwhB,GAAqCA,EAAkCvG,gBAAkBqG,EAAiCrG,gBAEhM,MAAO,IACAqG,EACHG,QAAQ,EACR7K,iBAAkB0K,EAAiC1K,iBAAiBpZ,QAAOkkB,GAChEH,GAA6BA,EAA0B3K,iBAAiBW,MAAKoK,GAAYA,EAASC,uBAAyBF,EAASE,yBAC5I9uB,KAAI4uB,IACH,MAAMG,EAAmBN,EAA0B3K,iBAAiB5W,MAAK2hB,GAAYA,EAASC,uBAAyBF,EAASE,uBAChI,MAAO,IACAF,EACHI,oBAAoBD,EACpBJ,QAAQ,EACR3K,yBAA0B+K,EAAmBA,EAAiB/K,yBAA2B,GAC5F,IAER,IAGLyD,EAAkB9C,aAAe4J,EAEjCrC,EAAsB,CAClBtpB,UAAW+nB,EAA4BZ,WACvCpF,aAAc,KAGlBmG,EAAqBrD,GACrBsD,GACJ,KAGI,CAEA,IAAIyE,EAAgCvjB,KAAEW,UAAU6a,EAAkB9C,cAElE6K,EAAgCA,EAA8BxvB,KAAK+L,IAC/D,MAAM0jB,EAAuB1jB,EAAK+X,iBAAiB9jB,KAAK0vB,IAC7C,CACH1J,qBAAsB0J,EAAqB1J,qBAC3CJ,oBAAqB8J,EAAqB9J,oBAC1CkJ,qBAAsBY,EAAqBZ,qBAC3C7I,oBAAqByJ,EAAqBzJ,oBAC1CT,qBAAsBkK,EAAqBlK,qBAC3CxB,yBAA0B,OAIlC,MAAO,CACHqB,aAActZ,EAAKsZ,aACnB8C,cAAepc,EAAKoc,cACpBrE,iBAAkB2L,EAClB/K,eAAe,EAClB,IAGL,MAAMiL,EAA8CH,EAA8Bp7B,OAAOi7B,EAA+BzL,YACxHyL,EAA+BzL,WAAa+L,EAE5C7E,EAAqBrD,GACrBsD,GACJ,CAEAe,EAA8B7f,KAAEW,UAAUyiB,GAAgC,EAoHxEoB,GAAwDA,CAACnL,EAAuBI,EAAenuB,KACjG,MAAMiX,EAAajX,EAEhBoQ,GAAUqE,SACTyC,cAAc9G,GAAUqE,SAG5BrE,GAAUqE,QAAU/Y,YAAW,KAC3B,MAAMy9B,EAA6B,IAAItF,GACvCsF,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAeY,oBAAsB9X,EACjI6c,EAA6BqF,GAE7BC,GACIrL,EACAoL,EAA2B5M,iBAAiBwB,GAAuBwJ,qBACnE4B,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAC5FlX,EACH,GACF,IAAI,EAGLmiB,GAA6DA,CAACrL,EAAuBwJ,EAAsB8B,EAAyBpiB,KACtI,MAAMqiB,EAAsC5E,EAAmBtH,aAAazX,MAAK4jB,GAAsCA,EAAmC3I,gBAAkBiD,EAA0BjD,gBAEtM,GAAG0I,EAAoC,CAEnC,MAAME,EAAyCF,EAAoC/M,iBAAiB5W,MAAK8jB,GAA0CA,EAAuClC,uBAAyBA,IAEnN,GAAGiC,EAAuC,CAEtC,MAAMrL,EAAgBqL,EAAuC/M,yBAAyBhlB,WAAUiyB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,8BAA+C,KAAf1iB,IACpR2iB,EAAsBJ,EAAuC/M,yBAAyBhlB,WAAUiyB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,8BAA+C,KAAf1iB,KAE1Q,IAAnBkX,EAECqL,EAAuC/M,yBAAyB0B,GAAeY,oBAAsB9X,GAGxE,IAAzB2iB,EAEJJ,EAAuC/M,yBAAyBoN,OAAOD,EAAqB,GAK5FJ,EAAuC/M,yBAAyB1kB,KAAKsxB,EAE7E,KAEI,CAEA,MAAMS,EAAqC,CACvCrL,qBAAsBoF,EAA0BtH,iBAAiBwB,GAAuBU,qBACxFJ,oBAAqBwF,EAA0BtH,iBAAiBwB,GAAuBM,oBACvFkJ,qBAAsB1D,EAA0BtH,iBAAiBwB,GAAuBwJ,qBACxF9K,yBAA0B,CAAC4M,GAC3B3K,oBAAqBmF,EAA0BtH,iBAAiBwB,GAAuBW,oBACvFT,qBAAsB4F,EAA0BtH,iBAAiBwB,GAAuBE,sBAE5FqL,EAAoC/M,iBAAiBxkB,KAAK+xB,EAC9D,CACJ,KAEI,CAEA,MAAMA,EAAqC,CACvCrL,qBAAsBoF,EAA0BtH,iBAAiBwB,GAAuBU,qBACxFJ,oBAAqBwF,EAA0BtH,iBAAiBwB,GAAuBM,oBACvFkJ,qBAAsB1D,EAA0BtH,iBAAiBwB,GAAuBwJ,qBACxF9K,yBAA0B,CAAC4M,GAC3B3K,oBAAqBmF,EAA0BtH,iBAAiBwB,GAAuBW,oBACvFT,qBAAsB4F,EAA0BtH,iBAAiBwB,GAAuBE,sBAGtF8L,EAAiC,CACnCnJ,cAAeiD,EAA0BjD,cACzC9C,aAAc+F,EAA0B/F,aACxCkM,eAAgBnG,EAA0BmG,eAC1CzN,iBAAkB,CAACuN,IAGvBpF,EAAmBtH,aAAarlB,KAAKgyB,EACzC,GAGEE,GAAwDA,CAAClM,EAAuBwJ,EAAsB8B,EAAyBpiB,EAAYijB,KAC7I,GAAGA,EAAW,CAEV,IAAqD,IAAlDb,EAAwBxK,uBAA0F,UAAxDwK,EAAwB/K,6BAAiE,IAAtBrX,EAAWlC,OAAa,CACpJ,MAAMukB,EAAsC5E,EAAmBtH,aAAazX,MAAK4jB,GAAsCA,EAAmC3I,gBAAkBiD,EAA0BjD,gBAEtM,GAAG0I,EAAoC,CAEnC,MAAME,EAAyCF,EAAoC/M,iBAAiB5W,MAAK8jB,GAA0CA,EAAuClC,uBAAyBA,IAEnN,GAAGiC,EAAuC,CAEtC,MAAMrL,EAAgBqL,EAAuC/M,yBAAyBhlB,WAAUiyB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,gCACpO,IAAnBxL,IAECqL,EAAuC/M,yBAAyB0B,GAAeY,oBAAsB9X,EAE7G,CACJ,CACJ,CAGA,IAAqD,IAAlDoiB,EAAwBxK,uBAA0F,UAAxDwK,EAAwB/K,6BAAiE,IAAtBrX,EAAWlC,OAAa,CACpJ,MAAMukB,EAAsC5E,EAAmBtH,aAAazX,MAAK4jB,GAAsCA,EAAmC3I,gBAAkBiD,EAA0BjD,gBAEtM,GAAG0I,EAAoC,CAEnC,MAAME,EAAyCF,EAAoC/M,iBAAiB5W,MAAK8jB,GAA0CA,EAAuClC,uBAAyBA,IAEnN,GAAGiC,EAAuC,CAEtC,MAAMrL,EAAgBqL,EAAuC/M,yBAAyBhlB,WAAUiyB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,gCACpO,IAAnBxL,IAECqL,EAAuC/M,yBAAyB0B,GAAeY,oBAAsB,KAE7G,CACJ,CACJ,CAGA,GAAqD,OAAlDsK,EAAwBxK,uBAA0F,UAAxDwK,EAAwB/K,6BAAiE,IAAtBrX,EAAWlC,OAAa,CACpJ,MAAMukB,EAAsC5E,EAAmBtH,aAAazX,MAAK4jB,GAAsCA,EAAmC3I,gBAAkBiD,EAA0BjD,gBAEtM,GAAG0I,EAAoC,CAEnC,MAAME,EAAyCF,EAAoC/M,iBAAiB5W,MAAK8jB,GAA0CA,EAAuClC,uBAAyBA,IAEnN,GAAGiC,EAAuC,CAEtC,MAAMrL,EAAgBqL,EAAuC/M,yBAAyBhlB,WAAUiyB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,gCACpO,IAAnBxL,EAECqL,EAAuC/M,yBAAyB0B,GAAeY,oBAAsB9X,EAGrGuiB,EAAuC/M,yBAAyB1kB,KAAKsxB,EAE7E,KACI,CAEA,MAAMS,EAAqC,CACvCrL,qBAAsBoF,EAA0BtH,iBAAiBwB,GAAuBU,qBACxFJ,oBAAqBwF,EAA0BtH,iBAAiBwB,GAAuBM,oBACvFkJ,qBAAsB1D,EAA0BtH,iBAAiBwB,GAAuBwJ,qBACxF9K,yBAA0B,CAAC4M,GAC3B3K,oBAAqBmF,EAA0BtH,iBAAiBwB,GAAuBW,oBACvFT,qBAAsB4F,EAA0BtH,iBAAiBwB,GAAuBE,sBAE5FqL,EAAoC/M,iBAAiBxkB,KAAK+xB,EAC9D,CACJ,KACI,CAEA,MAAMA,EAAqC,CACvCrL,qBAAsBoF,EAA0BtH,iBAAiBwB,GAAuBU,qBACxFJ,oBAAqBwF,EAA0BtH,iBAAiBwB,GAAuBM,oBACvFkJ,qBAAsB1D,EAA0BtH,iBAAiBwB,GAAuBwJ,qBACxF9K,yBAA0B,CAAC4M,GAC3B3K,oBAAqBmF,EAA0BtH,iBAAiBwB,GAAuBW,oBACvFT,qBAAsB4F,EAA0BtH,iBAAiBwB,GAAuBE,sBAGtF8L,EAAiC,CACnCnJ,cAAeiD,EAA0BjD,cACzC9C,aAAc+F,EAA0B/F,aACxCkM,eAAgBnG,EAA0BmG,eAC1CzN,iBAAkB,CAACuN,IAGvBpF,EAAmBtH,aAAarlB,KAAKgyB,EACzC,CACJ,CAGA,GAAqD,OAAlDV,EAAwBxK,uBAA0F,UAAxDwK,EAAwB/K,6BAAiE,IAAtBrX,EAAWlC,OAAa,CACpJ,MAAMukB,EAAsC5E,EAAmBtH,aAAazX,MAAK4jB,GAAsCA,EAAmC3I,gBAAkBiD,EAA0BjD,gBAEtM,GAAG0I,EAAoC,CAEnC,MAAME,EAAyCF,EAAoC/M,iBAAiB5W,MAAK8jB,GAA0CA,EAAuClC,uBAAyBA,IAEnN,GAAGiC,EAAuC,CAEtC,MAAMrL,EAAgBqL,EAAuC/M,yBAAyBhlB,WAAUiyB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,gCACpO,IAAnBxL,GAECqL,EAAuC/M,yBAAyBoN,OAAO1L,EAAe,EAE9F,CACJ,CACJ,CAEJ,KAEI,CAEA,IAAqD,IAAlDkL,EAAwBxK,uBAA0F,UAAxDwK,EAAwB/K,4BAAwC,CACzH,MAAMgL,EAAsC5E,EAAmBtH,aAAazX,MAAK4jB,GAAsCA,EAAmC3I,gBAAkBiD,EAA0BjD,gBAEtM,GAAG0I,EAAoC,CAEnC,MAAME,EAAyCF,EAAoC/M,iBAAiB5W,MAAK8jB,GAA0CA,EAAuClC,uBAAyBA,IAEnN,GAAGiC,EAAuC,CACtC,MAAMrL,EAAgBqL,EAAuC/M,yBAAyBhlB,WAAUiyB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,8BAAuG,KAAvED,EAA+C3K,uBACnT,IAAnBZ,EAECqL,EAAuC/M,yBAAyB0B,GAAeU,uBAAwB,EAIvG2K,EAAuC/M,yBAAyB1kB,KAAKsxB,EAE7E,KACI,CAEA,MAAMS,EAAqC,CACvCrL,qBAAsBoF,EAA0BtH,iBAAiBwB,GAAuBU,qBACxFJ,oBAAqBwF,EAA0BtH,iBAAiBwB,GAAuBM,oBACvFkJ,qBAAsB1D,EAA0BtH,iBAAiBwB,GAAuBwJ,qBACxF9K,yBAA0B,CAAC4M,GAC3B3K,oBAAqBmF,EAA0BtH,iBAAiBwB,GAAuBW,oBACvFT,qBAAsB4F,EAA0BtH,iBAAiBwB,GAAuBE,sBAE5FqL,EAAoC/M,iBAAiBxkB,KAAK+xB,EAC9D,CACJ,KACI,CAEA,MAAMA,EAAqC,CACvCrL,qBAAsBoF,EAA0BtH,iBAAiBwB,GAAuBU,qBACxFJ,oBAAqBwF,EAA0BtH,iBAAiBwB,GAAuBM,oBACvFkJ,qBAAsB1D,EAA0BtH,iBAAiBwB,GAAuBwJ,qBACxF9K,yBAA0B,CAAC4M,GAC3B3K,oBAAqBmF,EAA0BtH,iBAAiBwB,GAAuBW,oBACvFT,qBAAsB4F,EAA0BtH,iBAAiBwB,GAAuBE,sBAGtF8L,EAAiC,CACnCnJ,cAAeiD,EAA0BjD,cACzC9C,aAAc+F,EAA0B/F,aACxCkM,eAAgBnG,EAA0BmG,eAC1CzN,iBAAkB,CAACuN,IAGvBpF,EAAmBtH,aAAarlB,KAAKgyB,EACzC,CACJ,CAGA,GAAqD,OAAlDV,EAAwBxK,uBAA0F,UAAxDwK,EAAwB/K,4BAAwC,CACzH,MAAMgL,EAAsC5E,EAAmBtH,aAAazX,MAAK4jB,GAAsCA,EAAmC3I,gBAAkBiD,EAA0BjD,gBAEtM,GAAG0I,EAAoC,CAEnC,MAAME,EAAyCF,EAAoC/M,iBAAiB5W,MAAK8jB,GAA0CA,EAAuClC,uBAAyBA,IAEnN,GAAGiC,EAAuC,CAEtC,MAAMW,EAA4BX,EAAuC/M,yBAAyBhlB,WAAUiyB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,8BAAuG,OAAvED,EAA+C3K,sBACrV,IAAkC,IAA/BoL,EAECX,EAAuC/M,yBAAyBoN,OAAOM,EAA2B,OAElG,CACA,MAAMhM,EAAgBqL,EAAuC/M,yBAAyBhlB,WAAUiyB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,+BAC1PH,EAAuC/M,yBAAyB0B,GAAeU,sBAAwB,IAC3G,CACJ,CACJ,CACJ,CACJ,CAEAuL,GAA6Bf,EAAyBa,EAAW,EAkF/DG,GAA+Bz+B,MAAO0+B,EAAwBC,KAChE,MAAMC,QAAqC5vB,GAAqB0vB,GAChE,GAA2C,MAAxCE,EAA6Bn9B,OAAe,CAE3C,MAAMo9B,EAAqB,IAAInH,GAE/BmH,EAAmBrN,aAAanK,SAASuV,IAClCA,EAAiB5H,gBAAkB2J,EAAuB3J,gBACzD4H,EAAiBjM,iBAAmBgO,EAAuBhO,iBAC3DiM,EAAiBjM,iBAAiBtJ,SAASuJ,IACvCA,EAAqB4K,QAAS,CAAI,IAEgB,IAAnDmD,EAAuBhO,iBAAiBxX,OACvCyjB,EAAiBwB,gBAAiB,EAElCxB,EAAiBwB,gBAAiB,EAEtCxB,EAAiBpB,QAAS,GAG9BoB,EAAiBjM,iBAAmBiM,EAAiBjM,iBAAiBpZ,QAAOqB,GAAiD,IAAzCA,EAAKiY,yBAAyB1X,QAAa,IAGpIwe,EAAqBkH,GACrBnG,EAAsBgG,GAEtB,MAAMI,EAA4BD,EAAmBrN,aAAazX,MAAK6iB,GAAoBA,EAAiB5H,gBAAkB2J,EAAuB3J,gBAErJ30B,IAAMsB,QAAQ,4DAA4B,CAACpB,QAAS,wCAEpDw+B,GAA0BD,EAC9B,MAEIz+B,IAAMkB,MAAMq9B,EAA6Bl9B,KAAM,CAACnB,QAAS,sCAE7D6G,IAA+B,EAAM,EAInCwzB,GAAgC56B,UAClC,MAAMg/B,ObxpCkBh/B,WAC5B,MAAMoP,EAASR,KACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAAIrC,GAAU,+BAAAqC,OAA8BuN,GAAMY,GACvEhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EagpCsCw9B,CAAwBzwB,GAG5D,GAFAopB,EAAqBoH,IAEuB,IAAzCA,EAAsBvK,eAAyB,CAC9C,MAAMyK,EAAyBF,EAAsBxN,aAAaja,QAAOqB,IAAgC,IAAxBA,EAAKwlB,iBAA0Be,SAAQvmB,GAAQA,EAAK+X,mBAAkBwO,SAAQlD,GAAWA,EAAQpL,2BAA0BtZ,QAAO6nB,IAA+C,IAAnCA,EAASnM,uBAAmE,OAAjCmM,EAASjM,sBACnRuF,EAAsBwG,EAC1B,GAIEH,GAA4B/+B,WACG,IAA9B63B,GACCC,GAA8BD,GAGgC,SAA/DM,EAAiCkH,2BAAyE,IAAjChH,EAAsBlf,QAC9Fif,EAAoC,IAGJ,IAAjCC,EAAsBlf,QACrBmf,EAAyB,IAG7BJ,EACI,IACOoH,IAKXlH,EAAoC,GAAG,EA4ErCmH,GAAmBv/B,MAAO2P,EAAmBgkB,EAAiB6L,KAChE,MAAMjL,QAA4B7kB,GAAeC,GAgBjD,GAdA2oB,EAAyB,CACrB6D,kBAAmBxI,EACnBgB,eAAgBJ,EAAoBV,YAAYc,eAChDxD,WAAYoD,EAAoBV,YAAY1C,WAC5CiL,iBAAkB7H,EAAoBV,YAAYpD,aAGtD+H,EAAgC,CAC5B2D,kBAAmBxI,EACnBgB,eAAgBJ,EAAoBV,YAAYc,eAChDxD,WAAYoD,EAAoBV,YAAY1C,WAC5CiL,iBAAkB7H,EAAoBV,YAAYpD,aAG5B,IAAvB+O,GAAuE,IAA3C9H,EAAkBhE,cAAcva,QAAqE,OAArDue,EAAkBhE,cAAc,GAAGvjB,cAAuB,CACrI,MAAMsvB,EAAyClL,EAAoBV,YAAYpD,WAAW5jB,KAAI,CAAC6jB,EAAgBuB,KAC3G,MAAMyK,EAAgChM,EAAeC,iBAAiB9jB,KAAK+jB,IAC9C,CACrByB,qBAAsBzB,EAAqByB,qBAC3CI,oBAAqB7B,EAAqB6B,oBAC1CI,qBAAsBjC,EAAqBiC,qBAC3CC,oBAAqBlC,EAAqBkC,oBAC1CjC,yBAA0B,OAWlC,MAN8B,CAC1BqB,aAAcxB,EAAewB,aAC7BR,gBAAgB,EAChBf,iBAAkB+L,EAGM,IAG1BgD,EAA8B,IAAIlP,GACxCiP,EAAuC5yB,KAAK8yB,GAA2CD,EAA4BjP,WAAWtkB,KAAKwzB,KACnIhH,EAA8B+G,EAClC,GA4EElrB,GAAYC,iBAAO,MA2BnBmrB,GAA4BA,CAACzN,EAAuBI,EAAenuB,KACrE,MAAMiX,EAAajX,EAEhBoQ,GAAUqE,SACTyC,cAAc9G,GAAUqE,SAG5BrE,GAAUqE,QAAU/Y,YAAW,KAE3B,MAAMy9B,EAA6B,IAAItF,GACvCsF,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAeY,oBAAsB9X,EACjI6c,EAA6BqF,GAG7BsC,GACItC,EAA2BrL,cAFT,EAIlBqL,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAC5FgL,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAewL,6BAC3GR,EAA2B5M,iBAAiBwB,GAAuBE,qBACtE,GACF,IAAI,EAmDLyN,GAAuCA,CAACC,EAAuBC,EAA+BzN,EAAenuB,KAC/G,MAAMiX,EAAajX,EAEhBoQ,GAAUqE,SACTyC,cAAc9G,GAAUqE,SAG5BrE,GAAUqE,QAAU/Y,YAAW,KAC3B,MAAMmgC,EAAyB,IAAI5H,GACnC4H,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+BnP,yBAAyB0B,GAAeY,oBAAsB9X,EAC7Kid,EAAyB2H,GAIzBJ,GACII,EAAuB7D,iBAAiB2D,GAAuB7N,cAF7C,EAIlB+N,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+BnP,yBAAyB0B,GACxI0N,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+BnP,yBAAyB0B,GAAewL,6BACvJkC,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+B3N,sBAPhG,EASlB,GACF,IAAK,EAGNwN,GAAgDA,CAAC3N,EAAcX,EAAekM,EAAyByC,EAAe7N,EAAsBiM,KAC9I,GAA2D,UAAxDb,EAAwB/K,6BACvB,GAAG4L,GACC,GAAmD,KAAhDb,EAAwBtK,oBAA2B,CAClD,MAAMuM,EAA8B,IAAIlP,GAEpCkP,EAA4BjP,WAAWpJ,SAAQqJ,IACxCA,EAAewB,eAAiBA,GAE/BxB,EAAeC,iBAAiBtJ,SAAQuJ,IACpC,GAAGA,EAAqByB,uBAAyBA,EAE7C,GAAIzB,EAAqBC,yBAAyB1X,OAAS,EAAG,CAE1D,MAAMgnB,EAAmBvP,EAAqBC,yBAAyB9W,MAAKqlB,GACxEA,EAASpM,8BAAgCyK,EAAwBzK,8BAGjEmN,EAEAA,EAAiBhN,oBAAsBsK,EAAwBtK,oBAG/DvC,EAAqBC,yBAAyB1kB,KAAKsxB,EAG3D,MAEI7M,EAAqBC,yBAAyB1kB,KAAKsxB,EAE3D,GAER,IAGR9E,EAA8B+G,EAClC,MAEK,GAAmD,KAAhDjC,EAAwBtK,oBAA2B,CACvD,MAAMuM,EAA8B,IAAIlP,GACxCkP,EAA4BjP,WAAWpJ,SAAQqJ,IACxCA,EAAewB,eAAiBA,GAC/BxB,EAAeC,iBAAiBtJ,SAAQuJ,IACjCA,EAAqByB,uBAAyBA,GAC7CzB,EAAqBC,yBAAyBxJ,SAAQ+Y,IACQ,OAAvDA,EAA6BnN,wBAAyF,IAAvDmN,EAA6BnN,wBAC3FrC,EAAqBC,yBAA2BD,EAAqBC,yBAAyBtZ,QAAO6oB,GAAgCA,EAA6BrC,+BAAiCN,EAAwBM,+BAC/N,GAER,GAER,IAGJpF,EAA8B+G,EAClC,OAIA,IAAqD,IAAlDjC,EAAwBxK,uBAA0F,UAAxDwK,EAAwB/K,4BAAwC,CACzH,MAAMgN,EAA8B,IAAIlP,GAEpCkP,EAA4BjP,WAAWpJ,SAAQqJ,IACxCA,EAAewB,eAAiBA,GAE/BxB,EAAeC,iBAAiBtJ,SAAQuJ,IACpC,GAAGA,EAAqByB,uBAAyBA,EAE7C,GAAIzB,EAAqBC,yBAAyB1X,OAAS,EAAG,CAE1D,MAAMgnB,EAAmBvP,EAAqBC,yBAAyB9W,MAAKqlB,GACxEA,EAASpM,8BAAgCyK,EAAwBzK,8BAGjEmN,EAEAA,EAAiBlN,sBAAwBwK,EAAwBxK,sBAGjErC,EAAqBC,yBAAyB1kB,KAAKsxB,EAG3D,MAEI7M,EAAqBC,yBAAyB1kB,KAAKsxB,EAE3D,GAER,IAGR9E,EAA8B+G,EAClC,MAGK,IAAqD,IAAlDjC,EAAwBxK,uBAA2F,UAAxDwK,EAAwB/K,4BAAwC,CAC/H,MAAMgN,EAA8B,IAAIlP,GACxCkP,EAA4BjP,WAAWpJ,SAAQ,CAACqJ,EAAgBuB,KACzDvB,EAAewB,eAAiBA,GAC/BxB,EAAeC,iBAAiBtJ,SAAQuJ,IACjCA,EAAqByB,uBAAyBA,GAC7CzB,EAAqBC,yBAAyBxJ,SAAQ+Y,IACM,OAArDA,EAA6BjN,qBAAqF,KAArDiN,EAA6BjN,sBACzFvC,EAAqBC,yBAA2BD,EAAqBC,yBAAyBtZ,QAAO6oB,GAAgCA,EAA6BrC,+BAAiCN,EAAwBM,+BAC/N,GAER,GAER,IAEJpF,EAA8B+G,EAClC,OAMJ,GAAmD,KAAhDjC,EAAwBtK,qBAAsF,WAAxDsK,EAAwB/K,4BAAyC,CACtH,MAAMgN,EAA8B,IAAIlP,GAExCkP,EAA4BjP,WAAWpJ,SAAQqJ,IACxCA,EAAewB,eAAiBA,GAE/BxB,EAAeC,iBAAiBtJ,SAAQuJ,IACpC,GAAGA,EAAqByB,uBAAyBA,EAE7C,GAAIzB,EAAqBC,yBAAyB1X,OAAS,EAAG,CAE1D,MAAMgnB,EAAmBvP,EAAqBC,yBAAyB9W,MAAKqlB,GACxEA,EAASpM,8BAAgCyK,EAAwBzK,8BAGjEmN,EAEAA,EAAiBhN,oBAAsBsK,EAAwBtK,oBAG/DvC,EAAqBC,yBAAyB1kB,KAAKsxB,EAG3D,MAEI7M,EAAqBC,yBAAyB1kB,KAAKsxB,EAE3D,GAER,IAGJ9E,EAA8B+G,EAClC,MAEK,GAAmD,KAAhDjC,EAAwBtK,qBAAsF,WAAxDsK,EAAwB/K,4BAAyC,CAC3H,MAAMgN,EAA8B,IAAIlP,GACxCkP,EAA4BjP,WAAWpJ,SAAQqJ,IACxCA,EAAewB,eAAiBA,GAC/BxB,EAAeC,iBAAiBtJ,SAAQuJ,IACjCA,EAAqByB,uBAAyBA,IAC7CzB,EAAqBC,yBAA2BD,EAAqBC,yBAAyBtZ,QAAO6oB,GAAgCA,EAA6BpN,8BAAgCyK,EAAwBzK,8BAC9N,GAER,IAGJ2F,EAA8B+G,EAClC,EAGiB,IAAlBnO,GACCiN,GAA6Bf,EAAyBa,EAC1D,EAIEE,GAA+BA,CAACf,EAAyBa,KAC3D,GAAG7F,GAAoD,IAA9BA,EAAmBtf,OAAa,CACrD,IAAIknB,EAAsB,IAAI5H,GAE9B,MAAM6H,EAAeD,EAAoBtmB,MAAKnB,GAAQA,EAAKoa,8BAAgCyK,EAAwBzK,8BACnH,GAAGsN,GACC,GAAgD,WAA7CA,EAAa5N,6BACZ,GAAmD,KAAhD+K,EAAwBtK,oBACvBkN,EAAsB5H,EAAmBlhB,QAAOqB,GAAQA,EAAKoa,8BAAgCyK,EAAwBzK,mCAEpH,GAAmD,KAAhDyK,EAAwBtK,oBAA2B,CACvD,MAAMgN,EAAmB1H,EAAmB1e,MAAKqlB,GAAYA,EAASpM,8BAAgCyK,EAAwBzK,8BAC3HmN,EACCA,EAAiBhN,oBAAsBsK,EAAwBtK,oBAG/DkN,EAAoBl0B,KAAKsxB,EAEjC,OAEC,GAAgD,UAA7C6C,EAAa5N,4BACjB,GAAG4L,GACC,GAAmD,KAAhDb,EAAwBtK,oBAA2B,CAClD,MAAMgN,EAAmB1H,EAAmB1e,MAAKqlB,GAAYA,EAASpM,8BAAgCyK,EAAwBzK,8BAAkE,IAAnCoM,EAASnM,wBACnKkN,EACCA,EAAiBhN,oBAAsBsK,EAAwBtK,oBAGV,OAAlDsK,EAAwBxK,wBAAoF,IAAlDwK,EAAwBxK,wBACjFoN,EAAsBA,EAAoB9oB,QAAO6nB,GAAYA,EAASpM,8BAAgCyK,EAAwBzK,8BAG1I,MAEK,GAAmD,KAAhDyK,EAAwBtK,oBAA2B,CACvD,MAAMgN,EAAmB1H,EAAmB1e,MAAKqlB,GAAYA,EAASpM,8BAAgCyK,EAAwBzK,8BAC3HmN,EACCA,EAAiBhN,oBAAsBsK,EAAwBtK,oBAG/DkN,EAAoBl0B,KAAKsxB,EAEjC,OAIA,IAAqD,IAAlDA,EAAwBxK,uBAAqF,OAAlDwK,EAAwBxK,sBAA+B,CACjH,MAAMkN,EAAmB1H,EAAmB1e,MAAKqlB,GAAYA,EAASpM,8BAAgCyK,EAAwBzK,8BAC3HmN,IAC6C,KAAzCA,EAAiBhN,qBAAuE,OAAzCgN,EAAiBhN,oBAC/DkN,EAAsBA,EAAoB9oB,QAAO6nB,GAAYA,EAASpM,8BAAgCyK,EAAwBzK,8BAEjF,KAAzCmN,EAAiBhN,qBAAuE,OAAzCgN,EAAiBhN,sBACpEgN,EAAiBlN,sBAAwBwK,EAAwBxK,uBAG7E,MAEK,IAAqD,IAAlDwK,EAAwBxK,sBAA+B,CAC3D,MAAMkN,EAAmB1H,EAAmB1e,MAAKqlB,GAAYA,EAASpM,8BAAgCyK,EAAwBzK,8BAC3HmN,GAA6D,KAAzCA,EAAiBhN,qBAAuE,OAAzCgN,EAAiBhN,oBACnFgN,EAAiBlN,sBAAwBwK,EAAwBxK,sBAGjEoN,EAAoBl0B,KAAKsxB,EAEjC,OAMR4C,EAAoBl0B,KAAKsxB,GAE7B/E,EAAsB2H,EAC1B,MAGI3H,EAAsB,CAAC+E,GAC3B,EAcE1N,GAXYC,aAAW,CACzBC,KAAM,CACJ,iBAAkB,CAChB3qB,MAAO,WAET,6BAA8B,CAC5BA,MAAO,aAKC4qB,GA8LhB,OA5LAznB,qBAAU,KAEN,MAAM83B,EAAwBC,IAC1BC,QAAQC,IAAIF,IACkB,IAA3BA,GAAsE,KAAnChJ,EAA4BhpB,KAC9D6qB,IAAkB,GAClB7Y,KACJ,EAOJ,OAJApX,GAAuBvI,aAAaC,QAAQ,MAAOy/B,IAEnDp2B,GAAiBo2B,GAEV,MAEN,GACF,IAEH93B,qBAAU,KACN,GAA0C,IAAvC+uB,EAA4B/1B,QAAgBqF,EAAa,CAC9BkzB,OAAOC,QAAQ,oDAADh5B,OAAgCu2B,EAA4BX,aAAY,0EAExGtuB,eAAeqI,QAAQ,8BAA+B/I,KAAKiJ,UAAU0mB,IACrEjvB,eAAeqI,QAAQ,6BAA8B/I,KAAKiJ,UAAU0f,IACpEjoB,eAAeqI,QAAQ,oBAAqB/I,KAAKiJ,UAAU4mB,IAExDa,GACChwB,eAAeqI,QAAQ,+BAAgC/I,KAAKiJ,UAAUynB,IAGvES,GACCzwB,eAAeqI,QAAQ,sBAAuB/I,KAAKiJ,UAAUkoB,IAG9DJ,GACCrwB,eAAeqI,QAAQ,qBAAsB/I,KAAKiJ,UAAU8nB,IAEhE1vB,KAGA1B,GAEZ,KAEK,IAAGgwB,EAA4B/1B,OAAO,CACvC81B,GAAe,GAEf,MAAMoJ,EAAsBx8B,IACxB,MAAMy8B,EAAsB,gFAE5B,OADAz8B,EAAE08B,YAAcD,EACTA,CAAmB,EAGxBE,EAAUr2B,EAAQs2B,OAAM,CAACx2B,EAAUuB,KACrC,GAAIwrB,EAAa,CAIb,IAHqB0C,OAAOC,QACxB,iKA0BA,OAAO,EAxBO,CACd,MAAM+G,EAA4BjhB,GAA6BxI,QAAOqB,GAAuB,IAAfA,EAAK7I,QAEnFxH,eAAeqI,QAAQ,2BAA4B/I,KAAKiJ,UAAUkwB,IAClEz4B,eAAeqI,QAAQ,8BAA+B/I,KAAKiJ,UAAU0mB,IACrEjvB,eAAeqI,QAAQ,6BAA8B/I,KAAKiJ,UAAU0f,IACpEjoB,eAAeqI,QAAQ,oBAAqB/I,KAAKiJ,UAAU4mB,IAExDa,GACChwB,eAAeqI,QAAQ,+BAAgC/I,KAAKiJ,UAAUynB,IAGvES,GACCzwB,eAAeqI,QAAQ,sBAAuB/I,KAAKiJ,UAAUkoB,IAG9DJ,GACCrwB,eAAeqI,QAAQ,qBAAsB/I,KAAKiJ,UAAU8nB,IAGhEkI,IACAr2B,EAAQ0B,KAAK5B,EAASqB,SAE1B,CAGJ,CACA,OAAO,CAAI,IAGTq1B,EAAeA,KACjB,MAAMD,EAA4BjhB,GAA6BxI,QAAOqB,GAAuB,IAAfA,EAAK7I,QAEnFxH,eAAeqI,QAAQ,2BAA4B/I,KAAKiJ,UAAUkwB,IAElEz4B,eAAeqI,QAAQ,8BAA+B/I,KAAKiJ,UAAU0mB,IACrEjvB,eAAeqI,QAAQ,6BAA8B/I,KAAKiJ,UAAU0f,IACpEjoB,eAAeqI,QAAQ,oBAAqB/I,KAAKiJ,UAAU4mB,IAExDa,GACChwB,eAAeqI,QAAQ,+BAAgC/I,KAAKiJ,UAAUynB,IAGvES,GACCzwB,eAAeqI,QAAQ,sBAAuB/I,KAAKiJ,UAAUkoB,IAG9DJ,GACCrwB,eAAeqI,QAAQ,qBAAsB/I,KAAKiJ,UAAU8nB,GAChE,EAMJ,OAHAoB,OAAO/oB,iBAAiB,eAAgB0vB,GACxC3G,OAAO/oB,iBAAiB,SAAUgwB,GAE3B,KACHjH,OAAO9oB,oBAAoB,eAAgByvB,GAC3CG,IACA9G,OAAO9oB,oBAAoB,SAAU+vB,EAAa,CAE1D,CAEQn6B,GACJoC,GACJ,IACD,CAACsuB,EAA6BE,EAAmBa,EAA8B/H,EAA4B1pB,EAAcoC,EAAc1B,EAAYR,EAAeyD,EAAS6sB,IAE9K7uB,qBAAU,MACS,IAAZlJ,GAAqBqH,EAAKD,UACA,WAAtBC,EAAKoF,aACJvB,EAAQ0B,KAAK,QAGV5D,eAAeivB,4BApxDMx3B,WAChCoH,IAA+B,GAE/B,MAAM85B,EAA6Br5B,KAAKC,MAAMS,eAAe44B,0BACvDC,EAAgCv5B,KAAKC,MAAMS,eAAeivB,6BAC1D6J,EAAsBx5B,KAAKC,MAAMS,eAAemvB,mBAChD4J,EAA+Bz5B,KAAKC,MAAMS,eAAeioB,4BAU/D,GARAxQ,GAAgCkhB,GAEhCE,EAA8BrG,gBAAiB,EAE/CtD,EAA+B3e,KAAEW,UAAU2nB,IAC3CzJ,EAAqB7e,KAAEW,UAAU4nB,IACjC1I,EAA8B7f,KAAEW,UAAU6nB,IAEvC/4B,eAAegwB,6BAA6B,CAC3C,MAAMgJ,EAAiC15B,KAAKC,MAAMS,eAAegwB,8BACjED,EAAyBxf,KAAEW,UAAU8nB,IACrC/I,EAAgC1f,KAAEW,UAAU8nB,GAChD,CAEA,GAAGh5B,eAAeywB,oBAAoB,CAClC,MAAMwI,EAAwB35B,KAAKC,MAAMS,eAAeywB,qBACxDC,GAAuBngB,KAAEW,UAAU+nB,GACvC,CAEA,GAAGj5B,eAAeqwB,mBAAmB,CACjC,MAAM6I,EAAuB55B,KAAKC,MAAMS,eAAeqwB,oBACvDC,EAAsB/f,KAAEW,UAAUgoB,GACtC,CAEA1I,EAAsB,CAClBtpB,UAAW+nB,EAA4BZ,WACvCpF,aAAc,KAGlBjpB,eAAeC,QAEf6wB,IAAkB,GAClBE,IAAsB,GACtBnyB,IAA+B,EAAM,EA4uDzBs6B,GAGAlhB,KAGZ,GACD,CAACjhB,EAASqH,IAEb6B,qBAAU,KACN,IAAkC,IAA/BpB,EAAqC,CACpC,MAAM0J,EAAiBrR,IACE,MAAlBA,EAAM4hB,SACL5hB,EAAMuN,iBAGoC,KAA3CuqB,EAA4BZ,aAAqD,IAAhC7wB,KAAwE,IAA/BgsB,IAA0D,MAAlBryB,EAAM4hB,UAClH,MAAlB5hB,EAAM4hB,SAA0D,IAAvCkW,EAA4B/1B,QACpD/B,EAAMuN,iBACN2sB,MAGsB,MAAlBl6B,EAAM4hB,SAAmBgT,EACa,IAAvCkD,EAA4B/1B,SAA8D,IAA9C+1B,EAA4BqC,cACvES,KAE2C,IAAvC9C,EAA4B/1B,OAChC84B,MAAM,0EAADt5B,OAAgDu2B,EAA4BX,aAAY,gJAElD,IAAvCW,EAA4B/1B,SAA+D,IAA9C+1B,EAA4BqC,eAC7EW,KAIkB,MAAlB96B,EAAM4hB,UACdla,IAA+B,GACe,IAAvCowB,EAA4B/1B,QAC3B3B,YAAW,KACPsH,IAA+B,GAC/BgpB,IAA8B,EAAK,GACpC,MAGf,EAKJ,OAFApf,SAASC,iBAAiB,UAAWF,GAE9B,KACHC,SAASE,oBAAoB,UAAWH,EAAc,CAE9D,IAED,CAACymB,EAA6BzF,GAA4BhsB,GAA6BgsB,GAA4B1qB,IAGlHtF,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACuP,KAAS,CAAClP,SAAS,KAAKO,GAAI,CAAC0D,GAAI,KAAKpE,SACnCF,cAACoE,IAAG,CAACxD,GAAI,CAAEgU,QAAS,OAAQnR,OAAQ,QAAQvD,SACxCC,eAACqjB,KAAI,CAACC,WAAS,EAACngB,QAAS,EAAG1C,GAAI,CAACmY,GAAI,GAAKC,GAAI,IAAK9Y,SAAA,CAE/CC,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAEzjB,SAAA,CAEbF,cAAC0gB,KAAc,CAAC3U,UAAW4U,KAAO/f,GAAI,CAAE6C,OAAQ,QAASoc,UAAW,EAAGrQ,aAAc,QAAStP,SACzFs3B,GACGx3B,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,SAAUuC,gBAAiB,UAAWR,OAAQ,QAAQvD,SAAA,CAC5IF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,mFAIrDC,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACiE,IAAG,CAAAlE,SAAA,CACAF,cAACqD,IAAK,CAACE,UAAU,MAAMD,QAAS,EAAG1C,GAAI,CAACiB,eAAgB,SAAUyC,GAAI,KAAKpE,SACtEsd,GAAsBvS,KAAI,CAAC6U,EAAuBC,IAC/C/f,cAACggB,KAAK,CAACC,aAAcH,EAAsBpC,YAAaha,MAAM,QAAOxD,SACjEF,cAACkgB,KAAI,CAACje,MAAO6d,EAAsBvC,UAAW7Z,MAAOqc,IAA2B3C,GAAWE,UAAY,UAAY,UACnHpc,QAASA,IA1+DlCif,EAACC,EAAW7C,KAEnC,GADAF,GAAc,CAACC,UAAW8C,EAAW7C,UAAWA,IAC/B,IAAd6C,EAAgB,CACjB,MAAMf,EAA8B1B,GAAyBhI,QAAO2J,GAAuD,IAA/BA,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,OAA8C,IAA/BmR,EAAqBnR,QACzLiQ,GAAgCiB,GAChCnB,GAAiCmB,EACnC,MACK,GAAiB,IAAde,EAAgB,CACpB,MAAMZ,EAA2B7B,GAAyBhI,QAAO2J,GAAuD,IAA/BA,EAAqBnR,OAAemR,EAAqB0C,eAAiBhd,EAAKiK,SACxKmP,GAAgCoB,GAChCtB,GAAiCsB,EACrC,GA+9D+DW,CAAmBJ,EAAwBD,EAAsBvC,cAAc,qBAAAle,OAFF0gB,QAMxG5f,eAACkE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC0D,GAAI,GAAKoL,UAAW,SAAU1O,SAAU,WAAWd,SAAA,CAAC,gBAAWkd,GAAWG,UAAU,YAAO1C,OAASD,OAAO,iBACzI5a,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUV,SAAU,YAAYjB,SACvEF,cAAC+B,IAAS,CAACnB,GAAI,CAACyB,GAAI,GAAKD,MAAO,IAAK,iCAAkC,CAACsN,UAAW,WAAYsM,KAAK,QAChG9Z,QAAQ,WAAWme,YAAY,+CAA4B7d,MAAOub,GAAqBzb,SAAWC,GAn+DpHC,KAC1B,MAAMiX,EAAajX,EACnBwb,GAAuBvE,GAGrB2E,GADW,KAAV5b,EAC+Byb,GAEAK,GAAeL,GAA+BxE,GAChF,EA29DoJ6G,CAAqB/d,EAAEI,OAAOH,OACtII,WAAY,CACR2d,eACIvgB,cAAC8C,IAAc,CAAC3B,SAAS,QAAOjB,SAACF,cAACwgB,KAAU,MAEhD3d,aACI7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SACD,KAAxB6d,GACG/d,cAACsB,IAAS,CAACV,GAAI,CAACuP,OAAQ,WAAYsQ,YAAY,SAC5Cvf,QAASA,IAAM,CAAC8c,GAAuB,IAAKI,GAAgCH,OAGhF,eAS5B9d,eAAC4gB,KAAK,CAACC,cAAY,EAAA9gB,SAAA,CACfF,cAACkhB,KAAS,CAAAhhB,SACNC,eAACghB,KAAQ,CAACvgB,GAAI,CAAC,OAAQ,CAAC8C,MAAO,mBAAoBO,gBAAiB,SAAS/D,SAAA,CACzEF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,WAAWd,SAAC,QACnDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,WAAWd,SAAC,4BACnDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,WAAWd,SAAC,wBAG3DF,cAACshB,KAAS,CAAAphB,SACLie,GAA6BlT,KAAI,CAACguB,EAAkB8G,IACjD5/B,eAACghB,KAAQ,CAACM,OAAK,EAACC,KAAK,WACjB9gB,GAAI,CAAEuP,OAAQ,UAAWlM,gBAA4C,IAA3Bg1B,EAAiB9qB,MAAc,UAAY,OACrF,SAAU,CAAClK,gBAA4C,IAA3Bg1B,EAAiB9qB,MAAc,qBAAuB,kCAClFjN,QAASA,IAryDvB9C,WACJ,IAA3B66B,EAAiB9qB,OAAeynB,EAA4BX,eAAiBgE,EAAiB7nB,QAAQG,UAAuC,IAA3B0nB,EAAiB9qB,OAAeynB,EAA4BX,eAAiBgE,EAAiB7nB,QAAQG,SACzK,KAA3CqkB,EAA4BZ,YAAgE,KAA3CY,EAA4BZ,YAA4D,IAAvCY,EAA4B/1B,aACvHk5B,GAAuBE,GAG7BN,MAAM,0EAADt5B,OAAgDu2B,EAA4BX,aAAY,6HAIlE,IAA3BgE,EAAiB9qB,OAAeynB,EAA4BX,eAAiBgE,EAAiB7nB,QAAQG,WAC5D,KAA3CqkB,EAA4BZ,YAA4D,IAAvCY,EAA4B/1B,OAC5E84B,MAAM,0EAADt5B,OAAgDu2B,EAA4BX,aAAY,mIAGvF8D,GAAuBE,GAErC,EAoxD+D+G,CAA8B/G,GAAkB/4B,SAAA,CAE/DF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,QAAQlC,SAAE+4B,EAAiB7W,QAC/DpiB,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,SAASlC,SAAE+4B,EAAiB7nB,QAAQuN,cACxE3e,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,SAASlC,SAAE+4B,EAAiB7nB,QAAQG,aAPvC0nB,EAAiB7W,mBAiB9EpiB,cAACoE,IAAG,CAACxC,MAAO,CAACQ,MAAO,OAAQ+W,UAAW,OAAQ3J,aAAc,OAAQoQ,OAAQ,gBAAiBnc,OAAQ,QAAS6e,SAAU,QAAQpiB,SAE5F,IAA7B41B,EAAkBve,SAA6C,IAA7BqgB,KAA4D,IAAtBlF,EACpE,KAEJ1yB,cAAAC,WAAA,CAAAC,SACK03B,GACGz3B,eAACiE,IAAG,CAACxD,GAAI,CAACqD,gBAAiB,UAAWuL,aAAc,OAAQ/L,OAAQ,OAAQhC,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,UAAUxB,SAAA,CAClKF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,kHAGjDF,cAAAC,WAAA,CAAAC,SACIF,cAAA,OAAKkM,UAAU,qBAAoBhM,SAC/BC,eAACiwB,KAAI,CAACxvB,GAAI,CAACE,EAAG,EAAGW,QAAS,eAAevB,SAAA,CACpC41B,EAAkBlG,aAAa3kB,KAAI,CAACqoB,EAAiBC,IAClDpzB,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC9BF,cAACwzB,KAAc,CACX5yB,GAAI,CACJwB,MAAO,aAAcwW,GAAI,MAAOC,GAAI,MAAOrJ,aAAc,MAAO,SAAU,CAACvL,gBAAiBoyB,EAA0B/F,eAAiBgD,EAAgBhD,aAAe,UAAY,sBAClLrsB,gBAAiBoyB,EAA0B/F,eAAiBgD,EAAgBhD,aAAe,UAAY,IACvGpvB,QAASA,IAAMi8B,GAA0B7J,GAAiBpzB,SAE1DC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQE,WAAY,UAAUzB,SAAA,CAC7CF,cAAC4zB,KAAY,CAAChzB,GAAI,CAACqgB,SAAU,OAAQ,+BAAgC,CAACjgB,SAAU,SAAU0C,MAAO,YAAYxD,SAACF,cAAC8zB,KAAQ,MACvH9zB,cAAC+zB,KAAY,CAACC,QAASV,EAAgBhD,aAAc1vB,GAAI,CAAC,6BAA8B,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,qBAI/G,IAAnC4vB,EAAgBkJ,iBAA8D,IAAnClJ,EAAgBT,eACxD,KAEA1yB,eAAAF,WAAA,CAAAC,SAAA,EACwC,IAAnCozB,EAAgBkJ,eACbx8B,cAAAC,WAAA,CAAAC,SACIF,cAACigC,KAAe,CAACr/B,GAAI,CAAC8C,MAAO,QAAS1C,SAAU,SAAU2C,OAAQ,QAAS8c,YAAY,6BAG3F,KAGHqV,EAAkBjD,eACf,MAE2B,IAA3BS,EAAgBsG,OACZ55B,cAAAC,WAAA,CAAAC,SACIF,cAACiB,IAAU,CAACi/B,KAAK,MAAMt/B,GAAI,CAAC6O,GAAI,GAAK3L,OAAQ,KAAM5C,QAASA,IAl6C1G9C,OAAOkyB,EAAc8C,KACnD5tB,IAA+B,GAE/B,MAEM26B,SAFqCnyB,GAAqB4nB,EAA4BZ,aAEjCl1B,KAAKqY,MAAKshB,GAAoCA,EAAiCrG,gBAAkBA,IAE5J0C,EAAkBlG,aAAanK,SAASuV,IACjCA,EAAiB5H,gBAAkB+M,EAAsB/M,gBACxD4H,EAAiBjM,iBAAmBoR,EAAsBpR,iBAC1DiM,EAAiBjM,iBAAiBtJ,SAASuJ,IACvCA,EAAqB4K,QAAS,CAAK,IAEvCoB,EAAiBpB,QAAS,EAC9B,IAGJ,MAAMsD,EAA4BpH,EAAkBlG,aAAazX,MAAK6iB,GAAoBA,EAAiB5H,gBAAkBA,IAEzH8D,EAAmBtH,aAAaF,MAAKsL,GAAoBA,EAAiB1K,eAAiBA,MAC3F4G,EAAmBtH,aAAewH,GAGtC+F,GAA0BD,GAE1B13B,IAA+B,EAAM,EAy4CyG46B,CAA0B9M,EAAgBhD,aAAcgD,EAAgBF,eAAelzB,SACrJF,cAACqgC,KAAQ,CAACz/B,GAAI,CAAC8C,MAAO,OAAQ1C,SAAU,UAAWyf,YAAY,iBAKvEtgB,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACiB,IAAU,CAACi/B,KAAK,MAAMt/B,GAAI,CAAC6O,GAAI,GAAK3L,OAAQ,KAAM5C,QAASA,KAAMo/B,OA9hCtGlN,EA8hCyIE,EAAgBF,cA7hCjM5tB,IAA+B,QAC/BtH,YAAW,KACP,MAAM6+B,EAAyB7F,EAAmBtH,aAAazX,MAAKokB,GAAkCA,EAA+BnJ,gBAAkBA,IAEjJmN,EAAsCvJ,EAAmB7e,MAAKqoB,GAA0BA,EAAuBpN,gBAAkB2J,EAAuB3J,gBAE3JmN,EAECxD,EAAuBhO,iBAAiBtJ,SAAQgb,IAE5C,IAAIpG,EAAUkG,EAAoCxR,iBAAiB5W,MAAKuoB,GAA8CA,EAA2C3G,uBAAyB0G,EAA2C1G,uBAElOM,GAECA,EAAQpL,yBAA2BoL,EAAQpL,yBAAyBtZ,QAAO6lB,GACvEiF,EAA2CxR,yBAAyBS,MAAKiR,GAAQA,EAAKxE,+BAAiCX,EAAEW,iCAI3C,IAA/EsE,EAA2CxR,yBAAyB1X,OACnEkpB,EAA2CxR,yBAAyBxJ,SAAQmb,IACxE,GAAgE,OAA7DA,EAAmCvP,uBAA6F,OAA3DuP,EAAmCrP,qBAAmG,UAAnEqP,EAAmC9P,4BAE1KuJ,EAAQpL,yBAA2BoL,EAAQpL,yBAAyBtZ,QAAO6lB,GAAKA,EAAEW,+BAAiCyE,EAAmCzE,oCAGrJ,GAA8D,OAA3DyE,EAAmCrP,qBAAmG,WAAnEqP,EAAmC9P,4BAC1GuJ,EAAQpL,yBAA2BoL,EAAQpL,yBAAyBtZ,QAAO6lB,GAAKA,EAAEW,+BAAiCyE,EAAmCzE,mCAGtJ,CACA,MAAMxL,EAAgB0J,EAAQpL,yBAAyBhlB,WAAUuxB,GAAKA,EAAEW,+BAAiCyE,EAAmCzE,gCAErH,IAAnBxL,EAEA0J,EAAQpL,yBAAyB0B,GAAiBiQ,EAKlDvG,EAAQpL,yBAAyB1kB,KAAKq2B,EAE9C,KAIJL,EAAoCxR,iBAAmBwR,EAAoCxR,iBAAiBpZ,QAAOkrB,GAA+BA,EAA4B9G,uBAAyB0G,EAA2C1G,wBAItPwG,EAAoCxR,iBAAiBxkB,KAAKk2B,EAC9D,IAKJzJ,EAAmBzsB,KAAKwyB,GAG5B/F,EAAmBvR,SAAS+a,IACxBA,EAAuBzR,iBAAmByR,EAAuBzR,iBAAiBpZ,QAAOqZ,GAAiF,IAAzDA,EAAqBC,yBAAyB1X,QAAa,IAGhL,MAAMupB,EAAuC9J,EAAmB/sB,WAAU+M,GAAyC,IAAjCA,EAAK+X,iBAAiBxX,UAC3D,IAA1CupB,GACC9J,EAAmBqF,OAAOyE,EAAsC,GAGpE,MAAMhE,EAAyB,CAC3BjvB,UAAWqpB,EAAmBrpB,UAC9B+hB,aAAcoH,GAGlB6F,GAA6BC,EAAwBC,EAAuB,GAC7E,KA3EqC3J,KA8hCwK,EAAAlzB,SAChIF,cAAC+gC,KAAY,CAACngC,GAAI,CAAC8C,MAAO,MAAO1C,SAAU,UAAWyf,YAAY,eAGtEzgB,cAACiB,IAAU,CAACi/B,KAAK,MAAMt/B,GAAI,CAAC6O,GAAI,GAAK3L,OAAQ,KAAM5C,QAASA,KAAM8/B,OAAgC1N,EAAgBhD,aAh5C3I8C,EAg5CyJE,EAAgBF,cA/4C5N5tB,IAA+B,QAE/BtH,YAAW,KACP,MAAM+iC,EAAwCjK,EAAmB7e,MAAK+oB,GAA2BA,EAAwB9N,gBAAkBA,IAE3I,GAAG6N,EACCnL,EAAkBlG,aAAanK,SAASuV,IACjCA,EAAiB5H,gBAAkB6N,EAAsC7N,gBACxE4H,EAAiBjM,iBAAmBkS,EAAsClS,iBAC1EiM,EAAiBjM,iBAAiBtJ,SAASuJ,IACvCA,EAAqB4K,QAAS,CAAI,IAEtCoB,EAAiBpB,QAAS,EAC9B,IAGJ1C,EAAmBtH,aAAanK,SAASsW,IAClCA,EAAmC3I,gBAAkB6N,EAAsC7N,gBAC1F2I,EAAmChN,iBAAmBkS,EAAsClS,iBAChG,QAGJ,CACA+G,EAAkBlG,aAAanK,SAASuV,IACjCA,EAAiB5H,gBAAkBA,IAClC4H,EAAiBjM,iBAAmB,GACpCiM,EAAiBpB,QAAS,EAC9B,IAGJ,MACMuH,EADsB,IAAIjK,GACsBtH,aAAaja,QAAOqlB,GAAoBA,EAAiB5H,gBAAkBA,IACjI8D,EAAmBtH,aAAeuR,CACtC,CAEA9J,GAAuBngB,KAAEW,UAAUmf,IAEnC,MAAMkG,EAA4BpH,EAAkBlG,aAAazX,MAAK6iB,GAAoBA,EAAiB5H,gBAAkBA,IAC7H+J,GAA0BD,GAE1B13B,IAA+B,EAAM,GACtC,KA1CiCw7B,IAAe5N,CAg5CwL,EAAAlzB,SAC3JF,cAAC2tB,KAAU,CAAC/sB,GAAI,CAAC8C,MAAO,MAAO1C,SAAU,UAAWyf,YAAY,uBAIjF,YAAAphB,OA9CyCk0B,MAmDxDpzB,eAACqzB,KAAc,CACX5yB,GAAI,CAACgY,GAAI,MAAOC,GAAI,MAAOrJ,aAAc,MAAOvL,gBAA4D,+BAA3CoyB,EAA0B/F,aAAiC,UAAY,GACpI,SAAU,CAACrsB,gBAA4D,+BAA3CoyB,EAA0B/F,aAAiC,UAAY,uBACvGpvB,QAASA,KAAMkgC,OAv5BpCtP,EAu5B8DgE,EAAkBhE,eAt5B9E,IAA9BmE,GACCC,GAA8BD,GAGE,IAAjCQ,EAAsBlf,QACrBmf,EAAyB,IAG7BJ,EACI,CACIhG,aAAc,6BACdvB,iBAAkB+C,SAI1B0E,EACI,CACIiH,0BAA2B,OAC3B1O,iBAAkB+C,IAnBKA,KAu5B+F,EAAA5xB,SAAA,CAE1EF,cAAC4zB,KAAY,CAAChzB,GAAI,CAACqgB,SAAU,OAAQ,+BAAgC,CAACjgB,SAAU,SAAU0C,MAAO,YAAYxD,SACzGF,cAAC8zB,KAAQ,CAAClzB,GAAI,CAACizB,UAAsD,+BAA3CwC,EAA0B/F,aAAiC,gBAAkB,oBAG3GtwB,cAAC+zB,KAAY,CAACC,QAAS,6BAAepzB,GAAI,CAAC,6BAA8B,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,kBAGhI1D,cAACi0B,KAAQ,CAACC,GAAI+B,EAA2B9B,QAAQ,OAAOC,eAAa,EAAAl0B,SACjEF,cAAA,OAAK4B,MAAO,CAAEqoB,YAAa,QAAS/pB,SAC/B41B,EAAkBhE,cAAc7mB,KAAI,CAAC2nB,EAAmByO,IACrDlhC,eAACqzB,KAAc,CAA6C5yB,GAAI,CAACgY,GAAI,MAAOC,GAAI,MAAOzW,MAAO,OAAQoN,aAAc,MAAO,SAAU,CAACvL,gBAAiB,uBACnJ/C,QAASA,IA34BvC9C,OAAO2P,EAAmBgkB,EAAiB6L,KAC7Ep4B,IAA+B,GAC/BuyB,IAA4B,GAGzBpB,EACIF,EAAsB8D,oBAAsBxI,IACjB,IAAvB6L,QACOD,GAAiB5vB,EAAmBgkB,EAAiB6L,GAEhC,IAAvBA,GAA4BhI,EAA4BqC,eAAwC,IAAvB2F,GAA4BhI,EAA4BsC,cACrIxB,EAAyB,CACrB6D,kBAAmBxI,EACnBgB,gBAAgB,EAChBxD,WAAYuG,EAAkBhE,cAAc,GAAGvC,WAC/CiL,iBAAkB1E,EAAkBhE,cAAc,GAAGjD,aAGzD+H,EAAgC,CAC5B2D,kBAAmBxI,EACnBgB,gBAAgB,EAChBxD,WAAYuG,EAAkBhE,cAAc,GAAGvC,WAC/CiL,iBAAkB1E,EAAkBhE,cAAc,GAAGjD,cAG9B,IAAvB+O,GAAuE,IAA3C9H,EAAkBhE,cAAcva,QAIrC,IAAvBqmB,GAAuE,IAA3C9H,EAAkBhE,cAAcva,QAAgBqe,EAA4BuD,gBAH5GzC,EAAyBC,GACzBC,EAAgCD,UAO1BgH,GAAiB5vB,EAAmBgkB,EAAiB6L,UAM7DD,GAAiB5vB,EAAmBgkB,EAAiB6L,GAG/D7F,IAA4B,GAC5BvyB,IAA+B,EAAM,EA+1B0C87B,CAA8B1O,EAAkB7kB,kBAAmB6kB,EAAkBb,gBAAiBa,EAAkBzkB,OAAOjO,SAAA,CAC9IF,cAAC4zB,KAAY,CAAChzB,GAAI,CAACqgB,SAAU,OAAQ,+BAAgC,CAACjgB,SAAU,SAAU0C,MAAmC,IAA5BkvB,EAAkBzkB,MAAc,MAAQ,YAAYjO,SACjJF,cAACuhC,KAAqB,CAAC3gC,GAAI,CAACizB,UAAsD,+BAA3CwC,EAA0B/F,aAAiC,gBAAkB,oBAExHtwB,cAAC+zB,KAAY,CAACC,QAASpB,EAAkBb,gBAAiBnxB,GAAI,CAAC,6BAA8B,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,iBAAe,iBAAArE,OAL7HgiC,qBAiBpD,IAAzBjkB,GAAWE,YAAiE,IAA9CsY,EAA4BqC,cACvD93B,eAAA,OAAK+L,UAAU,cAActK,MAAO,CAACH,QAAS,OAAQI,eAAgB,gBAAiBsX,UAAW,SAASjZ,SAAA,CACvGF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,QAAQxC,QAASA,IAAM82B,KAAwB93B,SAAC,0BAClFF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,YAAYxC,QAASA,IAAMu3B,KAAkCv4B,SAAC,wCAChGF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,UAAUxC,QAASA,IAAM23B,KAAqC34B,SAAC,qCAGlE,KAAnC01B,EAA4BhpB,GACxB,KAEmC,KAAnCgpB,EAA4BhpB,IAAoD,IAAvCgpB,EAA4B/1B,OACjEM,eAAA,OAAK+L,UAAU,cAActK,MAAO,CAACH,QAAS,OAAQ0X,UAAW,SAASjZ,SAAA,CACtEF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,QAAQ9C,GAAI,CAACiK,GAAI,GAAI3J,QAASA,IAAMi3B,KAAwBj4B,SAAC,wBAC/FF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,YAAYxC,QAASA,IAAMu3B,KAAkCv4B,SAAC,mCAGpGC,eAAA,OAAK+L,UAAU,cAActK,MAAO,CAACH,QAAS,OAAQ0X,UAAW,SAASjZ,SAAA,CACtEF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,QAAQ9C,GAAI,CAACiK,GAAI,GAAI3J,QAASA,IAAM82B,KAAwB93B,SAAC,qCAC/FF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,UAAUxC,QAASA,IAAM23B,KAAqC34B,SAAC,wCAKrHC,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAEzjB,SAAA,CAEbC,eAACiE,IAAG,CAACxD,GAAI,CAACif,UAAW,EAAGrQ,aAAc,OAAQoQ,OAAQ,iBAAkBnc,OAAQ,QAASpB,GAAI,MAAOigB,SAAU,QAAQpiB,SAAA,CAClHF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,OAAQY,GAAI,GAAKjC,GAAI,GAAKtB,WAAY,SAAUC,SAAU,SAAU0O,UAAW,UAAUxP,SAAC,mCAC/HF,cAACoE,IAAG,CAACxD,GAAI,CAACmY,GAAI,IAAKC,GAAI,IAAK1U,GAAI,GAAGpE,SAC9Bw3B,GACGv3B,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,SAAU4C,GAAI,GAAGpE,SAAA,CACvGF,cAAC8B,IAAgB,CAAC4B,MAAM,YACxB1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,8FAGjDF,cAAAC,WAAA,CAAAC,SACIC,eAACqjB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAG8d,cAAe,CAAE7d,GAAI,EAAG8d,GAAI,EAAGC,GAAI,GAAGxhC,SAAA,CAEjEC,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAAC2hC,KAAO,CAAC/gC,GAAI,CAAC8C,MAAO,YAAY1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC6O,GAAI,GAAGvP,SAAA,aAAAb,OAAYu2B,EAA4BjX,aAAe,SAExIxe,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAAC4hC,KAAU,CAAChhC,GAAI,CAAC8C,MAAO,YAAY1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC6O,GAAI,GAAGvP,SAAA,mBAAAb,OAAau2B,EAA4BX,cAAgB,SAE7I90B,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACa,QAAS,eAAevB,SAAA,EACK,IAA/C01B,EAA4BR,eAA0Bp1B,cAAC6hC,KAAQ,CAACjhC,GAAI,CAAC8C,MAAO,QAAS1C,SAAU,UAAahB,cAAC8hC,KAAU,CAAClhC,GAAI,CAAC8C,MAAO,QAAS1C,SAAU,UACxJhB,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC6O,GAAI,GAAGvP,SAAA,sBAAAb,OACsB,KAA/Cu2B,EAA4BR,gBAAuE,IAA/CQ,EAA4BR,eAA0B,MAAQ,UAAO,SAIhJj1B,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAAC+hC,KAAiB,CAACnhC,GAAI,CAAC8C,MAAO,YAAYvD,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC6O,GAAI,GAAGvP,SAAA,CAAC,iBAAY01B,EAA4BV,YAAcra,KAAO+a,EAA4BV,aAAata,OAAO,cAAgB,SAEzNza,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAACgiC,KAAQ,CAACphC,GAAI,CAAC8C,MAAO,YAAY1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC6O,GAAI,GAAGvP,SAAA,uBAAAb,OAAiBu2B,EAA4BT,mBAAqB,SAEpJh1B,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAACiiC,KAAS,CAACrhC,GAAI,CAAC8C,MAAO,YAAY1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC6O,GAAI,GAAGvP,SAAA,QAAAb,OAAUu2B,EAA4BJ,eAAiB,SAG1Ir1B,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAACkiC,KAAY,CAACtgC,MAAO,CAAC8B,MAAO,SAAU1C,SAAU,UAAW4pB,WAAY,SACxE5qB,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC6O,GAAI,IAAKvP,SAAA,mBAAAb,OAC3Bu2B,EAA4BP,eAAiBO,EAA4BP,eAAiB,MAAQ,SAGzHl1B,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAACmiC,KAAa,CAACvgC,MAAO,CAAC8B,MAAO,SAAU1C,SAAU,aAClDhB,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC6O,GAAI,GAAGvP,SAAA,qBAAAb,OAC1Bu2B,EAA4BN,eAAiBM,EAA4BN,eAAiB,MAAQ,SAIxHn1B,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAACoiC,KAAc,CAACxgC,MAAO,CAAC8B,MAAO,SAAU1C,SAAU,aACnDhB,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC6O,GAAI,GAAGvP,SAAA,0BAAAb,OAC1Bu2B,EAA4BL,0BAA4BK,EAA4BL,0BAA4B,MAAQ,SAI9Ip1B,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,GAAI/iB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC5CF,cAACqiC,KAAI,CAACzhC,GAAI,CAAC8C,MAAO,YAAY1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC6O,GAAI,GAAGvP,SAAA,2BAAAb,OAAcu2B,EAA4BH,iBAAmB,SAG1IoB,EACG72B,cAAAC,WAAA,CAAAC,SACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,GAAGzjB,SACdF,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQqX,SAAU,QAAQ5Y,SACxC22B,EAAmB5rB,KAAI,CAAC+L,EAAMsrB,IAC3BtiC,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC6O,GAAI,GAAKzO,SAAU,SAAU0C,MAAO,aAAc3C,WAAY,UAAUb,SAAA,GAAAb,OAAkB2X,EAAKoa,4BAA2B,MAAA/xB,OAAK2X,EAAKqa,sBAAwB,QAAO,GAAE,KAAAhyB,OAAiC,OAA7B2X,EAAKua,oBAA4B,GAAAlyB,OAAM2X,EAAKua,qBAAwB,GAAE,OAAjK+Q,WAOnI,eASxBniC,eAAA,OAAK+L,UAAU,8BAA6BhM,SAAA,CAEpCo3B,GACIt3B,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAAC6C,OAAQ,OAAQhC,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,UAAUxB,SAAA,CAChHF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,sHAIzDwyB,EAC+C,IAA3CA,EAAkBZ,cAAcva,QAAqE,OAArDmb,EAAkBZ,cAAc,GAAGvjB,cAC/EvO,cAACoE,IAAG,CAACxD,GAAI,CAAC6C,OAAQ,OAAQhC,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,UAAUxB,SAChHF,cAACqE,IAAU,CAACnC,QAAQ,KAAIhC,SAAC,uEAG7BF,cAAA,OAAKkM,UAAU,oBAAmBhM,SAACF,cAAC2xB,GAAoB,CAACe,kBAAmBA,MAEhF,KAGP2D,EAA0BtH,iBACvB/uB,cAAAC,WAAA,CAAAC,SACIF,cAAA,OAAKkM,UAAU,oBAAmBhM,SAC7B43B,GACG93B,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAAC6C,OAAQ,OAAQhC,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,UAAUxB,SAAA,CAChHF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,6GAIrDF,cAAAC,WAAA,CAAAC,UACkD,IAA7Cm2B,EAA0BmG,iBAAgE,IAArCnG,EAA0BuD,OAC5E55B,cAACoE,IAAG,CAACxD,GAAI,CAAC6C,OAAQ,OAAQhC,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,UAAUxB,SAChHF,cAACqE,IAAU,CAACnC,QAAQ,KAAIhC,SAAC,2HAGkC,SAA/Dq2B,EAAiCkH,2BAAyE,IAAjChH,EAAsBlf,SAA+D,IAA/Cqe,EAA4BuD,eACvI9C,EAA0BtH,iBAAiB9jB,KAAI,CAAC+jB,EAAsBuB,IAClEpwB,eAACiE,IAAG,CAA6BxD,GAAkD,OAA9CouB,EAAqByB,qBAAgC,CAACtX,UAAW,QAAU,CAAC,EAAEjZ,SAAA,CAE/GF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACG,WAAY,SAAU2O,UAAW,SAAU1O,SAAU,SAAUqB,GAAI,IAAKnC,SAAE8uB,EAAqByB,sBAAwB,KACpJzB,EAAqBC,yBAAyBhkB,KAAI,CAACylB,EAAcC,IAC9D3wB,cAACoE,IAAG,CAAAlE,SACAC,eAACqjB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAExjB,SAAA,CACP,IAAlBywB,EACGxwB,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BgR,YAAa,MAAO9vB,EAAG,IAAKZ,SACrFF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAE8uB,EAAqB6B,wBAGvD,UAA7CH,EAAaI,4BACV3wB,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BgR,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQI,eAAgB,SAAUF,WAAY,UAAUzB,SAAA,CACtJF,cAAC+wB,KAAY,CAACnwB,GAAI,CAACI,SAAU,UAAW0C,MAAO,UAAU1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAU4C,OAAQ,OAAQqtB,WAAY,OAAO9wB,SAAE8uB,EAAqBiC,0BAGjMjxB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8B9e,EAAG,IAAKZ,SACjEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAU0O,GAAI,IAAKvP,SAAE8uB,EAAqBkC,2BAI9GlxB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8B9e,EAAG,IAAKZ,SACjEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAE8uB,EAAqBkC,2BAKjH,KAGJlxB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BuR,UAAW,MAAOP,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQE,WAAY,UAAUzB,SAC9IF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACI,SAAU,UAAUd,SAAEwwB,EAAaU,gCAG9B,UAA7CV,EAAaI,4BACV3wB,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BuR,UAAW,MAAOP,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQI,eAAgB,UAAU3B,SAClJF,cAAC8c,KAAQ,CAAC4M,UAA+C,IAArC2M,EAA0BuD,OAC9C7c,SAAgD,IAAvC2T,EAAaW,sBACtBlD,QAAS,CAAEE,KAAMF,GAAQE,MAAQ3qB,MAAM,QACvC9C,GAAI,CAAC,+BAAgC,CAACI,SAAU,WAChDE,QAASA,KACyC,IAA9C00B,EAA4BqC,gBAAuE,IAA7C5B,EAA0BmG,iBAAyE,IAA7C5G,EAA4BsC,eAAsE,IAA7C7B,EAA0BmG,eAxkDvN+F,EAAChS,EAAuBI,EAAe6R,KACnG,GAAc,OAAXA,EAAgB,CACf,MAAM7G,EAA6B,IAAItF,GACvCsF,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAeU,uBAAwB,EACnIiF,EAA6BqF,GAE7Bc,GAAsDlM,EAAuBoL,EAA2B5M,iBAAiBwB,GAAuBwJ,qBAAsB4B,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GACtQ,MACK,IAAc,IAAX6R,EAAgB,CACpB,MAAM7G,EAA6B,IAAItF,GACvCsF,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAeU,sBAAwB,KACnIiF,EAA6BqF,GAE7Bc,GAAsDlM,EAAuBoL,EAA2B5M,iBAAiBwB,GAAuBwJ,qBAAsB4B,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GACtQ,GA0jD8S4R,CAAwDhS,EAAuBI,EAAeD,EAAaW,uBAj+B3XoR,EAAClS,EAAuBI,EAAe6R,KAErE,GAAc,OAAXA,EAAgB,CACf,MAAM7G,EAA6B,IAAItF,GACvCsF,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAeU,uBAAwB,EACnIiF,EAA6BqF,GAE7B,MAAMhM,GAAgB,EACtBsO,GACItC,EAA2BrL,aAC3BX,EACAgM,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAC5FgL,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAewL,6BAC3GR,EAA2B5M,iBAAiBwB,GAAuBE,qBAE3E,MACK,IAAc,IAAX+R,EAAgB,CACpB,MAAM7G,EAA6B,IAAItF,GACvCsF,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAeU,uBAAwB,EACnIiF,EAA6BqF,GAE7B,MAAMhM,GAAgB,EACtBsO,GACItC,EAA2BrL,aAC3BX,EACAgM,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAC5FgL,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAewL,6BAC3GR,EAA2B5M,iBAAiBwB,GAAuBE,qBAE3E,KACI,CACA,MAAMkL,EAA6B,IAAItF,GACvCsF,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAeU,uBAAwB,EACnIiF,EAA6BqF,GAE7B,MAAMhM,GAAgB,EACtBsO,GACItC,EAA2BrL,aAC3BX,EACAgM,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAC5FgL,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAewL,6BAC3GR,EAA2B5M,iBAAiBwB,GAAuBE,qBAE3E,GAs7BkbgS,CAA0BlS,EAAuBI,EAAeD,EAAaW,2BAG/arxB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAEzjB,SACbF,cAAA,OAAKkM,UAAU,uBAAsBhM,SACjCF,cAAA,OAAKkM,UAAU,eAAchM,SACzBF,cAACsxB,KAAgB,CAACplB,UAAU,oBAAoBke,KAAM,EAAGV,UAA+C,IAArC2M,EAA0BuD,OAAgCh4B,MAAO,CAAEZ,SAAU,UAC5IsB,SAAWC,IAAoD,IAA9CqzB,EAA4BqC,gBAAuE,IAA7C5B,EAA0BmG,iBAAyE,IAA7C5G,EAA4BsC,eAAsE,IAA7C7B,EAA0BmG,eA7jDlPkG,EAACnS,EAAuBI,EAAenuB,KACjG,MAAMiX,EAAajX,EAGhBoQ,GAAUqE,SACTyC,cAAc9G,GAAUqE,SAG5BrE,GAAUqE,QAAU/Y,YAAW,KAC3B,MAAMy9B,EAA6B,IAAItF,GACvCsF,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAeY,oBAAsB9X,EACjI6c,EAA6BqF,GAE7Bc,GAAsDlM,EAAuBoL,EAA2B5M,iBAAiBwB,GAAuBwJ,qBAAsB4B,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAgBlX,GAXnQ,EAW0R,GAC1S,IAAI,EA+iDgUipB,CAAsDnS,EAAuBI,EAAepuB,EAAEI,OAAOH,OAx7BhZmgC,EAACpS,EAAuBI,EAAenuB,KACnE,MAAMiX,EAAajX,EAEhBoQ,GAAUqE,SACTyC,cAAc9G,GAAUqE,SAG5BrE,GAAUqE,QAAU/Y,YAAW,KAC3B,MAAMy9B,EAA6B,IAAItF,GACvCsF,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAeY,oBAAsB9X,EACjI6c,EAA6BqF,GAI7BsC,GACItC,EAA2BrL,cAFT,EAIlBqL,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAC5FgL,EAA2B5M,iBAAiBwB,GAAuBtB,yBAAyB0B,GAAewL,6BAC3GR,EAA2B5M,iBAAiBwB,GAAuBE,sBAPpD,EASlB,GACF,IAAK,EAk6B6akS,CAAwBpS,EAAuBI,EAAepuB,EAAEI,OAAOH,OAC5ZgX,aAAckX,EAAaa,uBAC7B,YAAAlyB,OAJyCsxB,EAAa,gBAAAtxB,OAAeg3B,EAA0BjD,cAAa,yBAAA/zB,OAAwBk3B,EAAiC2E,kBAAiB,4BAAA77B,OAA2BkxB,EAAqB,cAAAlxB,OAAak3B,EAAiCqD,OAAM,qBAAAv6B,OAAoBqxB,EAAayL,sCAU7Un8B,cAAAC,WAAA,CAAAC,SACiD,IAA5Cm2B,EAA0BjD,cACvBpzB,cAAAC,WAAA,CAAAC,SACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAEzjB,SACbF,cAAA,OAAKkM,UAAU,uBAAsBhM,SACjCF,cAAA,OAAKkM,UAAU,eAAchM,SACzBF,cAACsxB,KAAgB,CAACplB,UAAU,oBAAoBke,KAAM,EAAGV,UAA+C,IAArC2M,EAA0BuD,OAAgCh4B,MAAO,CAAEZ,SAAU,UAC5IsB,SAAWC,IAAoD,IAA9CqzB,EAA4BqC,gBAAuE,IAA7C5B,EAA0BmG,iBAAyE,IAA7C5G,EAA4BsC,eAAsE,IAA7C7B,EAA0BmG,eAA2Bd,GAAsDnL,EAAuBI,EAAepuB,EAAEI,OAAOH,OAASw7B,GAA0BzN,EAAuBI,EAAepuB,EAAEI,OAAOH,OAC9ZgX,aAAckX,EAAaa,uBAC7B,YAAAlyB,OAJyCsxB,EAAa,gBAAAtxB,OAAeg3B,EAA0BjD,cAAa,yBAAA/zB,OAAwBk3B,EAAiC2E,kBAAiB,4BAAA77B,OAA2BkxB,EAAqB,cAAAlxB,OAAak3B,EAAiCqD,OAAM,qBAAAv6B,OAAoBqxB,EAAayL,qCAU7Un8B,cAAAC,WAAA,CAAAC,SACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAEzjB,SACbF,cAAA,OAAKkM,UAAU,uBAAsBhM,SACjCF,cAAA,SAAOmC,KAAK,OAAOunB,UAA+C,IAArC2M,EAA0BuD,OACnD1tB,UAAU,mBACV5J,SAAWC,IAAoD,IAA9CqzB,EAA4BqC,gBAAuE,IAA7C5B,EAA0BmG,iBAAyE,IAA7C5G,EAA4BsC,eAAsE,IAA7C7B,EAA0BmG,eAA2Bd,GAAsDnL,EAAuBI,EAAepuB,EAAEI,OAAOH,OAASw7B,GAA0BzN,EAAuBI,EAAepuB,EAAEI,OAAOH,OAC9ZgX,aAAckX,EAAaa,uBAC7B,YAAAlyB,OALiDsxB,EAAa,gBAAAtxB,OAAeg3B,EAA0BjD,cAAa,yBAAA/zB,OAAwBk3B,EAAiC2E,kBAAiB,cAAA77B,OAAak3B,EAAiCqD,OAAM,qBAAAv6B,OAAoBqxB,EAAayL,yCAa1S,+BAAA98B,OArF8BsxB,QAJvCJ,KA+FiD,SAA/DgG,EAAiCkH,2BAAyE,IAAjChH,EAAsBlf,SAA+D,IAA/Cqe,EAA4BuD,eACvIh5B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACG,WAAY,SAAU2O,UAAW,SAAU1O,SAAU,SAAUqB,GAAI,IAAKnC,SAAC,wEACvGF,cAAC0gB,KAAc,CAAC3U,UAAW4U,KAAMzgB,SAC7BC,eAAC4gB,KAAK,CAACC,cAAY,EAAA9gB,SAAA,CACfF,cAACkhB,KAAS,CAAAhhB,SACNC,eAACghB,KAAQ,CAACvgB,GAAI,CAAC,OAAQ,CAAC8C,MAAO,mBAAoBO,gBAAiB,SAAS/D,SAAA,CACzEF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,SAAU0C,MAAO,SAASxD,SAAC,oBAClEF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAUd,SAAC,uBAClDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAUd,SAAC,oBAClDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAUd,SAAC,2BAClDF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACI,SAAU,UAAUd,SAAC,4BAG1DF,cAACshB,KAAS,CAAC1gB,GAAI,CAAC4O,aAAc,OAAOtP,SAChCq2B,EAAiCxH,iBAAiB9jB,KAAI,CAAC2nB,EAAmByO,KACvElhC,sBAACghB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAAUxhB,SAAA,CAC3BC,eAACihB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,SAASlC,SAAA,CAACF,cAAC4iC,KAAe,CAAChiC,GAAI,CAACiK,GAAI,GAAKxI,GAAI,GAAKqB,MAAO,gBAAiBkvB,EAAkBb,mBAChI/xB,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,SAASlC,UAxjChGL,EAwjC0H+yB,EAAkBzkB,MAvjC7J,IAAXtO,EAECG,cAAA,OAAKkM,UAAU,mBAAkBhM,SAACF,cAAA,KAAGkM,UAAU,YAAWhM,SAAC,oCAG5C,IAAXL,EAEJG,cAAA,OAAKkM,UAAU,kBAAiBhM,SAACF,cAAA,KAAGkM,UAAU,YAAWhM,SAAC,oCAK1DF,cAAA,OAAKkM,UAAU,iBAAgBhM,SAACF,cAAA,KAAGkM,UAAU,YAAWhM,SAAC,wCA4iCqBF,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,SAASlC,SAAE2a,KAAO+X,EAAkBiQ,cAAcjoB,OAAO,gBAC7F5a,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,SAASlC,SAAE0yB,EAAkBgC,iBACjE50B,cAACohB,KAAS,CAACC,MAAM,OAAOzgB,GAAI,CAACwB,MAAO,QAAQlC,SAAE0yB,EAAkBrD,eAL/B8R,GAtjCpFxhC,KA6jC4C,cAOjBM,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACG,WAAY,SAAU2O,UAAW,SAAU1O,SAAU,SAAUgwB,WAAY,EAAG1sB,GAAI,GAAGpE,SAAEy2B,EAA+BA,EAA6B4D,kBAAoB,KACrMp6B,eAAA,OAAK+L,UAAU,wBAAuBhM,SAAA,CACjCy2B,EACG32B,cAACowB,KAAI,CAACxvB,GAAI,CAACE,EAAG,GAAGZ,SACZy2B,EAA6B6D,iBAAiBvvB,KAAI,CAAC63B,EAAsB3E,IACtEh+B,eAAA,OAAAD,SAAA,CACIF,cAACwzB,KAAc,CACX5yB,GAAI,CAACgY,GAAI,MAAOC,GAAI,MAAOrJ,aAAc,MAAO,SAAU,CAACvL,gBAAiB,uBAC5E/C,QAASA,IArlC5Di9B,KACjC/H,GAAkC3C,IAC9B,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQyK,IAA0BzK,EAAQyK,GACnCzK,CAAO,GAChB,EAglCiGqP,CAA4B5E,GAAuBj+B,SAElEC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQE,WAAY,UAAUzB,SAAA,CAC7CF,cAAC4zB,KAAY,CAAChzB,GAAI,CAACqgB,SAAU,OAAQ,+BAAgC,CAACjgB,SAAU,OAAQ0C,MAAO,UAAWmwB,WAAoE,IAAzDsC,EAA8BgI,GAAkC,gBAAkB,iBAAiBj+B,SAACF,cAAC8zB,KAAQ,MAClO9zB,cAAC+zB,KAAY,CAACC,QAAS8O,EAAqBxS,aAAc1vB,GAAI,CAAC,6BAA8B,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,oBAIxJ1D,cAACi0B,KAAQ,CAACC,GAAIiC,EAA8BgI,GAAwBhK,QAAQ,OAAOC,eAAa,EAAAl0B,SAC3F4iC,EAAqB/T,iBAAiB9jB,KAAI,CAAC+3B,EAA8B5E,IACtEj+B,eAAA,OAAK+L,UAAU,uBAA2DtK,MAAO,CAACuX,UAAW,OAAQqX,aAAc,OAAQ5Q,OAAQ,oBAAqBpQ,aAAc,QAAQtP,SAAA,CAC1KF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACG,WAAY,SAAU2O,UAAW,UAAUxP,SAAE8iC,EAA6BvS,uBAE/GzwB,cAAA,OAAKkM,UAAU,wBAAwBtK,MAAO,CAACoB,QAAS,QAAQ9C,SAC5DC,eAACqjB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAExjB,SAAA,CAC1BF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BgR,YAAa,MAAO9vB,EAAG,IAAKZ,SACrFF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAE8iC,EAA6BnS,wBAG7G1wB,eAACqjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BgR,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQI,eAAgB,SAAUF,WAAY,UAAUzB,SAAA,CACtJF,cAAC+wB,KAAY,CAACnwB,GAAI,CAACI,SAAU,SAAU0C,MAAO,OAAQmH,GAAI,MAC1D7K,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAUiwB,WAAY,OAAO9wB,SAAE8iC,EAA6B/R,0BAGhIjxB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8B9e,EAAG,IAAKZ,SACjEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAU0O,GAAI,IAAKvP,SAAE8iC,EAA6B9R,wBAGrH8R,EAA6B/T,yBAAyBhkB,KAAI,CAACylB,EAAcC,IACtExwB,eAACiE,IAAG,CAA+GxC,MAAO,CAACH,QAAS,OAAQW,MAAO,QAAQlC,SAAA,CACvJF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BuR,UAAW,MAAOP,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQE,WAAY,UAAUzB,SAC9IF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACI,SAAU,QAAQd,SAAEwwB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACV3wB,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAG/iB,GAAI,CAACgf,OAAQ,6BAA8BuR,UAAW,MAAOP,YAAa,MAAO9vB,EAAG,GAAKW,QAAS,OAAQI,eAAgB,UAAU3B,SAClJF,cAAC8c,KAAQ,CAACqR,QAAS,CAAEE,KAAMF,GAAQE,MAAQtR,SAAgD,IAAvC2T,EAAaW,sBAC7D3H,UAA0D,IAAhDiN,EAA6B5D,eACvCnyB,GAAI,CAAC,+BAAgC,CAACI,SAAU,WAAY0C,MAAM,QAClExC,QAAUqB,GAlgC3F0gC,EAAC9E,EAAuBC,EAA+BzN,EAAe6R,KACjH,GAAc,OAAXA,EAAgB,CACf,MAAMnE,EAAyB,IAAI5H,GACnC4H,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+BnP,yBAAyB0B,GAAeU,uBAAwB,EAC/KqF,EAAyB2H,GAEzB,MAAM1O,GAAgB,EACtBsO,GACII,EAAuB7D,iBAAiB2D,GAAuB7N,aAC/DX,EACA0O,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+BnP,yBAAyB0B,GACxI0N,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+BnP,yBAAyB0B,GAAewL,6BACvJkC,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+B3N,qBAEvH,MAEK,IAAc,IAAX+R,EAAgB,CACpB,MAAMnE,EAAyB,IAAI5H,GACnC4H,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+BnP,yBAAyB0B,GAAeU,uBAAwB,EAC/KqF,EAAyB2H,GAEzB,MAAM1O,GAAgB,EACtBsO,GACII,EAAuB7D,iBAAiB2D,GAAuB7N,aAC/DX,EACA0O,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+BnP,yBAAyB0B,GACxI0N,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+BnP,yBAAyB0B,GAAewL,6BACvJkC,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+B3N,qBAEvH,KAEI,CACA,MAAM4N,EAAyB,IAAI5H,GACnC4H,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+BnP,yBAAyB0B,GAAeU,uBAAwB,EAC/KqF,EAAyB2H,GAEzB,MAAM1O,GAAgB,EACtBsO,GACII,EAAuB7D,iBAAiB2D,GAAuB7N,aAC/DX,EACA0O,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+BnP,yBAAyB0B,GACxI0N,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+BnP,yBAAyB0B,GAAewL,6BACvJkC,EAAuB7D,iBAAiB2D,GAAuBpP,iBAAiBqP,GAA+B3N,qBAEvH,GAs9B4IwS,CAAuC9E,EAAuBC,EAA+BzN,EAAeD,EAAaW,2BAIjJrxB,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAEzjB,SACbF,cAAA,OAAKkM,UAAU,kBAAiBhM,SAC5BF,cAAA,OAAKkM,UAAU,eAAchM,SACzBF,cAACsxB,KAAgB,CAACplB,UAAU,oBAAoBke,KAAM,EAAG5Q,aAAckX,EAAaa,oBAChF7H,UAA0D,IAAhDiN,EAA6B5D,eACvCzwB,SAAWC,GAAM27B,GAAqCC,EAAuBC,EAA+BzN,EAAepuB,EAAEI,OAAOH,UACtI,WAAAnD,OAJwCyjC,EAAqBI,4BAA2B,KAAA7jC,OAAIsxB,EAAa,qBAAAtxB,OAAoBs3B,EAA6B4D,2BAU5Kv6B,cAAAC,WAAA,CAAAC,SACIF,cAACwjB,KAAI,CAACxM,MAAI,EAAC2M,GAAI,EAAEzjB,SACbF,cAAA,OAAKkM,UAAU,kBAAiBhM,SAC5BF,cAAA,OAAKkM,UAAU,eAAchM,SACzBF,cAACsxB,KAAgB,CAACplB,UAAU,oBAAoBke,KAAM,EAAG5Q,aAAckX,EAAaa,oBAChF7H,UAA0D,IAAhDiN,EAA6B5D,eACvCzwB,SAAWC,GAAM27B,GAAqCC,EAAuBC,EAA+BzN,EAAepuB,EAAEI,OAAOH,UACtI,WAAAnD,OAJwCyjC,EAAqBI,4BAA2B,KAAA7jC,OAAIsxB,EAAa,qBAAAtxB,OAAoBs3B,EAA6B4D,4BAQzK,gBAAAl7B,OAtCesxB,EAAa,uBAAAtxB,OAAsBk3B,EAAiCgE,6BAnBnE6D,SAiExC,oBAAA/+B,OA9Ee8+B,QAmFtC,KAGHxH,GAC+C,OAA5CA,EAA6BpH,WACzBvvB,cAAAC,WAAA,CAAAC,SACIF,cAAA,OAAKkM,UAAU,aAAatK,MAAO,CAACgpB,WAAY,OAAQzR,UAAW,OAAOjZ,SACtEF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAA,+CAAAb,OAA0Bs3B,EAA6BpH,kBAM1I,iBAWpC,kBAQxBvvB,cAAC+tB,GAAiB,CAACoC,2BAA4BA,GAA4B3B,8BAA+BA,GACtG0B,mCA3+E+BA,KACvCuH,IAAkB,GAClBh5B,IAAMsB,QAAQ,6DAADV,OAAmCu2B,EAA4BX,cAAgB,CAACt2B,QAAS,aACtGk3B,EAA+Bf,GAC/BiB,EAAqB,IACrBG,GAA6B,GAC7BE,EAAiC,IACjCE,EAA6B,CAAC,GAC9BE,EAAoC,IACpCE,EAAyB,IACzBE,IACAG,EAA8B,CAAC,GAC/BM,KACAT,IACAK,IACAH,IACAlY,IAA6B,EA29EmDgQ,2BAA4BA,IAExG5uB,cAAC4D,EAAuB,CACpBO,4BAA6BA,GAA6BD,kBAAkB,MAO5F,E,gFCzrFA,MAaMi/B,GAAmB/kC,UACrB,MAAMoP,EAZWR,MACjB,MAAMhO,EAAQC,aAAaC,QAAQ,OAOnC,MALe,CACbI,QAAS,CACPC,cAAc,UAADF,OAAYL,IAGhB,EAIEgO,GACf,aAAa7N,IAAMsO,IAAI,GAADpO,OAfP,gCAeqB,0CAAAA,OAAyC+jC,EAAmBC,UAAS,aAAAhkC,OAAY+jC,EAAmBE,SAAW91B,GAClJhO,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EC8LS0jC,OA7Lf,WACI,MAAM,KAAEv+B,EAAI,QAAErH,GAAY+K,qBAAWlE,GAE/BqE,EAAUC,wBAETs6B,EAAoBI,GAAyB9lC,mBAAS,CAAC2lC,UAAW,GAAIC,QAAS,MAC/EG,EAAmBC,GAAwBhmC,mBAAS,KACpDimC,EAAsBC,GAA2BlmC,oBAAS,GAE3DkV,EAAYC,iBAAO,MA4HzB,OAdAhM,qBAAU,MACS,IAAZlJ,GAAqBqH,EAAKD,SACA,UAAtBC,EAAKoF,cACJvB,EAAQ0B,KAAK,OAErB,GACD,CAAC5M,EAASqH,IAEb6B,qBAAU,KAC8B,KAAjCu8B,EAAmBC,WAAmD,KAA/BD,EAAmBE,SAhClCllC,WAC3BwlC,GAAwB,SAClB,IAAIvlC,SAAQC,GAAWJ,WAAWI,EAAS,OACjD,MACMulC,SADiCV,GAAiBC,IACDn4B,KAAK+L,IAC9B,CACtBnJ,UAAWmJ,EAAKnJ,UAChB0D,SAAUyF,EAAKzF,SACfuyB,QAASjpB,KAAO7D,EAAK8sB,SAASlpB,OAAO,cACrCpJ,OAAQwF,EAAKxF,OAAS,MAAQ,UAC9B7D,WAAYkN,KAAO7D,EAAKrJ,YAAYiN,OAAO,cAC3CmpB,SAAU/sB,EAAK+sB,SACf1f,MAAOrN,EAAKqN,MACZjS,SAAU4E,EAAK5E,SACfD,SAAU6E,EAAK7E,SACfb,QAAS0F,EAAK1F,YAItBoyB,EAAqBG,GACrBD,GAAwB,EAAM,EAa1BI,EACJ,GACD,CAACZ,IAGAjjC,eAACoP,KAAS,CAAClP,SAAS,KAAKO,GAAI,CAAC0D,GAAI,GAAGpE,SAAA,CACjCF,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,UAAU3B,SACjDF,cAACsa,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAIva,SAChEC,eAACua,KAAa,CAACrG,WAAY,CAAC,cAAcnU,SAAA,CACtCF,cAAC2a,KAAU,CAAC1Y,MAAM,kBAAU2Y,OAAO,aAAaE,eAAa,EAACxY,SAAWE,GA1ElEA,KACvB,GAAGA,EAAM,CACL,MAAMiX,EAAajX,EAAMyY,GAEtBrI,EAAUqE,SACTyC,cAAc9G,EAAUqE,SAG5BrE,EAAUqE,QAAU/Y,YAAW,KAC3B,MAAM+lC,EAAsB,IAAIb,GAChCa,EAAoBZ,UAAYxoB,KAAOpB,GAAYmB,OAAO,cAC1D4oB,EAAsBS,EAAoB,GAC3C,IACP,GA6DmGC,CAAkB1hC,KACrGxC,cAAC2a,KAAU,CAAC1Y,MAAM,wBAAW2Y,OAAO,aAAaE,eAAa,EAACxY,SAAWE,GA3DrEA,KACrB,GAAGA,EAAM,CACL,MAAMiX,EAAajX,EAAMyY,GAEtBrI,EAAUqE,SACTyC,cAAc9G,EAAUqE,SAG5BrE,EAAUqE,QAAU/Y,YAAW,KAC3B,MAAM+lC,EAAsB,IAAIb,GAChCa,EAAoBX,QAAUzoB,KAAOpB,GAAYmB,OAAO,cACxD4oB,EAAsBS,EAAoB,GAC3C,IACP,GA8CoGE,CAAgB3hC,YAKhHxC,cAACoE,IAAG,CAACxD,GAAI,CAAE6C,OAAQ,IAAKrB,MAAO,OAAQkC,GAAI,KAAMpE,SAC5CyjC,EACG3jC,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,SAAU+B,OAAQ,OAAOvD,SAAA,CAC/GF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,mFAIpB,IAA7BujC,EAAkBlsB,OACdvX,cAAAC,WAAA,CAAAC,SACIF,cAACokC,KAAQ,CACLxiC,MAAO,CAAEZ,SAAU,QACnBqjC,WAAYC,KAAKjwB,WAAWkwB,YAAYhwB,aAAa8vB,WACrDja,KAAMqZ,EAAkBx4B,KAAI,CAACu5B,EAAKlC,KAAK,IAChCkC,EACH53B,GAAI01B,EAAQ,MAEhBmC,QAvJhB,CACZ,CAAEC,MAAO,KAAMC,WAAY,MAAOviC,MAAO,IAAKif,MAAO,OAAQujB,YAAa,QAC1E,CAAEF,MAAO,WAAYC,WAAY,iBAAUviC,MAAO,IAAKif,MAAO,OAAQujB,YAAa,QACnF,CAAEF,MAAO,UAAWC,WAAY,kBAAaviC,MAAO,IAAKif,MAAO,OAAQujB,YAAa,OAAQziC,KAAM,QACnG,CAAEuiC,MAAO,SAAUC,WAAY,oBAAaviC,MAAO,IAAKif,MAAO,OAAQujB,YAAa,QACpF,CAAEF,MAAO,aAAcC,WAAY,eAAaviC,MAAO,IAAKif,MAAO,OAAQujB,YAAa,OAAQziC,KAAM,QACtG,CAAEuiC,MAAO,WAAYC,WAAY,kBAAWviC,MAAO,IAAKif,MAAO,OAAQujB,YAAa,QACpF,CAAEF,MAAO,QAASC,WAAY,4BAAcviC,MAAO,IAAKD,KAAM,SAAUkf,MAAO,OAAQujB,YAAa,QACpG,CAAEF,MAAO,WAAYC,WAAY,uBAAcviC,MAAO,IAAKif,MAAO,OAAQujB,YAAa,QACvF,CAAEF,MAAO,WAAYC,WAAY,8BAAkBviC,MAAO,IAAKif,MAAO,OAAQujB,YAAa,QAC3F,CAAEF,MAAO,UAAWC,WAAY,yBAAWviC,MAAO,IAAKif,MAAO,OAAQujB,YAAa,SA8IvDC,gBAAiB,CAAC,GAClBxwB,WAAY,CACR5J,QAjHd7F,IAA4B,IAA3B,kBAAEkgC,GAAmBlgC,EACxC,OACIzE,eAAC4kC,KAAoB,CAAA7kC,SAAA,CAEjBF,cAACglC,KAAwB,CAACpkC,GAAI,CAACI,SAAU,UACzChB,cAACilC,KAAuB,CAACrkC,GAAI,CAACI,SAAU,UACxChB,cAACklC,KAA0B,CAACtkC,GAAI,CAACI,SAAU,UAC3ChB,cAACwD,IAAM,CAACtB,QAAQ,OAAOijC,UAAWnlC,cAAEolC,KAAgB,IAAIlkC,QAAS4jC,EAAmBlkC,GAAI,CAACI,SAAU,QAAQd,SAAC,sBACzF,GA2GGwU,gBAAiB,CACf2wB,QAAS,CAAEP,kBA/IrBA,KAEtB,MAAMQ,EAAgB7B,EAAkBx4B,KAAI,CAACu5B,EAAKlC,KAAK,CACnD,IAAOA,EAAQ,EACf,iBAAUkC,EAAIjzB,SACd,kBAAaizB,EAAIV,QACjB,oBAAaU,EAAIhzB,OACjB,eAAagzB,EAAI72B,WACjB,kBAAW62B,EAAIT,SACf,4BAAcS,EAAIngB,MAClB,uBAAcmgB,EAAIpyB,SAClB,8BAAkBoyB,EAAIryB,SACtB,yBAAWqyB,EAAIlzB,YAIbi0B,EAAKC,KAAWC,cAAcH,GAG9BI,EAAKF,KAAWG,WACtBH,KAAWI,kBAAkBF,EAAIH,EAAI,QAGrCC,KAAeE,EAAG,4DAADrmC,OAAsCwb,KAAOuoB,EAAmBC,WAAWzoB,OAAO,cAAa,mBAAAvb,OAAQwb,KAAOuoB,EAAmBE,SAAS1oB,OAAO,cAAa,SAAQ,IA0H3JirB,4BAA0B,EAC1BjlC,GAAI,CACA,kCAAmC,CAC/B4vB,aAAc,OAElB,oCAAqC,CACjCA,aAAc,YAM/BxwB,cAAA,MAAI4B,MAAO,CAAC8N,UAAW,SAAUhM,MAAO,QAAQxD,SAAC,8GAK5E,ECtLe4lC,OAnBI5oC,GAEf8C,cAAAC,WAAA,CAAAC,SACEF,cAAC+lC,IAAU,CAAA7lC,SAETC,eAAC6lC,SAAM,CAAA9lC,SAAA,CACLC,eAAC0L,QAAK,CAACF,OAAK,EAACG,KAAK,IAAG5L,SAAA,CAAC,OAAK,OAC3BF,cAAC6L,QAAK,CAACC,KAAK,SAAQ5L,SAACF,cAACyO,GAAK,MAC3BzO,cAAC4L,GAAa,CAACE,KAAK,mBAAmBC,UAAWue,KAClDtqB,cAAC4L,GAAa,CAACE,KAAK,oBAAoBC,UAAW8oB,KACnD70B,cAAC4L,GAAa,CAACE,KAAK,oBAAoBC,UAAW+e,KACnD9qB,cAAC4L,GAAa,CAACE,KAAK,aAAaC,UAAWw3B,KAC5CpjC,eAAC0L,QAAK,CAACC,KAAK,IAAG5L,SAAA,CAACF,cAACiM,GAAO,IAAI,cCgBvBg6B,OA9Bf,WAEE,OACE9lC,eAAAF,WAAA,CAAAC,SAAA,CACEC,eAAC4lC,IAAU,CAAA7lC,SAAA,CACTF,cAAA,OAAKkM,UAAU,mBAAkBhM,SAC/BF,cAACkmC,GAAM,MAGTlmC,cAAA,OAAKkM,UAAU,gBAAehM,SAC5BF,cAAC8lC,GAAS,SAId9lC,cAACmmC,IAAc,CACbhlC,SAAS,gBACTilC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZ5iC,MAAM,YAId,ECxBe6iC,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtnC,MAAKoF,IAAkD,IAAjD,OAAEmiC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASviC,EACpEmiC,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,E,OCDFO,IAASC,OAEPrnC,cAACyE,IAAM6iC,WAAU,CAAApnC,SACfF,cAAC2E,EAAY,CAAAzE,SACXF,cAACimC,GAAG,QAIR72B,SAAS6Y,eAAe,SAM1B2e,I","file":"static/js/main.206bb705.chunk.js","sourcesContent":["import axios from \"axios\";\r\n//import SignalService from \"./SignalService.jsx\"\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\nconst userLogin = async (userName, password) => {\r\n  return await axios.post(`${backendURL}/api/UserAccount/Login`, { userName, password })\r\n  .then(function (response) {\r\n    //SignalService.startSignalRConnection(response.data.tokenDTO.token)\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n};\r\n\r\nconst getUserLogin = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetUserLogin`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst getGetListDoctor = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetDoctors`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst updatePassword = async (inputPayloadPassword) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/UserAccount/ChangePassword`, inputPayloadPassword, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    userLogin, \r\n    getUserLogin, getGetListDoctor,\r\n    updatePassword\r\n}\r\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { toast } from 'react-toastify';\r\n//api\r\nimport { updatePassword } from '../../Service/UserService';\r\n\r\nfunction ChangePassword(props) {\r\n    const inputPasswordDefault = {\r\n        currentPassword: '',\r\n        openCurrentPassword: false,\r\n        newPassword: '',\r\n        openNewPassword: false\r\n    }\r\n\r\n    const [inputPassword, setInputPassword] = useState(inputPasswordDefault);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleCloseModalChangePassword = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            props.setIsDialogChangePasswordOpen(false);\r\n            props.setOpenModalChangePassword(false);\r\n            setTimeout(() => {\r\n                setInputPassword(inputPasswordDefault);\r\n            }, 200)\r\n        }\r\n    }\r\n\r\n    const handleClickShowCurrentPassword = () => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.openCurrentPassword = !inputPassword.openCurrentPassword\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const handleClickShowNewPassword = () => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.openNewPassword = !inputPassword.openNewPassword\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const onChangeCurrentPassword = (value) => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.currentPassword = value\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const onChangeNewPassword = (value) => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.newPassword = value\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const handleValidate = () => {\r\n        let isValid = true;\r\n        if(inputPassword.currentPassword === ''){\r\n            toast.warning('Bạn chưa nhập mật khẩu hiện tại!', {toastId: 'validateCurrentPassword'})\r\n            isValid = false;\r\n        }\r\n        \r\n        if(inputPassword.newPassword === ''){\r\n            toast.warning('Bạn chưa nhập mật khẩu mới!', {toastId: 'validateNewPassword'})\r\n            isValid = false\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    const handleChangePassword = async () => {\r\n        setLoading(true);\r\n        await new Promise(resolve => setTimeout(resolve, 2 * 100));\r\n        if(handleValidate()){\r\n            const inputPayloadPassword = { password: inputPassword.newPassword, passwordOld: inputPassword.currentPassword }\r\n            const responseUpdatePassword = await updatePassword(inputPayloadPassword);\r\n\r\n            if(responseUpdatePassword.status === 400 && responseUpdatePassword.data === 'Tài khoản hoặc mật khẩu không chính xác !'){\r\n                toast.error('Mật khẩu hiện tại không chính xác.', {toastId: 'handleChangePasswordError1'})\r\n            }\r\n            else if(responseUpdatePassword.status === 400){\r\n                toast.error(responseUpdatePassword.data, {toastId: 'handleChangePasswordError2'})\r\n            }\r\n            else if(responseUpdatePassword.status === 200){\r\n                toast.success(responseUpdatePassword.data, {toastId: 'handleChangePasswordSuccess'})\r\n                handleCloseModalChangePassword();\r\n            }\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalChangePassword} onClose={(event, reason) => handleCloseModalChangePassword(event, reason)} disableEscapeKeyDown={true} >\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Đổi mật khẩu</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalChangePassword()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                \r\n                <DialogContent dividers sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                    {loading ? \r\n                        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                            <CircularProgress />\r\n                        </div>\r\n                    :\r\n                        <>\r\n                            <TextField autoFocus={true} label=\"Mật khẩu mới\" variant=\"outlined\" type={inputPassword.openNewPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeNewPassword(e.target.value)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={handleClickShowNewPassword} sx={{padding: '1px'}}> {inputPassword.openNewPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n\r\n                            <TextField label=\"Mật khẩu hiện tại\" variant=\"outlined\" type={inputPassword.openCurrentPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeCurrentPassword(e.target.value)} \r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={handleClickShowCurrentPassword} sx={{padding: '1px'}}> {inputPassword.openCurrentPassword  ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleChangePassword()}>Đổi mật khẩu</Button>\r\n                            </Stack>\r\n                        </>\r\n                    }\r\n\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChangePassword","export default __webpack_public_path__ + \"static/media/logo.e5a4a234.png\";","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessingBackdrop(props) {\r\n    return (\r\n        <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: props.changeBackground ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.6)' }} open={props.openAlertProcessingBackdrop}>\r\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <CircularProgress color='inherit' />\r\n                <Typography sx={{mt: 1.4,}} variant='subtitle1'>{props.alertTitle}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n\r\nexport default AlertProcessingBackdrop\r\n","import React, { useState, useEffect } from 'react';\r\n//modal\r\nimport AlertProcessingBackdrop from '../components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n\r\n    const userDefault = {\r\n        isAuthenticated: false,\r\n        isLogin: false,\r\n        token: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(userDefault);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [isLogOutClick, setIsLogOutClick] = useState(false);\r\n    const [onConfirm, setOnConfirm] = useState(null);\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [isDialogChangePasswordOpen, setIsDialogChangePasswordOpen] = useState(false);\r\n\r\n    const [isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard] = useState(false);\r\n\r\n    const loginContext = (userContextLogin) => {\r\n        setUser({ ...userContextLogin });\r\n        setLoading(false);\r\n    };\r\n\r\n    const triggerAlert = (confirmCallback) => {\r\n        setAlertVisible(true);\r\n        setIsLogOutClick(true);\r\n        setOnConfirm(() => confirmCallback);\r\n    };\r\n\r\n    const confirmAlert = () => {\r\n        if (onConfirm) onConfirm();\r\n        setIsLogOutClick(false);\r\n        resetAlert();\r\n    };\r\n\r\n    const resetAlert = () => {\r\n        setAlertVisible(false);\r\n        setIsLogOutClick(false);\r\n        setOnConfirm(null);\r\n    };\r\n\r\n    const logoutContext = () => {\r\n        setUser({ ...userDefault });\r\n    }\r\n\r\n    const loadingContext = (loading) => {\r\n        setLoading(...loading);\r\n    }\r\n\r\n    // const fetchUser = async () => {\r\n    //     setOpenAlertProcessingBackdrop(true);\r\n    //     const response = await getUserLogin();\r\n    //     setUser({\r\n    //             isAuthenticated: true, \r\n    //             isLogin: true,\r\n    //             userId: response.userId,\r\n    //             userFullName: response.userFullName,\r\n    //             positionName: response.positionName\r\n    //         }) \r\n    //     setLoading(false);\r\n    //     setOpenAlertProcessingBackdrop(false);\r\n    // }\r\n\r\n    const parseJwt = (token) => {\r\n        try {\r\n          return JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n    };\r\n\r\n    const checkJWTExpire = () => {\r\n        let result = false;\r\n        let getJWT = localStorage.getItem('jwt');\r\n        if(getJWT){\r\n            let decodeJWT = parseJwt(getJWT);\r\n            let currentDate  = new Date();\r\n            if(decodeJWT.exp * 1000 < currentDate.getTime()) {\r\n                //console.log('Token đã hết hạn hoặc không tồn tại')\r\n                localStorage.removeItem('jwt'); //xóa localStorage\r\n                localStorage.removeItem('userLogin');\r\n                sessionStorage.clear();\r\n                return result \r\n            }\r\n            else{\r\n                //console.log('token còn hạn');\r\n                result = true;\r\n                return result\r\n            }\r\n        }\r\n        else{\r\n            localStorage.removeItem('userLogin');\r\n            return result\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n        if(getUserLogin){\r\n            const result = checkJWTExpire();\r\n            if(result){\r\n                const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n                setUser(getUserLogin);\r\n            }else{\r\n                //không có token\r\n                setUser(userDefault);\r\n            }\r\n        }else{\r\n            localStorage.removeItem('jwt'); //xóa localStorage\r\n            setUser(userDefault);\r\n        }\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <UserContext.Provider \r\n                value={{ user, loading, loadingContext, loginContext, \r\n                    logoutContext, alertVisible, triggerAlert, confirmAlert, resetAlert, isLogOutClick,\r\n                    isDialogChangePasswordOpen, setIsDialogChangePasswordOpen,\r\n                    isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard\r\n                }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop}\r\n                alertTitle={'Đang tải thông tin người dùng'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import * as signalR from '@microsoft/signalr';\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nlet connection = null; // Biến toàn cục lưu trữ kết nối SignalR\r\n\r\n// Hàm khởi tạo và kết nối SignalR\r\nconst startSignalRConnection = async (token) => {\r\n    if (connection) {\r\n        //console.log('SignalR connection already established.');\r\n        return connection;\r\n    }\r\n\r\n    connection = new signalR.HubConnectionBuilder()\r\n        .withUrl(`${backendURL}/notificationHub`, {\r\n            accessTokenFactory: () => token,\r\n            transport: signalR.HttpTransportType.WebSockets |\r\n                        signalR.HttpTransportType.ServerSentEvents |\r\n                        signalR.HttpTransportType.LongPolling\r\n        })\r\n        .withAutomaticReconnect([0, 2000, 10000, 30000])\r\n        .configureLogging(signalR.LogLevel.Information)\r\n        .build();\r\n\r\n    // Khởi tạo kết nối, trả về promise để xử lý sau\r\n    try {\r\n        await connection.start(); // Bắt đầu kết nối\r\n        //console.log(\"Connected to SignalR hub.\");\r\n\r\n        // Đăng ký sự kiện nhận tin nhắn, gọi callback khi nhận được tin nhắn\r\n        connection.on(\"ReceiveMessage\", (message) => {\r\n            //console.log(\"Received message:\", message);\r\n            if (onReceiveMessage) {\r\n                onReceiveMessage(message); // Gọi callback được truyền vào\r\n            }\r\n        });\r\n\r\n    } catch (error) {\r\n        //console.error(\"Error connecting to SignalR hub:\", error);\r\n        setTimeout(() => startSignalRConnection(token, onReceiveMessage), 5000); // Thử kết nối lại sau 5 giây nếu gặp lỗi\r\n    }\r\n};\r\n\r\n// Hàm đăng ký sự kiện ReceiveMessage\r\nconst onReceiveMessage = (callback) => {\r\n    if (connection) {\r\n        connection.on(\"ReceiveMessage\", callback);\r\n    } else {\r\n        //console.error(\"Connection has not been established yet.\");\r\n    }\r\n};\r\n\r\n// Hàm dừng kết nối SignalR\r\nconst stopSignalRConnection = async () => {\r\n    if (connection) {\r\n        try {\r\n            await connection.stop();\r\n            //console.log(\"Disconnected from SignalR hub.\");\r\n            connection = null;\r\n        } catch (error) {\r\n            //console.error(\"Error disconnecting from SignalR hub:\", error);\r\n        }\r\n    }\r\n};\r\n\r\nconst removeFromGroup = async () => {\r\n    if (connection) {\r\n        try {\r\n            await connection.invoke('RemoveFromGroup');\r\n            //console.log(\"User đã logout SignalR.\");\r\n        } catch (error) {\r\n            //console.error(`Failed to remove user from group: ${error}`);\r\n        }\r\n    } else {\r\n        //console.error(\"Connection has not been established yet.\");\r\n    }\r\n};\r\n\r\n// Hàm kiểm tra nếu đã kết nối\r\nconst isConnected = () => {\r\n    return connection !== null;\r\n};\r\n\r\nexport {\r\n    startSignalRConnection , stopSignalRConnection, onReceiveMessage, removeFromGroup, isConnected\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n//modal\r\n//import UserManual from '../ManageUserManual/UserManual';\r\nimport ChangePassword from '../ManageChangePassword/ChangePassword';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//real-time\r\nimport {removeFromGroup} from '../../Service/SignalService';\r\n\r\nfunction Header(props) {\r\n\r\n  const { user, logoutContext, triggerAlert, isDialogChangePasswordOpen, setIsDialogChangePasswordOpen, isOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  // const [openModalUserManual, setOpenModalUserManual] = useState(false);\r\n  const [openModalChangePassword, setOpenModalChangePassword] = useState(false);\r\n\r\n  //mui state menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  \r\n  const open = Boolean(anchorEl);\r\n  \r\n  const handleClick = (event) => {\r\n    if(isOldDiseaseWithNullCodeWard === true){\r\n      event.preventDefault();\r\n    }else{\r\n      setAnchorEl(event.currentTarget)\r\n    }\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const actionNursing = [\r\n    { key: 'medicalRegister', maxWidth: '114px', label: 'Đăng ký khám', icon: <LocalHospitalIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/medicalregister\" },\r\n    { key: 'remind-examining', maxWidth: '95px', label: 'Nhắc khám', icon: <LocalPhoneIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/remind-examining\" },\r\n  ]\r\n\r\n  const actionDoctor = [\r\n    { key: 'examining', maxWidth: '100px', label: 'Khám bệnh', icon: <MedicationLiquidIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/doctor-examining\" },\r\n  ]\r\n\r\n  const actionAdmin = [\r\n    { key: 'statistical', maxWidth: '83px', label: 'Thống kê', icon: <BarChartIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/dashboard\" },\r\n  ]\r\n\r\n  const [userAction, setUserAction] = useState([]);\r\n\r\n  const handleChangeURL = (pathname) => {\r\n    const actionIndex = userAction.findIndex(action => action.to === pathname);\r\n    return actionIndex;\r\n  }\r\n\r\n  const value = handleChangeURL(props.location.pathname);\r\n\r\n  const handleLogout = () => {\r\n    if(user.positionName === 'Doctor'){\r\n      triggerAlert(async () => {\r\n        await removeFromGroup();\r\n        localStorage.removeItem('jwt');\r\n        localStorage.removeItem('userLogin');\r\n        logoutContext();\r\n        setAnchorEl(null);\r\n        history.push('/login');\r\n      });\r\n    }\r\n    \r\n    else{\r\n      localStorage.removeItem('jwt'); //xóa localStorage\r\n      localStorage.removeItem('userLogin');\r\n      logoutContext();\r\n      setAnchorEl(null);\r\n      history.push('/login');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isOldDiseaseWithNullCodeWard])\r\n  \r\n  useEffect(() => {\r\n    if(user.positionName === 'Nursing'){        \r\n      setUserAction(actionNursing);\r\n    }\r\n    else if(user.positionName === 'Doctor'){\r\n      setUserAction(actionDoctor);\r\n    }\r\n    else if(user.positionName === 'Admin'){\r\n      setUserAction(actionAdmin);\r\n    }\r\n  }, [user])\r\n  \r\n  if(location.pathname !== '/login'){\r\n    return (\r\n      <>\r\n        <Box sx={{ width: '100%'}} >\r\n          <AppBar sx={{position: 'unset'}}>\r\n            <Toolbar sx={{backgroundColor: '#cfe8fc', height: '78px'}}>\r\n              {/* <Link to=\"/\"> */}\r\n                <Avatar src={Logo} sx={{ width: 62, height: 62, mt: 'auto', mb: 'auto', mr: 4 }} />\r\n              {/* </Link> */}\r\n              {user.isAuthenticated === true || token ? \r\n                <>\r\n                  <BottomNavigation showLabels value={value}\r\n                    sx={{display: 'flex', justifyContent: 'flex-start', backgroundColor: '#cfe8fc', flexGrow: 1}}>\r\n                    {userAction.map(actionItem => (\r\n                      <BottomNavigationAction\r\n                        key={actionItem.key}\r\n                        label={actionItem.label}\r\n                        icon={actionItem.icon}\r\n                        LinkComponent={actionItem.LinkComponent}\r\n                        to={actionItem.to}\r\n                        sx={{color: '#000', maxWidth: actionItem.maxWidth}}\r\n                      />\r\n                    ))}  \r\n                  </BottomNavigation>\r\n\r\n                  <Button onClick={(e) => handleClick(e)} sx={{color: '#000', textTransform: 'none'}}>{user.userFullName}</Button>\r\n                  <Menu anchorEl={anchorEl} open={open} onClose={() => handleClose()}>\r\n                    <MenuItem onClick={() => [setOpenModalChangePassword(true), setIsDialogChangePasswordOpen(true), setAnchorEl(null)]}>Đổi mật khẩu</MenuItem>\r\n                    <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                  </Menu>\r\n                  {/* <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} /> */}\r\n                </>\r\n                :\r\n                  <>\r\n                    <Box sx={{position: 'absolute', right: 22}}>\r\n                      <NavLink exact to=\"/login\"><Button sx={{textTransform: 'none', color: '#000'}}>Đăng nhập</Button></NavLink>\r\n                      {/* <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} /> */}\r\n                    </Box>\r\n                  </>\r\n                }            \r\n            </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n  \r\n        {/* <UserManual openModalUserManual={openModalUserManual} setOpenModalUserManual={setOpenModalUserManual}/> */}\r\n        <ChangePassword openModalChangePassword={openModalChangePassword} setOpenModalChangePassword={setOpenModalChangePassword} setIsDialogChangePasswordOpen={setIsDialogChangePasswordOpen}/>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst PrivateRoutes = (props) => {\n  const token = localStorage.getItem('jwt');\n  const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\n\n  if (token && getUserLogin) {\n    return (\n      <>\n        <Route path={props.path} component={props.component}></Route>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <Redirect to='/login'></Redirect>\n      </>\n    )\n  }\n};\nexport default PrivateRoutes;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../ErrorPage/Page500.scss\";\n\nconst Page404 = () => {\n\n  let history = useHistory();\n\n  return (\n    <div>\n      <div className=\"section\">\n        <h1 className=\"error\">404</h1>\n        <div className=\"page\">Trang mà bạn đang truy cập không tồn tại.</div>\n      </div>\n    </div>\n  );\n};\nexport default Page404;\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CreateAccount = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleCloseModalRegister = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalRegister(false);\r\n      }\r\n    }\r\n\r\n    const position = [\r\n      {id: '1', positionName: 'Điều dưỡng'},\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n          <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalRegister} onClose={(event, reason) => handleCloseModalRegister(event, reason)} disableEscapeKeyDown={true}  >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n            <IconButton onClick={() => handleCloseModalRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n              <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} />\r\n              <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }}/>\r\n              <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '46ch', mb: 2.5 }} \r\n                InputProps={{ // <-- This is where the toggle button is added.\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <Autocomplete options={position.map((option) => option.positionName)} renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} sx={{ width: '45.95ch', mb: 2.5 }}/>\r\n              <Stack spacing={2} direction=\"column\">\r\n                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleCloseModalRegister()}>Tạo tài khoản</Button>\r\n              </Stack>\r\n            \r\n            </DialogContent>\r\n          </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAccount","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst createMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/Register`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createMedicalBackRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/BackRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createCurrentDoctorExamining = async (userIdDoctor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/SetDoctorExaming/${userIdDoctor}`, \r\n        {}, // Body của request, có thể là {} hoặc object\r\n        {\r\n            headers: {\r\n                \"content-type\": \"text/plain; charset=utf-8\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddPredecessor = async (dataPredecessor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddPredecessor`, dataPredecessor,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddMedicalBook = async (dataMedicalBook) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddMedicalBook`, dataMedicalBook,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createNotificationForMedicalRegister = async () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const medicalRegisterMessage = true\r\n    return await axios.post(`${backendURL}/api/Notification/SendSignalRGroup?groupId=doctor`, medicalRegisterMessage,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getRegistersByDateNow = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetRegistersByDateNow`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveRegister = async (dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveOldRegister = async (dayOfBirth, patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}&patientId=${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListOldDisease = async (patientId, phone, fullName, dayOfBirth, gender) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/SearchPatients?patientId=${patientId}&phone=${phone}&fullName=${fullName}&dayOfBirth=${dayOfBirth}&gender=${gender}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getVaccinationByPatientId = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetVaccinationByPatientId/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getCurrentDoctorExamining = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetDoctorExamining`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalDetailPatient = async (id) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/DetailPatient/${id}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalBook = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetMediacalBook?medicalRegisterId=${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdatePredecessor = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdatePredecessor/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdateMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdateMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentDate = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentDate/${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentsNextWeek = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsNextWeek`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getAppointmentsToday = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsToday`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst updateMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/EditRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateMedicalState = async (id, state) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateState?id=${id}&state=${state}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateStateAppointment = async (dataAppointment, stateAppointment) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateStateAppointment/${dataAppointment.medicalBookId}?appointmentDate=${dataAppointment.appointmentDate}&stateAppointment=${stateAppointment}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst deleteMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.delete(`${backendURL}/api/Medical/DeleteMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    createMedicalRegister, createMedicalBackRegister, createCurrentDoctorExamining, createAddPredecessor, createAddMedicalBook, createNotificationForMedicalRegister,\r\n    getRegistersByDateNow, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister, getListOldDisease, getVaccinationByPatientId, getCurrentDoctorExamining, getMedicalDetailPatient, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook, getAppointmentDate, getAppointmentsNextWeek, getAppointmentsToday,\r\n    updateMedicalRegister, updateMedicalState, updateStateAppointment,\r\n    deleteMedicalBook\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Register from '../ManageRegister/Register';\r\nimport { toast } from 'react-toastify';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//api\r\nimport { userLogin } from '../../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n//signal\r\nimport { startSignalRConnection } from '../../Service/SignalService';\r\n\r\nconst Login = () => {\r\n    const { user, loadingContext, loginContext } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [userAccount, setUserAccount] = useState({userName: '', password: ''})\r\n    const [openModalRegister, setOpenModalRegister] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const onChangeUserName = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                userName: value\r\n            }\r\n        }) \r\n    }\r\n\r\n    const onChangeUserPassword = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                password: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if(userAccount.userName === ''){\r\n            toast.error('Bạn chưa nhập tài khoản!')\r\n        }\r\n        else if(userAccount.password === ''){\r\n            toast.error('Bạn chưa nhập mật khẩu!');\r\n        }\r\n        else{\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const response = await userLogin(userAccount.userName, userAccount.password);\r\n            if(response.status !== 200){\r\n                toast.error(response.data);\r\n                setOpenAlertProcessingBackdrop(false);\r\n            }\r\n            else{\r\n                if(response.data.positionName === 'Doctor'){\r\n                    await startSignalRConnection(response.data.tokenDTO.token);\r\n                }\r\n\r\n                localStorage.setItem('jwt', response.data.tokenDTO.token)\r\n                const userLogin = {\r\n                    isAuthenticated: true, \r\n                    isLogin: true, \r\n                    userId: response.data.userId,\r\n                    userName: response.data.userName, \r\n                    userFullName: response.data.userFullName, \r\n                    positionName: response.data.positionName\r\n                }\r\n\r\n                localStorage.setItem('userLogin', JSON.stringify(userLogin))\r\n                loginContext(userLogin);\r\n                   \r\n                if(response.data.positionName === 'Nursing'){\r\n                    history.push('/medicalregister');\r\n                }\r\n                else if(response.data.positionName === 'Doctor'){\r\n                    history.push('/doctor-examining');\r\n                }\r\n                else if(response.data.positionName === 'Admin'){\r\n                    history.push('/dashboard');\r\n                }\r\n                setOpenAlertProcessingBackdrop(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleLogin();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAuthenticated === true) {\r\n            history.push('/');\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        const userLogin = localStorage.getItem('userLogin');\r\n        if (token && userLogin) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(openAlertProcessingBackdrop){\r\n                event.preventDefault();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [openAlertProcessingBackdrop])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box sx={{ mt: 3, borderRadius: '25px' }} >\r\n                    <Box sx={{ p: 7.6 }}>\r\n                        <Avatar src={Logo} sx={{ width: 120, height: 120, ml: 'auto', mr: 'auto', mb: 2 }} />\r\n                        <Typography sx={{ textAlign: 'center', textTransform: 'uppercase', fontWeight: 'bolder', fontSize: '1.15rem', mb: 2, color: '#4caf50' }} variant=\"h5\">Chương trình khám nhi khoa phát triển</Typography>\r\n                        <Box component=\"form\" autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                            <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                            <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 3 }} \r\n                            onChange={(e) => onChangeUserPassword(e.target.value)} onKeyDown={(e) => handlePressEnter(e)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6.5vh', width: '28ch' }} variant=\"contained\" style={{ margin: 'auto' }} onClick={(e) => handleLogin()}>Đăng nhập</Button>\r\n                                <Typography sx={{textAlign: 'center', color: 'red', fontSize: '18px'}} variant=\"subtitle1\"><strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Quên mật khẩu</strong></Typography>\r\n                                <Typography sx={{textAlign: 'center', mt: '10px !important'}} variant=\"subtitle1\">Chưa có tài khoản? <strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Đăng ký</strong></Typography>\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Register\r\n                openModalRegister={openModalRegister} setOpenModalRegister={setOpenModalRegister}\r\n            />\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang đăng nhập'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessing(props) {\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={props.openAlertProcessing} disableEscapeKeyDown={true}>\r\n                <DialogContent>\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <CircularProgress/>\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang xử lý...</Typography>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertProcessing","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getListProvince = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/ListProvince`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListDistrict = async (provinceId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListDistrictByIdProvince/${provinceId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListWard = async (districtId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListWardByIdDistrict/${districtId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getFullAddressByIdWard = async (codeWard) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetFullAddressByIdWard/${codeWard}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getListProvince, getListDistrict, getListWard, getFullAddressByIdWard\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport { Autocomplete } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//lodash\r\nimport _ from 'lodash';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { updateMedicalRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalService';\r\n\r\nfunction ManageInfoPantients(props) {\r\n  const dataPatientInfoDefault = {\r\n    examinationId: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    headCircumference: \"\",\r\n    reason: \"\",\r\n    vaccination: false,\r\n    id: \"\",\r\n    patient: {\r\n      identifier: \"\",\r\n      address: \"\",\r\n      fullName: \"\",\r\n      dayOfBirth: null,\r\n      codeWard: \"\",\r\n      gender: true,\r\n      fullNameMother: \"\",\r\n      phoneMother: \"\",\r\n      fullNameFather: \"\",\r\n      phoneFather: \"\",\r\n      patientId: \"\"\r\n    }\r\n  }\r\n\r\n  const dataPatientInfoErrorDefault = {\r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    examiningSession: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n  } \r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const selectedAutoCompleteDefault = { \r\n    gender: { value: null, openOption: false }, \r\n    examiningSession: {value: null, openOption: false, loading: false},\r\n    province: { value: null, openOption: false }, \r\n    district: { value: null, openOption: false }, \r\n    ward: { value: null, openOption: false },\r\n  }\r\n\r\n  const typingRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  const [dataPatientInfoNotEdit, setDataPatientInfoNotEdit] = useState();\r\n  const [dataPatientInfo, setDataPatientInfo] = useState(dataPatientInfoDefault);\r\n  const [dataPatientInfoError, setDataPatientInfoError] = useState(dataPatientInfoErrorDefault);\r\n    \r\n  const [selectedAutoComplete, setSelectedAutoComplete] = useState(selectedAutoCompleteDefault);\r\n\r\n  const [listExaminingSession, setListExaminingSession] = useState([]);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f',\r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -8],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.gender.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'ExaminingSession'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.examiningSession.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else{\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      //const _dataPatientInfoError = {...dataPatientInfoError};\r\n      // if(fieldName === 'patientId'){\r\n      //   _dataPatientInfoError.patientId.title = '';\r\n      //   _dataPatientInfoError.patientId.openTooltip = false;\r\n      //   setDataPatientInfoError(_dataPatientInfoError);\r\n      // }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.dayOfBirth.title = '';\r\n      //     _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientInfoError.dayOfBirth.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneMother.title = '';\r\n      //     _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneMother.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneFather'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneFather.title = '';\r\n      //     _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneFather.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'Gender'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.gender.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'ExaminingSession'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n      //     prevSelectedAutoComplete.examiningSession.openOption = false\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Province'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.province.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'District'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.district.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Ward'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.ward.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.gender.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'ExaminingSession'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n          prevSelectedAutoComplete.examiningSession.openOption = false\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.district.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.ward.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n  \r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n  \r\n      return (lowercasedFullName.includes(lowercasedInput) || initials.includes(lowercasedInput));\r\n    });\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientInfoError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientInfoError.identifier.openTooltip = true;\r\n          _dataPatientInfoError.identifier.isError = true;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n        else{\r\n          setDataPatientInfo(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientInfoError.identifier.title = '';\r\n          _dataPatientInfoError.identifier.openTooltip = false;\r\n          _dataPatientInfoError.identifier.isError = false;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.identifier.title = '';\r\n      _dataPatientInfoError.identifier.openTooltip = false;\r\n      _dataPatientInfoError.identifier.isError = false;\r\n      _dataPatientInfoError.identifier.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n    \r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.fullName = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n    \r\n      if(dataPatientInfoError.fullName.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullName.title = '';\r\n        _dataPatientInfoError.fullName.openTooltip = false;\r\n        _dataPatientInfoError.fullName.isError = false;\r\n        _dataPatientInfoError.fullName.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = async (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n    \r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n            \r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n    \r\n        if(today < takenValue || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientInfoError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n          _dataPatientInfoError.dayOfBirth.isError = true;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n    \r\n        else{\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.dayOfBirth = formattedDate\r\n            return {...prevDataPatientInfo}\r\n          })\r\n    \r\n          _dataPatientInfoError.dayOfBirth.title = '';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n          _dataPatientInfoError.dayOfBirth.isError = false;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n\r\n          onChangeDOBToGetExaminingSession(formattedDate);\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onChangeDOBToGetExaminingSession = async (formattedDate) => {\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.value = null\r\n      return {...prevSelectedAutoComplete}\r\n    })\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = true\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(formattedDate);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = false\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.patient.gender = value.genderValue\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n    \r\n    if(dataPatientInfoError.gender.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.gender.isError = false;\r\n      _dataPatientInfoError.gender.title = '';\r\n      _dataPatientInfoError.gender.openTooltip = false;\r\n      _dataPatientInfoError.gender.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectExaminingSession = (e, value) => {\r\n    if(focusField === 'examiningSession'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.examinationId = value.id\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.examiningSession.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(dataPatientInfoError.examiningSession.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.examiningSession.isError = false;\r\n      _dataPatientInfoError.examiningSession.title = '';\r\n      _dataPatientInfoError.examiningSession.openTooltip = false;\r\n      _dataPatientInfoError.examiningSession.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.province.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(selectedAutoComplete.district.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.province.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.province.isError = false;\r\n      _dataPatientInfoError.province.title = '';\r\n      _dataPatientInfoError.province.openTooltip = false;\r\n      _dataPatientInfoError.province.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.district.value = value;\r\n      return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.district.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.district.isError = false;\r\n      _dataPatientInfoError.district.title = '';\r\n      _dataPatientInfoError.district.openTooltip = false;\r\n      _dataPatientInfoError.district.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n\r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.codeWard = value.code\r\n      return { ...prevDataPatientInfo }\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.ward.value = value;\r\n        return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(dataPatientInfoError.ward.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.ward.isError = false;\r\n      _dataPatientInfoError.ward.title = '';\r\n      _dataPatientInfoError.ward.openTooltip = false;\r\n      _dataPatientInfoError.ward.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    if(focusField === 'address'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.address = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.address.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.address.isError = false;\r\n        _dataPatientInfoError.address.title = '';\r\n        _dataPatientInfoError.address.openTooltip = false;\r\n        _dataPatientInfoError.address.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    if(focusField === 'fullNameMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameMother = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(focusField === 'phoneMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneMother.openTooltip = true;\r\n          _dataPatientInfoError.phoneMother.isError = true;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n          \r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneMother = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n      \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n      \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 10)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneMother.title = '';\r\n      _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      _dataPatientInfoError.phoneMother.isError = false;\r\n      _dataPatientInfoError.phoneMother.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameFather = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneFather.openTooltip = true;\r\n          _dataPatientInfoError.phoneFather.isError = true;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n\r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneFather = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n                \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n                \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneFather.title = '';\r\n      _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      _dataPatientInfoError.phoneFather.isError = false;\r\n      _dataPatientInfoError.phoneFather.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    if(focusField === 'height'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.height = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.height.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.height.title = '';\r\n        _dataPatientInfoError.height.openTooltip = false;\r\n        _dataPatientInfoError.height.isError = false;\r\n        _dataPatientInfoError.height.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    if(focusField === 'weight'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.weight = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.weight.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.weight.title = '';\r\n        _dataPatientInfoError.weight.openTooltip = false;\r\n        _dataPatientInfoError.weight.isError = false;\r\n        _dataPatientInfoError.weight.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    if(focusField === 'headCircumference'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.headCircumference = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.headCircumference.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.headCircumference.title = '';\r\n        _dataPatientInfoError.headCircumference.openTooltip = false;\r\n        _dataPatientInfoError.headCircumference.isError = false;\r\n        _dataPatientInfoError.headCircumference.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.vaccination = bool\r\n      return {...prevDataPatientInfo}\r\n    })\r\n  }\r\n\r\n  const handleCloseModalInfoPantients = (event, reason) => {\r\n    if(reason && reason === \"backdropClick\"){\r\n      return;\r\n    }\r\n    else{\r\n      setListDistrict(prevListDistrict => {\r\n        prevListDistrict.loading = false\r\n        prevListDistrict.list = []\r\n        return {...prevListDistrict}\r\n      })\r\n      setListWard(prevListWard => {\r\n        prevListWard.loading = false\r\n        prevListWard.list = []\r\n        return {...prevListWard}\r\n      })\r\n      setListExaminingSession([]);\r\n      setSelectedAutoComplete(selectedAutoCompleteDefault);\r\n      setDataPatientInfo(dataPatientInfoDefault);\r\n      setDataPatientInfoNotEdit('');\r\n      setDataPatientInfoError(dataPatientInfoErrorDefault);\r\n      setLoading(true);\r\n      props.setSelectedPantientInfo();\r\n      props.setOpenModalInfoPantients(false);\r\n    }\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const responseListProvince = await getListProvince();\r\n    setListProvince(responseListProvince);\r\n  }\r\n\r\n  const handleApplyPantientDataToField = async () => {\r\n    setOpenAlertProcessing(true);   \r\n      \r\n    const editPropsDataPatientInfo = {...dataPatientInfo};\r\n    editPropsDataPatientInfo.examinationId = props.selectedPantientInfo.examinationId\r\n    editPropsDataPatientInfo.height = props.selectedPantientInfo.height\r\n    editPropsDataPatientInfo.weight = props.selectedPantientInfo.weight\r\n    editPropsDataPatientInfo.headCircumference = props.selectedPantientInfo.headCircumference\r\n    editPropsDataPatientInfo.reason = props.selectedPantientInfo.reason\r\n    editPropsDataPatientInfo.vaccination = props.selectedPantientInfo.vaccination\r\n    editPropsDataPatientInfo.id = props.selectedPantientInfo.id\r\n    editPropsDataPatientInfo.patient.identifier = props.selectedPantientInfo.patient.identifier\r\n    editPropsDataPatientInfo.patient.address = props.selectedPantientInfo.patient.address\r\n    editPropsDataPatientInfo.patient.fullName = props.selectedPantientInfo.patient.fullName\r\n    editPropsDataPatientInfo.patient.dayOfBirth = props.selectedPantientInfo.patient.dayOfBirth\r\n    editPropsDataPatientInfo.patient.codeWard = props.selectedPantientInfo.patient.codeWard\r\n    editPropsDataPatientInfo.patient.gender = props.selectedPantientInfo.patient.gender\r\n    editPropsDataPatientInfo.patient.fullNameMother = props.selectedPantientInfo.patient.fullNameMother\r\n    editPropsDataPatientInfo.patient.phoneMother = props.selectedPantientInfo.patient.phoneMother\r\n    editPropsDataPatientInfo.patient.fullNameFather = props.selectedPantientInfo.patient.fullNameFather\r\n    editPropsDataPatientInfo.patient.phoneFather = props.selectedPantientInfo.patient.phoneFather\r\n    editPropsDataPatientInfo.patient.patientId = props.selectedPantientInfo.patient.patientId\r\n\r\n    setDataPatientInfo(_.cloneDeep(editPropsDataPatientInfo));\r\n    setDataPatientInfoNotEdit(_.cloneDeep(editPropsDataPatientInfo));\r\n        \r\n    const response = await getFullAddressByIdWard(props.selectedPantientInfo.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.list = responseListDistrict;\r\n      return {...prevListDistrict}\r\n    });\r\n    const responseListWard = await getListWard(response.districtCode);\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = responseListWard;\r\n      return {...prevListWard}\r\n    });\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(props.selectedPantientInfo.patient.dayOfBirth);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n     \r\n    const selectedGender = listGender.find(gender => gender.genderValue === props.selectedPantientInfo.patient.gender);\r\n    const indexListExamining = responseListMedicalExaminationsGiveRegister.exams.findIndex(examiningSession => examiningSession.id === props.selectedPantientInfo.examinationId)\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = selectedGender\r\n      prevSelectedAutoComplete.examiningSession.value = responseListMedicalExaminationsGiveRegister.exams[indexListExamining];\r\n      prevSelectedAutoComplete.province.value = listProvince[indexListProvince];\r\n      prevSelectedAutoComplete.district.value = responseListDistrict[indexListDistrict];\r\n      prevSelectedAutoComplete.ward.value = responseListWard[indexListWard];\r\n      return prevSelectedAutoComplete\r\n    })\r\n\r\n    setLoading(false);\r\n    setOpenAlertProcessing(false);   \r\n  }\r\n\r\n  const checkValidate = () => {\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      let isValid = true;\r\n\r\n      if(dataPatientInfoError.identifier.title !== ''){\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.identifier.focus = true;\r\n          setFocusField('identifier');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullName === ''){\r\n        _dataPatientInfoError.fullName.title = 'Bạn chưa nhập họ tên';\r\n        _dataPatientInfoError.fullName.openTooltip = true;\r\n        _dataPatientInfoError.fullName.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullName.focus = true;\r\n          setFocusField('fullName');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(dataPatientInfo.patient.gender === ''){\r\n        _dataPatientInfoError.gender.title = 'Bạn chưa chọn giới tính';\r\n        _dataPatientInfoError.gender.isError = true;\r\n        _dataPatientInfoError.gender.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.gender.focus = true;\r\n          setFocusField('gender');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.dayOfBirth === ''){\r\n        _dataPatientInfoError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfoError.dayOfBirth.title !== ''){\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.examiningSession.value === null){\r\n        _dataPatientInfoError.examiningSession.title = 'Bạn chưa chọn lại kỳ khám';\r\n        _dataPatientInfoError.examiningSession.isError = true;\r\n        _dataPatientInfoError.examiningSession.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.examiningSession.focus = true;\r\n          setFocusField('examiningSession');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.province.value === null){\r\n        _dataPatientInfoError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n        _dataPatientInfoError.province.isError = true;\r\n        _dataPatientInfoError.province.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.province.focus = true;\r\n          setFocusField('province');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.district.value === null){\r\n        _dataPatientInfoError.district.title = 'Bạn chưa chọn quận huyện';\r\n        _dataPatientInfoError.district.isError = true;\r\n        _dataPatientInfoError.district.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.district.focus = true;\r\n          setFocusField('district');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.ward.value === null){\r\n        _dataPatientInfoError.ward.title = 'Bạn chưa chọn phường xã';\r\n        _dataPatientInfoError.ward.isError = true;\r\n        _dataPatientInfoError.ward.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.ward.focus = true;\r\n          setFocusField('ward');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.address === ''){\r\n        _dataPatientInfoError.address.title = 'Bạn chưa nhập địa chỉ';\r\n        _dataPatientInfoError.address.isError = true;\r\n        _dataPatientInfoError.address.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.address.focus = true;\r\n          setFocusField('address');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullNameMother === '' && dataPatientInfo.patient.fullNameFather === ''){\r\n        _dataPatientInfoError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n        _dataPatientInfoError.fullNameMother.isError = true;\r\n        _dataPatientInfoError.fullNameMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullNameMother.focus = true;\r\n          setFocusField('fullNameMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.phoneMother === '' && dataPatientInfo.patient.phoneFather === ''){\r\n        _dataPatientInfoError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        _dataPatientInfoError.phoneMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneMother.title !== ''){\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneFather.title !== ''){\r\n        _dataPatientInfoError.phoneFather.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneFather.focus = true;\r\n          setFocusField('phoneFather');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.height === ''){\r\n        _dataPatientInfoError.height.title = 'Bạn chưa nhập chiều cao';\r\n        _dataPatientInfoError.height.isError = true;\r\n        _dataPatientInfoError.height.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.height.focus = true;\r\n          setFocusField('height');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.weight === ''){\r\n        _dataPatientInfoError.weight.title = 'Bạn chưa nhập cân nặng';\r\n        _dataPatientInfoError.weight.isError = true;\r\n        _dataPatientInfoError.weight.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.weight.focus = true;\r\n          setFocusField('weight');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.headCircumference === ''){\r\n        _dataPatientInfoError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n        _dataPatientInfoError.headCircumference.isError = true;\r\n        _dataPatientInfoError.headCircumference.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.headCircumference.focus = true;\r\n          setFocusField('headCircumference');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      // if(dataPatientInfo.reason === ''){\r\n      //   _dataPatientInfoError.reason.isError = true;\r\n      //   isValid = false;\r\n      // }\r\n\r\n      if(_.isEqual(dataPatientInfo, dataPatientInfoNotEdit) === true){\r\n        toast.warning('Hiện không có gì để cập nhật', {toastId: 'warning1'});\r\n        isValid = false;\r\n      }\r\n\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n      return isValid;\r\n  }\r\n\r\n  const handleUpdateMedicalRegister = async () => {\r\n    if(checkValidate()){\r\n      setOpenAlertProcessing(true);\r\n      const response = await updateMedicalRegister(dataPatientInfo);\r\n      if(response.status === 200){\r\n        toast.success(response.data, {toastId: 'success1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        props.setIsEditedInfo(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      else{\r\n        toast.error(response.data, {toastId: 'error1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      setOpenAlertProcessing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(listProvince.length === 0){\r\n      handleGetListProvince();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.selectedPantientInfo){\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n      handleApplyPantientDataToField();\r\n    }\r\n  }, [props.selectedPantientInfo])\r\n\r\n  useEffect(() => {\r\n    if(props.openModalInfoPantients && props.isContinueUpdateMedicalRegister && loading === false){\r\n      handleUpdateMedicalRegister();\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n    }\r\n  }, [props.isContinueUpdateMedicalRegister, loading])\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth={true} maxWidth='md' open={props.openModalInfoPantients} onClose={(event, reason) => handleCloseModalInfoPantients(event, reason)} >\r\n        <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center', color: 'blue' }}>Thông tin bệnh nhân</DialogTitle>\r\n        <IconButton onClick={() => handleCloseModalInfoPantients()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n          <CloseIcon fontSize='medium'/>\r\n        </IconButton>\r\n        <DialogContent dividers sx={{pt: 1.5, pb: 1.5}}>\r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', pl: 4.2, pr: 4.2, mb: 0.8}}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.identifier.title}</h6>} open={dataPatientInfoError.identifier.openTooltip} placement='left'> \r\n              <TextField error={true ? dataPatientInfoError.identifier.isError === true : false}\r\n                label=\"Mã định danh\" variant=\"outlined\" \r\n                sx={{width: '18%', '&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                inputProps={{ maxLength: 12 }}\r\n                inputRef={(input) => input && focusField === 'identifier' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.identifier}\r\n                onChange={(e) => onChangeIdentifier(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n                      \r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullName.title}</h6>} open={dataPatientInfoError.fullName.openTooltip} placement='top'\r\n              slotProps={{\r\n                popper: {\r\n                  modifiers: [\r\n                    {\r\n                      name: 'offset',\r\n                      options: { offset: [-10, -6], },\r\n                    },\r\n                  ],\r\n                },\r\n              }} \r\n            > \r\n              <TextField error={true ? dataPatientInfoError.fullName.isError === true : false}\r\n                label=\"Họ tên\" variant=\"outlined\" \r\n                sx={{width: '32%', '&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.fullName}\r\n                onChange={(e) => onChangeFullName(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.gender.title}</h6>} open={dataPatientInfoError.gender.openTooltip} placement='top'>\r\n              <Autocomplete \r\n                sx={{width: '12%', marginTop: '7.5px'}}\r\n                options={listGender} \r\n                getOptionLabel={(option) => option.genderName}\r\n                value={selectedAutoComplete.gender.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.genderName}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectGender(e, value)}\r\n                open={selectedAutoComplete.gender.openOption}\r\n                onFocus={() => handleFocus('Gender')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Giới tính\" \r\n                    inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                    error={true ? dataPatientInfoError.gender.isError === true : false}                     \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <DemoContainer components={['DatePicker']}>  \r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.dayOfBirth.title}</h6>} open={dataPatientInfoError.dayOfBirth.openTooltip}>    \r\n                  <Box sx={{width: 110}}>\r\n                    <DatePicker label=\"Ngày sinh\" \r\n                      format='DD/MM/YYYY' defaultValue={moment(dataPatientInfo.patient.dayOfBirth)}\r\n                      disableFuture={true} disableOpenPicker \r\n                      slotProps={{ \r\n                        textField: \r\n                          { \r\n                            inputRef: dateFieldRef,\r\n                            error: true ? dataPatientInfoError.dayOfBirth.isError === true : false,\r\n                            onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                          }\r\n                        }}\r\n                      onChange={(value) => onChangeDOB(value)}\r\n                    />\r\n                  </Box>\r\n                </Tooltip>\r\n              </DemoContainer>\r\n            </ThemeProvider>\r\n          </LocalizationProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.examiningSession.title}</h6>} open={dataPatientInfoError.examiningSession.openTooltip} placement='right'>\r\n              <Autocomplete \r\n                sx={{width: '18%', mt: '7.5px'}}\r\n                options={listExaminingSession} \r\n                noOptionsText={selectedAutoComplete.examiningSession.loading ? 'Đang tải...' : ''}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.examiningSession.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectExaminingSession(e, value)}\r\n                open={selectedAutoComplete.examiningSession.openOption}\r\n                onFocus={() => handleFocus('ExaminingSession')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'ExaminingSession')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Kỳ khám\" \r\n                    inputRef={(input) => input && focusField === 'examiningSession' && input.focus()}\r\n                    error={true ? dataPatientInfoError.examiningSession.isError === true : false} \r\n                    sx={{'& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot': {pl: '6px', pr: '6px'}}}\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      endAdornment: (\r\n                        <>\r\n                          {selectedAutoComplete.examiningSession.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </>\r\n                      ),\r\n                    }} \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.province.title}</h6>} open={dataPatientInfoError.province.openTooltip} placement='left'>\r\n              <Autocomplete \r\n                sx={{width: '20%', mt: 2}}\r\n                options={listProvince} \r\n                filterOptions={filterOptions}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.province.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectProvine(e, value)}\r\n                open={selectedAutoComplete.province.openOption}\r\n                onFocus={() => handleFocus('Province')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Thành phố\"\r\n                    inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                    error={true ? dataPatientInfoError.province.isError === true : false}  \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.district.title}</h6>} open={dataPatientInfoError.district.openTooltip} placement='top'>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listDistrict.list} \r\n                  noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.district.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectDistrict(e, value)}\r\n                  open={selectedAutoComplete.district.openOption}\r\n                  onFocus={() => handleFocus('District')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Quận/huyện\" \r\n                      inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                      error={true ? dataPatientInfoError.district.isError === true : false} \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.ward.title}</h6>} open={dataPatientInfoError.ward.openTooltip}>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listWard.list}\r\n                  noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.ward.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectWard(e, value)}\r\n                  open={selectedAutoComplete.ward.openOption}\r\n                  onFocus={() => handleFocus('Ward')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Phường/Xã\" \r\n                      inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                      error={true ? dataPatientInfoError.ward.isError === true : false}  \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.address.title}</h6>} open={dataPatientInfoError.address.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.address.isError === true : false}\r\n                  label=\"Địa chỉ\" variant=\"outlined\" \r\n                  sx={{width: '36%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.address}\r\n                  onChange={(e) => onChangeAddress(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullNameMother.title}</h6>} open={dataPatientInfoError.fullNameMother.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.fullNameMother.isError === true : false}\r\n                  label=\"Họ tên mẹ\" variant=\"outlined\" \r\n                  sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.fullNameMother}\r\n                  onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                />    \r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneMother.title}</h6>} open={dataPatientInfoError.phoneMother.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.phoneMother.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneMother}\r\n                  onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <TextField \r\n              label=\"Họ tên cha\" variant=\"outlined\" sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n              defaultValue={dataPatientInfo.patient.fullNameFather}\r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n            />\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneFather.title}</h6>} open={dataPatientInfoError.phoneFather.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.phoneFather.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneFather}\r\n                  onChange={(e) => onChangePhoneFather(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.height.title}</h6>} open={dataPatientInfoError.height.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.height.isError === true : false}\r\n                  label='Chiều cao' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.height}\r\n                  onChange={(e) => onChangeHeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.weight.title}</h6>} open={dataPatientInfoError.weight.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.weight.isError === true : false}\r\n                  label='Cân nặng' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(kg)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.weight}\r\n                  onChange={(e) => onChangeWeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.headCircumference.title}</h6>} open={dataPatientInfoError.headCircumference.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.headCircumference.isError === true : false}\r\n                  label='Vòng đầu' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.headCircumference}\r\n                  onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <FormControlLabel sx={{width: '30%', mt: 2}} control={<Checkbox checked={dataPatientInfo.vaccination}/>} \r\n              label=\"Có tham gia tiêm ngừa\"\r\n              onChange={(e) => onChangeVaccination(e.target.checked)}\r\n            />  \r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{justifyContent: 'center'}}>\r\n          <Button variant=\"contained\" onClick={() => handleUpdateMedicalRegister()}>Sửa (F1)</Button>\r\n          <Button variant=\"contained\" color='secondary' onClick={(event, reason) => handleCloseModalInfoPantients(event, reason)}>Đóng (ESC)</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <AlertProcessing openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageInfoPantients","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//info pantients modal\r\nimport ManageInfoPantients from '../ManageInfoPantients/ManageInfoPantients';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//mui theme\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getRegistersByDateNow, getAppointmentsToday, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction ListPatientsRegister(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n  const [listPantientChipState, setListPantientChipState] = useState(\r\n    [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n    ]\r\n  )\r\n\r\n  const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n  \r\n  const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n  const [listDataPatientsAppointmentsToday, setListDataPatientsAppointmentsToday] = useState([]); \r\n  \r\n  const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n  const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n  const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n  const [selectedPantientInfo, setSelectedPantientInfo] = useState();\r\n  const [openModalInfoPantients, setOpenModalInfoPantients] = useState(false);\r\n  const [isContinueUpdateMedicalRegister, setIsContinueUpdateMedicalRegister] = useState();\r\n\r\n  const [isEditedInfo, setIsEditedInfo] = useState(false);\r\n\r\n  const renderPatientsStatus = (state) => {\r\n    if(state === 0 || state === 3){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterWaiting' />\r\n        </>\r\n      )\r\n    }\r\n    else if(state === 1){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterExamining' />\r\n        </>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterDone' />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSelectedChip = (chipIndex, chipLabel) => {\r\n    setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n    if(chipIndex === 0){\r\n      const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n      setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n    }\r\n    else if(chipIndex === 1){\r\n      const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n      setListDataPatientsRegisterState(listPantientRegisterDone);\r\n    }\r\n    else if(chipIndex === 2){\r\n      setListDataPatientsRegisterSort(listDataPatientsAppointmentsToday);\r\n      setListDataPatientsRegisterState(listDataPatientsAppointmentsToday);\r\n    }\r\n  };\r\n\r\n  const handleSearchPantient = (value) => {\r\n    const takenValue = value;\r\n    setSearchPatientsQuery(takenValue);\r\n\r\n    if(value === ''){\r\n      setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n    }else{\r\n      setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n    }\r\n  }\r\n\r\n  const searchPatients = (patients, searchTerm) => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return patients.filter(patientObj => {\r\n      const { patientCode, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n      return patientCode.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n    });\r\n  }\r\n\r\n  const handleSelectedPantientInfo = (patientsRegisterSortItem) => {\r\n    setSelectedPantientInfo(patientsRegisterSortItem);\r\n    setIsContinueUpdateMedicalRegister(true);\r\n    setOpenModalInfoPantients(true);\r\n  }\r\n\r\n  const handleSelectedPantientAppointmentsToday = async (patientsRegisterSortItem) => {\r\n    setOpenAlertProcessingBackdrop(true);\r\n    const responseVaccinationByPatientId = await getVaccinationByPatientId(patientsRegisterSortItem.patient.patientId);\r\n    const dataPantientOldOldDiseaseRegister = {\r\n      examinationId: patientsRegisterSortItem.patient.nextExamId,\r\n      oldDisease: true,\r\n      height: '', \r\n      weight: '',\r\n      headCircumference: '',\r\n      reason: '',\r\n      vaccination: responseVaccinationByPatientId.vaccination,\r\n      medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n      userIdDoctor: '',\r\n      patient: patientsRegisterSortItem.patient\r\n    }\r\n    props.setDataPantientAppointmentsToday(dataPantientOldOldDiseaseRegister)\r\n    setOpenAlertProcessingBackdrop(false);\r\n  }\r\n\r\n  const handleGetRegistersByDateNow = async () => {\r\n    setLoading(true);\r\n\r\n    const response = await getRegistersByDateNow();\r\n    const responseGetAppointmentsToday = await getAppointmentsToday();\r\n\r\n    let updatedList = [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: responseGetAppointmentsToday.length }\r\n    ]\r\n\r\n    let _listDataPatientsAppointmentsToday\r\n    if(responseGetAppointmentsToday.length > 0){\r\n      _listDataPatientsAppointmentsToday = responseGetAppointmentsToday.map((item) => {\r\n        const result = {\r\n          patient : {\r\n            identifier: item.identifier,\r\n            patientId: item.patientId,\r\n            patientCode: item.patientCode,\r\n            fullName: item.patientFullName,\r\n            gender: item.gender,\r\n            dayOfBirth: item.dateOfBirth,\r\n            fullNameMother: item.fullNameMother,\r\n            phoneMother: item.phoneMother,\r\n            fullNameFather: item.fullNameFather,\r\n            phoneFather: item.phoneFather,\r\n            address: item.address,\r\n            fullAddress: item.fullAddress,\r\n            codeWard: item.codeWard,\r\n            nextExamId: item.nextExamId\r\n          }\r\n        }\r\n        return result;\r\n      })\r\n      setListDataPatientsAppointmentsToday(_listDataPatientsAppointmentsToday);\r\n    }\r\n    else{\r\n      setListDataPatientsAppointmentsToday(responseGetAppointmentsToday)\r\n    }\r\n\r\n    if(response !== 400){\r\n      if(response.list.length !== 0){\r\n        setListDataPatientsRegister(response.list);\r\n        if(activeChip.chipOrder === 0){\r\n          const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám và tái khám\r\n          setListDataPatientsRegisterSort(_.cloneDeep(listPantientRegisterWaiting));\r\n          setListDataPatientsRegisterState(_.cloneDeep(listPantientRegisterWaiting));\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(_.cloneDeep(listPantientRegisterDone));\r\n          setListDataPatientsRegisterState(_.cloneDeep(listPantientRegisterDone));\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 2){\r\n          setListDataPatientsRegisterSort(_.cloneDeep(_listDataPatientsAppointmentsToday));\r\n          setListDataPatientsRegisterState(_.cloneDeep(_listDataPatientsAppointmentsToday));\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n      }\r\n    }\r\n    setListPantientChipState(updatedList);\r\n\r\n    if(isEditedInfo){\r\n      setIsEditedInfo(false);\r\n    }\r\n\r\n    props.setComponent1Loading(false);\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetRegistersByDateNow();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(openModalInfoPantients){\r\n      const handleKeyDown = (event) => {\r\n        if(event.keyCode === 112){\r\n          event.preventDefault()\r\n          setIsContinueUpdateMedicalRegister(true);\r\n          //nhấn F1 để sửa thông tin đăng ký khám\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [openModalInfoPantients, isContinueUpdateMedicalRegister]);\r\n\r\n  useEffect(() => {\r\n    if(isEditedInfo){\r\n      handleGetRegistersByDateNow();\r\n    }\r\n  }, [isEditedInfo, listDataPatientsRegister, listDataPatientsRegisterSort])\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true && isEditedInfo === false){\r\n      setListDataPatientsRegister([]);\r\n      setListDataPatientsRegisterSort([]);\r\n      setListDataPatientsRegisterState([]);\r\n      handleGetRegistersByDateNow();\r\n      props.setCompleteMedicalRegister(false);\r\n    }\r\n  }, [props.completeMedicalRegister, listDataPatientsRegister, listDataPatientsRegisterSort])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{p: 0}}>\r\n        {/* <Typography variant='h6' sx={{color: 'red', mb: 0, fontWeight: 'bolder', fontSize: '1.16rem', marginBottom: '5px'}}>\r\n          {loading ? \r\n            <Skeleton /> \r\n          : \r\n            <div style={{display: 'flex', height: '30px'}}>\r\n              {props.currentDoctorExamining.userIdDoctor !== '' ?\r\n              <>\r\n                <Typography variant='subbtitle1'>{`Bác sĩ khám hôm nay: ${props.currentDoctorExamining.userFullName}`}</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Sửa'/>\r\n              </>\r\n              :\r\n              <>\r\n                <Typography variant='subbtitle1'>Chưa chọn bác sĩ khám hôm nay</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Thêm'/>\r\n              </>}\r\n            </div>\r\n          }\r\n        </Typography> */}\r\n\r\n        <div className='container' style={{border: '1px solid #fff', borderRadius: '10px', height: '590px', padding: 0, boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)'}}>\r\n          {loading ? \r\n             <>\r\n              <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                <CircularProgress/>\r\n                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n              </Box>        \r\n            </>\r\n          :\r\n            <>\r\n              <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                  <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                    <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                      onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                  </Badge>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n            \r\n              <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                <TextField sx={{mt: 0.2, mb: 1, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                  variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc SĐT' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    startAdornment: (\r\n                      <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                    ),\r\n                    endAdornment: (\r\n                      <InputAdornment position='end'>\r\n                        {searchPatientsQuery !== '' ? \r\n                          <CloseIcon sx={{cursor: 'pointer'}} \r\n                            titleAccess='Xóa'\r\n                            onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                          /> \r\n                        : \r\n                          null\r\n                        }\r\n                        </InputAdornment>  \r\n                      )\r\n                    }}>\r\n                  </TextField>\r\n              </Box>\r\n\r\n              <TableContainer component={Paper} sx={{ height: '465px', overflowX: 'scroll', borderBottomLeftRadius: '10px', borderBottomRightRadius: '10px' }}>\r\n                <Table stickyHeader sx={{ minWidth: 1200 }}>\r\n                  <TableHead>\r\n                    <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                      {activeChip.chipOrder === 2 ? \r\n                        null\r\n                      :\r\n                        <>\r\n                          <TableCell align=\"left\" sx={{fontSize: '0.95rem', p: '10px'}}>Trạng thái</TableCell>\r\n                          <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                        </>\r\n                      }\r\n                      <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {listDataPatientsRegisterSort.length !== 0 ?\r\n                      <>\r\n                        {listDataPatientsRegisterSort.map((patientsRegisterSortItem, patientsRegisterSortIndex) => (\r\n                          <TableRow hover role=\"checkbox\" key={patientsRegisterSortIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => activeChip.chipOrder === 2 ? handleSelectedPantientAppointmentsToday(patientsRegisterSortItem) : handleSelectedPantientInfo(patientsRegisterSortItem)}>\r\n                            {activeChip.chipOrder === 2 ? \r\n                              null\r\n                            :\r\n                              <>\r\n                                <TableCell align='center' sx={{width: '90px'}}>\r\n                                  <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.state === 0 || patientsRegisterSortItem.state === 3 ? 'Chờ khám' : patientsRegisterSortItem.state === 2 ? 'Đã khám' : 'Đang khám'}</Typography>} >\r\n                                    <span>{renderPatientsStatus(patientsRegisterSortItem.state)}</span>\r\n                                  </Tooltip>\r\n                                </TableCell>\r\n                                <TableCell align='left' sx={{width: '20px'}}>{patientsRegisterSortItem.order}</TableCell>\r\n                              </>\r\n                            }\r\n                            <TableCell align='left' sx={{width: '150px'}}>{patientsRegisterSortItem.patient.patientCode}</TableCell>\r\n                            <TableCell align='left' sx={{width: '200px'}}>{patientsRegisterSortItem.patient.fullName}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{patientsRegisterSortItem.patient.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{moment(patientsRegisterSortItem.patient.dayOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                            <TableCell align='left' sx={{width: '140px'}}>{patientsRegisterSortItem.patient.phoneMother !== '' ? patientsRegisterSortItem.patient.phoneMother : patientsRegisterSortItem.patient.phoneFather}</TableCell>\r\n                            <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 120}}>\r\n                              <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.patient.fullAddress}</Typography>} >\r\n                                <span>{patientsRegisterSortItem.patient.fullAddress}</span>\r\n                              </Tooltip>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))} \r\n                      </>\r\n                    :\r\n                      null\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </>\r\n          }\r\n        </div>\r\n      </Box>\r\n      \r\n      <AlertProcessingBackdrop openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n      />\r\n\r\n      <ManageInfoPantients \r\n        openModalInfoPantients={openModalInfoPantients} setOpenModalInfoPantients={setOpenModalInfoPantients}\r\n        selectedPantientInfo={selectedPantientInfo} setSelectedPantientInfo={setSelectedPantientInfo}\r\n        isContinueUpdateMedicalRegister={isContinueUpdateMedicalRegister} setIsContinueUpdateMedicalRegister={setIsContinueUpdateMedicalRegister}\r\n        setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        setIsEditedInfo={setIsEditedInfo}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListPatientsRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//modal\r\n// import AlertConfirmModal from '../ManageAlertConfirm/AlertConfirm';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//api\r\nimport { createMedicalRegister, createMedicalBackRegister, createNotificationForMedicalRegister, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister } from '../../Service/MedicalService';\r\n\r\nfunction ExaminingSession(props) {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [listExaminingSession, setListExaminingSession] = useState(null);\r\n\r\n    const { isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n    const onChangeRadioSelect = (value) => {\r\n        props.dataPatientsRegister.examinationId = value;\r\n    }\r\n\r\n    const handleListMedicalExaminationsGiveRegister = async () =>  {\r\n        if(props.dataPatientsRegister.oldDisease){\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveOldRegister(props.dataPatientsRegister.patient.dayOfBirth, props.dataPatientsRegister.patient.patientCode);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n        else{\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveRegister(props.dataPatientsRegister.patient.dayOfBirth);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    const handleMedicalRegister = async () => {\r\n        // //bệnh cũ\r\n        if(props.dataPatientsRegister.oldDisease === true && props.dataPatientsRegister.examinationId !== ''){\r\n            //là bênh mới đã đăng ký nhưng chưa từng khám bao giờ\r\n            if(listExaminingSession.isAppointment === false && listExaminingSession.oldExams.length === 0){\r\n                //setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                if(response.status === 200){\r\n                    await createNotificationForMedicalRegister();\r\n                    if(isOldDiseaseWithNullCodeWard){\r\n                        setIsOldDiseaseWithNullCodeWard(false);\r\n                    }\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n                setOpenAlertProcessing(false);\r\n            }\r\n            //có hẹn khám nhưng không nhắc khám hoặc đến trễ ngày hẹn khám\r\n            else{\r\n                //setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                if(response.status === 200){\r\n                    await createNotificationForMedicalRegister();\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n                setOpenAlertProcessing(false);\r\n            }\r\n        }\r\n        //bệnh mới\r\n        else{\r\n            //setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalRegister(props.dataPatientsRegister);\r\n\r\n            if(response.status === 200){\r\n                await createNotificationForMedicalRegister();\r\n                toast.success(response.data);\r\n                setListExaminingSession(null);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    const handleCloseConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n      };\r\n\r\n    const handleOpenConfirm = () => {\r\n        if(props.dataPatientsRegister.examinationId === ''){\r\n            // setIsConfirmOpen(false);\r\n            toast.error('Bạn chưa chọn kỳ khám', {toastId: 'error1'});\r\n        }\r\n        else{\r\n            //setIsConfirmOpen(true);\r\n            handleMedicalRegister();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.dataPatientsRegister.patient.dayOfBirth !== '' && props.openModalExaminingSession === true){\r\n            handleListMedicalExaminationsGiveRegister();\r\n        }\r\n    }, [props.openModalExaminingSession])\r\n\r\n    useEffect(() => {\r\n        if(props.isContinueSelectedExaminingSession === true){\r\n            //nhấn F2 để hoàn tất đăng ký khám\r\n            handleOpenConfirm();\r\n            props.setIsContinueSelectedExaminingSession(false);\r\n        }\r\n    }, [props.isContinueSelectedExaminingSession])\r\n\r\n    return (\r\n        <>\r\n            {listExaminingSession ? \r\n                <>\r\n                    <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalExaminingSession} disableEscapeKeyDown={true}>\r\n                        <DialogTitle \r\n                            sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'green', textTransform: 'uppercase' }}>\r\n                            {`${props.dataPatientsRegister.patient.fullName}, \r\n                            ${props.dataPatientsRegister.patient.gender === true ? 'Nam' : 'Nữ'}, \r\n                            ${listExaminingSession.monthsOfAge}`}\r\n                        </DialogTitle>\r\n\r\n                        <IconButton onClick={() => [props.setOpenModalExaminingSession(false), props.dataPatientsRegister.examinationId = '', setListExaminingSession(null)]} \r\n                            sx={{position: 'absolute', right: 5, top: 7}}>\r\n                                <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n\r\n                        <DialogContent dividers sx={{pl: '0px', pr: '0px'}}>\r\n                            <Grid container rowSpacing={0}>\r\n                                <Grid item xs={0.5}/>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid black', p: 1, height: '50vh', overflow: 'auto'}}>\r\n                                        <Typography variant='h6' sx={{fontWeight: 'bolder'}}>Lịch sử khám</Typography>\r\n                                        {listExaminingSession.oldExams ?\r\n                                            listExaminingSession.oldExams.map((oldExamItem, oldExamIndex) => (\r\n                                                <Typography key={oldExamIndex} variant='subtitle1'>{oldExamItem.name}</Typography>\r\n                                            ))\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </Box>  \r\n                                </Grid>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid red', p: 1, height: '50vh'}}>\r\n                                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', color: 'red'}}>Chọn kỳ khám</Typography>\r\n                                            <RadioGroup key={`${props.dataPatientsRegister.patient.patientCode}`} defaultValue={listExaminingSession.exams[0].id} onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                {listExaminingSession.exams.map((examItem, examIndex) => (\r\n                                                    <FormControlLabel key={`${examIndex}`} value={examItem.id} control={<Radio />} label={examItem.name} />\r\n                                                ))}\r\n                                            </RadioGroup>\r\n                                            <Button variant='contained' sx={{mt: 0.5}} onClick={() => handleOpenConfirm()}>Tiếp tục (F2)</Button> \r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </>\r\n            :\r\n                null\r\n            }\r\n\r\n            {/* <AlertConfirmModal \r\n                openAlertConfirmModal={isConfirmOpen} onCloseAlertConfirmModal={handleCloseConfirm} \r\n                onConfirmAlertConfirmModal={handleMedicalRegister} \r\n                titleConfirm=\"Đăng ký khám cho bệnh nhân?\"\r\n            /> */}\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExaminingSession","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListOldDisease, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDisease(props) {\r\n\r\n    const dataPatientsForSearchOldDiseaseDefault = {patientCode: '', phone: '', fullName: '', dayOfBirth: ''}\r\n    const dataPatientsForSearchOldDiseaseErrorDefault = {\r\n        patientCode: { title: '', isError: false, openTooltip: false, focus: false},\r\n        phone: { title: '', isError: false, openTooltip: false, focus: false },\r\n        fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n        dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n    \r\n    const [listFoundOldDisease, setListFoundOldDisease] = useState(null);\r\n    const [dataPatientsForSearchOldDisease, setDataPatientsForSearchOldDisease] = useState(dataPatientsForSearchOldDiseaseDefault);\r\n    const [dataPatientsForSearchOldDiseaseError, setDataPatientsForSearchOldDiseaseError] = useState(dataPatientsForSearchOldDiseaseErrorDefault);\r\n    const [focusField, setFocusField] = useState(null);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n\r\n    const dateFieldRef = useRef(null);\r\n    const formRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n    const tooltipTheme = createTheme({\r\n        components: {\r\n          MuiTooltip: {\r\n            defaultProps: {\r\n              placement: 'bottom',\r\n              arrow: true,\r\n              componentsProps: {\r\n                tooltip: {\r\n                  sx: {\r\n                    bgcolor: '#d32f2f',\r\n                  },\r\n                },\r\n                arrow: {\r\n                  sx: {\r\n                    color: '#d32f2f',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n    });\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key !== 'Enter') \r\n        {\r\n            event.preventDefault();\r\n        }\r\n        else if(event.key === 'Enter'){\r\n            handleEnterPress(event);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (value, fieldName) => {\r\n        if(value === '' || value === 'DD/MM/YYYY'){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(fieldName === 'patientCode'){\r\n                if(typingRef.current){\r\n                    clearInterval(typingRef.current);\r\n                }\r\n                \r\n                typingRef.current = setTimeout(() => {  \r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }, 10)\r\n                \r\n                if(focusField === 'patientCode'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'dayOfBirth'){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'dayOfBirth'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'phone'){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const onChangePatientId = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 8){\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.title = 'Mã bệnh nhân phải từ 8 đến 12 số';\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'patientCode'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.patientCode = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n    }\r\n\r\n    const onChangeFullName = (value) => {\r\n        if(focusField === 'fullName'){\r\n            setFocusField(null);\r\n        }\r\n\r\n        setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n            prevDataPatientsForSearchOldDisease.fullName = value;\r\n            return {...prevDataPatientsForSearchOldDisease}\r\n        })\r\n\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);      \r\n    }\r\n\r\n    const onChangeDayOfBirth = (value) => {\r\n        if(value){            \r\n            const date = value._d;\r\n            const today = new Date();\r\n            const yearsDifference = today.getFullYear() - date.getFullYear();\r\n            const monthsDifference = today.getMonth() - date.getMonth();\r\n            const daysDifference = today.getDate() - date.getDate();\r\n            const age = today.getFullYear() - date.getFullYear();\r\n\r\n            let totalMonths = yearsDifference * 12 + monthsDifference;\r\n            let totalDays = daysDifference;\r\n\r\n            if (daysDifference < 0) {\r\n                totalMonths -= 1;\r\n                totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n            }\r\n\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n\r\n            if(today < date || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = true;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n              }\r\n              else{\r\n                const formattedDate = moment(date).format('YYYY-MM-DD');\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.dayOfBirth = formattedDate;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangePhone = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 10){\r\n                    _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'phone'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.phone = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n\r\n\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 10){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.phone = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        }\r\n    }\r\n\r\n    const handleCloseModalOldDisease = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n          else{\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            setListFoundOldDisease(null);\r\n            setSelectedRowIndex(0);\r\n            props.setOpenModalOldDisease(false);\r\n        }\r\n    }\r\n\r\n    const handleResetField = () => {\r\n        formRef.current.reset();\r\n        const inputs = formRef.current.querySelectorAll('input, textarea');\r\n        inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n        setFocusField(null);\r\n    }\r\n\r\n    const validate = () => {\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        let isValid = true;\r\n\r\n        if(dataPatientsForSearchOldDisease.patientCode === '' && dataPatientsForSearchOldDisease.fullName === '' && \r\n            dataPatientsForSearchOldDisease.dayOfBirth === '' && dataPatientsForSearchOldDisease.phone === '')\r\n        {\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.fullName.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.patientCode.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.focus = true;\r\n                setFocusField('patientCode');\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.dayOfBirth.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                if (dateFieldRef.current) {\r\n                    dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n                }\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.phone.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.phone.focus = true;\r\n                setFocusField('phone');\r\n            }\r\n            isValid = false;\r\n        }\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        return isValid;\r\n    }\r\n\r\n    const handleFindOldDisease = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        setOpenAlertProcessing(true);\r\n        const response = await getListOldDisease(dataPatientsForSearchOldDisease.patientCode, dataPatientsForSearchOldDisease.phone, dataPatientsForSearchOldDisease.fullName, dataPatientsForSearchOldDisease.dayOfBirth, '');\r\n        setOpenAlertProcessing(false);\r\n        setListFoundOldDisease(response);\r\n        setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n        setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n        handleResetField();\r\n        if(response.length > 0){\r\n            tableRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleClickFindOldDisease = () => {\r\n        if(validate()){\r\n            handleFindOldDisease()\r\n        }\r\n    }\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleClickFindOldDisease();\r\n        }\r\n    }\r\n\r\n    const handleTableKeyDown = (event) => {\r\n        if (event.key === 'ArrowDown') {\r\n            setSelectedRowIndex((prevIndex) => (Math.min(prevIndex + 1, listFoundOldDisease.length - 1)));\r\n        } else if (event.key === 'ArrowUp') {\r\n            setSelectedRowIndex((prevIndex) => (Math.max(prevIndex - 1, 0)));\r\n        } else if (event.key === 'Enter' && selectedRowIndex !== null){\r\n            handleApplyDataPatientOldDisease(listFoundOldDisease[selectedRowIndex])\r\n        }\r\n    };\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientCode);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            oldDiseaseWithNullCodeWard: foundOldDiseaseItem.codeWard ? false : true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientCode: foundOldDiseaseItem.patientCode,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseModalOldDisease();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalOldDisease} onClose={(event, reason) => handleCloseModalOldDisease(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Tìm bệnh cũ</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalOldDisease()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{p: '10px 24px'}}>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around'}} component=\"form\" ref={formRef}>\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.patientCode.title}</h6>} open={dataPatientsForSearchOldDiseaseError.patientCode.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.patientCode.isError === true : false}\r\n                                    label=\"Mã BN\" variant=\"outlined\" size='small'\r\n                                    autoFocus\r\n                                    inputRef={(input) => input && focusField === 'patientCode' && input.focus()}\r\n                                    inputProps={{ maxLength: 12 }}\r\n                                    onChange={(e) => onChangePatientId(e.target.value)}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'patientCode')}\r\n                                    onKeyDown={handleKeyDown} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.fullName.title}</h6>} open={dataPatientsForSearchOldDiseaseError.fullName.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.fullName.isError === true : false}\r\n                                    label=\"Họ tên\" variant=\"outlined\" size='small'\r\n                                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                                    onKeyDown={(e) => handleEnterPress(e)} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                            <ThemeProvider theme={tooltipTheme}>\r\n                                <DemoContainer components={['DatePicker']}>\r\n                                    <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.dayOfBirth.title}</h6>} open={dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip}>    \r\n                                        <Box sx={{width: 222}}>\r\n                                            <DatePicker label=\"Ngày sinh\" format='DD/MM/YYYY' \r\n                                                disableFuture={true} disableOpenPicker \r\n                                                renderInput={(params) => <TextField {...params} size='small' />}\r\n                                                slotProps={{  \r\n                                                    textField: \r\n                                                    { \r\n                                                        inputRef: dateFieldRef,\r\n                                                        error: true ? dataPatientsForSearchOldDiseaseError.dayOfBirth.isError === true : false, \r\n                                                        size: 'small', \r\n                                                        onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                                        onKeyDown: (e) => handleEnterPress(e)\r\n                                                    }, \r\n                                                }}\r\n                                                onChange={(value) => onChangeDayOfBirth(value)}\r\n                                            />\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                </DemoContainer>\r\n                            </ThemeProvider>      \r\n                        </LocalizationProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.phone.title}</h6>} open={dataPatientsForSearchOldDiseaseError.phone.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                                    inputRef={(input) => input && focusField === 'phone' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.phone.isError === true : false}\r\n                                    label=\"Điện thoại cha/mẹ\" variant=\"outlined\" size='small'\r\n                                    inputProps={{ maxLength: 10 }}\r\n                                    onChange={(e) => onChangePhone(e.target.value)}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'phone')}\r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 1.6}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleClickFindOldDisease()}>Tìm (Enter)</Button>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        {\r\n                            listFoundOldDisease ? \r\n                                listFoundOldDisease.length !== 0 ? \r\n                                <>\r\n                                    <TableContainer component={Paper} sx={{boxShadow: 4, mt: 1.4}} tabIndex={0} onKeyDown={(event) => handleTableKeyDown(event)} ref={tableRef}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listFoundOldDisease ? \r\n                                                    listFoundOldDisease.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                        <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} \r\n                                                            selected={selectedRowIndex === foundOldDiseaseIndex} \r\n                                                            onDoubleClick={() => handleApplyDataPatientOldDisease(foundOldDiseaseItem)}\r\n                                                        >\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.patientCode}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                            <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'green'}}>Tìm thấy {listFoundOldDisease.length} bệnh nhân</Typography>\r\n                                </>\r\n                                : \r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'red'}}>Không tìm thấy bệnh nhân</Typography>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Box>  \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDisease","import React, { useContext, useState, useEffect, useRef } from 'react';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//ExaminingSessios modal\r\nimport ExaminingSession from '../ManageExaminingSession/ExaminingSession';\r\n//old disease modal\r\nimport OldDisease from '../ManageOldDisease/OldDisease';\r\n// import OldDiseaseForRegister from '../ManageOldDisease/OldDiseaseForRegister';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateField } from '@mui/x-date-pickers/DateField';\r\n//lodash\r\nimport _ from 'lodash';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { createMedicalBackRegister } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction BookMedical(props) {\r\n\r\n  const dataPatientsRegisterDefault = {\r\n    examinationId: '',\r\n    oldDisease: false,\r\n    height: '',\r\n    weight: '',\r\n    headCircumference: '',\r\n    reason: '',\r\n    vaccination: false,\r\n    medicalTypeId: '',\r\n    userIdDoctor: '',\r\n    patient: {\r\n      patientCode: '',\r\n      identifier: '',\r\n      address: '',\r\n      fullName: '',\r\n      dayOfBirth: '',\r\n      codeWard: '',\r\n      gender: '',\r\n      fullNameMother: '',\r\n      phoneMother: '',\r\n      fullNameFather: '',\r\n      phoneFather: ''\r\n    }\r\n  }\r\n\r\n  const autocompleteValueDefault = { \r\n    dayOfBirth: null, \r\n    gender: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    province: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    district: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    ward: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    medicalType: {\r\n      value: null,\r\n      openOption: false\r\n    },\r\n    vaccination: false \r\n  }\r\n\r\n  const dataPatientsRegisterErrorDefault = { \r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    patientCode: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n    medicalType: { title: '', isError: false, openTooltip: false, focus: false },\r\n    reason: { title: '', isError: false, openTooltip: false, focus: false }\r\n  }\r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const listMedicalType = [\r\n    {medicalTypeOrder: 1, medicalTypeName: 'Khám Nhi khoa phát triển', medicalTypeId: 1},\r\n    {medicalTypeOrder: 2, medicalTypeName: 'Khám trẻ nguy cơ cao', medicalTypeId: 2},\r\n  ]\r\n\r\n  const { isDialogChangePasswordOpen, isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n  const [openModalExaminingSession, setOpenModalExaminingSession] = useState(false);\r\n  const [isContinueSelectedExaminingSession, setIsContinueSelectedExaminingSession] = useState(false);\r\n\r\n  const [openModalOldDisease, setOpenModalOldDisease] = useState(false);\r\n\r\n  // const [openOldDiseaseRegister, setOpenOldDiseaseRegister] = useState(false);\r\n  // const [listOldDiseaseRegister, setListOldDiseaseRegister] = useState([]);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const [dataPatientsRegister, setDataPatientsRegister] = useState(dataPatientsRegisterDefault);\r\n  const [dataPatientsRegisterError, setDataPatientsRegisterError] = useState(dataPatientsRegisterErrorDefault);\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [autocompleteValue, setAutocompleteValue] = useState(autocompleteValueDefault);\r\n\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const formRef = useRef(null);\r\n  const firstFocusRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n  const typingRef = useRef(null);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f', \r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -7],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleKeyDown = (event, nextFieldId) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key === 'Enter') \r\n    {\r\n      if(event.key === 'Enter'){\r\n        event.preventDefault();\r\n        const nextField = document.getElementById(dataPatientsRegister.oldDiseaseWithNullCodeWard && nextFieldId === 'patientAddress' ? 'patientWeight' : nextFieldId); // Tìm trường tiếp theo dựa trên ID\r\n        if (nextField) {\r\n          nextField.focus();\r\n          nextField.select(); // Đảm bảo con trỏ chuột xuất hiện\r\n        }\r\n      }\r\n      else{\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  \r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n\r\n    // Xử lý đặc biệt cho \"d\" và \"đ\"\r\n    const replaceSpecialCharacters = str => str.replace(/đ/g, 'd');\r\n\r\n    return options.filter(option => {\r\n        const lowercasedFullName = replaceSpecialCharacters(option.fullName.toLowerCase());\r\n        const initials = replaceSpecialCharacters(option.fullName.split(' ').map(word => word[0]).join('').toLowerCase());\r\n\r\n        const normalizedInput = replaceSpecialCharacters(lowercasedInput);\r\n\r\n        return (\r\n            lowercasedFullName.includes(normalizedInput) ||\r\n            initials.includes(normalizedInput)\r\n        );\r\n    });\r\n  };\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.gender.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.province.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Ward'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'MedicalType'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.medicalType.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n      if(fieldName === 'Identifier'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n        _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.dayOfBirth.title = '';\r\n      //     _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n      //   _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PatientId'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.patientCode.title = '';\r\n      //     _dataPatientsRegisterError.patientCode.openTooltip = false;\r\n      //     _dataPatientsRegisterError.patientCode.isError = false;\r\n      //     _dataPatientsRegisterError.patientCode.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.phoneMother.title = '';\r\n      //     _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      //     _dataPatientsRegisterError.phoneMother.isError = false;\r\n      //     _dataPatientsRegisterError.phoneFather.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      if(fieldName === 'PhoneFather'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.patientCode.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      else if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientsRegisterError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientsRegisterError.identifier.openTooltip = true;\r\n          _dataPatientsRegisterError.identifier.isError = true;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.identifier.title = '';\r\n      _dataPatientsRegisterError.identifier.openTooltip = false;\r\n      _dataPatientsRegisterError.identifier.isError = false;\r\n      _dataPatientsRegisterError.identifier.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangePatientId = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 8){\r\n          _dataPatientsRegisterError.patientCode.title = 'Mã BN phải từ 8 đến 14 số';\r\n          _dataPatientsRegisterError.patientCode.openTooltip = true;\r\n          _dataPatientsRegisterError.patientCode.isError = true;\r\n          _dataPatientsRegisterError.patientCode.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          if(focusField === 'patientCode'){\r\n            setFocusField(null);\r\n          }\r\n          \r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.patientCode = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.patientCode.title = '';\r\n          _dataPatientsRegisterError.patientCode.openTooltip = false;\r\n          _dataPatientsRegisterError.patientCode.isError = false;\r\n          _dataPatientsRegisterError.patientCode.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    // else{\r\n    //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n    //   _dataPatientsRegisterError.patientCode.title = '';\r\n    //   _dataPatientsRegisterError.patientCode.openTooltip = false;\r\n    //   _dataPatientsRegisterError.patientCode.isError = false;\r\n    //   _dataPatientsRegisterError.patientCode.focus = false;\r\n    //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    // }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullName = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      if(dataPatientsRegisterError.fullName.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullName.title = '';\r\n        _dataPatientsRegisterError.fullName.openTooltip = false;\r\n        _dataPatientsRegisterError.fullName.isError = false;\r\n        _dataPatientsRegisterError.fullName.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n\r\n      // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n      //   handleFindOldDisease();\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n\r\n        if(today < takenValue || age > 2 || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientsRegisterError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n        }\r\n\r\n        else{\r\n          if(focusField === 'dayOfBirth'){\r\n            setFocusField(null);\r\n          }\r\n\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n          prevDataPatientsRegister.patient.dayOfBirth = formattedDate\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.dayOfBirth.title = '';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n          //   handleFindOldDisease();\r\n          // }\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.gender = value.genderValue\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.gender.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.gender.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.gender.title = '';\r\n      _dataPatientsRegisterError.gender.openTooltip = false;\r\n      _dataPatientsRegisterError.gender.isError = false;\r\n      _dataPatientsRegisterError.gender.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n    //   handleFindOldDisease();\r\n    // }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.province.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.district.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.province.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.province.title = '';\r\n      _dataPatientsRegisterError.province.openTooltip = false;\r\n      _dataPatientsRegisterError.province.isError = false;\r\n      _dataPatientsRegisterError.province.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.district.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.district.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.district.title = '';\r\n      _dataPatientsRegisterError.district.openTooltip = false;\r\n      _dataPatientsRegisterError.district.isError = false;\r\n      _dataPatientsRegisterError.district.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n    \r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.codeWard = value.code\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.ward.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.ward.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.ward.title = '';\r\n      _dataPatientsRegisterError.ward.openTooltip = false;\r\n      _dataPatientsRegisterError.ward.isError = false;\r\n      _dataPatientsRegisterError.ward.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeFolk = (value) => {\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'address'){\r\n        setFocusField(null);\r\n      }\r\n      \r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.address = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.address.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.address.title = '';\r\n        _dataPatientsRegisterError.address.openTooltip = false;\r\n        _dataPatientsRegisterError.address.isError = false;\r\n        _dataPatientsRegisterError.address.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'fullNameMother'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameMother = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        if(focusField === 'phoneMother'){\r\n          setFocusField(null);\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneMother.isError = true;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneMother = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneMother.title = '';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneMother.isError = false;\r\n      _dataPatientsRegisterError.phoneMother.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    if(focusField === 'fullNameFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameFather = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (e, value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneFather.isError = true;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneFather = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'phoneFather'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneFather.title = '';\r\n      _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneFather.isError = false;\r\n      _dataPatientsRegisterError.phoneFather.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'height'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.height = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.height.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.height.title = '';\r\n        _dataPatientsRegisterError.height.openTooltip = false;\r\n        _dataPatientsRegisterError.height.isError = false;\r\n        _dataPatientsRegisterError.height.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'weight'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.weight = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.weight.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.weight.title = '';\r\n        _dataPatientsRegisterError.weight.openTooltip = false;\r\n        _dataPatientsRegisterError.weight.isError = false;\r\n        _dataPatientsRegisterError.weight.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'headCircumference'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.headCircumference = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.headCircumference.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.headCircumference.title = '';\r\n        _dataPatientsRegisterError.headCircumference.openTooltip = false;\r\n        _dataPatientsRegisterError.headCircumference.isError = false;\r\n        _dataPatientsRegisterError.headCircumference.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onSelectMedicalType = (e, value) => {\r\n    if(focusField === 'medicalType'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.medicalTypeId = value.medicalTypeId\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.medicalType.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.medicalType.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.medicalType.title = '';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = false;\r\n      _dataPatientsRegisterError.medicalType.isError = false;\r\n      _dataPatientsRegisterError.medicalType.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeReason = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.reason = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      // if(dataPatientsRegisterError.reason.isError){\r\n      //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      //   _dataPatientsRegisterError.reason.isError = false;\r\n      //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.vaccination = bool\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.vaccination = bool\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkValidate = () => {\r\n    let isValid = true;\r\n    const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n\r\n    if(dataPatientsRegisterError.identifier.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.identifier.focus = true;\r\n        setFocusField('identifier');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.patientCode === ''){\r\n      _dataPatientsRegisterError.patientCode.title = 'Bạn chưa nhập mã bệnh nhân';\r\n      _dataPatientsRegisterError.patientCode.openTooltip = true;\r\n      _dataPatientsRegisterError.patientCode.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientCode.focus = true;\r\n        setFocusField('patientCode');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.patientCode.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientCode.focus = true;\r\n        setFocusField('patientCode');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullName === ''){\r\n      _dataPatientsRegisterError.fullName.title = 'Bạn chưa nhập họ tên';\r\n      _dataPatientsRegisterError.fullName.openTooltip = true;\r\n      _dataPatientsRegisterError.fullName.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullName.focus = true;\r\n        setFocusField('fullName');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.dayOfBirth === ''){\r\n      _dataPatientsRegisterError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n      _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n      _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.dayOfBirth.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.gender === ''){\r\n      _dataPatientsRegisterError.gender.title = 'Bạn chưa chọn giới tính';\r\n      _dataPatientsRegisterError.gender.openTooltip = true;\r\n      _dataPatientsRegisterError.gender.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.gender.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n      setFocusField('gender');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.province.value === null){\r\n      _dataPatientsRegisterError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n      _dataPatientsRegisterError.province.openTooltip = true;\r\n      _dataPatientsRegisterError.province.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.province.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('province');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.district.value === null){\r\n      _dataPatientsRegisterError.district.title = 'Bạn chưa chọn quận huyện';\r\n      _dataPatientsRegisterError.district.openTooltip = true;\r\n      _dataPatientsRegisterError.district.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.district.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('district');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.ward.value === null){\r\n      _dataPatientsRegisterError.ward.title = 'Bạn chưa chọn phường xã';\r\n      _dataPatientsRegisterError.ward.openTooltip = true;\r\n      _dataPatientsRegisterError.ward.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.ward.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('ward');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.address === ''){\r\n      _dataPatientsRegisterError.address.title = 'Bạn chưa nhập địa chỉ';\r\n      _dataPatientsRegisterError.address.openTooltip = true;\r\n      _dataPatientsRegisterError.address.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.address.focus = true;\r\n        setFocusField('address');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullNameMother === '' && dataPatientsRegister.patient.fullNameFather === ''){\r\n      _dataPatientsRegisterError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n      _dataPatientsRegisterError.fullNameMother.openTooltip = true;\r\n      _dataPatientsRegisterError.fullNameMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullNameMother.focus = true;\r\n        setFocusField('fullNameMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.phoneMother === '' && dataPatientsRegister.patient.phoneFather === ''){\r\n      _dataPatientsRegisterError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n      _dataPatientsRegisterError.phoneMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneMother.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneFather.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneFather.focus = true;\r\n        setFocusField('phoneFather');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.weight === ''){\r\n      _dataPatientsRegisterError.weight.title = 'Bạn chưa nhập cân nặng';\r\n      _dataPatientsRegisterError.weight.openTooltip = true;\r\n      _dataPatientsRegisterError.weight.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.weight.focus = true;\r\n        setFocusField('weight');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.height === ''){\r\n      _dataPatientsRegisterError.height.title = 'Bạn chưa nhập chiều cao';\r\n      _dataPatientsRegisterError.height.openTooltip = true;\r\n      _dataPatientsRegisterError.height.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.height.focus = true;\r\n        setFocusField('height');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.headCircumference === ''){\r\n      _dataPatientsRegisterError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n      _dataPatientsRegisterError.headCircumference.openTooltip = true;\r\n      _dataPatientsRegisterError.headCircumference.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.headCircumference.focus = true;\r\n        setFocusField('headCircumference');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.medicalTypeId === ''){\r\n      _dataPatientsRegisterError.medicalType.title = 'Bạn chưa chọn loại hình khám';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = true;\r\n      _dataPatientsRegisterError.medicalType.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.medicalType.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('medicalType');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    // if(dataPatientsRegister.reason === ''){\r\n    //   _dataPatientsRegisterError.reason.isError = true;\r\n    //   isValid = false;\r\n    // }\r\n\r\n    setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    return isValid;\r\n  }\r\n\r\n  const handleMedicalRegister = () => {\r\n    setTimeout(() => {\r\n      if(checkValidate()){\r\n        firstFocusRef.current.focus();\r\n        if(props.dataPantientAppointmentsToday){\r\n          handleMedicalBackRegister();\r\n        }\r\n        else{\r\n          setOpenModalExaminingSession(true);\r\n        }\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const handleMedicalBackRegister = async () => {\r\n    setOpenAlertProcessing(true);\r\n    const responseCreateMedicalBackRegister = await createMedicalBackRegister(dataPatientsRegister);\r\n    if(responseCreateMedicalBackRegister.status === 200){\r\n      toast.success(responseCreateMedicalBackRegister.data, {toastId: 'success5'})\r\n      props.setCompleteMedicalRegister(true);\r\n      handleResetField();\r\n    }\r\n    else{\r\n      toast.error(responseCreateMedicalBackRegister.data, {toastId: 'error5'})\r\n    }\r\n    setOpenAlertProcessing(false);\r\n  }\r\n\r\n  const handleApplyPantientOldDiseaseData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = dataPatientsRegister.patient.identifier;\r\n    document.getElementById('patientCode').value = dataPatientsRegister.patient.patientCode;\r\n    document.getElementById('patientFullName').value = dataPatientsRegister.patient.fullName;\r\n\r\n    let _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(dataPatientsRegister.patient.dayOfBirth);\r\n\r\n    if(dataPatientsRegister.patient.codeWard){\r\n      const response = await getFullAddressByIdWard(dataPatientsRegister.patient.codeWard);\r\n      const responseListDistrict = await getListDistrict(response.provinceCode);\r\n      const responseListWard = await getListWard(response.districtCode);\r\n  \r\n      const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n      const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n      const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n      \r\n      _autocompleteValue.province.value = listProvince[indexListProvince];\r\n      _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n      _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n      _autocompleteValue.vaccination = dataPatientsRegister.vaccination;\r\n    }\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === dataPatientsRegister.patient.gender);\r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === dataPatientsRegister.medicalTypeId);\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    setIsOldDiseaseWithNullCodeWard(true);\r\n    \r\n    document.getElementById('patientAddress').value = dataPatientsRegister.patient.address;\r\n    document.getElementById('patientFullNameMother').value = dataPatientsRegister.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = dataPatientsRegister.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = dataPatientsRegister.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = dataPatientsRegister.patient.phoneFather;\r\n\r\n    if(dataPatientsRegister.oldDiseaseWithNullCodeWard){\r\n      setTimeout(() => {\r\n        setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n        setOpenAlertProcessing(false);\r\n\r\n        setFocusField('province');\r\n      }, 300)\r\n    }\r\n    else{\r\n      setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n      setOpenAlertProcessing(false);\r\n      \r\n      setFocusField('weight');\r\n    }\r\n  }\r\n\r\n  const handleApplyPantientAppointmentsTodayData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = props.dataPantientAppointmentsToday.patient.identifier;\r\n    document.getElementById('patientCode').value = props.dataPantientAppointmentsToday.patient.patientCode;\r\n    document.getElementById('patientFullName').value = props.dataPantientAppointmentsToday.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(props.dataPantientAppointmentsToday.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(props.dataPantientAppointmentsToday.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === props.dataPantientAppointmentsToday.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === props.dataPantientAppointmentsToday.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = props.dataPantientAppointmentsToday.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = props.dataPantientAppointmentsToday.patient.address;\r\n    document.getElementById('patientFullNameMother').value = props.dataPantientAppointmentsToday.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = props.dataPantientAppointmentsToday.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = props.dataPantientAppointmentsToday.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = props.dataPantientAppointmentsToday.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('weight');\r\n  }\r\n\r\n  const handleResetField = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n\r\n    const oldDisease = dataPatientsRegister.oldDisease ? true : false\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n\r\n    if(isOldDiseaseWithNullCodeWard){\r\n      setIsOldDiseaseWithNullCodeWard(false);\r\n    }\r\n\r\n    if(oldDisease){\r\n      setTimeout(() => {\r\n        firstFocusRef.current.focus();\r\n      }, 100)\r\n    }\r\n    else{\r\n      firstFocusRef.current.focus();\r\n    }\r\n  }\r\n\r\n  const handleOpenModalOldDisease = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n    firstFocusRef.current.focus();\r\n\r\n    if(isOldDiseaseWithNullCodeWard){\r\n      setIsOldDiseaseWithNullCodeWard(false);\r\n    }\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const response = await getListProvince();\r\n    if(response !== 400){\r\n      setListProvince(response);\r\n    }\r\n  }\r\n\r\n  // const handleFindOldDisease = async () => {\r\n  //   const response = await getListOldDisease('', '', dataPatientsRegister.patient.fullName, dataPatientsRegister.patient.dayOfBirth, dataPatientsRegister.patient.gender);\r\n  //   if(response.length !== 0){\r\n  //     setListOldDiseaseRegister(response);\r\n  //     setOpenOldDiseaseRegister(true);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleGetListProvince();\r\n    firstFocusRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(dataPatientsRegister.oldDisease === true){\r\n      handleApplyPantientOldDiseaseData();\r\n    }\r\n  }, [dataPatientsRegister.oldDisease])\r\n\r\n  useEffect(() => {\r\n    if(props.dataPantientAppointmentsToday){\r\n      setDataPatientsRegister(props.dataPantientAppointmentsToday);\r\n      handleApplyPantientAppointmentsTodayData();\r\n    }\r\n  }, [props.dataPantientAppointmentsToday]) \r\n\r\n  useEffect(() => {\r\n    if(isDialogChangePasswordOpen === false){\r\n      if(props.onF2Press){\r\n        if(openModalExaminingSession === true && openModalOldDisease === false){\r\n          setIsContinueSelectedExaminingSession(true);\r\n          props.setOnF2Press(false);\r\n        }\r\n        else{\r\n          handleMedicalRegister();\r\n          props.setOnF2Press(false);\r\n        }\r\n      }\r\n      \r\n      if(props.onF4Press){\r\n        if(openModalExaminingSession === true || openModalOldDisease === true){\r\n          props.setOnF4Press(false);\r\n        }\r\n        else{\r\n          handleResetField();\r\n          props.setOnF4Press(false);\r\n        }\r\n      }\r\n\r\n      if(props.onF8Press){\r\n        if(openModalExaminingSession === true || openModalOldDisease === true){\r\n          props.setOnF8Press(false);\r\n        }\r\n        else{\r\n          handleOpenModalOldDisease();\r\n          props.setOnF8Press(false);\r\n        }\r\n      }\r\n    }\r\n  }, [props.onF2Press, props.onF4Press, props.onF8Press, isDialogChangePasswordOpen])\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{'&.MuiContainer-maxWidthLg': {pr: 0}, height: '100%',}}>\r\n        <Box sx={{ minHeight: '36.8rem', borderRadius: '20px', boxShadow: 5, pt: 1.2, pb: 1.2, pl: 1.8, pr: 1.8, }}>\r\n          <Typography variant='h6' sx={{textAlign: 'center', fontWeight: 'bolder', color: 'blue'}}>Thông tin đăng ký khám</Typography> \r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}} component=\"form\" ref={formRef}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.identifier.title}</h6>} open={dataPatientsRegisterError.identifier.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.identifier.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã định danh\" variant=\"outlined\" id='patientIdentifier' autoComplete='off'\r\n                  inputRef={focusField === 'identifier' ? (input) => input && focusField === 'identifier' && input.focus() : firstFocusRef}\r\n                  onChange={(e) => onChangeIdentifier(e.target.value)}\r\n                  onKeyDown={(e) => handleKeyDown(e, 'patientCode')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Identifier')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.patientCode.title}</h6>} open={dataPatientsRegisterError.patientCode.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '19%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.patientCode.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã BN\" variant=\"outlined\" id='patientCode' autoComplete='off'\r\n                  inputRef={(input) => input && focusField === 'patientCode' && input.focus()}\r\n                  onChange={(e) => onChangePatientId(e.target.value)}\r\n                  onKeyDown={(e) => handleKeyDown(e, 'patientFullName')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'PatientId')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 14 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullName.title}</h6>} open={dataPatientsRegisterError.fullName.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }} \r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [37, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              > \r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullName.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên\" variant=\"outlined\" id=\"patientFullName\" autoComplete='off'                \r\n                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientDayOfBirth')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  /> \r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n      \r\n            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n              <ThemeProvider theme={tooltipTheme}>\r\n                <DemoContainer components={['DatePicker']} >\r\n                  <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.dayOfBirth.title}</h6>} open={dataPatientsRegisterError.dayOfBirth.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>    \r\n                    <Box sx={{width: 142, mt: '12px !important'}}>\r\n                      <div style={{width: '100%', }}>\r\n                        <DateField label=\"Ngày sinh\" \r\n                          format='DD/MM/YYYY' value={autocompleteValue.dayOfBirth}\r\n                          disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                          slotProps={{ \r\n                            textField: \r\n                              { \r\n                                inputRef: dateFieldRef,\r\n                                id: 'patientDayOfBirth',\r\n                                error: true ? dataPatientsRegisterError.dayOfBirth.isError === true : false,\r\n                                onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                sx: {'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } },\r\n                              }\r\n                          }}\r\n                          onChange={(value) => onChangeDOB(value)}\r\n                          onKeyDown={(e) => handleKeyDown(e, 'patientGender')}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  </Tooltip>\r\n                </DemoContainer>\r\n              </ThemeProvider>      \r\n            </LocalizationProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.gender.title}</h6>} open={dataPatientsRegisterError.gender.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '12%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientGender' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.gender.value}\r\n                    options={listGender} \r\n                    getOptionLabel={(option) => option.genderName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.genderName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectGender(e, value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientProvince')}\r\n                    open={autocompleteValue.gender.openOption}\r\n                    onFocus={() => handleFocus('Gender')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Giới tính\" \r\n                        inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.gender.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n             \r\n            {/* <TextField label=\"Dân tộc\" variant=\"outlined\" sx={{width: '12%', '&.MuiTextField-root' : {marginTop: '15px'}}}/> */}\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.province.title}</h6>} open={dataPatientsRegisterError.province.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '19.2%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientProvince' disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                    value={autocompleteValue.province.value}\r\n                    options={listProvince} \r\n                    noOptionsText={'Đang tải...'}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectProvine(e, value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientDistrict')}\r\n                    open={autocompleteValue.province.openOption}\r\n                    onFocus={() => handleFocus('Province')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Thành phố\" \r\n                        inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.province.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.district.title}</h6>} open={dataPatientsRegisterError.district.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '24%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientDistrict' disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                    value={autocompleteValue.district.value}\r\n                    options={listDistrict.list} \r\n                    noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                    open={autocompleteValue.district.openOption}\r\n                    onFocus={() => handleFocus('District')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.fullName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectDistrict(e, value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientWard')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Quận/Huyện\" \r\n                        inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.district.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <>\r\n                              {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <>\r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.ward.title}</h6>} open={dataPatientsRegisterError.ward.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                  <div style={{width: '23.5%', marginTop: '20px'}}>\r\n                    <Autocomplete disablePortal id='patientWard' disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                      value={autocompleteValue.ward.value}\r\n                      options={listWard.list} \r\n                      noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                      filterOptions={filterOptions}\r\n                      getOptionLabel={(option) => option.name}\r\n                      autoComplete={false}\r\n                      renderOption={(props, option) => (\r\n                        <li {...props}>\r\n                          {option.fullName}\r\n                        </li>\r\n                      )}\r\n                      onChange={(e, value) => onSelectWard(e, value)}\r\n                      onKeyDown={(e) => handleKeyDown(e, 'patientAddress')}\r\n                      open={autocompleteValue.ward.openOption}\r\n                      onFocus={() => handleFocus('Ward')}\r\n                      onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} \r\n                          label=\"Phường/Xã\" \r\n                          inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                          error={true ? dataPatientsRegisterError.ward.isError === true : false} \r\n                          sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                              <>\r\n                                {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                              </>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      disableClearable // Bỏ icon xóa\r\n                      popupIcon={null} // Bỏ icon dropdown\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.address.title}</h6>} open={dataPatientsRegisterError.address.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.address.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Địa chỉ\" variant=\"outlined\" id='patientAddress' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                    onChange={(e) => onChangeAddress(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientFullNameMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullNameMother.title}</h6>} open={dataPatientsRegisterError.fullNameMother.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullNameMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên mẹ\" variant=\"outlined\" id='patientFullNameMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                    autoFocus={dataPatientsRegisterError.fullNameMother.focus}\r\n                    onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientPhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneMother.title}</h6>} open={dataPatientsRegisterError.phoneMother.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.phoneMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Điện thoại\" variant=\"outlined\" id='patientPhoneMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                    onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientFullNameFather')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n\r\n            <TextField label=\"Họ tên cha\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n              variant=\"outlined\" id='patientFullNameFather' autoComplete='off'\r\n              sx={{width: '30.4%', '&.MuiTextField-root' : {marginTop: '20px'}}} \r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n              onKeyDown={(e) => handleKeyDown(e, 'patientPhoneFather')}\r\n              inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n              InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n            />\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneFather.title}</h6>} open={dataPatientsRegisterError.phoneFather.openTooltip}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField label=\"Điện thoại\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                    variant=\"outlined\" id='patientPhoneFather' autoComplete='off'\r\n                    onChange={(e) => onChangePhoneFather(e, e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientWeight')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneFather')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.weight.title}</h6>} open={dataPatientsRegisterError.weight.openTooltip} PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Cân nặng bé\" variant=\"outlined\" id='patientWeight' autoComplete='off' error={true ? dataPatientsRegisterError.weight.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(kg)</InputAdornment>}}\r\n                    onChange={(e) => onChangeWeight(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientHeight')}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.height.title}</h6>} open={dataPatientsRegisterError.height.openTooltip} placement='left' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Chiều cao bé\" variant=\"outlined\" id='patientHeight' autoComplete='off' error={true ? dataPatientsRegisterError.height.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeight(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientHeadCircumference')}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.headCircumference.title}</h6>} open={dataPatientsRegisterError.headCircumference.openTooltip} placement='top-start' PopperProps={{sx: { zIndex: 2 } }}\r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [70, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              >\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Vòng đầu bé\" variant=\"outlined\" id='patientHeadCircumference' autoComplete='off' error={true ? dataPatientsRegisterError.headCircumference.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientMedicalType')}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.medicalType.title}</h6>} open={dataPatientsRegisterError.medicalType.openTooltip} placement='bottom' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30.5%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientMedicalType' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.medicalType.value}\r\n                    options={listMedicalType} \r\n                    getOptionLabel={(option) => option.medicalTypeName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.medicalTypeName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectMedicalType(e, value)}\r\n                    open={autocompleteValue.medicalType.openOption}\r\n                    onFocus={() => handleFocus('MedicalType')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'MedicalType')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Loại hình khám\" \r\n                        inputRef={(input) => input && focusField === 'medicalType' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.medicalType.isError === true : false} \r\n                        sx={{\r\n                          '& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } ,\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.Mui-disabled.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'},\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'}\r\n                        }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.reason.title}</h6>} open={dataPatientsRegisterError.reason.openTooltip} >\r\n                <div style={{width: '100%' }}>\r\n                  <TextField fullWidth label=\"Lý do khám\" multiline rows={3} variant=\"outlined\" id='patientReason' autoComplete='off' error={true ? dataPatientsRegisterError.reason.isError === true : false}\r\n                    sx={{'&.MuiTextField-root' : {marginTop: '20px'}}} \r\n                    onChange={(e) => onChangeReason(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <FormControlLabel control={<Checkbox checked={autocompleteValue.vaccination}/>} sx={{width: '100%'}}\r\n              label=\"Bệnh nhân có tham gia tiêm ngừa\" onChange={(e) => onChangeVaccination(e.target.checked)}/>  \r\n\r\n            <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n              <Button variant=\"contained\" color=\"primary\" sx={{mr: 1}} onClick={() => handleMedicalRegister()}>Đăng ký (f2)</Button>\r\n              <Button variant=\"contained\" color=\"warning\" onClick={() => handleResetField()}>Làm mới (f4)</Button>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => handleOpenModalOldDisease()}>Bệnh cũ (f8)</Button>\r\n            </Box>\r\n          </Box>         \r\n        </Box>\r\n      </Container>\r\n\r\n      <ExaminingSession \r\n        openModalExaminingSession={openModalExaminingSession} setOpenModalExaminingSession={setOpenModalExaminingSession} \r\n        handleResetField={handleResetField} setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        isContinueSelectedExaminingSession={isContinueSelectedExaminingSession} setIsContinueSelectedExaminingSession={setIsContinueSelectedExaminingSession}\r\n        dataPatientsRegister={dataPatientsRegister} \r\n      />\r\n\r\n      <OldDisease \r\n        openModalOldDisease={openModalOldDisease} setOpenModalOldDisease={setOpenModalOldDisease}\r\n        dataPatientsRegister={dataPatientsRegister} setDataPatientsRegister={setDataPatientsRegister}\r\n      />\r\n\r\n      {/* <OldDiseaseForRegister\r\n        openOldDiseaseRegister={openOldDiseaseRegister} setOpenOldDiseaseRegister={setOpenOldDiseaseRegister}\r\n        setDataPatientsRegister={setDataPatientsRegister}\r\n        listOldDiseaseRegister={listOldDiseaseRegister} setListOldDiseaseRegister={setListOldDiseaseRegister}\r\n      /> */}\r\n\r\n      <AlertProcessing\r\n        openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookMedical","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//modal\r\nimport SelectedDoctorExamining from '../ManageSelectedDoctorExamining/SelectedDoctorExamining';\r\n//components\r\nimport ListPatientsRegister from './ListPatientsRegister';\r\nimport BookMedical from './BookMedical';\r\n//api\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nfunction MainMedicalRegister() {\r\n\r\n  const { user, loading } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [component1Loading, setComponent1Loading] = useState(true);\r\n\r\n  const [completeMedicalRegister, setCompleteMedicalRegister] = useState(false);\r\n  const [dataPantientAppointmentsToday, setDataPantientAppointmentsToday] = useState();\r\n\r\n  const [handleResetField, setHandleResetField] = useState(false); //F2\r\n  const [handleOpenModalExaminingSession, setHandleOpenModalExaminingSession] = useState(false); //F4\r\n  const [handleOpenModalOldDisease, setHandleOpenModalOldDisease] = useState(false); //F8\r\n\r\n  const handleF2Press = () => {\r\n    setHandleOpenModalExaminingSession(true);\r\n  }\r\n\r\n  const handleF4Press = () => {\r\n    setHandleResetField(true);\r\n  }\r\n\r\n  const handleF8Press = () => {\r\n    setHandleOpenModalOldDisease(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(loading === false && user.isLogin){\r\n      if(user.positionName !== 'Nursing'){\r\n        history.push('/404');\r\n      }\r\n    }\r\n  }, [loading, user])\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if(event.keyCode === 113){\r\n        event.preventDefault()\r\n        //nhấn F2 để đăng ký khám\r\n        handleF2Press();\r\n      }\r\n      else if(event.keyCode === 115){\r\n        event.preventDefault()\r\n        //nhấn F4 để reset các input field \r\n        handleF4Press();\r\n      }\r\n      else if(event.keyCode === 119){\r\n        event.preventDefault()\r\n        //nhấn F8 để tìm bệnh cũ\r\n        handleF8Press();\r\n      }\r\n      else{\r\n\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n              <Grid container spacing={0} sx={{marginLeft: 0}}>\r\n                <Grid item xs={5}>  \r\n                  <ListPatientsRegister \r\n                    completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                    component1Loading={component1Loading} setComponent1Loading={setComponent1Loading}\r\n                    dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                  />\r\n                </Grid>\r\n            \r\n                <Grid item xs={7} >\r\n                  {component1Loading ?\r\n                    <div style={{marginLeft: '18px'}}>\r\n                      <Skeleton variant='rectangular' width=\"100%\" height={590} />\r\n                    </div>\r\n                  :\r\n                    <BookMedical \r\n                      onF2Press={handleOpenModalExaminingSession} setOnF2Press={setHandleOpenModalExaminingSession}\r\n                      onF4Press={handleResetField} setOnF4Press={setHandleResetField}\r\n                      onF8Press={handleOpenModalOldDisease} setOnF8Press={setHandleOpenModalOldDisease}\r\n                      completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                      dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                    />\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n         {/* <SelectedDoctorExamining \r\n          openSelectedDoctorExaminingModal={openSelectedDoctorExaminingModal} setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n          currentDoctorExamining={currentDoctorExamining} setCurrentDoctorExamining={setCurrentDoctorExamining}\r\n         /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainMedicalRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getAppointmentsNextWeek, updateStateAppointment } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainAppointmentExamining() {\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chưa nhắc hẹn khám'});\r\n    const [listPantientAppointmentChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [listAppointment, setListAppointment] = useState();\r\n    \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n    const [listDataPatientsAppointmentPaginate, setListDataPatientsAppointmentPaginate] = useState([]);\r\n    const [listDataPatientsAppointmentState, setListDataPatientsAppointmentState] = useState();\r\n    const [listDataPatientsAppointmentSort, setListDataPatientsAppointmentSort] = useState([]);\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [pageCount, setPageCount] = useState();\r\n\r\n    const [dataAppointment, setDataAppointment] = useState();\r\n\r\n    const handlePaginate = (data) => {\r\n        const itemsPerPage = 5;\r\n        if(data){\r\n            const calculatedPageCount = Math.ceil(data.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = data.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n        else{\r\n            const calculatedPageCount = Math.ceil(listDataPatientsAppointmentPaginate.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = listDataPatientsAppointmentPaginate.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    }\r\n\r\n    const handleGetAppointmentsNextWeek = async () => {\r\n        setLoading(true);\r\n        const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n        setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n        const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n        const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n        const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n        const updateListPantientAppointmentChipState = [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n        ]\r\n\r\n        setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n        if(activeChip.chipOrder === 0){\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind)\r\n        }\r\n\r\n        else if(activeChip.chipOrder === 1){\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n            handlePaginate(_listAppointmentAcceptReExamining)\r\n        }\r\n\r\n        else{\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n            handlePaginate(_listAppointmentRejectReExamining)\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n            const _listAppointmentNotRemind = listAppointment.filter(item => item.stateAppointment === 0);\r\n\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const _listAppointmentAcceptReExamining = listAppointment.filter(item => item.stateAppointment === 1);\r\n\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining);\r\n            handlePaginate(_listAppointmentAcceptReExamining);\r\n        }\r\n        else{\r\n            const _listAppointmentRejectReExamining = listAppointment.filter(item => item.stateAppointment === 2);\r\n\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining);\r\n            handlePaginate(_listAppointmentRejectReExamining);\r\n        }\r\n    }\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsAppointmentSort(listDataPatientsAppointmentState);\r\n        }else{\r\n          setListDataPatientsAppointmentSort(searchPatients(listDataPatientsAppointmentState, takenValue));\r\n        }\r\n    }\r\n\r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, patientFullName, phoneMother, phoneFather } = patientObj;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || patientFullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const onChangeAppointmentDate = (medicalBookId, appointmentDate) => {\r\n        if(appointmentDate){\r\n            const takenValue = appointmentDate._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const today = new Date();\r\n                const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n                const convertAppointmentDateFindDataAppointment = new Date(findDataAppointment.appointmentDate)\r\n\r\n                if(today <= takenValue || takenValue >= convertAppointmentDateFindDataAppointment){\r\n                    findDataAppointment.appointmentDate = moment(takenValue).format('YYYY-MM-DD');\r\n                }\r\n            }, 100) \r\n        }\r\n        \r\n    }\r\n\r\n    const handleAcceptReExamining = async (medicalBookId) => {\r\n        setLoading(true);\r\n\r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 1);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            \r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleRejectReExamining = async (medicalBookId) => {\r\n        setLoading(true);\r\n        \r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 2);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetAppointmentsNextWeek();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handlePaginate();\r\n    }, [page]);\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1, p: 0 }}>\r\n            <TableContainer component={Paper} sx={{height: loading ? '40rem' : 'auto', position: 'relative'}}>\r\n                {loading ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>        \r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Box>\r\n                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                {listPantientAppointmentChipState.map((pantientAppointmentChipStateItem, pantientAppointmentChipStateIndex) => (\r\n                                    <Badge badgeContent={pantientAppointmentChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientAppointmentChipStateIndex}`}> \r\n                                        <Chip label={pantientAppointmentChipStateItem.chipLabel} color={pantientAppointmentChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                            onClick={() => handleSelectedChip(pantientAppointmentChipStateIndex, pantientAppointmentChipStateItem.chipLabel)} />  \r\n                                    </Badge>\r\n                                ))}\r\n                            </Stack>\r\n\r\n                            <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.15rem', fontWeight: 'bolder'}}>Danh sách {activeChip.chipLabel} trong 6 ngày tới</Typography>\r\n\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', mb: 1}}>\r\n                                <TextField sx={{width: 500, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc Số điện thoại' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                        startAdornment: (\r\n                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                        ),\r\n                                        endAdornment: (\r\n                                            <InputAdornment position='end'>\r\n                                                {searchPatientsQuery !== '' ? \r\n                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsAppointmentSort(listDataPatientsAppointmentState)]}\r\n                                                    /> \r\n                                                : \r\n                                                    null\r\n                                                }\r\n                                            </InputAdornment>  \r\n                                        )\r\n                                    }}>\r\n                                </TextField>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Table stickyHeader >\r\n                            <TableHead>\r\n                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                    <TableCell align='left' >Mã bệnh nhân</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày sinh</TableCell>\r\n                                    {/* <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Giới tính</TableCell> */}\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Địa chỉ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên Cha/Mẹ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Số điện thoại</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám cũ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám tiếp theo</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày hẹn khám</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Nhấn</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {listDataPatientsAppointmentSort.map((dataPantientAppointmentItem, dataPantientAppointmentIndex) => (\r\n                                    <TableRow hover role=\"checkbox\" key={dataPantientAppointmentIndex} sx={{':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1) !important'}}}>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientId}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientFullName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{moment(dataPantientAppointmentItem.dateOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                        {/* <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.gender === true ? 'Nam' : 'Nữ'}</TableCell> */}\r\n                                        <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 240, fontSize: '0.9rem'}}>\r\n                                            <Tooltip title={<Typography variant='subtitle2'>{dataPantientAppointmentItem.fullAddress}</Typography>} >\r\n                                                <span>{dataPantientAppointmentItem.fullAddress}</span>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.fullNameFather !== '' ? dataPantientAppointmentItem.fullNameFather : dataPantientAppointmentItem.fullNameMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.phoneFather !== '' ? dataPantientAppointmentItem.phoneFather : dataPantientAppointmentItem.phoneMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.examNameOld}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.nextExamName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto'}}>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                                <DemoContainer components={['DatePicker']}> \r\n                                                    <Box sx={{width: 145}}>\r\n                                                        <div style={{width: '100%'}}>\r\n                                                            <DatePicker label=\"Ngày khám dự kiến\" disablePast minDate={moment()}\r\n                                                                format='DD/MM/YYYY' value={moment(dataPantientAppointmentItem.appointmentDate)}\r\n                                                                onChange={(value) => onChangeAppointmentDate(dataPantientAppointmentItem.medicalBookId, value)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Box> \r\n                                                </DemoContainer>\r\n                                            </LocalizationProvider>\r\n                                        </TableCell>                                                                                                \r\n                                        <TableCell align={dataPantientAppointmentItem.stateAppointment === 0 ? 'left' : 'center'} sx={{width: 'auto', fontSize: '0.9rem'}}>\r\n                                            {dataPantientAppointmentItem.stateAppointment === 0 ?\r\n                                                <>   \r\n                                                    <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {dataPantientAppointmentItem.stateAppointment === 1 ?\r\n                                                        <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    :\r\n                                                        <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </>\r\n                }\r\n            </TableContainer>\r\n\r\n            {listDataPatientsAppointmentSort.length !== 0 && loading === false ?\r\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n                    <Pagination count={pageCount} page={page} onChange={handlePageChange} color=\"secondary\" />\r\n                </Box>\r\n            :\r\n                null\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainAppointmentExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport _ from 'lodash'\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DialogActions } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//other\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n//css\r\nimport './SCSS/CompleteExamining.scss';\r\n//api\r\nimport { createAddPredecessor, createAddMedicalBook, getAppointmentDate } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CompleteExamining(props) {\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState();\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n\r\n    const typingRef = useRef(null);\r\n    const textareaRef = useRef(null);\r\n    const dateFieldRef = useRef(null);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleCloseModalCompleteExamining = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n          return;\r\n        }\r\n        else{\r\n            setMainDataExaminingForConclusion();\r\n            props.setOpenModalCompleteExamining(false);\r\n        }\r\n      }\r\n\r\n    const onChangeExaminingConclusion = (value) => {\r\n        typingRef.current = setTimeout(() => {\r\n            setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                prevMainDataExaminingForConclusion.conclusion = value;\r\n                return {...prevMainDataExaminingForConclusion}\r\n            })\r\n        }, 300)\r\n    }\r\n\r\n    const onChangeAppointmentDate = (value) => {\r\n        if(value){\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n            typingRef.current = setTimeout(() => {\r\n                const takenValue = value._d;\r\n                const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n                if(formattedDate !== 'Invalid date'){\r\n                    setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                        prevMainDataExaminingForConclusion.appointmentDate = formattedDate;\r\n                        return {...prevMainDataExaminingForConclusion}\r\n                    })\r\n                }\r\n            }, 200)   \r\n        }\r\n    }\r\n\r\n    const handleSetDataCompleteExamining = async () => {\r\n        setOpenAlertProcessing(true);\r\n\r\n        const editDataExaminingForConclusion = _.clone(props.dataExaminingForConclusion);\r\n        editDataExaminingForConclusion.categories = editDataExaminingForConclusion.categories.map(categoriesItem => ({\r\n            ...categoriesItem,\r\n            // Lọc các categoryContents để giữ lại những phần tử có categoryContentQuestions không rỗng\r\n            categoryContents: categoriesItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length > 0)\r\n\r\n            // Loại bỏ các categories nếu tất cả categoryContents của nó đều bị loại bỏ\r\n        })).filter(categoriesItem => categoriesItem.categoryContents.length > 0);\r\n\r\n        const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        if(responseAppointmentDate.status === 200){\r\n            editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n            editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n            editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n            if(editDataExaminingForConclusion.isVaccination){\r\n                editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n                editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n                editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n            }\r\n\r\n        }else{\r\n            toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        }\r\n \r\n        setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        setOpenAlertProcessing(false);\r\n        if(props.dataExaminingForConclusion.conclusion !== ''){\r\n            const length = textareaRef.current.value.length;\r\n            textareaRef.current.setSelectionRange(length, length);\r\n            textareaRef.current.focus();\r\n        }\r\n        else{\r\n            textareaRef.current.focus();\r\n        }\r\n\r\n        // if(editDataExaminingForConclusion.categories.length !== 0){\r\n            \r\n        //     const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        //     if(responseAppointmentDate.status === 200){\r\n        //         editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n        //         editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n        //         editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n        //         if(editDataExaminingForConclusion.isVaccination){\r\n        //             editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n        //             editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n        //             editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n        //         }\r\n\r\n        //     }else{\r\n        //         toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        //     }\r\n \r\n        //     setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        //     setOpenAlertProcessing(false);\r\n        //     if(props.dataExaminingForConclusion.conclusion !== ''){\r\n        //         const length = textareaRef.current.value.length;\r\n        //         textareaRef.current.setSelectionRange(length, length);\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        //     else{\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    const handleAddMedicalBook = async () => {\r\n        if(checkValidate()){\r\n            setOpenAlertProcessing(true);\r\n    \r\n                if(mainDataExaminingForConclusion.categories.some(categoriesItem => categoriesItem.isPredecessor === true)){\r\n                    const categoryPres = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isPredecessor === true)\r\n                    const dataPredecessor = { patientId: mainDataExaminingForConclusion.patientId, categoryPres: categoryPres }\r\n                    await createAddPredecessor(dataPredecessor);\r\n                }\r\n\r\n                const categoriesHealthRecordExamining = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isHealthRecord === true)\r\n                mainDataExaminingForConclusion.categories = categoriesHealthRecordExamining\r\n                const responseAddMedicalBook = await createAddMedicalBook(mainDataExaminingForConclusion);\r\n                if(responseAddMedicalBook.status === 200){\r\n                    toast.success(responseAddMedicalBook.data, {toastId: 'success3'});\r\n                    props.handleCompleteExaminingForPantient();\r\n                    setMainDataExaminingForConclusion();\r\n                    props.setOpenModalCompleteExamining(false);\r\n                }\r\n                else{\r\n                    toast.error(responseAddMedicalBook.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            setOpenAlertProcessing(false);\r\n    }\r\n\r\n    const checkValidate = () => {\r\n        let isValid = true;\r\n        if(mainDataExaminingForConclusion.conclusion === null){\r\n            textareaRef.current.focus();\r\n            toast.error('Bạn chưa nhập kết luận khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === 'Invalid date'){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Ngày tái khám không hợp lệ', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === ''){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Bạn chưa chọn ngày tái khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalCompleteExamining){\r\n            handleSetDataCompleteExamining();\r\n        }\r\n    }, [props.openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalCompleteExamining} onClose={(event, reason) => handleCloseModalCompleteExamining(event, reason)} disableEscapeKeyDown={true}>\r\n                <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Tóm tắt quá trình khám</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalCompleteExamining()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='large'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                    <Box sx={{pl: 6, pr: 6}}>\r\n                        <List sx={{p: 0}}>\r\n                            <Box>\r\n                                {mainDataExaminingForConclusion ? \r\n                                    mainDataExaminingForConclusion.categories.length !== 0 ? \r\n                                        <div className='category-complete-examining'>\r\n                                            {mainDataExaminingForConclusion.categories.map((categoriesItem, categoriesIndex) => (\r\n                                                <div key={`categoriesItem ${categoriesIndex}`}>\r\n                                                    <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                        {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                            <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                                \r\n                                                                {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                    <div key={`questionItem ${questionIndex}`}>\r\n                                                                        <Grid container rowSpacing={0}>\r\n                                                                            {questionIndex === 0 ?\r\n                                                                                <>\r\n                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                    </Grid> \r\n\r\n                                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                        <>\r\n                                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                            </Grid>\r\n                                                                        \r\n                                                                                            <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                        </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    }   \r\n                                                                                </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n                                                                \r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                                classes={{ root: classes.root }}\r\n                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                            />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={5.5} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                :   \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={8} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                }                                                                                                                                                                          \r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    :\r\n                                        <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                :\r\n                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                }\r\n                            </Box>\r\n                        </List>\r\n                    </Box>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{borderTop: '1px solid black'}}>\r\n                    {mainDataExaminingForConclusion ? \r\n                        <div style={{width: '100%', padding: '8px 50px 8px 50px'}}>\r\n                            <TextareaAutosize key={`pantientId ${mainDataExaminingForConclusion.patientId}`} placeholder='Kết luận của bác sĩ' style={{width: '100%', padding: '15px', fontSize: '17px'}} onChange={(e) => onChangeExaminingConclusion(e.target.value)} ref={textareaRef} defaultValue={mainDataExaminingForConclusion.conclusion} /> \r\n                            \r\n                                {mainDataExaminingForConclusion.isVaccination ? \r\n                                    <>\r\n                                        <Box sx={{mb: 0.4}}>\r\n                                            {mainDataExaminingForConclusion.vaccination === '' || mainDataExaminingForConclusion.vaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.vaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.nextVaccination === '' || mainDataExaminingForConclusion.nextVaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.nextVaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.reminder === '' ||  mainDataExaminingForConclusion.reminder === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.reminder}`}</Typography>\r\n                                                </>\r\n                                            }\r\n                                        </Box>\r\n                                            \r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n\r\n                                {mainDataExaminingForConclusion.appointmentDate ? \r\n                                <>\r\n                                    <Box sx={{display: 'flex', justifyContent: 'center', mb: 2}}>\r\n                                        <Typography variant='h6' sx={{mt: 'auto', mb: 'auto', mr: 2}}>Kỳ khám tiếp theo: <span style={{fontWeight: 'bolder', color: '#ff1744'}}>{mainDataExaminingForConclusion.nextExamName}</span></Typography>\r\n                                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                            <DemoContainer components={['DatePicker']}>  \r\n                                                <DatePicker label=\"Ngày khám dự kiến\" disablePast\r\n                                                    format='DD/MM/YYYY' defaultValue={moment(mainDataExaminingForConclusion.appointmentDate)}\r\n                                                    onChange={(value) => onChangeAppointmentDate(value)}\r\n                                                    slotProps={{ \r\n                                                        textField: { inputRef: dateFieldRef, }\r\n                                                    }}\r\n                                                />\r\n                                            </DemoContainer>\r\n                                        </LocalizationProvider>\r\n                                    </Box>\r\n                                </>\r\n                                :\r\n                                    null\r\n                                }\r\n                        \r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <Stack spacing={1} direction=\"row\">\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' onClick={() => handleAddMedicalBook()}>Lưu</Button>\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' color={'error'} onClick={() => handleCloseModalCompleteExamining()}>Đóng</Button>\r\n                                </Stack>\r\n                            </div>\r\n                        </div>   \r\n                    :\r\n                        null            \r\n                    }             \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//scss\r\nimport './SCSS/PreviewLastExamining.scss'; \r\n//api\r\nimport { getMedicalBook } from '../../Service/MedicalService';\r\n//moment\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi'; \r\nmoment.locale('vi');\r\n\r\nfunction PreviewLastExamining(props) {\r\n    const previewDataExaminingDefault = {\r\n        categoryPres: [],\r\n        healthRecords: { examinationName: '', timeUpdateState: '', conclusion: '', medicakBook: [] },\r\n        nutritionals: [],\r\n        vaccinationBook: [] \r\n    }\r\n\r\n    const [previewDataExamining, setPreviewDataExamining] = useState(previewDataExaminingDefault);\r\n    // const [fullDataPredecessor, setFullDataPredecessor] = useState();\r\n    // const [fullDataHealthRecord, setFullDataHealthRecord] = useState();\r\n    \r\n    const [loadingMedicalBook, setLoadingMedicalBook] = useState(false);\r\n\r\n    const [openCollapsePredecessorItem, setOpenCollapsePredecessorItem] = useState([]);\r\n    const [openCollapseMedicakBookItem, setOpenCollapseMedicakBookItem] = useState([]);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpenPredecessorItem = (predecessorIndex) => {\r\n        setOpenCollapsePredecessorItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[predecessorIndex] = !newOpen[predecessorIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleOpenMedicakBookItem = (medicakBookIndex) => {\r\n        setOpenCollapseMedicakBookItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[medicakBookIndex] = !newOpen[medicakBookIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    // const handeOnChangePagePredecessor = (e, page, indexPredecessor) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].categoryContents = fullDataPredecessor[indexPredecessor].categoryContents[page - 1];\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    // const handeOnChangePageHealthRecords = (e, page, indexMedicakbook) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].categoryContents = fullDataHealthRecord[indexMedicakbook].categoryContents[page - 1];\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    const handleEditPrevDataExamining = async () => {\r\n        setLoadingMedicalBook(true);\r\n        const responseMedicalBook = await getMedicalBook(props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0].medicalRegisterId);\r\n        if(props.prevDataExamining.newPredecessor){\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n             \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: [],\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n\r\n        else{\r\n            if(props.prevDataExamining.categoryPres.length > 1){\r\n                props.prevDataExamining.categoryPres = props.prevDataExamining.categoryPres.sort((a, b) => a.categoryOrder - b.categoryOrder);\r\n            }\r\n\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n            \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: props.prevDataExamining.categoryPres,\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n        setLoadingMedicalBook(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.prevDataExamining){\r\n            handleEditPrevDataExamining();\r\n        }\r\n    }, [props.prevDataExamining])\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{height: '100%', position: 'relative'}}>\r\n                {loadingMedicalBook ? \r\n                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                        <CircularProgress />\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh gần nhất, hãy chờ một chút...</Typography>\r\n                    </Box>\r\n                :\r\n                    <>\r\n                        <div className='preview-last-examining-contents' >\r\n\r\n                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem'}}>\r\n                                Thông tin tóm tắt <span style={{color: 'red'}}>{previewDataExamining.healthRecords.examinationName}</span>\r\n                            </Typography>\r\n\r\n                            <List sx={{p: 0}}>\r\n                                {previewDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                    <div key={`predecessorItem ${predecessorIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenPredecessorItem(predecessorIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapsePredecessorItem[predecessorIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapsePredecessorItem[predecessorIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {predecessorItem.categoryContents.map((predecessorItemCategoryContentsItem, predecessorItemCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`predecessorItemCategoryContentsIndex ${predecessorItemCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: predecessorItemCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{predecessorItemCategoryContentsItem.categoryContentTitle}</Typography>\r\n                                                    \r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {predecessorItemCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{predecessorItemCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={6.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                                    \r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={6.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))} \r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                {previewDataExamining.healthRecords.medicakBook.map((medicakBookItems, medicakBookIndex) => (\r\n                                    <div key={`medicakBookItems ${medicakBookIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenMedicakBookItem(medicakBookIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseMedicakBookItem[medicakBookIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={medicakBookItems.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapseMedicakBookItem[medicakBookIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {medicakBookItems.categoryContents.map((medicakBookCategoryContentsItem, medicakBookCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`medicakBookCategoryContentsIndex ${medicakBookCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: medicakBookCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{medicakBookCategoryContentsItem.categoryContentTitle}</Typography>\r\n\r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {medicakBookCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{medicakBookCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={5.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))}\r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}             \r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n                            </List>\r\n\r\n                            <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận: ${previewDataExamining.healthRecords.conclusion}`}</Typography>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='time-examining' style={{marginLeft: '16px', marginTop: '4px', width: '99%'}}>\r\n                            <Typography variant='subtitle1' sx={{color: '#009688', fontWeight: 'bolder', fontSize: '1.08rem'}}>{`${previewDataExamining.healthRecords.doctorFullName}, ${moment(previewDataExamining.healthRecords.timeUpdateState).format('LLLL')}`}</Typography>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Box>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default PreviewLastExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//lodash\r\nimport _, { constant } from \"lodash\";\r\n//modal\r\nimport CompleteExamining from '../ManageCompleteExamining/CompleteExamining';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//components\r\nimport PreviewLastExamining from './PreviewLastExamining';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { GiWeightScale } from \"react-icons/gi\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport { TbRulerMeasure } from \"react-icons/tb\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport BeenhereIcon from '@mui/icons-material/Beenhere';\r\nimport VaccinesIcon from '@mui/icons-material/Vaccines';\r\n//moment\r\nimport moment from 'moment';\r\n//scss\r\nimport './SCSS/DoctorExamining.scss';\r\n//real-time\r\nimport {startSignalRConnection, onReceiveMessage} from '../../Service/SignalService';\r\n//api\r\nimport { \r\n    createAddPredecessor,\r\n    getMedicalDetailPatient,\r\n    getRegistersByDateNow, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook,\r\n    updateMedicalState,\r\n    deleteMedicalBook\r\n} from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainDoctorExamining() {\r\n    const dataPantientsReadyExaminingDefault = {\r\n        stt: '',\r\n        id: '',\r\n        patientsId: '',\r\n        patientCode: '',\r\n        patientsName: '',\r\n        patientsDOB: '',\r\n        patientsMonthsOld: '',\r\n        patientsGender: '',\r\n        patientsHeight: '',\r\n        patientsWeight: '',\r\n        patientsHeadCircumference: '',\r\n        patientsPhone: '',\r\n        patientsAddress: ''\r\n    }\r\n\r\n    const { user, loading, alertVisible, confirmAlert, resetAlert, isLogOutClick, isDialogChangePasswordOpen } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isFormDirty, setIsFormDirty] = useState(false);\r\n\r\n    //state thông tin bệnh nhân ban đầu \r\n    const [dataPantientsReadyExamining, setDataPantientsReadyExamining] = useState(dataPantientsReadyExaminingDefault);\r\n\r\n    //state các category gồm tiêu đề nội dung khám và câu hỏi khám ban đầu\r\n    const [mainDataExamining, setMainDataExamining] = useState([]);\r\n\r\n    //state lưu tạm data các kỳ khám \r\n    const [prevDataExamining, setPrevDataExamining] = useState();\r\n\r\n    //state đóng mở cây thư mục khám của sổ khám bệnh\r\n    const [openCollapseHealthRecords, setOpenCollapseHealthRecords] = useState(false);\r\n\r\n    //state đóng mở chi tiết nội dung của sổ khám bệnh\r\n    const [openCollapseHealthRecordsItem, setOpenCollapseHealthRecordsItem] = useState([]);\r\n\r\n    //state chọn danh mục khám ban đầu\r\n    const [categorySelectedExamining, setCategorySelectedExamining] = useState({});\r\n\r\n    //state chọn danh mục bao gồm nội dung bên trong ban đầu\r\n    const [contentCategorySelectedExamining, setContentCategorySelectedExamining] = useState([]);\r\n\r\n    //state lưu tạm nội dung chi tiết của sổ khám bệnh\r\n    const [healthRecordsContents, setHealthRecordsContents] = useState([]);\r\n    const [currentHealthRecordExamining, setCurrentHealthRecordExamining] = useState();\r\n\r\n    //tiền căn show ở thông tin bệnh nhân\r\n    const [previewPredecessor, setPreviewPredecessor] = useState();\r\n\r\n    //state các câu hỏi được bác sĩ khám tích hoặc gõ vào\r\n    const [dataExaminingForConclusion , setDataExaminingForConclusion ] = useState({});\r\n\r\n    //state lưu tạm các data tiền căn của getUpdatePredecessor (bao gồm những data tiền căn đã chọn và chưa chọn)\r\n    const [oldDataPredecessor, setOldDataPredecessor] = useState();\r\n\r\n    //dùng khi tái khám hoặc mở khám lại cho bệnh nhân có tiền căn đã đụng\r\n    const [newDataPredecessor, setNewDataPredecessor] = useState();\r\n\r\n    //state lưu data tiền căn cũ (những data tiền căn đã chọn)  \r\n    const [prevDataPredecessor, setPrevDataPredecessor] = useState();\r\n\r\n    //state quản lý modal kết thúc khám\r\n    const [openModalCompleteExamining, setOpenModalCompleteExamining] = useState(false);\r\n\r\n    const [loadingPrevDataExamining, setLoadingPrevDataExamining] = useState(false);\r\n    const [loadingPatient, setLoadingPatient] = useState(true);\r\n    const [loadingInfoPatient, setLoadingInfoPatient] = useState(true);\r\n    const [loadingCategoryExamining, setLoadingCategoryExamining] = useState(false);\r\n    const [loadingContentsExamining, setLoadingContentsExamining] = useState(false);\r\n\r\n    const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n  \r\n    const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n    const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n    const [listPantientChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n            { chipLabel: 'BN đã khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n          const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n            setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n            setListDataPatientsRegisterState(listPantientRegisterDone);\r\n        }\r\n    };\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n        }else{\r\n          setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n        }\r\n      }\r\n    \r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const handleCompleteExaminingForPantient = () => {\r\n        setLoadingPatient(true);\r\n        toast.success(`Đã kết thúc khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setCurrentHealthRecordExamining();\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        setPreviewPredecessor();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleCancelExamining = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingCategoryExamining(true);\r\n        setLoadingContentsExamining(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, [dataPantientsReadyExamining.editExamining === true ? 2 : 0 || dataPantientsReadyExamining.backRegister === true ? 3 : 0]);\r\n        if(response.status === 200){\r\n            toast.success(`Đã hủy khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success2'});    \r\n            setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n            setMainDataExamining([]);\r\n            setOpenCollapseHealthRecords(false);\r\n            setOpenCollapseHealthRecordsItem([]);\r\n            setCategorySelectedExamining({});\r\n            setContentCategorySelectedExamining([]);\r\n            setHealthRecordsContents([]);\r\n            setCurrentHealthRecordExamining();\r\n            setDataExaminingForConclusion({});\r\n            setPrevDataPredecessor();\r\n            setCurrentHealthRecordExamining();\r\n            setOldDataPredecessor();\r\n            setPreviewPredecessor();\r\n            handleGetRegistersByDateNow();\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    const handleDeleteExamining = async () => {\r\n        const confirmLeave = window.confirm(\r\n            'Chức năng này sẽ xóa tất cả dữ liệu của kỳ khám hiện tại và đặt bệnh nhân về trạng thái chưa khám. Bạn có muốn xóa không?'\r\n        );\r\n        if (confirmLeave) {\r\n            setLoadingPatient(true);\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const responseDeleteMedicalBook = await deleteMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n            if(responseDeleteMedicalBook.status === 200){\r\n                toast.success(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingSuccess'});\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    await updateMedicalState(dataPantientsReadyExamining.id, 3);\r\n                }\r\n                setPrevDataExamining();\r\n                if(previewPredecessor && previewPredecessor.length !== 0){\r\n                    setPreviewPredecessor();\r\n                }\r\n                setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n                setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n                handleGetRegistersByDateNow();\r\n            }\r\n            else{\r\n                toast.error(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingError'});\r\n            }\r\n            setOpenAlertProcessingBackdrop(false);\r\n        } else {\r\n            return false; // Ngăn điều hướng\r\n        }\r\n    }\r\n\r\n    const handleStartExaminingButtonClick = () => {\r\n        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n            handleBeginExaminingForPantient();\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 1){\r\n            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n            handleBeginEditExaminingForPantient();\r\n        }\r\n    }\r\n\r\n    const handleCompleteExaminingButtonClick = () => {\r\n        setOpenAlertProcessingBackdrop(true)\r\n        if(dataPantientsReadyExamining.status === 1){\r\n            setTimeout(() => {\r\n            setOpenAlertProcessingBackdrop(false)\r\n                setOpenModalCompleteExamining(true);\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    //hàm này dùng khi user đang khám mà bị ngáo lỡ nhấn f5\r\n    const handleReloadUIWhenExamining = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        const reDataPatientsRegisterSort = JSON.parse(sessionStorage.dataPatientsRegisterSort)\r\n        const reDataPantientsReadyExamining = JSON.parse(sessionStorage.dataPantientsReadyExamining);\r\n        const reMainDataExamining = JSON.parse(sessionStorage.mainDataExamining);\r\n        const reDataExaminingForConclusion = JSON.parse(sessionStorage.dataExaminingForConclusion);\r\n\r\n        setListDataPatientsRegisterSort(reDataPatientsRegisterSort);\r\n        \r\n        reDataPantientsReadyExamining.isContinueExam = true;\r\n        \r\n        setDataPantientsReadyExamining(_.cloneDeep(reDataPantientsReadyExamining));\r\n        setMainDataExamining(_.cloneDeep(reMainDataExamining));\r\n        setDataExaminingForConclusion(_.cloneDeep(reDataExaminingForConclusion));\r\n\r\n        if(sessionStorage.currentHealthRecordExamining){\r\n            const reCurrentHealthRecordExamining = JSON.parse(sessionStorage.currentHealthRecordExamining);\r\n            setHealthRecordsContents(_.cloneDeep(reCurrentHealthRecordExamining));\r\n            setCurrentHealthRecordExamining(_.cloneDeep(reCurrentHealthRecordExamining));\r\n        }\r\n\r\n        if(sessionStorage.prevDataPredecessor){\r\n            const rePrevDataPredecessor = JSON.parse(sessionStorage.prevDataPredecessor);\r\n            setPrevDataPredecessor(_.cloneDeep(rePrevDataPredecessor));\r\n        }\r\n\r\n        if(sessionStorage.oldDataPredecessor){\r\n            const reOldDataPredecessor = JSON.parse(sessionStorage.oldDataPredecessor);\r\n            setOldDataPredecessor(_.cloneDeep(reOldDataPredecessor));\r\n        }\r\n        \r\n        setNewDataPredecessor({\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            categoryPres: []\r\n        })\r\n        \r\n        sessionStorage.clear();\r\n\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //lấy danh sách đăng ký khám trong ngày\r\n    const handleGetRegistersByDateNow = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1 * 1000));\r\n        const response = await getRegistersByDateNow();\r\n        if(response !== 400){\r\n            const findListPantientNotExam = response.list.filter(item => item.state !== 1)\r\n            setListDataPatientsRegister(findListPantientNotExam);\r\n\r\n            let listPantientRegisterWaiting = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n            let listPantientRegisterDone = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n\r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const updatedList = [\r\n                { chipLabel: 'BN chờ khám', chipContent: listPantientRegisterWaiting.length },\r\n                { chipLabel: 'BN đã khám', chipContent: listPantientRegisterDone.length }\r\n            ]\r\n            setListPantientChipState(updatedList);\r\n        }\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n    }\r\n\r\n    const handleAppyPantientData = async (dataPantientItem) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingPrevDataExamining(true);\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            setPreviewPredecessor();\r\n        }\r\n        await handleGetMedicalDetailPatient(dataPantientItem.id);\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.stt = dataPantientItem.order;\r\n        _dataPantientsReadyExamining.id = dataPantientItem.id;\r\n        _dataPantientsReadyExamining.status = 0;\r\n        _dataPantientsReadyExamining.patientsId = dataPantientItem.patient.patientId;\r\n        _dataPantientsReadyExamining.patientCode = dataPantientItem.patient.patientCode;\r\n        _dataPantientsReadyExamining.patientsName = dataPantientItem.patient.fullName;\r\n        _dataPantientsReadyExamining.patientsDOB = dataPantientItem.patient.dayOfBirth;\r\n        _dataPantientsReadyExamining.patientsMonthsOld = dataPantientItem.patient.monthsOfAge;\r\n        _dataPantientsReadyExamining.patientsGender = dataPantientItem.patient.gender;\r\n        _dataPantientsReadyExamining.patientsHeight = dataPantientItem.height;\r\n        _dataPantientsReadyExamining.patientsWeight = dataPantientItem.weight;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsPhone = dataPantientItem.patient.phoneMother ? dataPantientItem.patient.phoneMother : dataPantientItem.patient.phoneFather;\r\n        _dataPantientsReadyExamining.patientsAddress = dataPantientItem.patient.fullAddress;\r\n        _dataPantientsReadyExamining.vaccination = dataPantientItem.vaccination === true ? true : false;\r\n        _dataPantientsReadyExamining.editExamining = dataPantientItem.state === 2 ? true : false;\r\n        _dataPantientsReadyExamining.backRegister = dataPantientItem.state === 3 ? true : false;\r\n        _dataPantientsReadyExamining.isContinueExam = false;\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n        setLoadingInfoPatient(false);\r\n        setLoadingPrevDataExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //nhấn chọn bệnh nhân để load vào ô thông tin bn\r\n    const handleSelectPantientExamining = async (dataPantientItem) => {\r\n        if(dataPantientItem.state === 0 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName || dataPantientItem.state === 3 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId === '' || dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 0){\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n            else{\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n        }\r\n        \r\n        else if(dataPantientItem.state === 2 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 1){\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n            else{\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    //bắt đầu khám bệnh cho bệnh nhân\r\n    const handleBeginExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            if(prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                    //backup prevDataPredecessor để khi cần dùng\r\n                    setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n                }\r\n\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleSetMainDataExamining();\r\n                toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n            }\r\n            else{\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleGetCategoryReExamining();\r\n            }\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error(response.data, {toastId: 'error1'});\r\n        }\r\n        setLoadingPatient(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu khám cho bệnh nhân khám mới\r\n    const handleSetMainDataExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        prevDataExamining.healthRecords.forEach((healthRecordsItem) => {\r\n            if(healthRecordsItem.medicalBookId === null){\r\n                healthRecordsItem.state = 1\r\n            }\r\n        })\r\n        \r\n        //tái khám và có tiền căn đã đụng\r\n        if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === false){\r\n            const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //tái khám và có tiền căn chưa đụng\r\n        else if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === true){\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n\r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //khám mới hoàn toàn\r\n        else{\r\n            const editDataCategoryPresForConclusion = prevDataExamining.categoryPres.map((predecessorItem) => {\r\n                const mainCategoryContentsExamining = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentOrder: categoryContentsItem.categoryContentOrder,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n    \r\n                const mainCategoryExamining = {\r\n                    categoryName: predecessorItem.categoryName,\r\n                    isPredecessor: true,\r\n                    categoryOrder: predecessorItem.categoryOrder,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n    \r\n                return mainCategoryExamining\r\n            })\r\n    \r\n            const editDataHealthRecordsForConclusion = prevDataExamining.healthRecords.find((healthRecordsItem) => healthRecordsItem.patientId === dataPantientsReadyExamining.patientsId)\r\n    \r\n            setDataExaminingForConclusion({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n                conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n                categories: editDataCategoryPresForConclusion,\r\n            });\r\n    \r\n            prevDataExamining.categoryPres.forEach((categoryPresItem, categoryPresIndex) => {\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.map((categoryContentsItem) => {\r\n                    return {\r\n                        ...categoryContentsItem,\r\n                        categoryPresOrder: categoryPresIndex\r\n                    }\r\n                })\r\n                return {\r\n                    ...categoryPresItem,\r\n                }\r\n            })\r\n            \r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //bắt đầu sửa dữ liệu khám bệnh\r\n    const handleBeginEditExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n            const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n            _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n            setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n            const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            await handleGetCategoryReExamining();\r\n            setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n            setLoadingPatient(false);\r\n        }\r\n    }\r\n\r\n    //lấy dữ liệu cây thư mục khám lại\r\n    const handleGetCategoryReExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        const responseGetUpdateMedicalBook = await getUpdateMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n\r\n        if(responseGetUpdateMedicalBook.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n\r\n            if(prevDataExamining.newPredecessor === false){\r\n                setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                //backup prevDataPredecessor để khi cần dùng\r\n                setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n            }\r\n            \r\n            await handleSetMainDataReExamining(responseGetUpdateMedicalBook.data);\r\n            toast.success(`Đang mở khám lại cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        }\r\n        else if(responseGetUpdateMedicalBook.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu cây thư mục khám của chức năng mở khám lại\r\n    const handleSetMainDataReExamining = async (responseGetUpdateMedicalBookData) => {\r\n        prevDataExamining.healthRecords[0].state = 1\r\n        prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBookData.categories\r\n\r\n        const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n            categoryName: category.categoryName,\r\n            isHealthRecord: true,\r\n            categoryContents: category.categoryContents.map(content => ({\r\n              ...content,\r\n              categoryContentQuestions: []\r\n            })) \r\n        }))\r\n\r\n        //demo truớc data kết luận\r\n        const demoDataExaminingForConclusion = {\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            isVaccination: prevDataExamining.vaccination,\r\n            medicalRegisterId: dataPantientsReadyExamining.id !== prevDataExamining.healthRecords[0].medicalRegisterId ? dataPantientsReadyExamining.id : prevDataExamining.healthRecords[0].medicalRegisterId,\r\n            conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n            categories: updateHealthRecordsCategoriesForConclusion\r\n        }\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        //sửa categories của conclusion phần sổ khám bệnh\r\n        let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.healthRecords[0].categories);\r\n\r\n        updateCategoriesForConclusion = updateCategoriesForConclusion.map(category => {\r\n            category.categoryContents = category.categoryContents.map(content => {\r\n                const questions = content.categoryContentQuestions;\r\n    \r\n                // Check if all questions have both categoryContentAnswer and categoryContentNote as null\r\n                const allNull = questions.every(q => q.categoryContentAnswer === null && q.categoryContentNote === null);\r\n                    \r\n                if (allNull) {\r\n                  // Set categoryContentQuestions to an empty array\r\n                  content.categoryContentQuestions = [];                    \r\n                } else {\r\n                  // Filter out questions with both categoryContentAnswer and categoryContentNote as null\r\n                  content.categoryContentQuestions = questions.filter(q => q.categoryContentAnswer !== null || q.categoryContentNote !== null);\r\n                }\r\n                    \r\n                return content;\r\n            });\r\n                  \r\n            category.isHealthRecord = true\r\n            return category;\r\n        })\r\n\r\n        demoDataExaminingForConclusion.categories = updateCategoriesForConclusion\r\n\r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        //tiền căn đợt trước đã đụng (newPredecessor = false)\r\n        if(responseGetUpdatePredecessor.status === 200)\r\n        {   \r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        \r\n        //tiền căn đợt trước chưa đụng (newPredecessor = true) \r\n        else{\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n        \r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n    }\r\n\r\n    //sửa dữ liệu tiền căn cho mở khám lại hoặc tái khám\r\n    const handleEditDataPredecessor = async (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        \r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        const findUpdatePredecessor = responseGetUpdatePredecessor.data.find(responseGetUpdatePredecessorItem => responseGetUpdatePredecessorItem.categoryOrder === categoryOrder);\r\n\r\n        mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n            if(categoryPresItem.categoryOrder === findUpdatePredecessor.categoryOrder){\r\n                categoryPresItem.categoryContents = findUpdatePredecessor.categoryContents\r\n                categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                    categoryContentsItem.isLock = false\r\n                })\r\n                categoryPresItem.isLock = false\r\n            }\r\n        })\r\n\r\n        const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n        \r\n        if(!newDataPredecessor.categoryPres.some(categoryPresItem => categoryPresItem.categoryName === categoryName)){\r\n            newDataPredecessor.categoryPres = prevDataPredecessor\r\n        }\r\n\r\n        handleSelectCategoryClick(selectCategoryReExamining);\r\n\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //huỷ không sửa dữ liệu tiền căn nữa\r\n    const handleCancelEditDataPredecessor = (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        setTimeout(() => {\r\n            const findPrevDataPredecessorByCategoryName = oldDataPredecessor.find(prevDataPredecessorItem => prevDataPredecessorItem.categoryOrder === categoryOrder);\r\n\r\n            if(findPrevDataPredecessorByCategoryName){\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        categoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                        categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                            categoryContentsItem.isLock = true\r\n                        })\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                newDataPredecessor.categoryPres.forEach((newDataPredecessorCategoryPresItem) => {\r\n                    if(newDataPredecessorCategoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        newDataPredecessorCategoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === categoryOrder){\r\n                        categoryPresItem.categoryContents = [];\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                const _newDataPredecessor = {...newDataPredecessor};\r\n                const removeCategoryPredecessor = _newDataPredecessor.categoryPres.filter(categoryPresItem => categoryPresItem.categoryOrder !== categoryOrder);\r\n                newDataPredecessor.categoryPres = removeCategoryPredecessor\r\n            }\r\n\r\n            setPrevDataPredecessor(_.cloneDeep(oldDataPredecessor));\r\n\r\n            const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n            handleSelectCategoryClick(selectCategoryReExamining)\r\n   \r\n            setOpenAlertProcessingBackdrop(false);\r\n        }, 300)       \r\n    }\r\n\r\n    //tạo data tiền căn để lưu lại khi tái khám hoặc mở khám lại\r\n    //câu trả lời dạng check chọn true false\r\n    const handleAnswerCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n    }\r\n\r\n    //câu trả lời dạng check chọn sửa lại note\r\n    const handleNoteCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n        const isEditNote = true;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], takenValue, isEditNote)\r\n        }, 300)\r\n    }\r\n\r\n    //câu trả lời dạng giá trị, sửa lại note\r\n    const handleNoteValueQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsValuePredecessorForReExamOrBackExam(\r\n                categoryContentsIndex,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, \r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], \r\n                takenValue\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const createSelectedQuestionsValuePredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue) => {\r\n        const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n        if(findNewDataPredecessorCategoryOrder){\r\n            // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n            const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n            if(findNewDataPredecessorCategoryContents){\r\n                // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue !== '');\r\n                const questionIndexRemove = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue === '');\r\n\r\n                if(questionIndex !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value khác rỗng => gán note cũ bằng note mới\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n                }\r\n\r\n                else if(questionIndexRemove !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value bằng rỗng => bỏ note đó\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexRemove, 1);\r\n                }\r\n\r\n                else{\r\n                    //nếu không tìm thấy, đẩy note mới vào\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                }\r\n            }\r\n\r\n            else{\r\n                // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                const newDataPredecessorCategoryContents = {\r\n                    categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                    categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                    categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                    categoryContentQuestions: [categoryContentQuestion],\r\n                    categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                    categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                }\r\n                findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n            }\r\n        }\r\n\r\n        else{\r\n            // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n            const newDataPredecessorCategoryContents = {\r\n                categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                categoryContentQuestions: [categoryContentQuestion],\r\n                categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n            }\r\n\r\n            const newDataPredecessorCategoryPres = {\r\n                categoryOrder: categorySelectedExamining.categoryOrder,\r\n                categoryName: categorySelectedExamining.categoryName,\r\n                newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                categoryContents: [newDataPredecessorCategoryContents]\r\n            }\r\n\r\n            newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n        }         \r\n    }\r\n\r\n    const createSelectedQuestionsPredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue, isEditNote) => {\r\n        if(isEditNote){\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){       \r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng rỗng\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n         \r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                        else{\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndex, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else{\r\n            //câu hỏi là dạng check câu trả lời là true\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote !== '');\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n                        }\r\n                        else{\r\n                            // Nếu tìm thấy categoryContentOrder, thêm câu hỏi mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }       \r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents)\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check câu trả lời là false\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndexNoteDontExit = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote === null);\r\n                        if(questionIndexNoteDontExit !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexNoteDontExit, 1);\r\n                        }\r\n                        else{\r\n                            const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n    }\r\n\r\n    //lưu dữ liệu tiền căn khi sửa xong\r\n    const handleEditDataPredecessorForSaving = (categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setTimeout(() => {\r\n            const findNewDataPredecessor = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPres => newDataPredecessorCategoryPres.categoryOrder === categoryOrder)\r\n\r\n            const findOldDataPredecessorCategoryOrder = oldDataPredecessor.find(oldDataPredecessorItem => oldDataPredecessorItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n\r\n            if(findOldDataPredecessorCategoryOrder){\r\n                // Nếu tìm thấy categoryOrder, duyệt qua categoryContents của findNewDataPredecessor\r\n                findNewDataPredecessor.categoryContents.forEach(findNewDataPredecessorCategoryContentsItem => {\r\n\r\n                    let content = findOldDataPredecessorCategoryOrder.categoryContents.find(findOldDataPredecessorCategoryContentsItem => findOldDataPredecessorCategoryContentsItem.categoryContentOrder === findNewDataPredecessorCategoryContentsItem.categoryContentOrder);\r\n\r\n                    if(content){\r\n                        // Loại bỏ các categoryContentQuestions trong content nếu không tồn tại trong findNewDataPredecessorCategoryContentsItem\r\n                        content.categoryContentQuestions = content.categoryContentQuestions.filter(q =>\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.some(newQ => newQ.categoryContentQuestionOrder === q.categoryContentQuestionOrder)\r\n                        );\r\n\r\n                        // Nếu tìm thấy categoryContentOrder, duyệt qua categoryContentQuestions\r\n                        if(findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.length !== 0){\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.forEach(findNewDataPredecessorQuestionItem => {\r\n                                if(findNewDataPredecessorQuestionItem.categoryContentAnswer === null && findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'check'){\r\n                                    // Nếu categoryContentAnswer là false và categoryContentNote là null, loại bỏ question đó\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else if(findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'string'){\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else{\r\n                                    const questionIndex = content.categoryContentQuestions.findIndex(q => q.categoryContentQuestionOrder === findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n\r\n                                    if (questionIndex !== -1) {\r\n                                        // Thay thế question nếu trùng khớp\r\n                                        content.categoryContentQuestions[questionIndex] = findNewDataPredecessorQuestionItem;\r\n                                    }\r\n\r\n                                    else {\r\n                                        // Thêm question mới nếu không trùng khớp\r\n                                        content.categoryContentQuestions.push(findNewDataPredecessorQuestionItem);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        }else{\r\n                            findOldDataPredecessorCategoryOrder.categoryContents = findOldDataPredecessorCategoryOrder.categoryContents.filter(contentCategoryContentsItem => contentCategoryContentsItem.categoryContentOrder !== findNewDataPredecessorCategoryContentsItem.categoryContentOrder)\r\n                        }\r\n                        \r\n                    }else{\r\n                        findOldDataPredecessorCategoryOrder.categoryContents.push(findNewDataPredecessorCategoryContentsItem);\r\n                    }\r\n\r\n                })\r\n            }else{\r\n                // Thêm toàn bộ object2 nếu không tìm thấy findNewDataPredecessor\r\n                oldDataPredecessor.push(findNewDataPredecessor)\r\n            }\r\n\r\n            oldDataPredecessor.forEach((oldDataPredecessorItem) => {\r\n                oldDataPredecessorItem.categoryContents = oldDataPredecessorItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length !== 0)\r\n            }) \r\n\r\n            const removeOldDataPredecessorCategoryPres = oldDataPredecessor.findIndex(item => item.categoryContents.length === 0);\r\n            if(removeOldDataPredecessorCategoryPres !== -1){\r\n                oldDataPredecessor.splice(removeOldDataPredecessorCategoryPres, 1);\r\n            }\r\n\r\n            const saveNewDataPredecessor = {\r\n                patientId: newDataPredecessor.patientId,\r\n                categoryPres: oldDataPredecessor\r\n            }\r\n\r\n            handleSaveNewDataPredecessor(saveNewDataPredecessor, findNewDataPredecessor)            \r\n        }, 500)\r\n    }\r\n\r\n    const handleSaveNewDataPredecessor = async (saveNewDataPredecessor, findNewDataPredecessor) => {\r\n        const responseCreateAddPredecessor = await createAddPredecessor(saveNewDataPredecessor);\r\n        if(responseCreateAddPredecessor.status === 200){\r\n\r\n            const _mainDataExamining = {...mainDataExamining};\r\n\r\n            _mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                if(categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder){\r\n                    categoryPresItem.categoryContents = findNewDataPredecessor.categoryContents\r\n                    categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                        categoryContentsItem.isLock = true\r\n                    })\r\n                    if(findNewDataPredecessor.categoryContents.length === 0){\r\n                        categoryPresItem.newCategoryPre = true\r\n                    }else{\r\n                        categoryPresItem.newCategoryPre = false\r\n                    }\r\n                    categoryPresItem.isLock = true\r\n                }\r\n\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.filter(item => item.categoryContentQuestions.length !== 0);\r\n            })\r\n\r\n            setMainDataExamining(_mainDataExamining);\r\n            setPreviewPredecessor(saveNewDataPredecessor);\r\n\r\n            const selectCategoryReExamining = _mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n            \r\n            toast.success('Đã cập nhật lại tiền căn', {toastId: 'handleSaveNewDataPredecessorSuccess'});\r\n            \r\n            handleSelectCategoryClick(selectCategoryReExamining);\r\n        }\r\n        else{\r\n            toast.error(responseCreateAddPredecessor.data, {toastId: 'handleSaveNewDataPredecessorError'});\r\n        }\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //tìm danh mục khám gồm tiền căn, sổ sức khỏe, dinh dưỡng...\r\n    const handleGetMedicalDetailPatient = async (id) => {\r\n        const responseDataExamining = await getMedicalDetailPatient(id);\r\n        setPrevDataExamining(responseDataExamining);\r\n\r\n        if(responseDataExamining.newPredecessor === false){\r\n            const previewDataPredecessor = responseDataExamining.categoryPres.filter(item => item.newCategoryPre === false).flatMap(item => item.categoryContents).flatMap(content => content.categoryContentQuestions).filter(question => question.categoryContentAnswer === true || question.categoryContentNote !== null)\r\n            setPreviewPredecessor(previewDataPredecessor);     \r\n        }\r\n    }\r\n\r\n    //chọn mục lục để khám\r\n    const handleSelectCategoryClick = async (categoryIncludeCotent) => {\r\n        if(openCollapseHealthRecords === true){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }\r\n\r\n        if(contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length !== 0){\r\n            setContentCategorySelectedExamining([]);\r\n        }\r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                ...categoryIncludeCotent,\r\n                //contentQuantity: categoryIncludeCotent.categoryContents.length\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining([]);\r\n    }\r\n\r\n    //chọn cây thư mục khám sổ sức khỏe\r\n    const handleSelectHealthRecords = (healthRecords) => {\r\n        if(openCollapseHealthRecords === false){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }        \r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                categoryName: 'Sổ sức khỏe',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(\r\n            {\r\n                healthRecordsContentsType: 'tree',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n    }\r\n\r\n    //chọn chỉ định một sổ khám bệnh (tìm chi tiết một sổ khám bệnh)\r\n    const handleSelectHealthRecordsItem = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingContentsExamining(true);\r\n\r\n        //dùng cho tái khám (có tiền căn đã đụng), mở khám lại\r\n        if(currentHealthRecordExamining){\r\n            if(healthRecordsContents.healthRecordsName !== examinationName){\r\n                if(healthRecordsState === 2){\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n                else if(healthRecordsState === 1 && dataPantientsReadyExamining.editExamining || healthRecordsState === 1 && dataPantientsReadyExamining.backRegister){\r\n                    setHealthRecordsContents({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    })\r\n\r\n                    setCurrentHealthRecordExamining({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    });\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && dataPantientsReadyExamining.isContinueExam){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else{\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n            }\r\n        }\r\n        //dùng cho tái khám (tiền căn chưa đụng), khám mới hoàn toàn\r\n        else{\r\n            await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n        }\r\n\r\n        setLoadingContentsExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const findHealthRecord = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        const responseMedicalBook = await getMedicalBook(medicalRegisterId);\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        });\r\n\r\n        if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && mainDataExamining.healthRecords[0].medicalBookId === null){\r\n            const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n                \r\n                const mainCategoryExamining = {\r\n                    categoryName: categoriesItem.categoryName,\r\n                    isHealthRecord: true,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n\r\n                return mainCategoryExamining\r\n            })\r\n\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    //chọn loại mục khám của một sổ khám bệnh\r\n    const handleOpenHealthRecordsItem = (categoryPatientsIndex) => {\r\n        setOpenCollapseHealthRecordsItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryPatientsIndex] = !newOpen[categoryPatientsIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleAnswerCheckQuestion = (categoryContentsIndex, questionIndex, answer) => {\r\n        //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng check\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else{\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }   \r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const handleNoteCheckQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            )\r\n        }, 1000)\r\n    }\r\n\r\n    const handleAnswerValueQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const handleAnswerCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else if(answer === true){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else{\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n    }\r\n    \r\n    //trả lời câu hỏi của mục sổ khám bệnh\r\n    const handleNoteCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            );\r\n        }, 1000)\r\n    }\r\n\r\n    const createSelectedQuestionsExaminingForConclusion = (categoryName, isPredecessor, categoryContentQuestion, questionOrder, categoryContentTitle, isEditNote) => {\r\n        if(categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            if(isEditNote){\r\n                if(categoryContentQuestion.categoryContentNote !== ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n\r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n\r\n                else if(categoryContentQuestion.categoryContentNote === ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentAnswer === null || categoryContentQuestionsItem.categoryContentAnswer === false){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n            }\r\n            else{\r\n                //question dạng check nhưng answer là true\r\n                if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n    \r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n    \r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n    \r\n                //question dạng check nhưng answer là false\r\n                else if(categoryContentQuestion.categoryContentAnswer === false && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentNote === null || categoryContentQuestionsItem.categoryContentNote === ''){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion)\r\n                }\r\n            }\r\n        }\r\n\r\n        else{\r\n            //question dạng giá trị nhưng khác rỗng\r\n            if(categoryContentQuestion.categoryContentNote !== '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                // Duyệt qua từng categoriesItem trong categories\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                    // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                    const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                        question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                    );\r\n                    \r\n                                    if (existingQuestion) {\r\n                                        // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                        existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                    } else {\r\n                                        // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                        categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                    }\r\n\r\n                                } else {\r\n                                // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                    categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                }\r\n                            }\r\n                        });        \r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n            //question dạng giá trị nhưng là rỗng\r\n            else if(categoryContentQuestion.categoryContentNote === '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n        }\r\n\r\n        if(isPredecessor === true){\r\n            createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n        }\r\n            \r\n    }\r\n\r\n    const createPreviewDataPredecessor = (categoryContentQuestion, isEditNote) => {\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            let _previewPredecessor = [...previewPredecessor];\r\n\r\n            const findQuestion = _previewPredecessor.find(item => item.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n            if(findQuestion){\r\n                if(findQuestion.categoryContentQuestionType === 'string'){\r\n                    if(categoryContentQuestion.categoryContentNote === ''){\r\n                        _previewPredecessor = previewPredecessor.filter(item => item.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName);\r\n                    }\r\n                    else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                        const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                        if(existingQuestion){\r\n                            existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                        }\r\n                        else{\r\n                            _previewPredecessor.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                }\r\n                else if(findQuestion.categoryContentQuestionType === 'check'){\r\n                    if(isEditNote){\r\n                        if(categoryContentQuestion.categoryContentNote === ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName && question.categoryContentAnswer === true);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                if(categoryContentQuestion.categoryContentAnswer === null || categoryContentQuestion.categoryContentAnswer === false){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    else{\r\n                        if(categoryContentQuestion.categoryContentAnswer === false || categoryContentQuestion.categoryContentAnswer === null){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                if(existingQuestion.categoryContentNote === '' || existingQuestion.categoryContentNote === null){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                                else if(existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                    existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                }               \r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentAnswer === true){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion || existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                            }\r\n                            else{\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }        \r\n                    }\r\n                }\r\n            }\r\n\r\n            else{\r\n                _previewPredecessor.push(categoryContentQuestion);\r\n            }\r\n            setPreviewPredecessor(_previewPredecessor)\r\n        }\r\n\r\n        else{\r\n            setPreviewPredecessor([categoryContentQuestion])\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        // Đăng ký sự kiện nhận thông báo bn đăng ký khám khi component được mount\r\n        const handleReceiveMessage = (medicalRegisterMessage) => {\r\n            console.log(medicalRegisterMessage);\r\n            if(medicalRegisterMessage === true && dataPantientsReadyExamining.id === ''){\r\n                setLoadingPatient(true);\r\n                handleGetRegistersByDateNow();\r\n            }\r\n        };\r\n\r\n        startSignalRConnection(localStorage.getItem('jwt', handleReceiveMessage))\r\n\r\n        onReceiveMessage(handleReceiveMessage);\r\n\r\n        return () => {\r\n            // Dừng lắng nghe sự kiện nếu cần khi component Chat unmount\r\n        };\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(dataPantientsReadyExamining.status === 1 && alertVisible){\r\n                const userConfirmed = window.confirm(`Bạn đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, có chắc là muốn đăng xuất không?`);\r\n                if(userConfirmed){\r\n                    sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                    sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                    sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n\r\n                    if(currentHealthRecordExamining){\r\n                        sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                    }\r\n\r\n                    if(prevDataPredecessor){\r\n                        sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                    }\r\n\r\n                    if(oldDataPredecessor){\r\n                        sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                    }\r\n                    confirmAlert();\r\n                }\r\n                else{\r\n                    resetAlert();\r\n                }\r\n        }\r\n\r\n        else if(dataPantientsReadyExamining.status){\r\n            setIsFormDirty(true)\r\n\r\n            const handleBeforeUnload = (e) => {\r\n                const confirmationMessage = 'Bạn có chắc chắn muốn rời khỏi trang này?';\r\n                e.returnValue = confirmationMessage; // Hiển thị thông báo cảnh báo\r\n                return confirmationMessage;\r\n            };\r\n\r\n            const unblock = history.block((location, action) => {\r\n                if (isFormDirty) {\r\n                    const confirmLeave = window.confirm(\r\n                        'Bạn có chắc chắn muốn rời khỏi trang này? Những thay đổi sẽ không được lưu....'\r\n                    );\r\n                    if (confirmLeave) {\r\n                        const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                        sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                        sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                        sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                        sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                        if(currentHealthRecordExamining){\r\n                            sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                        }\r\n    \r\n                        if(prevDataPredecessor){\r\n                            sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                        }\r\n    \r\n                        if(oldDataPredecessor){\r\n                            sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                        }\r\n\r\n                        unblock(); // Hủy chặn để điều hướng\r\n                        history.push(location.pathname); // Điều hướng đến trang mới\r\n                        \r\n                    } else {\r\n                        return false; // Ngăn điều hướng\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n    \r\n            const handleUnload = () => {                \r\n                const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                \r\n                sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                if(currentHealthRecordExamining){\r\n                    sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                }\r\n    \r\n                if(prevDataPredecessor){\r\n                    sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                }\r\n    \r\n                if(oldDataPredecessor){\r\n                    sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                }\r\n            };\r\n            \r\n            window.addEventListener('beforeunload', handleBeforeUnload);\r\n            window.addEventListener('unload', handleUnload);\r\n            \r\n            return () => {\r\n                window.removeEventListener('beforeunload', handleBeforeUnload);\r\n                unblock();\r\n                window.removeEventListener('unload', handleUnload);                \r\n            };\r\n        }\r\n\r\n        else if(alertVisible){\r\n            confirmAlert();\r\n        }\r\n    }, [dataPantientsReadyExamining, mainDataExamining, currentHealthRecordExamining, dataExaminingForConclusion, alertVisible, confirmAlert, resetAlert, isLogOutClick, history, isFormDirty])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Doctor'){\r\n                history.push('/404');\r\n            }\r\n            else{\r\n                if(sessionStorage.dataPantientsReadyExamining){\r\n                    handleReloadUIWhenExamining();\r\n                }\r\n                else{\r\n                    handleGetRegistersByDateNow();\r\n                }\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(isDialogChangePasswordOpen === false){\r\n            const handleKeyDown = (event) => {\r\n                if(event.keyCode === 112){\r\n                    event.preventDefault();\r\n                }\r\n\r\n                if(dataPantientsReadyExamining.patientsId !== '' && openAlertProcessingBackdrop === false && openModalCompleteExamining === false && event.keyCode !== 116){\r\n                    if(event.keyCode === 112 && dataPantientsReadyExamining.status === 1){\r\n                        event.preventDefault();\r\n                        handleCancelExamining();\r\n                    }\r\n\r\n                    else if(event.keyCode === 113 && prevDataExamining){\r\n                        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n                            handleBeginExaminingForPantient();\r\n                        }\r\n                        else if(dataPantientsReadyExamining.status === 1){\r\n                            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n                        }\r\n                        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n                            handleBeginEditExaminingForPantient();\r\n                        }\r\n                    }\r\n\r\n                    else if(event.keyCode === 115){\r\n                    setOpenAlertProcessingBackdrop(true)\r\n                        if(dataPantientsReadyExamining.status === 1){\r\n                            setTimeout(() => {\r\n                                setOpenAlertProcessingBackdrop(false)\r\n                                setOpenModalCompleteExamining(true);\r\n                            }, 1000)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            document.addEventListener('keydown', handleKeyDown);\r\n\r\n            return () => {\r\n                document.removeEventListener('keydown', handleKeyDown);\r\n            };\r\n        }\r\n        \r\n    }, [dataPantientsReadyExamining, openModalCompleteExamining, openAlertProcessingBackdrop, openModalCompleteExamining, isDialogChangePasswordOpen])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n                <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                    <Grid container spacing={2} sx={{pl: 0.6, pr: 0.6}}>\r\n\r\n                        <Grid item xs={5}>\r\n                            {/* <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{`${moment().format('dddd')}, ${moment().format('LL')}`}</Typography> */}\r\n                            <TableContainer component={Paper} sx={{ height: '330px', boxShadow: 5, borderRadius: '10px' }}>\r\n                                {loadingPatient ?\r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                                            <CircularProgress />\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                                        </Box>        \r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Box>\r\n                                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                                                    <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                                                        <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                                        onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                                                    </Badge>\r\n                                                ))}\r\n                                            </Stack>\r\n                                            <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                                            <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                                                <TextField sx={{mb: 0.6, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                                        startAdornment: (\r\n                                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                                        ),\r\n                                                        endAdornment: (\r\n                                                            <InputAdornment position='end'>\r\n                                                                {searchPatientsQuery !== '' ? \r\n                                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                                                                    /> \r\n                                                                : \r\n                                                                    null\r\n                                                                }\r\n                                                            </InputAdornment>  \r\n                                                        )\r\n                                                    }}>\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Box>\r\n                                \r\n                                        <Table stickyHeader >\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listDataPatientsRegisterSort.map((dataPantientItem, dataPantientIndex) => (\r\n                                                    <TableRow hover role=\"checkbox\" key={dataPantientItem.order}\r\n                                                        sx={{ cursor: 'pointer', backgroundColor: dataPantientItem.state === 1 ? '#26c6da' : '#fff', \r\n                                                        ':hover': {backgroundColor: dataPantientItem.state === 1 ? '#00bcd4 !important' : 'rgba(0, 0, 0, 0.1) !important'} }} \r\n                                                        onClick={() => handleSelectPantientExamining(dataPantientItem)}\r\n                                                    >\r\n                                                        <TableCell align='left' sx={{width: '20px'}}>{dataPantientItem.order}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '150px'}}>{dataPantientItem.patient.patientCode}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '240px'}}>{dataPantientItem.patient.fullName}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </>\r\n                                }\r\n                            </TableContainer>\r\n\r\n                            {/* cây thư mục khám */}\r\n                            <Box style={{width: '100%', marginTop: '10px', borderRadius: '10px', border: '2px solid red', height: '300px', overflow: 'auto'}} >\r\n                                {\r\n                                    mainDataExamining.length === 0 && loadingCategoryExamining === false || prevDataExamining === false ?\r\n                                        null\r\n                                    :\r\n                                    <>\r\n                                        {loadingCategoryExamining ?\r\n                                            <Box sx={{backgroundColor: '#e0e0e0', borderRadius: '10px', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu cây thư mục khám, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <>\r\n                                                <div className='category-scrollbar'>\r\n                                                    <List sx={{p: 0, display: 'inline-grid'}}>\r\n                                                        {mainDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                                            <Box sx={{display: 'inline-flex'}} key={`category ${predecessorIndex}`}>\r\n                                                                <ListItemButton\r\n                                                                    sx={{\r\n                                                                    width: 'fitContent', pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'},\r\n                                                                    backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffd54f' : ''}} \r\n                                                                    onClick={() => handleSelectCategoryClick(predecessorItem)}\r\n                                                                >\r\n                                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                        <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </Box>\r\n                                                                </ListItemButton>\r\n\r\n                                                                {predecessorItem.newCategoryPre === true && predecessorItem.newPredecessor === true ? \r\n                                                                    null\r\n                                                                :\r\n                                                                    <>\r\n                                                                        {predecessorItem.newCategoryPre === false  ?\r\n                                                                            <>  \r\n                                                                                <CheckCircleIcon sx={{color: 'green', fontSize: '1.4rem', margin: 'auto'}} titleAccess='đã theo dõi'/>\r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        {mainDataExamining.newPredecessor ? \r\n                                                                            null\r\n                                                                        :\r\n                                                                            predecessorItem.isLock === true ?\r\n                                                                                <>  \r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <EditIcon sx={{color: 'blue', fontSize: '1.6rem'}} titleAccess='Sửa'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>\r\n                                                                            \r\n                                                                            :\r\n                                                                                <>\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessorForSaving(predecessorItem.categoryOrder)}>\r\n                                                                                        <BeenhereIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Lưu'/>\r\n                                                                                    </IconButton>\r\n\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleCancelEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <CancelIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Hủy'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>   \r\n                                                                        }                                  \r\n                                                                    </>\r\n                                                                }\r\n                                                            </Box>\r\n                                                        ))}\r\n\r\n                                                        <ListItemButton \r\n                                                            sx={{pt: '4px', pb: '4px', borderRadius: '8px', backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffd54f' : '',\r\n                                                                ':hover': {backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                            onClick={() => handleSelectHealthRecords(mainDataExamining.healthRecords)}\r\n                                                        >\r\n                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}>\r\n                                                                <SendIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                            </ListItemIcon>\r\n\r\n                                                            <ListItemText primary={'Sổ sức khỏe'} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>                                                    \r\n                                                        </ListItemButton>\r\n\r\n                                                        <Collapse in={openCollapseHealthRecords} timeout=\"auto\" unmountOnExit>\r\n                                                            <div style={{ paddingLeft: '24px' }}>\r\n                                                                {mainDataExamining.healthRecords.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                    <ListItemButton key={`healthRecords ${healthRecordsIndex}`} sx={{pt: '0px', pb: '0px', width: 'auto', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                                        onClick={() => handleSelectHealthRecordsItem(healthRecordsItem.medicalRegisterId, healthRecordsItem.examinationName, healthRecordsItem.state)}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: healthRecordsItem.state === 1 ? 'red' : '#009688'}}}>\r\n                                                                            <FiberManualRecordIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={healthRecordsItem.examinationName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </ListItemButton>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </Collapse>\r\n                                                    </List>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </Box>\r\n                            {activeChip.chipOrder === 0 && dataPantientsReadyExamining.editExamining === false ?\r\n                                <div className='instruction' style={{display: 'flex', justifyContent: 'space-between', marginTop: '4.5px'}}>\r\n                                    <Button variant=\"contained\" color=\"error\" onClick={() => handleCancelExamining()}>Hủy khám (f1)</Button>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Bắt đầu khám (f2)</Button>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                </div>\r\n                            :\r\n                                dataPantientsReadyExamining.id === '' ?\r\n                                    null\r\n                                :\r\n                                    dataPantientsReadyExamining.id !== '' && dataPantientsReadyExamining.status === 0 ? \r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleDeleteExamining()}>Xóa khám (f1)</Button>\r\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Sửa đổi (f2)</Button>\r\n                                        </div>\r\n                                    :\r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleCancelExamining()}>Hủy thay đổi (f1)</Button>\r\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                        </div>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            {/* thông tin bệnh nhân */}\r\n                            <Box sx={{boxShadow: 4, borderRadius: '20px', border: '2px solid blue', height: '230px', mb: '8px', overflow: 'auto'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', mt: 0.6, mb: 0.6, fontWeight: 'bolder', fontSize: '1.2rem', textAlign: 'center'}}>Thông tin bệnh nhân</Typography>\r\n                                <Box sx={{pl: 2.8, pr: 2.8, mt: 1}}>\r\n                                    {loadingInfoPatient ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', mt: 4}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải thông tin bệnh nhân, hãy chờ một chút...</Typography>\r\n                                        </Box>\r\n                                    :\r\n                                        <>\r\n                                            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Mã BN: ${dataPantientsReadyExamining.patientCode || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Họ tên: ${dataPantientsReadyExamining.patientsName || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    {dataPantientsReadyExamining.patientsGender === true ? <MaleIcon sx={{color: 'coral', fontSize: '27px'}}/> : <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/>}\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Giới tính: ${dataPantientsReadyExamining.patientsGender !== '' ? dataPantientsReadyExamining.patientsGender === true ? 'Nam' : 'Nữ' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: {dataPantientsReadyExamining.patientsDOB ? moment(dataPantientsReadyExamining.patientsDOB).format(\"DD/MM/YYYY\") : ''}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Tháng tuổi: ${dataPantientsReadyExamining.patientsMonthsOld || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Sdt: ${dataPantientsReadyExamining.patientsPhone || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiBodyHeight style={{color: 'tomato', fontSize: '1.42rem', marginLeft: '2px'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 0.8}}>\r\n                                                        {`Chiều cao: ${dataPantientsReadyExamining.patientsHeight ? dataPantientsReadyExamining.patientsHeight + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Cân nặng: ${dataPantientsReadyExamining.patientsWeight ? dataPantientsReadyExamining.patientsWeight + ' kg' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <TbRulerMeasure style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Vòng đầu: ${dataPantientsReadyExamining.patientsHeadCircumference ? dataPantientsReadyExamining.patientsHeadCircumference + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={12} sx={{display: 'inline-flex'}}>\r\n                                                    <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Địa chỉ: ${dataPantientsReadyExamining.patientsAddress || ''}`}</Typography>\r\n                                                </Grid> \r\n\r\n                                                {previewPredecessor ? \r\n                                                    <>\r\n                                                        <Grid item xs={12} >\r\n                                                            <Box sx={{display: 'flex', flexWrap: 'wrap'}}>\r\n                                                                {previewPredecessor.map((item, index) => (\r\n                                                                    <Typography variant='subtitle1' sx={{ml: 0.5, fontSize: '1.1rem', color: 'mediumblue', fontWeight: 'bolder'}} key={index} >{`${item.categoryContentQuestionName}: ${item.categoryContentAnswer ? 'có' : ''} ${item.categoryContentNote !== null ? `${item.categoryContentNote}` : ''}, `}</Typography>\r\n                                                                ))}\r\n                                                            </Box>\r\n                                                            \r\n                                                        </Grid> \r\n                                                    </>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </Grid>\r\n                                        </>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {/* nội dung khám */}\r\n                            <div className='container-content-examining'>\r\n                                {\r\n                                    loadingPrevDataExamining ? \r\n                                        <>\r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu kỳ khám gần nhất, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    :\r\n                                    prevDataExamining ? \r\n                                        prevDataExamining.healthRecords.length === 1 && prevDataExamining.healthRecords[0].medicalBookId === null ? \r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <Typography variant='h6'>Bệnh nhân không có kỳ khám trước</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <div className='content-examining'><PreviewLastExamining prevDataExamining={prevDataExamining} /></div>\r\n                                    :\r\n                                        null\r\n                                }\r\n                                \r\n                                {categorySelectedExamining.categoryContents ? \r\n                                    <>\r\n                                        <div className='content-examining'>\r\n                                            {loadingContentsExamining ? \r\n                                                <>\r\n                                                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                        <CircularProgress />\r\n                                                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh, hãy chờ một chút...</Typography>\r\n                                                    </Box>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {categorySelectedExamining.newCategoryPre === true && categorySelectedExamining.isLock === true ? \r\n                                                        <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                            <Typography variant='h6'>Bệnh nhân không có tiền căn đang được theo dõi ở mục này</Typography>\r\n                                                        </Box>\r\n                                                    :\r\n                                                        contentCategorySelectedExamining.healthRecordsContentsType !== 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                            categorySelectedExamining.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                                <Box key={categoryContentsIndex} sx={categoryContentsItem.categoryContentTitle === null ? {marginTop: '30px'} : {}}>\r\n\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>{categoryContentsItem.categoryContentTitle || ''}</Typography>\r\n                                                                    {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                        <Box key={`categoryContentQuestionName ${questionIndex}`}>\r\n                                                                            <Grid container rowSpacing={0}>\r\n                                                                                {questionIndex === 0 ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                        </Grid>\r\n\r\n                                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                    <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                </Grid>\r\n\r\n                                                                                                <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            : \r\n                                                                                                <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                        }                                                                             \r\n                                                                                    </> \r\n                                                                                    : \r\n                                                                                    null\r\n                                                                                }\r\n                                                                                \r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1.2rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled={categorySelectedExamining.isLock === true ? true : false} \r\n                                                                                            checked={questionItem.categoryContentAnswer === true ? true : false } \r\n                                                                                            classes={{ root: classes.root }} color='error' \r\n                                                                                            sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} \r\n                                                                                            onClick={() => \r\n                                                                                                dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleAnswerCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer) : handleAnswerCheckQuestion(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer)} />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={7} >\r\n                                                                                            <div className='textfield-for-answer'>\r\n                                                                                                <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                        onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleNoteCheckQuestion(categoryContentsIndex, questionIndex, e.target.value)}\r\n                                                                                                        defaultValue={questionItem.categoryContentNote}\r\n                                                                                                    />\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>   \r\n                                                                                    :\r\n                                                                                    <>\r\n                                                                                        {categorySelectedExamining.categoryOrder === 4 ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8} >\r\n                                                                                                    <div className='textfield-for-answer'>\r\n                                                                                                        <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                                onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                                defaultValue={questionItem.categoryContentNote}\r\n                                                                                                            />\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            :\r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8}>\r\n                                                                                                    <div className='textfield-for-answer' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >\r\n                                                                                                        <input type='text' disabled={categorySelectedExamining.isLock === true ? true : false}\r\n                                                                                                            className='value-for-answer' \r\n                                                                                                            onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                            defaultValue={questionItem.categoryContentNote} \r\n                                                                                                        />\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                        }\r\n                                                                                    </>\r\n                                                                                }\r\n                                                                                \r\n                                                                            </Grid>\r\n                                                                        </Box>\r\n                                                                    ))}\r\n                                                                </Box>\r\n                                                            ))\r\n                                                        :\r\n                                                            contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n                                                                    <TableContainer component={Paper}>\r\n                                                                        <Table stickyHeader>\r\n                                                                            <TableHead>\r\n                                                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                                                    <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n                                                                                </TableRow>\r\n                                                                            </TableHead>\r\n                                                                            <TableBody sx={{borderRadius: '0px'}}>\r\n                                                                                {contentCategorySelectedExamining.categoryContents.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                                    <TableRow hover role=\"checkbox\" key={healthRecordsIndex}>\r\n                                                                                        <TableCell align='left' sx={{width: '158px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{healthRecordsItem.examinationName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '144px'}}>{handleRenderExamsStatus(healthRecordsItem.state)}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '108px'}}>{moment(healthRecordsItem.timeRegister).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '115px'}}>{healthRecordsItem.doctorFullName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: 'auto'}}>{healthRecordsItem.conclusion}</TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                ))}\r\n                                                                            </TableBody>\r\n                                                                        </Table>\r\n                                                                    </TableContainer>\r\n                                                                </>\r\n                                                            :\r\n                                                                \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', lineHeight: 1, mt: 1}}>{currentHealthRecordExamining ? currentHealthRecordExamining.healthRecordsName : ''}</Typography>\r\n                                                                    <div className='health-record-content'>\r\n                                                                        {currentHealthRecordExamining ?            \r\n                                                                            <List sx={{p: 0}}>\r\n                                                                                {currentHealthRecordExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => (\r\n                                                                                    <div key={`categoryPatients ${categoryPatientsIndex}`}>\r\n                                                                                        <ListItemButton     \r\n                                                                                            sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                                                                            onClick={() => handleOpenHealthRecordsItem(categoryPatientsIndex)}\r\n                                                                                        >\r\n                                                                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseHealthRecordsItem[categoryPatientsIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                                                                <ListItemText primary={categoryPatientsItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                                            </Box>\r\n                                                                                        </ListItemButton>\r\n\r\n                                                                                        <Collapse in={openCollapseHealthRecordsItem[categoryPatientsIndex]} timeout=\"auto\" unmountOnExit>\r\n                                                                                            {categoryPatientsItem.categoryContents.map((categoryPatientsContentsItem, categoryPatientsContentsIndex) => (\r\n                                                                                                <div className='header-health-record' key={categoryPatientsContentsIndex} style={{marginTop: '15px', marginBottom: '15px', border: '2px solid #00bcd4', borderRadius: '20px'}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{fontWeight: 'bolder', textAlign: 'center'}}>{categoryPatientsContentsItem.categoryContentTitle}</Typography>\r\n                                                                                                    \r\n                                                                                                    <div className='content-health-record' style={{padding: '10px'}} >  \r\n                                                                                                        <Grid container rowSpacing={0}>\r\n                                                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryPatientsContentsItem.categoryContentName}</Typography>\r\n                                                                                                            </Grid>\r\n\r\n                                                                                                            <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryPatientsContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                            </Grid>\r\n                                                                                                            \r\n                                                                                                            <Grid item xs={5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryPatientsContentsItem.categoryContentText}</Typography>\r\n                                                                                                            </Grid> \r\n\r\n                                                                                                            {categoryPatientsContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                                                                <Box key={`questionItem ${questionIndex} healthRecordsName ${contentCategorySelectedExamining.healthRecordsName}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                                                        <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                                                    </Grid>    \r\n\r\n                                                                                                                    {questionItem.categoryContentQuestionType === 'check' ?\r\n                                                                                                                        <>\r\n                                                                                                                            <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                                                                <Checkbox classes={{ root: classes.root }} checked={questionItem.categoryContentAnswer === true ? true : false }\r\n                                                                                                                                    disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                    sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                                                                    onClick={(e) => handleAnswerCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, questionItem.categoryContentAnswer)} \r\n                                                                                                                                />\r\n                                                                                                                            </Grid>\r\n                                                                                                                        \r\n                                                                                                                            <Grid item xs={5} >\r\n                                                                                                                                <div className='note-for-answer'>\r\n                                                                                                                                    <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                            disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                            onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                        />\r\n                                                                                                                                    </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </Grid>\r\n                                                                                                                        </>\r\n                                                                                                                    :\r\n                                                                                                                        <>\r\n                                                                                                                            <Grid item xs={8} >\r\n                                                                                                                                <div className='note-for-answer'>\r\n                                                                                                                                    <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                            disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                            onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                        />\r\n                                                                                                                                    </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </Grid>\r\n                                                                                                                        </>\r\n                                                                                                                    }\r\n                                                                                                                </Box>\r\n                                                                                                            ))}\r\n                                                                                                        </Grid>\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            ))}\r\n                                                                                        </Collapse>\r\n                                                                                    </div>\r\n                                                                                ))}\r\n                                                                            </List>\r\n                                                                            :\r\n                                                                            null\r\n                                                                        }\r\n                                                                        \r\n                                                                        {currentHealthRecordExamining ? \r\n                                                                            currentHealthRecordExamining.conclusion !== null ?\r\n                                                                                <>\r\n                                                                                    <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                                                                        <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận của bác sĩ: ${currentHealthRecordExamining.conclusion}`}</Typography>\r\n                                                                                    </div>\r\n                                                                                </>\r\n                                                                                :\r\n                                                                                    null\r\n                                                                        :\r\n                                                                        null\r\n                                                                        }\r\n                                                                    </div>\r\n\r\n                                                                </>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n\r\n            <CompleteExamining openModalCompleteExamining={openModalCompleteExamining} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n                handleCompleteExaminingForPantient={handleCompleteExaminingForPantient} dataExaminingForConclusion={dataExaminingForConclusion}\r\n            />\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n            />\r\n            {/* <AlertConfirm openAlertConfirmModal={openAlertConfirmModal.open} onCloseAlertConfirmModal={setOpenAlertConfirmModal} \r\n                titleConfirm={openAlertConfirmModal.title} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDoctorExamining","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getReportPatient = async (dateSelectedReport) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Admin/GetReportPatient?dateStart=${dateSelectedReport.dateStart}&dateEnd=${dateSelectedReport.dateEnd}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getReportPatient\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridToolbarExport, GridToolbarColumnsButton, GridToolbarDensitySelector, GridToolbarFilterButton, GridToolbarContainer, viVN } from '@mui/x-data-grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//icon\r\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\r\n//moment\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\n//api\r\nimport { getReportPatient } from '../../Service/StatisticsService';\r\n\r\nfunction MainDashboard() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [dateSelectedReport, setDateSelectedReport] = useState({dateStart: '', dateEnd: ''})\r\n    const [mainDataDashboard, setMainDataDashboard] = useState([]);\r\n    const [loadingDataDashboard, setLoadingDataDashboard] = useState(false);\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'STT', width: 120, align: 'left', headerAlign: 'left', },\r\n        { field: 'fullName', headerName: 'Họ tên', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'dayExam', headerName: 'Ngày khám', width: 180, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'gender', headerName: 'Giới tính', width: 140, align: 'left', headerAlign: 'left' },\r\n        { field: 'dayOfBirth', headerName: 'Ngày sinh', width: 165, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'examName', headerName: 'Kỳ khám', width: 170, align: 'left', headerAlign: 'left' },\r\n        { field: 'phone', headerName: 'Điện thoại', width: 170, type: 'number', align: 'left', headerAlign: 'left'},\r\n        { field: 'district', headerName: 'Quận/Huyện', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'province', headerName: 'Tỉnh/Thành phố', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'address', headerName: 'Địa chỉ', width: 700, align: 'left', headerAlign: 'left' },\r\n    ];\r\n\r\n    // Hàm xử lý xuất file Excel\r\n    const handleExportExcel = () => {\r\n        // Tạo lại dữ liệu với các tiêu đề cột tùy chỉnh\r\n        const formattedRows = mainDataDashboard.map((row, index) => ({\r\n            'STT': index + 1,\r\n            'Họ tên': row.fullName, \r\n            'Ngày khám': row.dayExam,\r\n            'Giới tính': row.gender,\r\n            'Ngày sinh': row.dayOfBirth,\r\n            'Kỳ khám': row.examName,\r\n            'Điện thoại': row.phone,\r\n            'Quận/Huyện': row.district,\r\n            'Tỉnh/Thành phố': row.province,\r\n            'Địa chỉ': row.address\r\n          }));\r\n\r\n        // Tạo worksheet từ dữ liệu đã định dạng\r\n        const ws = XLSX.utils.json_to_sheet(formattedRows);\r\n\r\n        // Tạo workbook và thêm worksheet vào đó\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n\r\n        // Xuất file Excel\r\n        XLSX.writeFile(wb, `Danh sách bệnh nhân khám bệnh từ ${moment(dateSelectedReport.dateStart).format('DD-MM-YYYY')} đến ${moment(dateSelectedReport.dateEnd).format('DD-MM-YYYY')}.xlsx`);\r\n    };\r\n\r\n    // Custom toolbar bao gồm nút xuất Excel\r\n    const CustomToolbar = ({ handleExportExcel }) => {\r\n        return (\r\n            <GridToolbarContainer >\r\n                {/* Các chức năng của GridToolbar mặc định */}\r\n                <GridToolbarColumnsButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarFilterButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarDensitySelector sx={{fontSize: '16px'}}/>\r\n                <Button variant=\"text\" startIcon={< RiFileExcel2Fill/>} onClick={handleExportExcel} sx={{fontSize: '16px'}}>Xuất Excel</Button>\r\n            </GridToolbarContainer>\r\n        );\r\n    };\r\n\r\n    const onChangeDateStart = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateStart = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const onChangeDateEnd = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateEnd = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const handleGetReportPatient = async () => {\r\n        setLoadingDataDashboard(true);\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        const responseGetReportPatient = await getReportPatient(dateSelectedReport);\r\n        const editMainDataDashboard = responseGetReportPatient.map((item) => {\r\n            const dataReportPatient = {\r\n                patientId: item.patientId,\r\n                fullName: item.fullName,\r\n                dayExam: moment(item.dayExam).format('DD/MM/YYYY'),\r\n                gender: item.gender ? 'Nam' : 'Nữ',\r\n                dayOfBirth: moment(item.dayOfBirth).format('DD/MM/YYYY'),\r\n                examName: item.examName,\r\n                phone: item.phone,\r\n                district: item.district,\r\n                province: item.province,\r\n                address: item.address\r\n            }\r\n            return dataReportPatient\r\n        })\r\n        setMainDataDashboard(editMainDataDashboard);\r\n        setLoadingDataDashboard(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Admin'){\r\n                history.push('/404');\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(dateSelectedReport.dateStart !== '' && dateSelectedReport.dateEnd !== ''){\r\n            handleGetReportPatient();\r\n        }\r\n    }, [dateSelectedReport])\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1}}>\r\n            <Box sx={{display: 'flex', justifyContent: 'center'}}>\r\n                <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                    <DemoContainer components={['DatePicker']}> \r\n                        <DatePicker label=\"Từ ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateStart(value)}/> \r\n                        <DatePicker label=\"Đến ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateEnd(value)}/>                                   \r\n                    </DemoContainer>\r\n                </LocalizationProvider>\r\n            </Box>\r\n\r\n            <Box sx={{ height: 600, width: '100%', mt: 1.2 }}>\r\n                {loadingDataDashboard ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '80%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>  \r\n                    </>\r\n                    :\r\n                        mainDataDashboard.length !== 0 ?\r\n                            <>       \r\n                                <DataGrid \r\n                                    style={{ fontSize: '18px' }}\r\n                                    localeText={viVN.components.MuiDataGrid.defaultProps.localeText}\r\n                                    rows={mainDataDashboard.map((row, index) => ({\r\n                                        ...row,\r\n                                        id: index + 1,\r\n                                    }))}\r\n                                    columns={columns}\r\n                                    pageSizeOptions={[1]}\r\n                                    components={{\r\n                                        Toolbar: CustomToolbar, // Chèn toolbar vào đây\r\n                                      }}\r\n                                      componentsProps={{\r\n                                        toolbar: { handleExportExcel }, // Truyền hàm export vào props của toolbar\r\n                                      }}\r\n                                    disableRowSelectionOnClick\r\n                                    sx={{\r\n                                        '.MuiTablePagination-selectLabel': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                        '.MuiTablePagination-displayedRows': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        :\r\n                           <h5 style={{textAlign: 'center', color: 'blue'}}>Hãy chọn khoảng ngày khám để lấy dữ liệu thống kê</h5>\r\n                }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainDashboard","import { BrowserRouter, Route, Link, Switch, NavLink, HashRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport Header from \"../components/Nav/Header.jsx\";\nimport Page404 from \"../components/ErrorPage/Page404\";\nimport Login from \"../components/LoginAccount/Log-in\";\nimport MainMedicalRegister from \"../components/MedicalRegister/MainMedicalRegister.jsx\";\nimport MainAppointmentExamining from \"../components/MedicalAppointment/MainAppointmentExamining.jsx\";\nimport MainDoctorExamining from \"../components/DoctorExamining/MainDoctorExamining.jsx\";\nimport MainDashboard from \"../components/Dashboard/MainDashboard.jsx\";\n\nconst AppRoutes = (props) => {\n  return (\n    <>\n      <HashRouter>\n        {/* <Header />{\" \"} */}\n        <Switch>\n          <Route exact path=\"/\">home{\" \"}</Route>\n          <Route path=\"/login\"><Login /></Route>\n          <PrivateRoutes path=\"/medicalregister\" component={MainMedicalRegister}></PrivateRoutes>\n          <PrivateRoutes path=\"/doctor-examining\" component={MainDoctorExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/remind-examining\" component={MainAppointmentExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/dashboard\" component={MainDashboard}></PrivateRoutes>\n          <Route path=\"*\"><Page404 />{\" \"}</Route>\n          {/* <PrivateRoutes path=\"/users\" component={Users} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\nexport default AppRoutes;\n","import \"./App.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Nav/Header\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <div className=\"header-container\">\n          <Header />\n        </div>\n\n        <div className=\"app-container\">\n          <AppRoutes />\n        </div>\n      </HashRouter>\n\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}