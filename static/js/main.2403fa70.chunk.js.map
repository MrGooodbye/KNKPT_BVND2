{"version":3,"sources":["components/ManageUserManual/UserManual.jsx","assets/image/logo.png","components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop.jsx","Service/UserService.jsx","Service/MedicalService.jsx","context/UserContext.jsx","components/Nav/Header.jsx","routes/PrivateRoutes.js","components/ErrorPage/Page404.js","components/ManageRegister/Register.jsx","components/LoginAccount/Log-in.jsx","components/ManageSelectedDoctorExamining/SelectedDoctorExamining.jsx","components/ManageAlertProcessing/AlertProcessing.jsx","Service/PlaceService.jsx","components/ManageInfoPantients/ManageInfoPantients.jsx","components/MedicalRegister/ListPatientsRegister.jsx","components/ManageExaminingSession/ExaminingSession.jsx","components/ManageOldDisease/OldDisease.jsx","components/MedicalRegister/BookMedical.jsx","components/MedicalRegister/MainMedicalRegister.jsx","components/MedicalAppointment/MainAppointmentExamining.jsx","components/ManageCompleteExamining/CompleteExamining.jsx","components/DoctorExamining/PreviewLastExamining.jsx","components/DoctorExamining/MainDoctorExamining.jsx","Service/StatisticsService.jsx","components/Dashboard/MainDashboard.jsx","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["UserManual","props","_jsxs","Dialog","fullWidth","maxWidth","open","openModalUserManual","disableEscapeKeyDown","children","_jsx","DialogTitle","sx","fontWeight","fontSize","textAlign","color","textTransform","IconButton","onClick","setOpenModalUserManual","position","right","top","CloseIcon","DialogContent","dividers","pl","pr","Typography","variant","Box","AlertProcessingBackdrop","Backdrop","zIndex","theme","drawer","backgroundColor","changeBackground","openAlertProcessingBackdrop","display","flexDirection","alignItems","CircularProgress","mt","alertTitle","backendURL","createConfig","token","localStorage","getItem","headers","Authorization","concat","createMedicalBackRegister","async","axios","post","dataPatientsRegister","then","response","catch","error","createAddPredecessor","dataPredecessor","getRegistersByDateNow","config","get","data","status","getListMedicalExaminationsGiveRegister","dayOfBirth","getVaccinationByPatientId","patientId","getCurrentDoctorExamining","getMedicalBook","medicalRegisterId","getUpdatePredecessor","getAppointmentsNextWeek","updateMedicalState","id","state","put","updateStateAppointment","dataAppointment","stateAppointment","medicalBookId","appointmentDate","UserContext","React","createContext","UserProvider","_ref","userDefault","isAuthenticated","isLogin","user","setUser","useState","loading","setLoading","alertVisible","setAlertVisible","isLogOutClick","setIsLogOutClick","onConfirm","setOnConfirm","setOpenAlertProcessingBackdrop","resetAlert","checkJWTExpire","result","getJWT","decodeJWT","JSON","parse","atob","split","e","parseJwt","currentDate","Date","exp","getTime","removeItem","useEffect","getUserLogin","_Fragment","Provider","value","loadingContext","loginContext","userContextLogin","logoutContext","triggerAlert","confirmCallback","confirmAlert","withRouter","useContext","location","useLocation","history","useHistory","anchorEl","setAnchorEl","Boolean","handleClick","event","currentTarget","handleClose","actionNursing","key","label","icon","LocalHospitalIcon","LinkComponent","NavLink","to","LocalPhoneIcon","actionDoctor","MedicationLiquidIcon","actionAdmin","BarChartIcon","userAction","setUserAction","pathname","findIndex","action","handleLogout","positionName","push","width","AppBar","Toolbar","height","Link","Avatar","src","Logo","mb","mr","BottomNavigation","showLabels","justifyContent","flexGrow","map","actionItem","BottomNavigationAction","Button","userFullName","Menu","onClose","MenuItem","HelpIcon","titleAccess","cursor","exact","PrivateRoutes","Route","path","component","Redirect","Page404","className","CreateAccount","showPassword","setShowPassword","handleCloseModalRegister","reason","setOpenModalRegister","openModalRegister","m","p","TextField","type","InputProps","endAdornment","InputAdornment","handleClickShowPassword","padding","VisibilityIcon","VisibilityOffIcon","Autocomplete","options","option","renderInput","params","Stack","spacing","direction","style","margin","Login","userAccount","setUserAccount","userId","password","handleLogin","userName","toast","userLogin","setItem","tokenDTO","responseCurrentDoctorExamining","isCurrentDoctorExamining","userIdDoctor","stringify","handleKeyDown","preventDefault","document","addEventListener","removeEventListener","Container","borderRadius","ml","autoComplete","onChange","onChangeUserName","target","prevUserAccount","onChangeUserPassword","onKeyDown","which","code","handlePressEnter","Register","SelectedDoctorExamining","listDoctor","setListDoctor","selectedDoctor","setSelectedDoctor","handleCreateCurrentDoctorExamining","toastId","currentDoctorExamining","warning","createCurrentDoctorExamining","success","setCurrentDoctorExamining","setOpenSelectedDoctorExaminingModal","handleGetGetListDoctor","length","getGetListDoctor","indexResponseListDoctor","setTimeout","openSelectedDoctorExaminingModal","handleCloseSelectedDoctorExaminingModal","marginBottom","PopperComponent","Popper","clientWidth","undefined","placement","getOptionLabel","renderOption","onSelectDoctor","disableClearable","popupIcon","AlertProcessing","openAlertProcessing","getListProvince","getListDistrict","provinceId","getListWard","districtId","getFullAddressByIdWard","codeWard","ManageInfoPantients","dataPatientInfoDefault","examinationId","weight","headCircumference","vaccination","patient","identifier","address","fullName","gender","fullNameMother","phoneMother","fullNameFather","phoneFather","dataPatientInfoErrorDefault","title","isError","openTooltip","focus","examiningSession","province","district","ward","listGender","genderOrder","genderName","genderValue","selectedAutoCompleteDefault","openOption","typingRef","useRef","dateFieldRef","dataPatientInfoNotEdit","setDataPatientInfoNotEdit","dataPatientInfo","setDataPatientInfo","dataPatientInfoError","setDataPatientInfoError","selectedAutoComplete","setSelectedAutoComplete","listExaminingSession","setListExaminingSession","listProvince","setListProvince","listDistrict","setListDistrict","list","listWard","setListWard","focusField","setFocusField","setOpenAlertProcessing","tooltipTheme","createTheme","components","MuiTooltip","defaultProps","arrow","componentsProps","tooltip","bgcolor","slotProps","popper","modifiers","name","offset","handleFocus","fieldName","prevSelectedAutoComplete","handleBlur","test","filterOptions","inputValue","lowercasedInput","toLowerCase","filter","lowercasedFullName","initials","word","join","includes","onChangeDOBToGetExaminingSession","responseListMedicalExaminationsGiveRegister","formattedDate","exams","handleCloseModalInfoPantients","prevListDistrict","prevListWard","setSelectedPantientInfo","setOpenModalInfoPantients","handleUpdateMedicalRegister","checkValidate","_dataPatientInfoError","isValid","Object","values","every","item","current","_","isEqual","updateMedicalRegister","setCompleteMedicalRegister","responseListProvince","handleGetListProvince","selectedPantientInfo","setIsContinueUpdateMedicalRegister","editPropsDataPatientInfo","cloneDeep","responseListDistrict","provinceCode","responseListWard","districtCode","selectedGender","find","indexListExamining","indexListProvince","indexListDistrict","indexListWard","wardCode","handleApplyPantientDataToField","openModalInfoPantients","isContinueUpdateMedicalRegister","pt","pb","flexWrap","ThemeProvider","Tooltip","marginTop","inputProps","maxLength","inputRef","input","defaultValue","takenValue","clearInterval","prevDataPatientsRegister","onChangeIdentifier","prevDataPatientInfo","onChangeFullName","onSelectGender","onFocus","onBlur","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DemoContainer","DatePicker","format","moment","disableFuture","disableOpenPicker","textField","_d","today","yearsDifference","getFullYear","monthsDifference","getMonth","daysDifference","getDate","age","totalMonths","totalDays","isNaN","onChangeDOB","noOptionsText","onSelectExaminingSession","size","onSelectProvine","onSelectDistrict","onSelectWard","onChangeAddress","onChangeFullNameMother","onChangePhoneMother","onChangeFullNameFather","onChangePhoneFather","onChangeHeight","onChangeWeight","onChangeHeadCircumference","FormControlLabel","control","Checkbox","checked","onChangeVaccination","bool","DialogActions","ListPatientsRegister","activeChip","setActiveChip","chipOrder","chipLabel","listPantientChipState","setListPantientChipState","chipContent","listDataPatientsRegister","setListDataPatientsRegister","listDataPatientsAppointmentsToday","setListDataPatientsAppointmentsToday","searchPatientsQuery","setSearchPatientsQuery","listDataPatientsRegisterState","setListDataPatientsRegisterState","listDataPatientsRegisterSort","setListDataPatientsRegisterSort","searchPatients","patients","searchTerm","lowerCaseSearchTerm","patientObj","handleGetRegistersByDateNow","responseGetAppointmentsToday","getAppointmentsToday","_listDataPatientsAppointmentsToday","updatedList","patientFullName","dateOfBirth","fullAddress","nextExamId","listPantientRegisterWaiting","patientsRegisterItem","listCountState","listPantientRegisterDone","setComponent1Loading","keyCode","completeMedicalRegister","Skeleton","EditIcon","border","boxShadow","pantientChipStateItem","pantientChipStateIndex","Badge","badgeContent","Chip","handleSelectedChip","chipIndex","placeholder","handleSearchPantient","startAdornment","SearchIcon","TableContainer","Paper","overflowX","borderBottomLeftRadius","borderBottomRightRadius","Table","stickyHeader","minWidth","TableHead","TableRow","TableCell","align","TableBody","patientsRegisterSortItem","patientsRegisterSortIndex","hover","role","onDoubleClick","responseVaccinationByPatientId","dataPantientOldOldDiseaseRegister","oldDisease","medicalTypeId","setDataPantientAppointmentsToday","handleSelectedPantientAppointmentsToday","handleSelectedPantientInfo","order","whiteSpace","overflow","textOverflow","ExaminingSession","isConfirmOpen","setIsConfirmOpen","handleListMedicalExaminationsGiveRegister","getListMedicalExaminationsGiveOldRegister","handleMedicalRegister","isAppointment","oldExams","setIsContinueSelectedExaminingSession","setOpenModalExaminingSession","handleResetField","createMedicalRegister","handleOpenConfirm","openModalExaminingSession","isContinueSelectedExaminingSession","monthsOfAge","Grid","container","rowSpacing","xs","oldExamItem","oldExamIndex","RadioGroup","onChangeRadioSelect","examItem","examIndex","Radio","OldDisease","dataPatientsForSearchOldDiseaseDefault","phone","dataPatientsForSearchOldDiseaseErrorDefault","listFoundOldDisease","setListFoundOldDisease","dataPatientsForSearchOldDisease","setDataPatientsForSearchOldDisease","dataPatientsForSearchOldDiseaseError","setDataPatientsForSearchOldDiseaseError","selectedRowIndex","setSelectedRowIndex","formRef","tableRef","handleEnterPress","_dataPatientsForSearchOldDiseaseError","handleCloseModalOldDisease","setOpenModalOldDisease","handleFindOldDisease","getListOldDisease","reset","querySelectorAll","forEach","dispatchEvent","Event","bubbles","handleClickFindOldDisease","validate","handleApplyDataPatientOldDisease","foundOldDiseaseItem","setDataPatientsRegister","openModalOldDisease","ref","autoFocus","prevDataPatientsForSearchOldDisease","onChangePatientId","date","onChangeDayOfBirth","onChangePhone","tabIndex","prevIndex","Math","min","max","handleTableKeyDown","foundOldDiseaseIndex","selected","BookMedical","dataPatientsRegisterDefault","autocompleteValueDefault","medicalType","dataPatientsRegisterErrorDefault","listMedicalType","medicalTypeOrder","medicalTypeName","dataPatientsRegisterError","setDataPatientsRegisterError","autocompleteValue","setAutocompleteValue","firstFocusRef","replaceSpecialCharacters","str","replace","normalizedInput","prevAutocompleteValue","_dataPatientsRegisterError","dataPantientAppointmentsToday","handleMedicalBackRegister","responseCreateMedicalBackRegister","handleOpenModalOldDisease","getElementById","_autocompleteValue","indexListGender","indexListMedicalType","handleApplyPantientOldDiseaseData","handleApplyPantientAppointmentsTodayData","onF2Press","setOnF2Press","onF4Press","setOnF4Press","onF8Press","setOnF8Press","minHeight","PopperProps","disabled","WebkitTextFillColor","InputLabelProps","shrink","DateField","disablePortal","onSelectMedicalType","paddingLeft","paddingRight","multiline","rows","onChangeReason","MainMedicalRegister","component1Loading","currentDoctorExaminingDefault","setHandleResetField","handleOpenModalExaminingSession","setHandleOpenModalExaminingSession","setHandleOpenModalOldDisease","handleGetCurrentDoctorExamining","marginLeft","MainAppointmentExamining","listPantientAppointmentChipState","listAppointment","setListAppointment","listDataPatientsAppointmentPaginate","setListDataPatientsAppointmentPaginate","listDataPatientsAppointmentState","setListDataPatientsAppointmentState","listDataPatientsAppointmentSort","setListDataPatientsAppointmentSort","page","setPage","pageCount","setPageCount","setDataAppointment","handlePaginate","calculatedPageCount","ceil","startIndex","newCurrentItems","slice","handleAcceptReExamining","findDataAppointment","responseUpdateStateAppointment","responseGetAppointmentsNextWeek","_listAppointmentNotRemind","_listAppointmentAcceptReExamining","_listAppointmentRejectReExamining","updateListPantientAppointmentChipState","dataAppointmentNotRemind","dataAppointmentAcceptReExamining","dataAppointmentRejectReExamining","handleRejectReExamining","handleGetAppointmentsNextWeek","pantientAppointmentChipStateItem","pantientAppointmentChipStateIndex","dataPantientAppointmentItem","dataPantientAppointmentIndex","examNameOld","nextExamName","disablePast","minDate","onChangeAppointmentDate","convertAppointmentDateFindDataAppointment","CheckIcon","CancelIcon","Pagination","count","handlePageChange","CompleteExamining","mainDataExaminingForConclusion","setMainDataExaminingForConclusion","textareaRef","classes","makeStyles","root","useStyles","handleCloseModalCompleteExamining","setOpenModalCompleteExamining","handleSetDataCompleteExamining","editDataExaminingForConclusion","clone","dataExaminingForConclusion","categories","categoriesItem","categoryContents","categoryContentsItem","categoryContentQuestions","responseAppointmentDate","getAppointmentDate","isVaccination","nextVaccination","reminder","conclusion","setSelectionRange","handleAddMedicalBook","some","isPredecessor","categoryPres","categoriesHealthRecordExamining","isHealthRecord","responseAddMedicalBook","dataMedicalBook","createAddMedicalBook","handleCompleteExaminingForPantient","openModalCompleteExamining","List","categoriesIndex","categoryName","categoryContentsIndex","categoryContentTitle","questionItem","questionIndex","borderRight","categoryContentName","categoryContentQuestionType","CheckBoxIcon","lineHeight","categoryContentCheck","categoryContentText","borderTop","categoryContentQuestionName","categoryContentAnswer","TextareaAutosize","categoryContentNote","onChangeExaminingConclusion","prevMainDataExaminingForConclusion","locale","PreviewLastExamining","previewDataExamining","setPreviewDataExamining","healthRecords","examinationName","timeUpdateState","medicakBook","nutritionals","vaccinationBook","loadingMedicalBook","setLoadingMedicalBook","openCollapsePredecessorItem","setOpenCollapsePredecessorItem","openCollapseMedicakBookItem","setOpenCollapseMedicakBookItem","prevDataExamining","responseMedicalBook","healthRecordsItem","newPredecessor","healthRecordsUpdate","newMedicalBook","medicalBookIdRecently","sort","a","b","categoryOrder","handleEditPrevDataExamining","predecessorItem","predecessorIndex","ListItemButton","prevOpen","newOpen","handleOpenPredecessorItem","ListItemIcon","transform","SendIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","predecessorItemCategoryContentsItem","predecessorItemCategoryContentsIndex","medicakBookItems","medicakBookIndex","handleOpenMedicakBookItem","medicakBookCategoryContentsItem","medicakBookCategoryContentsIndex","doctorFullName","MainDoctorExamining","dataPantientsReadyExaminingDefault","stt","patientsId","patientsName","patientsDOB","patientsMonthsOld","patientsGender","patientsHeight","patientsWeight","patientsHeadCircumference","patientsPhone","patientsAddress","isFormDirty","setIsFormDirty","dataPantientsReadyExamining","setDataPantientsReadyExamining","mainDataExamining","setMainDataExamining","setPrevDataExamining","openCollapseHealthRecords","setOpenCollapseHealthRecords","openCollapseHealthRecordsItem","setOpenCollapseHealthRecordsItem","categorySelectedExamining","setCategorySelectedExamining","contentCategorySelectedExamining","setContentCategorySelectedExamining","healthRecordsContents","setHealthRecordsContents","currentHealthRecordExamining","setCurrentHealthRecordExamining","previewPredecessor","setPreviewPredecessor","setDataExaminingForConclusion","oldDataPredecessor","setOldDataPredecessor","newDataPredecessor","setNewDataPredecessor","prevDataPredecessor","setPrevDataPredecessor","loadingPrevDataExamining","setLoadingPrevDataExamining","loadingPatient","setLoadingPatient","loadingInfoPatient","setLoadingInfoPatient","loadingCategoryExamining","setLoadingCategoryExamining","loadingContentsExamining","setLoadingContentsExamining","handleCancelExamining","editExamining","backRegister","index","sessionStorage","reDataPantientsReadyExamining","reMainDataExamining","reDataExaminingForConclusion","reCurrentHealthRecordExamining","rePrevDataPredecessor","reOldDataPredecessor","clear","handleReloadUIWhenExamining","handleAppyPantientData","handleGetMedicalDetailPatient","dataPantientItem","_dataPantientsReadyExamining","handleBeginExaminingForPantient","handleSetMainDataExamining","handleGetCategoryReExamining","editPrevDataExaminingCategoryPres","responseGetUpdatePredecessorItem","matchingPrevDataExamining","prevDataExaminingCategoryPresItem","isLock","content2","content1","categoryContentOrder","matchingContent1","isNullCategoryPres","responseGetUpdateMedicalBook","updateHealthRecordsCategoriesForConclusion","category","content","demoDataExaminingForConclusion","healthRecordsName","categoryPatients","updateCategoriesForConclusion","editCategoryContents","itemCategoryContents","newCategoriesDemoDataExaminingForConclusion","editDataCategoryPresForConclusion","mainCategoryContentsExamining","editDataHealthRecordsForConclusion","categoryPresItem","categoryPresIndex","categoryPresOrder","handleBeginEditExaminingForPantient","getUpdateMedicalBook","handleSetMainDataReExamining","responseGetUpdateMedicalBookData","questions","allNull","q","responseGetUpdatePredecessor","handleNoteValueQuestionPredecessorForReExamOrBackExam","_categorySelectedExamining","createSelectedQuestionsValuePredecessorForReExamOrBackExam","categoryContentQuestion","findNewDataPredecessorCategoryOrder","newDataPredecessorCategoryPresItem","findNewDataPredecessorCategoryContents","newDataPredecessorCategoryContentsItem","newDataPredecessorcategoryContentQuestionsItem","categoryContentQuestionOrder","questionIndexRemove","splice","newDataPredecessorCategoryContents","newDataPredecessorCategoryPres","newCategoryPre","createSelectedQuestionsPredecessorForReExamOrBackExam","isEditNote","questionIndexNoteDontExit","createPreviewDataPredecessor","handleSaveNewDataPredecessor","saveNewDataPredecessor","findNewDataPredecessor","responseCreateAddPredecessor","_mainDataExamining","selectCategoryReExamining","handleSelectCategoryClick","responseDataExamining","getMedicalDetailPatient","previewDataPredecessor","flatMap","question","healthRecordsContentsType","categoryIncludeCotent","findHealthRecord","healthRecordsState","editDataHealthRecordsItemForConclusion","_dataExaminingForConclusion","dataHealthRecordsItemForConclusionItem","handleAnswerValueQuestion","createSelectedQuestionsExaminingForConclusion","handleNoteCheckQuestionHealthRecords","categoryPatientsIndex","categoryPatientsContentsIndex","_healthRecordsContents","questionOrder","existingQuestion","categoryContentQuestionsItem","_previewPredecessor","findQuestion","window","confirm","handleBeforeUnload","confirmationMessage","returnValue","unblock","block","handleUnload","alert","dataPantientIndex","handleSelectPantientExamining","CheckCircleIcon","edge","findUpdatePredecessor","handleEditDataPredecessor","handleEditDataPredecessorForSaving","findOldDataPredecessorCategoryOrder","oldDataPredecessorItem","findNewDataPredecessorCategoryContentsItem","findOldDataPredecessorCategoryContentsItem","newQ","findNewDataPredecessorQuestionItem","contentCategoryContentsItem","removeOldDataPredecessorCategoryPres","BeenhereIcon","handleCancelEditDataPredecessor","findPrevDataPredecessorByCategoryName","prevDataPredecessorItem","removeCategoryPredecessor","handleSelectHealthRecords","healthRecordsIndex","handleSelectHealthRecordsItem","FiberManualRecordIcon","columnSpacing","sm","md","PinIcon","PersonIcon","MaleIcon","FemaleIcon","CalendarMonthIcon","InfoIcon","PhoneIcon","GiBodyHeight","GiWeightScale","TbRulerMeasure","Home","handleAnswerCheckQuestionPredecessorForReExamOrBackExam","answer","handleAnswerCheckQuestion","handleNoteCheckQuestionPredecessorForReExamOrBackExam","handleNoteCheckQuestion","DescriptionIcon","timeRegister","categoryPatientsItem","handleOpenHealthRecordsItem","categoryPatientsContentsItem","handleAnswerCheckQuestionHealthRecords","currentHealthRecordsContent","getReportPatient","dateSelectedReport","dateStart","dateEnd","MainDashboard","setDateSelectedReport","mainDataDashboard","setMainDataDashboard","Promise","resolve","editMainDataDashboard","dayExam","examName","handleGetReportPatient","_dateSelectedReport","onChangeDateStart","onChangeDateEnd","DataGrid","localeText","viVN","MuiDataGrid","row","columns","field","headerName","headerAlign","pageSizeOptions","handleExportExcel","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","startIcon","RiFileExcel2Fill","toolbar","formattedRows","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","disableRowSelectionOnClick","AppRoutes","HashRouter","Switch","App","Header","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2403fa70.chunk.js","sourcesContent":["import React from 'react'\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nfunction UserManual(props) {\r\n\r\n    return (\r\n        <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalUserManual} disableEscapeKeyDown={true}>\r\n            <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Hướng dẫn sử dụng</DialogTitle>\r\n            <IconButton onClick={() => props.setOpenModalUserManual(false)} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Điều dưỡng</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F2 hoặc nút Đăng ký trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Làm mới form thông tin đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F4 hoặc nút Làm mới trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Tìm bệnh cũ</Typography>\r\n                        <Typography>Nhấn phím F8 hoặc nút Bệnh cũ trên màn hình, sau khi nhập thông tin và tìm được bệnh nhân, click đúp thông tin bệnh nhân để form thông tin đăng ký khám nhận dữ liệu</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin bệnh nhân</Typography>\r\n                        <Typography>Trong bảng danh sách đăng ký khám trong ngày, nhấn vào bệnh nhân để mở form sửa thông tin</Typography>\r\n                    </Box>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Bác sĩ</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Khám bệnh</Typography>\r\n                        <Typography>Bước 1: Nhấn chọn bệnh nhân để khám</Typography>\r\n                        <Typography>Bước 2: Nhấn F2 để bắt đầu khám</Typography>\r\n                        <Typography>Bước 3: Nhấn F4 để kết thúc khám</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin hỏi bệnh khi đã kết thúc khám</Typography>\r\n\r\n                    </Box>\r\n                \r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Admin</Typography>\r\n                {/* <Typography variant='subtitle1' sx={{color: 'red'}}>Nếu có sự cố liên hệ zalo: 0987654321 (chỉ phục vụ giờ hành chính)</Typography> */}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default UserManual","export default __webpack_public_path__ + \"static/media/logo.e5a4a234.png\";","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessingBackdrop(props) {\r\n    return (\r\n        <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: props.changeBackground ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.6)' }} open={props.openAlertProcessingBackdrop}>\r\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <CircularProgress color='inherit' />\r\n                <Typography sx={{mt: 1.4,}} variant='subtitle1'>{props.alertTitle}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n\r\nexport default AlertProcessingBackdrop\r\n","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\nconst userLogin = async (userId, password) => {\r\n  return await axios.post(`${backendURL}/api/UserAccount/Login`, { userId, password })\r\n  .then(function (response) {\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n};\r\n\r\nconst getUserLogin = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetUserLogin`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst getGetListDoctor = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetDoctors`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nexport {\r\n    userLogin, \r\n    getUserLogin, getGetListDoctor\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst createMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/Register`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createMedicalBackRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/BackRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createCurrentDoctorExamining = async (userIdDoctor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/SetDoctorExaming/${userIdDoctor}`, \r\n        {}, // Body của request, có thể là {} hoặc object\r\n        {\r\n            headers: {\r\n                \"content-type\": \"text/plain; charset=utf-8\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddPredecessor = async (dataPredecessor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddPredecessor`, dataPredecessor,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddMedicalBook = async (dataMedicalBook) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddMedicalBook`, dataMedicalBook,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getRegistersByDateNow = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetRegistersByDateNow`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveRegister = async (dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveOldRegister = async (dayOfBirth, patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}&patientId=${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListOldDisease = async (patientId, phone, fullName, dayOfBirth, gender) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/SearchPatients?patientId=${patientId}&phone=${phone}&fullName=${fullName}&dayOfBirth=${dayOfBirth}&gender=${gender}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getVaccinationByPatientId = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetVaccinationByPatientId/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getCurrentDoctorExamining = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetDoctorExamining`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalDetailPatient = async (id) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/DetailPatient/${id}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalBook = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetMediacalBook?medicalRegisterId=${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdatePredecessor = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdatePredecessor/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdateMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdateMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentDate = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentDate/${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentsNextWeek = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsNextWeek`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getAppointmentsToday = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsToday`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst updateMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/EditRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateMedicalState = async (id, state) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateState?id=${id}&state=${state}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateStateAppointment = async (dataAppointment, stateAppointment) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateStateAppointment/${dataAppointment.medicalBookId}?appointmentDate=${dataAppointment.appointmentDate}&stateAppointment=${stateAppointment}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    createMedicalRegister, createMedicalBackRegister, createCurrentDoctorExamining, createAddPredecessor, createAddMedicalBook,\r\n    getRegistersByDateNow, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister, getListOldDisease, getVaccinationByPatientId, getCurrentDoctorExamining, getMedicalDetailPatient, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook, getAppointmentDate, getAppointmentsNextWeek, getAppointmentsToday,\r\n    updateMedicalRegister, updateMedicalState, updateStateAppointment\r\n}","import React, { useState, useEffect } from 'react';\r\n//modal\r\nimport AlertProcessingBackdrop from '../components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//api\r\nimport { getUserLogin } from '../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../Service/MedicalService';\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n\r\n    const userDefault = {\r\n        isAuthenticated: false,\r\n        isLogin: false,\r\n        token: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(userDefault);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [isLogOutClick, setIsLogOutClick] = useState(false);\r\n    const [onConfirm, setOnConfirm] = useState(null);\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const loginContext = (userContextLogin) => {\r\n        setUser({ ...userContextLogin });\r\n        setLoading(false);\r\n    };\r\n\r\n    const triggerAlert = (confirmCallback) => {\r\n        setAlertVisible(true);\r\n        setIsLogOutClick(true);\r\n        setOnConfirm(() => confirmCallback);\r\n    };\r\n\r\n    const confirmAlert = () => {\r\n        if (onConfirm) onConfirm();\r\n        setIsLogOutClick(false);\r\n        resetAlert();\r\n    };\r\n\r\n    const resetAlert = () => {\r\n        setAlertVisible(false);\r\n        setIsLogOutClick(false);\r\n        setOnConfirm(null);\r\n    };\r\n\r\n    const logoutContext = () => {\r\n        setUser({ ...userDefault });\r\n    }\r\n\r\n    const loadingContext = (loading) => {\r\n        setLoading(...loading);\r\n    }\r\n\r\n    const fetchUser = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        const response = await getUserLogin();\r\n        if(response.positionName === 'Doctor'){\r\n            const responseCurrentDoctorExamining = await getCurrentDoctorExamining();\r\n            if(responseCurrentDoctorExamining.status === 200){\r\n                setUser({\r\n                    isAuthenticated: true, \r\n                    isLogin: true,\r\n                    userId: response.userId,\r\n                    userFullName: response.userFullName,\r\n                    positionName: response.positionName,\r\n                    isCurrentDoctorExamining: response.userId === responseCurrentDoctorExamining.data.userIdDoctor ? true : false\r\n                })\r\n            }\r\n            else{\r\n                setUser({\r\n                    isAuthenticated: true, \r\n                    isLogin: true,\r\n                    userId: response.userId,\r\n                    userFullName: response.userFullName,\r\n                    positionName: response.positionName,\r\n                    isCurrentDoctorExamining: false\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            setUser({\r\n                isAuthenticated: true, \r\n                isLogin: true,\r\n                userId: response.userId,\r\n                userFullName: response.userFullName,\r\n                positionName: response.positionName\r\n            }) \r\n        }\r\n        setLoading(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const parseJwt = (token) => {\r\n        try {\r\n          return JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n    };\r\n\r\n    const checkJWTExpire = () => {\r\n        let result = false;\r\n        let getJWT = localStorage.getItem('jwt');\r\n        if(getJWT){\r\n            let decodeJWT = parseJwt(getJWT);\r\n            let currentDate  = new Date();\r\n            if(decodeJWT.exp * 1000 < currentDate.getTime()) {\r\n                //console.log('Token đã hết hạn hoặc không tồn tại')\r\n                localStorage.removeItem('jwt'); //xóa localStorage\r\n                localStorage.removeItem('userLogin');\r\n                return result \r\n            }\r\n            else{\r\n                //console.log('token còn hạn');\r\n                result = true;\r\n                return result\r\n            }\r\n        }\r\n        else{\r\n            localStorage.removeItem('userLogin');\r\n            return result\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n        if(getUserLogin){\r\n            const result = checkJWTExpire();\r\n            if(result){\r\n                const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n                setUser(getUserLogin);\r\n            }else{\r\n                //không có token\r\n                setUser(userDefault);\r\n            }\r\n        }else{\r\n            localStorage.removeItem('jwt'); //xóa localStorage\r\n            setUser(userDefault);\r\n        }\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <UserContext.Provider \r\n                value={{ user, loading, loadingContext, loginContext, \r\n                    logoutContext, alertVisible, triggerAlert, confirmAlert, resetAlert, isLogOutClick\r\n                }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop}\r\n                alertTitle={'Đang tải thông tin người dùng'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\nimport UserManual from '../ManageUserManual/UserManual';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nfunction Header(props) {\r\n\r\n  const { user, logoutContext, triggerAlert } = useContext(UserContext);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [openModalUserManual, setOpenModalUserManual] = useState(false);\r\n\r\n  //mui state menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  \r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const actionNursing = [\r\n    { key: 'medicalRegister', maxWidth: '114px', label: 'Đăng ký khám', icon: <LocalHospitalIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/medicalregister\" },\r\n    { key: 'remind-examining', maxWidth: '95px', label: 'Nhắc khám', icon: <LocalPhoneIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/remind-examining\" },\r\n  ]\r\n\r\n  const actionDoctor = [\r\n    { key: 'examining', maxWidth: '100px', label: 'Khám bệnh', icon: <MedicationLiquidIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/doctor-examining\" },\r\n  ]\r\n\r\n  const actionAdmin = [\r\n    { key: 'statistical', maxWidth: '83px', label: 'Thống kê', icon: <BarChartIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/dashboard\" },\r\n  ]\r\n\r\n  const [userAction, setUserAction] = useState([]);\r\n\r\n  const handleChangeURL = (pathname) => {\r\n    const actionIndex = userAction.findIndex(action => action.to === pathname);\r\n    return actionIndex;\r\n  }\r\n\r\n  const value = handleChangeURL(props.location.pathname);\r\n\r\n  const handleLogout = () => {\r\n    if(user.positionName === 'Doctor'){\r\n      triggerAlert(() => {\r\n        localStorage.removeItem('jwt');\r\n        localStorage.removeItem('userLogin');\r\n        logoutContext();\r\n        setAnchorEl(null);\r\n        history.push('/login');\r\n      });\r\n    }\r\n    \r\n    else{\r\n      localStorage.removeItem('jwt'); //xóa localStorage\r\n      localStorage.removeItem('userLogin');\r\n      logoutContext();\r\n      setAnchorEl(null);\r\n      history.push('/login');\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(user.positionName === 'Nursing'){        \r\n      setUserAction(actionNursing);\r\n    }\r\n    else if(user.positionName === 'Doctor'){\r\n      setUserAction(actionDoctor);\r\n    }\r\n    else if(user.positionName === 'Admin'){\r\n      setUserAction(actionAdmin);\r\n    }\r\n  }, [user])\r\n  \r\n  if(location.pathname !== '/login'){\r\n    return (\r\n      <>\r\n        <Box sx={{ width: '100%'}} >\r\n          <AppBar sx={{position: 'unset'}}>\r\n            <Toolbar sx={{backgroundColor: '#cfe8fc', height: '78px'}}>\r\n              <Link to=\"/\">\r\n                <Avatar src={Logo} sx={{ width: 62, height: 62, mt: 'auto', mb: 'auto', mr: 4 }} />\r\n              </Link>\r\n                {user.isAuthenticated === true || token ? \r\n                  <>\r\n                    <BottomNavigation showLabels value={value}\r\n                      sx={{display: 'flex', justifyContent: 'flex-start', backgroundColor: '#cfe8fc', flexGrow: 1}}>\r\n                      {userAction.map(actionItem => (\r\n                        <BottomNavigationAction\r\n                          key={actionItem.key}\r\n                          label={actionItem.label}\r\n                          icon={actionItem.icon}\r\n                          LinkComponent={actionItem.LinkComponent}\r\n                          to={actionItem.to}\r\n                          sx={{color: '#000', maxWidth: actionItem.maxWidth}}\r\n                        />\r\n                      ))}  \r\n                    </BottomNavigation>\r\n\r\n                    <Button onClick={handleClick} sx={{color: '#000', textTransform: 'none'}}>{user.userFullName}</Button>\r\n                    <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\r\n                      <MenuItem>Đổi mật khẩu</MenuItem>\r\n                      <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                    </Menu>\r\n                    <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                  </>\r\n                  :\r\n                    <>\r\n                      <Box sx={{position: 'absolute', right: 22}}>\r\n                        <NavLink exact to=\"/login\"><Button sx={{textTransform: 'none', color: '#000'}}>Đăng nhập</Button></NavLink>\r\n                        <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                      </Box>\r\n                    </>\r\n                  }            \r\n                </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n  \r\n        <UserManual openModalUserManual={openModalUserManual} setOpenModalUserManual={setOpenModalUserManual}/>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst PrivateRoutes = (props) => {\n  const token = localStorage.getItem('jwt');\n  const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\n\n  if (token && getUserLogin) {\n    return (\n      <>\n        <Route path={props.path} component={props.component}></Route>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <Redirect to='/login'></Redirect>\n      </>\n    )\n  }\n};\nexport default PrivateRoutes;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../ErrorPage/Page500.scss\";\n\nconst Page404 = () => {\n\n  let history = useHistory();\n\n  return (\n    <div>\n      <div className=\"section\">\n        <h1 className=\"error\">404</h1>\n        <div className=\"page\">Trang mà bạn đang truy cập không tồn tại.</div>\n      </div>\n    </div>\n  );\n};\nexport default Page404;\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CreateAccount = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleCloseModalRegister = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalRegister(false);\r\n      }\r\n    }\r\n\r\n    const position = [\r\n      {id: '1', positionName: 'Điều dưỡng'},\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n          <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalRegister} onClose={(event, reason) => handleCloseModalRegister(event, reason)} disableEscapeKeyDown={true}  >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n            <IconButton onClick={() => handleCloseModalRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n              <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} />\r\n              <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }}/>\r\n              <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '46ch', mb: 2.5 }} \r\n                InputProps={{ // <-- This is where the toggle button is added.\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <Autocomplete options={position.map((option) => option.positionName)} renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} sx={{ width: '45.95ch', mb: 2.5 }}/>\r\n              <Stack spacing={2} direction=\"column\">\r\n                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleCloseModalRegister()}>Tạo tài khoản</Button>\r\n              </Stack>\r\n            \r\n            </DialogContent>\r\n          </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAccount","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Register from '../ManageRegister/Register';\r\nimport { toast } from 'react-toastify';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//api\r\nimport { userLogin } from '../../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nconst Login = () => {\r\n    const { user, loadingContext, loginContext } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [userAccount, setUserAccount] = useState({userId: '', password: ''})\r\n    const [openModalRegister, setOpenModalRegister] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const onChangeUserName = (e, value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                userId: value\r\n            }\r\n        }) \r\n    }\r\n\r\n    const onChangeUserPassword = (e, value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                password: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if(userAccount.userName === ''){\r\n            toast.error('Bạn chưa nhập tài khoản!')\r\n        }\r\n        else if(userAccount.password === ''){\r\n            toast.error('Bạn chưa nhập mật khẩu!');\r\n        }\r\n        else{\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const response = await userLogin(userAccount.userId, userAccount.password);\r\n            setOpenAlertProcessingBackdrop(false);\r\n            if(response.status !== 200){\r\n                toast.error(response.data);\r\n            }\r\n            else{\r\n                localStorage.setItem('jwt', response.data.tokenDTO.token)\r\n                if(response.data.positionName === 'Doctor'){\r\n                    const responseCurrentDoctorExamining = await getCurrentDoctorExamining();\r\n                    if(responseCurrentDoctorExamining.status === 200){\r\n                        const userLogin = {\r\n                            isAuthenticated: true, \r\n                            isLogin: true,\r\n                            userId: response.data.userId,\r\n                            userFullName: response.data.userFullName,\r\n                            positionName: response.data.positionName,\r\n                            isCurrentDoctorExamining: response.data.userId === responseCurrentDoctorExamining.data.userIdDoctor ? true : false\r\n                        }\r\n\r\n                        localStorage.setItem('userLogin', JSON.stringify(userLogin))\r\n                        loginContext(userLogin);\r\n                    }\r\n                    else{\r\n                        const userLogin = { \r\n                            isAuthenticated: true, \r\n                            isLogin: true, \r\n                            userId: response.data.userId, \r\n                            userFullName: response.data.userFullName, \r\n                            positionName: response.data.positionName, \r\n                            isCurrentDoctorExamining: false \r\n                        }\r\n                        \r\n                        localStorage.setItem('userLogin', JSON.stringify(userLogin))\r\n                        loginContext(userLogin)\r\n                    }\r\n                }\r\n                else{\r\n                    const userLogin = {\r\n                        isAuthenticated: true, \r\n                        isLogin: true, \r\n                        userId: response.data.userId, \r\n                        userFullName: response.data.userFullName, \r\n                        positionName: response.data.positionName\r\n                    }\r\n\r\n                    localStorage.setItem('userLogin', JSON.stringify(userLogin))\r\n                    loginContext(userLogin);\r\n                }\r\n\r\n                if(response.data.positionName === 'Nursing'){\r\n                    history.push('/medicalregister');\r\n                }\r\n                else if(response.data.positionName === 'Doctor'){\r\n                    history.push('/doctor-examining');\r\n                }\r\n                else if(response.data.positionName === 'Admin'){\r\n                    history.push('/dashboard');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleLogin();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAuthenticated === true) {\r\n            history.push('/');\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        const userLogin = localStorage.getItem('userLogin');\r\n        if (token && userLogin) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(openAlertProcessingBackdrop){\r\n                event.preventDefault();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [openAlertProcessingBackdrop])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box sx={{ mt: 3, borderRadius: '25px' }} >\r\n                    <Box sx={{ p: 7.6 }}>\r\n                        <Avatar src={Logo} sx={{ width: 120, height: 120, ml: 'auto', mr: 'auto', mb: 2 }} />\r\n                        <Typography sx={{ textAlign: 'center', textTransform: 'uppercase', fontWeight: 'bolder', fontSize: '1.15rem', mb: 2, color: '#4caf50' }} variant=\"h5\">Chương trình khám nhi khoa phát triển</Typography>\r\n                        <Box component=\"form\" autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                            <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e, e.target.value)}/>\r\n                            <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 3 }} \r\n                            onChange={(e) => onChangeUserPassword(e, e.target.value)} onKeyDown={(e) => handlePressEnter(e)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6.5vh', width: '28ch' }} variant=\"contained\" style={{ margin: 'auto' }} onClick={(e) => handleLogin()}>Đăng nhập</Button>\r\n                                <Typography sx={{textAlign: 'center'}} variant=\"subtitle1\">Chưa có tài khoản? <strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Đăng ký</strong></Typography>\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Register\r\n                openModalRegister={openModalRegister} setOpenModalRegister={setOpenModalRegister}\r\n            />\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang đăng nhập'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useState, useContext, useEffect } from 'react';\r\n//lodash\r\nimport _ from 'lodash';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Popper from '@mui/material/Popper';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//toast\r\nimport { toast } from 'react-toastify';\r\n//api\r\nimport { getGetListDoctor } from '../../Service/UserService';\r\nimport { createCurrentDoctorExamining } from '../../Service/MedicalService';\r\nimport { Box } from '@mui/material';\r\n\r\nfunction SelectedDoctorExamining(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [listDoctor, setListDoctor] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n\r\n    const CustomPopper = (props) => {\r\n        return <Popper {...props} style={{ width: props.anchorEl ? props.anchorEl.clientWidth : undefined }} placement=\"bottom-start\" />;\r\n      };\r\n\r\n    const onSelectDoctor = (e, value) => {\r\n        setSelectedDoctor( { userFullName: value.userFullName, userIdDoctor: value.userId } );\r\n    }\r\n\r\n    const handleCloseSelectedDoctorExaminingModal = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            setSelectedDoctor(null)\r\n            props.setOpenSelectedDoctorExaminingModal(false);\r\n        }\r\n    }\r\n\r\n    const handleCreateCurrentDoctorExamining = async () => {\r\n        if(selectedDoctor === null){\r\n            toast.error('Bạn chưa chọn bác sĩ khám!', {toastId: 'error1'})\r\n        }\r\n        else{\r\n            if(props.currentDoctorExamining.userIdDoctor === selectedDoctor.userId){\r\n                toast.warning('Bác sĩ này đã được chọn khám cho ngày hôm nay', {toastId: 'warning1'})\r\n            }\r\n            else{\r\n                const response = await createCurrentDoctorExamining(selectedDoctor.userIdDoctor);\r\n                toast.success(response.data, {toastId: 'success1'});\r\n                props.setCurrentDoctorExamining(selectedDoctor);\r\n                props.setOpenSelectedDoctorExaminingModal(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleGetGetListDoctor = async () => {\r\n        setLoading(true);\r\n        if(listDoctor.length === 0){\r\n            const response = await getGetListDoctor();\r\n            setListDoctor(response);\r\n            if(props.currentDoctorExamining.userIdDoctor !== ''){\r\n                const indexResponseListDoctor = response.findIndex(listDoctor => listDoctor.userId === props.currentDoctorExamining.userIdDoctor);\r\n                setSelectedDoctor(response[indexResponseListDoctor]);\r\n            }\r\n        }\r\n        else{\r\n            const indexResponseListDoctor = listDoctor.findIndex(listDoctor => listDoctor.userId === props.currentDoctorExamining.userIdDoctor);\r\n            setSelectedDoctor(listDoctor[indexResponseListDoctor]);\r\n        }\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 300)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openSelectedDoctorExaminingModal){   \r\n            handleGetGetListDoctor();   \r\n        }\r\n    }, [props.currentDoctorExamining, props.openSelectedDoctorExaminingModal])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth='xs' open={props.openSelectedDoctorExaminingModal} onClose={(event, reason) => handleCloseSelectedDoctorExaminingModal(event, reason)} disableEscapeKeyDown={true} >\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>{props.currentDoctorExamining ? props.currentDoctorExamining.userIdDoctor !== '' ? 'Thay đổi bác sĩ khám' : 'Chọn bác sĩ khám' : null}</DialogTitle>\r\n                <IconButton onClick={() => props.setOpenSelectedDoctorExaminingModal(false)}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers >\r\n                    {loading ? \r\n                        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                            <CircularProgress />\r\n                        </div>\r\n                    :\r\n                        <>\r\n                            <Box sx={{height: 'auto'}}>\r\n                                <Autocomplete \r\n                                    value={selectedDoctor}\r\n                                    sx={{marginBottom: '10px'}}\r\n                                    options={listDoctor}\r\n                                    PopperComponent={CustomPopper}\r\n                                    getOptionLabel={(option) => option.userFullName}\r\n                                    renderOption={(props, option) => (\r\n                                        <li {...props}>\r\n                                            {option.userFullName}\r\n                                        </li>\r\n                                    )}\r\n                                    onChange={(e, value) => onSelectDoctor(e, value)}\r\n                                    renderInput={(params) => (\r\n                                        <TextField {...params} \r\n                                            label={'Chọn một bác sĩ'} \r\n                                        />\r\n                                    )}\r\n                                    disableClearable // Bỏ icon xóa\r\n                                    popupIcon={null} // Bỏ icon dropdown\r\n                                />\r\n\r\n                                <Stack spacing={2} direction=\"column\">\r\n                                    <Button sx={{ width: '12ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} \r\n                                        onClick={() => handleCreateCurrentDoctorExamining()}>Lưu\r\n                                    </Button>\r\n                                </Stack>\r\n                            </Box>\r\n                        </>\r\n                    }\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectedDoctorExamining","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessing(props) {\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={props.openAlertProcessing} disableEscapeKeyDown={true}>\r\n                <DialogContent>\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <CircularProgress/>\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang xử lý...</Typography>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertProcessing","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getListProvince = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/ListProvince`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListDistrict = async (provinceId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListDistrictByIdProvince/${provinceId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListWard = async (districtId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListWardByIdDistrict/${districtId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getFullAddressByIdWard = async (codeWard) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetFullAddressByIdWard/${codeWard}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getListProvince, getListDistrict, getListWard, getFullAddressByIdWard\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport { Autocomplete } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//lodash\r\nimport _ from 'lodash';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { updateMedicalRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalService';\r\n\r\nfunction ManageInfoPantients(props) {\r\n  const dataPatientInfoDefault = {\r\n    examinationId: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    headCircumference: \"\",\r\n    reason: \"\",\r\n    vaccination: false,\r\n    id: \"\",\r\n    patient: {\r\n      identifier: \"\",\r\n      address: \"\",\r\n      fullName: \"\",\r\n      dayOfBirth: null,\r\n      codeWard: \"\",\r\n      gender: true,\r\n      fullNameMother: \"\",\r\n      phoneMother: \"\",\r\n      fullNameFather: \"\",\r\n      phoneFather: \"\",\r\n      patientId: \"\"\r\n    }\r\n  }\r\n\r\n  const dataPatientInfoErrorDefault = {\r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    examiningSession: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n  } \r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const selectedAutoCompleteDefault = { \r\n    gender: { value: null, openOption: false }, \r\n    examiningSession: {value: null, openOption: false, loading: false},\r\n    province: { value: null, openOption: false }, \r\n    district: { value: null, openOption: false }, \r\n    ward: { value: null, openOption: false },\r\n  }\r\n\r\n  const typingRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  const [dataPatientInfoNotEdit, setDataPatientInfoNotEdit] = useState();\r\n  const [dataPatientInfo, setDataPatientInfo] = useState(dataPatientInfoDefault);\r\n  const [dataPatientInfoError, setDataPatientInfoError] = useState(dataPatientInfoErrorDefault);\r\n    \r\n  const [selectedAutoComplete, setSelectedAutoComplete] = useState(selectedAutoCompleteDefault);\r\n\r\n  const [listExaminingSession, setListExaminingSession] = useState([]);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f',\r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -8],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.gender.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'ExaminingSession'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.examiningSession.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else{\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      //const _dataPatientInfoError = {...dataPatientInfoError};\r\n      // if(fieldName === 'patientId'){\r\n      //   _dataPatientInfoError.patientId.title = '';\r\n      //   _dataPatientInfoError.patientId.openTooltip = false;\r\n      //   setDataPatientInfoError(_dataPatientInfoError);\r\n      // }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.dayOfBirth.title = '';\r\n      //     _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientInfoError.dayOfBirth.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneMother.title = '';\r\n      //     _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneMother.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneFather'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneFather.title = '';\r\n      //     _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneFather.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'Gender'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.gender.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'ExaminingSession'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n      //     prevSelectedAutoComplete.examiningSession.openOption = false\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Province'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.province.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'District'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.district.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Ward'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.ward.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.gender.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'ExaminingSession'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n          prevSelectedAutoComplete.examiningSession.openOption = false\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.district.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.ward.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n  \r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n  \r\n      return (lowercasedFullName.includes(lowercasedInput) || initials.includes(lowercasedInput));\r\n    });\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientInfoError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientInfoError.identifier.openTooltip = true;\r\n          _dataPatientInfoError.identifier.isError = true;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n        else{\r\n          setDataPatientInfo(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientInfoError.identifier.title = '';\r\n          _dataPatientInfoError.identifier.openTooltip = false;\r\n          _dataPatientInfoError.identifier.isError = false;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.identifier.title = '';\r\n      _dataPatientInfoError.identifier.openTooltip = false;\r\n      _dataPatientInfoError.identifier.isError = false;\r\n      _dataPatientInfoError.identifier.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n    \r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.fullName = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n    \r\n      if(dataPatientInfoError.fullName.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullName.title = '';\r\n        _dataPatientInfoError.fullName.openTooltip = false;\r\n        _dataPatientInfoError.fullName.isError = false;\r\n        _dataPatientInfoError.fullName.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = async (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n    \r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n            \r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n    \r\n        if(today < takenValue || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientInfoError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n          _dataPatientInfoError.dayOfBirth.isError = true;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n    \r\n        else{\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.dayOfBirth = formattedDate\r\n            return {...prevDataPatientInfo}\r\n          })\r\n    \r\n          _dataPatientInfoError.dayOfBirth.title = '';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n          _dataPatientInfoError.dayOfBirth.isError = false;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n\r\n          onChangeDOBToGetExaminingSession(formattedDate);\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onChangeDOBToGetExaminingSession = async (formattedDate) => {\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.value = null\r\n      return {...prevSelectedAutoComplete}\r\n    })\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = true\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(formattedDate);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = false\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.patient.gender = value.genderValue\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n    \r\n    if(dataPatientInfoError.gender.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.gender.isError = false;\r\n      _dataPatientInfoError.gender.title = '';\r\n      _dataPatientInfoError.gender.openTooltip = false;\r\n      _dataPatientInfoError.gender.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectExaminingSession = (e, value) => {\r\n    if(focusField === 'examiningSession'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.examinationId = value.id\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.examiningSession.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(dataPatientInfoError.examiningSession.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.examiningSession.isError = false;\r\n      _dataPatientInfoError.examiningSession.title = '';\r\n      _dataPatientInfoError.examiningSession.openTooltip = false;\r\n      _dataPatientInfoError.examiningSession.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.province.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(selectedAutoComplete.district.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.province.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.province.isError = false;\r\n      _dataPatientInfoError.province.title = '';\r\n      _dataPatientInfoError.province.openTooltip = false;\r\n      _dataPatientInfoError.province.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.district.value = value;\r\n      return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.district.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.district.isError = false;\r\n      _dataPatientInfoError.district.title = '';\r\n      _dataPatientInfoError.district.openTooltip = false;\r\n      _dataPatientInfoError.district.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n\r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.codeWard = value.code\r\n      return { ...prevDataPatientInfo }\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.ward.value = value;\r\n        return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(dataPatientInfoError.ward.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.ward.isError = false;\r\n      _dataPatientInfoError.ward.title = '';\r\n      _dataPatientInfoError.ward.openTooltip = false;\r\n      _dataPatientInfoError.ward.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    if(focusField === 'address'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.address = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.address.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.address.isError = false;\r\n        _dataPatientInfoError.address.title = '';\r\n        _dataPatientInfoError.address.openTooltip = false;\r\n        _dataPatientInfoError.address.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    if(focusField === 'fullNameMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameMother = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(focusField === 'phoneMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneMother.openTooltip = true;\r\n          _dataPatientInfoError.phoneMother.isError = true;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n          \r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneMother = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n      \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n      \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 10)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneMother.title = '';\r\n      _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      _dataPatientInfoError.phoneMother.isError = false;\r\n      _dataPatientInfoError.phoneMother.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameFather = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneFather.openTooltip = true;\r\n          _dataPatientInfoError.phoneFather.isError = true;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n\r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneFather = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n                \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n                \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneFather.title = '';\r\n      _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      _dataPatientInfoError.phoneFather.isError = false;\r\n      _dataPatientInfoError.phoneFather.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    if(focusField === 'height'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.height = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.height.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.height.title = '';\r\n        _dataPatientInfoError.height.openTooltip = false;\r\n        _dataPatientInfoError.height.isError = false;\r\n        _dataPatientInfoError.height.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    if(focusField === 'weight'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.weight = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.weight.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.weight.title = '';\r\n        _dataPatientInfoError.weight.openTooltip = false;\r\n        _dataPatientInfoError.weight.isError = false;\r\n        _dataPatientInfoError.weight.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    if(focusField === 'headCircumference'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.headCircumference = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.headCircumference.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.headCircumference.title = '';\r\n        _dataPatientInfoError.headCircumference.openTooltip = false;\r\n        _dataPatientInfoError.headCircumference.isError = false;\r\n        _dataPatientInfoError.headCircumference.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.vaccination = bool\r\n      return {...prevDataPatientInfo}\r\n    })\r\n  }\r\n\r\n  const handleCloseModalInfoPantients = (event, reason) => {\r\n    if(reason && reason === \"backdropClick\"){\r\n      return;\r\n    }\r\n    else{\r\n      setListDistrict(prevListDistrict => {\r\n        prevListDistrict.loading = false\r\n        prevListDistrict.list = []\r\n        return {...prevListDistrict}\r\n      })\r\n      setListWard(prevListWard => {\r\n        prevListWard.loading = false\r\n        prevListWard.list = []\r\n        return {...prevListWard}\r\n      })\r\n      setListExaminingSession([]);\r\n      setSelectedAutoComplete(selectedAutoCompleteDefault);\r\n      setDataPatientInfo(dataPatientInfoDefault);\r\n      setDataPatientInfoNotEdit('');\r\n      setDataPatientInfoError(dataPatientInfoErrorDefault);\r\n      setLoading(true);\r\n      props.setSelectedPantientInfo();\r\n      props.setOpenModalInfoPantients(false);\r\n    }\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const responseListProvince = await getListProvince();\r\n    setListProvince(responseListProvince);\r\n  }\r\n\r\n  const handleApplyPantientDataToField = async () => {\r\n    setOpenAlertProcessing(true);   \r\n      \r\n    const editPropsDataPatientInfo = {...dataPatientInfo};\r\n    editPropsDataPatientInfo.examinationId = props.selectedPantientInfo.examinationId\r\n    editPropsDataPatientInfo.height = props.selectedPantientInfo.height\r\n    editPropsDataPatientInfo.weight = props.selectedPantientInfo.weight\r\n    editPropsDataPatientInfo.headCircumference = props.selectedPantientInfo.headCircumference\r\n    editPropsDataPatientInfo.reason = props.selectedPantientInfo.reason\r\n    editPropsDataPatientInfo.vaccination = props.selectedPantientInfo.vaccination\r\n    editPropsDataPatientInfo.id = props.selectedPantientInfo.id\r\n    editPropsDataPatientInfo.patient.identifier = props.selectedPantientInfo.patient.identifier\r\n    editPropsDataPatientInfo.patient.address = props.selectedPantientInfo.patient.address\r\n    editPropsDataPatientInfo.patient.fullName = props.selectedPantientInfo.patient.fullName\r\n    editPropsDataPatientInfo.patient.dayOfBirth = props.selectedPantientInfo.patient.dayOfBirth\r\n    editPropsDataPatientInfo.patient.codeWard = props.selectedPantientInfo.patient.codeWard\r\n    editPropsDataPatientInfo.patient.gender = props.selectedPantientInfo.patient.gender\r\n    editPropsDataPatientInfo.patient.fullNameMother = props.selectedPantientInfo.patient.fullNameMother\r\n    editPropsDataPatientInfo.patient.phoneMother = props.selectedPantientInfo.patient.phoneMother\r\n    editPropsDataPatientInfo.patient.fullNameFather = props.selectedPantientInfo.patient.fullNameFather\r\n    editPropsDataPatientInfo.patient.phoneFather = props.selectedPantientInfo.patient.phoneFather\r\n    editPropsDataPatientInfo.patient.patientId = props.selectedPantientInfo.patient.patientId\r\n\r\n    setDataPatientInfo(_.cloneDeep(editPropsDataPatientInfo));\r\n    setDataPatientInfoNotEdit(_.cloneDeep(editPropsDataPatientInfo));\r\n        \r\n    const response = await getFullAddressByIdWard(props.selectedPantientInfo.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.list = responseListDistrict;\r\n      return {...prevListDistrict}\r\n    });\r\n    const responseListWard = await getListWard(response.districtCode);\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = responseListWard;\r\n      return {...prevListWard}\r\n    });\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(props.selectedPantientInfo.patient.dayOfBirth);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n     \r\n    const selectedGender = listGender.find(gender => gender.genderValue === props.selectedPantientInfo.patient.gender);\r\n    const indexListExamining = responseListMedicalExaminationsGiveRegister.exams.findIndex(examiningSession => examiningSession.id === props.selectedPantientInfo.examinationId)\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = selectedGender\r\n      prevSelectedAutoComplete.examiningSession.value = responseListMedicalExaminationsGiveRegister.exams[indexListExamining];\r\n      prevSelectedAutoComplete.province.value = listProvince[indexListProvince];\r\n      prevSelectedAutoComplete.district.value = responseListDistrict[indexListDistrict];\r\n      prevSelectedAutoComplete.ward.value = responseListWard[indexListWard];\r\n      return prevSelectedAutoComplete\r\n    })\r\n\r\n    setLoading(false);\r\n    setOpenAlertProcessing(false);   \r\n  }\r\n\r\n  const checkValidate = () => {\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      let isValid = true;\r\n\r\n      if(dataPatientInfoError.identifier.title !== ''){\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.identifier.focus = true;\r\n          setFocusField('identifier');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullName === ''){\r\n        _dataPatientInfoError.fullName.title = 'Bạn chưa nhập họ tên';\r\n        _dataPatientInfoError.fullName.openTooltip = true;\r\n        _dataPatientInfoError.fullName.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullName.focus = true;\r\n          setFocusField('fullName');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(dataPatientInfo.patient.gender === ''){\r\n        _dataPatientInfoError.gender.title = 'Bạn chưa chọn giới tính';\r\n        _dataPatientInfoError.gender.isError = true;\r\n        _dataPatientInfoError.gender.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.gender.focus = true;\r\n          setFocusField('gender');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.dayOfBirth === ''){\r\n        _dataPatientInfoError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfoError.dayOfBirth.title !== ''){\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.examiningSession.value === null){\r\n        _dataPatientInfoError.examiningSession.title = 'Bạn chưa chọn lại kỳ khám';\r\n        _dataPatientInfoError.examiningSession.isError = true;\r\n        _dataPatientInfoError.examiningSession.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.examiningSession.focus = true;\r\n          setFocusField('examiningSession');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.province.value === null){\r\n        _dataPatientInfoError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n        _dataPatientInfoError.province.isError = true;\r\n        _dataPatientInfoError.province.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.province.focus = true;\r\n          setFocusField('province');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.district.value === null){\r\n        _dataPatientInfoError.district.title = 'Bạn chưa chọn quận huyện';\r\n        _dataPatientInfoError.district.isError = true;\r\n        _dataPatientInfoError.district.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.district.focus = true;\r\n          setFocusField('district');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.ward.value === null){\r\n        _dataPatientInfoError.ward.title = 'Bạn chưa chọn phường xã';\r\n        _dataPatientInfoError.ward.isError = true;\r\n        _dataPatientInfoError.ward.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.ward.focus = true;\r\n          setFocusField('ward');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.address === ''){\r\n        _dataPatientInfoError.address.title = 'Bạn chưa nhập địa chỉ';\r\n        _dataPatientInfoError.address.isError = true;\r\n        _dataPatientInfoError.address.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.address.focus = true;\r\n          setFocusField('address');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullNameMother === '' && dataPatientInfo.patient.fullNameFather === ''){\r\n        _dataPatientInfoError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n        _dataPatientInfoError.fullNameMother.isError = true;\r\n        _dataPatientInfoError.fullNameMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullNameMother.focus = true;\r\n          setFocusField('fullNameMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.phoneMother === '' && dataPatientInfo.patient.phoneFather === ''){\r\n        _dataPatientInfoError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        _dataPatientInfoError.phoneMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneMother.title !== ''){\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneFather.title !== ''){\r\n        _dataPatientInfoError.phoneFather.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneFather.focus = true;\r\n          setFocusField('phoneFather');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.height === ''){\r\n        _dataPatientInfoError.height.title = 'Bạn chưa nhập chiều cao';\r\n        _dataPatientInfoError.height.isError = true;\r\n        _dataPatientInfoError.height.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.height.focus = true;\r\n          setFocusField('height');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.weight === ''){\r\n        _dataPatientInfoError.weight.title = 'Bạn chưa nhập cân nặng';\r\n        _dataPatientInfoError.weight.isError = true;\r\n        _dataPatientInfoError.weight.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.weight.focus = true;\r\n          setFocusField('weight');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.headCircumference === ''){\r\n        _dataPatientInfoError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n        _dataPatientInfoError.headCircumference.isError = true;\r\n        _dataPatientInfoError.headCircumference.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.headCircumference.focus = true;\r\n          setFocusField('headCircumference');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      // if(dataPatientInfo.reason === ''){\r\n      //   _dataPatientInfoError.reason.isError = true;\r\n      //   isValid = false;\r\n      // }\r\n\r\n      if(_.isEqual(dataPatientInfo, dataPatientInfoNotEdit) === true){\r\n        toast.warning('Hiện không có gì để cập nhật', {toastId: 'warning1'});\r\n        isValid = false;\r\n      }\r\n\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n      return isValid;\r\n  }\r\n\r\n  const handleUpdateMedicalRegister = async () => {\r\n    if(checkValidate()){\r\n      setOpenAlertProcessing(true);\r\n      const response = await updateMedicalRegister(dataPatientInfo);\r\n      if(response.status === 200){\r\n        toast.success(response.data, {toastId: 'success1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      else{\r\n        toast.error(response.data, {toastId: 'error1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      setOpenAlertProcessing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(listProvince.length === 0){\r\n      handleGetListProvince();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.selectedPantientInfo){\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n      handleApplyPantientDataToField();\r\n    }\r\n  }, [props.selectedPantientInfo])\r\n\r\n  useEffect(() => {\r\n    if(props.openModalInfoPantients && props.isContinueUpdateMedicalRegister && loading === false){\r\n      handleUpdateMedicalRegister();\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n    }\r\n  }, [props.isContinueUpdateMedicalRegister, loading])\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth={true} maxWidth='md' open={props.openModalInfoPantients} onClose={(event, reason) => handleCloseModalInfoPantients(event, reason)} >\r\n        <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center', color: 'blue' }}>Thông tin bệnh nhân</DialogTitle>\r\n        <IconButton onClick={() => handleCloseModalInfoPantients()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n          <CloseIcon fontSize='medium'/>\r\n        </IconButton>\r\n        <DialogContent dividers sx={{pt: 1.5, pb: 1.5}}>\r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', pl: 4.2, pr: 4.2, mb: 0.8}}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.identifier.title}</h6>} open={dataPatientInfoError.identifier.openTooltip} placement='left'> \r\n              <TextField error={true ? dataPatientInfoError.identifier.isError === true : false}\r\n                label=\"Mã định danh\" variant=\"outlined\" \r\n                sx={{width: '18%', '&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                inputProps={{ maxLength: 12 }}\r\n                inputRef={(input) => input && focusField === 'identifier' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.identifier}\r\n                onChange={(e) => onChangeIdentifier(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n                      \r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullName.title}</h6>} open={dataPatientInfoError.fullName.openTooltip} placement='top'\r\n              slotProps={{\r\n                popper: {\r\n                  modifiers: [\r\n                    {\r\n                      name: 'offset',\r\n                      options: { offset: [-10, -6], },\r\n                    },\r\n                  ],\r\n                },\r\n              }} \r\n            > \r\n              <TextField error={true ? dataPatientInfoError.fullName.isError === true : false}\r\n                label=\"Họ tên\" variant=\"outlined\" \r\n                sx={{width: '32%', '&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.fullName}\r\n                onChange={(e) => onChangeFullName(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.gender.title}</h6>} open={dataPatientInfoError.gender.openTooltip} placement='top'>\r\n              <Autocomplete \r\n                sx={{width: '12%', marginTop: '7.5px'}}\r\n                options={listGender} \r\n                getOptionLabel={(option) => option.genderName}\r\n                value={selectedAutoComplete.gender.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.genderName}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectGender(e, value)}\r\n                open={selectedAutoComplete.gender.openOption}\r\n                onFocus={() => handleFocus('Gender')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Giới tính\" \r\n                    inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                    error={true ? dataPatientInfoError.gender.isError === true : false}                     \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <DemoContainer components={['DatePicker']}>  \r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.dayOfBirth.title}</h6>} open={dataPatientInfoError.dayOfBirth.openTooltip}>    \r\n                  <Box sx={{width: 110}}>\r\n                    <DatePicker label=\"Ngày sinh\" \r\n                      format='DD/MM/YYYY' defaultValue={moment(dataPatientInfo.patient.dayOfBirth)}\r\n                      disableFuture={true} disableOpenPicker \r\n                      slotProps={{ \r\n                        textField: \r\n                          { \r\n                            inputRef: dateFieldRef,\r\n                            error: true ? dataPatientInfoError.dayOfBirth.isError === true : false,\r\n                            onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                          }\r\n                        }}\r\n                      onChange={(value) => onChangeDOB(value)}\r\n                    />\r\n                  </Box>\r\n                </Tooltip>\r\n              </DemoContainer>\r\n            </ThemeProvider>\r\n          </LocalizationProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.examiningSession.title}</h6>} open={dataPatientInfoError.examiningSession.openTooltip} placement='right'>\r\n              <Autocomplete \r\n                sx={{width: '18%', mt: '7.5px'}}\r\n                options={listExaminingSession} \r\n                noOptionsText={selectedAutoComplete.examiningSession.loading ? 'Đang tải...' : ''}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.examiningSession.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectExaminingSession(e, value)}\r\n                open={selectedAutoComplete.examiningSession.openOption}\r\n                onFocus={() => handleFocus('ExaminingSession')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'ExaminingSession')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Kỳ khám\" \r\n                    inputRef={(input) => input && focusField === 'examiningSession' && input.focus()}\r\n                    error={true ? dataPatientInfoError.examiningSession.isError === true : false} \r\n                    sx={{'& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot': {pl: '6px', pr: '6px'}}}\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      endAdornment: (\r\n                        <>\r\n                          {selectedAutoComplete.examiningSession.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </>\r\n                      ),\r\n                    }} \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.province.title}</h6>} open={dataPatientInfoError.province.openTooltip} placement='left'>\r\n              <Autocomplete \r\n                sx={{width: '20%', mt: 2}}\r\n                options={listProvince} \r\n                filterOptions={filterOptions}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.province.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectProvine(e, value)}\r\n                open={selectedAutoComplete.province.openOption}\r\n                onFocus={() => handleFocus('Province')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Thành phố\"\r\n                    inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                    error={true ? dataPatientInfoError.province.isError === true : false}  \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.district.title}</h6>} open={dataPatientInfoError.district.openTooltip} placement='top'>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listDistrict.list} \r\n                  noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.district.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectDistrict(e, value)}\r\n                  open={selectedAutoComplete.district.openOption}\r\n                  onFocus={() => handleFocus('District')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Quận/huyện\" \r\n                      inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                      error={true ? dataPatientInfoError.district.isError === true : false} \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.ward.title}</h6>} open={dataPatientInfoError.ward.openTooltip}>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listWard.list}\r\n                  noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.ward.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectWard(e, value)}\r\n                  open={selectedAutoComplete.ward.openOption}\r\n                  onFocus={() => handleFocus('Ward')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Phường/Xã\" \r\n                      inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                      error={true ? dataPatientInfoError.ward.isError === true : false}  \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.address.title}</h6>} open={dataPatientInfoError.address.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.address.isError === true : false}\r\n                  label=\"Địa chỉ\" variant=\"outlined\" \r\n                  sx={{width: '36%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.address}\r\n                  onChange={(e) => onChangeAddress(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullNameMother.title}</h6>} open={dataPatientInfoError.fullNameMother.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.fullNameMother.isError === true : false}\r\n                  label=\"Họ tên mẹ\" variant=\"outlined\" \r\n                  sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.fullNameMother}\r\n                  onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                />    \r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneMother.title}</h6>} open={dataPatientInfoError.phoneMother.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.phoneMother.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneMother}\r\n                  onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <TextField \r\n              label=\"Họ tên cha\" variant=\"outlined\" sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n              defaultValue={dataPatientInfo.patient.fullNameFather}\r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n            />\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneFather.title}</h6>} open={dataPatientInfoError.phoneFather.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.phoneFather.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneFather}\r\n                  onChange={(e) => onChangePhoneFather(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.height.title}</h6>} open={dataPatientInfoError.height.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.height.isError === true : false}\r\n                  label='Chiều cao' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.height}\r\n                  onChange={(e) => onChangeHeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.weight.title}</h6>} open={dataPatientInfoError.weight.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.weight.isError === true : false}\r\n                  label='Cân nặng' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(kg)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.weight}\r\n                  onChange={(e) => onChangeWeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.headCircumference.title}</h6>} open={dataPatientInfoError.headCircumference.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.headCircumference.isError === true : false}\r\n                  label='Vòng đầu' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.headCircumference}\r\n                  onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <FormControlLabel sx={{width: '30%', mt: 2}} control={<Checkbox checked={dataPatientInfo.vaccination}/>} \r\n              label=\"Có tham gia tiêm ngừa\"\r\n              onChange={(e) => onChangeVaccination(e.target.checked)}\r\n            />  \r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{justifyContent: 'center'}}>\r\n          <Button variant=\"contained\" onClick={() => handleUpdateMedicalRegister()}>Sửa (F1)</Button>\r\n          <Button variant=\"contained\" color='secondary' onClick={(event, reason) => handleCloseModalInfoPantients(event, reason)}>Đóng (ESC)</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <AlertProcessing openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageInfoPantients","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//info pantients modal\r\nimport ManageInfoPantients from '../ManageInfoPantients/ManageInfoPantients';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//mui theme\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getRegistersByDateNow, getAppointmentsToday, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction ListPatientsRegister(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n  const [listPantientChipState, setListPantientChipState] = useState(\r\n    [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n    ]\r\n  )\r\n\r\n  const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n  \r\n  const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n  const [listDataPatientsAppointmentsToday, setListDataPatientsAppointmentsToday] = useState([]); \r\n  \r\n  const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n  const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n  const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n  const [selectedPantientInfo, setSelectedPantientInfo] = useState();\r\n  const [openModalInfoPantients, setOpenModalInfoPantients] = useState(false);\r\n  const [isContinueUpdateMedicalRegister, setIsContinueUpdateMedicalRegister] = useState();\r\n\r\n  const renderPatientsStatus = (state) => {\r\n    if(state === 0 || state === 3){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterWaiting' />\r\n        </>\r\n      )\r\n    }\r\n    else if(state === 1){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterExamining' />\r\n        </>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterDone' />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSelectedChip = (chipIndex, chipLabel) => {\r\n    setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n    if(chipIndex === 0){\r\n      const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n      setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n    }\r\n    else if(chipIndex === 1){\r\n      const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n      setListDataPatientsRegisterState(listPantientRegisterDone);\r\n    }\r\n    else if(chipIndex === 2){\r\n      setListDataPatientsRegisterSort(listDataPatientsAppointmentsToday);\r\n      setListDataPatientsRegisterState(listDataPatientsAppointmentsToday);\r\n    }\r\n  };\r\n\r\n  const handleSearchPantient = (value) => {\r\n    const takenValue = value;\r\n    setSearchPatientsQuery(takenValue);\r\n\r\n    if(value === ''){\r\n      setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n    }else{\r\n      setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n    }\r\n  }\r\n\r\n  const searchPatients = (patients, searchTerm) => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return patients.filter(patientObj => {\r\n      const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n      return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n    });\r\n  }\r\n\r\n  const handleSelectedPantientInfo = (patientsRegisterSortItem) => {\r\n    setSelectedPantientInfo(patientsRegisterSortItem);\r\n    setIsContinueUpdateMedicalRegister(true);\r\n    setOpenModalInfoPantients(true);\r\n  }\r\n\r\n  const handleSelectedPantientAppointmentsToday = async (patientsRegisterSortItem) => {\r\n    setOpenAlertProcessingBackdrop(true);\r\n    const responseVaccinationByPatientId = await getVaccinationByPatientId(patientsRegisterSortItem.patient.patientId);\r\n    const dataPantientOldOldDiseaseRegister = {\r\n      examinationId: patientsRegisterSortItem.patient.nextExamId,\r\n      oldDisease: true,\r\n      height: '',\r\n      weight: '',\r\n      headCircumference: '',\r\n      reason: '',\r\n      vaccination: responseVaccinationByPatientId.vaccination,\r\n      medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n      userIdDoctor: '',\r\n      patient: patientsRegisterSortItem.patient\r\n    }\r\n    props.setDataPantientAppointmentsToday(dataPantientOldOldDiseaseRegister)\r\n    setOpenAlertProcessingBackdrop(false);\r\n  }\r\n\r\n  const handleGetRegistersByDateNow = async () => {\r\n    setLoading(true);\r\n\r\n    const response = await getRegistersByDateNow();\r\n    const responseGetAppointmentsToday = await getAppointmentsToday();\r\n\r\n    let updatedList = [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: responseGetAppointmentsToday.length }\r\n    ]\r\n\r\n    let _listDataPatientsAppointmentsToday\r\n    if(responseGetAppointmentsToday.length > 0){\r\n      _listDataPatientsAppointmentsToday = responseGetAppointmentsToday.map((item) => {\r\n        const result = {\r\n          patient : {\r\n            identifier: item.identifier,\r\n            patientId: item.patientId,\r\n            fullName: item.patientFullName,\r\n            gender: item.gender,\r\n            dayOfBirth: item.dateOfBirth,\r\n            fullNameMother: item.fullNameMother,\r\n            phoneMother: item.phoneMother,\r\n            fullNameFather: item.fullNameFather,\r\n            phoneFather: item.phoneFather,\r\n            address: item.address,\r\n            fullAddress: item.fullAddress,\r\n            codeWard: item.codeWard,\r\n            nextExamId: item.nextExamId\r\n          }\r\n        }\r\n        return result;\r\n      })\r\n      setListDataPatientsAppointmentsToday(_listDataPatientsAppointmentsToday);\r\n    }\r\n    else{\r\n      setListDataPatientsAppointmentsToday(responseGetAppointmentsToday)\r\n    }\r\n\r\n    if(response !== 400){\r\n      if(response.list.length !== 0){\r\n        setListDataPatientsRegister(response.list);\r\n        if(activeChip.chipOrder === 0){\r\n          const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám và tái khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n          setListDataPatientsRegisterState(listPantientRegisterDone);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 2){\r\n          setListDataPatientsRegisterSort(_listDataPatientsAppointmentsToday);\r\n          setListDataPatientsRegisterState(_listDataPatientsAppointmentsToday);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n      }\r\n    }\r\n    setListPantientChipState(updatedList);\r\n    props.setComponent1Loading(false);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetRegistersByDateNow();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(openModalInfoPantients){\r\n      const handleKeyDown = (event) => {\r\n        if(event.keyCode === 112){\r\n          event.preventDefault()\r\n          setIsContinueUpdateMedicalRegister(true);\r\n          //nhấn F1 để sửa thông tin đăng ký khám\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [openModalInfoPantients, isContinueUpdateMedicalRegister]);\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true){\r\n      handleGetRegistersByDateNow();\r\n      props.setCompleteMedicalRegister(false);\r\n    }\r\n  }, [props.completeMedicalRegister])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{p: 0}}>\r\n        <Typography variant='h6' sx={{color: 'red', mb: 0, fontWeight: 'bolder', fontSize: '1.16rem', marginBottom: '5px'}}>\r\n          {loading ? \r\n            <Skeleton /> \r\n          : \r\n            <div style={{display: 'flex', height: '30px'}}>\r\n              {props.currentDoctorExamining.userIdDoctor !== '' ?\r\n              <>\r\n                <Typography variant='subbtitle1'>{`Bác sĩ khám hôm nay: ${props.currentDoctorExamining.userFullName}`}</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Sửa'/>\r\n              </>\r\n              :\r\n              <>\r\n                <Typography variant='subbtitle1'>Chưa chọn bác sĩ khám hôm nay</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Thêm'/>\r\n              </>}\r\n            </div>\r\n          }\r\n        </Typography>\r\n\r\n        <div className='container' style={{border: '1px solid #fff', borderRadius: '10px', height: '562px', padding: 0, boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)'}}>\r\n          {loading ? \r\n             <>\r\n              <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                <CircularProgress/>\r\n                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n              </Box>        \r\n            </>\r\n          :\r\n            <>\r\n              <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                  <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                    <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                      onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                  </Badge>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n            \r\n              <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                <TextField sx={{mt: 0.2, mb: 1, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                  variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc SĐT' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    startAdornment: (\r\n                      <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                    ),\r\n                    endAdornment: (\r\n                      <InputAdornment position='end'>\r\n                        {searchPatientsQuery !== '' ? \r\n                          <CloseIcon sx={{cursor: 'pointer'}} \r\n                            titleAccess='Xóa'\r\n                            onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                          /> \r\n                        : \r\n                          null\r\n                        }\r\n                        </InputAdornment>  \r\n                      )\r\n                    }}>\r\n                  </TextField>\r\n              </Box>\r\n\r\n              <TableContainer component={Paper} sx={{ height: '438px', overflowX: 'scroll', borderBottomLeftRadius: '10px', borderBottomRightRadius: '10px' }}>\r\n                <Table stickyHeader sx={{ minWidth: 1200 }}>\r\n                  <TableHead>\r\n                    <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                      {activeChip.chipOrder === 2 ? \r\n                        null\r\n                      :\r\n                        <>\r\n                          <TableCell align=\"left\" sx={{fontSize: '0.95rem', p: '10px'}}>Trạng thái</TableCell>\r\n                          <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                        </>\r\n                      }\r\n                      <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {listDataPatientsRegisterSort.length !== 0 ?\r\n                      <>\r\n                        {listDataPatientsRegisterSort.map((patientsRegisterSortItem, patientsRegisterSortIndex) => (\r\n                          <TableRow hover role=\"checkbox\" key={patientsRegisterSortIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => activeChip.chipOrder === 2 ? handleSelectedPantientAppointmentsToday(patientsRegisterSortItem) : handleSelectedPantientInfo(patientsRegisterSortItem)}>\r\n                            {activeChip.chipOrder === 2 ? \r\n                              null\r\n                            :\r\n                              <>\r\n                                <TableCell align='center' sx={{width: '90px'}}>\r\n                                  <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.state === 0 || patientsRegisterSortItem.state === 3 ? 'Chờ khám' : patientsRegisterSortItem.state === 2 ? 'Đã khám' : 'Đang khám'}</Typography>} >\r\n                                    <span>{renderPatientsStatus(patientsRegisterSortItem.state)}</span>\r\n                                  </Tooltip>\r\n                                </TableCell>\r\n                                <TableCell align='left' sx={{width: '20px'}}>{patientsRegisterSortItem.order}</TableCell>\r\n                              </>\r\n                            }\r\n                            <TableCell align='left' sx={{width: '150px'}}>{patientsRegisterSortItem.patient.patientId}</TableCell>\r\n                            <TableCell align='left' sx={{width: '200px'}}>{patientsRegisterSortItem.patient.fullName}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{patientsRegisterSortItem.patient.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{moment(patientsRegisterSortItem.patient.dayOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                            <TableCell align='left' sx={{width: '140px'}}>{patientsRegisterSortItem.patient.phoneMother !== '' ? patientsRegisterSortItem.patient.phoneMother : patientsRegisterSortItem.patient.phoneFather}</TableCell>\r\n                            <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 120}}>\r\n                              <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.patient.fullAddress}</Typography>} >\r\n                                <span>{patientsRegisterSortItem.patient.fullAddress}</span>\r\n                              </Tooltip>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))} \r\n                      </>\r\n                    :\r\n                      null\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </>\r\n          }\r\n        </div>\r\n      </Box>\r\n      \r\n      <AlertProcessingBackdrop openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n      />\r\n\r\n      <ManageInfoPantients \r\n        openModalInfoPantients={openModalInfoPantients} setOpenModalInfoPantients={setOpenModalInfoPantients}\r\n        selectedPantientInfo={selectedPantientInfo} setSelectedPantientInfo={setSelectedPantientInfo}\r\n        isContinueUpdateMedicalRegister={isContinueUpdateMedicalRegister} setIsContinueUpdateMedicalRegister={setIsContinueUpdateMedicalRegister}\r\n        setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListPatientsRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//modal\r\n// import AlertConfirmModal from '../ManageAlertConfirm/AlertConfirm';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//api\r\nimport { createMedicalRegister, createMedicalBackRegister, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister } from '../../Service/MedicalService';\r\n\r\nfunction ExaminingSession(props) {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [listExaminingSession, setListExaminingSession] = useState(null);\r\n\r\n    const onChangeRadioSelect = (value) => {\r\n        props.dataPatientsRegister.examinationId = value;\r\n    }\r\n\r\n    const handleListMedicalExaminationsGiveRegister = async () =>  {\r\n        if(props.dataPatientsRegister.oldDisease){\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveOldRegister(props.dataPatientsRegister.patient.dayOfBirth, props.dataPatientsRegister.patient.patientId);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n        else{\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveRegister(props.dataPatientsRegister.patient.dayOfBirth);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    const handleMedicalRegister = async () => {\r\n        // //bệnh cũ\r\n        if(props.dataPatientsRegister.oldDisease === true && props.dataPatientsRegister.examinationId !== ''){\r\n            //là bênh mới đã đăng ký nhưng chưa từng khám bao giờ\r\n            if(listExaminingSession.isAppointment === false && listExaminingSession.oldExams.length === 0){\r\n                setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            //có hẹn khám nhưng không nhắc khám hoặc đến trễ ngày hẹn khám\r\n            else{\r\n                setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n        }\r\n        //bệnh mới\r\n        else{\r\n            //setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalRegister(props.dataPatientsRegister);\r\n            setOpenAlertProcessing(false);\r\n\r\n            if(response.status === 200){\r\n                toast.success(response.data);\r\n                setListExaminingSession(null);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCloseConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n      };\r\n\r\n    const handleOpenConfirm = () => {\r\n        if(props.dataPatientsRegister.examinationId === ''){\r\n            // setIsConfirmOpen(false);\r\n            toast.error('Bạn chưa chọn kỳ khám', {toastId: 'error1'});\r\n        }\r\n        else{\r\n            //setIsConfirmOpen(true);\r\n            handleMedicalRegister();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.dataPatientsRegister.patient.dayOfBirth !== '' && props.openModalExaminingSession === true){\r\n            handleListMedicalExaminationsGiveRegister();\r\n        }\r\n    }, [props.openModalExaminingSession])\r\n\r\n    useEffect(() => {\r\n        if(props.isContinueSelectedExaminingSession === true){\r\n            //nhấn F2 để hoàn tất đăng ký khám\r\n            handleOpenConfirm();\r\n            props.setIsContinueSelectedExaminingSession(false);\r\n        }\r\n    }, [props.isContinueSelectedExaminingSession])\r\n\r\n    return (\r\n        <>\r\n            {listExaminingSession ? \r\n                <>\r\n                    <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalExaminingSession} disableEscapeKeyDown={true}>\r\n                        <DialogTitle \r\n                            sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'green', textTransform: 'uppercase' }}>\r\n                            {`${props.dataPatientsRegister.patient.fullName}, \r\n                            ${props.dataPatientsRegister.patient.gender === true ? 'Nam' : 'Nữ'}, \r\n                            ${listExaminingSession.monthsOfAge}`}\r\n                        </DialogTitle>\r\n\r\n                        <IconButton onClick={() => [props.setOpenModalExaminingSession(false), props.dataPatientsRegister.examinationId = '', setListExaminingSession(null)]} \r\n                            sx={{position: 'absolute', right: 5, top: 7}}>\r\n                                <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n\r\n                        <DialogContent dividers sx={{pl: '0px', pr: '0px'}}>\r\n                            <Grid container rowSpacing={0}>\r\n                                <Grid item xs={0.5}/>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid black', p: 1, height: '50vh', overflow: 'auto'}}>\r\n                                        <Typography variant='h6' sx={{fontWeight: 'bolder'}}>Lịch sử khám</Typography>\r\n                                        {listExaminingSession.oldExams ?\r\n                                            listExaminingSession.oldExams.map((oldExamItem, oldExamIndex) => (\r\n                                                <Typography key={oldExamIndex} variant='subtitle1'>{oldExamItem.name}</Typography>\r\n                                            ))\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </Box>  \r\n                                </Grid>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid red', p: 1, height: '50vh'}}>\r\n                                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', color: 'red'}}>Chọn kỳ khám</Typography>\r\n                                            <RadioGroup key={`${props.dataPatientsRegister.patient.patientId}`} defaultValue={listExaminingSession.exams[0].id} onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                {listExaminingSession.exams.map((examItem, examIndex) => (\r\n                                                    <FormControlLabel key={`${examIndex}`} value={examItem.id} control={<Radio />} label={examItem.name} />\r\n                                                ))}\r\n                                            </RadioGroup>\r\n                                            <Button variant='contained' sx={{mt: 0.5}} onClick={() => handleOpenConfirm()}>Tiếp tục (F2)</Button> \r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </>\r\n            :\r\n                null\r\n            }\r\n\r\n            {/* <AlertConfirmModal \r\n                openAlertConfirmModal={isConfirmOpen} onCloseAlertConfirmModal={handleCloseConfirm} \r\n                onConfirmAlertConfirmModal={handleMedicalRegister} \r\n                titleConfirm=\"Đăng ký khám cho bệnh nhân?\"\r\n            /> */}\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExaminingSession","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListOldDisease, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDisease(props) {\r\n\r\n    const dataPatientsForSearchOldDiseaseDefault = {patientId: '', phone: '', fullName: '', dayOfBirth: ''}\r\n    const dataPatientsForSearchOldDiseaseErrorDefault = {\r\n        patientId: { title: '', isError: false, openTooltip: false, focus: false},\r\n        phone: { title: '', isError: false, openTooltip: false, focus: false },\r\n        fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n        dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n    \r\n    const [listFoundOldDisease, setListFoundOldDisease] = useState(null);\r\n    const [dataPatientsForSearchOldDisease, setDataPatientsForSearchOldDisease] = useState(dataPatientsForSearchOldDiseaseDefault);\r\n    const [dataPatientsForSearchOldDiseaseError, setDataPatientsForSearchOldDiseaseError] = useState(dataPatientsForSearchOldDiseaseErrorDefault);\r\n    const [focusField, setFocusField] = useState(null);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n\r\n    const dateFieldRef = useRef(null);\r\n    const formRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n    const tooltipTheme = createTheme({\r\n        components: {\r\n          MuiTooltip: {\r\n            defaultProps: {\r\n              placement: 'bottom',\r\n              arrow: true,\r\n              componentsProps: {\r\n                tooltip: {\r\n                  sx: {\r\n                    bgcolor: '#d32f2f',\r\n                  },\r\n                },\r\n                arrow: {\r\n                  sx: {\r\n                    color: '#d32f2f',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n    });\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key !== 'Enter') \r\n        {\r\n            event.preventDefault();\r\n        }\r\n        else if(event.key === 'Enter'){\r\n            handleEnterPress(event);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (value, fieldName) => {\r\n        if(value === '' || value === 'DD/MM/YYYY'){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(fieldName === 'patientId'){\r\n                if(typingRef.current){\r\n                    clearInterval(typingRef.current);\r\n                }\r\n                \r\n                typingRef.current = setTimeout(() => {  \r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }, 10)\r\n                \r\n                if(focusField === 'patientId'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'dayOfBirth'){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'dayOfBirth'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'phone'){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const onChangePatientId = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 8){\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = 'Mã bệnh nhân phải từ 8 đến 12 số';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'patientId'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.patientId = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n    }\r\n\r\n    const onChangeFullName = (value) => {\r\n        if(focusField === 'fullName'){\r\n            setFocusField(null);\r\n        }\r\n\r\n        setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n            prevDataPatientsForSearchOldDisease.fullName = value;\r\n            return {...prevDataPatientsForSearchOldDisease}\r\n        })\r\n\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);      \r\n    }\r\n\r\n    const onChangeDayOfBirth = (value) => {\r\n        if(value){            \r\n            const date = value._d;\r\n            const today = new Date();\r\n            const yearsDifference = today.getFullYear() - date.getFullYear();\r\n            const monthsDifference = today.getMonth() - date.getMonth();\r\n            const daysDifference = today.getDate() - date.getDate();\r\n            const age = today.getFullYear() - date.getFullYear();\r\n\r\n            let totalMonths = yearsDifference * 12 + monthsDifference;\r\n            let totalDays = daysDifference;\r\n\r\n            if (daysDifference < 0) {\r\n                totalMonths -= 1;\r\n                totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n            }\r\n\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n\r\n            if(today < date || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = true;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n              }\r\n              else{\r\n                const formattedDate = moment(date).format('YYYY-MM-DD');\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.dayOfBirth = formattedDate;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangePhone = (value) => {\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 10){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.phone = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        }\r\n    }\r\n\r\n    const handleCloseModalOldDisease = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n          else{\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            setListFoundOldDisease(null);\r\n            setSelectedRowIndex(0);\r\n            props.setOpenModalOldDisease(false);\r\n        }\r\n    }\r\n\r\n    const handleResetField = () => {\r\n        formRef.current.reset();\r\n        const inputs = formRef.current.querySelectorAll('input, textarea');\r\n        inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n        setFocusField(null);\r\n    }\r\n\r\n    const validate = () => {\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        let isValid = true;\r\n\r\n        if(dataPatientsForSearchOldDisease.patientId === '' && dataPatientsForSearchOldDisease.fullName === '' && \r\n            dataPatientsForSearchOldDisease.dayOfBirth === '' && dataPatientsForSearchOldDisease.phone === '')\r\n        {\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.fullName.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.patientId.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.focus = true;\r\n                setFocusField('patientId');\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.dayOfBirth.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                if (dateFieldRef.current) {\r\n                    dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n                }\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.phone.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.phone.focus = true;\r\n                setFocusField('phone');\r\n            }\r\n            isValid = false;\r\n        }\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        return isValid;\r\n    }\r\n\r\n    const handleFindOldDisease = async () => {\r\n        setOpenAlertProcessing(true);\r\n        const response = await getListOldDisease(dataPatientsForSearchOldDisease.patientId, dataPatientsForSearchOldDisease.phone, dataPatientsForSearchOldDisease.fullName, dataPatientsForSearchOldDisease.dayOfBirth, '');\r\n        setOpenAlertProcessing(false);\r\n        setListFoundOldDisease(response);\r\n        setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n        setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n        handleResetField();\r\n        if(response.length > 0){\r\n            tableRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleClickFindOldDisease = () => {\r\n        if(validate()){\r\n            setTimeout(()=> {\r\n                handleFindOldDisease()\r\n            }, 200)\r\n        }\r\n    }\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleClickFindOldDisease();\r\n        }\r\n    }\r\n\r\n    const handleTableKeyDown = (event) => {\r\n        if (event.key === 'ArrowDown') {\r\n            setSelectedRowIndex((prevIndex) => (Math.min(prevIndex + 1, listFoundOldDisease.length - 1)));\r\n        } else if (event.key === 'ArrowUp') {\r\n            setSelectedRowIndex((prevIndex) => (Math.max(prevIndex - 1, 0)));\r\n        } else if (event.key === 'Enter' && selectedRowIndex !== null){\r\n            handleApplyDataPatientOldDisease(listFoundOldDisease[selectedRowIndex])\r\n        }\r\n    };\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientId: foundOldDiseaseItem.patientId,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseModalOldDisease();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalOldDisease} onClose={(event, reason) => handleCloseModalOldDisease(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Tìm bệnh cũ</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalOldDisease()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{p: '10px 24px'}}>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around'}} component=\"form\" ref={formRef}>\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.patientId.title}</h6>} open={dataPatientsForSearchOldDiseaseError.patientId.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.patientId.isError === true : false}\r\n                                    label=\"Mã BN\" variant=\"outlined\" size='small'\r\n                                    autoFocus\r\n                                    inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                                    inputProps={{ maxLength: 12 }}\r\n                                    onChange={(e) => onChangePatientId(e.target.value)}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'patientId')}\r\n                                    onKeyDown={handleKeyDown} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.fullName.title}</h6>} open={dataPatientsForSearchOldDiseaseError.fullName.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.fullName.isError === true : false}\r\n                                    label=\"Họ tên\" variant=\"outlined\" size='small'\r\n                                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                                    onKeyDown={(e) => handleEnterPress(e)} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                            <ThemeProvider theme={tooltipTheme}>\r\n                                <DemoContainer components={['DatePicker']}>\r\n                                    <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.dayOfBirth.title}</h6>} open={dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip}>    \r\n                                        <Box sx={{width: 222}}>\r\n                                            <DatePicker label=\"Ngày sinh\" format='DD/MM/YYYY' \r\n                                                disableFuture={true} disableOpenPicker \r\n                                                renderInput={(params) => <TextField {...params} size='small' />}\r\n                                                slotProps={{  \r\n                                                    textField: \r\n                                                    { \r\n                                                        inputRef: dateFieldRef,\r\n                                                        error: true ? dataPatientsForSearchOldDiseaseError.dayOfBirth.isError === true : false, \r\n                                                        size: 'small', \r\n                                                        onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                                        onKeyDown: (e) => handleEnterPress(e)\r\n                                                    }, \r\n                                                }}\r\n                                                onChange={(value) => onChangeDayOfBirth(value)}\r\n                                            />\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                </DemoContainer>\r\n                            </ThemeProvider>      \r\n                        </LocalizationProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.phone.title}</h6>} open={dataPatientsForSearchOldDiseaseError.phone.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                                    inputRef={(input) => input && focusField === 'phone' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.phone.isError === true : false}\r\n                                    label=\"Điện thoại cha/mẹ\" variant=\"outlined\" size='small'\r\n                                    inputProps={{ maxLength: 10 }}\r\n                                    onChange={(e) => onChangePhone(e.target.value)}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'phone')}\r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 1.6}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleClickFindOldDisease()}>Tìm (Enter)</Button>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        {\r\n                            listFoundOldDisease ? \r\n                                listFoundOldDisease.length !== 0 ? \r\n                                <>\r\n                                    <TableContainer component={Paper} sx={{boxShadow: 4, mt: 1.4}} tabIndex={0} onKeyDown={(event) => handleTableKeyDown(event)} ref={tableRef}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listFoundOldDisease ? \r\n                                                    listFoundOldDisease.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                        <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} \r\n                                                            selected={selectedRowIndex === foundOldDiseaseIndex} \r\n                                                            onDoubleClick={() => handleApplyDataPatientOldDisease(foundOldDiseaseItem)}\r\n                                                        >\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.patientId}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                            <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'green'}}>Tìm thấy {listFoundOldDisease.length} bệnh nhân</Typography>\r\n                                </>\r\n                                : \r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'red'}}>Không tìm thấy bệnh nhân</Typography>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Box>  \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDisease","import React, { useState, useEffect, useRef } from 'react';\r\n//ExaminingSessios modal\r\nimport ExaminingSession from '../ManageExaminingSession/ExaminingSession';\r\n//old disease modal\r\nimport OldDisease from '../ManageOldDisease/OldDisease';\r\n// import OldDiseaseForRegister from '../ManageOldDisease/OldDiseaseForRegister';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateField } from '@mui/x-date-pickers/DateField';\r\n//lodash\r\nimport _ from 'lodash';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { createMedicalBackRegister } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction BookMedical(props) {\r\n\r\n  const dataPatientsRegisterDefault = {\r\n    examinationId: '',\r\n    oldDisease: false,\r\n    height: '',\r\n    weight: '',\r\n    headCircumference: '',\r\n    reason: '',\r\n    vaccination: false,\r\n    medicalTypeId: '',\r\n    userIdDoctor: '',\r\n    patient: {\r\n      patientId: '',\r\n      identifier: '',\r\n      address: '',\r\n      fullName: '',\r\n      dayOfBirth: '',\r\n      codeWard: '',\r\n      gender: '',\r\n      fullNameMother: '',\r\n      phoneMother: '',\r\n      fullNameFather: '',\r\n      phoneFather: ''\r\n    }\r\n  }\r\n\r\n  const autocompleteValueDefault = { \r\n    dayOfBirth: null, \r\n    gender: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    province: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    district: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    ward: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    medicalType: {\r\n      value: null,\r\n      openOption: false\r\n    },\r\n    vaccination: false \r\n  }\r\n\r\n  const dataPatientsRegisterErrorDefault = { \r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    patientId: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n    medicalType: { title: '', isError: false, openTooltip: false, focus: false },\r\n    reason: { title: '', isError: false, openTooltip: false, focus: false }\r\n  }\r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const listMedicalType = [\r\n    {medicalTypeOrder: 1, medicalTypeName: 'Khám Nhi khoa phát triển', medicalTypeId: 1},\r\n    {medicalTypeOrder: 2, medicalTypeName: 'Khám trẻ nguy cơ cao', medicalTypeId: 2},\r\n  ]\r\n\r\n  const [openModalExaminingSession, setOpenModalExaminingSession] = useState(false);\r\n  const [isContinueSelectedExaminingSession, setIsContinueSelectedExaminingSession] = useState(false);\r\n\r\n  const [openModalOldDisease, setOpenModalOldDisease] = useState(false);\r\n\r\n  // const [openOldDiseaseRegister, setOpenOldDiseaseRegister] = useState(false);\r\n  // const [listOldDiseaseRegister, setListOldDiseaseRegister] = useState([]);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const [dataPatientsRegister, setDataPatientsRegister] = useState(dataPatientsRegisterDefault);\r\n  const [dataPatientsRegisterError, setDataPatientsRegisterError] = useState(dataPatientsRegisterErrorDefault);\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [autocompleteValue, setAutocompleteValue] = useState(autocompleteValueDefault);\r\n\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const formRef = useRef(null);\r\n  const firstFocusRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n  const typingRef = useRef(null);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f', \r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -7],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n        event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n\r\n    // Xử lý đặc biệt cho \"d\" và \"đ\"\r\n    const replaceSpecialCharacters = str => str.replace(/đ/g, 'd');\r\n\r\n    return options.filter(option => {\r\n        const lowercasedFullName = replaceSpecialCharacters(option.fullName.toLowerCase());\r\n        const initials = replaceSpecialCharacters(option.fullName.split(' ').map(word => word[0]).join('').toLowerCase());\r\n\r\n        const normalizedInput = replaceSpecialCharacters(lowercasedInput);\r\n\r\n        return (\r\n            lowercasedFullName.includes(normalizedInput) ||\r\n            initials.includes(normalizedInput)\r\n        );\r\n    });\r\n  };\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.gender.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.province.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Ward'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'MedicalType'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.medicalType.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n      if(fieldName === 'Identifier'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n        _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.dayOfBirth.title = '';\r\n      //     _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n      //   _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PatientId'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.patientId.title = '';\r\n      //     _dataPatientsRegisterError.patientId.openTooltip = false;\r\n      //     _dataPatientsRegisterError.patientId.isError = false;\r\n      //     _dataPatientsRegisterError.patientId.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.phoneMother.title = '';\r\n      //     _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      //     _dataPatientsRegisterError.phoneMother.isError = false;\r\n      //     _dataPatientsRegisterError.phoneFather.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      if(fieldName === 'PhoneFather'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      else if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientsRegisterError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientsRegisterError.identifier.openTooltip = true;\r\n          _dataPatientsRegisterError.identifier.isError = true;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.identifier.title = '';\r\n      _dataPatientsRegisterError.identifier.openTooltip = false;\r\n      _dataPatientsRegisterError.identifier.isError = false;\r\n      _dataPatientsRegisterError.identifier.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangePatientId = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 8){\r\n          _dataPatientsRegisterError.patientId.title = 'Mã BN phải từ 8 đến 12 số';\r\n          _dataPatientsRegisterError.patientId.openTooltip = true;\r\n          _dataPatientsRegisterError.patientId.isError = true;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          if(focusField === 'patientId'){\r\n            setFocusField(null);\r\n          }\r\n          \r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.patientId = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.patientId.title = '';\r\n          _dataPatientsRegisterError.patientId.openTooltip = false;\r\n          _dataPatientsRegisterError.patientId.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    // else{\r\n    //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n    //   _dataPatientsRegisterError.patientId.title = '';\r\n    //   _dataPatientsRegisterError.patientId.openTooltip = false;\r\n    //   _dataPatientsRegisterError.patientId.isError = false;\r\n    //   _dataPatientsRegisterError.patientId.focus = false;\r\n    //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    // }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullName = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      if(dataPatientsRegisterError.fullName.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullName.title = '';\r\n        _dataPatientsRegisterError.fullName.openTooltip = false;\r\n        _dataPatientsRegisterError.fullName.isError = false;\r\n        _dataPatientsRegisterError.fullName.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n\r\n      // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n      //   handleFindOldDisease();\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n\r\n        if(today < takenValue || age > 2 || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientsRegisterError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n        }\r\n\r\n        else{\r\n          if(focusField === 'dayOfBirth'){\r\n            setFocusField(null);\r\n          }\r\n\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n          prevDataPatientsRegister.patient.dayOfBirth = formattedDate\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.dayOfBirth.title = '';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n          //   handleFindOldDisease();\r\n          // }\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.gender = value.genderValue\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.gender.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.gender.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.gender.title = '';\r\n      _dataPatientsRegisterError.gender.openTooltip = false;\r\n      _dataPatientsRegisterError.gender.isError = false;\r\n      _dataPatientsRegisterError.gender.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n    //   handleFindOldDisease();\r\n    // }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.province.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.district.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.province.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.province.title = '';\r\n      _dataPatientsRegisterError.province.openTooltip = false;\r\n      _dataPatientsRegisterError.province.isError = false;\r\n      _dataPatientsRegisterError.province.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.district.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.district.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.district.title = '';\r\n      _dataPatientsRegisterError.district.openTooltip = false;\r\n      _dataPatientsRegisterError.district.isError = false;\r\n      _dataPatientsRegisterError.district.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n    \r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.codeWard = value.code\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.ward.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.ward.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.ward.title = '';\r\n      _dataPatientsRegisterError.ward.openTooltip = false;\r\n      _dataPatientsRegisterError.ward.isError = false;\r\n      _dataPatientsRegisterError.ward.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeFolk = (value) => {\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'address'){\r\n        setFocusField(null);\r\n      }\r\n      \r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.address = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.address.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.address.title = '';\r\n        _dataPatientsRegisterError.address.openTooltip = false;\r\n        _dataPatientsRegisterError.address.isError = false;\r\n        _dataPatientsRegisterError.address.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'fullNameMother'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameMother = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        if(focusField === 'phoneMother'){\r\n          setFocusField(null);\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneMother.isError = true;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneMother = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneMother.title = '';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneMother.isError = false;\r\n      _dataPatientsRegisterError.phoneMother.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    if(focusField === 'fullNameFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameFather = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (e, value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneFather.isError = true;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneFather = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'phoneFather'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneFather.title = '';\r\n      _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneFather.isError = false;\r\n      _dataPatientsRegisterError.phoneFather.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'height'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.height = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.height.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.height.title = '';\r\n        _dataPatientsRegisterError.height.openTooltip = false;\r\n        _dataPatientsRegisterError.height.isError = false;\r\n        _dataPatientsRegisterError.height.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'weight'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.weight = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.weight.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.weight.title = '';\r\n        _dataPatientsRegisterError.weight.openTooltip = false;\r\n        _dataPatientsRegisterError.weight.isError = false;\r\n        _dataPatientsRegisterError.weight.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'headCircumference'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.headCircumference = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.headCircumference.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.headCircumference.title = '';\r\n        _dataPatientsRegisterError.headCircumference.openTooltip = false;\r\n        _dataPatientsRegisterError.headCircumference.isError = false;\r\n        _dataPatientsRegisterError.headCircumference.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onSelectMedicalType = (e, value) => {\r\n    if(focusField === 'medicalType'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.medicalTypeId = value.medicalTypeId\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.medicalType.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.medicalType.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.medicalType.title = '';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = false;\r\n      _dataPatientsRegisterError.medicalType.isError = false;\r\n      _dataPatientsRegisterError.medicalType.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeReason = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.reason = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      // if(dataPatientsRegisterError.reason.isError){\r\n      //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      //   _dataPatientsRegisterError.reason.isError = false;\r\n      //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.vaccination = bool\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.vaccination = bool\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkValidate = () => {\r\n    let isValid = true;\r\n    const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n\r\n    if(dataPatientsRegisterError.identifier.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.identifier.focus = true;\r\n        setFocusField('identifier');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.patientId === ''){\r\n      _dataPatientsRegisterError.patientId.title = 'Bạn chưa nhập mã bệnh nhân';\r\n      _dataPatientsRegisterError.patientId.openTooltip = true;\r\n      _dataPatientsRegisterError.patientId.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.patientId.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullName === ''){\r\n      _dataPatientsRegisterError.fullName.title = 'Bạn chưa nhập họ tên';\r\n      _dataPatientsRegisterError.fullName.openTooltip = true;\r\n      _dataPatientsRegisterError.fullName.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullName.focus = true;\r\n        setFocusField('fullName');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.dayOfBirth === ''){\r\n      _dataPatientsRegisterError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n      _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n      _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.dayOfBirth.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.gender === ''){\r\n      _dataPatientsRegisterError.gender.title = 'Bạn chưa chọn giới tính';\r\n      _dataPatientsRegisterError.gender.openTooltip = true;\r\n      _dataPatientsRegisterError.gender.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.gender.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n      setFocusField('gender');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.province.value === null){\r\n      _dataPatientsRegisterError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n      _dataPatientsRegisterError.province.openTooltip = true;\r\n      _dataPatientsRegisterError.province.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.province.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('province');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.district.value === null){\r\n      _dataPatientsRegisterError.district.title = 'Bạn chưa chọn quận huyện';\r\n      _dataPatientsRegisterError.district.openTooltip = true;\r\n      _dataPatientsRegisterError.district.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.district.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('district');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.ward.value === null){\r\n      _dataPatientsRegisterError.ward.title = 'Bạn chưa chọn phường xã';\r\n      _dataPatientsRegisterError.ward.openTooltip = true;\r\n      _dataPatientsRegisterError.ward.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.ward.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('ward');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.address === ''){\r\n      _dataPatientsRegisterError.address.title = 'Bạn chưa nhập địa chỉ';\r\n      _dataPatientsRegisterError.address.openTooltip = true;\r\n      _dataPatientsRegisterError.address.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.address.focus = true;\r\n        setFocusField('address');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullNameMother === '' && dataPatientsRegister.patient.fullNameFather === ''){\r\n      _dataPatientsRegisterError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n      _dataPatientsRegisterError.fullNameMother.openTooltip = true;\r\n      _dataPatientsRegisterError.fullNameMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullNameMother.focus = true;\r\n        setFocusField('fullNameMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.phoneMother === '' && dataPatientsRegister.patient.phoneFather === ''){\r\n      _dataPatientsRegisterError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n      _dataPatientsRegisterError.phoneMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneMother.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneFather.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneFather.focus = true;\r\n        setFocusField('phoneFather');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.height === ''){\r\n      _dataPatientsRegisterError.height.title = 'Bạn chưa nhập chiều cao';\r\n      _dataPatientsRegisterError.height.openTooltip = true;\r\n      _dataPatientsRegisterError.height.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.height.focus = true;\r\n        setFocusField('height');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.weight === ''){\r\n      _dataPatientsRegisterError.weight.title = 'Bạn chưa nhập cân nặng';\r\n      _dataPatientsRegisterError.weight.openTooltip = true;\r\n      _dataPatientsRegisterError.weight.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.weight.focus = true;\r\n        setFocusField('weight');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.headCircumference === ''){\r\n      _dataPatientsRegisterError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n      _dataPatientsRegisterError.headCircumference.openTooltip = true;\r\n      _dataPatientsRegisterError.headCircumference.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.headCircumference.focus = true;\r\n        setFocusField('headCircumference');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.medicalTypeId === ''){\r\n      _dataPatientsRegisterError.medicalType.title = 'Bạn chưa chọn loại hình khám';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = true;\r\n      _dataPatientsRegisterError.medicalType.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.medicalType.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('medicalType');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    // if(dataPatientsRegister.reason === ''){\r\n    //   _dataPatientsRegisterError.reason.isError = true;\r\n    //   isValid = false;\r\n    // }\r\n\r\n    if(dataPatientsRegister.userIdDoctor === ''){\r\n      if(props.currentDoctorExamining.userIdDoctor === '') {\r\n        toast.error('Bạn chưa chọn bác sĩ khám cho ngày hôm nay!', {toastId: 'error1'});\r\n        isValid = false;\r\n      }\r\n\r\n    else if(props.currentDoctorExamining.userIdDoctor !== ''){\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.userIdDoctor = props.currentDoctorExamining.userIdDoctor\r\n          return prevDataPatientsRegister\r\n        })\r\n      }\r\n    }\r\n\r\n    setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    return isValid;\r\n  }\r\n\r\n  const handleMedicalRegister = () => {\r\n    setTimeout(() => {\r\n      if(checkValidate()){\r\n        firstFocusRef.current.focus();\r\n        if(props.dataPantientAppointmentsToday){\r\n          handleMedicalBackRegister();\r\n        }\r\n        else{\r\n          setOpenModalExaminingSession(true);\r\n        }\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const handleMedicalBackRegister = async () => {\r\n    setOpenAlertProcessing(true);\r\n    const responseCreateMedicalBackRegister = await createMedicalBackRegister(dataPatientsRegister);\r\n    if(responseCreateMedicalBackRegister.status === 200){\r\n      toast.success(responseCreateMedicalBackRegister.data, {toastId: 'success5'})\r\n      props.setCompleteMedicalRegister(true);\r\n      handleResetField();\r\n    }\r\n    else{\r\n      toast.error(responseCreateMedicalBackRegister.data, {toastId: 'error5'})\r\n    }\r\n    setOpenAlertProcessing(false);\r\n  }\r\n\r\n  const handleApplyPantientOldDiseaseData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = dataPatientsRegister.patient.identifier;\r\n    document.getElementById('patientId').value = dataPatientsRegister.patient.patientId;\r\n    document.getElementById('patientFullName').value = dataPatientsRegister.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(dataPatientsRegister.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(dataPatientsRegister.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === dataPatientsRegister.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === dataPatientsRegister.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = dataPatientsRegister.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = dataPatientsRegister.patient.address;\r\n    document.getElementById('patientFullNameMother').value = dataPatientsRegister.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = dataPatientsRegister.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = dataPatientsRegister.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = dataPatientsRegister.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('height');\r\n  }\r\n\r\n  const handleApplyPantientAppointmentsTodayData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = props.dataPantientAppointmentsToday.patient.identifier;\r\n    document.getElementById('patientId').value = props.dataPantientAppointmentsToday.patient.patientId;\r\n    document.getElementById('patientFullName').value = props.dataPantientAppointmentsToday.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(props.dataPantientAppointmentsToday.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(props.dataPantientAppointmentsToday.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === props.dataPantientAppointmentsToday.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === props.dataPantientAppointmentsToday.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = props.dataPantientAppointmentsToday.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = props.dataPantientAppointmentsToday.patient.address;\r\n    document.getElementById('patientFullNameMother').value = props.dataPantientAppointmentsToday.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = props.dataPantientAppointmentsToday.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = props.dataPantientAppointmentsToday.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = props.dataPantientAppointmentsToday.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('height');\r\n  }\r\n\r\n  const handleResetField = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n\r\n    firstFocusRef.current.focus();\r\n  }\r\n\r\n  const handleOpenModalOldDisease = () => {\r\n    handleResetField();\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const response = await getListProvince();\r\n    if(response !== 400){\r\n      setListProvince(response);\r\n    }\r\n  }\r\n\r\n  // const handleFindOldDisease = async () => {\r\n  //   const response = await getListOldDisease('', '', dataPatientsRegister.patient.fullName, dataPatientsRegister.patient.dayOfBirth, dataPatientsRegister.patient.gender);\r\n  //   if(response.length !== 0){\r\n  //     setListOldDiseaseRegister(response);\r\n  //     setOpenOldDiseaseRegister(true);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleGetListProvince();\r\n    firstFocusRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(dataPatientsRegister.oldDisease === true){\r\n      handleApplyPantientOldDiseaseData();\r\n    }\r\n  }, [dataPatientsRegister.oldDisease])\r\n\r\n  useEffect(() => {\r\n    if(props.dataPantientAppointmentsToday){\r\n      setDataPatientsRegister(props.dataPantientAppointmentsToday);\r\n      handleApplyPantientAppointmentsTodayData();\r\n    }\r\n  }, [props.dataPantientAppointmentsToday]) \r\n\r\n  useEffect(() => {\r\n    if(props.onF2Press){\r\n      if(openModalExaminingSession === true && openModalOldDisease === false){\r\n        setIsContinueSelectedExaminingSession(true);\r\n        props.setOnF2Press(false);\r\n      }\r\n      else{\r\n        handleMedicalRegister();\r\n        props.setOnF2Press(false);\r\n      }\r\n    }\r\n    \r\n    if(props.onF4Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF4Press(false);\r\n      }\r\n      else{\r\n        handleResetField();\r\n        props.setOnF4Press(false);\r\n      }\r\n    }\r\n\r\n    if(props.onF8Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF8Press(false);\r\n      }\r\n      else{\r\n        handleOpenModalOldDisease();\r\n        props.setOnF8Press(false);\r\n      }\r\n    }\r\n  }, [props.onF2Press, props.onF4Press, props.onF8Press])\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{'&.MuiContainer-maxWidthLg': {pr: 0}}}>\r\n        <Box sx={{ minHeight: '36.4rem', borderRadius: '20px', boxShadow: 5, pt: 1.2, pb: 1.2, pl: 2.4, pr: 2.4, mt: 1.5}}>\r\n          <Typography variant='h6' sx={{textAlign: 'center', fontWeight: 'bolder', color: 'blue'}}>Thông tin đăng ký khám</Typography> \r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}} component=\"form\" ref={formRef}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.identifier.title}</h6>} open={dataPatientsRegisterError.identifier.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.identifier.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã định danh\" variant=\"outlined\" id='patientIdentifier'\r\n                  inputRef={focusField === 'identifier' ? (input) => input && focusField === 'identifier' && input.focus() : firstFocusRef}\r\n                  onChange={(e) => onChangeIdentifier(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Identifier')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.patientId.title}</h6>} open={dataPatientsRegisterError.patientId.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.patientId.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã BN\" variant=\"outlined\" id='patientId'\r\n                  inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                  onChange={(e) => onChangePatientId(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'PatientId')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullName.title}</h6>} open={dataPatientsRegisterError.fullName.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }} \r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [37, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              > \r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullName.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên\" variant=\"outlined\" id=\"patientFullName\"                   \r\n                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  /> \r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n      \r\n            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n              <ThemeProvider theme={tooltipTheme}>\r\n                <DemoContainer components={['DatePicker']} >\r\n                  <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.dayOfBirth.title}</h6>} open={dataPatientsRegisterError.dayOfBirth.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>    \r\n                    <Box sx={{width: 142, mt: '12px !important'}}>\r\n                      <div style={{width: '100%', }}>\r\n                        <DateField label=\"Ngày sinh\" \r\n                          format='DD/MM/YYYY' value={autocompleteValue.dayOfBirth}\r\n                          disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                          slotProps={{ \r\n                            textField: \r\n                              { \r\n                                inputRef: dateFieldRef,\r\n                                error: true ? dataPatientsRegisterError.dayOfBirth.isError === true : false,\r\n                                onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                sx: {'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } },\r\n                              }\r\n                          }}\r\n                          onChange={(value) => onChangeDOB(value)}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  </Tooltip>\r\n                </DemoContainer>\r\n              </ThemeProvider>      \r\n            </LocalizationProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.gender.title}</h6>} open={dataPatientsRegisterError.gender.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '12%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientGender' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.gender.value}\r\n                    options={listGender} \r\n                    getOptionLabel={(option) => option.genderName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.genderName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectGender(e, value)}\r\n                    open={autocompleteValue.gender.openOption}\r\n                    onFocus={() => handleFocus('Gender')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Giới tính\" \r\n                        inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.gender.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n             \r\n            {/* <TextField label=\"Dân tộc\" variant=\"outlined\" sx={{width: '12%', '&.MuiTextField-root' : {marginTop: '15px'}}}/> */}\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.province.title}</h6>} open={dataPatientsRegisterError.province.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '19.2%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.province.value}\r\n                    options={listProvince} \r\n                    noOptionsText={'Đang tải...'}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectProvine(e, value)}\r\n                    open={autocompleteValue.province.openOption}\r\n                    onFocus={() => handleFocus('Province')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Thành phố\" \r\n                        inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.province.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.district.title}</h6>} open={dataPatientsRegisterError.district.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '24%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.district.value}\r\n                    options={listDistrict.list} \r\n                    noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                    open={autocompleteValue.district.openOption}\r\n                    onFocus={() => handleFocus('District')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.fullName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectDistrict(e, value)}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Quận/Huyện\" \r\n                        inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.district.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <>\r\n                              {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <>\r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.ward.title}</h6>} open={dataPatientsRegisterError.ward.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                  <div style={{width: '23.5%', marginTop: '20px'}}>\r\n                    <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                      value={autocompleteValue.ward.value}\r\n                      options={listWard.list} \r\n                      noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                      filterOptions={filterOptions}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderOption={(props, option) => (\r\n                        <li {...props}>\r\n                          {option.fullName}\r\n                        </li>\r\n                      )}\r\n                      onChange={(e, value) => onSelectWard(e, value)}\r\n                      open={autocompleteValue.ward.openOption}\r\n                      onFocus={() => handleFocus('Ward')}\r\n                      onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} \r\n                          label=\"Phường/Xã\" \r\n                          inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                          error={true ? dataPatientsRegisterError.ward.isError === true : false} \r\n                          sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                              <>\r\n                                {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                              </>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      disableClearable // Bỏ icon xóa\r\n                      popupIcon={null} // Bỏ icon dropdown\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.address.title}</h6>} open={dataPatientsRegisterError.address.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.address.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Địa chỉ\" variant=\"outlined\" id='patientAddress'\r\n                    inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                    onChange={(e) => onChangeAddress(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullNameMother.title}</h6>} open={dataPatientsRegisterError.fullNameMother.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullNameMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên mẹ\" variant=\"outlined\" id='patientFullNameMother'\r\n                    inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                    autoFocus={dataPatientsRegisterError.fullNameMother.focus}\r\n                    onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneMother.title}</h6>} open={dataPatientsRegisterError.phoneMother.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.phoneMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Điện thoại\" variant=\"outlined\" id='patientPhoneMother' \r\n                    inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                    onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n\r\n            <TextField label=\"Họ tên cha\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n              variant=\"outlined\" id='patientFullNameFather' \r\n              sx={{width: '30.4%', '&.MuiTextField-root' : {marginTop: '20px'}}} \r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n              inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n              InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n            />\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneFather.title}</h6>} open={dataPatientsRegisterError.phoneFather.openTooltip}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField label=\"Điện thoại\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                    variant=\"outlined\" id='patientPhoneFather'\r\n                    onChange={(e) => onChangePhoneFather(e, e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneFather')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.weight.title}</h6>} open={dataPatientsRegisterError.weight.openTooltip} PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Cân nặng bé\" variant=\"outlined\" id='patientWeight' error={true ? dataPatientsRegisterError.weight.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(kg)</InputAdornment>}}\r\n                    onChange={(e) => onChangeWeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.height.title}</h6>} open={dataPatientsRegisterError.height.openTooltip} placement='left' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Chiều cao bé\" variant=\"outlined\" id='patientHeight' error={true ? dataPatientsRegisterError.height.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.headCircumference.title}</h6>} open={dataPatientsRegisterError.headCircumference.openTooltip} placement='top-start' PopperProps={{sx: { zIndex: 2 } }}\r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [70, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              >\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Vòng đầu bé\" variant=\"outlined\" id='patientHeadCircumference' error={true ? dataPatientsRegisterError.headCircumference.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.medicalType.title}</h6>} open={dataPatientsRegisterError.medicalType.openTooltip} placement='bottom' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30.5%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientMedicalType' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.medicalType.value}\r\n                    options={listMedicalType} \r\n                    getOptionLabel={(option) => option.medicalTypeName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.medicalTypeName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectMedicalType(e, value)}\r\n                    open={autocompleteValue.medicalType.openOption}\r\n                    onFocus={() => handleFocus('MedicalType')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'MedicalType')}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Loại hình khám\" \r\n                        inputRef={(input) => input && focusField === 'medicalType' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.medicalType.isError === true : false} \r\n                        sx={{\r\n                          '& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } ,\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.Mui-disabled.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'},\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'}\r\n                        }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.reason.title}</h6>} open={dataPatientsRegisterError.reason.openTooltip} >\r\n                <div style={{width: '100%' }}>\r\n                  <TextField fullWidth label=\"Lý do khám\" multiline rows={3} variant=\"outlined\" id='patientReason' error={true ? dataPatientsRegisterError.reason.isError === true : false}\r\n                    sx={{'&.MuiTextField-root' : {marginTop: '20px'}}} \r\n                    onChange={(e) => onChangeReason(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <FormControlLabel control={<Checkbox checked={autocompleteValue.vaccination}/>} sx={{width: '100%'}}\r\n              label=\"Bệnh nhân có tham gia tiêm ngừa\" onChange={(e) => onChangeVaccination(e.target.checked)}/>  \r\n\r\n            <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n              <Button variant=\"contained\" color=\"primary\" sx={{mr: 1}} onClick={() => handleMedicalRegister()}>Đăng ký (f2)</Button>\r\n              <Button variant=\"contained\" color=\"warning\" onClick={() => handleResetField()}>Làm mới (f4)</Button>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => handleOpenModalOldDisease()}>Bệnh cũ (f8)</Button>\r\n            </Box>\r\n          </Box>         \r\n        </Box>\r\n      </Container>\r\n\r\n      <ExaminingSession \r\n        openModalExaminingSession={openModalExaminingSession} setOpenModalExaminingSession={setOpenModalExaminingSession} \r\n        handleResetField={handleResetField} setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        isContinueSelectedExaminingSession={isContinueSelectedExaminingSession} setIsContinueSelectedExaminingSession={setIsContinueSelectedExaminingSession}\r\n        dataPatientsRegister={dataPatientsRegister} \r\n      />\r\n\r\n      <OldDisease \r\n        openModalOldDisease={openModalOldDisease} setOpenModalOldDisease={setOpenModalOldDisease}\r\n        dataPatientsRegister={dataPatientsRegister} setDataPatientsRegister={setDataPatientsRegister}\r\n      />\r\n\r\n      {/* <OldDiseaseForRegister\r\n        openOldDiseaseRegister={openOldDiseaseRegister} setOpenOldDiseaseRegister={setOpenOldDiseaseRegister}\r\n        setDataPatientsRegister={setDataPatientsRegister}\r\n        listOldDiseaseRegister={listOldDiseaseRegister} setListOldDiseaseRegister={setListOldDiseaseRegister}\r\n      /> */}\r\n\r\n      <AlertProcessing\r\n        openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookMedical","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//modal\r\nimport SelectedDoctorExamining from '../ManageSelectedDoctorExamining/SelectedDoctorExamining';\r\n//components\r\nimport ListPatientsRegister from './ListPatientsRegister';\r\nimport BookMedical from './BookMedical';\r\n//api\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nfunction MainMedicalRegister() {\r\n\r\n  const { user, loading } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [component1Loading, setComponent1Loading] = useState(true);\r\n\r\n  const currentDoctorExaminingDefault = {userFullName: '', userIdDoctor: ''};\r\n\r\n  const [completeMedicalRegister, setCompleteMedicalRegister] = useState(false);\r\n  const [dataPantientAppointmentsToday, setDataPantientAppointmentsToday] = useState();\r\n\r\n  const [handleResetField, setHandleResetField] = useState(false); //F2\r\n  const [handleOpenModalExaminingSession, setHandleOpenModalExaminingSession] = useState(false); //F4\r\n  const [handleOpenModalOldDisease, setHandleOpenModalOldDisease] = useState(false); //F8\r\n\r\n  const [currentDoctorExamining, setCurrentDoctorExamining] = useState();\r\n  const [openSelectedDoctorExaminingModal, setOpenSelectedDoctorExaminingModal] = useState(false);\r\n\r\n  const handleF2Press = () => {\r\n    setHandleOpenModalExaminingSession(true);\r\n  }\r\n\r\n  const handleF4Press = () => {\r\n    setHandleResetField(true);\r\n  }\r\n\r\n  const handleF8Press = () => {\r\n    setHandleOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetCurrentDoctorExamining = async () => {\r\n    const response = await getCurrentDoctorExamining();\r\n    if(response.status === 200){\r\n      setCurrentDoctorExamining( {userIdDoctor: response.data.userIdDoctor, userFullName: response.data.userFullName} );\r\n    }\r\n    else{\r\n      setCurrentDoctorExamining(currentDoctorExaminingDefault);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(loading === false && user){\r\n      if(user.positionName !== 'Nursing' && user.isLogin){\r\n        history.push('/404');\r\n      }\r\n      else{\r\n        handleGetCurrentDoctorExamining();\r\n      }\r\n    }\r\n  }, [loading, user])\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if(event.keyCode === 113){\r\n        event.preventDefault()\r\n        //nhấn F2 để đăng ký khám\r\n        handleF2Press();\r\n      }\r\n      else if(event.keyCode === 115){\r\n        event.preventDefault()\r\n        //nhấn F4 để reset các input field \r\n        handleF4Press();\r\n      }\r\n      else if(event.keyCode === 119){\r\n        event.preventDefault()\r\n        //nhấn F8 để tìm bệnh cũ\r\n        handleF8Press();\r\n      }\r\n      else{\r\n\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                <Grid container spacing={0} sx={{marginLeft: 0}}>\r\n                  {currentDoctorExamining ? \r\n                    <>\r\n                      <Grid item xs={5}>  \r\n                        <ListPatientsRegister \r\n                          completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                          currentDoctorExamining={currentDoctorExamining}\r\n                          setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n                          component1Loading={component1Loading} setComponent1Loading={setComponent1Loading}\r\n                          dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                        />\r\n                      </Grid>\r\n            \r\n                      <Grid item xs={7} >\r\n                        {component1Loading ?\r\n                          <div style={{marginTop: '20px', marginLeft: '18px'}}>\r\n                            <Skeleton variant='rectangular' width=\"100%\" height={576} />\r\n                          </div>\r\n                          :\r\n                          <BookMedical \r\n                            onF2Press={handleOpenModalExaminingSession} setOnF2Press={setHandleOpenModalExaminingSession}\r\n                            onF4Press={handleResetField} setOnF4Press={setHandleResetField}\r\n                            onF8Press={handleOpenModalOldDisease} setOnF8Press={setHandleOpenModalOldDisease}\r\n                            completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                            currentDoctorExamining={currentDoctorExamining}\r\n                            dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                          />\r\n                        }\r\n                      </Grid>\r\n                    </>\r\n                  :\r\n                      null\r\n                  }\r\n                </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n         <SelectedDoctorExamining \r\n          openSelectedDoctorExaminingModal={openSelectedDoctorExaminingModal} setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n          currentDoctorExamining={currentDoctorExamining} setCurrentDoctorExamining={setCurrentDoctorExamining}\r\n         />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainMedicalRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getAppointmentsNextWeek, updateStateAppointment } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainAppointmentExamining() {\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chưa nhắc hẹn khám'});\r\n    const [listPantientAppointmentChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [listAppointment, setListAppointment] = useState();\r\n    \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n    const [listDataPatientsAppointmentPaginate, setListDataPatientsAppointmentPaginate] = useState([]);\r\n    const [listDataPatientsAppointmentState, setListDataPatientsAppointmentState] = useState();\r\n    const [listDataPatientsAppointmentSort, setListDataPatientsAppointmentSort] = useState([]);\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [pageCount, setPageCount] = useState();\r\n\r\n    const [dataAppointment, setDataAppointment] = useState();\r\n\r\n    const handlePaginate = (data) => {\r\n        const itemsPerPage = 5;\r\n        if(data){\r\n            const calculatedPageCount = Math.ceil(data.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = data.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n        else{\r\n            const calculatedPageCount = Math.ceil(listDataPatientsAppointmentPaginate.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = listDataPatientsAppointmentPaginate.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    }\r\n\r\n    const handleGetAppointmentsNextWeek = async () => {\r\n        setLoading(true);\r\n        const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n        setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n        const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n        const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n        const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n        const updateListPantientAppointmentChipState = [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n        ]\r\n\r\n        setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n        if(activeChip.chipOrder === 0){\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind)\r\n        }\r\n\r\n        else if(activeChip.chipOrder === 1){\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n            handlePaginate(_listAppointmentAcceptReExamining)\r\n        }\r\n\r\n        else{\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n            handlePaginate(_listAppointmentRejectReExamining)\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n            const _listAppointmentNotRemind = listAppointment.filter(item => item.stateAppointment === 0);\r\n\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const _listAppointmentAcceptReExamining = listAppointment.filter(item => item.stateAppointment === 1);\r\n\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining);\r\n            handlePaginate(_listAppointmentAcceptReExamining);\r\n        }\r\n        else{\r\n            const _listAppointmentRejectReExamining = listAppointment.filter(item => item.stateAppointment === 2);\r\n\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining);\r\n            handlePaginate(_listAppointmentRejectReExamining);\r\n        }\r\n    }\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsAppointmentSort(listDataPatientsAppointmentState);\r\n        }else{\r\n          setListDataPatientsAppointmentSort(searchPatients(listDataPatientsAppointmentState, takenValue));\r\n        }\r\n    }\r\n\r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, patientFullName, phoneMother, phoneFather } = patientObj;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || patientFullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const onChangeAppointmentDate = (medicalBookId, appointmentDate) => {\r\n        if(appointmentDate){\r\n            const takenValue = appointmentDate._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const today = new Date();\r\n                const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n                const convertAppointmentDateFindDataAppointment = new Date(findDataAppointment.appointmentDate)\r\n\r\n                if(today <= takenValue || takenValue >= convertAppointmentDateFindDataAppointment){\r\n                    findDataAppointment.appointmentDate = moment(takenValue).format('YYYY-MM-DD');\r\n                }\r\n            }, 100) \r\n        }\r\n        \r\n    }\r\n\r\n    const handleAcceptReExamining = async (medicalBookId) => {\r\n        setLoading(true);\r\n\r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 1);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            \r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleRejectReExamining = async (medicalBookId) => {\r\n        setLoading(true);\r\n        \r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 2);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetAppointmentsNextWeek();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handlePaginate();\r\n    }, [page]);\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1, p: 0 }}>\r\n            <TableContainer component={Paper} sx={{height: loading ? '40rem' : 'auto', position: 'relative'}}>\r\n                {loading ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>        \r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Box>\r\n                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                {listPantientAppointmentChipState.map((pantientAppointmentChipStateItem, pantientAppointmentChipStateIndex) => (\r\n                                    <Badge badgeContent={pantientAppointmentChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientAppointmentChipStateIndex}`}> \r\n                                        <Chip label={pantientAppointmentChipStateItem.chipLabel} color={pantientAppointmentChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                            onClick={() => handleSelectedChip(pantientAppointmentChipStateIndex, pantientAppointmentChipStateItem.chipLabel)} />  \r\n                                    </Badge>\r\n                                ))}\r\n                            </Stack>\r\n\r\n                            <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.15rem', fontWeight: 'bolder'}}>Danh sách {activeChip.chipLabel} trong 6 ngày tới</Typography>\r\n\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', mb: 1}}>\r\n                                <TextField sx={{width: 500, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc Số điện thoại' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                        startAdornment: (\r\n                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                        ),\r\n                                        endAdornment: (\r\n                                            <InputAdornment position='end'>\r\n                                                {searchPatientsQuery !== '' ? \r\n                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsAppointmentSort(listDataPatientsAppointmentState)]}\r\n                                                    /> \r\n                                                : \r\n                                                    null\r\n                                                }\r\n                                            </InputAdornment>  \r\n                                        )\r\n                                    }}>\r\n                                </TextField>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Table stickyHeader >\r\n                            <TableHead>\r\n                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                    <TableCell align='left' >Mã bệnh nhân</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày sinh</TableCell>\r\n                                    {/* <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Giới tính</TableCell> */}\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Địa chỉ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên Cha/Mẹ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Số điện thoại</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám cũ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám tiếp theo</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày hẹn khám</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Nhấn</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {listDataPatientsAppointmentSort.map((dataPantientAppointmentItem, dataPantientAppointmentIndex) => (\r\n                                    <TableRow hover role=\"checkbox\" key={dataPantientAppointmentIndex} sx={{':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1) !important'}}}>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientId}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientFullName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{moment(dataPantientAppointmentItem.dateOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                        {/* <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.gender === true ? 'Nam' : 'Nữ'}</TableCell> */}\r\n                                        <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 240, fontSize: '0.9rem'}}>\r\n                                            <Tooltip title={<Typography variant='subtitle2'>{dataPantientAppointmentItem.fullAddress}</Typography>} >\r\n                                                <span>{dataPantientAppointmentItem.fullAddress}</span>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.fullNameFather !== '' ? dataPantientAppointmentItem.fullNameFather : dataPantientAppointmentItem.fullNameMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.phoneFather !== '' ? dataPantientAppointmentItem.phoneFather : dataPantientAppointmentItem.phoneMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.examNameOld}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.nextExamName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto'}}>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                                <DemoContainer components={['DatePicker']}> \r\n                                                    <Box sx={{width: 145}}>\r\n                                                        <div style={{width: '100%'}}>\r\n                                                            <DatePicker label=\"Ngày khám dự kiến\" disablePast minDate={moment()}\r\n                                                                format='DD/MM/YYYY' value={moment(dataPantientAppointmentItem.appointmentDate)}\r\n                                                                onChange={(value) => onChangeAppointmentDate(dataPantientAppointmentItem.medicalBookId, value)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Box> \r\n                                                </DemoContainer>\r\n                                            </LocalizationProvider>\r\n                                        </TableCell>                                                                                                \r\n                                        <TableCell align={dataPantientAppointmentItem.stateAppointment === 0 ? 'left' : 'center'} sx={{width: 'auto', fontSize: '0.9rem'}}>\r\n                                            {dataPantientAppointmentItem.stateAppointment === 0 ?\r\n                                                <>   \r\n                                                    <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {dataPantientAppointmentItem.stateAppointment === 1 ?\r\n                                                        <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    :\r\n                                                        <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </>\r\n                }\r\n            </TableContainer>\r\n\r\n            {listDataPatientsAppointmentSort.length !== 0 && loading === false ?\r\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n                    <Pagination count={pageCount} page={page} onChange={handlePageChange} color=\"secondary\" />\r\n                </Box>\r\n            :\r\n                null\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainAppointmentExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport _ from 'lodash'\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DialogActions } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//other\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n//css\r\nimport './SCSS/CompleteExamining.scss';\r\n//api\r\nimport { createAddPredecessor, createAddMedicalBook, getAppointmentDate } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CompleteExamining(props) {\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState();\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n\r\n    const typingRef = useRef(null);\r\n    const textareaRef = useRef(null);\r\n    const dateFieldRef = useRef(null);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleCloseModalCompleteExamining = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n          return;\r\n        }\r\n        else{\r\n            setMainDataExaminingForConclusion();\r\n            props.setOpenModalCompleteExamining(false);\r\n        }\r\n      }\r\n\r\n    const onChangeExaminingConclusion = (value) => {\r\n        typingRef.current = setTimeout(() => {\r\n            setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                prevMainDataExaminingForConclusion.conclusion = value;\r\n                return {...prevMainDataExaminingForConclusion}\r\n            })\r\n        }, 300)\r\n    }\r\n\r\n    const onChangeAppointmentDate = (value) => {\r\n        if(value){\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n            typingRef.current = setTimeout(() => {\r\n                const takenValue = value._d;\r\n                const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n                if(formattedDate !== 'Invalid date'){\r\n                    setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                        prevMainDataExaminingForConclusion.appointmentDate = formattedDate;\r\n                        return {...prevMainDataExaminingForConclusion}\r\n                    })\r\n                }\r\n            }, 200)   \r\n        }\r\n    }\r\n\r\n    const handleSetDataCompleteExamining = async () => {\r\n        const editDataExaminingForConclusion = _.clone(props.dataExaminingForConclusion);\r\n        editDataExaminingForConclusion.categories = editDataExaminingForConclusion.categories.map(categoriesItem => ({\r\n            ...categoriesItem,\r\n            // Lọc các categoryContents để giữ lại những phần tử có categoryContentQuestions không rỗng\r\n            categoryContents: categoriesItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length > 0)\r\n\r\n            // Loại bỏ các categories nếu tất cả categoryContents của nó đều bị loại bỏ\r\n        })).filter(categoriesItem => categoriesItem.categoryContents.length > 0);\r\n\r\n        if(editDataExaminingForConclusion.categories.length !== 0){\r\n            setOpenAlertProcessing(true);\r\n            const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n            if(responseAppointmentDate.status === 200){\r\n                editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n                editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n                editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n                if(editDataExaminingForConclusion.isVaccination){\r\n                    editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n                    editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n                    editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n                }\r\n\r\n            }else{\r\n                toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n            }\r\n \r\n            setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n            setOpenAlertProcessing(false);\r\n            if(props.dataExaminingForConclusion.conclusion !== ''){\r\n                const length = textareaRef.current.value.length;\r\n                textareaRef.current.setSelectionRange(length, length);\r\n                textareaRef.current.focus();\r\n            }\r\n            else{\r\n                textareaRef.current.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleAddMedicalBook = async () => {\r\n        if(checkValidate()){\r\n            setOpenAlertProcessing(true);\r\n    \r\n                if(mainDataExaminingForConclusion.categories.some(categoriesItem => categoriesItem.isPredecessor === true)){\r\n                    const categoryPres = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isPredecessor === true)\r\n                    const dataPredecessor = { patientId: mainDataExaminingForConclusion.patientId, categoryPres: categoryPres }\r\n                    await createAddPredecessor(dataPredecessor);\r\n                }\r\n\r\n                const categoriesHealthRecordExamining = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isHealthRecord === true)\r\n                mainDataExaminingForConclusion.categories = categoriesHealthRecordExamining\r\n                const responseAddMedicalBook = await createAddMedicalBook(mainDataExaminingForConclusion);\r\n                if(responseAddMedicalBook.status === 200){\r\n                    toast.success(responseAddMedicalBook.data, {toastId: 'success3'});\r\n                    props.handleCompleteExaminingForPantient();\r\n                    setMainDataExaminingForConclusion();\r\n                    props.setOpenModalCompleteExamining(false);\r\n                }\r\n                else{\r\n                    toast.error(responseAddMedicalBook.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            setOpenAlertProcessing(false);\r\n    }\r\n\r\n    const checkValidate = () => {\r\n        let isValid = true;\r\n        if(mainDataExaminingForConclusion.conclusion === null){\r\n            textareaRef.current.focus();\r\n            toast.error('Bạn chưa nhập kết luận khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === 'Invalid date'){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Ngày tái khám không hợp lệ', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === ''){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Bạn chưa chọn ngày tái khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalCompleteExamining){\r\n            handleSetDataCompleteExamining();\r\n        }\r\n    }, [props.openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalCompleteExamining} onClose={(event, reason) => handleCloseModalCompleteExamining(event, reason)} disableEscapeKeyDown={true}>\r\n                <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Tóm tắt quá trình khám</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalCompleteExamining()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='large'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                    <Box sx={{pl: 6, pr: 6}}>\r\n                        <List sx={{p: 0}}>\r\n                            <Box>\r\n                                {mainDataExaminingForConclusion ? \r\n                                    mainDataExaminingForConclusion.categories.length !== 0 ? \r\n                                        <div className='category-complete-examining'>\r\n                                            {mainDataExaminingForConclusion.categories.map((categoriesItem, categoriesIndex) => (\r\n                                                <div key={`categoriesItem ${categoriesIndex}`}>\r\n                                                    <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                        {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                            <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                                \r\n                                                                {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                    <div key={`questionItem ${questionIndex}`}>\r\n                                                                        <Grid container rowSpacing={0}>\r\n                                                                            {questionIndex === 0 ?\r\n                                                                                <>\r\n                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                    </Grid> \r\n\r\n                                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                        <>\r\n                                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                            </Grid>\r\n                                                                        \r\n                                                                                            <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                        </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    }   \r\n                                                                                </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n                                                                \r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                                classes={{ root: classes.root }}\r\n                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                            />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={5.5} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                :   \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={8} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                }                                                                                                                                                                          \r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    :\r\n                                        <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không có nội dung nào được khám.</Typography>\r\n                                :\r\n                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không có nội dung nào được khám.</Typography>\r\n                                }\r\n                            </Box>\r\n                        </List>\r\n                    </Box>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{borderTop: '1px solid black'}}>\r\n                    {mainDataExaminingForConclusion ? \r\n                        mainDataExaminingForConclusion.categories.length !== 0 ?\r\n                            <div style={{width: '100%', padding: '8px 50px 8px 50px'}}>\r\n                                <TextareaAutosize key={`pantientId ${mainDataExaminingForConclusion.patientId}`} placeholder='Kết luận của bác sĩ' style={{width: '100%', padding: '15px', fontSize: '17px'}} onChange={(e) => onChangeExaminingConclusion(e.target.value)} ref={textareaRef} defaultValue={mainDataExaminingForConclusion.conclusion} /> \r\n                            \r\n                                    {mainDataExaminingForConclusion.isVaccination ? \r\n                                        <>\r\n                                            <Box sx={{mb: 0.4}}>\r\n                                                {mainDataExaminingForConclusion.vaccination === '' || mainDataExaminingForConclusion.vaccination === null?\r\n                                                    null\r\n                                                    :\r\n                                                    <>\r\n                                                        <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.vaccination}`}</Typography>\r\n                                                    </>\r\n                                                }\r\n\r\n                                                {mainDataExaminingForConclusion.nextVaccination === '' || mainDataExaminingForConclusion.nextVaccination === null?\r\n                                                    null\r\n                                                    :\r\n                                                    <>\r\n                                                        <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.nextVaccination}`}</Typography>\r\n                                                    </>\r\n                                                }\r\n\r\n                                                {mainDataExaminingForConclusion.reminder === '' ||  mainDataExaminingForConclusion.reminder === null?\r\n                                                    null\r\n                                                    :\r\n                                                    <>\r\n                                                        <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.reminder}`}</Typography>\r\n                                                    </>\r\n                                                }\r\n                                            </Box>\r\n                                            \r\n                                        </>\r\n                                        :\r\n                                        null\r\n                                    }\r\n\r\n                                    {mainDataExaminingForConclusion.appointmentDate ? \r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', mb: 2}}>\r\n                                            <Typography variant='h6' sx={{mt: 'auto', mb: 'auto', mr: 2}}>Kỳ khám tiếp theo: <span style={{fontWeight: 'bolder', color: '#ff1744'}}>{mainDataExaminingForConclusion.nextExamName}</span></Typography>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                                <DemoContainer components={['DatePicker']}>  \r\n                                                    <DatePicker label=\"Ngày khám dự kiến\" disablePast\r\n                                                        format='DD/MM/YYYY' defaultValue={moment(mainDataExaminingForConclusion.appointmentDate)}\r\n                                                        onChange={(value) => onChangeAppointmentDate(value)}\r\n                                                        slotProps={{ \r\n                                                            textField: { inputRef: dateFieldRef, }\r\n                                                        }}\r\n                                                    />\r\n                                                </DemoContainer>\r\n                                            </LocalizationProvider>\r\n                                        </Box>\r\n                                    </>\r\n                                    :\r\n                                        null\r\n                                    }\r\n                        \r\n                                <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                    <Stack spacing={1} direction=\"row\">\r\n                                        <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' onClick={() => handleAddMedicalBook()}\r\n                                            >Lưu</Button>\r\n                                        <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' color={'error'}\r\n                                            onClick={() => handleCloseModalCompleteExamining()}>Đóng</Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </div>   \r\n                        :\r\n                            null\r\n                    :\r\n                        null                \r\n                    }             \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//scss\r\nimport './SCSS/PreviewLastExamining.scss'; \r\n//api\r\nimport { getMedicalBook } from '../../Service/MedicalService';\r\n//moment\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi'; \r\nmoment.locale('vi');\r\n\r\nfunction PreviewLastExamining(props) {\r\n    const previewDataExaminingDefault = {\r\n        categoryPres: [],\r\n        healthRecords: { examinationName: '', timeUpdateState: '', conclusion: '', medicakBook: [] },\r\n        nutritionals: [],\r\n        vaccinationBook: [] \r\n    }\r\n\r\n    const [previewDataExamining, setPreviewDataExamining] = useState(previewDataExaminingDefault);\r\n    // const [fullDataPredecessor, setFullDataPredecessor] = useState();\r\n    // const [fullDataHealthRecord, setFullDataHealthRecord] = useState();\r\n    \r\n    const [loadingMedicalBook, setLoadingMedicalBook] = useState(false);\r\n\r\n    const [openCollapsePredecessorItem, setOpenCollapsePredecessorItem] = useState([]);\r\n    const [openCollapseMedicakBookItem, setOpenCollapseMedicakBookItem] = useState([]);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpenPredecessorItem = (predecessorIndex) => {\r\n        setOpenCollapsePredecessorItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[predecessorIndex] = !newOpen[predecessorIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleOpenMedicakBookItem = (medicakBookIndex) => {\r\n        setOpenCollapseMedicakBookItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[medicakBookIndex] = !newOpen[medicakBookIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    // const handeOnChangePagePredecessor = (e, page, indexPredecessor) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].categoryContents = fullDataPredecessor[indexPredecessor].categoryContents[page - 1];\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    // const handeOnChangePageHealthRecords = (e, page, indexMedicakbook) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].categoryContents = fullDataHealthRecord[indexMedicakbook].categoryContents[page - 1];\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    const handleEditPrevDataExamining = async () => {\r\n        setLoadingMedicalBook(true);\r\n        const responseMedicalBook = await getMedicalBook(props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0].medicalRegisterId);\r\n        if(props.prevDataExamining.newPredecessor){\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n             \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: [],\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n\r\n        else{\r\n            if(props.prevDataExamining.categoryPres.length > 1){\r\n                props.prevDataExamining.categoryPres = props.prevDataExamining.categoryPres.sort((a, b) => a.categoryOrder - b.categoryOrder);\r\n            }\r\n\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n            \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: props.prevDataExamining.categoryPres,\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n        setLoadingMedicalBook(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.prevDataExamining){\r\n            handleEditPrevDataExamining();\r\n        }\r\n    }, [props.prevDataExamining])\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{height: '100%', position: 'relative'}}>\r\n                {loadingMedicalBook ? \r\n                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                        <CircularProgress />\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh gần nhất, hãy chờ một chút...</Typography>\r\n                    </Box>\r\n                :\r\n                    <>\r\n                        <div className='preview-last-examining-contents' >\r\n\r\n                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem'}}>\r\n                                Thông tin tóm tắt <span style={{color: 'red'}}>{previewDataExamining.healthRecords.examinationName}</span>\r\n                            </Typography>\r\n\r\n                            <List sx={{p: 0}}>\r\n                                {previewDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                    <div key={`predecessorItem ${predecessorIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenPredecessorItem(predecessorIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapsePredecessorItem[predecessorIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapsePredecessorItem[predecessorIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {predecessorItem.categoryContents.map((predecessorItemCategoryContentsItem, predecessorItemCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`predecessorItemCategoryContentsIndex ${predecessorItemCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: predecessorItemCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{predecessorItemCategoryContentsItem.categoryContentTitle}</Typography>\r\n                                                    \r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {predecessorItemCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{predecessorItemCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={6.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                                    \r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={6.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))} \r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                {previewDataExamining.healthRecords.medicakBook.map((medicakBookItems, medicakBookIndex) => (\r\n                                    <div key={`medicakBookItems ${medicakBookIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenMedicakBookItem(medicakBookIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseMedicakBookItem[medicakBookIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={medicakBookItems.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapseMedicakBookItem[medicakBookIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {medicakBookItems.categoryContents.map((medicakBookCategoryContentsItem, medicakBookCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`medicakBookCategoryContentsIndex ${medicakBookCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: medicakBookCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{medicakBookCategoryContentsItem.categoryContentTitle}</Typography>\r\n\r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {medicakBookCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{medicakBookCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={5.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))}\r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}             \r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n                            </List>\r\n\r\n                            <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận: ${previewDataExamining.healthRecords.conclusion}`}</Typography>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='time-examining' style={{marginLeft: '16px', marginTop: '4px', width: '99%'}}>\r\n                            <Typography variant='subtitle1' sx={{color: '#009688', fontWeight: 'bolder', fontSize: '1.08rem'}}>{`${previewDataExamining.healthRecords.doctorFullName}, ${moment(previewDataExamining.healthRecords.timeUpdateState).format('LLLL')}`}</Typography>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Box>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default PreviewLastExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//lodash\r\nimport _, { constant } from \"lodash\";\r\n//modal\r\nimport CompleteExamining from '../ManageCompleteExamining/CompleteExamining';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//components\r\nimport PreviewLastExamining from './PreviewLastExamining';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { GiWeightScale } from \"react-icons/gi\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport { TbRulerMeasure } from \"react-icons/tb\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport BeenhereIcon from '@mui/icons-material/Beenhere';\r\nimport VaccinesIcon from '@mui/icons-material/Vaccines';\r\n//moment\r\nimport moment from 'moment';\r\n//scss\r\nimport './SCSS/DoctorExamining.scss';\r\n//api\r\nimport { \r\n    createAddPredecessor,\r\n    getMedicalDetailPatient,\r\n    getRegistersByDateNow, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook,\r\n    updateMedicalState\r\n} from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainDoctorExamining() {\r\n    const dataPantientsReadyExaminingDefault = {\r\n        stt: '',\r\n        id: '',\r\n        patientsId: '',\r\n        patientsName: '',\r\n        patientsDOB: '',\r\n        patientsMonthsOld: '',\r\n        patientsGender: '',\r\n        patientsHeight: '',\r\n        patientsWeight: '',\r\n        patientsHeadCircumference: '',\r\n        patientsPhone: '',\r\n        patientsAddress: ''\r\n    }\r\n\r\n    const { user, loading, alertVisible, confirmAlert, resetAlert, isLogOutClick } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isFormDirty, setIsFormDirty] = useState(false);\r\n\r\n    //state thông tin bệnh nhân ban đầu \r\n    const [dataPantientsReadyExamining, setDataPantientsReadyExamining] = useState(dataPantientsReadyExaminingDefault);\r\n\r\n    //state các category gồm tiêu đề nội dung khám và câu hỏi khám ban đầu\r\n    const [mainDataExamining, setMainDataExamining] = useState([]);\r\n\r\n    //state lưu tạm data các kỳ khám \r\n    const [prevDataExamining, setPrevDataExamining] = useState();\r\n\r\n    //state đóng mở cây thư mục khám của sổ khám bệnh\r\n    const [openCollapseHealthRecords, setOpenCollapseHealthRecords] = useState(false);\r\n\r\n    //state đóng mở chi tiết nội dung của sổ khám bệnh\r\n    const [openCollapseHealthRecordsItem, setOpenCollapseHealthRecordsItem] = useState([]);\r\n\r\n    //state chọn danh mục khám ban đầu\r\n    const [categorySelectedExamining, setCategorySelectedExamining] = useState({});\r\n\r\n    //state chọn danh mục bao gồm nội dung bên trong ban đầu\r\n    const [contentCategorySelectedExamining, setContentCategorySelectedExamining] = useState([]);\r\n\r\n    //state lưu tạm nội dung chi tiết của sổ khám bệnh\r\n    const [healthRecordsContents, setHealthRecordsContents] = useState([]);\r\n    const [currentHealthRecordExamining, setCurrentHealthRecordExamining] = useState();\r\n\r\n    //tiền căn show ở thông tin bệnh nhân\r\n    const [previewPredecessor, setPreviewPredecessor] = useState();\r\n\r\n    //state các câu hỏi được bác sĩ khám tích hoặc gõ vào\r\n    const [dataExaminingForConclusion , setDataExaminingForConclusion ] = useState({});\r\n\r\n    //state lưu tạm các data tiền căn của getUpdatePredecessor (bao gồm những data tiền căn đã chọn và chưa chọn)\r\n    const [oldDataPredecessor, setOldDataPredecessor] = useState();\r\n\r\n    //dùng khi tái khám hoặc mở khám lại cho bệnh nhân có tiền căn đã đụng\r\n    const [newDataPredecessor, setNewDataPredecessor] = useState();\r\n\r\n    //state lưu data tiền căn cũ (những data tiền căn đã chọn)  \r\n    const [prevDataPredecessor, setPrevDataPredecessor] = useState();\r\n\r\n    //state quản lý modal kết thúc khám\r\n    const [openModalCompleteExamining, setOpenModalCompleteExamining] = useState(false);\r\n\r\n    const [loadingPrevDataExamining, setLoadingPrevDataExamining] = useState(false);\r\n    const [loadingPatient, setLoadingPatient] = useState(true);\r\n    const [loadingInfoPatient, setLoadingInfoPatient] = useState(true);\r\n    const [loadingCategoryExamining, setLoadingCategoryExamining] = useState(false);\r\n    const [loadingContentsExamining, setLoadingContentsExamining] = useState(false);\r\n\r\n    const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n  \r\n    const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n    const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n    const [listPantientChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n            { chipLabel: 'BN đã khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n          const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n            setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n            setListDataPatientsRegisterState(listPantientRegisterDone);\r\n        }\r\n    };\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n        }else{\r\n          setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n        }\r\n      }\r\n    \r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const handleCompleteExaminingForPantient = () => {\r\n        toast.success(`Đã kết thúc khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setCurrentHealthRecordExamining();\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        setPreviewPredecessor();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleCancelExamining = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingCategoryExamining(true);\r\n        setLoadingContentsExamining(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, [dataPantientsReadyExamining.editExamining === true ? 2 : 0 || dataPantientsReadyExamining.backRegister === true ? 3 : 0]);\r\n        if(response.status === 200){\r\n            toast.success(`Đã hủy khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success2'});    \r\n            setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n            setMainDataExamining([]);\r\n            setOpenCollapseHealthRecords(false);\r\n            setOpenCollapseHealthRecordsItem([]);\r\n            setCategorySelectedExamining({});\r\n            setContentCategorySelectedExamining([]);\r\n            setHealthRecordsContents([]);\r\n            setCurrentHealthRecordExamining();\r\n            setDataExaminingForConclusion({});\r\n            setPrevDataPredecessor();\r\n            setCurrentHealthRecordExamining();\r\n            setOldDataPredecessor();\r\n            setPreviewPredecessor();\r\n            handleGetRegistersByDateNow();\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    const handleStartExaminingButtonClick = () => {\r\n        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n            handleBeginExaminingForPantient();\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 1){\r\n            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n            handleBeginEditExaminingForPantient();\r\n        }\r\n    }\r\n\r\n    const handleCompleteExaminingButtonClick = () => {\r\n        setOpenAlertProcessingBackdrop(true)\r\n        if(dataPantientsReadyExamining.status === 1){\r\n            setTimeout(() => {\r\n            setOpenAlertProcessingBackdrop(false)\r\n                setOpenModalCompleteExamining(true);\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    //hàm này dùng khi user đang khám mà bị ngáo lỡ nhấn f5\r\n    const handleReloadUIWhenExamining = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        const reDataPantientsReadyExamining = JSON.parse(sessionStorage.dataPantientsReadyExamining);\r\n        const reMainDataExamining = JSON.parse(sessionStorage.mainDataExamining);\r\n        const reDataExaminingForConclusion = JSON.parse(sessionStorage.dataExaminingForConclusion);\r\n        \r\n        setDataPantientsReadyExamining(_.cloneDeep(reDataPantientsReadyExamining));\r\n        setMainDataExamining(_.cloneDeep(reMainDataExamining));\r\n        setDataExaminingForConclusion(_.cloneDeep(reDataExaminingForConclusion));\r\n\r\n        if(sessionStorage.currentHealthRecordExamining){\r\n            const reCurrentHealthRecordExamining = JSON.parse(sessionStorage.currentHealthRecordExamining);\r\n            setCurrentHealthRecordExamining(_.cloneDeep(reCurrentHealthRecordExamining));\r\n        }\r\n\r\n        if(sessionStorage.prevDataPredecessor){\r\n            const rePrevDataPredecessor = JSON.parse(sessionStorage.prevDataPredecessor);\r\n            setPrevDataPredecessor(_.cloneDeep(rePrevDataPredecessor));\r\n        }\r\n\r\n        if(sessionStorage.oldDataPredecessor){\r\n            const reOldDataPredecessor = JSON.parse(sessionStorage.oldDataPredecessor);\r\n            setOldDataPredecessor(_.cloneDeep(reOldDataPredecessor));\r\n        }\r\n        \r\n        setNewDataPredecessor({\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            categoryPres: []\r\n        })\r\n        \r\n        sessionStorage.clear();\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //lấy danh sách đăng ký khám trong ngày\r\n    const handleGetRegistersByDateNow = async () => {\r\n        const response = await getRegistersByDateNow();\r\n        if(response !== 400){\r\n            if(response.list.length !== 0){\r\n                setListDataPatientsRegister(response.list);\r\n                if(activeChip.chipOrder === 0 || dataPantientsReadyExamining.editExamining === true){\r\n                    const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n                    setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                    setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n                    const updatedList = listPantientChipState.map((item, index) => ({\r\n                        ...item,\r\n                        chipContent: response.listCountState[index]\r\n                    }));\r\n                    setListPantientChipState(updatedList);\r\n                    if(sessionStorage.dataPantientsReadyExamining){\r\n                        handleReloadUIWhenExamining();\r\n                    }\r\n                }\r\n                else if(activeChip.chipOrder === 1){\r\n                    const listPantientRegisterDone = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n                    setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n                    setListDataPatientsRegisterState(listPantientRegisterDone);\r\n                    const updatedList = listPantientChipState.map((item, index) => ({\r\n                        ...item,\r\n                        chipContent: response.listCountState[index]\r\n                    }));\r\n                    setListPantientChipState(updatedList);\r\n                }\r\n            }\r\n        }\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n    }\r\n\r\n    const handleAppyPantientData = async (dataPantientItem) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingPrevDataExamining(true);\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            setPreviewPredecessor();\r\n        }\r\n        await handleGetMedicalDetailPatient(dataPantientItem.id);\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.stt = dataPantientItem.order;\r\n        _dataPantientsReadyExamining.id = dataPantientItem.id;\r\n        _dataPantientsReadyExamining.status = 0;\r\n        _dataPantientsReadyExamining.patientsId = dataPantientItem.patient.patientId;\r\n        _dataPantientsReadyExamining.patientsName = dataPantientItem.patient.fullName;\r\n        _dataPantientsReadyExamining.patientsDOB = dataPantientItem.patient.dayOfBirth;\r\n        _dataPantientsReadyExamining.patientsMonthsOld = dataPantientItem.patient.monthsOfAge;\r\n        _dataPantientsReadyExamining.patientsGender = dataPantientItem.patient.gender;\r\n        _dataPantientsReadyExamining.patientsHeight = dataPantientItem.height;\r\n        _dataPantientsReadyExamining.patientsWeight = dataPantientItem.weight;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsPhone = dataPantientItem.patient.phoneMother ? dataPantientItem.patient.phoneMother : dataPantientItem.patient.phoneFather;\r\n        _dataPantientsReadyExamining.patientsAddress = dataPantientItem.patient.fullAddress;\r\n        _dataPantientsReadyExamining.vaccination = dataPantientItem.vaccination === true ? true : false;\r\n        _dataPantientsReadyExamining.editExamining = dataPantientItem.state === 2 ? true : false;\r\n        _dataPantientsReadyExamining.backRegister = dataPantientItem.state === 3 ? true : false;\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n        setLoadingInfoPatient(false);\r\n        setLoadingPrevDataExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //nhấn chọn bệnh nhân để load vào ô thông tin bn\r\n    const handleSelectPantientExamining = async (dataPantientItem) => {\r\n        if(dataPantientItem.state === 0 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName || dataPantientItem.state === 3 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId === '' || dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 0){\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n            else{\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n        }\r\n        \r\n        else if(dataPantientItem.state === 2 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 1){\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n            else{\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    //bắt đầu khám bệnh cho bệnh nhân\r\n    const handleBeginExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            if(prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                    //backup prevDataPredecessor để khi cần dùng\r\n                    setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n                }\r\n\r\n                await handleGetRegistersByDateNow();\r\n                await handleSetMainDataExamining();\r\n                toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n            }\r\n            else{\r\n                await handleGetCategoryReExamining();\r\n                await handleGetRegistersByDateNow();\r\n            }\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error(response.data, {toastId: 'error1'});\r\n        }\r\n        setLoadingPatient(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu khám cho bệnh nhân khám mới\r\n    const handleSetMainDataExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        prevDataExamining.healthRecords.forEach((healthRecordsItem) => {\r\n            if(healthRecordsItem.medicalBookId === null){\r\n                healthRecordsItem.state = 1\r\n            }\r\n        })\r\n        \r\n        //tái khám và có tiền căn đã đụng\r\n        if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === false){\r\n            const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //tái khám và có tiền căn chưa đụng\r\n        else if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === true){\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n\r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //khám mới hoàn toàn\r\n        else{\r\n            const editDataCategoryPresForConclusion = prevDataExamining.categoryPres.map((predecessorItem) => {\r\n                const mainCategoryContentsExamining = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentOrder: categoryContentsItem.categoryContentOrder,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n    \r\n                const mainCategoryExamining = {\r\n                    categoryName: predecessorItem.categoryName,\r\n                    isPredecessor: true,\r\n                    categoryOrder: predecessorItem.categoryOrder,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n    \r\n                return mainCategoryExamining\r\n            })\r\n    \r\n            const editDataHealthRecordsForConclusion = prevDataExamining.healthRecords.find((healthRecordsItem) => healthRecordsItem.patientId === dataPantientsReadyExamining.patientsId)\r\n    \r\n            setDataExaminingForConclusion({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n                conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n                categories: editDataCategoryPresForConclusion,\r\n            });\r\n    \r\n            prevDataExamining.categoryPres.forEach((categoryPresItem, categoryPresIndex) => {\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.map((categoryContentsItem) => {\r\n                    return {\r\n                        ...categoryContentsItem,\r\n                        categoryPresOrder: categoryPresIndex\r\n                    }\r\n                })\r\n                return {\r\n                    ...categoryPresItem,\r\n                }\r\n            })\r\n            \r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //bắt đầu sửa dữ liệu khám bệnh\r\n    const handleBeginEditExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            await handleGetCategoryReExamining();\r\n            await handleGetRegistersByDateNow();\r\n            setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n        }\r\n    }\r\n\r\n    //lấy dữ liệu cây thư mục khám lại\r\n    const handleGetCategoryReExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        const responseGetUpdateMedicalBook = await getUpdateMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n\r\n        if(responseGetUpdateMedicalBook.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n\r\n            if(prevDataExamining.newPredecessor === false){\r\n                setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                //backup prevDataPredecessor để khi cần dùng\r\n                setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n            }\r\n            \r\n            await handleSetMainDataReExamining(responseGetUpdateMedicalBook.data);\r\n            toast.success(`Đang mở khám lại cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        }\r\n        else if(responseGetUpdateMedicalBook.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu cây thư mục khám của chức năng mở khám lại\r\n    const handleSetMainDataReExamining = async (responseGetUpdateMedicalBookData) => {\r\n        prevDataExamining.healthRecords[0].state = 1\r\n        prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBookData.categories\r\n\r\n        const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n            categoryName: category.categoryName,\r\n            isHealthRecord: true,\r\n            categoryContents: category.categoryContents.map(content => ({\r\n              ...content,\r\n              categoryContentQuestions: []\r\n            })) \r\n        }))\r\n\r\n        //demo truớc data kết luận\r\n        const demoDataExaminingForConclusion = {\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            isVaccination: prevDataExamining.vaccination,\r\n            medicalRegisterId: dataPantientsReadyExamining.id !== prevDataExamining.healthRecords[0].medicalRegisterId ? dataPantientsReadyExamining.id : prevDataExamining.healthRecords[0].medicalRegisterId,\r\n            conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n            categories: updateHealthRecordsCategoriesForConclusion\r\n        }\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        //sửa categories của conclusion phần sổ khám bệnh\r\n        let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.healthRecords[0].categories);\r\n\r\n        updateCategoriesForConclusion = updateCategoriesForConclusion.map(category => {\r\n            category.categoryContents = category.categoryContents.map(content => {\r\n                const questions = content.categoryContentQuestions;\r\n    \r\n                // Check if all questions have both categoryContentAnswer and categoryContentNote as null\r\n                const allNull = questions.every(q => q.categoryContentAnswer === null && q.categoryContentNote === null);\r\n                    \r\n                if (allNull) {\r\n                  // Set categoryContentQuestions to an empty array\r\n                  content.categoryContentQuestions = [];                    \r\n                } else {\r\n                  // Filter out questions with both categoryContentAnswer and categoryContentNote as null\r\n                  content.categoryContentQuestions = questions.filter(q => q.categoryContentAnswer !== null || q.categoryContentNote !== null);\r\n                }\r\n                    \r\n                return content;\r\n            });\r\n                  \r\n            category.isHealthRecord = true\r\n            return category;\r\n        })\r\n\r\n        demoDataExaminingForConclusion.categories = updateCategoriesForConclusion\r\n\r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        //tiền căn đợt trước đã đụng (newPredecessor = false)\r\n        if(responseGetUpdatePredecessor.status === 200)\r\n        {   \r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        \r\n        //tiền căn đợt trước chưa đụng (newPredecessor = true) \r\n        else{\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n        \r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n    }\r\n\r\n    //sửa dữ liệu tiền căn cho mở khám lại hoặc tái khám\r\n    const handleEditDataPredecessor = async (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        \r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        const findUpdatePredecessor = responseGetUpdatePredecessor.data.find(responseGetUpdatePredecessorItem => responseGetUpdatePredecessorItem.categoryOrder === categoryOrder);\r\n\r\n        mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n            if(categoryPresItem.categoryOrder === findUpdatePredecessor.categoryOrder){\r\n                categoryPresItem.categoryContents = findUpdatePredecessor.categoryContents\r\n                categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                    categoryContentsItem.isLock = false\r\n                })\r\n                categoryPresItem.isLock = false\r\n            }\r\n        })\r\n\r\n        const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n        \r\n        if(!newDataPredecessor.categoryPres.some(categoryPresItem => categoryPresItem.categoryName === categoryName)){\r\n            newDataPredecessor.categoryPres = prevDataPredecessor\r\n        }\r\n\r\n        handleSelectCategoryClick(selectCategoryReExamining);\r\n\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //huỷ không sửa dữ liệu tiền căn nữa\r\n    const handleCancelEditDataPredecessor = (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        setTimeout(() => {\r\n            const findPrevDataPredecessorByCategoryName = oldDataPredecessor.find(prevDataPredecessorItem => prevDataPredecessorItem.categoryOrder === categoryOrder);\r\n\r\n            if(findPrevDataPredecessorByCategoryName){\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        categoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                        categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                            categoryContentsItem.isLock = true\r\n                        })\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                newDataPredecessor.categoryPres.forEach((newDataPredecessorCategoryPresItem) => {\r\n                    if(newDataPredecessorCategoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        newDataPredecessorCategoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === categoryOrder){\r\n                        categoryPresItem.categoryContents = [];\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                const _newDataPredecessor = {...newDataPredecessor};\r\n                const removeCategoryPredecessor = _newDataPredecessor.categoryPres.filter(categoryPresItem => categoryPresItem.categoryOrder !== categoryOrder);\r\n                newDataPredecessor.categoryPres = removeCategoryPredecessor\r\n            }\r\n\r\n            setPrevDataPredecessor(_.cloneDeep(oldDataPredecessor));\r\n\r\n            const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n            handleSelectCategoryClick(selectCategoryReExamining)\r\n   \r\n            setOpenAlertProcessingBackdrop(false);\r\n        }, 300)       \r\n    }\r\n\r\n    //tạo data tiền căn để lưu lại khi tái khám hoặc mở khám lại\r\n    //câu trả lời dạng check chọn true false\r\n    const handleAnswerCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n    }\r\n\r\n    //câu trả lời dạng check chọn sửa lại note\r\n    const handleNoteCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n        const isEditNote = true;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], takenValue, isEditNote)\r\n        }, 300)\r\n    }\r\n\r\n    //câu trả lời dạng giá trị, sửa lại note\r\n    const handleNoteValueQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsValuePredecessorForReExamOrBackExam(\r\n                categoryContentsIndex,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, \r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], \r\n                takenValue\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const createSelectedQuestionsValuePredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue) => {\r\n        const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n        if(findNewDataPredecessorCategoryOrder){\r\n            // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n            const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n            if(findNewDataPredecessorCategoryContents){\r\n                // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue !== '');\r\n                const questionIndexRemove = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue === '');\r\n\r\n                if(questionIndex !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value khác rỗng => gán note cũ bằng note mới\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n                }\r\n\r\n                else if(questionIndexRemove !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value bằng rỗng => bỏ note đó\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexRemove, 1);\r\n                }\r\n\r\n                else{\r\n                    //nếu không tìm thấy, đẩy note mới vào\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                }\r\n            }\r\n\r\n            else{\r\n                // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                const newDataPredecessorCategoryContents = {\r\n                    categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                    categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                    categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                    categoryContentQuestions: [categoryContentQuestion],\r\n                    categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                    categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                }\r\n                findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n            }\r\n        }\r\n\r\n        else{\r\n            // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n            const newDataPredecessorCategoryContents = {\r\n                categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                categoryContentQuestions: [categoryContentQuestion],\r\n                categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n            }\r\n\r\n            const newDataPredecessorCategoryPres = {\r\n                categoryOrder: categorySelectedExamining.categoryOrder,\r\n                categoryName: categorySelectedExamining.categoryName,\r\n                newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                categoryContents: [newDataPredecessorCategoryContents]\r\n            }\r\n\r\n            newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n        }         \r\n    }\r\n\r\n    const createSelectedQuestionsPredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue, isEditNote) => {\r\n        if(isEditNote){\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){       \r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng rỗng\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n         \r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                        else{\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndex, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else{\r\n            //câu hỏi là dạng check câu trả lời là true\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote !== '');\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n                        }\r\n                        else{\r\n                            // Nếu tìm thấy categoryContentOrder, thêm câu hỏi mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }       \r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents)\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check câu trả lời là false\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndexNoteDontExit = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote === null);\r\n                        if(questionIndexNoteDontExit !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexNoteDontExit, 1);\r\n                        }\r\n                        else{\r\n                            const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n    }\r\n\r\n    //lưu dữ liệu tiền căn khi sửa xong\r\n    const handleEditDataPredecessorForSaving = (categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setTimeout(() => {\r\n            const findNewDataPredecessor = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPres => newDataPredecessorCategoryPres.categoryOrder === categoryOrder)\r\n\r\n            const findOldDataPredecessorCategoryOrder = oldDataPredecessor.find(oldDataPredecessorItem => oldDataPredecessorItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n\r\n            if(findOldDataPredecessorCategoryOrder){\r\n                // Nếu tìm thấy categoryOrder, duyệt qua categoryContents của findNewDataPredecessor\r\n                findNewDataPredecessor.categoryContents.forEach(findNewDataPredecessorCategoryContentsItem => {\r\n\r\n                    let content = findOldDataPredecessorCategoryOrder.categoryContents.find(findOldDataPredecessorCategoryContentsItem => findOldDataPredecessorCategoryContentsItem.categoryContentOrder === findNewDataPredecessorCategoryContentsItem.categoryContentOrder);\r\n\r\n                    if(content){\r\n                        // Loại bỏ các categoryContentQuestions trong content nếu không tồn tại trong findNewDataPredecessorCategoryContentsItem\r\n                        content.categoryContentQuestions = content.categoryContentQuestions.filter(q =>\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.some(newQ => newQ.categoryContentQuestionOrder === q.categoryContentQuestionOrder)\r\n                        );\r\n\r\n                        // Nếu tìm thấy categoryContentOrder, duyệt qua categoryContentQuestions\r\n                        if(findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.length !== 0){\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.forEach(findNewDataPredecessorQuestionItem => {\r\n                                if(findNewDataPredecessorQuestionItem.categoryContentAnswer === null && findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'check'){\r\n                                    // Nếu categoryContentAnswer là false và categoryContentNote là null, loại bỏ question đó\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else if(findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'string'){\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else{\r\n                                    const questionIndex = content.categoryContentQuestions.findIndex(q => q.categoryContentQuestionOrder === findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n\r\n                                    if (questionIndex !== -1) {\r\n                                        // Thay thế question nếu trùng khớp\r\n                                        content.categoryContentQuestions[questionIndex] = findNewDataPredecessorQuestionItem;\r\n                                    }\r\n\r\n                                    else {\r\n                                        // Thêm question mới nếu không trùng khớp\r\n                                        content.categoryContentQuestions.push(findNewDataPredecessorQuestionItem);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        }else{\r\n                            findOldDataPredecessorCategoryOrder.categoryContents = findOldDataPredecessorCategoryOrder.categoryContents.filter(contentCategoryContentsItem => contentCategoryContentsItem.categoryContentOrder !== findNewDataPredecessorCategoryContentsItem.categoryContentOrder)\r\n                        }\r\n                        \r\n                    }else{\r\n                        findOldDataPredecessorCategoryOrder.categoryContents.push(findNewDataPredecessorCategoryContentsItem);\r\n                    }\r\n\r\n                })\r\n            }else{\r\n                // Thêm toàn bộ object2 nếu không tìm thấy findNewDataPredecessor\r\n                oldDataPredecessor.push(findNewDataPredecessor)\r\n            }\r\n\r\n            oldDataPredecessor.forEach((oldDataPredecessorItem) => {\r\n                oldDataPredecessorItem.categoryContents = oldDataPredecessorItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length !== 0)\r\n            }) \r\n\r\n            const removeOldDataPredecessorCategoryPres = oldDataPredecessor.findIndex(item => item.categoryContents.length === 0);\r\n            if(removeOldDataPredecessorCategoryPres !== -1){\r\n                oldDataPredecessor.splice(removeOldDataPredecessorCategoryPres, 1);\r\n            }\r\n\r\n            const saveNewDataPredecessor = {\r\n                patientId: newDataPredecessor.patientId,\r\n                categoryPres: oldDataPredecessor\r\n            }\r\n\r\n            handleSaveNewDataPredecessor(saveNewDataPredecessor, findNewDataPredecessor)            \r\n        }, 500)\r\n    }\r\n\r\n    const handleSaveNewDataPredecessor = async (saveNewDataPredecessor, findNewDataPredecessor) => {\r\n        const responseCreateAddPredecessor = await createAddPredecessor(saveNewDataPredecessor);\r\n        if(responseCreateAddPredecessor.status === 200){\r\n\r\n            const _mainDataExamining = {...mainDataExamining};\r\n\r\n            _mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                if(categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder){\r\n                    categoryPresItem.categoryContents = findNewDataPredecessor.categoryContents\r\n                    categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                        categoryContentsItem.isLock = true\r\n                    })\r\n                    if(findNewDataPredecessor.categoryContents.length === 0){\r\n                        categoryPresItem.newCategoryPre = true\r\n                    }else{\r\n                        categoryPresItem.newCategoryPre = false\r\n                    }\r\n                    categoryPresItem.isLock = true\r\n                }\r\n\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.filter(item => item.categoryContentQuestions.length !== 0);\r\n            })\r\n\r\n            setMainDataExamining(_mainDataExamining);\r\n\r\n            const selectCategoryReExamining = _mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n            \r\n            toast.success('Đã cập nhật lại tiền căn', {toastId: 'handleSaveNewDataPredecessorSuccess'});\r\n            \r\n            handleSelectCategoryClick(selectCategoryReExamining);\r\n        }\r\n        else{\r\n            toast.error(responseCreateAddPredecessor.data, {toastId: 'handleSaveNewDataPredecessorError'});\r\n        }\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //tìm danh mục khám gồm tiền căn, sổ sức khỏe, dinh dưỡng...\r\n    const handleGetMedicalDetailPatient = async (id) => {\r\n        const responseDataExamining = await getMedicalDetailPatient(id);\r\n        setPrevDataExamining(responseDataExamining);\r\n\r\n        if(responseDataExamining.newPredecessor === false){\r\n            const previewDataPredecessor = responseDataExamining.categoryPres.filter(item => item.newCategoryPre === false).flatMap(item => item.categoryContents).flatMap(content => content.categoryContentQuestions).filter(question => question.categoryContentAnswer === true || question.categoryContentNote !== null)\r\n            setPreviewPredecessor(previewDataPredecessor);     \r\n        }\r\n    }\r\n\r\n    //chọn mục lục để khám\r\n    const handleSelectCategoryClick = async (categoryIncludeCotent) => {\r\n        if(openCollapseHealthRecords === true){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }\r\n\r\n        if(contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length !== 0){\r\n            setContentCategorySelectedExamining([]);\r\n        }\r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                ...categoryIncludeCotent,\r\n                //contentQuantity: categoryIncludeCotent.categoryContents.length\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining([]);\r\n    }\r\n\r\n    //chọn cây thư mục khám sổ sức khỏe\r\n    const handleSelectHealthRecords = (healthRecords) => {\r\n        if(openCollapseHealthRecords === false){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }        \r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                categoryName: 'Sổ sức khỏe',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(\r\n            {\r\n                healthRecordsContentsType: 'tree',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n    }\r\n\r\n    //chọn chỉ định một sổ khám bệnh (tìm chi tiết một sổ khám bệnh)\r\n    const handleSelectHealthRecordsItem = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingContentsExamining(true);\r\n\r\n        //dùng cho tái khám (có tiền căn đã đụng), mở khám lại\r\n        if(currentHealthRecordExamining){\r\n            if(healthRecordsContents.healthRecordsName !== examinationName){\r\n                if(healthRecordsState === 2){\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n                else if(healthRecordsState === 1 && dataPantientsReadyExamining.editExamining){\r\n                    setHealthRecordsContents({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    })\r\n\r\n                    setCurrentHealthRecordExamining({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    });\r\n                }\r\n                else{\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n            }\r\n        }\r\n        //dùng cho tái khám (tiền căn chưa đụng), khám mới hoàn toàn\r\n        else{\r\n            await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n        }\r\n\r\n        setLoadingContentsExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const findHealthRecord = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        const responseMedicalBook = await getMedicalBook(medicalRegisterId);\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        });\r\n\r\n        if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && mainDataExamining.healthRecords[0].medicalBookId === null){\r\n            const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n                \r\n                const mainCategoryExamining = {\r\n                    categoryName: categoriesItem.categoryName,\r\n                    isHealthRecord: true,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n\r\n                return mainCategoryExamining\r\n            })\r\n\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    //chọn loại mục khám của một sổ khám bệnh\r\n    const handleOpenHealthRecordsItem = (categoryPatientsIndex) => {\r\n        setOpenCollapseHealthRecordsItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryPatientsIndex] = !newOpen[categoryPatientsIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleAnswerCheckQuestion = (categoryContentsIndex, questionIndex, answer) => {\r\n        //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng check\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else{\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }   \r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const handleNoteCheckQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            )\r\n        }, 1000)\r\n    }\r\n\r\n    const handleAnswerValueQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const handleAnswerCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else if(answer === true){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else{\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n    }\r\n    \r\n    //trả lời câu hỏi của mục sổ khám bệnh\r\n    const handleNoteCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            );\r\n        }, 1000)\r\n    }\r\n\r\n    const createSelectedQuestionsExaminingForConclusion = (categoryName, isPredecessor, categoryContentQuestion, questionOrder, categoryContentTitle, isEditNote) => {\r\n        if(categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            if(isEditNote){\r\n                if(categoryContentQuestion.categoryContentNote !== ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n\r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n\r\n                else if(categoryContentQuestion.categoryContentNote === ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentAnswer === null || categoryContentQuestionsItem.categoryContentAnswer === false){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n            }\r\n            else{\r\n                //question dạng check nhưng answer là true\r\n                if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n    \r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n    \r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n    \r\n                //question dạng check nhưng answer là false\r\n                else if(categoryContentQuestion.categoryContentAnswer === false && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentNote === null || categoryContentQuestionsItem.categoryContentNote === ''){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion)\r\n                }\r\n            }\r\n        }\r\n\r\n        else{\r\n            //question dạng giá trị nhưng khác rỗng\r\n            if(categoryContentQuestion.categoryContentNote !== '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                // Duyệt qua từng categoriesItem trong categories\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                    // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                    const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                        question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                    );\r\n                    \r\n                                    if (existingQuestion) {\r\n                                        // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                        existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                    } else {\r\n                                        // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                        categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                    }\r\n\r\n                                } else {\r\n                                // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                    categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                }\r\n                            }\r\n                        });        \r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n            //question dạng giá trị nhưng là rỗng\r\n            else if(categoryContentQuestion.categoryContentNote === '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n        }\r\n\r\n        if(isPredecessor === true){\r\n            createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n        }\r\n            \r\n    }\r\n\r\n    const createPreviewDataPredecessor = (categoryContentQuestion, isEditNote) => {\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            let _previewPredecessor = [...previewPredecessor];\r\n\r\n            const findQuestion = _previewPredecessor.find(item => item.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n            if(findQuestion){\r\n                if(findQuestion.categoryContentQuestionType === 'string'){\r\n                    if(categoryContentQuestion.categoryContentNote === ''){\r\n                        _previewPredecessor = previewPredecessor.filter(item => item.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName);\r\n                    }\r\n                    else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                        const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                        if(existingQuestion){\r\n                            existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                        }\r\n                        else{\r\n                            _previewPredecessor.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                }\r\n                else if(findQuestion.categoryContentQuestionType === 'check'){\r\n                    if(isEditNote){\r\n                        if(categoryContentQuestion.categoryContentNote === ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName && question.categoryContentAnswer === true);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                if(categoryContentQuestion.categoryContentAnswer === null || categoryContentQuestion.categoryContentAnswer === false){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    else{\r\n                        if(categoryContentQuestion.categoryContentAnswer === false || categoryContentQuestion.categoryContentAnswer === null){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                if(existingQuestion.categoryContentNote === '' || existingQuestion.categoryContentNote === null){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                                else if(existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                    existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                }               \r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentAnswer === true){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion || existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                            }\r\n                            else{\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }        \r\n                    }\r\n                }\r\n            }\r\n\r\n            else{\r\n                _previewPredecessor.push(categoryContentQuestion);\r\n            }\r\n            setPreviewPredecessor(_previewPredecessor)\r\n        }\r\n\r\n        else{\r\n            setPreviewPredecessor([categoryContentQuestion])\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if(dataPantientsReadyExamining.status === 1 && alertVisible){\r\n                const userConfirmed = window.confirm(`Bạn đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, có chắc là muốn đăng xuất không?`);\r\n                if(userConfirmed){\r\n                    sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                    sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                    sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n\r\n                    if(currentHealthRecordExamining){\r\n                        sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                    }\r\n\r\n                    if(prevDataPredecessor){\r\n                        sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                    }\r\n\r\n                    if(oldDataPredecessor){\r\n                        sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                    }\r\n                    confirmAlert();\r\n                }\r\n                else{\r\n                    resetAlert();\r\n                }\r\n        }\r\n\r\n        else if(dataPantientsReadyExamining.status){\r\n            setIsFormDirty(true)\r\n\r\n            const handleBeforeUnload = (e) => {\r\n                const confirmationMessage = 'Bạn có chắc chắn muốn rời khỏi trang này?';\r\n                e.returnValue = confirmationMessage; // Hiển thị thông báo cảnh báo\r\n                return confirmationMessage;\r\n            };\r\n\r\n            const unblock = history.block((location, action) => {\r\n                if (isFormDirty) {\r\n                    const confirmLeave = window.confirm(\r\n                        'Bạn có chắc chắn muốn rời khỏi trang này? Những thay đổi sẽ không được lưu....'\r\n                    );\r\n                    if (confirmLeave) {\r\n                        sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                        sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                        sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                        if(currentHealthRecordExamining){\r\n                            sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                        }\r\n    \r\n                        if(prevDataPredecessor){\r\n                            sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                        }\r\n    \r\n                        if(oldDataPredecessor){\r\n                            sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                        }\r\n\r\n                        unblock(); // Hủy chặn để điều hướng\r\n                        history.push(location.pathname); // Điều hướng đến trang mới\r\n                        \r\n                    } else {\r\n                        return false; // Ngăn điều hướng\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n    \r\n            const handleUnload = () => {                \r\n                sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                if(currentHealthRecordExamining){\r\n                    sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                }\r\n    \r\n                if(prevDataPredecessor){\r\n                    sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                }\r\n    \r\n                if(oldDataPredecessor){\r\n                    sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                }\r\n            };\r\n            \r\n            window.addEventListener('beforeunload', handleBeforeUnload);\r\n            window.addEventListener('unload', handleUnload);\r\n            \r\n            return () => {\r\n                window.removeEventListener('beforeunload', handleBeforeUnload);\r\n                unblock();\r\n                window.removeEventListener('unload', handleUnload);                \r\n            };\r\n        }\r\n\r\n        else if(alertVisible){\r\n            confirmAlert();\r\n        }\r\n    }, [dataPantientsReadyExamining, mainDataExamining, currentHealthRecordExamining, dataExaminingForConclusion, alertVisible, confirmAlert, resetAlert, isLogOutClick, history, isFormDirty])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user){\r\n            if(user.positionName !== 'Doctor' && user.isLogin){\r\n                history.push('/404');\r\n            }\r\n            else{\r\n                if(user.isCurrentDoctorExamining === true){\r\n                    handleGetRegistersByDateNow();\r\n                }\r\n                else if(user.isCurrentDoctorExamining === false){\r\n                    toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error10'});\r\n                }\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(event.keyCode === 112){\r\n                event.preventDefault();\r\n            }\r\n\r\n            if(dataPantientsReadyExamining.patientsId !== '' && openAlertProcessingBackdrop === false && openModalCompleteExamining === false && event.keyCode !== 116){\r\n                if(event.keyCode === 112 && dataPantientsReadyExamining.status === 1){\r\n                    event.preventDefault();\r\n                    handleCancelExamining();\r\n                }\r\n\r\n                else if(event.keyCode === 113 && prevDataExamining){\r\n                    if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n                        handleBeginExaminingForPantient();\r\n                    }\r\n                    else if(dataPantientsReadyExamining.status === 1){\r\n                        alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n                    }\r\n                    else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n                        handleBeginEditExaminingForPantient();\r\n                    }\r\n                }\r\n\r\n                else if(event.keyCode === 115){\r\n                setOpenAlertProcessingBackdrop(true)\r\n                    if(dataPantientsReadyExamining.status === 1){\r\n                        setTimeout(() => {\r\n                            setOpenAlertProcessingBackdrop(false)\r\n                            setOpenModalCompleteExamining(true);\r\n                        }, 1000)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n\r\n    }, [dataPantientsReadyExamining, openModalCompleteExamining, openAlertProcessingBackdrop, openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n                <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                    <Grid container spacing={2} sx={{pl: 0.6, pr: 0.6}}>\r\n\r\n                        <Grid item xs={5}>\r\n                            {/* <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{`${moment().format('dddd')}, ${moment().format('LL')}`}</Typography> */}\r\n                            <TableContainer component={Paper} sx={{ height: '330px', boxShadow: 5, borderRadius: '10px' }}>\r\n                                {loadingPatient ?\r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                                            <CircularProgress />\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                                        </Box>        \r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Box>\r\n                                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                                                    <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                                                        <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                                        onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                                                    </Badge>\r\n                                                ))}\r\n                                            </Stack>\r\n                                            <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                                            <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                                                <TextField sx={{mb: 0.6, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                                        startAdornment: (\r\n                                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                                        ),\r\n                                                        endAdornment: (\r\n                                                            <InputAdornment position='end'>\r\n                                                                {searchPatientsQuery !== '' ? \r\n                                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                                                                    /> \r\n                                                                : \r\n                                                                    null\r\n                                                                }\r\n                                                            </InputAdornment>  \r\n                                                        )\r\n                                                    }}>\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Box>\r\n                                \r\n                                        <Table stickyHeader >\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listDataPatientsRegisterSort.map((dataPantientItem, dataPantientIndex) => (\r\n                                                    <TableRow hover role=\"checkbox\" key={dataPantientItem.order}\r\n                                                        sx={{ cursor: 'pointer', backgroundColor: dataPantientItem.state === 1 ? '#26c6da' : '#fff', \r\n                                                        ':hover': {backgroundColor: dataPantientItem.state === 1 ? '#00bcd4 !important' : 'rgba(0, 0, 0, 0.1) !important'} }} \r\n                                                        onClick={() => handleSelectPantientExamining(dataPantientItem)}\r\n                                                    >\r\n                                                        <TableCell align='left' sx={{width: '20px'}}>{dataPantientItem.order}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '150px'}}>{dataPantientItem.patient.patientId}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '240px'}}>{dataPantientItem.patient.fullName}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </>\r\n                                }\r\n                            </TableContainer>\r\n\r\n                            {/* cây thư mục khám */}\r\n                            <Box style={{width: '100%', marginTop: '10px', borderRadius: '10px', border: '2px solid red', height: '300px', overflow: 'auto'}} >\r\n                                {\r\n                                    mainDataExamining.length === 0 && loadingCategoryExamining === false || prevDataExamining === false ?\r\n                                        null\r\n                                    :\r\n                                    <>\r\n                                        {loadingCategoryExamining ?\r\n                                            <Box sx={{backgroundColor: '#e0e0e0', borderRadius: '10px', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu cây thư mục khám, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <>\r\n                                                <div className='category-scrollbar'>\r\n                                                    <List sx={{p: 0, display: 'inline-grid'}}>\r\n                                                        {mainDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                                            <Box sx={{display: 'inline-flex'}} key={`category ${predecessorIndex}`}>\r\n                                                                <ListItemButton\r\n                                                                    sx={{\r\n                                                                    width: 'fitContent', pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'},\r\n                                                                    backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffd54f' : ''}} \r\n                                                                    onClick={() => handleSelectCategoryClick(predecessorItem)}\r\n                                                                >\r\n                                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                        <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </Box>\r\n                                                                </ListItemButton>\r\n\r\n                                                                {predecessorItem.newCategoryPre === true && predecessorItem.newPredecessor === true ? \r\n                                                                    null\r\n                                                                :\r\n                                                                    <>\r\n                                                                        {predecessorItem.newCategoryPre === false  ?\r\n                                                                            <>  \r\n                                                                                <CheckCircleIcon sx={{color: 'green', fontSize: '1.4rem', margin: 'auto'}} titleAccess='đã theo dõi'/>\r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        {mainDataExamining.newPredecessor ? \r\n                                                                            null\r\n                                                                        :\r\n                                                                            predecessorItem.isLock === true ?\r\n                                                                                <>  \r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <EditIcon sx={{color: 'blue', fontSize: '1.6rem'}} titleAccess='Sửa'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>\r\n                                                                            \r\n                                                                            :\r\n                                                                                <>\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessorForSaving(predecessorItem.categoryOrder)}>\r\n                                                                                        <BeenhereIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Lưu'/>\r\n                                                                                    </IconButton>\r\n\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleCancelEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <CancelIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Hủy'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>   \r\n                                                                        }                                  \r\n                                                                    </>\r\n                                                                }\r\n                                                            </Box>\r\n                                                        ))}\r\n\r\n                                                        <ListItemButton \r\n                                                            sx={{pt: '4px', pb: '4px', borderRadius: '8px', backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffd54f' : '',\r\n                                                                ':hover': {backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                            onClick={() => handleSelectHealthRecords(mainDataExamining.healthRecords)}\r\n                                                        >\r\n                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}>\r\n                                                                <SendIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                            </ListItemIcon>\r\n\r\n                                                            <ListItemText primary={'Sổ sức khỏe'} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>                                                    \r\n                                                        </ListItemButton>\r\n\r\n                                                        <Collapse in={openCollapseHealthRecords} timeout=\"auto\" unmountOnExit>\r\n                                                            <div style={{ paddingLeft: '24px' }}>\r\n                                                                {mainDataExamining.healthRecords.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                    <ListItemButton key={`healthRecords ${healthRecordsIndex}`} sx={{pt: '0px', pb: '0px', width: 'auto', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                                        onClick={() => handleSelectHealthRecordsItem(healthRecordsItem.medicalRegisterId, healthRecordsItem.examinationName, healthRecordsItem.state)}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: healthRecordsItem.state === 1 ? 'red' : '#009688'}}}>\r\n                                                                            <FiberManualRecordIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={healthRecordsItem.examinationName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </ListItemButton>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </Collapse>\r\n                                                    </List>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </Box>\r\n                            <div className='instruction' style={{display: 'flex', justifyContent: 'space-between', marginTop: '4.5px'}}>\r\n                                <Button variant=\"contained\" color=\"error\" onClick={() => handleCancelExamining()}>Hủy khám (f1)</Button>\r\n                                <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Bắt đầu khám (f2)</Button>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            {/* thông tin bệnh nhân */}\r\n                            <Box sx={{boxShadow: 4, borderRadius: '20px', border: '2px solid blue', height: '230px', mb: '8px', overflow: 'auto'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', mt: 0.6, mb: 0.6, fontWeight: 'bolder', fontSize: '1.2rem', textAlign: 'center'}}>Thông tin bệnh nhân</Typography>\r\n                                <Box sx={{pl: 2.8, pr: 2.8, mt: 1}}>\r\n                                    {loadingInfoPatient ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', mt: 4}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải thông tin bệnh nhân, hãy chờ một chút...</Typography>\r\n                                        </Box>\r\n                                    :\r\n                                        <>\r\n                                            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Mã BN: ${dataPantientsReadyExamining.patientsId || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Họ tên: ${dataPantientsReadyExamining.patientsName || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    {dataPantientsReadyExamining.patientsGender === true ? <MaleIcon sx={{color: 'coral', fontSize: '27px'}}/> : <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/>}\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Giới tính: ${dataPantientsReadyExamining.patientsGender !== '' ? dataPantientsReadyExamining.patientsGender === true ? 'Nam' : 'Nữ' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: {dataPantientsReadyExamining.patientsDOB ? moment(dataPantientsReadyExamining.patientsDOB).format(\"DD/MM/YYYY\") : ''}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Tháng tuổi: ${dataPantientsReadyExamining.patientsMonthsOld || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Sdt: ${dataPantientsReadyExamining.patientsPhone || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiBodyHeight style={{color: 'tomato', fontSize: '1.42rem', marginLeft: '2px'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 0.8}}>\r\n                                                        {`Chiều cao: ${dataPantientsReadyExamining.patientsHeight ? dataPantientsReadyExamining.patientsHeight + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Cân nặng: ${dataPantientsReadyExamining.patientsWeight ? dataPantientsReadyExamining.patientsWeight + ' kg' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <TbRulerMeasure style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Vòng đầu: ${dataPantientsReadyExamining.patientsHeadCircumference ? dataPantientsReadyExamining.patientsHeadCircumference + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={12} sx={{display: 'inline-flex'}}>\r\n                                                    <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Địa chỉ: ${dataPantientsReadyExamining.patientsAddress || ''}`}</Typography>\r\n                                                </Grid> \r\n\r\n                                                {previewPredecessor ? \r\n                                                    <>\r\n                                                        <Grid item xs={12} >\r\n                                                            <Box sx={{display: 'flex', flexWrap: 'wrap'}}>\r\n                                                                {previewPredecessor.map((item, index) => (\r\n                                                                    <Typography variant='subtitle1' sx={{ml: 0.5, fontSize: '1.1rem', color: 'mediumblue', fontWeight: 'bolder'}} key={index} >{`${item.categoryContentQuestionName}: ${item.categoryContentAnswer ? 'có' : ''} ${item.categoryContentNote !== null ? `${item.categoryContentNote}` : ''}, `}</Typography>\r\n                                                                ))}\r\n                                                            </Box>\r\n                                                            \r\n                                                        </Grid> \r\n                                                    </>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </Grid>\r\n                                        </>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {/* nội dung khám */}\r\n                            <div className='container-content-examining'>\r\n                                {\r\n                                    loadingPrevDataExamining ? \r\n                                        <>\r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu kỳ khám gần nhất, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    :\r\n                                    prevDataExamining ? \r\n                                        prevDataExamining.healthRecords.length === 1 && prevDataExamining.healthRecords[0].medicalBookId === null ? \r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <Typography variant='h6'>Bệnh nhân không có kỳ khám trước</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <div className='content-examining'><PreviewLastExamining prevDataExamining={prevDataExamining} /></div>\r\n                                    :\r\n                                        null\r\n                                }\r\n                                \r\n                                {categorySelectedExamining.categoryContents ? \r\n                                    <>\r\n                                        <div className='content-examining'>\r\n                                            {loadingContentsExamining ? \r\n                                                <>\r\n                                                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                        <CircularProgress />\r\n                                                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh, hãy chờ một chút...</Typography>\r\n                                                    </Box>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {categorySelectedExamining.newCategoryPre === true && categorySelectedExamining.isLock === true ? \r\n                                                        <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                            <Typography variant='h6'>Bệnh nhân không có tiền căn đang được theo dõi ở mục này</Typography>\r\n                                                        </Box>\r\n                                                    :\r\n                                                        contentCategorySelectedExamining.healthRecordsContentsType !== 'tree' && healthRecordsContents.length === 0 ? \r\n                                                            categorySelectedExamining.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                                <Box key={categoryContentsIndex} sx={categoryContentsItem.categoryContentTitle === null ? {marginTop: '30px'} : {}}>\r\n\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>{categoryContentsItem.categoryContentTitle || ''}</Typography>\r\n                                                                    {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                        <Box key={`categoryContentQuestionName ${questionIndex}`}>\r\n                                                                            <Grid container rowSpacing={0}>\r\n                                                                                {questionIndex === 0 ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                        </Grid>\r\n\r\n                                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                    <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                </Grid>\r\n\r\n                                                                                                <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            : \r\n                                                                                                <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                        }                                                                             \r\n                                                                                    </> \r\n                                                                                    : \r\n                                                                                    null\r\n                                                                                }\r\n                                                                                \r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1.2rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled={categorySelectedExamining.isLock === true ? true : false} \r\n                                                                                            checked={questionItem.categoryContentAnswer === true ? true : false } \r\n                                                                                            classes={{ root: classes.root }} color='error' \r\n                                                                                            sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} \r\n                                                                                            onClick={() => \r\n                                                                                                dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleAnswerCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer) : handleAnswerCheckQuestion(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer)} />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={7} >\r\n                                                                                            <div className='textfield-for-answer'>\r\n                                                                                                <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                        onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleNoteCheckQuestion(categoryContentsIndex, questionIndex, e.target.value)}\r\n                                                                                                        defaultValue={questionItem.categoryContentNote}\r\n                                                                                                    />\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>   \r\n                                                                                    :\r\n                                                                                    <>\r\n                                                                                        {categorySelectedExamining.categoryOrder === 4 ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8} >\r\n                                                                                                    <div className='textfield-for-answer'>\r\n                                                                                                        <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                                onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                                defaultValue={questionItem.categoryContentNote}\r\n                                                                                                            />\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            :\r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8}>\r\n                                                                                                    <div className='textfield-for-answer' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >\r\n                                                                                                        <input type='text' disabled={categorySelectedExamining.isLock === true ? true : false}\r\n                                                                                                            className='value-for-answer' \r\n                                                                                                            onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                            defaultValue={questionItem.categoryContentNote} \r\n                                                                                                        />\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                        }\r\n                                                                                    </>\r\n                                                                                }\r\n                                                                                \r\n                                                                            </Grid>\r\n                                                                        </Box>\r\n                                                                    ))}\r\n                                                                </Box>\r\n                                                            ))\r\n                                                        :\r\n                                                            contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length === 0 ? \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n                                                                    <TableContainer component={Paper}>\r\n                                                                        <Table stickyHeader>\r\n                                                                            <TableHead>\r\n                                                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                                                    <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n                                                                                </TableRow>\r\n                                                                            </TableHead>\r\n                                                                            <TableBody sx={{borderRadius: '0px'}}>\r\n                                                                                {contentCategorySelectedExamining.categoryContents.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                                    <TableRow hover role=\"checkbox\" key={healthRecordsIndex}>\r\n                                                                                        <TableCell align='left' sx={{width: '158px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{healthRecordsItem.examinationName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '144px'}}>{handleRenderExamsStatus(healthRecordsItem.state)}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '108px'}}>{moment(healthRecordsItem.timeRegister).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '115px'}}>{healthRecordsItem.doctorFullName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: 'auto'}}>{healthRecordsItem.conclusion}</TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                ))}\r\n                                                                            </TableBody>\r\n                                                                        </Table>\r\n                                                                    </TableContainer>\r\n                                                                </>\r\n                                                            :\r\n                                                                \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', lineHeight: 1, mt: 1}}>{currentHealthRecordExamining.healthRecordsName}</Typography>\r\n                                                                    <div className='health-record-content'>\r\n                                                                        <List sx={{p: 0}}>\r\n                                                                            {currentHealthRecordExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => (\r\n                                                                                <div key={`categoryPatients ${categoryPatientsIndex}`}>\r\n                                                                                    <ListItemButton     \r\n                                                                                        sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                                                                        onClick={() => handleOpenHealthRecordsItem(categoryPatientsIndex)}\r\n                                                                                    >\r\n                                                                                        <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseHealthRecordsItem[categoryPatientsIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                                                            <ListItemText primary={categoryPatientsItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                                        </Box>\r\n                                                                                    </ListItemButton>\r\n\r\n                                                                                    <Collapse in={openCollapseHealthRecordsItem[categoryPatientsIndex]} timeout=\"auto\" unmountOnExit>\r\n                                                                                        {categoryPatientsItem.categoryContents.map((categoryPatientsContentsItem, categoryPatientsContentsIndex) => (\r\n                                                                                            <div className='header-health-record' key={categoryPatientsContentsIndex} style={{marginTop: '15px', marginBottom: '15px', border: '2px solid #00bcd4', borderRadius: '20px'}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', textAlign: 'center'}}>{categoryPatientsContentsItem.categoryContentTitle}</Typography>\r\n                                                                                                \r\n                                                                                                <div className='content-health-record' style={{padding: '10px'}} >  \r\n                                                                                                    <Grid container rowSpacing={0}>\r\n                                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryPatientsContentsItem.categoryContentName}</Typography>\r\n                                                                                                        </Grid>\r\n\r\n                                                                                                        <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryPatientsContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                        </Grid>\r\n                                                                                                        \r\n                                                                                                        <Grid item xs={5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryPatientsContentsItem.categoryContentText}</Typography>\r\n                                                                                                        </Grid> \r\n\r\n                                                                                                        {categoryPatientsContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                                                            <Box key={`questionItem ${questionIndex} healthRecordsName ${contentCategorySelectedExamining.healthRecordsName}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                                                 </Grid>    \r\n\r\n                                                                                                                {questionItem.categoryContentQuestionType === 'check' ?\r\n                                                                                                                    <>\r\n                                                                                                                        <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                                                            <Checkbox classes={{ root: classes.root }} checked={questionItem.categoryContentAnswer === true ? true : false }\r\n                                                                                                                                disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                                                                onClick={(e) => handleAnswerCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, questionItem.categoryContentAnswer)} \r\n                                                                                                                            />\r\n                                                                                                                        </Grid>\r\n                                                                                                                    \r\n                                                                                                                        <Grid item xs={5} >\r\n                                                                                                                            <div className='note-for-answer'>\r\n                                                                                                                                <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                        disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                        onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                    />\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                                                                                                                        </Grid>\r\n                                                                                                                    </>\r\n                                                                                                                :\r\n                                                                                                                    <>\r\n                                                                                                                        <Grid item xs={8} >\r\n                                                                                                                            <div className='note-for-answer'>\r\n                                                                                                                                <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                        disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                        onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                    />\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                                                                                                                        </Grid>\r\n                                                                                                                    </>\r\n                                                                                                                }\r\n                                                                                                            </Box>\r\n                                                                                                        ))}\r\n                                                                                                    </Grid>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        ))}\r\n                                                                                    </Collapse>\r\n                                                                                </div>\r\n                                                                            ))}\r\n                                                                        </List>\r\n                                                                        \r\n                                                                        {currentHealthRecordExamining.conclusion !== null ?\r\n                                                                            <>\r\n                                                                                <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                                                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận của bác sĩ: ${currentHealthRecordExamining.conclusion}`}</Typography>\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                            :\r\n                                                                            null\r\n                                                                            \r\n                                                                        }\r\n                                                                        \r\n                                                                    </div>\r\n\r\n                                                                </>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n\r\n            <CompleteExamining openModalCompleteExamining={openModalCompleteExamining} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n                handleCompleteExaminingForPantient={handleCompleteExaminingForPantient} dataExaminingForConclusion={dataExaminingForConclusion}\r\n            />\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n            />\r\n            {/* <AlertConfirm openAlertConfirmModal={openAlertConfirmModal.open} onCloseAlertConfirmModal={setOpenAlertConfirmModal} \r\n                titleConfirm={openAlertConfirmModal.title} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDoctorExamining","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getReportPatient = async (dateSelectedReport) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Admin/GetReportPatient?dateStart=${dateSelectedReport.dateStart}&dateEnd=${dateSelectedReport.dateEnd}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getReportPatient\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridToolbarExport, GridToolbarColumnsButton, GridToolbarDensitySelector, GridToolbarFilterButton, GridToolbarContainer, viVN } from '@mui/x-data-grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//icon\r\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\r\n//moment\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\n//api\r\nimport { getReportPatient } from '../../Service/StatisticsService';\r\n\r\nfunction MainDashboard() {\r\n    const [dateSelectedReport, setDateSelectedReport] = useState({dateStart: '', dateEnd: ''})\r\n    const [mainDataDashboard, setMainDataDashboard] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'STT', width: 120, align: 'left', headerAlign: 'left', },\r\n        { field: 'fullName', headerName: 'Họ tên', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'dayExam', headerName: 'Ngày khám', width: 180, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'gender', headerName: 'Giới tính', width: 140, align: 'left', headerAlign: 'left' },\r\n        { field: 'dayOfBirth', headerName: 'Ngày sinh', width: 165, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'examName', headerName: 'Kỳ khám', width: 170, align: 'left', headerAlign: 'left' },\r\n        { field: 'phone', headerName: 'Điện thoại', width: 170, type: 'number', align: 'left', headerAlign: 'left'},\r\n        { field: 'district', headerName: 'Quận/Huyện', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'province', headerName: 'Tỉnh/Thành phố', width: 185, align: 'left', headerAlign: 'left' },\r\n    ];\r\n\r\n    // Hàm xử lý xuất file Excel\r\n    const handleExportExcel = () => {\r\n        // Tạo lại dữ liệu với các tiêu đề cột tùy chỉnh\r\n        const formattedRows = mainDataDashboard.map((row, index) => ({\r\n            'STT': index + 1,\r\n            'Họ tên': row.fullName, \r\n            'Ngày khám': row.dayExam,\r\n            'Giới tính': row.gender,\r\n            'Ngày sinh': row.dayOfBirth,\r\n            'Kỳ khám': row.examName,\r\n            'Điện thoại': row.phone,\r\n            'Quận/Huyện': row.district,\r\n            'Tỉnh/Thành phố': row.province\r\n          }));\r\n\r\n        // Tạo worksheet từ dữ liệu đã định dạng\r\n        const ws = XLSX.utils.json_to_sheet(formattedRows);\r\n\r\n        // Tạo workbook và thêm worksheet vào đó\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n\r\n        // Xuất file Excel\r\n        XLSX.writeFile(wb, `Danh sách bệnh nhân khám bệnh từ ${moment(dateSelectedReport.dateStart).format('DD-MM-YYYY')} đến ${moment(dateSelectedReport.dateEnd).format('DD-MM-YYYY')}.xlsx`);\r\n    };\r\n\r\n    // Custom toolbar bao gồm nút xuất Excel\r\n    const CustomToolbar = ({ handleExportExcel }) => {\r\n        return (\r\n            <GridToolbarContainer >\r\n                {/* Các chức năng của GridToolbar mặc định */}\r\n                <GridToolbarColumnsButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarFilterButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarDensitySelector sx={{fontSize: '16px'}}/>\r\n                <Button variant=\"text\" startIcon={< RiFileExcel2Fill/>} onClick={handleExportExcel} sx={{fontSize: '16px'}}>Xuất Excel</Button>\r\n            </GridToolbarContainer>\r\n        );\r\n    };\r\n\r\n    const onChangeDateStart = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateStart = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const onChangeDateEnd = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateEnd = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const handleGetReportPatient = async () => {\r\n        setLoading(true);\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        const responseGetReportPatient = await getReportPatient(dateSelectedReport);\r\n        const editMainDataDashboard = responseGetReportPatient.map((item) => {\r\n            const dataReportPatient = {\r\n                patientId: item.patientId,\r\n                fullName: item.fullName,\r\n                dayExam: moment(item.dayExam).format('DD/MM/YYYY'),\r\n                gender: item.gender ? 'Nam' : 'Nữ',\r\n                dayOfBirth: moment(item.dayOfBirth).format('DD/MM/YYYY'),\r\n                examName: item.examName,\r\n                phone: item.phone,\r\n                district: item.district,\r\n                province: item.province\r\n            }\r\n            return dataReportPatient\r\n        })\r\n        setMainDataDashboard(editMainDataDashboard);\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(dateSelectedReport.dateStart !== '' && dateSelectedReport.dateEnd !== ''){\r\n            handleGetReportPatient();\r\n        }\r\n    }, [dateSelectedReport])\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1}}>\r\n            <Box sx={{display: 'flex', justifyContent: 'center'}}>\r\n                <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                    <DemoContainer components={['DatePicker']}> \r\n                        <DatePicker label=\"Từ ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateStart(value)}/> \r\n                        <DatePicker label=\"Đến ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateEnd(value)}/>                                   \r\n                    </DemoContainer>\r\n                </LocalizationProvider>\r\n            </Box>\r\n\r\n            <Box sx={{ height: 600, width: '100%', mt: 1.2 }}>\r\n                {loading ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '80%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>  \r\n                    </>\r\n                    :\r\n                        mainDataDashboard.length !== 0 ?\r\n                            <>       \r\n                                <DataGrid \r\n                                    style={{ fontSize: '18px' }}\r\n                                    localeText={viVN.components.MuiDataGrid.defaultProps.localeText}\r\n                                    rows={mainDataDashboard.map((row, index) => ({\r\n                                        ...row,\r\n                                        id: index + 1,\r\n                                    }))}\r\n                                    columns={columns}\r\n                                    pageSizeOptions={[1]}\r\n                                    components={{\r\n                                        Toolbar: CustomToolbar, // Chèn toolbar vào đây\r\n                                      }}\r\n                                      componentsProps={{\r\n                                        toolbar: { handleExportExcel }, // Truyền hàm export vào props của toolbar\r\n                                      }}\r\n                                    disableRowSelectionOnClick\r\n                                    sx={{\r\n                                        '.MuiTablePagination-selectLabel': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                        '.css-levciy-MuiTablePagination-displayedRows': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        :\r\n                           <h5 style={{textAlign: 'center', color: 'blue'}}>Hãy chọn khoảng ngày khám để lấy dữ liệu thống kê</h5>\r\n                }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainDashboard","import { BrowserRouter, Route, Link, Switch, NavLink, HashRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport Header from \"../components/Nav/Header.jsx\";\nimport Page404 from \"../components/ErrorPage/Page404\";\nimport Login from \"../components/LoginAccount/Log-in\";\nimport MainMedicalRegister from \"../components/MedicalRegister/MainMedicalRegister.jsx\";\nimport MainAppointmentExamining from \"../components/MedicalAppointment/MainAppointmentExamining.jsx\";\nimport MainDoctorExamining from \"../components/DoctorExamining/MainDoctorExamining.jsx\";\nimport MainDashboard from \"../components/Dashboard/MainDashboard.jsx\";\n\nconst AppRoutes = (props) => {\n  return (\n    <>\n      <HashRouter>\n        {/* <Header />{\" \"} */}\n        <Switch>\n          <Route exact path=\"/\">home{\" \"}</Route>\n          <Route path=\"/login\"><Login /></Route>\n          <PrivateRoutes path=\"/medicalregister\" component={MainMedicalRegister}></PrivateRoutes>\n          <PrivateRoutes path=\"/doctor-examining\" component={MainDoctorExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/remind-examining\" component={MainAppointmentExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/dashboard\" component={MainDashboard}></PrivateRoutes>\n          <Route path=\"*\"><Page404 />{\" \"}</Route>\n          {/* <PrivateRoutes path=\"/users\" component={Users} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\nexport default AppRoutes;\n","import \"./App.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Nav/Header\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <div className=\"header-container\">\n          <Header />\n        </div>\n\n        <div className=\"app-container\">\n          <AppRoutes />\n        </div>\n      </HashRouter>\n\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}