{"version":3,"sources":["Service/UserService.jsx","components/ManageChangePassword/ChangePassword.jsx","assets/image/logo.png","components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop.jsx","context/UserContext.jsx","Service/SignalService.jsx","components/Nav/Header.jsx","routes/PrivateRoutes.js","components/ErrorPage/Page404.js","components/Home/Home.jsx","components/ManageRegister/Register.jsx","Service/MedicalService.jsx","components/LoginAccount/Log-in.jsx","components/ManageAlertProcessing/AlertProcessing.jsx","Service/PlaceService.jsx","components/ManageInfoPantients/ManageInfoPantients.jsx","components/MedicalRegister/ListPatientsRegister.jsx","components/ManageExaminingSession/ExaminingSession.jsx","components/ManageOldDisease/OldDisease.jsx","components/ManageOldDisease/OldDiseaseForRegister.jsx","components/MedicalRegister/BookMedical.jsx","components/MedicalRegister/MainMedicalRegister.jsx","components/MedicalAppointment/MainAppointmentExamining.jsx","components/ManageCompleteExamining/CompleteExamining.jsx","components/DoctorExamining/PreviewLastExamining.jsx","components/DoctorExamining/MainDoctorExamining.jsx","Service/StatisticsService.jsx","components/Dashboard/MainDashboard.jsx","components/ManageAddUser/AddUser.jsx","components/Dashboard/MainListUser.jsx","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["backendURL","ChangePassword","props","inputPasswordDefault","currentPassword","openCurrentPassword","newPassword","openNewPassword","inputPassword","setInputPassword","useState","loading","setLoading","handleCloseModalChangePassword","event","reason","setIsDialogChangePasswordOpen","setOpenModalChangePassword","setTimeout","handleChangePassword","async","Promise","resolve","handleValidate","isValid","toast","warning","toastId","inputPayloadPassword","password","passwordOld","responseUpdatePassword","token","localStorage","getItem","axios","put","concat","headers","Authorization","then","response","catch","error","updatePassword","status","data","success","_jsx","_Fragment","children","_jsxs","Dialog","maxWidth","fullWidth","open","openModalChangePassword","onClose","disableEscapeKeyDown","DialogTitle","sx","m","p","fontWeight","fontSize","IconButton","onClick","position","right","top","CloseIcon","DialogContent","dividers","display","flexDirection","alignItems","style","justifyContent","CircularProgress","TextField","autoFocus","label","variant","type","width","mb","onChange","e","value","_inputPassword","onChangeNewPassword","target","InputProps","endAdornment","InputAdornment","handleClickShowNewPassword","padding","VisibilityIcon","VisibilityOffIcon","onChangeCurrentPassword","handleClickShowCurrentPassword","Stack","spacing","direction","Button","height","color","margin","AlertProcessingBackdrop","Backdrop","zIndex","theme","drawer","backgroundColor","changeBackground","openAlertProcessingBackdrop","Box","Typography","mt","alertTitle","UserContext","React","createContext","UserProvider","_ref","useHistory","userDefault","isAuthenticated","isLogin","user","setUser","alertVisible","setAlertVisible","isLogOutClick","setIsLogOutClick","onConfirm","setOnConfirm","setOpenAlertProcessingBackdrop","isDialogChangePasswordOpen","isOldDiseaseWithNullCodeWard","setIsOldDiseaseWithNullCodeWard","resetAlert","checkJWTExpire","result","getJWT","decodeJWT","JSON","parse","atob","split","parseJwt","currentDate","Date","exp","getTime","removeItem","sessionStorage","clear","useEffect","getUserLogin","getToken","Provider","loadingContext","loginContext","userContextLogin","logoutContext","triggerAlert","confirmCallback","confirmAlert","connection","startSignalRConnection","signalR","withUrl","accessTokenFactory","transport","WebSockets","ServerSentEvents","LongPolling","withAutomaticReconnect","configureLogging","Information","build","start","on","message","onReceiveMessage","callback","withRouter","useContext","location","useLocation","history","anchorEl","setAnchorEl","anchorElManageMenuIcon","setAnchorElManageMenuIcon","Boolean","openManageMenuIcon","handleCloseManageMenuIcon","actionNursing","key","icon","LocalHospitalIcon","LinkComponent","NavLink","to","LocalPhoneIcon","actionDoctor","MedicationLiquidIcon","actionAdmin","BarChartIcon","SettingsSuggestIcon","userAction","setUserAction","pathname","findIndex","action","handleLogout","positionName","invoke","removeFromGroup","push","AppBar","Toolbar","Link","Avatar","src","Logo","mr","BottomNavigation","showLabels","flexGrow","map","actionItem","BottomNavigationAction","undefined","handleOpenManageMenuIcon","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","handleMenuItemClick","path","handleClick","preventDefault","textTransform","userFullName","exact","PrivateRoutes","length","Route","component","Redirect","Page404","className","Home","Container","ml","CreateAccount","showPassword","setShowPassword","handleCloseModalRegister","setOpenModalRegister","openModalRegister","handleClickShowPassword","Autocomplete","options","id","option","renderInput","params","createConfig","createMedicalBackRegister","post","dataPatientsRegister","createAddPredecessor","dataPredecessor","createNotificationForMedicalRegister","getRegistersByDateNow","config","get","getListMedicalExaminationsGiveRegister","dayOfBirth","getListOldDisease","patientCode","phone","fullName","getVaccinationByPatientId","patientId","getMedicalDetailPatient","getMedicalBook","medicalRegisterId","getUpdatePredecessor","getAppointmentsNextWeek","updateMedicalState","state","updateStateAppointment","dataAppointment","stateAppointment","medicalBookId","appointmentDate","Login","userAccount","setUserAccount","userName","handleLogin","userLogin","tokenDTO","setItem","userId","stringify","handleKeyDown","document","addEventListener","removeEventListener","borderRadius","textAlign","autoComplete","onChangeUserName","prevUserAccount","onChangeUserPassword","onKeyDown","which","code","handlePressEnter","Register","AlertProcessing","openAlertProcessing","getListProvince","getListDistrict","provinceId","getListWard","districtId","getFullAddressByIdWard","codeWard","ManageInfoPantients","dataPatientInfoDefault","examinationId","weight","headCircumference","vaccination","patient","identifier","address","gender","fullNameMother","phoneMother","fullNameFather","phoneFather","dataPatientInfoErrorDefault","title","isError","openTooltip","focus","examiningSession","province","district","ward","listGender","genderOrder","genderName","genderValue","selectedAutoCompleteDefault","openOption","typingRef","useRef","dateFieldRef","dataPatientInfoNotEdit","setDataPatientInfoNotEdit","dataPatientInfo","setDataPatientInfo","dataPatientInfoError","setDataPatientInfoError","selectedAutoComplete","setSelectedAutoComplete","listExaminingSession","setListExaminingSession","listProvince","setListProvince","listDistrict","setListDistrict","list","listWard","setListWard","focusField","setFocusField","setOpenAlertProcessing","tooltipTheme","createTheme","components","MuiTooltip","defaultProps","placement","arrow","componentsProps","tooltip","bgcolor","slotProps","popper","modifiers","name","offset","handleFocus","fieldName","prevSelectedAutoComplete","handleBlur","test","filterOptions","inputValue","lowercasedInput","toLowerCase","filter","lowercasedFullName","initials","word","join","includes","onChangeDOBToGetExaminingSession","responseListMedicalExaminationsGiveRegister","formattedDate","exams","handleCloseModalInfoPantients","prevListDistrict","prevListWard","setSelectedPantientInfo","setOpenModalInfoPantients","handleUpdateMedicalRegister","checkValidate","_dataPatientInfoError","Object","values","every","item","current","_","isEqual","updateMedicalRegister","setCompleteMedicalRegister","setIsEditedInfo","responseListProvince","handleGetListProvince","selectedPantientInfo","setIsContinueUpdateMedicalRegister","editPropsDataPatientInfo","cloneDeep","responseListDistrict","provinceCode","responseListWard","districtCode","selectedGender","find","indexListExamining","indexListProvince","indexListDistrict","indexListWard","wardCode","handleApplyPantientDataToField","openModalInfoPantients","isContinueUpdateMedicalRegister","pt","pb","flexWrap","pl","pr","ThemeProvider","Tooltip","marginTop","inputProps","maxLength","inputRef","input","defaultValue","takenValue","clearInterval","prevDataPatientsRegister","onChangeIdentifier","prevDataPatientInfo","onChangeFullName","getOptionLabel","renderOption","onSelectGender","onFocus","onBlur","disableClearable","popupIcon","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DemoContainer","DatePicker","format","moment","disableFuture","disableOpenPicker","textField","_d","today","yearsDifference","getFullYear","monthsDifference","getMonth","daysDifference","getDate","age","totalMonths","totalDays","isNaN","onChangeDOB","noOptionsText","onSelectExaminingSession","size","onSelectProvine","onSelectDistrict","onSelectWard","onChangeAddress","onChangeFullNameMother","onChangePhoneMother","onChangeFullNameFather","onChangePhoneFather","onChangeHeight","onChangeWeight","onChangeHeadCircumference","FormControlLabel","control","Checkbox","checked","onChangeVaccination","bool","DialogActions","ListPatientsRegister","activeChip","setActiveChip","chipOrder","chipLabel","listPantientChipState","setListPantientChipState","chipContent","listDataPatientsRegister","setListDataPatientsRegister","listDataPatientsAppointmentsToday","setListDataPatientsAppointmentsToday","searchPatientsQuery","setSearchPatientsQuery","listDataPatientsRegisterState","setListDataPatientsRegisterState","listDataPatientsRegisterSort","setListDataPatientsRegisterSort","isEditedInfo","searchPatients","patients","searchTerm","lowerCaseSearchTerm","patientObj","handleGetRegistersByDateNow","responseGetAppointmentsToday","getAppointmentsToday","_listDataPatientsAppointmentsToday","updatedList","patientFullName","dateOfBirth","fullAddress","nextExamId","listPantientRegisterWaiting","patientsRegisterItem","listCountState","listPantientRegisterDone","setComponent1Loading","keyCode","completeMedicalRegister","border","boxShadow","pantientChipStateItem","pantientChipStateIndex","Badge","badgeContent","Chip","handleSelectedChip","chipIndex","CachedIcon","cursor","titleAccess","handleReloadGetRegistersByDateNow","placeholder","handleSearchPantient","startAdornment","SearchIcon","TableContainer","Paper","overflowX","borderBottomLeftRadius","borderBottomRightRadius","Table","stickyHeader","minWidth","TableHead","TableRow","TableCell","align","TableBody","patientsRegisterSortItem","patientsRegisterSortIndex","hover","role","onDoubleClick","responseVaccinationByPatientId","dataPantientOldOldDiseaseRegister","oldDisease","medicalTypeId","userIdDoctor","setDataPantientAppointmentsToday","handleSelectedPantientAppointmentsToday","handleSelectedPantientInfo","order","whiteSpace","overflow","textOverflow","ExaminingSession","isConfirmOpen","setIsConfirmOpen","handleListMedicalExaminationsGiveRegister","getListMedicalExaminationsGiveOldRegister","handleMedicalRegister","isAppointment","oldExams","setIsContinueSelectedExaminingSession","setOpenModalExaminingSession","handleResetField","createMedicalRegister","handleOpenConfirm","openModalExaminingSession","isContinueSelectedExaminingSession","monthsOfAge","Grid","container","rowSpacing","xs","oldExamItem","oldExamIndex","RadioGroup","onChangeRadioSelect","examItem","examIndex","Radio","OldDisease","dataPatientsForSearchOldDiseaseDefault","dataPatientsForSearchOldDiseaseErrorDefault","listFoundOldDisease","setListFoundOldDisease","dataPatientsForSearchOldDisease","setDataPatientsForSearchOldDisease","dataPatientsForSearchOldDiseaseError","setDataPatientsForSearchOldDiseaseError","selectedRowIndex","setSelectedRowIndex","formRef","tableRef","handleEnterPress","_dataPatientsForSearchOldDiseaseError","handleCloseModalOldDisease","setOpenModalOldDisease","handleFindOldDisease","reset","querySelectorAll","forEach","dispatchEvent","Event","bubbles","handleClickFindOldDisease","validate","handleApplyDataPatientOldDisease","foundOldDiseaseItem","oldDiseaseWithNullCodeWard","setDataPatientsRegister","openModalOldDisease","ref","prevDataPatientsForSearchOldDisease","onChangePatientId","date","onChangeDayOfBirth","onChangePhone","tabIndex","prevIndex","Math","min","max","handleTableKeyDown","foundOldDiseaseIndex","selected","OldDiseaseForRegister","handleCloseOldDiseaseRegister","setOpenOldDiseaseRegister","openOldDiseaseRegister","listOldDiseaseRegister","BookMedical","dataPatientsRegisterDefault","autocompleteValueDefault","medicalType","dataPatientsRegisterErrorDefault","listMedicalType","medicalTypeOrder","medicalTypeName","setListOldDiseaseRegister","dataPatientsRegisterError","setDataPatientsRegisterError","autocompleteValue","setAutocompleteValue","firstFocusRef","nextFieldId","nextField","getElementById","select","replaceSpecialCharacters","str","replace","normalizedInput","prevAutocompleteValue","_dataPatientsRegisterError","dataPantientAppointmentsToday","handleMedicalBackRegister","responseCreateMedicalBackRegister","handleOpenModalOldDisease","_autocompleteValue","indexListGender","indexListMedicalType","handleApplyPantientOldDiseaseData","handleApplyPantientAppointmentsTodayData","onF2Press","setOnF2Press","onF4Press","setOnF4Press","onF8Press","setOnF8Press","minHeight","PopperProps","disabled","WebkitTextFillColor","InputLabelProps","shrink","DateField","disablePortal","onSelectMedicalType","paddingLeft","paddingRight","multiline","rows","onChangeReason","MainMedicalRegister","component1Loading","setHandleResetField","handleOpenModalExaminingSession","setHandleOpenModalExaminingSession","setHandleOpenModalOldDisease","marginLeft","Skeleton","MainAppointmentExamining","listPantientAppointmentChipState","listAppointment","setListAppointment","listDataPatientsAppointmentPaginate","setListDataPatientsAppointmentPaginate","listDataPatientsAppointmentState","setListDataPatientsAppointmentState","listDataPatientsAppointmentSort","setListDataPatientsAppointmentSort","loadingComponent","setLoadingComponent","page","setPage","pageCount","setPageCount","setDataAppointment","handlePaginate","calculatedPageCount","ceil","startIndex","newCurrentItems","slice","handleAcceptReExamining","findDataAppointment","responseUpdateStateAppointment","responseGetAppointmentsNextWeek","_listAppointmentNotRemind","_listAppointmentAcceptReExamining","_listAppointmentRejectReExamining","updateListPantientAppointmentChipState","dataAppointmentNotRemind","dataAppointmentAcceptReExamining","dataAppointmentRejectReExamining","handleRejectReExamining","handleGetAppointmentsNextWeek","pantientAppointmentChipStateItem","pantientAppointmentChipStateIndex","dataPantientAppointmentItem","dataPantientAppointmentIndex","examNameOld","nextExamName","disablePast","minDate","onChangeAppointmentDate","convertAppointmentDateFindDataAppointment","CheckIcon","CancelIcon","Pagination","count","handlePageChange","CompleteExamining","mainDataExaminingForConclusion","setMainDataExaminingForConclusion","textareaRef","classes","makeStyles","root","useStyles","handleCloseModalCompleteExamining","setOpenModalCompleteExamining","handleSetDataCompleteExamining","editDataExaminingForConclusion","clone","dataExaminingForConclusion","categories","categoriesItem","categoryContents","categoryContentsItem","categoryContentQuestions","responseAppointmentDate","getAppointmentDate","isVaccination","nextVaccination","reminder","conclusion","setSelectionRange","handleAddMedicalBook","some","isPredecessor","categoryPres","categoriesHealthRecordExamining","isHealthRecord","responseAddMedicalBook","dataMedicalBook","createAddMedicalBook","handleCompleteExaminingForPantient","openModalCompleteExamining","List","categoriesIndex","categoryName","categoryContentsIndex","marginBottom","categoryContentTitle","questionItem","questionIndex","borderRight","categoryContentName","categoryContentQuestionType","CheckBoxIcon","lineHeight","categoryContentCheck","categoryContentText","borderTop","categoryContentQuestionName","categoryContentAnswer","TextareaAutosize","categoryContentNote","onChangeExaminingConclusion","prevMainDataExaminingForConclusion","locale","PreviewLastExamining","previewDataExamining","setPreviewDataExamining","healthRecords","examinationName","timeUpdateState","medicakBook","nutritionals","vaccinationBook","loadingMedicalBook","setLoadingMedicalBook","openCollapsePredecessorItem","setOpenCollapsePredecessorItem","openCollapseMedicakBookItem","setOpenCollapseMedicakBookItem","prevDataExamining","responseMedicalBook","healthRecordsItem","newPredecessor","healthRecordsUpdate","newMedicalBook","medicalBookIdRecently","sort","a","b","categoryOrder","handleEditPrevDataExamining","predecessorItem","predecessorIndex","ListItemButton","prevOpen","newOpen","handleOpenPredecessorItem","ListItemIcon","transform","SendIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","predecessorItemCategoryContentsItem","predecessorItemCategoryContentsIndex","medicakBookItems","medicakBookIndex","handleOpenMedicakBookItem","medicakBookCategoryContentsItem","medicakBookCategoryContentsIndex","doctorFullName","MainDoctorExamining","dataPantientsReadyExaminingDefault","stt","patientsId","patientsName","patientsDOB","patientsMonthsOld","patientsGender","patientsHeight","patientsWeight","patientsHeadCircumference","patientsPhone","patientsAddress","isFormDirty","setIsFormDirty","dataPantientsReadyExamining","setDataPantientsReadyExamining","mainDataExamining","setMainDataExamining","setPrevDataExamining","openCollapseHealthRecords","setOpenCollapseHealthRecords","openCollapseHealthRecordsItem","setOpenCollapseHealthRecordsItem","categorySelectedExamining","setCategorySelectedExamining","contentCategorySelectedExamining","setContentCategorySelectedExamining","healthRecordsContents","setHealthRecordsContents","currentHealthRecordExamining","setCurrentHealthRecordExamining","previewPredecessor","setPreviewPredecessor","oldPreviewPredecessor","setOldPreviewPredecessor","setDataExaminingForConclusion","oldDataPredecessor","setOldDataPredecessor","newDataPredecessor","setNewDataPredecessor","prevDataPredecessor","setPrevDataPredecessor","loadingPrevDataExamining","setLoadingPrevDataExamining","loadingPatient","setLoadingPatient","loadingInfoPatient","setLoadingInfoPatient","loadingCategoryExamining","setLoadingCategoryExamining","loadingContentsExamining","setLoadingContentsExamining","handleCancelExamining","editExamining","backRegister","handleStartExaminingButtonClick","handleBeginExaminingForPantient","alert","handleBeginEditExaminingForPantient","handleCompleteExaminingButtonClick","responseListPantient","findPantientIsExam","indexPantient","findListPantientNotExam","handleAppyPantientData","handleGetMedicalDetailPatient","dataPantientItem","_dataPantientsReadyExamining","isContinueExam","_listDataPatientsRegister","findIndexPatient","handleSetMainDataExamining","handleGetCategoryReExamining","editPrevDataExaminingCategoryPres","responseGetUpdatePredecessorItem","matchingPrevDataExamining","prevDataExaminingCategoryPresItem","isLock","content2","content1","categoryContentOrder","matchingContent1","isNullCategoryPres","responseGetUpdateMedicalBook","updateHealthRecordsCategoriesForConclusion","category","content","demoDataExaminingForConclusion","healthRecordsName","categoryPatients","updateCategoriesForConclusion","editCategoryContents","itemCategoryContents","newCategoriesDemoDataExaminingForConclusion","editDataCategoryPresForConclusion","mainCategoryContentsExamining","editDataHealthRecordsForConclusion","categoryPresItem","categoryPresIndex","categoryPresOrder","getUpdateMedicalBook","handleSetMainDataReExamining","responseGetUpdateMedicalBookData","questions","allNull","q","responseGetUpdatePredecessor","handleNoteValueQuestionPredecessorForReExamOrBackExam","_categorySelectedExamining","createSelectedQuestionsValuePredecessorForReExamOrBackExam","categoryContentQuestion","findNewDataPredecessorCategoryOrder","newDataPredecessorCategoryPresItem","findNewDataPredecessorCategoryContents","newDataPredecessorCategoryContentsItem","newDataPredecessorcategoryContentQuestionsItem","categoryContentQuestionOrder","questionIndexRemove","splice","newDataPredecessorCategoryContents","newDataPredecessorCategoryPres","newCategoryPre","createPreviewDataPredecessor","createSelectedQuestionsPredecessorForReExamOrBackExam","isEditNote","questionIndexNoteDontExit","handleSaveNewDataPredecessor","saveNewDataPredecessor","findNewDataPredecessor","responseCreateAddPredecessor","_mainDataExamining","selectCategoryReExamining","handleSelectCategoryClick","responseDataExamining","previewDataPredecessor","flatMap","question","categoryContentDefauls","healthRecordsContentsType","categoryIncludeCotent","findHealthRecord","healthRecordsState","editDataHealthRecordsItemForConclusion","_dataExaminingForConclusion","dataHealthRecordsItemForConclusionItem","handleAnswerValueQuestion","createSelectedQuestionsExaminingForConclusion","handleNoteCheckQuestionHealthRecords","categoryPatientsIndex","categoryPatientsContentsIndex","_healthRecordsContents","questionOrder","existingQuestion","categoryContentQuestionsItem","_previewPredecessor","findQuestion","handleReceiveMessage","medicalRegisterMessage","window","confirm","handleBeforeUnload","confirmationMessage","returnValue","unblock","block","_dataPatientsRegisterSort","handleUnload","reDataPatientsRegisterSort","dataPatientsRegisterSort","reDataPantientsReadyExamining","reMainDataExamining","reDataExaminingForConclusion","reCurrentHealthRecordExamining","rePrevDataPredecessor","reOldDataPredecessor","handleReloadUIWhenExamining","dataPantientIndex","handleSelectPantientExamining","CheckCircleIcon","edge","findUpdatePredecessor","handleEditDataPredecessor","EditIcon","handleEditDataPredecessorForSaving","findOldDataPredecessorCategoryOrder","oldDataPredecessorItem","findNewDataPredecessorCategoryContentsItem","findOldDataPredecessorCategoryContentsItem","newQ","findNewDataPredecessorQuestionItem","contentCategoryContentsItem","removeOldDataPredecessorCategoryPres","BeenhereIcon","handleCancelEditDataPredecessor","findPrevDataPredecessorByCategoryName","prevDataPredecessorItem","removeCategoryPredecessor","findOldDataPredecessorByCategoryOrder","findPreviewPredecessorNotByCategoryOrder","newPreviewPredecessor","handleSelectHealthRecords","healthRecordsIndex","handleSelectHealthRecordsItem","FiberManualRecordIcon","columnSpacing","sm","md","PinIcon","PersonIcon","MaleIcon","FemaleIcon","CalendarMonthIcon","InfoIcon","PhoneIcon","GiBodyHeight","GiWeightScale","TbRulerMeasure","index","handleAnswerCheckQuestionPredecessorForReExamOrBackExam","answer","handleAnswerCheckQuestion","handleNoteCheckQuestionPredecessorForReExamOrBackExam","handleNoteCheckQuestion","DescriptionIcon","timeRegister","categoryPatientsItem","handleOpenHealthRecordsItem","categoryPatientsContentsItem","handleAnswerCheckQuestionHealthRecords","currentHealthRecordsContent","getListUser","MainDashboard","dateSelectedReport","setDateSelectedReport","dateStart","dateEnd","mainDataDashboard","setMainDataDashboard","loadingDataDashboard","setLoadingDataDashboard","handleGetReportPatient","responseGetReportPatient","getReportPatient","editMainDataDashboard","dayExam","examName","_dateSelectedReport","onChangeDateStart","onChangeDateEnd","DataGrid","localeText","viVN","MuiDataGrid","row","columns","field","headerName","headerAlign","pageSizeOptions","handleExportExcel","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","startIcon","RiFileExcel2Fill","toolbar","formattedRows","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","disableRowSelectionOnClick","AddUser","dataAddUser","setDataAddUser","userPassword","userEmail","userPosition","handleCloseModalAddUser","setOpenModalAddUser","handleAddUser","responseAddUser","addUser","setReloadComponent","openModalAddUser","onChangeUserFullName","prevDataAddUser","onSelectPosition","MainListUser","reloadComponent","loadingListUser","setLoadingListUser","listUser","setListUser","onChangeActiveUser","isActive","updateActiveUser","editMainDataListUser","dataReportUser","userIsActive","renderCell","Switch","handleGetListUser","marginRight","handleOpenModalAddUser","HiUserAdd","AppRoutes","HashRouter","App","Header","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2db9a58b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n//import SignalService from \"./SignalService.jsx\"\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\nconst userLogin = async (userName, password) => {\r\n  return await axios.post(`${backendURL}/api/UserAccount/Login`, { userName, password })\r\n  .then(function (response) {\r\n    //SignalService.startSignalRConnection(response.data.tokenDTO.token)\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n};\r\n\r\nconst addUser = async (dataAddUser) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  return await axios.post(`${backendURL}/api/UserAccount/AddUser`, dataAddUser, { \r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n  },\r\n  })\r\n  .then(function (response) {\r\n    //SignalService.startSignalRConnection(response.data.tokenDTO.token)\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n}\r\n\r\nconst getUserLogin = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetUserLogin`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst getGetListDoctor = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetDoctors`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst updatePassword = async (inputPayloadPassword) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/UserAccount/ChangePassword`, inputPayloadPassword, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateActiveUser = async (userId, isActive) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/UserAccount/EditIsActiveUser?userId=${userId}&isActive=${isActive}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    userLogin, addUser,\r\n    getUserLogin, getGetListDoctor,\r\n    updatePassword, updateActiveUser\r\n}\r\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { toast } from 'react-toastify';\r\n//api\r\nimport { updatePassword } from '../../Service/UserService';\r\n\r\nfunction ChangePassword(props) {\r\n    const inputPasswordDefault = {\r\n        currentPassword: '',\r\n        openCurrentPassword: false,\r\n        newPassword: '',\r\n        openNewPassword: false\r\n    }\r\n\r\n    const [inputPassword, setInputPassword] = useState(inputPasswordDefault);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleCloseModalChangePassword = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            props.setIsDialogChangePasswordOpen(false);\r\n            props.setOpenModalChangePassword(false);\r\n            setTimeout(() => {\r\n                setInputPassword(inputPasswordDefault);\r\n            }, 200)\r\n        }\r\n    }\r\n\r\n    const handleClickShowCurrentPassword = () => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.openCurrentPassword = !inputPassword.openCurrentPassword\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const handleClickShowNewPassword = () => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.openNewPassword = !inputPassword.openNewPassword\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const onChangeCurrentPassword = (value) => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.currentPassword = value\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const onChangeNewPassword = (value) => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.newPassword = value\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const handleValidate = () => {\r\n        let isValid = true;\r\n        if(inputPassword.currentPassword === ''){\r\n            toast.warning('Bạn chưa nhập mật khẩu hiện tại!', {toastId: 'validateCurrentPassword'})\r\n            isValid = false;\r\n        }\r\n        \r\n        if(inputPassword.newPassword === ''){\r\n            toast.warning('Bạn chưa nhập mật khẩu mới!', {toastId: 'validateNewPassword'})\r\n            isValid = false\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    const handleChangePassword = async () => {\r\n        setLoading(true);\r\n        await new Promise(resolve => setTimeout(resolve, 2 * 100));\r\n        if(handleValidate()){\r\n            const inputPayloadPassword = { password: inputPassword.newPassword, passwordOld: inputPassword.currentPassword }\r\n            const responseUpdatePassword = await updatePassword(inputPayloadPassword);\r\n\r\n            if(responseUpdatePassword.status === 400 && responseUpdatePassword.data === 'Tài khoản hoặc mật khẩu không chính xác !'){\r\n                toast.error('Mật khẩu hiện tại không chính xác.', {toastId: 'handleChangePasswordError1'})\r\n            }\r\n            else if(responseUpdatePassword.status === 400){\r\n                toast.error(responseUpdatePassword.data, {toastId: 'handleChangePasswordError2'})\r\n            }\r\n            else if(responseUpdatePassword.status === 200){\r\n                toast.success(responseUpdatePassword.data, {toastId: 'handleChangePasswordSuccess'})\r\n                handleCloseModalChangePassword();\r\n            }\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalChangePassword} onClose={(event, reason) => handleCloseModalChangePassword(event, reason)} disableEscapeKeyDown={true} >\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Đổi mật khẩu</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalChangePassword()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                \r\n                <DialogContent dividers sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                    {loading ? \r\n                        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                            <CircularProgress />\r\n                        </div>\r\n                    :\r\n                        <>\r\n                            <TextField autoFocus={true} label=\"Mật khẩu mới\" variant=\"outlined\" type={inputPassword.openNewPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeNewPassword(e.target.value)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={handleClickShowNewPassword} sx={{padding: '1px'}}> {inputPassword.openNewPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n\r\n                            <TextField label=\"Mật khẩu hiện tại\" variant=\"outlined\" type={inputPassword.openCurrentPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeCurrentPassword(e.target.value)} \r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={handleClickShowCurrentPassword} sx={{padding: '1px'}}> {inputPassword.openCurrentPassword  ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleChangePassword()}>Đổi mật khẩu</Button>\r\n                            </Stack>\r\n                        </>\r\n                    }\r\n\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChangePassword","export default __webpack_public_path__ + \"static/media/logo.e5a4a234.png\";","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessingBackdrop(props) {\r\n    return (\r\n        <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: props.changeBackground ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.6)' }} open={props.openAlertProcessingBackdrop}>\r\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <CircularProgress color='inherit' />\r\n                <Typography sx={{mt: 1.4,}} variant='subtitle1'>{props.alertTitle}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n\r\nexport default AlertProcessingBackdrop\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//modal\r\nimport AlertProcessingBackdrop from '../components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const userDefault = {\r\n        isAuthenticated: false,\r\n        isLogin: false,\r\n        token: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(userDefault);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [isLogOutClick, setIsLogOutClick] = useState(false);\r\n    const [onConfirm, setOnConfirm] = useState(null);\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [isDialogChangePasswordOpen, setIsDialogChangePasswordOpen] = useState(false);\r\n\r\n    const [isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard] = useState(false);\r\n\r\n    const loginContext = (userContextLogin) => {\r\n        setUser({ ...userContextLogin });\r\n        setLoading(false);\r\n    };\r\n\r\n    const triggerAlert = (confirmCallback) => {\r\n        setAlertVisible(true);\r\n        setIsLogOutClick(true);\r\n        setOnConfirm(() => confirmCallback);\r\n    };\r\n\r\n    const confirmAlert = () => {\r\n        if (onConfirm) onConfirm();\r\n        setIsLogOutClick(false);\r\n        resetAlert();\r\n    };\r\n\r\n    const resetAlert = () => {\r\n        setAlertVisible(false);\r\n        setIsLogOutClick(false);\r\n        setOnConfirm(null);\r\n    };\r\n\r\n    const logoutContext = () => {\r\n        setUser({ ...userDefault });\r\n    }\r\n\r\n    const loadingContext = (loading) => {\r\n        setLoading(...loading);\r\n    }\r\n\r\n    // const fetchUser = async () => {\r\n    //     setOpenAlertProcessingBackdrop(true);\r\n    //     const response = await getUserLogin();\r\n    //     setUser({\r\n    //             isAuthenticated: true, \r\n    //             isLogin: true,\r\n    //             userId: response.userId,\r\n    //             userFullName: response.userFullName,\r\n    //             positionName: response.positionName\r\n    //         }) \r\n    //     setLoading(false);\r\n    //     setOpenAlertProcessingBackdrop(false);\r\n    // }\r\n\r\n    const parseJwt = (token) => {\r\n        try {\r\n          return JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n    };\r\n\r\n    const checkJWTExpire = () => {\r\n        let result = false;\r\n        let getJWT = localStorage.getItem('jwt');\r\n        if(getJWT){\r\n            let decodeJWT = parseJwt(getJWT);\r\n            let currentDate = new Date();\r\n            if(decodeJWT.exp * 1000 < currentDate.getTime()) {\r\n                //console.log('Token đã hết hạn hoặc không tồn tại')\r\n                localStorage.removeItem('jwt'); //xóa localStorage\r\n                localStorage.removeItem('userLogin');\r\n                sessionStorage.clear();\r\n                return result \r\n            }\r\n            else{\r\n                //console.log('token còn hạn');\r\n                result = true;\r\n                return result\r\n            }\r\n        }\r\n        else{\r\n            localStorage.removeItem('userLogin');\r\n            return result\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n        const getToken = localStorage.getItem('jwt')\r\n        if(getUserLogin && getToken){\r\n            const result = checkJWTExpire();\r\n            if(result){\r\n                setUser(getUserLogin);\r\n            }\r\n            else if(result === false){\r\n                setUser(userDefault);\r\n            }\r\n        }else{\r\n            localStorage.removeItem('jwt'); //xóa localStorage\r\n            localStorage.removeItem('userLogin');\r\n            setUser(userDefault);\r\n        }\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <UserContext.Provider \r\n                value={{ user, loading, loadingContext, loginContext, \r\n                    logoutContext, alertVisible, triggerAlert, confirmAlert, resetAlert, isLogOutClick,\r\n                    isDialogChangePasswordOpen, setIsDialogChangePasswordOpen,\r\n                    isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard\r\n                }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop}\r\n                alertTitle={'Đang tải thông tin người dùng'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import * as signalR from '@microsoft/signalr';\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nlet connection = null; // Biến toàn cục lưu trữ kết nối SignalR\r\n\r\n// Hàm khởi tạo và kết nối SignalR\r\nconst startSignalRConnection = async (token) => {\r\n    if (connection) {\r\n        //console.log('SignalR connection already established.');\r\n        return connection;\r\n    }\r\n\r\n    connection = new signalR.HubConnectionBuilder()\r\n        .withUrl(`${backendURL}/notificationHub`, {\r\n            accessTokenFactory: () => token,\r\n            transport: signalR.HttpTransportType.WebSockets |\r\n                        signalR.HttpTransportType.ServerSentEvents |\r\n                        signalR.HttpTransportType.LongPolling\r\n        })\r\n        .withAutomaticReconnect([0, 2000, 10000, 30000])\r\n        .configureLogging(signalR.LogLevel.Information)\r\n        .build();\r\n\r\n    // Khởi tạo kết nối, trả về promise để xử lý sau\r\n    try {\r\n        await connection.start(); // Bắt đầu kết nối\r\n        //console.log(\"Connected to SignalR hub.\");\r\n\r\n        // Đăng ký sự kiện nhận tin nhắn, gọi callback khi nhận được tin nhắn\r\n        connection.on(\"ReceiveMessage\", (message) => {\r\n            //console.log(\"Received message:\", message);\r\n            if (onReceiveMessage) {\r\n                onReceiveMessage(message); // Gọi callback được truyền vào\r\n            }\r\n        });\r\n\r\n    } catch (error) {\r\n        //console.error(\"Error connecting to SignalR hub:\", error);\r\n        setTimeout(() => startSignalRConnection(token, onReceiveMessage), 5000); // Thử kết nối lại sau 5 giây nếu gặp lỗi\r\n    }\r\n};\r\n\r\n// Hàm đăng ký sự kiện ReceiveMessage\r\nconst onReceiveMessage = (callback) => {\r\n    if (connection) {\r\n        connection.on(\"ReceiveMessage\", callback);\r\n    } else {\r\n        //console.error(\"Connection has not been established yet.\");\r\n    }\r\n};\r\n\r\n// Hàm dừng kết nối SignalR\r\nconst stopSignalRConnection = async () => {\r\n    if (connection) {\r\n        try {\r\n            await connection.stop();\r\n            //console.log(\"Disconnected from SignalR hub.\");\r\n            connection = null;\r\n        } catch (error) {\r\n            //console.error(\"Error disconnecting from SignalR hub:\", error);\r\n        }\r\n    }\r\n};\r\n\r\nconst removeFromGroup = async () => {\r\n    if (connection) {\r\n        try {\r\n            await connection.invoke('RemoveFromGroup');\r\n            //console.log(\"User đã logout SignalR.\");\r\n        } catch (error) {\r\n            //console.error(`Failed to remove user from group: ${error}`);\r\n        }\r\n    } else {\r\n        //console.error(\"Connection has not been established yet.\");\r\n    }\r\n};\r\n\r\n// Hàm kiểm tra nếu đã kết nối\r\nconst isConnected = () => {\r\n    return connection !== null;\r\n};\r\n\r\nexport {\r\n    startSignalRConnection , stopSignalRConnection, onReceiveMessage, removeFromGroup, isConnected\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n//modal\r\n//import UserManual from '../ManageUserManual/UserManual';\r\nimport ChangePassword from '../ManageChangePassword/ChangePassword';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//icon\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport SettingsSuggestIcon from '@mui/icons-material/SettingsSuggest';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//real-time\r\nimport {removeFromGroup} from '../../Service/SignalService';\r\n\r\nfunction Header(props) {\r\n\r\n  const { user, logoutContext, triggerAlert, isDialogChangePasswordOpen, setIsDialogChangePasswordOpen, isOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  // const [openModalUserManual, setOpenModalUserManual] = useState(false);\r\n  const [openModalChangePassword, setOpenModalChangePassword] = useState(false);\r\n\r\n  //mui state menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [anchorElManageMenuIcon, setAnchorElManageMenuIcon] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  \r\n  const open = Boolean(anchorEl);\r\n  const openManageMenuIcon = Boolean(anchorElManageMenuIcon)\r\n  \r\n  const handleClick = (event) => {\r\n    if(isOldDiseaseWithNullCodeWard === true){\r\n      event.preventDefault();\r\n    }else{\r\n      setAnchorEl(event.currentTarget)\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOpenManageMenuIcon = (event, key) => {\r\n    if(key === 'manage'){\r\n      setAnchorElManageMenuIcon(event.currentTarget);\r\n    }\r\n  }\r\n\r\n  const handleCloseManageMenuIcon = () => {\r\n    setAnchorElManageMenuIcon(null)\r\n  }\r\n\r\n  const handleMenuItemClick = (path) => {\r\n    history.push(path); // Điều hướng tới đường dẫn mới\r\n    handleCloseManageMenuIcon(); // Đóng Menu\r\n  };\r\n\r\n  const actionNursing = [\r\n    { key: 'medicalRegister', maxWidth: '114px', label: 'Đăng ký khám', icon: <LocalHospitalIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/medicalregister\" },\r\n    { key: 'remind-examining', maxWidth: '95px', label: 'Nhắc khám', icon: <LocalPhoneIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/remind-examining\" },\r\n  ]\r\n\r\n  const actionDoctor = [\r\n    { key: 'examining', maxWidth: '100px', label: 'Khám bệnh', icon: <MedicationLiquidIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/doctor-examining\" },\r\n  ]\r\n\r\n  const actionAdmin = [\r\n    { key: 'statistical', maxWidth: '83px', label: 'Thống kê', icon: <BarChartIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/dashboard\" },\r\n    { key: 'manage', maxWidth: '83px', label: 'Quản lý', icon: <SettingsSuggestIcon sx={{fontSize: 30}}/> },\r\n  ]\r\n\r\n  const [userAction, setUserAction] = useState([]);\r\n\r\n  const handleChangeURL = (pathname) => {\r\n    const actionIndex = userAction.findIndex(action => action.to === pathname);\r\n    return actionIndex;\r\n  }\r\n\r\n  const value = handleChangeURL(props.location.pathname);\r\n\r\n  const handleLogout = () => {\r\n    const pathname = props.location.pathname;\r\n    if(user.positionName === 'Doctor' && pathname === 'doctor-examining'){\r\n      triggerAlert(async () => {\r\n        await removeFromGroup();\r\n        localStorage.removeItem('jwt');\r\n        localStorage.removeItem('userLogin');\r\n        logoutContext();\r\n        setAnchorEl(null);\r\n        history.push('/login');\r\n      });\r\n    }\r\n    \r\n    else{\r\n      localStorage.removeItem('jwt'); //xóa localStorage\r\n      localStorage.removeItem('userLogin');\r\n      logoutContext();\r\n      setAnchorEl(null);\r\n      history.push('/login');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isOldDiseaseWithNullCodeWard])\r\n  \r\n  useEffect(() => {\r\n    if(user.positionName === 'Nursing'){        \r\n      setUserAction(actionNursing);\r\n    }\r\n    else if(user.positionName === 'Doctor'){\r\n      setUserAction(actionDoctor);\r\n    }\r\n    else if(user.positionName === 'Admin'){\r\n      setUserAction(actionAdmin);\r\n    }\r\n  }, [user])\r\n  \r\n  if(location.pathname !== '/login'){\r\n    return (\r\n      <>\r\n        <Box sx={{ width: '100%'}} >\r\n          <AppBar sx={{position: 'unset'}}>\r\n            <Toolbar sx={{backgroundColor: '#cfe8fc', height: '78px'}}>\r\n              <Link to=\"/\">\r\n                <Avatar src={Logo} sx={{ width: 62, height: 62, mt: 'auto', mb: 'auto', mr: 4 }} />\r\n              </Link>\r\n              {user.isAuthenticated === true || token ? \r\n                <>\r\n                  <BottomNavigation showLabels value={value}\r\n                    sx={{display: 'flex', justifyContent: 'flex-start', backgroundColor: '#cfe8fc', flexGrow: 1}}>\r\n                    {userAction.map(actionItem => (\r\n                      <BottomNavigationAction\r\n                        key={actionItem.key}\r\n                        label={actionItem.label}\r\n                        icon={actionItem.icon}\r\n                        LinkComponent={actionItem.LinkComponent || 'div'}\r\n                        to={actionItem.to || undefined}\r\n                        onClick={(event) => handleOpenManageMenuIcon(event, actionItem.key)}\r\n                        sx={{color: '#000', maxWidth: actionItem.maxWidth}}\r\n                      />\r\n                    ))}  \r\n                  </BottomNavigation>\r\n\r\n                  <Menu anchorEl={anchorElManageMenuIcon} open={Boolean(openManageMenuIcon)} onClose={() => handleCloseManageMenuIcon()} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }} transformOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n                    <MenuItem onClick={() => handleMenuItemClick('/manage-user')}>Người dùng</MenuItem>\r\n                  </Menu>\r\n\r\n                  <Button onClick={(e) => handleClick(e)} sx={{color: '#000', textTransform: 'none'}}>{user.userFullName}</Button>\r\n                  <Menu anchorEl={anchorEl} open={open} onClose={() => handleClose()}>\r\n                    <MenuItem onClick={() => [setOpenModalChangePassword(true), setIsDialogChangePasswordOpen(true), setAnchorEl(null)]}>Đổi mật khẩu</MenuItem>\r\n                    <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                  </Menu>\r\n\r\n                  {/* <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} /> */}\r\n                </>\r\n                :\r\n                  <>\r\n                    <Box sx={{position: 'absolute', right: 22}}>\r\n                      <NavLink exact to=\"/login\"><Button sx={{textTransform: 'none', color: '#000'}}>Đăng nhập</Button></NavLink>\r\n                      {/* <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} /> */}\r\n                    </Box>\r\n                  </>\r\n                }            \r\n            </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n  \r\n        {/* <UserManual openModalUserManual={openModalUserManual} setOpenModalUserManual={setOpenModalUserManual}/> */}\r\n        <ChangePassword openModalChangePassword={openModalChangePassword} setOpenModalChangePassword={setOpenModalChangePassword} setIsDialogChangePasswordOpen={setIsDialogChangePasswordOpen}/>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, Redirect } from \"react-router-dom\";\n\nconst PrivateRoutes = (props) => {\n  const token = localStorage.getItem('jwt');\n  const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\n\n  if (token && token.length > 0 && getUserLogin.isLogin === true) {\n    return (\n      <>\n        <Route path={props.path} component={props.component}></Route>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <Redirect to='/login'></Redirect>\n      </>\n    )\n  }\n};\nexport default PrivateRoutes;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../ErrorPage/Page500.scss\";\n\nconst Page404 = () => {\n\n  let history = useHistory();\n\n  return (\n    <div>\n      <div className=\"section\">\n        <h1 className=\"error\">404</h1>\n        <div className=\"page\">Trang mà bạn đang truy cập không tồn tại.</div>\n      </div>\n    </div>\n  );\n};\nexport default Page404;\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nfunction Home() {\r\n\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    return (\r\n        <Container> \r\n            <Box sx={{mt: 1}}>\r\n                {loading === false && user.isLogin ?\r\n                    user.positionName === 'Nursing' ? \r\n                        <>\r\n                            <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>Nếu bạn thấy dòng chữ này hãy nhấn vào <span style={{fontWeight: 'bolder', color: 'blue'}}>\"Đăng ký khám\"</span> ở thanh menu có logo của bệnh viện để chuyển về trang đăng ký khám</Typography>\r\n                        </>\r\n                    :\r\n                        user.positionName === 'Doctor' ? \r\n                            <>\r\n                                <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>{`Kiểm tra thanh menu (có logo của bệnh viện) bên góc phải có hiện tên người dùng`}</Typography> \r\n                                <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>Nếu đúng tên bác sĩ đang khám hãy nhấn vào <span style={{fontWeight: 'bolder', color: 'blue'}}>\"Khám bệnh\"</span> để chuyển về trang khám bệnh</Typography>\r\n                                <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>Nếu sai tên bác sĩ đang khám hãy nhấn vào tên người dùng đó sẽ hiện ra menu nhỏ, nhấn đăng xuất</Typography>       \r\n                            </>\r\n                        :\r\n                            null\r\n                :\r\n                    <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>Nhấn vào <span style={{fontWeight: 'bolder', color: 'blue'}}>\"Đăng nhập\"</span> trên thanh menu (có logo của bệnh viện) bên góc phải</Typography> \r\n                }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState, useContext, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CreateAccount = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleCloseModalRegister = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalRegister(false);\r\n      }\r\n    }\r\n\r\n    const position = [\r\n      {id: '1', positionName: 'Điều dưỡng'},\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n          <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalRegister} onClose={(event, reason) => handleCloseModalRegister(event, reason)} disableEscapeKeyDown={true}  >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n            <IconButton onClick={() => handleCloseModalRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n              <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} />\r\n              <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }}/>\r\n              <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '46ch', mb: 2.5 }} \r\n                InputProps={{ // <-- This is where the toggle button is added.\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <Autocomplete options={position.map((option) => option.positionName)} renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} sx={{ width: '45.95ch', mb: 2.5 }}/>\r\n              <Stack spacing={2} direction=\"column\">\r\n                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleCloseModalRegister()}>Tạo tài khoản</Button>\r\n              </Stack>\r\n            \r\n            </DialogContent>\r\n          </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAccount","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst createMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/Register`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createMedicalBackRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/BackRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createCurrentDoctorExamining = async (userIdDoctor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/SetDoctorExaming/${userIdDoctor}`, \r\n        {}, // Body của request, có thể là {} hoặc object\r\n        {\r\n            headers: {\r\n                \"content-type\": \"text/plain; charset=utf-8\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddPredecessor = async (dataPredecessor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddPredecessor`, dataPredecessor,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddMedicalBook = async (dataMedicalBook) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddMedicalBook`, dataMedicalBook,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createNotificationForMedicalRegister = async () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const medicalRegisterMessage = true\r\n    return await axios.post(`${backendURL}/api/Notification/SendSignalRGroup?groupId=doctor`, medicalRegisterMessage,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getRegistersByDateNow = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetRegistersByDateNow`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveRegister = async (dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveOldRegister = async (dayOfBirth, patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}&patientId=${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListOldDisease = async (patientCode, phone, fullName, dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/SearchPatients?patientCode=${patientCode}&phone=${phone}&fullName=${fullName}&dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getVaccinationByPatientId = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetVaccinationByPatientId/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getCurrentDoctorExamining = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetDoctorExamining`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalDetailPatient = async (id) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/DetailPatient/${id}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalBook = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetMediacalBook?medicalRegisterId=${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdatePredecessor = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdatePredecessor/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdateMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdateMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentDate = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentDate/${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentsNextWeek = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsNextWeek`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getAppointmentsToday = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsToday`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst updateMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/EditRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateMedicalState = async (id, state) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateState?id=${id}&state=${state}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateStateAppointment = async (dataAppointment, stateAppointment) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateStateAppointment/${dataAppointment.medicalBookId}?appointmentDate=${dataAppointment.appointmentDate}&stateAppointment=${stateAppointment}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst deleteMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.delete(`${backendURL}/api/Medical/DeleteMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    createMedicalRegister, createMedicalBackRegister, createCurrentDoctorExamining, createAddPredecessor, createAddMedicalBook, createNotificationForMedicalRegister,\r\n    getRegistersByDateNow, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister, getListOldDisease, getVaccinationByPatientId, getCurrentDoctorExamining, getMedicalDetailPatient, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook, getAppointmentDate, getAppointmentsNextWeek, getAppointmentsToday,\r\n    updateMedicalRegister, updateMedicalState, updateStateAppointment,\r\n    deleteMedicalBook\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Register from '../ManageRegister/Register';\r\nimport { toast } from 'react-toastify';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//api\r\nimport { userLogin } from '../../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n//signal\r\nimport { startSignalRConnection } from '../../Service/SignalService';\r\n\r\nconst Login = () => {\r\n    const { user, loadingContext, loginContext } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [userAccount, setUserAccount] = useState({userName: '', password: ''})\r\n    const [openModalRegister, setOpenModalRegister] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const onChangeUserName = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                userName: value\r\n            }\r\n        }) \r\n    }\r\n\r\n    const onChangeUserPassword = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                password: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if(userAccount.userName === ''){\r\n            toast.error('Bạn chưa nhập tài khoản!')\r\n        }\r\n        else if(userAccount.password === ''){\r\n            toast.error('Bạn chưa nhập mật khẩu!');\r\n        }\r\n        else{\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const response = await userLogin(userAccount.userName, userAccount.password);\r\n            if(response.status !== 200){\r\n                toast.error(response.data);\r\n                setOpenAlertProcessingBackdrop(false);\r\n            }\r\n            else{\r\n                if(response.data.positionName === 'Doctor'){\r\n                    await startSignalRConnection(response.data.tokenDTO.token);\r\n                }\r\n\r\n                localStorage.setItem('jwt', response.data.tokenDTO.token)\r\n                const userLogin = {\r\n                    isAuthenticated: true, \r\n                    isLogin: true, \r\n                    userId: response.data.userId,\r\n                    userName: response.data.userName, \r\n                    userFullName: response.data.userFullName, \r\n                    positionName: response.data.positionName\r\n                }\r\n\r\n                localStorage.setItem('userLogin', JSON.stringify(userLogin))\r\n                loginContext(userLogin);\r\n                   \r\n                if(response.data.positionName === 'Nursing'){\r\n                    history.push('/medicalregister');\r\n                }\r\n                else if(response.data.positionName === 'Doctor'){\r\n                    history.push('/doctor-examining');\r\n                }\r\n                else if(response.data.positionName === 'Admin'){\r\n                    history.push('/dashboard');\r\n                }\r\n                setOpenAlertProcessingBackdrop(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleLogin();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAuthenticated === true) {\r\n            history.push('/');\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        const userLogin = localStorage.getItem('userLogin');\r\n        if (token && userLogin) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(openAlertProcessingBackdrop){\r\n                event.preventDefault();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [openAlertProcessingBackdrop])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box sx={{ mt: 3, borderRadius: '25px' }} >\r\n                    <Box sx={{ p: 7.6 }}>\r\n                        <Avatar src={Logo} sx={{ width: 120, height: 120, ml: 'auto', mr: 'auto', mb: 2 }} />\r\n                        <Typography sx={{ textAlign: 'center', textTransform: 'uppercase', fontWeight: 'bolder', fontSize: '1.15rem', mb: 2, color: '#4caf50' }} variant=\"h5\">Chương trình khám nhi khoa phát triển</Typography>\r\n                        <Box component=\"form\" autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                            <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                            <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 3 }} \r\n                            onChange={(e) => onChangeUserPassword(e.target.value)} onKeyDown={(e) => handlePressEnter(e)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6.5vh', width: '28ch' }} variant=\"contained\" style={{ margin: 'auto' }} onClick={(e) => handleLogin()}>Đăng nhập</Button>\r\n                                {/* <Typography sx={{textAlign: 'center', color: 'red', fontSize: '18px'}} variant=\"subtitle1\"><strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Quên mật khẩu</strong></Typography> */}\r\n                                {/* <Typography sx={{textAlign: 'center', mt: '10px !important'}} variant=\"subtitle1\">Chưa có tài khoản? <strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Đăng ký</strong></Typography> */}\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Register\r\n                openModalRegister={openModalRegister} setOpenModalRegister={setOpenModalRegister}\r\n            />\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang đăng nhập'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessing(props) {\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={props.openAlertProcessing} disableEscapeKeyDown={true}>\r\n                <DialogContent>\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <CircularProgress/>\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang xử lý...</Typography>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertProcessing","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getListProvince = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/ListProvince`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListDistrict = async (provinceId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListDistrictByIdProvince/${provinceId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListWard = async (districtId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListWardByIdDistrict/${districtId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getFullAddressByIdWard = async (codeWard) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetFullAddressByIdWard/${codeWard}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getListProvince, getListDistrict, getListWard, getFullAddressByIdWard\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport { Autocomplete } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//lodash\r\nimport _ from 'lodash';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { updateMedicalRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalService';\r\n\r\nfunction ManageInfoPantients(props) {\r\n  const dataPatientInfoDefault = {\r\n    examinationId: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    headCircumference: \"\",\r\n    reason: \"\",\r\n    vaccination: false,\r\n    id: \"\",\r\n    patient: {\r\n      identifier: \"\",\r\n      address: \"\",\r\n      fullName: \"\",\r\n      dayOfBirth: null,\r\n      codeWard: \"\",\r\n      gender: true,\r\n      fullNameMother: \"\",\r\n      phoneMother: \"\",\r\n      fullNameFather: \"\",\r\n      phoneFather: \"\",\r\n      patientId: \"\"\r\n    }\r\n  }\r\n\r\n  const dataPatientInfoErrorDefault = {\r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    examiningSession: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n  } \r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const selectedAutoCompleteDefault = { \r\n    gender: { value: null, openOption: false }, \r\n    examiningSession: {value: null, openOption: false, loading: false},\r\n    province: { value: null, openOption: false }, \r\n    district: { value: null, openOption: false }, \r\n    ward: { value: null, openOption: false },\r\n  }\r\n\r\n  const typingRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  const [dataPatientInfoNotEdit, setDataPatientInfoNotEdit] = useState();\r\n  const [dataPatientInfo, setDataPatientInfo] = useState(dataPatientInfoDefault);\r\n  const [dataPatientInfoError, setDataPatientInfoError] = useState(dataPatientInfoErrorDefault);\r\n    \r\n  const [selectedAutoComplete, setSelectedAutoComplete] = useState(selectedAutoCompleteDefault);\r\n\r\n  const [listExaminingSession, setListExaminingSession] = useState([]);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f',\r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -8],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.gender.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'ExaminingSession'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.examiningSession.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else{\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      //const _dataPatientInfoError = {...dataPatientInfoError};\r\n      // if(fieldName === 'patientId'){\r\n      //   _dataPatientInfoError.patientId.title = '';\r\n      //   _dataPatientInfoError.patientId.openTooltip = false;\r\n      //   setDataPatientInfoError(_dataPatientInfoError);\r\n      // }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.dayOfBirth.title = '';\r\n      //     _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientInfoError.dayOfBirth.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneMother.title = '';\r\n      //     _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneMother.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneFather'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneFather.title = '';\r\n      //     _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneFather.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'Gender'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.gender.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'ExaminingSession'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n      //     prevSelectedAutoComplete.examiningSession.openOption = false\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Province'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.province.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'District'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.district.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Ward'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.ward.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.gender.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'ExaminingSession'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n          prevSelectedAutoComplete.examiningSession.openOption = false\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.district.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.ward.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n  \r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n  \r\n      return (lowercasedFullName.includes(lowercasedInput) || initials.includes(lowercasedInput));\r\n    });\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientInfoError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientInfoError.identifier.openTooltip = true;\r\n          _dataPatientInfoError.identifier.isError = true;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n        else{\r\n          setDataPatientInfo(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientInfoError.identifier.title = '';\r\n          _dataPatientInfoError.identifier.openTooltip = false;\r\n          _dataPatientInfoError.identifier.isError = false;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.identifier.title = '';\r\n      _dataPatientInfoError.identifier.openTooltip = false;\r\n      _dataPatientInfoError.identifier.isError = false;\r\n      _dataPatientInfoError.identifier.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n    \r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.fullName = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n    \r\n      if(dataPatientInfoError.fullName.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullName.title = '';\r\n        _dataPatientInfoError.fullName.openTooltip = false;\r\n        _dataPatientInfoError.fullName.isError = false;\r\n        _dataPatientInfoError.fullName.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = async (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n    \r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n            \r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n    \r\n        if(today < takenValue || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientInfoError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n          _dataPatientInfoError.dayOfBirth.isError = true;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n    \r\n        else{\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.dayOfBirth = formattedDate\r\n            return {...prevDataPatientInfo}\r\n          })\r\n    \r\n          _dataPatientInfoError.dayOfBirth.title = '';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n          _dataPatientInfoError.dayOfBirth.isError = false;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n\r\n          onChangeDOBToGetExaminingSession(formattedDate);\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onChangeDOBToGetExaminingSession = async (formattedDate) => {\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.value = null\r\n      return {...prevSelectedAutoComplete}\r\n    })\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = true\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(formattedDate);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = false\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.patient.gender = value.genderValue\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n    \r\n    if(dataPatientInfoError.gender.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.gender.isError = false;\r\n      _dataPatientInfoError.gender.title = '';\r\n      _dataPatientInfoError.gender.openTooltip = false;\r\n      _dataPatientInfoError.gender.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectExaminingSession = (e, value) => {\r\n    if(focusField === 'examiningSession'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.examinationId = value.id\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.examiningSession.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(dataPatientInfoError.examiningSession.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.examiningSession.isError = false;\r\n      _dataPatientInfoError.examiningSession.title = '';\r\n      _dataPatientInfoError.examiningSession.openTooltip = false;\r\n      _dataPatientInfoError.examiningSession.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.province.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(selectedAutoComplete.district.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.province.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.province.isError = false;\r\n      _dataPatientInfoError.province.title = '';\r\n      _dataPatientInfoError.province.openTooltip = false;\r\n      _dataPatientInfoError.province.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.district.value = value;\r\n      return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.district.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.district.isError = false;\r\n      _dataPatientInfoError.district.title = '';\r\n      _dataPatientInfoError.district.openTooltip = false;\r\n      _dataPatientInfoError.district.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n\r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.codeWard = value.code\r\n      return { ...prevDataPatientInfo }\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.ward.value = value;\r\n        return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(dataPatientInfoError.ward.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.ward.isError = false;\r\n      _dataPatientInfoError.ward.title = '';\r\n      _dataPatientInfoError.ward.openTooltip = false;\r\n      _dataPatientInfoError.ward.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    if(focusField === 'address'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.address = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.address.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.address.isError = false;\r\n        _dataPatientInfoError.address.title = '';\r\n        _dataPatientInfoError.address.openTooltip = false;\r\n        _dataPatientInfoError.address.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    if(focusField === 'fullNameMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameMother = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(focusField === 'phoneMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneMother.openTooltip = true;\r\n          _dataPatientInfoError.phoneMother.isError = true;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n          \r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneMother = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n      \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n      \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 10)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneMother.title = '';\r\n      _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      _dataPatientInfoError.phoneMother.isError = false;\r\n      _dataPatientInfoError.phoneMother.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameFather = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneFather.openTooltip = true;\r\n          _dataPatientInfoError.phoneFather.isError = true;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n\r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneFather = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n                \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n                \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneFather.title = '';\r\n      _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      _dataPatientInfoError.phoneFather.isError = false;\r\n      _dataPatientInfoError.phoneFather.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    if(focusField === 'height'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.height = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.height.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.height.title = '';\r\n        _dataPatientInfoError.height.openTooltip = false;\r\n        _dataPatientInfoError.height.isError = false;\r\n        _dataPatientInfoError.height.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    if(focusField === 'weight'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.weight = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.weight.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.weight.title = '';\r\n        _dataPatientInfoError.weight.openTooltip = false;\r\n        _dataPatientInfoError.weight.isError = false;\r\n        _dataPatientInfoError.weight.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    if(focusField === 'headCircumference'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.headCircumference = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.headCircumference.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.headCircumference.title = '';\r\n        _dataPatientInfoError.headCircumference.openTooltip = false;\r\n        _dataPatientInfoError.headCircumference.isError = false;\r\n        _dataPatientInfoError.headCircumference.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.vaccination = bool\r\n      return {...prevDataPatientInfo}\r\n    })\r\n  }\r\n\r\n  const handleCloseModalInfoPantients = (event, reason) => {\r\n    if(reason && reason === \"backdropClick\"){\r\n      return;\r\n    }\r\n    else{\r\n      setListDistrict(prevListDistrict => {\r\n        prevListDistrict.loading = false\r\n        prevListDistrict.list = []\r\n        return {...prevListDistrict}\r\n      })\r\n      setListWard(prevListWard => {\r\n        prevListWard.loading = false\r\n        prevListWard.list = []\r\n        return {...prevListWard}\r\n      })\r\n      setListExaminingSession([]);\r\n      setSelectedAutoComplete(selectedAutoCompleteDefault);\r\n      setDataPatientInfo(dataPatientInfoDefault);\r\n      setDataPatientInfoNotEdit('');\r\n      setDataPatientInfoError(dataPatientInfoErrorDefault);\r\n      setLoading(true);\r\n      props.setSelectedPantientInfo();\r\n      props.setOpenModalInfoPantients(false);\r\n    }\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const responseListProvince = await getListProvince();\r\n    setListProvince(responseListProvince);\r\n  }\r\n\r\n  const handleApplyPantientDataToField = async () => {\r\n    setOpenAlertProcessing(true);   \r\n      \r\n    const editPropsDataPatientInfo = {...dataPatientInfo};\r\n    editPropsDataPatientInfo.examinationId = props.selectedPantientInfo.examinationId\r\n    editPropsDataPatientInfo.height = props.selectedPantientInfo.height\r\n    editPropsDataPatientInfo.weight = props.selectedPantientInfo.weight\r\n    editPropsDataPatientInfo.headCircumference = props.selectedPantientInfo.headCircumference\r\n    editPropsDataPatientInfo.reason = props.selectedPantientInfo.reason\r\n    editPropsDataPatientInfo.vaccination = props.selectedPantientInfo.vaccination\r\n    editPropsDataPatientInfo.id = props.selectedPantientInfo.id\r\n    editPropsDataPatientInfo.patient.identifier = props.selectedPantientInfo.patient.identifier\r\n    editPropsDataPatientInfo.patient.address = props.selectedPantientInfo.patient.address\r\n    editPropsDataPatientInfo.patient.fullName = props.selectedPantientInfo.patient.fullName\r\n    editPropsDataPatientInfo.patient.dayOfBirth = props.selectedPantientInfo.patient.dayOfBirth\r\n    editPropsDataPatientInfo.patient.codeWard = props.selectedPantientInfo.patient.codeWard\r\n    editPropsDataPatientInfo.patient.gender = props.selectedPantientInfo.patient.gender\r\n    editPropsDataPatientInfo.patient.fullNameMother = props.selectedPantientInfo.patient.fullNameMother\r\n    editPropsDataPatientInfo.patient.phoneMother = props.selectedPantientInfo.patient.phoneMother\r\n    editPropsDataPatientInfo.patient.fullNameFather = props.selectedPantientInfo.patient.fullNameFather\r\n    editPropsDataPatientInfo.patient.phoneFather = props.selectedPantientInfo.patient.phoneFather\r\n    editPropsDataPatientInfo.patient.patientId = props.selectedPantientInfo.patient.patientId\r\n\r\n    setDataPatientInfo(_.cloneDeep(editPropsDataPatientInfo));\r\n    setDataPatientInfoNotEdit(_.cloneDeep(editPropsDataPatientInfo));\r\n        \r\n    const response = await getFullAddressByIdWard(props.selectedPantientInfo.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.list = responseListDistrict;\r\n      return {...prevListDistrict}\r\n    });\r\n    const responseListWard = await getListWard(response.districtCode);\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = responseListWard;\r\n      return {...prevListWard}\r\n    });\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(props.selectedPantientInfo.patient.dayOfBirth);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n     \r\n    const selectedGender = listGender.find(gender => gender.genderValue === props.selectedPantientInfo.patient.gender);\r\n    const indexListExamining = responseListMedicalExaminationsGiveRegister.exams.findIndex(examiningSession => examiningSession.id === props.selectedPantientInfo.examinationId)\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = selectedGender\r\n      prevSelectedAutoComplete.examiningSession.value = responseListMedicalExaminationsGiveRegister.exams[indexListExamining];\r\n      prevSelectedAutoComplete.province.value = listProvince[indexListProvince];\r\n      prevSelectedAutoComplete.district.value = responseListDistrict[indexListDistrict];\r\n      prevSelectedAutoComplete.ward.value = responseListWard[indexListWard];\r\n      return prevSelectedAutoComplete\r\n    })\r\n\r\n    setLoading(false);\r\n    setOpenAlertProcessing(false);   \r\n  }\r\n\r\n  const checkValidate = () => {\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      let isValid = true;\r\n\r\n      if(dataPatientInfoError.identifier.title !== ''){\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.identifier.focus = true;\r\n          setFocusField('identifier');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullName === ''){\r\n        _dataPatientInfoError.fullName.title = 'Bạn chưa nhập họ tên';\r\n        _dataPatientInfoError.fullName.openTooltip = true;\r\n        _dataPatientInfoError.fullName.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullName.focus = true;\r\n          setFocusField('fullName');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(dataPatientInfo.patient.gender === ''){\r\n        _dataPatientInfoError.gender.title = 'Bạn chưa chọn giới tính';\r\n        _dataPatientInfoError.gender.isError = true;\r\n        _dataPatientInfoError.gender.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.gender.focus = true;\r\n          setFocusField('gender');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.dayOfBirth === ''){\r\n        _dataPatientInfoError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfoError.dayOfBirth.title !== ''){\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.examiningSession.value === null){\r\n        _dataPatientInfoError.examiningSession.title = 'Bạn chưa chọn lại kỳ khám';\r\n        _dataPatientInfoError.examiningSession.isError = true;\r\n        _dataPatientInfoError.examiningSession.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.examiningSession.focus = true;\r\n          setFocusField('examiningSession');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.province.value === null){\r\n        _dataPatientInfoError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n        _dataPatientInfoError.province.isError = true;\r\n        _dataPatientInfoError.province.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.province.focus = true;\r\n          setFocusField('province');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.district.value === null){\r\n        _dataPatientInfoError.district.title = 'Bạn chưa chọn quận huyện';\r\n        _dataPatientInfoError.district.isError = true;\r\n        _dataPatientInfoError.district.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.district.focus = true;\r\n          setFocusField('district');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.ward.value === null){\r\n        _dataPatientInfoError.ward.title = 'Bạn chưa chọn phường xã';\r\n        _dataPatientInfoError.ward.isError = true;\r\n        _dataPatientInfoError.ward.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.ward.focus = true;\r\n          setFocusField('ward');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.address === ''){\r\n        _dataPatientInfoError.address.title = 'Bạn chưa nhập địa chỉ';\r\n        _dataPatientInfoError.address.isError = true;\r\n        _dataPatientInfoError.address.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.address.focus = true;\r\n          setFocusField('address');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullNameMother === '' && dataPatientInfo.patient.fullNameFather === ''){\r\n        _dataPatientInfoError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n        _dataPatientInfoError.fullNameMother.isError = true;\r\n        _dataPatientInfoError.fullNameMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullNameMother.focus = true;\r\n          setFocusField('fullNameMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.phoneMother === '' && dataPatientInfo.patient.phoneFather === ''){\r\n        _dataPatientInfoError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        _dataPatientInfoError.phoneMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneMother.title !== ''){\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneFather.title !== ''){\r\n        _dataPatientInfoError.phoneFather.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneFather.focus = true;\r\n          setFocusField('phoneFather');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.height === ''){\r\n        _dataPatientInfoError.height.title = 'Bạn chưa nhập chiều cao';\r\n        _dataPatientInfoError.height.isError = true;\r\n        _dataPatientInfoError.height.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.height.focus = true;\r\n          setFocusField('height');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.weight === ''){\r\n        _dataPatientInfoError.weight.title = 'Bạn chưa nhập cân nặng';\r\n        _dataPatientInfoError.weight.isError = true;\r\n        _dataPatientInfoError.weight.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.weight.focus = true;\r\n          setFocusField('weight');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.headCircumference === ''){\r\n        _dataPatientInfoError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n        _dataPatientInfoError.headCircumference.isError = true;\r\n        _dataPatientInfoError.headCircumference.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.headCircumference.focus = true;\r\n          setFocusField('headCircumference');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      // if(dataPatientInfo.reason === ''){\r\n      //   _dataPatientInfoError.reason.isError = true;\r\n      //   isValid = false;\r\n      // }\r\n\r\n      if(_.isEqual(dataPatientInfo, dataPatientInfoNotEdit) === true){\r\n        toast.warning('Hiện không có gì để cập nhật', {toastId: 'warning1'});\r\n        isValid = false;\r\n      }\r\n\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n      return isValid;\r\n  }\r\n\r\n  const handleUpdateMedicalRegister = async () => {\r\n    if(checkValidate()){\r\n      setOpenAlertProcessing(true);\r\n      const response = await updateMedicalRegister(dataPatientInfo);\r\n      if(response.status === 200){\r\n        toast.success(response.data, {toastId: 'success1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        props.setIsEditedInfo(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      else{\r\n        toast.error(response.data, {toastId: 'error1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      setOpenAlertProcessing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(listProvince.length === 0){\r\n      handleGetListProvince();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.selectedPantientInfo){\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n      handleApplyPantientDataToField();\r\n    }\r\n  }, [props.selectedPantientInfo])\r\n\r\n  useEffect(() => {\r\n    if(props.openModalInfoPantients && props.isContinueUpdateMedicalRegister && loading === false){\r\n      handleUpdateMedicalRegister();\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n    }\r\n  }, [props.isContinueUpdateMedicalRegister, loading])\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth={true} maxWidth='md' open={props.openModalInfoPantients} onClose={(event, reason) => handleCloseModalInfoPantients(event, reason)} >\r\n        <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center', color: 'blue' }}>Thông tin bệnh nhân</DialogTitle>\r\n        <IconButton onClick={() => handleCloseModalInfoPantients()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n          <CloseIcon fontSize='medium'/>\r\n        </IconButton>\r\n        <DialogContent dividers sx={{pt: 1.5, pb: 1.5}}>\r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', pl: 4.2, pr: 4.2, mb: 0.8}}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.identifier.title}</h6>} open={dataPatientInfoError.identifier.openTooltip} placement='left'> \r\n              <TextField error={true ? dataPatientInfoError.identifier.isError === true : false}\r\n                label=\"Mã định danh\" variant=\"outlined\" \r\n                sx={{width: '18%', '&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                inputProps={{ maxLength: 12 }}\r\n                inputRef={(input) => input && focusField === 'identifier' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.identifier}\r\n                onChange={(e) => onChangeIdentifier(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n                      \r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullName.title}</h6>} open={dataPatientInfoError.fullName.openTooltip} placement='top'\r\n              slotProps={{\r\n                popper: {\r\n                  modifiers: [\r\n                    {\r\n                      name: 'offset',\r\n                      options: { offset: [-10, -6], },\r\n                    },\r\n                  ],\r\n                },\r\n              }} \r\n            > \r\n              <TextField error={true ? dataPatientInfoError.fullName.isError === true : false}\r\n                label=\"Họ tên\" variant=\"outlined\" \r\n                sx={{width: '32%', '&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.fullName}\r\n                onChange={(e) => onChangeFullName(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.gender.title}</h6>} open={dataPatientInfoError.gender.openTooltip} placement='top'>\r\n              <Autocomplete \r\n                sx={{width: '12%', marginTop: '7.5px'}}\r\n                options={listGender} \r\n                getOptionLabel={(option) => option.genderName}\r\n                value={selectedAutoComplete.gender.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.genderName}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectGender(e, value)}\r\n                open={selectedAutoComplete.gender.openOption}\r\n                onFocus={() => handleFocus('Gender')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Giới tính\" \r\n                    inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                    error={true ? dataPatientInfoError.gender.isError === true : false}                     \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <DemoContainer components={['DatePicker']}>  \r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.dayOfBirth.title}</h6>} open={dataPatientInfoError.dayOfBirth.openTooltip}>    \r\n                  <Box sx={{width: 110}}>\r\n                    <DatePicker label=\"Ngày sinh\" \r\n                      format='DD/MM/YYYY' defaultValue={moment(dataPatientInfo.patient.dayOfBirth)}\r\n                      disableFuture={true} disableOpenPicker \r\n                      slotProps={{ \r\n                        textField: \r\n                          { \r\n                            inputRef: dateFieldRef,\r\n                            error: true ? dataPatientInfoError.dayOfBirth.isError === true : false,\r\n                            onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                          }\r\n                        }}\r\n                      onChange={(value) => onChangeDOB(value)}\r\n                    />\r\n                  </Box>\r\n                </Tooltip>\r\n              </DemoContainer>\r\n            </ThemeProvider>\r\n          </LocalizationProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.examiningSession.title}</h6>} open={dataPatientInfoError.examiningSession.openTooltip} placement='right'>\r\n              <Autocomplete \r\n                sx={{width: '18%', mt: '7.5px'}}\r\n                options={listExaminingSession} \r\n                noOptionsText={selectedAutoComplete.examiningSession.loading ? 'Đang tải...' : ''}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.examiningSession.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectExaminingSession(e, value)}\r\n                open={selectedAutoComplete.examiningSession.openOption}\r\n                onFocus={() => handleFocus('ExaminingSession')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'ExaminingSession')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Kỳ khám\" \r\n                    inputRef={(input) => input && focusField === 'examiningSession' && input.focus()}\r\n                    error={true ? dataPatientInfoError.examiningSession.isError === true : false} \r\n                    sx={{'& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot': {pl: '6px', pr: '6px'}}}\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      endAdornment: (\r\n                        <>\r\n                          {selectedAutoComplete.examiningSession.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </>\r\n                      ),\r\n                    }} \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.province.title}</h6>} open={dataPatientInfoError.province.openTooltip} placement='left'>\r\n              <Autocomplete \r\n                sx={{width: '20%', mt: 2}}\r\n                options={listProvince} \r\n                filterOptions={filterOptions}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.province.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectProvine(e, value)}\r\n                open={selectedAutoComplete.province.openOption}\r\n                onFocus={() => handleFocus('Province')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Thành phố\"\r\n                    inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                    error={true ? dataPatientInfoError.province.isError === true : false}  \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.district.title}</h6>} open={dataPatientInfoError.district.openTooltip} placement='top'>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listDistrict.list} \r\n                  noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.district.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectDistrict(e, value)}\r\n                  open={selectedAutoComplete.district.openOption}\r\n                  onFocus={() => handleFocus('District')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Quận/huyện\" \r\n                      inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                      error={true ? dataPatientInfoError.district.isError === true : false} \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.ward.title}</h6>} open={dataPatientInfoError.ward.openTooltip}>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listWard.list}\r\n                  noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.ward.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectWard(e, value)}\r\n                  open={selectedAutoComplete.ward.openOption}\r\n                  onFocus={() => handleFocus('Ward')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Phường/Xã\" \r\n                      inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                      error={true ? dataPatientInfoError.ward.isError === true : false}  \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.address.title}</h6>} open={dataPatientInfoError.address.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.address.isError === true : false}\r\n                  label=\"Địa chỉ\" variant=\"outlined\" \r\n                  sx={{width: '36%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.address}\r\n                  onChange={(e) => onChangeAddress(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullNameMother.title}</h6>} open={dataPatientInfoError.fullNameMother.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.fullNameMother.isError === true : false}\r\n                  label=\"Họ tên mẹ\" variant=\"outlined\" \r\n                  sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.fullNameMother}\r\n                  onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                />    \r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneMother.title}</h6>} open={dataPatientInfoError.phoneMother.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.phoneMother.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneMother}\r\n                  onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <TextField \r\n              label=\"Họ tên cha\" variant=\"outlined\" sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n              defaultValue={dataPatientInfo.patient.fullNameFather}\r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n            />\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneFather.title}</h6>} open={dataPatientInfoError.phoneFather.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.phoneFather.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneFather}\r\n                  onChange={(e) => onChangePhoneFather(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.height.title}</h6>} open={dataPatientInfoError.height.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.height.isError === true : false}\r\n                  label='Chiều cao' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.height}\r\n                  onChange={(e) => onChangeHeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.weight.title}</h6>} open={dataPatientInfoError.weight.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.weight.isError === true : false}\r\n                  label='Cân nặng' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(kg)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.weight}\r\n                  onChange={(e) => onChangeWeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.headCircumference.title}</h6>} open={dataPatientInfoError.headCircumference.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.headCircumference.isError === true : false}\r\n                  label='Vòng đầu' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.headCircumference}\r\n                  onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <FormControlLabel sx={{width: '30%', mt: 2}} control={<Checkbox checked={dataPatientInfo.vaccination}/>} \r\n              label=\"Có tham gia tiêm ngừa\"\r\n              onChange={(e) => onChangeVaccination(e.target.checked)}\r\n            />  \r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{justifyContent: 'center'}}>\r\n          <Button variant=\"contained\" onClick={() => handleUpdateMedicalRegister()}>Sửa (F1)</Button>\r\n          <Button variant=\"contained\" color='secondary' onClick={(event, reason) => handleCloseModalInfoPantients(event, reason)}>Đóng (ESC)</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <AlertProcessing openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageInfoPantients","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//info pantients modal\r\nimport ManageInfoPantients from '../ManageInfoPantients/ManageInfoPantients';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//mui theme\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CachedIcon from '@mui/icons-material/Cached';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getRegistersByDateNow, getAppointmentsToday, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction ListPatientsRegister(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n  const [listPantientChipState, setListPantientChipState] = useState(\r\n    [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n    ]\r\n  )\r\n\r\n  const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n  \r\n  const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n  const [listDataPatientsAppointmentsToday, setListDataPatientsAppointmentsToday] = useState([]); \r\n  \r\n  const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n  const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n  const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n  const [selectedPantientInfo, setSelectedPantientInfo] = useState();\r\n  const [openModalInfoPantients, setOpenModalInfoPantients] = useState(false);\r\n  const [isContinueUpdateMedicalRegister, setIsContinueUpdateMedicalRegister] = useState();\r\n\r\n  const [isEditedInfo, setIsEditedInfo] = useState(false);\r\n\r\n  const renderPatientsStatus = (state) => {\r\n    if(state === 0 || state === 3){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterWaiting' />\r\n        </>\r\n      )\r\n    }\r\n    else if(state === 1){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterExamining' />\r\n        </>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterDone' />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSelectedChip = (chipIndex, chipLabel) => {\r\n    setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n    if(chipIndex === 0){\r\n      const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n      setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n    }\r\n    else if(chipIndex === 1){\r\n      const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n      setListDataPatientsRegisterState(listPantientRegisterDone);\r\n    }\r\n    else if(chipIndex === 2){\r\n      setListDataPatientsRegisterSort(listDataPatientsAppointmentsToday);\r\n      setListDataPatientsRegisterState(listDataPatientsAppointmentsToday);\r\n    }\r\n  };\r\n\r\n  const handleSearchPantient = (value) => {\r\n    const takenValue = value;\r\n    setSearchPatientsQuery(takenValue);\r\n\r\n    if(value === ''){\r\n      setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n    }else{\r\n      setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n    }\r\n  }\r\n\r\n  const searchPatients = (patients, searchTerm) => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return patients.filter(patientObj => {\r\n      const { patientCode, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n      return patientCode.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n    });\r\n  }\r\n\r\n  const handleSelectedPantientInfo = (patientsRegisterSortItem) => {\r\n    setSelectedPantientInfo(patientsRegisterSortItem);\r\n    setIsContinueUpdateMedicalRegister(true);\r\n    setOpenModalInfoPantients(true);\r\n  }\r\n\r\n  const handleSelectedPantientAppointmentsToday = async (patientsRegisterSortItem) => {\r\n    setOpenAlertProcessingBackdrop(true);\r\n    const responseVaccinationByPatientId = await getVaccinationByPatientId(patientsRegisterSortItem.patient.patientId);\r\n    const dataPantientOldOldDiseaseRegister = {\r\n      examinationId: patientsRegisterSortItem.patient.nextExamId,\r\n      oldDisease: true,\r\n      height: '', \r\n      weight: '',\r\n      headCircumference: '',\r\n      reason: '',\r\n      vaccination: responseVaccinationByPatientId.vaccination,\r\n      medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n      userIdDoctor: '',\r\n      patient: patientsRegisterSortItem.patient\r\n    }\r\n    props.setDataPantientAppointmentsToday(dataPantientOldOldDiseaseRegister)\r\n    setOpenAlertProcessingBackdrop(false);\r\n  }\r\n\r\n  const handleGetRegistersByDateNow = async () => {\r\n    setLoading(true);\r\n\r\n    const response = await getRegistersByDateNow();\r\n    const responseGetAppointmentsToday = await getAppointmentsToday();\r\n\r\n    let updatedList = [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: responseGetAppointmentsToday.length }\r\n    ]\r\n\r\n    let _listDataPatientsAppointmentsToday\r\n    if(responseGetAppointmentsToday.length > 0){\r\n      _listDataPatientsAppointmentsToday = responseGetAppointmentsToday.map((item) => {\r\n        const result = {\r\n          patient : {\r\n            identifier: item.identifier,\r\n            patientId: item.patientId,\r\n            patientCode: item.patientCode,\r\n            fullName: item.patientFullName,\r\n            gender: item.gender,\r\n            dayOfBirth: item.dateOfBirth,\r\n            fullNameMother: item.fullNameMother,\r\n            phoneMother: item.phoneMother,\r\n            fullNameFather: item.fullNameFather,\r\n            phoneFather: item.phoneFather,\r\n            address: item.address,\r\n            fullAddress: item.fullAddress,\r\n            codeWard: item.codeWard,\r\n            nextExamId: item.nextExamId\r\n          }\r\n        }\r\n        return result;\r\n      })\r\n      setListDataPatientsAppointmentsToday(_listDataPatientsAppointmentsToday);\r\n    }\r\n    else{\r\n      setListDataPatientsAppointmentsToday(responseGetAppointmentsToday)\r\n    }\r\n\r\n    if(response !== 400){\r\n      if(response.list.length !== 0){\r\n        setListDataPatientsRegister(response.list);\r\n        if(activeChip.chipOrder === 0){\r\n          const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám và tái khám\r\n          setListDataPatientsRegisterSort(_.cloneDeep(listPantientRegisterWaiting));\r\n          setListDataPatientsRegisterState(_.cloneDeep(listPantientRegisterWaiting));\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(_.cloneDeep(listPantientRegisterDone));\r\n          setListDataPatientsRegisterState(_.cloneDeep(listPantientRegisterDone));\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 2){\r\n          setListDataPatientsRegisterSort(_.cloneDeep(_listDataPatientsAppointmentsToday));\r\n          setListDataPatientsRegisterState(_.cloneDeep(_listDataPatientsAppointmentsToday));\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n      }\r\n    }\r\n    setListPantientChipState(updatedList);\r\n\r\n    if(isEditedInfo){\r\n      setIsEditedInfo(false);\r\n    }\r\n\r\n    props.setComponent1Loading(false);\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleReloadGetRegistersByDateNow = async () => {\r\n    props.setComponent1Loading(true);\r\n    await handleGetRegistersByDateNow();\r\n    props.setComponent1Loading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetRegistersByDateNow();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(openModalInfoPantients){\r\n      const handleKeyDown = (event) => {\r\n        if(event.keyCode === 112){\r\n          event.preventDefault()\r\n          setIsContinueUpdateMedicalRegister(true);\r\n          //nhấn F1 để sửa thông tin đăng ký khám\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [openModalInfoPantients, isContinueUpdateMedicalRegister]);\r\n\r\n  useEffect(() => {\r\n    if(isEditedInfo){\r\n      handleGetRegistersByDateNow();\r\n    }\r\n  }, [isEditedInfo, listDataPatientsRegister, listDataPatientsRegisterSort])\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true && isEditedInfo === false){\r\n      setListDataPatientsRegister([]);\r\n      setListDataPatientsRegisterSort([]);\r\n      setListDataPatientsRegisterState([]);\r\n      handleGetRegistersByDateNow();\r\n      props.setCompleteMedicalRegister(false);\r\n    }\r\n  }, [props.completeMedicalRegister, listDataPatientsRegister, listDataPatientsRegisterSort])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{p: 0}}>\r\n        {/* <Typography variant='h6' sx={{color: 'red', mb: 0, fontWeight: 'bolder', fontSize: '1.16rem', marginBottom: '5px'}}>\r\n          {loading ? \r\n            <Skeleton /> \r\n          : \r\n            <div style={{display: 'flex', height: '30px'}}>\r\n              {props.currentDoctorExamining.userIdDoctor !== '' ?\r\n              <>\r\n                <Typography variant='subbtitle1'>{`Bác sĩ khám hôm nay: ${props.currentDoctorExamining.userFullName}`}</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Sửa'/>\r\n              </>\r\n              :\r\n              <>\r\n                <Typography variant='subbtitle1'>Chưa chọn bác sĩ khám hôm nay</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Thêm'/>\r\n              </>}\r\n            </div>\r\n          }\r\n        </Typography> */}\r\n\r\n        <div className='container' style={{border: '1px solid #fff', borderRadius: '10px', height: '590px', padding: 0, boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)'}}>\r\n          {loading ? \r\n             <>\r\n              <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                <CircularProgress/>\r\n                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n              </Box>        \r\n            </>\r\n          :\r\n            <>\r\n              <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                  <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                    <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                      onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                  </Badge>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Box sx={{mt: 0.2, position: 'relative', display: 'flex', justifyContent: 'center', flexDirection: 'column'}}> \r\n                <Typography variant=\"subtitle2\" sx={{textAlign: 'center', mt: 0.2, fontSize: '1rem'}}>Nếu không tìm thấy bệnh nhân, hãy nhấn nút tải lại phía dưới</Typography>\r\n                <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                <CachedIcon sx={{color: 'brown', fontWeight: 'bolder', position: 'absolute', right: 75, top: 30, fontSize: '2.5rem', cursor: 'pointer'}} titleAccess='Tải lại' onClick={() => handleReloadGetRegistersByDateNow()}/>\r\n              </Box>\r\n            \r\n              <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                <TextField sx={{mt: 0.2, mb: 1, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                  variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc SĐT' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    startAdornment: (\r\n                      <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                    ),\r\n                    endAdornment: (\r\n                      <InputAdornment position='end'>\r\n                        {searchPatientsQuery !== '' ? \r\n                          <CloseIcon sx={{cursor: 'pointer'}} \r\n                            titleAccess='Xóa'\r\n                            onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                          /> \r\n                        : \r\n                          null\r\n                        }\r\n                      </InputAdornment>  \r\n                    )\r\n                  }}>\r\n                </TextField>\r\n              </Box>\r\n\r\n              <TableContainer component={Paper} sx={{ height: '440px', overflowX: 'scroll', borderBottomLeftRadius: '10px', borderBottomRightRadius: '10px' }}>\r\n                <Table stickyHeader sx={{ minWidth: 1200 }}>\r\n                  <TableHead>\r\n                    <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                      {activeChip.chipOrder === 2 ? \r\n                        null\r\n                      :\r\n                        <>\r\n                          <TableCell align=\"left\" sx={{fontSize: '0.95rem', p: '10px'}}>Trạng thái</TableCell>\r\n                          <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                        </>\r\n                      }\r\n                      <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {listDataPatientsRegisterSort.length !== 0 ?\r\n                      <>\r\n                        {listDataPatientsRegisterSort.map((patientsRegisterSortItem, patientsRegisterSortIndex) => (\r\n                          <TableRow hover role=\"checkbox\" key={patientsRegisterSortIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => activeChip.chipOrder === 2 ? handleSelectedPantientAppointmentsToday(patientsRegisterSortItem) : handleSelectedPantientInfo(patientsRegisterSortItem)}>\r\n                            {activeChip.chipOrder === 2 ? \r\n                              null\r\n                            :\r\n                              <>\r\n                                <TableCell align='center' sx={{width: '90px'}}>\r\n                                  <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.state === 0 || patientsRegisterSortItem.state === 3 ? 'Chờ khám' : patientsRegisterSortItem.state === 2 ? 'Đã khám' : 'Đang khám'}</Typography>} >\r\n                                    <span>{renderPatientsStatus(patientsRegisterSortItem.state)}</span>\r\n                                  </Tooltip>\r\n                                </TableCell>\r\n                                <TableCell align='left' sx={{width: '20px'}}>{patientsRegisterSortItem.order}</TableCell>\r\n                              </>\r\n                            }\r\n                            <TableCell align='left' sx={{width: '150px'}}>{patientsRegisterSortItem.patient.patientCode}</TableCell>\r\n                            <TableCell align='left' sx={{width: '200px'}}>{patientsRegisterSortItem.patient.fullName}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{patientsRegisterSortItem.patient.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{moment(patientsRegisterSortItem.patient.dayOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                            <TableCell align='left' sx={{width: '140px'}}>{patientsRegisterSortItem.patient.phoneMother !== '' ? patientsRegisterSortItem.patient.phoneMother : patientsRegisterSortItem.patient.phoneFather}</TableCell>\r\n                            <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 120}}>\r\n                              <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.patient.fullAddress}</Typography>} >\r\n                                <span>{patientsRegisterSortItem.patient.fullAddress}</span>\r\n                              </Tooltip>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))} \r\n                      </>\r\n                    :\r\n                      null\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </>\r\n          }\r\n        </div>\r\n      </Box>\r\n      \r\n      <AlertProcessingBackdrop openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n      />\r\n\r\n      <ManageInfoPantients \r\n        openModalInfoPantients={openModalInfoPantients} setOpenModalInfoPantients={setOpenModalInfoPantients}\r\n        selectedPantientInfo={selectedPantientInfo} setSelectedPantientInfo={setSelectedPantientInfo}\r\n        isContinueUpdateMedicalRegister={isContinueUpdateMedicalRegister} setIsContinueUpdateMedicalRegister={setIsContinueUpdateMedicalRegister}\r\n        setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        setIsEditedInfo={setIsEditedInfo}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListPatientsRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//modal\r\n// import AlertConfirmModal from '../ManageAlertConfirm/AlertConfirm';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//api\r\nimport { createMedicalRegister, createMedicalBackRegister, createNotificationForMedicalRegister, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister } from '../../Service/MedicalService';\r\n\r\nfunction ExaminingSession(props) {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [listExaminingSession, setListExaminingSession] = useState(null);\r\n\r\n    const { isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n    const onChangeRadioSelect = (value) => {\r\n        props.dataPatientsRegister.examinationId = value;\r\n    }\r\n\r\n    const handleListMedicalExaminationsGiveRegister = async () =>  {\r\n        if(props.dataPatientsRegister.oldDisease){\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveOldRegister(props.dataPatientsRegister.patient.dayOfBirth, props.dataPatientsRegister.patient.patientCode);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n        else{\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveRegister(props.dataPatientsRegister.patient.dayOfBirth);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    const handleMedicalRegister = async () => {\r\n        // //bệnh cũ\r\n        if(props.dataPatientsRegister.oldDisease === true && props.dataPatientsRegister.examinationId !== ''){\r\n            //là bênh mới đã đăng ký nhưng chưa từng khám bao giờ\r\n            if(listExaminingSession.isAppointment === false && listExaminingSession.oldExams.length === 0){\r\n                //setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                if(response.status === 200){\r\n                    await createNotificationForMedicalRegister();\r\n                    if(isOldDiseaseWithNullCodeWard){\r\n                        setIsOldDiseaseWithNullCodeWard(false);\r\n                    }\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n                setOpenAlertProcessing(false);\r\n            }\r\n            //có hẹn khám nhưng không nhắc khám hoặc đến trễ ngày hẹn khám\r\n            else{\r\n                //setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                if(response.status === 200){\r\n                    await createNotificationForMedicalRegister();\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n                setOpenAlertProcessing(false);\r\n            }\r\n        }\r\n        //bệnh mới\r\n        else{\r\n            //setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalRegister(props.dataPatientsRegister);\r\n\r\n            if(response.status === 200){\r\n                await createNotificationForMedicalRegister();\r\n                toast.success(response.data);\r\n                setListExaminingSession(null);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    const handleCloseConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n      };\r\n\r\n    const handleOpenConfirm = () => {\r\n        if(props.dataPatientsRegister.examinationId === ''){\r\n            // setIsConfirmOpen(false);\r\n            toast.error('Bạn chưa chọn kỳ khám', {toastId: 'error1'});\r\n        }\r\n        else{\r\n            //setIsConfirmOpen(true);\r\n            handleMedicalRegister();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.dataPatientsRegister.patient.dayOfBirth !== '' && props.openModalExaminingSession === true){\r\n            handleListMedicalExaminationsGiveRegister();\r\n        }\r\n    }, [props.openModalExaminingSession])\r\n\r\n    useEffect(() => {\r\n        if(props.isContinueSelectedExaminingSession === true){\r\n            //nhấn F2 để hoàn tất đăng ký khám\r\n            handleOpenConfirm();\r\n            props.setIsContinueSelectedExaminingSession(false);\r\n        }\r\n    }, [props.isContinueSelectedExaminingSession])\r\n\r\n    return (\r\n        <>\r\n            {listExaminingSession ? \r\n                <>\r\n                    <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalExaminingSession} disableEscapeKeyDown={true}>\r\n                        <DialogTitle \r\n                            sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'green', textTransform: 'uppercase' }}>\r\n                            {`${props.dataPatientsRegister.patient.fullName}, \r\n                            ${props.dataPatientsRegister.patient.gender === true ? 'Nam' : 'Nữ'}, \r\n                            ${listExaminingSession.monthsOfAge}`}\r\n                        </DialogTitle>\r\n\r\n                        <IconButton onClick={() => [props.setOpenModalExaminingSession(false), props.dataPatientsRegister.examinationId = '', setListExaminingSession(null)]} \r\n                            sx={{position: 'absolute', right: 5, top: 7}}>\r\n                                <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n\r\n                        <DialogContent dividers sx={{pl: '0px', pr: '0px'}}>\r\n                            <Grid container rowSpacing={0}>\r\n                                <Grid item xs={0.5}/>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid black', p: 1, height: '50vh', overflow: 'auto'}}>\r\n                                        <Typography variant='h6' sx={{fontWeight: 'bolder'}}>Lịch sử khám</Typography>\r\n                                        {listExaminingSession.oldExams ?\r\n                                            listExaminingSession.oldExams.map((oldExamItem, oldExamIndex) => (\r\n                                                <Typography key={oldExamIndex} variant='subtitle1'>{oldExamItem.name}</Typography>\r\n                                            ))\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </Box>  \r\n                                </Grid>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid red', p: 1, height: '50vh'}}>\r\n                                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', color: 'red'}}>Chọn kỳ khám</Typography>\r\n                                            <RadioGroup key={`${props.dataPatientsRegister.patient.patientCode}`} defaultValue={listExaminingSession.exams[0].id} onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                {listExaminingSession.exams.map((examItem, examIndex) => (\r\n                                                    <FormControlLabel key={`${examIndex}`} value={examItem.id} control={<Radio />} label={examItem.name} />\r\n                                                ))}\r\n                                            </RadioGroup>\r\n                                            <Button variant='contained' sx={{mt: 0.5}} onClick={() => handleOpenConfirm()}>Tiếp tục (F2)</Button> \r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </>\r\n            :\r\n                null\r\n            }\r\n\r\n            {/* <AlertConfirmModal \r\n                openAlertConfirmModal={isConfirmOpen} onCloseAlertConfirmModal={handleCloseConfirm} \r\n                onConfirmAlertConfirmModal={handleMedicalRegister} \r\n                titleConfirm=\"Đăng ký khám cho bệnh nhân?\"\r\n            /> */}\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExaminingSession","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListOldDisease, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDisease(props) {\r\n\r\n    const dataPatientsForSearchOldDiseaseDefault = {patientCode: '', phone: '', fullName: '', dayOfBirth: ''}\r\n    const dataPatientsForSearchOldDiseaseErrorDefault = {\r\n        patientCode: { title: '', isError: false, openTooltip: false, focus: false},\r\n        phone: { title: '', isError: false, openTooltip: false, focus: false },\r\n        fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n        dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n    \r\n    const [listFoundOldDisease, setListFoundOldDisease] = useState(null);\r\n    const [dataPatientsForSearchOldDisease, setDataPatientsForSearchOldDisease] = useState(dataPatientsForSearchOldDiseaseDefault);\r\n    const [dataPatientsForSearchOldDiseaseError, setDataPatientsForSearchOldDiseaseError] = useState(dataPatientsForSearchOldDiseaseErrorDefault);\r\n    const [focusField, setFocusField] = useState(null);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n\r\n    const dateFieldRef = useRef(null);\r\n    const formRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n    const tooltipTheme = createTheme({\r\n        components: {\r\n          MuiTooltip: {\r\n            defaultProps: {\r\n              placement: 'bottom',\r\n              arrow: true,\r\n              componentsProps: {\r\n                tooltip: {\r\n                  sx: {\r\n                    bgcolor: '#d32f2f',\r\n                  },\r\n                },\r\n                arrow: {\r\n                  sx: {\r\n                    color: '#d32f2f',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n    });\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key !== 'Enter') \r\n        {\r\n            event.preventDefault();\r\n        }\r\n        else if(event.key === 'Enter'){\r\n            handleEnterPress(event);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (value, fieldName) => {\r\n        if(value === '' || value === 'DD/MM/YYYY'){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(fieldName === 'patientCode'){\r\n                if(typingRef.current){\r\n                    clearInterval(typingRef.current);\r\n                }\r\n                \r\n                typingRef.current = setTimeout(() => {  \r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }, 10)\r\n                \r\n                if(focusField === 'patientCode'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'dayOfBirth'){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'dayOfBirth'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'phone'){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const onChangePatientId = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 8){\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.title = 'Mã bệnh nhân phải từ 8 đến 14 số';\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'patientCode'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.patientCode = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n    }\r\n\r\n    const onChangeFullName = (value) => {\r\n        if(focusField === 'fullName'){\r\n            setFocusField(null);\r\n        }\r\n\r\n        setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n            prevDataPatientsForSearchOldDisease.fullName = value;\r\n            return {...prevDataPatientsForSearchOldDisease}\r\n        })\r\n\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);      \r\n    }\r\n\r\n    const onChangeDayOfBirth = (value) => {\r\n        if(value){            \r\n            const date = value._d;\r\n            const today = new Date();\r\n            const yearsDifference = today.getFullYear() - date.getFullYear();\r\n            const monthsDifference = today.getMonth() - date.getMonth();\r\n            const daysDifference = today.getDate() - date.getDate();\r\n            const age = today.getFullYear() - date.getFullYear();\r\n\r\n            let totalMonths = yearsDifference * 12 + monthsDifference;\r\n            let totalDays = daysDifference;\r\n\r\n            if (daysDifference < 0) {\r\n                totalMonths -= 1;\r\n                totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n            }\r\n\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n\r\n            if(today < date || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = true;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n              }\r\n              else{\r\n                const formattedDate = moment(date).format('YYYY-MM-DD');\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.dayOfBirth = formattedDate;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangePhone = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 10){\r\n                    _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'phone'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.phone = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n\r\n\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 10){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.phone = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        }\r\n    }\r\n\r\n    const handleCloseModalOldDisease = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n          else{\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            setListFoundOldDisease(null);\r\n            setSelectedRowIndex(0);\r\n            props.setOpenModalOldDisease(false);\r\n        }\r\n    }\r\n\r\n    const handleResetField = () => {\r\n        formRef.current.reset();\r\n        const inputs = formRef.current.querySelectorAll('input, textarea');\r\n        inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n        setFocusField(null);\r\n    }\r\n\r\n    const validate = () => {\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        let isValid = true;\r\n\r\n        if(dataPatientsForSearchOldDisease.patientCode === '' && dataPatientsForSearchOldDisease.fullName === '' && \r\n            dataPatientsForSearchOldDisease.dayOfBirth === '' && dataPatientsForSearchOldDisease.phone === '')\r\n        {\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.fullName.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.patientCode.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.focus = true;\r\n                setFocusField('patientCode');\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.dayOfBirth.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                if (dateFieldRef.current) {\r\n                    dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n                }\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.phone.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.phone.focus = true;\r\n                setFocusField('phone');\r\n            }\r\n            isValid = false;\r\n        }\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        return isValid;\r\n    }\r\n\r\n    const handleFindOldDisease = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        setOpenAlertProcessing(true);\r\n        const response = await getListOldDisease(dataPatientsForSearchOldDisease.patientCode, dataPatientsForSearchOldDisease.phone, dataPatientsForSearchOldDisease.fullName, dataPatientsForSearchOldDisease.dayOfBirth, '');\r\n        setOpenAlertProcessing(false);\r\n        setListFoundOldDisease(response);\r\n        setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n        setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n        handleResetField();\r\n        if(response.length > 0){\r\n            tableRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleClickFindOldDisease = () => {\r\n        if(validate()){\r\n            handleFindOldDisease()\r\n        }\r\n    }\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleClickFindOldDisease();\r\n        }\r\n    }\r\n\r\n    const handleTableKeyDown = (event) => {\r\n        if (event.key === 'ArrowDown') {\r\n            setSelectedRowIndex((prevIndex) => (Math.min(prevIndex + 1, listFoundOldDisease.length - 1)));\r\n        } else if (event.key === 'ArrowUp') {\r\n            setSelectedRowIndex((prevIndex) => (Math.max(prevIndex - 1, 0)));\r\n        } else if (event.key === 'Enter' && selectedRowIndex !== null){\r\n            handleApplyDataPatientOldDisease(listFoundOldDisease[selectedRowIndex])\r\n        }\r\n    };\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            oldDiseaseWithNullCodeWard: foundOldDiseaseItem.codeWard ? false : true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientCode: foundOldDiseaseItem.patientCode,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseModalOldDisease();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalOldDisease} onClose={(event, reason) => handleCloseModalOldDisease(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Tìm bệnh cũ</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalOldDisease()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{p: '10px 24px'}}>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around'}} component=\"form\" ref={formRef}>\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.patientCode.title}</h6>} open={dataPatientsForSearchOldDiseaseError.patientCode.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.patientCode.isError === true : false}\r\n                                    label=\"Mã BN\" variant=\"outlined\" size='small'\r\n                                    autoFocus\r\n                                    inputRef={(input) => input && focusField === 'patientCode' && input.focus()}\r\n                                    inputProps={{ maxLength: 14 }}\r\n                                    onChange={(e) => onChangePatientId(e.target.value)}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'patientCode')}\r\n                                    onKeyDown={handleKeyDown} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.fullName.title}</h6>} open={dataPatientsForSearchOldDiseaseError.fullName.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.fullName.isError === true : false}\r\n                                    label=\"Họ tên\" variant=\"outlined\" size='small'\r\n                                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                                    onKeyDown={(e) => handleEnterPress(e)} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                            <ThemeProvider theme={tooltipTheme}>\r\n                                <DemoContainer components={['DatePicker']}>\r\n                                    <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.dayOfBirth.title}</h6>} open={dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip}>    \r\n                                        <Box sx={{width: 222}}>\r\n                                            <DatePicker label=\"Ngày sinh\" format='DD/MM/YYYY' \r\n                                                disableFuture={true} disableOpenPicker \r\n                                                renderInput={(params) => <TextField {...params} size='small' />}\r\n                                                slotProps={{  \r\n                                                    textField: \r\n                                                    { \r\n                                                        inputRef: dateFieldRef,\r\n                                                        error: true ? dataPatientsForSearchOldDiseaseError.dayOfBirth.isError === true : false, \r\n                                                        size: 'small', \r\n                                                        onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                                        onKeyDown: (e) => handleEnterPress(e)\r\n                                                    }, \r\n                                                }}\r\n                                                onChange={(value) => onChangeDayOfBirth(value)}\r\n                                            />\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                </DemoContainer>\r\n                            </ThemeProvider>      \r\n                        </LocalizationProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.phone.title}</h6>} open={dataPatientsForSearchOldDiseaseError.phone.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                                    inputRef={(input) => input && focusField === 'phone' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.phone.isError === true : false}\r\n                                    label=\"Điện thoại cha/mẹ\" variant=\"outlined\" size='small'\r\n                                    inputProps={{ maxLength: 10 }}\r\n                                    onChange={(e) => onChangePhone(e.target.value)}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'phone')}\r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 1.6}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleClickFindOldDisease()}>Tìm (Enter)</Button>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        {\r\n                            listFoundOldDisease ? \r\n                                listFoundOldDisease.length !== 0 ? \r\n                                <>\r\n                                    <TableContainer component={Paper} sx={{boxShadow: 4, mt: 1.4}} tabIndex={0} onKeyDown={(event) => handleTableKeyDown(event)} ref={tableRef}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Điện thoại</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listFoundOldDisease ? \r\n                                                    listFoundOldDisease.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                        <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} \r\n                                                            selected={selectedRowIndex === foundOldDiseaseIndex} \r\n                                                            onDoubleClick={() => handleApplyDataPatientOldDisease(foundOldDiseaseItem)}\r\n                                                        >\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.patientCode}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                            <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.phoneMother || foundOldDiseaseItem.phoneFather}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'green'}}>Tìm thấy {listFoundOldDisease.length} bệnh nhân</Typography>\r\n                                </>\r\n                                : \r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'red'}}>Không tìm thấy bệnh nhân</Typography>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Box>  \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDisease","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDiseaseForRegister(props) {\r\n\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const handleCloseOldDiseaseRegister = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            props.setOpenOldDiseaseRegister(false);\r\n        }\r\n    }\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            oldDiseaseWithNullCodeWard: foundOldDiseaseItem.codeWard ? false : true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientCode: foundOldDiseaseItem.patientCode,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseOldDiseaseRegister();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openOldDiseaseRegister} onClose={(event, reason) => handleCloseOldDiseaseRegister(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{padding: '10px 0px 10px 0px', fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Bệnh nhân đã tham gia khám định kỳ thuộc danh sách dưới đây?</DialogTitle>\r\n                <IconButton onClick={() => handleCloseOldDiseaseRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent sx={{padding: '0px 18px 0px 18px', mt: 0, mb: 3}}>\r\n                    {props.listOldDiseaseRegister.length !== 0 ?\r\n                        <>\r\n                            <TableContainer component={Paper} sx={{boxShadow: 4}}>\r\n                                <Table stickyHeader>\r\n                                    <TableHead>\r\n                                        <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                            <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Điện thoại</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            props.listOldDiseaseRegister.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => handleApplyDataPatientOldDisease(foundOldDiseaseItem)}>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.patientCode}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                    <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.phoneMother || foundOldDiseaseItem.phoneFather}</TableCell>\r\n                                                </TableRow>\r\n                                            ))\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </>\r\n                    :\r\n                        null\r\n                    }\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDiseaseForRegister","import React, { useContext, useState, useEffect, useRef } from 'react';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//ExaminingSessios modal\r\nimport ExaminingSession from '../ManageExaminingSession/ExaminingSession';\r\n//old disease modal\r\nimport OldDisease from '../ManageOldDisease/OldDisease';\r\nimport OldDiseaseForRegister from '../ManageOldDisease/OldDiseaseForRegister';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateField } from '@mui/x-date-pickers/DateField';\r\n//lodash\r\nimport _ from 'lodash';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { createMedicalBackRegister, getListOldDisease } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction BookMedical(props) {\r\n\r\n  const dataPatientsRegisterDefault = {\r\n    examinationId: '',\r\n    oldDisease: false,\r\n    height: '',\r\n    weight: '',\r\n    headCircumference: '',\r\n    reason: '',\r\n    vaccination: false,\r\n    medicalTypeId: '',\r\n    userIdDoctor: '',\r\n    patient: {\r\n      patientCode: '',\r\n      identifier: '',\r\n      address: '',\r\n      fullName: '',\r\n      dayOfBirth: '',\r\n      codeWard: '',\r\n      gender: '',\r\n      fullNameMother: '',\r\n      phoneMother: '',\r\n      fullNameFather: '',\r\n      phoneFather: ''\r\n    }\r\n  }\r\n\r\n  const autocompleteValueDefault = { \r\n    dayOfBirth: null, \r\n    gender: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    province: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    district: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    ward: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    medicalType: {\r\n      value: null,\r\n      openOption: false\r\n    },\r\n    vaccination: false \r\n  }\r\n\r\n  const dataPatientsRegisterErrorDefault = { \r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    patientCode: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n    medicalType: { title: '', isError: false, openTooltip: false, focus: false },\r\n    reason: { title: '', isError: false, openTooltip: false, focus: false }\r\n  }\r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const listMedicalType = [\r\n    {medicalTypeOrder: 1, medicalTypeName: 'Khám Nhi khoa phát triển', medicalTypeId: 1},\r\n    {medicalTypeOrder: 2, medicalTypeName: 'Khám trẻ nguy cơ cao', medicalTypeId: 2},\r\n  ]\r\n\r\n  const { isDialogChangePasswordOpen, isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n  const [openModalExaminingSession, setOpenModalExaminingSession] = useState(false);\r\n  const [isContinueSelectedExaminingSession, setIsContinueSelectedExaminingSession] = useState(false);\r\n\r\n  const [openModalOldDisease, setOpenModalOldDisease] = useState(false);\r\n\r\n  const [openOldDiseaseRegister, setOpenOldDiseaseRegister] = useState(false);\r\n  const [listOldDiseaseRegister, setListOldDiseaseRegister] = useState([]);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const [dataPatientsRegister, setDataPatientsRegister] = useState(dataPatientsRegisterDefault);\r\n  const [dataPatientsRegisterError, setDataPatientsRegisterError] = useState(dataPatientsRegisterErrorDefault);\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [autocompleteValue, setAutocompleteValue] = useState(autocompleteValueDefault);\r\n\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const formRef = useRef(null);\r\n  const firstFocusRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n  const typingRef = useRef(null);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f', \r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -7],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleKeyDown = (event, nextFieldId) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key === 'Enter') \r\n    {\r\n      if(event.key === 'Enter'){\r\n        event.preventDefault();\r\n        const nextField = document.getElementById(dataPatientsRegister.oldDiseaseWithNullCodeWard && nextFieldId === 'patientAddress' ? 'patientWeight' : nextFieldId); // Tìm trường tiếp theo dựa trên ID\r\n        if (nextField) {\r\n          nextField.focus();\r\n          nextField.select(); // Đảm bảo con trỏ chuột xuất hiện\r\n        }\r\n      }\r\n      else{\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  \r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n\r\n    // Xử lý đặc biệt cho \"d\" và \"đ\"\r\n    const replaceSpecialCharacters = str => str.replace(/đ/g, 'd');\r\n\r\n    return options.filter(option => {\r\n        const lowercasedFullName = replaceSpecialCharacters(option.fullName.toLowerCase());\r\n        const initials = replaceSpecialCharacters(option.fullName.split(' ').map(word => word[0]).join('').toLowerCase());\r\n\r\n        const normalizedInput = replaceSpecialCharacters(lowercasedInput);\r\n\r\n        return (\r\n            lowercasedFullName.includes(normalizedInput) ||\r\n            initials.includes(normalizedInput)\r\n        );\r\n    });\r\n  };\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.gender.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.province.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Ward'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'MedicalType'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.medicalType.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n      if(fieldName === 'Identifier'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n        _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.dayOfBirth.title = '';\r\n      //     _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n      //   _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PatientId'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.patientCode.title = '';\r\n      //     _dataPatientsRegisterError.patientCode.openTooltip = false;\r\n      //     _dataPatientsRegisterError.patientCode.isError = false;\r\n      //     _dataPatientsRegisterError.patientCode.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.phoneMother.title = '';\r\n      //     _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      //     _dataPatientsRegisterError.phoneMother.isError = false;\r\n      //     _dataPatientsRegisterError.phoneFather.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      if(fieldName === 'PhoneFather'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.patientCode.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      else if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientsRegisterError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientsRegisterError.identifier.openTooltip = true;\r\n          _dataPatientsRegisterError.identifier.isError = true;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.identifier.title = '';\r\n      _dataPatientsRegisterError.identifier.openTooltip = false;\r\n      _dataPatientsRegisterError.identifier.isError = false;\r\n      _dataPatientsRegisterError.identifier.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangePatientId = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 8){\r\n          _dataPatientsRegisterError.patientCode.title = 'Mã BN phải từ 8 đến 14 số';\r\n          _dataPatientsRegisterError.patientCode.openTooltip = true;\r\n          _dataPatientsRegisterError.patientCode.isError = true;\r\n          _dataPatientsRegisterError.patientCode.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          if(focusField === 'patientCode'){\r\n            setFocusField(null);\r\n          }\r\n          \r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.patientCode = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.patientCode.title = '';\r\n          _dataPatientsRegisterError.patientCode.openTooltip = false;\r\n          _dataPatientsRegisterError.patientCode.isError = false;\r\n          _dataPatientsRegisterError.patientCode.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        \r\n        if(dataPatientsRegister.patient.patientCode.length === 14){\r\n          handleFindOldDisease()\r\n        }\r\n      }, 100)\r\n    }\r\n    // else{\r\n    //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n    //   _dataPatientsRegisterError.patientCode.title = '';\r\n    //   _dataPatientsRegisterError.patientCode.openTooltip = false;\r\n    //   _dataPatientsRegisterError.patientCode.isError = false;\r\n    //   _dataPatientsRegisterError.patientCode.focus = false;\r\n    //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    // }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullName = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      if(dataPatientsRegisterError.fullName.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullName.title = '';\r\n        _dataPatientsRegisterError.fullName.openTooltip = false;\r\n        _dataPatientsRegisterError.fullName.isError = false;\r\n        _dataPatientsRegisterError.fullName.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n\r\n    // setTimeout(() => {\r\n    //   if(dataPatientsRegister.patient.fullName !== ''){\r\n    //     handleFindOldDisease()\r\n    //   }\r\n    // }, 500)\r\n  }\r\n\r\n  const onChangeDOB = (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n\r\n        if(today < takenValue || age > 2 || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientsRegisterError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n        }\r\n\r\n        else{\r\n          if(focusField === 'dayOfBirth'){\r\n            setFocusField(null);\r\n          }\r\n\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n          prevDataPatientsRegister.patient.dayOfBirth = formattedDate\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.dayOfBirth.title = '';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n\r\n      // if(dataPatientsRegister.patient.dayOfBirth !== ''){\r\n      //   handleFindOldDisease()\r\n      // }\r\n    }  \r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.gender = value.genderValue\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.gender.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.gender.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.gender.title = '';\r\n      _dataPatientsRegisterError.gender.openTooltip = false;\r\n      _dataPatientsRegisterError.gender.isError = false;\r\n      _dataPatientsRegisterError.gender.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n    //   handleFindOldDisease();\r\n    // }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.province.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.district.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.province.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.province.title = '';\r\n      _dataPatientsRegisterError.province.openTooltip = false;\r\n      _dataPatientsRegisterError.province.isError = false;\r\n      _dataPatientsRegisterError.province.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.district.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.district.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.district.title = '';\r\n      _dataPatientsRegisterError.district.openTooltip = false;\r\n      _dataPatientsRegisterError.district.isError = false;\r\n      _dataPatientsRegisterError.district.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n    \r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.codeWard = value.code\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.ward.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.ward.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.ward.title = '';\r\n      _dataPatientsRegisterError.ward.openTooltip = false;\r\n      _dataPatientsRegisterError.ward.isError = false;\r\n      _dataPatientsRegisterError.ward.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeFolk = (value) => {\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'address'){\r\n        setFocusField(null);\r\n      }\r\n      \r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.address = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.address.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.address.title = '';\r\n        _dataPatientsRegisterError.address.openTooltip = false;\r\n        _dataPatientsRegisterError.address.isError = false;\r\n        _dataPatientsRegisterError.address.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'fullNameMother'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameMother = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        if(focusField === 'phoneMother'){\r\n          setFocusField(null);\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneMother.isError = true;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneMother = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneMother.title = '';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneMother.isError = false;\r\n      _dataPatientsRegisterError.phoneMother.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    } \r\n    // if(dataPatientsRegister.patient.phoneMother.length === 10){\r\n    //   handleFindOldDisease()\r\n    // }\r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    if(focusField === 'fullNameFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameFather = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (e, value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneFather.isError = true;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneFather = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'phoneFather'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneFather.title = '';\r\n      _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneFather.isError = false;\r\n      _dataPatientsRegisterError.phoneFather.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.phoneFather.length === 10){\r\n    //   handleFindOldDisease()\r\n    // }\r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'height'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.height = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.height.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.height.title = '';\r\n        _dataPatientsRegisterError.height.openTooltip = false;\r\n        _dataPatientsRegisterError.height.isError = false;\r\n        _dataPatientsRegisterError.height.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'weight'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.weight = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.weight.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.weight.title = '';\r\n        _dataPatientsRegisterError.weight.openTooltip = false;\r\n        _dataPatientsRegisterError.weight.isError = false;\r\n        _dataPatientsRegisterError.weight.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'headCircumference'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.headCircumference = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.headCircumference.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.headCircumference.title = '';\r\n        _dataPatientsRegisterError.headCircumference.openTooltip = false;\r\n        _dataPatientsRegisterError.headCircumference.isError = false;\r\n        _dataPatientsRegisterError.headCircumference.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onSelectMedicalType = (e, value) => {\r\n    if(focusField === 'medicalType'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.medicalTypeId = value.medicalTypeId\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.medicalType.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.medicalType.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.medicalType.title = '';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = false;\r\n      _dataPatientsRegisterError.medicalType.isError = false;\r\n      _dataPatientsRegisterError.medicalType.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeReason = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.reason = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      // if(dataPatientsRegisterError.reason.isError){\r\n      //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      //   _dataPatientsRegisterError.reason.isError = false;\r\n      //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.vaccination = bool\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.vaccination = bool\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkValidate = () => {\r\n    let isValid = true;\r\n    const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n\r\n    if(dataPatientsRegisterError.identifier.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.identifier.focus = true;\r\n        setFocusField('identifier');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.patientCode === ''){\r\n      _dataPatientsRegisterError.patientCode.title = 'Bạn chưa nhập mã bệnh nhân';\r\n      _dataPatientsRegisterError.patientCode.openTooltip = true;\r\n      _dataPatientsRegisterError.patientCode.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientCode.focus = true;\r\n        setFocusField('patientCode');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.patientCode.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientCode.focus = true;\r\n        setFocusField('patientCode');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullName === ''){\r\n      _dataPatientsRegisterError.fullName.title = 'Bạn chưa nhập họ tên';\r\n      _dataPatientsRegisterError.fullName.openTooltip = true;\r\n      _dataPatientsRegisterError.fullName.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullName.focus = true;\r\n        setFocusField('fullName');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.dayOfBirth === ''){\r\n      _dataPatientsRegisterError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n      _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n      _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.dayOfBirth.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.gender === ''){\r\n      _dataPatientsRegisterError.gender.title = 'Bạn chưa chọn giới tính';\r\n      _dataPatientsRegisterError.gender.openTooltip = true;\r\n      _dataPatientsRegisterError.gender.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.gender.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n      setFocusField('gender');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.province.value === null){\r\n      _dataPatientsRegisterError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n      _dataPatientsRegisterError.province.openTooltip = true;\r\n      _dataPatientsRegisterError.province.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.province.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('province');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.district.value === null){\r\n      _dataPatientsRegisterError.district.title = 'Bạn chưa chọn quận huyện';\r\n      _dataPatientsRegisterError.district.openTooltip = true;\r\n      _dataPatientsRegisterError.district.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.district.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('district');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.ward.value === null){\r\n      _dataPatientsRegisterError.ward.title = 'Bạn chưa chọn phường xã';\r\n      _dataPatientsRegisterError.ward.openTooltip = true;\r\n      _dataPatientsRegisterError.ward.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.ward.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('ward');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.address === ''){\r\n      _dataPatientsRegisterError.address.title = 'Bạn chưa nhập địa chỉ';\r\n      _dataPatientsRegisterError.address.openTooltip = true;\r\n      _dataPatientsRegisterError.address.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.address.focus = true;\r\n        setFocusField('address');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullNameMother === '' && dataPatientsRegister.patient.fullNameFather === ''){\r\n      _dataPatientsRegisterError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n      _dataPatientsRegisterError.fullNameMother.openTooltip = true;\r\n      _dataPatientsRegisterError.fullNameMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullNameMother.focus = true;\r\n        setFocusField('fullNameMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.phoneMother === '' && dataPatientsRegister.patient.phoneFather === ''){\r\n      _dataPatientsRegisterError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n      _dataPatientsRegisterError.phoneMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneMother.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneFather.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneFather.focus = true;\r\n        setFocusField('phoneFather');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.weight === ''){\r\n      _dataPatientsRegisterError.weight.title = 'Bạn chưa nhập cân nặng';\r\n      _dataPatientsRegisterError.weight.openTooltip = true;\r\n      _dataPatientsRegisterError.weight.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.weight.focus = true;\r\n        setFocusField('weight');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.height === ''){\r\n      _dataPatientsRegisterError.height.title = 'Bạn chưa nhập chiều cao';\r\n      _dataPatientsRegisterError.height.openTooltip = true;\r\n      _dataPatientsRegisterError.height.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.height.focus = true;\r\n        setFocusField('height');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.headCircumference === ''){\r\n      _dataPatientsRegisterError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n      _dataPatientsRegisterError.headCircumference.openTooltip = true;\r\n      _dataPatientsRegisterError.headCircumference.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.headCircumference.focus = true;\r\n        setFocusField('headCircumference');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.medicalTypeId === ''){\r\n      _dataPatientsRegisterError.medicalType.title = 'Bạn chưa chọn loại hình khám';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = true;\r\n      _dataPatientsRegisterError.medicalType.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.medicalType.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('medicalType');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    // if(dataPatientsRegister.reason === ''){\r\n    //   _dataPatientsRegisterError.reason.isError = true;\r\n    //   isValid = false;\r\n    // }\r\n\r\n    setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    return isValid;\r\n  }\r\n\r\n  const handleMedicalRegister = () => {\r\n    setTimeout(() => {\r\n      if(checkValidate()){\r\n        firstFocusRef.current.focus();\r\n        if(props.dataPantientAppointmentsToday){\r\n          handleMedicalBackRegister();\r\n        }\r\n        else{\r\n          setOpenModalExaminingSession(true);\r\n        }\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const handleMedicalBackRegister = async () => {\r\n    setOpenAlertProcessing(true);\r\n    const responseCreateMedicalBackRegister = await createMedicalBackRegister(dataPatientsRegister);\r\n    if(responseCreateMedicalBackRegister.status === 200){\r\n      toast.success(responseCreateMedicalBackRegister.data, {toastId: 'success5'})\r\n      props.setCompleteMedicalRegister(true);\r\n      handleResetField();\r\n    }\r\n    else{\r\n      toast.error(responseCreateMedicalBackRegister.data, {toastId: 'error5'})\r\n    }\r\n    setOpenAlertProcessing(false);\r\n  }\r\n\r\n  const handleApplyPantientOldDiseaseData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = dataPatientsRegister.patient.identifier;\r\n    document.getElementById('patientCode').value = dataPatientsRegister.patient.patientCode;\r\n    document.getElementById('patientFullName').value = dataPatientsRegister.patient.fullName;\r\n\r\n    let _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(dataPatientsRegister.patient.dayOfBirth);\r\n\r\n    if(dataPatientsRegister.patient.codeWard){\r\n      const response = await getFullAddressByIdWard(dataPatientsRegister.patient.codeWard);\r\n      const responseListDistrict = await getListDistrict(response.provinceCode);\r\n      const responseListWard = await getListWard(response.districtCode);\r\n  \r\n      const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n      const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n      const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n      \r\n      _autocompleteValue.province.value = listProvince[indexListProvince];\r\n      _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n      _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n      _autocompleteValue.vaccination = dataPatientsRegister.vaccination;\r\n    }\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === dataPatientsRegister.patient.gender);\r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === dataPatientsRegister.medicalTypeId);\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    setIsOldDiseaseWithNullCodeWard(true);\r\n    \r\n    document.getElementById('patientAddress').value = dataPatientsRegister.patient.address;\r\n    document.getElementById('patientFullNameMother').value = dataPatientsRegister.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = dataPatientsRegister.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = dataPatientsRegister.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = dataPatientsRegister.patient.phoneFather;\r\n\r\n    if(dataPatientsRegister.oldDiseaseWithNullCodeWard){\r\n      setTimeout(() => {\r\n        setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n        setOpenAlertProcessing(false);\r\n\r\n        setFocusField('province');\r\n      }, 300)\r\n    }\r\n    else{\r\n      setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n      setOpenAlertProcessing(false);\r\n      \r\n      setFocusField('weight');\r\n    }\r\n  }\r\n\r\n  const handleApplyPantientAppointmentsTodayData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = props.dataPantientAppointmentsToday.patient.identifier;\r\n    document.getElementById('patientCode').value = props.dataPantientAppointmentsToday.patient.patientCode;\r\n    document.getElementById('patientFullName').value = props.dataPantientAppointmentsToday.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(props.dataPantientAppointmentsToday.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(props.dataPantientAppointmentsToday.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === props.dataPantientAppointmentsToday.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === props.dataPantientAppointmentsToday.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = props.dataPantientAppointmentsToday.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = props.dataPantientAppointmentsToday.patient.address;\r\n    document.getElementById('patientFullNameMother').value = props.dataPantientAppointmentsToday.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = props.dataPantientAppointmentsToday.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = props.dataPantientAppointmentsToday.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = props.dataPantientAppointmentsToday.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('weight');\r\n  }\r\n\r\n  const handleResetField = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n\r\n    const oldDisease = dataPatientsRegister.oldDisease ? true : false\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n\r\n    if(isOldDiseaseWithNullCodeWard){\r\n      setIsOldDiseaseWithNullCodeWard(false);\r\n    }\r\n\r\n    if(oldDisease){\r\n      setTimeout(() => {\r\n        firstFocusRef.current.focus();\r\n      }, 100)\r\n    }\r\n    else{\r\n      firstFocusRef.current.focus();\r\n    }\r\n  }\r\n\r\n  const handleOpenModalOldDisease = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n    firstFocusRef.current.focus();\r\n\r\n    if(isOldDiseaseWithNullCodeWard){\r\n      setIsOldDiseaseWithNullCodeWard(false);\r\n    }\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const response = await getListProvince();\r\n    if(response !== 400){\r\n      setListProvince(response);\r\n    }\r\n  }\r\n\r\n  const handleFindOldDisease = async () => {\r\n    const response = await getListOldDisease(dataPatientsRegister.patient.patientCode, dataPatientsRegister.patient.phoneMother ? dataPatientsRegister.patient.phoneMother : dataPatientsRegister.patient.phoneFather, dataPatientsRegister.patient.fullName, dataPatientsRegister.patient.dayOfBirth);\r\n    if(response.length !== 0){\r\n      setListOldDiseaseRegister(response);\r\n      setOpenOldDiseaseRegister(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetListProvince();\r\n    firstFocusRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(dataPatientsRegister.oldDisease === true){\r\n      handleApplyPantientOldDiseaseData();\r\n    }\r\n  }, [dataPatientsRegister.oldDisease])\r\n\r\n  useEffect(() => {\r\n    if(props.dataPantientAppointmentsToday){\r\n      setDataPatientsRegister(props.dataPantientAppointmentsToday);\r\n      handleApplyPantientAppointmentsTodayData();\r\n    }\r\n  }, [props.dataPantientAppointmentsToday]) \r\n\r\n  useEffect(() => {\r\n    if(isDialogChangePasswordOpen === false){\r\n      if(props.onF2Press){\r\n        if(openModalExaminingSession === true && openModalOldDisease === false){\r\n          setIsContinueSelectedExaminingSession(true);\r\n          props.setOnF2Press(false);\r\n        }\r\n        else{\r\n          handleMedicalRegister();\r\n          props.setOnF2Press(false);\r\n        }\r\n      }\r\n      \r\n      if(props.onF4Press){\r\n        if(openModalExaminingSession === true || openModalOldDisease === true){\r\n          props.setOnF4Press(false);\r\n        }\r\n        else{\r\n          handleResetField();\r\n          props.setOnF4Press(false);\r\n        }\r\n      }\r\n\r\n      if(props.onF8Press){\r\n        if(openModalExaminingSession === true || openModalOldDisease === true){\r\n          props.setOnF8Press(false);\r\n        }\r\n        else{\r\n          handleOpenModalOldDisease();\r\n          props.setOnF8Press(false);\r\n        }\r\n      }\r\n    }\r\n  }, [props.onF2Press, props.onF4Press, props.onF8Press, isDialogChangePasswordOpen])\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{'&.MuiContainer-maxWidthLg': {pr: 0}, height: '100%',}}>\r\n        <Box sx={{ minHeight: '36.8rem', borderRadius: '20px', boxShadow: 5, pt: 1.2, pb: 1.2, pl: 1.8, pr: 1.8, }}>\r\n          <Typography variant='h6' sx={{textAlign: 'center', fontWeight: 'bolder', color: 'blue'}}>Thông tin đăng ký khám</Typography> \r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}} component=\"form\" ref={formRef}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.identifier.title}</h6>} open={dataPatientsRegisterError.identifier.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.identifier.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã định danh\" variant=\"outlined\" id='patientIdentifier' autoComplete='off'\r\n                  inputRef={focusField === 'identifier' ? (input) => input && focusField === 'identifier' && input.focus() : firstFocusRef}\r\n                  onChange={(e) => onChangeIdentifier(e.target.value)}\r\n                  onKeyDown={(e) => handleKeyDown(e, 'patientCode')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Identifier')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.patientCode.title}</h6>} open={dataPatientsRegisterError.patientCode.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '19%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.patientCode.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã BN\" variant=\"outlined\" id='patientCode' autoComplete='off'\r\n                  inputRef={(input) => input && focusField === 'patientCode' && input.focus()}\r\n                  onChange={(e) => onChangePatientId(e.target.value)}\r\n                  onKeyDown={(e) => handleKeyDown(e, 'patientFullName')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'PatientId')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 14 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullName.title}</h6>} open={dataPatientsRegisterError.fullName.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }} \r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [37, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              > \r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullName.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên\" variant=\"outlined\" id=\"patientFullName\" autoComplete='off'                \r\n                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientDayOfBirth')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  /> \r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n      \r\n            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n              <ThemeProvider theme={tooltipTheme}>\r\n                <DemoContainer components={['DatePicker']} >\r\n                  <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.dayOfBirth.title}</h6>} open={dataPatientsRegisterError.dayOfBirth.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>    \r\n                    <Box sx={{width: 142, mt: '12px !important'}}>\r\n                      <div style={{width: '100%', }}>\r\n                        <DateField label=\"Ngày sinh\" \r\n                          format='DD/MM/YYYY' value={autocompleteValue.dayOfBirth}\r\n                          disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                          slotProps={{ \r\n                            textField: \r\n                              { \r\n                                inputRef: dateFieldRef,\r\n                                id: 'patientDayOfBirth',\r\n                                error: true ? dataPatientsRegisterError.dayOfBirth.isError === true : false,\r\n                                onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                sx: {'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } },\r\n                              }\r\n                          }}\r\n                          onChange={(value) => onChangeDOB(value)}\r\n                          onKeyDown={(e) => handleKeyDown(e, 'patientGender')}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  </Tooltip>\r\n                </DemoContainer>\r\n              </ThemeProvider>      \r\n            </LocalizationProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.gender.title}</h6>} open={dataPatientsRegisterError.gender.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '12%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientGender' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.gender.value}\r\n                    options={listGender} \r\n                    getOptionLabel={(option) => option.genderName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.genderName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectGender(e, value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientProvince')}\r\n                    open={autocompleteValue.gender.openOption}\r\n                    onFocus={() => handleFocus('Gender')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Giới tính\" \r\n                        inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.gender.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n             \r\n            {/* <TextField label=\"Dân tộc\" variant=\"outlined\" sx={{width: '12%', '&.MuiTextField-root' : {marginTop: '15px'}}}/> */}\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.province.title}</h6>} open={dataPatientsRegisterError.province.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '19.2%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientProvince' disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                    value={autocompleteValue.province.value}\r\n                    options={listProvince} \r\n                    noOptionsText={'Đang tải...'}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectProvine(e, value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientDistrict')}\r\n                    open={autocompleteValue.province.openOption}\r\n                    onFocus={() => handleFocus('Province')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Thành phố\" \r\n                        inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.province.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.district.title}</h6>} open={dataPatientsRegisterError.district.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '24%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientDistrict' disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                    value={autocompleteValue.district.value}\r\n                    options={listDistrict.list} \r\n                    noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                    open={autocompleteValue.district.openOption}\r\n                    onFocus={() => handleFocus('District')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.fullName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectDistrict(e, value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientWard')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Quận/Huyện\" \r\n                        inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.district.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <>\r\n                              {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <>\r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.ward.title}</h6>} open={dataPatientsRegisterError.ward.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                  <div style={{width: '23.5%', marginTop: '20px'}}>\r\n                    <Autocomplete disablePortal id='patientWard' disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                      value={autocompleteValue.ward.value}\r\n                      options={listWard.list} \r\n                      noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                      filterOptions={filterOptions}\r\n                      getOptionLabel={(option) => option.name}\r\n                      autoComplete={false}\r\n                      renderOption={(props, option) => (\r\n                        <li {...props}>\r\n                          {option.fullName}\r\n                        </li>\r\n                      )}\r\n                      onChange={(e, value) => onSelectWard(e, value)}\r\n                      onKeyDown={(e) => handleKeyDown(e, 'patientAddress')}\r\n                      open={autocompleteValue.ward.openOption}\r\n                      onFocus={() => handleFocus('Ward')}\r\n                      onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} \r\n                          label=\"Phường/Xã\" \r\n                          inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                          error={true ? dataPatientsRegisterError.ward.isError === true : false} \r\n                          sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                              <>\r\n                                {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                              </>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      disableClearable // Bỏ icon xóa\r\n                      popupIcon={null} // Bỏ icon dropdown\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.address.title}</h6>} open={dataPatientsRegisterError.address.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.address.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Địa chỉ\" variant=\"outlined\" id='patientAddress' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                    onChange={(e) => onChangeAddress(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientFullNameMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullNameMother.title}</h6>} open={dataPatientsRegisterError.fullNameMother.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullNameMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên mẹ\" variant=\"outlined\" id='patientFullNameMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                    autoFocus={dataPatientsRegisterError.fullNameMother.focus}\r\n                    onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientPhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneMother.title}</h6>} open={dataPatientsRegisterError.phoneMother.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.phoneMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Điện thoại\" variant=\"outlined\" id='patientPhoneMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                    onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientFullNameFather')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n\r\n            <TextField label=\"Họ tên cha\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n              variant=\"outlined\" id='patientFullNameFather' autoComplete='off'\r\n              sx={{width: '30.4%', '&.MuiTextField-root' : {marginTop: '20px'}}} \r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n              onKeyDown={(e) => handleKeyDown(e, 'patientPhoneFather')}\r\n              inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n              InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n            />\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneFather.title}</h6>} open={dataPatientsRegisterError.phoneFather.openTooltip}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField label=\"Điện thoại\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                    variant=\"outlined\" id='patientPhoneFather' autoComplete='off'\r\n                    onChange={(e) => onChangePhoneFather(e, e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientWeight')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneFather')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.weight.title}</h6>} open={dataPatientsRegisterError.weight.openTooltip} PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Cân nặng bé\" variant=\"outlined\" id='patientWeight' autoComplete='off' error={true ? dataPatientsRegisterError.weight.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(kg)</InputAdornment>}}\r\n                    onChange={(e) => onChangeWeight(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientHeight')}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.height.title}</h6>} open={dataPatientsRegisterError.height.openTooltip} placement='left' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Chiều cao bé\" variant=\"outlined\" id='patientHeight' autoComplete='off' error={true ? dataPatientsRegisterError.height.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeight(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientHeadCircumference')}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.headCircumference.title}</h6>} open={dataPatientsRegisterError.headCircumference.openTooltip} placement='top-start' PopperProps={{sx: { zIndex: 2 } }}\r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [70, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              >\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Vòng đầu bé\" variant=\"outlined\" id='patientHeadCircumference' autoComplete='off' error={true ? dataPatientsRegisterError.headCircumference.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientMedicalType')}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.medicalType.title}</h6>} open={dataPatientsRegisterError.medicalType.openTooltip} placement='bottom' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30.5%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientMedicalType' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.medicalType.value}\r\n                    options={listMedicalType} \r\n                    getOptionLabel={(option) => option.medicalTypeName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.medicalTypeName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectMedicalType(e, value)}\r\n                    open={autocompleteValue.medicalType.openOption}\r\n                    onFocus={() => handleFocus('MedicalType')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'MedicalType')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Loại hình khám\" \r\n                        inputRef={(input) => input && focusField === 'medicalType' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.medicalType.isError === true : false} \r\n                        sx={{\r\n                          '& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } ,\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.Mui-disabled.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'},\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'}\r\n                        }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.reason.title}</h6>} open={dataPatientsRegisterError.reason.openTooltip} >\r\n                <div style={{width: '100%' }}>\r\n                  <TextField fullWidth label=\"Lý do khám\" multiline rows={3} variant=\"outlined\" id='patientReason' autoComplete='off' error={true ? dataPatientsRegisterError.reason.isError === true : false}\r\n                    sx={{'&.MuiTextField-root' : {marginTop: '20px'}}} \r\n                    onChange={(e) => onChangeReason(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <FormControlLabel control={<Checkbox checked={autocompleteValue.vaccination}/>} sx={{width: '100%'}}\r\n              label=\"Bệnh nhân có tham gia tiêm ngừa\" onChange={(e) => onChangeVaccination(e.target.checked)}/>  \r\n\r\n            <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n              <Button variant=\"contained\" color=\"primary\" sx={{mr: 1}} onClick={() => handleMedicalRegister()}>Đăng ký (f2)</Button>\r\n              <Button variant=\"contained\" color=\"warning\" onClick={() => handleResetField()}>Làm mới (f4)</Button>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => handleOpenModalOldDisease()}>Bệnh cũ (f8)</Button>\r\n            </Box>\r\n          </Box>         \r\n        </Box>\r\n      </Container>\r\n\r\n      <ExaminingSession \r\n        openModalExaminingSession={openModalExaminingSession} setOpenModalExaminingSession={setOpenModalExaminingSession} \r\n        handleResetField={handleResetField} setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        isContinueSelectedExaminingSession={isContinueSelectedExaminingSession} setIsContinueSelectedExaminingSession={setIsContinueSelectedExaminingSession}\r\n        dataPatientsRegister={dataPatientsRegister} \r\n      />\r\n\r\n      <OldDisease \r\n        openModalOldDisease={openModalOldDisease} setOpenModalOldDisease={setOpenModalOldDisease}\r\n        dataPatientsRegister={dataPatientsRegister} setDataPatientsRegister={setDataPatientsRegister}\r\n      />\r\n\r\n      <OldDiseaseForRegister\r\n        openOldDiseaseRegister={openOldDiseaseRegister} setOpenOldDiseaseRegister={setOpenOldDiseaseRegister}\r\n        setDataPatientsRegister={setDataPatientsRegister}\r\n        listOldDiseaseRegister={listOldDiseaseRegister} setListOldDiseaseRegister={setListOldDiseaseRegister}\r\n      />\r\n\r\n      <AlertProcessing\r\n        openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookMedical","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//modal\r\nimport SelectedDoctorExamining from '../ManageSelectedDoctorExamining/SelectedDoctorExamining';\r\n//components\r\nimport ListPatientsRegister from './ListPatientsRegister';\r\nimport BookMedical from './BookMedical';\r\n//api\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nfunction MainMedicalRegister() {\r\n\r\n  const { user, loading } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [component1Loading, setComponent1Loading] = useState(true);\r\n\r\n  const [completeMedicalRegister, setCompleteMedicalRegister] = useState(false);\r\n  const [dataPantientAppointmentsToday, setDataPantientAppointmentsToday] = useState();\r\n\r\n  const [handleResetField, setHandleResetField] = useState(false); //F2\r\n  const [handleOpenModalExaminingSession, setHandleOpenModalExaminingSession] = useState(false); //F4\r\n  const [handleOpenModalOldDisease, setHandleOpenModalOldDisease] = useState(false); //F8\r\n\r\n  const handleF2Press = () => {\r\n    setHandleOpenModalExaminingSession(true);\r\n  }\r\n\r\n  const handleF4Press = () => {\r\n    setHandleResetField(true);\r\n  }\r\n\r\n  const handleF8Press = () => {\r\n    setHandleOpenModalOldDisease(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(loading === false && user.isLogin){\r\n      if(user.positionName !== 'Nursing'){\r\n        history.push('/404');\r\n      }\r\n    }\r\n  }, [loading, user])\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if(event.keyCode === 113){\r\n        event.preventDefault()\r\n        //nhấn F2 để đăng ký khám\r\n        handleF2Press();\r\n      }\r\n      else if(event.keyCode === 115){\r\n        event.preventDefault()\r\n        //nhấn F4 để reset các input field \r\n        handleF4Press();\r\n      }\r\n      else if(event.keyCode === 119){\r\n        event.preventDefault()\r\n        //nhấn F8 để tìm bệnh cũ\r\n        handleF8Press();\r\n      }\r\n      else{\r\n\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n              <Grid container spacing={0} sx={{marginLeft: 0}}>\r\n                <Grid item xs={5}>  \r\n                  <ListPatientsRegister \r\n                    completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                    component1Loading={component1Loading} setComponent1Loading={setComponent1Loading}\r\n                    dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                  />\r\n                </Grid>\r\n            \r\n                <Grid item xs={7} >\r\n                  {component1Loading ?\r\n                    <div style={{marginLeft: '18px'}}>\r\n                      <Skeleton variant='rectangular' width=\"100%\" height={590} />\r\n                    </div>\r\n                  :\r\n                    <BookMedical \r\n                      onF2Press={handleOpenModalExaminingSession} setOnF2Press={setHandleOpenModalExaminingSession}\r\n                      onF4Press={handleResetField} setOnF4Press={setHandleResetField}\r\n                      onF8Press={handleOpenModalOldDisease} setOnF8Press={setHandleOpenModalOldDisease}\r\n                      completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                      dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                    />\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n         {/* <SelectedDoctorExamining \r\n          openSelectedDoctorExaminingModal={openSelectedDoctorExaminingModal} setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n          currentDoctorExamining={currentDoctorExamining} setCurrentDoctorExamining={setCurrentDoctorExamining}\r\n         /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainMedicalRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//user context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getAppointmentsNextWeek, updateStateAppointment } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainAppointmentExamining() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chưa nhắc hẹn khám'});\r\n    const [listPantientAppointmentChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [listAppointment, setListAppointment] = useState();\r\n    \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n    const [listDataPatientsAppointmentPaginate, setListDataPatientsAppointmentPaginate] = useState([]);\r\n    const [listDataPatientsAppointmentState, setListDataPatientsAppointmentState] = useState();\r\n    const [listDataPatientsAppointmentSort, setListDataPatientsAppointmentSort] = useState([]);\r\n    \r\n    const [loadingComponent, setLoadingComponent] = useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [pageCount, setPageCount] = useState();\r\n\r\n    const [dataAppointment, setDataAppointment] = useState();\r\n\r\n    const handlePaginate = (data) => {\r\n        const itemsPerPage = 5;\r\n        if(data){\r\n            const calculatedPageCount = Math.ceil(data.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = data.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n        else{\r\n            const calculatedPageCount = Math.ceil(listDataPatientsAppointmentPaginate.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = listDataPatientsAppointmentPaginate.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    }\r\n\r\n    const handleGetAppointmentsNextWeek = async () => {\r\n        setLoadingComponent(true);\r\n        const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n        setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n        const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n        const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n        const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n        const updateListPantientAppointmentChipState = [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n        ]\r\n\r\n        setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n        if(activeChip.chipOrder === 0){\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind)\r\n        }\r\n\r\n        else if(activeChip.chipOrder === 1){\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n            handlePaginate(_listAppointmentAcceptReExamining)\r\n        }\r\n\r\n        else{\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n            handlePaginate(_listAppointmentRejectReExamining)\r\n        }\r\n\r\n        setLoadingComponent(false);\r\n    }\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n            const _listAppointmentNotRemind = listAppointment.filter(item => item.stateAppointment === 0);\r\n\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const _listAppointmentAcceptReExamining = listAppointment.filter(item => item.stateAppointment === 1);\r\n\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining);\r\n            handlePaginate(_listAppointmentAcceptReExamining);\r\n        }\r\n        else{\r\n            const _listAppointmentRejectReExamining = listAppointment.filter(item => item.stateAppointment === 2);\r\n\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining);\r\n            handlePaginate(_listAppointmentRejectReExamining);\r\n        }\r\n    }\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsAppointmentSort(listDataPatientsAppointmentState);\r\n        }else{\r\n          setListDataPatientsAppointmentSort(searchPatients(listDataPatientsAppointmentState, takenValue));\r\n        }\r\n    }\r\n\r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, patientFullName, phoneMother, phoneFather } = patientObj;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || patientFullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const onChangeAppointmentDate = (medicalBookId, appointmentDate) => {\r\n        if(appointmentDate){\r\n            const takenValue = appointmentDate._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const today = new Date();\r\n                const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n                const convertAppointmentDateFindDataAppointment = new Date(findDataAppointment.appointmentDate)\r\n\r\n                if(today <= takenValue || takenValue >= convertAppointmentDateFindDataAppointment){\r\n                    findDataAppointment.appointmentDate = moment(takenValue).format('YYYY-MM-DD');\r\n                }\r\n            }, 100) \r\n        }\r\n        \r\n    }\r\n\r\n    const handleAcceptReExamining = async (medicalBookId) => {\r\n        setLoadingComponent(true);\r\n\r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 1);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            \r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoadingComponent(false);\r\n    }\r\n\r\n    const handleRejectReExamining = async (medicalBookId) => {\r\n        setLoadingComponent(true);\r\n        \r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 2);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoadingComponent(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetAppointmentsNextWeek();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n          if(user.positionName !== 'Nursing'){\r\n            history.push('/404');\r\n          }\r\n        }\r\n      }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        handlePaginate();\r\n    }, [page]);\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1, p: 0 }}>\r\n            <TableContainer component={Paper} sx={{height: loadingComponent ? '40rem' : 'auto', position: 'relative'}}>\r\n                {loadingComponent ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>        \r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Box>\r\n                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                {listPantientAppointmentChipState.map((pantientAppointmentChipStateItem, pantientAppointmentChipStateIndex) => (\r\n                                    <Badge badgeContent={pantientAppointmentChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientAppointmentChipStateIndex}`}> \r\n                                        <Chip label={pantientAppointmentChipStateItem.chipLabel} color={pantientAppointmentChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                            onClick={() => handleSelectedChip(pantientAppointmentChipStateIndex, pantientAppointmentChipStateItem.chipLabel)} />  \r\n                                    </Badge>\r\n                                ))}\r\n                            </Stack>\r\n\r\n                            <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.15rem', fontWeight: 'bolder'}}>Danh sách {activeChip.chipLabel} trong 6 ngày tới</Typography>\r\n\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', mb: 1}}>\r\n                                <TextField sx={{width: 500, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc Số điện thoại' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                        startAdornment: (\r\n                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                        ),\r\n                                        endAdornment: (\r\n                                            <InputAdornment position='end'>\r\n                                                {searchPatientsQuery !== '' ? \r\n                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsAppointmentSort(listDataPatientsAppointmentState)]}\r\n                                                    /> \r\n                                                : \r\n                                                    null\r\n                                                }\r\n                                            </InputAdornment>  \r\n                                        )\r\n                                    }}>\r\n                                </TextField>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Table stickyHeader >\r\n                            <TableHead>\r\n                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                    <TableCell align='left' >Mã bệnh nhân</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày sinh</TableCell>\r\n                                    {/* <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Giới tính</TableCell> */}\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Địa chỉ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên Cha/Mẹ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Số điện thoại</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám cũ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám tiếp theo</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày hẹn khám</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Nhấn</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {listDataPatientsAppointmentSort.map((dataPantientAppointmentItem, dataPantientAppointmentIndex) => (\r\n                                    <TableRow hover role=\"checkbox\" key={dataPantientAppointmentIndex} sx={{':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1) !important'}}}>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientId}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientFullName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{moment(dataPantientAppointmentItem.dateOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                        {/* <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.gender === true ? 'Nam' : 'Nữ'}</TableCell> */}\r\n                                        <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 240, fontSize: '0.9rem'}}>\r\n                                            <Tooltip title={<Typography variant='subtitle2'>{dataPantientAppointmentItem.fullAddress}</Typography>} >\r\n                                                <span>{dataPantientAppointmentItem.fullAddress}</span>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.fullNameFather !== '' ? dataPantientAppointmentItem.fullNameFather : dataPantientAppointmentItem.fullNameMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.phoneFather !== '' ? dataPantientAppointmentItem.phoneFather : dataPantientAppointmentItem.phoneMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.examNameOld}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.nextExamName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto'}}>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                                <DemoContainer components={['DatePicker']}> \r\n                                                    <Box sx={{width: 145}}>\r\n                                                        <div style={{width: '100%'}}>\r\n                                                            <DatePicker label=\"Ngày khám dự kiến\" disablePast minDate={moment()}\r\n                                                                format='DD/MM/YYYY' value={moment(dataPantientAppointmentItem.appointmentDate)}\r\n                                                                onChange={(value) => onChangeAppointmentDate(dataPantientAppointmentItem.medicalBookId, value)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Box> \r\n                                                </DemoContainer>\r\n                                            </LocalizationProvider>\r\n                                        </TableCell>                                                                                                \r\n                                        <TableCell align={dataPantientAppointmentItem.stateAppointment === 0 ? 'left' : 'center'} sx={{width: 'auto', fontSize: '0.9rem'}}>\r\n                                            {dataPantientAppointmentItem.stateAppointment === 0 ?\r\n                                                <>   \r\n                                                    <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {dataPantientAppointmentItem.stateAppointment === 1 ?\r\n                                                        <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    :\r\n                                                        <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </>\r\n                }\r\n            </TableContainer>\r\n\r\n            {listDataPatientsAppointmentSort.length !== 0 && loadingComponent === false ?\r\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n                    <Pagination count={pageCount} page={page} onChange={handlePageChange} color=\"secondary\" />\r\n                </Box>\r\n            :\r\n                null\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainAppointmentExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport _ from 'lodash'\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DialogActions } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//other\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n//css\r\nimport './SCSS/CompleteExamining.scss';\r\n//api\r\nimport { createAddPredecessor, createAddMedicalBook, getAppointmentDate } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CompleteExamining(props) {\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState();\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n\r\n    const typingRef = useRef(null);\r\n    const textareaRef = useRef(null);\r\n    const dateFieldRef = useRef(null);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleCloseModalCompleteExamining = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n          return;\r\n        }\r\n        else{\r\n            setMainDataExaminingForConclusion();\r\n            props.setOpenModalCompleteExamining(false);\r\n        }\r\n      }\r\n\r\n    const onChangeExaminingConclusion = (value) => {\r\n        typingRef.current = setTimeout(() => {\r\n            setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                prevMainDataExaminingForConclusion.conclusion = value;\r\n                return {...prevMainDataExaminingForConclusion}\r\n            })\r\n        }, 300)\r\n    }\r\n\r\n    const onChangeAppointmentDate = (value) => {\r\n        if(value){\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n            typingRef.current = setTimeout(() => {\r\n                const takenValue = value._d;\r\n                const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n                if(formattedDate !== 'Invalid date'){\r\n                    setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                        prevMainDataExaminingForConclusion.appointmentDate = formattedDate;\r\n                        return {...prevMainDataExaminingForConclusion}\r\n                    })\r\n                }\r\n            }, 200)   \r\n        }\r\n    }\r\n\r\n    const handleSetDataCompleteExamining = async () => {\r\n        setOpenAlertProcessing(true);\r\n\r\n        const editDataExaminingForConclusion = _.clone(props.dataExaminingForConclusion);\r\n        editDataExaminingForConclusion.categories = editDataExaminingForConclusion.categories.map(categoriesItem => ({\r\n            ...categoriesItem,\r\n            // Lọc các categoryContents để giữ lại những phần tử có categoryContentQuestions không rỗng\r\n            categoryContents: categoriesItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length > 0)\r\n\r\n            // Loại bỏ các categories nếu tất cả categoryContents của nó đều bị loại bỏ\r\n        })).filter(categoriesItem => categoriesItem.categoryContents.length > 0);\r\n\r\n        const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        if(responseAppointmentDate.status === 200){\r\n            editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n            editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n            editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n            if(editDataExaminingForConclusion.isVaccination){\r\n                editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n                editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n                editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n            }\r\n\r\n        }else{\r\n            toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        }\r\n \r\n        setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        setOpenAlertProcessing(false);\r\n        if(props.dataExaminingForConclusion.conclusion !== ''){\r\n            const length = textareaRef.current.value.length;\r\n            textareaRef.current.setSelectionRange(length, length);\r\n            textareaRef.current.focus();\r\n        }\r\n        else{\r\n            textareaRef.current.focus();\r\n        }\r\n\r\n        // if(editDataExaminingForConclusion.categories.length !== 0){\r\n            \r\n        //     const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        //     if(responseAppointmentDate.status === 200){\r\n        //         editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n        //         editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n        //         editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n        //         if(editDataExaminingForConclusion.isVaccination){\r\n        //             editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n        //             editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n        //             editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n        //         }\r\n\r\n        //     }else{\r\n        //         toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        //     }\r\n \r\n        //     setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        //     setOpenAlertProcessing(false);\r\n        //     if(props.dataExaminingForConclusion.conclusion !== ''){\r\n        //         const length = textareaRef.current.value.length;\r\n        //         textareaRef.current.setSelectionRange(length, length);\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        //     else{\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    const handleAddMedicalBook = async () => {\r\n        if(checkValidate()){\r\n            setOpenAlertProcessing(true);\r\n    \r\n                if(mainDataExaminingForConclusion.categories.some(categoriesItem => categoriesItem.isPredecessor === true)){\r\n                    const categoryPres = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isPredecessor === true)\r\n                    const dataPredecessor = { patientId: mainDataExaminingForConclusion.patientId, categoryPres: categoryPres }\r\n                    await createAddPredecessor(dataPredecessor);\r\n                }\r\n\r\n                const categoriesHealthRecordExamining = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isHealthRecord === true)\r\n                mainDataExaminingForConclusion.categories = categoriesHealthRecordExamining\r\n                const responseAddMedicalBook = await createAddMedicalBook(mainDataExaminingForConclusion);\r\n                if(responseAddMedicalBook.status === 200){\r\n                    toast.success(responseAddMedicalBook.data, {toastId: 'success3'});\r\n                    props.handleCompleteExaminingForPantient();\r\n                    setMainDataExaminingForConclusion();\r\n                    props.setOpenModalCompleteExamining(false);\r\n                }\r\n                else{\r\n                    toast.error(responseAddMedicalBook.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            setOpenAlertProcessing(false);\r\n    }\r\n\r\n    const checkValidate = () => {\r\n        let isValid = true;\r\n        if(mainDataExaminingForConclusion.conclusion === null){\r\n            textareaRef.current.focus();\r\n            toast.error('Bạn chưa nhập kết luận khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === 'Invalid date'){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Ngày tái khám không hợp lệ', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === ''){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Bạn chưa chọn ngày tái khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalCompleteExamining){\r\n            handleSetDataCompleteExamining();\r\n        }\r\n    }, [props.openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalCompleteExamining} onClose={(event, reason) => handleCloseModalCompleteExamining(event, reason)} disableEscapeKeyDown={true}>\r\n                <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Tóm tắt quá trình khám</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalCompleteExamining()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='large'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                    <Box sx={{pl: 6, pr: 6}}>\r\n                        <List sx={{p: 0}}>\r\n                            <Box>\r\n                                {mainDataExaminingForConclusion ? \r\n                                    mainDataExaminingForConclusion.categories.length !== 0 ? \r\n                                        <div className='category-complete-examining'>\r\n                                            {mainDataExaminingForConclusion.categories.map((categoriesItem, categoriesIndex) => (\r\n                                                <div key={`categoriesItem ${categoriesIndex}`}>\r\n                                                    <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                        {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                            <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                                \r\n                                                                {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                    <div key={`questionItem ${questionIndex}`}>\r\n                                                                        <Grid container rowSpacing={0}>\r\n                                                                            {questionIndex === 0 ?\r\n                                                                                <>\r\n                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                    </Grid> \r\n\r\n                                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                        <>\r\n                                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                            </Grid>\r\n                                                                        \r\n                                                                                            <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                        </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    }   \r\n                                                                                </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n                                                                \r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                                classes={{ root: classes.root }}\r\n                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                            />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={5.5} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                :   \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={8} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                }                                                                                                                                                                          \r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    :\r\n                                        <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                :\r\n                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                }\r\n                            </Box>\r\n                        </List>\r\n                    </Box>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{borderTop: '1px solid black'}}>\r\n                    {mainDataExaminingForConclusion ? \r\n                        <div style={{width: '100%', padding: '8px 50px 8px 50px'}}>\r\n                            <TextareaAutosize key={`pantientId ${mainDataExaminingForConclusion.patientId}`} placeholder='Kết luận của bác sĩ' style={{width: '100%', padding: '15px', fontSize: '17px'}} onChange={(e) => onChangeExaminingConclusion(e.target.value)} ref={textareaRef} defaultValue={mainDataExaminingForConclusion.conclusion} /> \r\n                            \r\n                                {mainDataExaminingForConclusion.isVaccination ? \r\n                                    <>\r\n                                        <Box sx={{mb: 0.4}}>\r\n                                            {mainDataExaminingForConclusion.vaccination === '' || mainDataExaminingForConclusion.vaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.vaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.nextVaccination === '' || mainDataExaminingForConclusion.nextVaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.nextVaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.reminder === '' ||  mainDataExaminingForConclusion.reminder === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.reminder}`}</Typography>\r\n                                                </>\r\n                                            }\r\n                                        </Box>\r\n                                            \r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n\r\n                                {mainDataExaminingForConclusion.appointmentDate ? \r\n                                <>\r\n                                    <Box sx={{display: 'flex', justifyContent: 'center', mb: 2}}>\r\n                                        <Typography variant='h6' sx={{mt: 'auto', mb: 'auto', mr: 2}}>Kỳ khám tiếp theo: <span style={{fontWeight: 'bolder', color: '#ff1744'}}>{mainDataExaminingForConclusion.nextExamName}</span></Typography>\r\n                                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                            <DemoContainer components={['DatePicker']}>  \r\n                                                <DatePicker label=\"Ngày khám dự kiến\" disablePast\r\n                                                    format='DD/MM/YYYY' defaultValue={moment(mainDataExaminingForConclusion.appointmentDate)}\r\n                                                    onChange={(value) => onChangeAppointmentDate(value)}\r\n                                                    slotProps={{ \r\n                                                        textField: { inputRef: dateFieldRef, }\r\n                                                    }}\r\n                                                />\r\n                                            </DemoContainer>\r\n                                        </LocalizationProvider>\r\n                                    </Box>\r\n                                </>\r\n                                :\r\n                                    null\r\n                                }\r\n                        \r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <Stack spacing={1} direction=\"row\">\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' onClick={() => handleAddMedicalBook()}>Lưu</Button>\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' color={'error'} onClick={() => handleCloseModalCompleteExamining()}>Đóng</Button>\r\n                                </Stack>\r\n                            </div>\r\n                        </div>   \r\n                    :\r\n                        null            \r\n                    }             \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//scss\r\nimport './SCSS/PreviewLastExamining.scss'; \r\n//api\r\nimport { getMedicalBook } from '../../Service/MedicalService';\r\n//moment\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi'; \r\nmoment.locale('vi');\r\n\r\nfunction PreviewLastExamining(props) {\r\n    const previewDataExaminingDefault = {\r\n        categoryPres: [],\r\n        healthRecords: { examinationName: '', timeUpdateState: '', conclusion: '', medicakBook: [] },\r\n        nutritionals: [],\r\n        vaccinationBook: [] \r\n    }\r\n\r\n    const [previewDataExamining, setPreviewDataExamining] = useState(previewDataExaminingDefault);\r\n    // const [fullDataPredecessor, setFullDataPredecessor] = useState();\r\n    // const [fullDataHealthRecord, setFullDataHealthRecord] = useState();\r\n    \r\n    const [loadingMedicalBook, setLoadingMedicalBook] = useState(false);\r\n\r\n    const [openCollapsePredecessorItem, setOpenCollapsePredecessorItem] = useState([]);\r\n    const [openCollapseMedicakBookItem, setOpenCollapseMedicakBookItem] = useState([]);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpenPredecessorItem = (predecessorIndex) => {\r\n        setOpenCollapsePredecessorItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[predecessorIndex] = !newOpen[predecessorIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleOpenMedicakBookItem = (medicakBookIndex) => {\r\n        setOpenCollapseMedicakBookItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[medicakBookIndex] = !newOpen[medicakBookIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    // const handeOnChangePagePredecessor = (e, page, indexPredecessor) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].categoryContents = fullDataPredecessor[indexPredecessor].categoryContents[page - 1];\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    // const handeOnChangePageHealthRecords = (e, page, indexMedicakbook) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].categoryContents = fullDataHealthRecord[indexMedicakbook].categoryContents[page - 1];\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    const handleEditPrevDataExamining = async () => {\r\n        setLoadingMedicalBook(true);\r\n        const responseMedicalBook = await getMedicalBook(props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0].medicalRegisterId);\r\n        if(props.prevDataExamining.newPredecessor){\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n             \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: [],\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n\r\n        else{\r\n            if(props.prevDataExamining.categoryPres.length > 1){\r\n                props.prevDataExamining.categoryPres = props.prevDataExamining.categoryPres.sort((a, b) => a.categoryOrder - b.categoryOrder);\r\n            }\r\n\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n            \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: props.prevDataExamining.categoryPres,\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n        setLoadingMedicalBook(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.prevDataExamining){\r\n            handleEditPrevDataExamining();\r\n        }\r\n    }, [props.prevDataExamining])\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{height: '100%', position: 'relative'}}>\r\n                {loadingMedicalBook ? \r\n                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                        <CircularProgress />\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh gần nhất, hãy chờ một chút...</Typography>\r\n                    </Box>\r\n                :\r\n                    <>\r\n                        <div className='preview-last-examining-contents' >\r\n\r\n                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem'}}>\r\n                                Thông tin tóm tắt <span style={{color: 'red'}}>{previewDataExamining.healthRecords.examinationName}</span>\r\n                            </Typography>\r\n\r\n                            <List sx={{p: 0}}>\r\n                                {previewDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                    <div key={`predecessorItem ${predecessorIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenPredecessorItem(predecessorIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapsePredecessorItem[predecessorIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapsePredecessorItem[predecessorIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {predecessorItem.categoryContents.map((predecessorItemCategoryContentsItem, predecessorItemCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`predecessorItemCategoryContentsIndex ${predecessorItemCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: predecessorItemCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{predecessorItemCategoryContentsItem.categoryContentTitle}</Typography>\r\n                                                    \r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {predecessorItemCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{predecessorItemCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={6.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                                    \r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={6.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))} \r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                {previewDataExamining.healthRecords.medicakBook.map((medicakBookItems, medicakBookIndex) => (\r\n                                    <div key={`medicakBookItems ${medicakBookIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenMedicakBookItem(medicakBookIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseMedicakBookItem[medicakBookIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={medicakBookItems.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapseMedicakBookItem[medicakBookIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {medicakBookItems.categoryContents.map((medicakBookCategoryContentsItem, medicakBookCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`medicakBookCategoryContentsIndex ${medicakBookCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: medicakBookCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{medicakBookCategoryContentsItem.categoryContentTitle}</Typography>\r\n\r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {medicakBookCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{medicakBookCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={5.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))}\r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}             \r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n                            </List>\r\n\r\n                            <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận: ${previewDataExamining.healthRecords.conclusion}`}</Typography>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='time-examining' style={{marginLeft: '16px', marginTop: '4px', width: '99%'}}>\r\n                            <Typography variant='subtitle1' sx={{color: '#009688', fontWeight: 'bolder', fontSize: '1.08rem'}}>{`${previewDataExamining.healthRecords.doctorFullName}, ${moment(previewDataExamining.healthRecords.timeUpdateState).format('LLLL')}`}</Typography>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Box>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default PreviewLastExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//lodash\r\nimport _, { constant } from \"lodash\";\r\n//modal\r\nimport CompleteExamining from '../ManageCompleteExamining/CompleteExamining';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//components\r\nimport PreviewLastExamining from './PreviewLastExamining';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { GiWeightScale } from \"react-icons/gi\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport { TbRulerMeasure } from \"react-icons/tb\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport BeenhereIcon from '@mui/icons-material/Beenhere';\r\nimport VaccinesIcon from '@mui/icons-material/Vaccines';\r\nimport CachedIcon from '@mui/icons-material/Cached';\r\n//moment\r\nimport moment from 'moment';\r\n//scss\r\nimport './SCSS/DoctorExamining.scss';\r\n//real-time\r\nimport {startSignalRConnection, onReceiveMessage} from '../../Service/SignalService';\r\n//api\r\nimport { \r\n    createAddPredecessor,\r\n    getMedicalDetailPatient,\r\n    getRegistersByDateNow, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook,\r\n    updateMedicalState,\r\n    deleteMedicalBook\r\n} from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainDoctorExamining() {\r\n    const dataPantientsReadyExaminingDefault = {\r\n        stt: '',\r\n        id: '',\r\n        patientsId: '',\r\n        patientCode: '',\r\n        patientsName: '',\r\n        patientsDOB: '',\r\n        patientsMonthsOld: '',\r\n        patientsGender: '',\r\n        patientsHeight: '',\r\n        patientsWeight: '',\r\n        patientsHeadCircumference: '',\r\n        patientsPhone: '',\r\n        patientsAddress: ''\r\n    }\r\n\r\n    const { user, loading, alertVisible, confirmAlert, resetAlert, isLogOutClick, isDialogChangePasswordOpen } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isFormDirty, setIsFormDirty] = useState(false);\r\n\r\n    //state thông tin bệnh nhân ban đầu \r\n    const [dataPantientsReadyExamining, setDataPantientsReadyExamining] = useState(dataPantientsReadyExaminingDefault);\r\n\r\n    //state các category gồm tiêu đề nội dung khám và câu hỏi khám ban đầu\r\n    const [mainDataExamining, setMainDataExamining] = useState([]);\r\n\r\n    //state lưu tạm data các kỳ khám \r\n    const [prevDataExamining, setPrevDataExamining] = useState();\r\n\r\n    //state đóng mở cây thư mục khám của sổ khám bệnh\r\n    const [openCollapseHealthRecords, setOpenCollapseHealthRecords] = useState(false);\r\n\r\n    //state đóng mở chi tiết nội dung của sổ khám bệnh\r\n    const [openCollapseHealthRecordsItem, setOpenCollapseHealthRecordsItem] = useState([]);\r\n\r\n    //state chọn danh mục khám ban đầu\r\n    const [categorySelectedExamining, setCategorySelectedExamining] = useState({});\r\n\r\n    //state chọn danh mục bao gồm nội dung bên trong ban đầu\r\n    const [contentCategorySelectedExamining, setContentCategorySelectedExamining] = useState([]);\r\n\r\n    //state lưu tạm nội dung chi tiết của sổ khám bệnh\r\n    const [healthRecordsContents, setHealthRecordsContents] = useState([]);\r\n    const [currentHealthRecordExamining, setCurrentHealthRecordExamining] = useState();\r\n\r\n    //tiền căn show ở thông tin bệnh nhân\r\n    const [previewPredecessor, setPreviewPredecessor] = useState();\r\n    const [oldPreviewPredecessor, setOldPreviewPredecessor] = useState();\r\n\r\n    //state các câu hỏi được bác sĩ khám tích hoặc gõ vào\r\n    const [dataExaminingForConclusion , setDataExaminingForConclusion ] = useState({});\r\n\r\n    //state lưu tạm các data tiền căn của getUpdatePredecessor (bao gồm những data tiền căn đã chọn và chưa chọn)\r\n    const [oldDataPredecessor, setOldDataPredecessor] = useState();\r\n\r\n    //dùng khi tái khám hoặc mở khám lại cho bệnh nhân có tiền căn đã đụng\r\n    const [newDataPredecessor, setNewDataPredecessor] = useState();\r\n\r\n    //state lưu data tiền căn cũ (những data tiền căn đã chọn)  \r\n    const [prevDataPredecessor, setPrevDataPredecessor] = useState();\r\n\r\n    //state quản lý modal kết thúc khám\r\n    const [openModalCompleteExamining, setOpenModalCompleteExamining] = useState(false);\r\n\r\n    const [loadingPrevDataExamining, setLoadingPrevDataExamining] = useState(false);\r\n    const [loadingPatient, setLoadingPatient] = useState(true);\r\n    const [loadingInfoPatient, setLoadingInfoPatient] = useState(true);\r\n    const [loadingCategoryExamining, setLoadingCategoryExamining] = useState(false);\r\n    const [loadingContentsExamining, setLoadingContentsExamining] = useState(false);\r\n\r\n    const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n  \r\n    const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n    const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n    const [listPantientChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n            { chipLabel: 'BN đã khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n          const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n            setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n            setListDataPatientsRegisterState(listPantientRegisterDone);\r\n        }\r\n    };\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n        }else{\r\n          setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n        }\r\n      }\r\n    \r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const handleCompleteExaminingForPantient = () => {\r\n        setLoadingPatient(true);\r\n        toast.success(`Đã kết thúc khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        setPreviewPredecessor();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleCancelExamining = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingCategoryExamining(true);\r\n        setLoadingContentsExamining(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, [dataPantientsReadyExamining.editExamining === true ? 2 : 0 || dataPantientsReadyExamining.backRegister === true ? 3 : 0]);\r\n        if(response.status === 200){\r\n            toast.success(`Đã hủy khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success2'});    \r\n            setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n            setMainDataExamining([]);\r\n            setOpenCollapseHealthRecords(false);\r\n            setOpenCollapseHealthRecordsItem([]);\r\n            setCategorySelectedExamining({});\r\n            setContentCategorySelectedExamining([]);\r\n            setHealthRecordsContents([]);\r\n            setCurrentHealthRecordExamining();\r\n            setDataExaminingForConclusion({});\r\n            setPrevDataPredecessor();\r\n            setCurrentHealthRecordExamining();\r\n            setOldDataPredecessor();\r\n            setPreviewPredecessor();\r\n            handleGetRegistersByDateNow();\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    const handleDeleteExamining = async () => {\r\n        const confirmLeave = window.confirm(\r\n            'Chức năng này sẽ xóa tất cả dữ liệu của kỳ khám hiện tại và đặt bệnh nhân về trạng thái chưa khám. Bạn có muốn xóa không?'\r\n        );\r\n        if (confirmLeave) {\r\n            setLoadingPatient(true);\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const responseDeleteMedicalBook = await deleteMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n            if(responseDeleteMedicalBook.status === 200){\r\n                toast.success(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingSuccess'});\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    await updateMedicalState(dataPantientsReadyExamining.id, 3);\r\n                }\r\n                setPrevDataExamining();\r\n                if(previewPredecessor && previewPredecessor.length !== 0){\r\n                    setPreviewPredecessor();\r\n                }\r\n                setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n                setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n                handleGetRegistersByDateNow();\r\n            }\r\n            else{\r\n                toast.error(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingError'});\r\n            }\r\n            setOpenAlertProcessingBackdrop(false);\r\n        } else {\r\n            return false; // Ngăn điều hướng\r\n        }\r\n    }\r\n\r\n    const handleStartExaminingButtonClick = () => {\r\n        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n            handleBeginExaminingForPantient();\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 1){\r\n            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n            handleBeginEditExaminingForPantient();\r\n        }\r\n    }\r\n\r\n    const handleCompleteExaminingButtonClick = () => {\r\n        setOpenAlertProcessingBackdrop(true)\r\n        if(dataPantientsReadyExamining.status === 1){\r\n            setTimeout(() => {\r\n                setOpenAlertProcessingBackdrop(false)\r\n                setOpenModalCompleteExamining(true);\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    //hàm này dùng khi user đang khám mà bị ngáo lỡ nhấn f5\r\n    const handleReloadUIWhenExamining = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        const reDataPatientsRegisterSort = JSON.parse(sessionStorage.dataPatientsRegisterSort)\r\n        const reDataPantientsReadyExamining = JSON.parse(sessionStorage.dataPantientsReadyExamining);\r\n        const reMainDataExamining = JSON.parse(sessionStorage.mainDataExamining);\r\n        const reDataExaminingForConclusion = JSON.parse(sessionStorage.dataExaminingForConclusion);\r\n\r\n        setListDataPatientsRegisterSort(reDataPatientsRegisterSort);\r\n        \r\n        reDataPantientsReadyExamining.isContinueExam = true;\r\n        \r\n        setDataPantientsReadyExamining(_.cloneDeep(reDataPantientsReadyExamining));\r\n        setMainDataExamining(_.cloneDeep(reMainDataExamining));\r\n        setDataExaminingForConclusion(_.cloneDeep(reDataExaminingForConclusion));\r\n\r\n        if(sessionStorage.currentHealthRecordExamining){\r\n            const reCurrentHealthRecordExamining = JSON.parse(sessionStorage.currentHealthRecordExamining);\r\n            setHealthRecordsContents(_.cloneDeep(reCurrentHealthRecordExamining));\r\n            setCurrentHealthRecordExamining(_.cloneDeep(reCurrentHealthRecordExamining));\r\n        }\r\n\r\n        if(sessionStorage.prevDataPredecessor){\r\n            const rePrevDataPredecessor = JSON.parse(sessionStorage.prevDataPredecessor);\r\n            setPrevDataPredecessor(_.cloneDeep(rePrevDataPredecessor));\r\n        }\r\n\r\n        if(sessionStorage.oldDataPredecessor){\r\n            const reOldDataPredecessor = JSON.parse(sessionStorage.oldDataPredecessor);\r\n            setOldDataPredecessor(_.cloneDeep(reOldDataPredecessor));\r\n        }\r\n        \r\n        setNewDataPredecessor({\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            categoryPres: []\r\n        })\r\n        \r\n        sessionStorage.clear();\r\n\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //lấy danh sách đăng ký khám trong ngày\r\n    const handleGetRegistersByDateNow = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1 * 1000));\r\n        const response = await getRegistersByDateNow();\r\n        if(response !== 400){\r\n            let responseListPantient = response.list;\r\n            const findPantientIsExam = responseListPantient.find(item => item.state === 1 && item.userIdDoctor === user.userId);\r\n            if(findPantientIsExam){\r\n                const responseDataExamining = await getMedicalDetailPatient(findPantientIsExam.id);\r\n                if(responseDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n                    await updateMedicalState(findPantientIsExam.id, 0);    \r\n                    const indexPantient = responseListPantient.findIndex(item => item.id === findPantientIsExam.id)\r\n                    responseListPantient[indexPantient].state = 0\r\n                }\r\n                else{\r\n                    await updateMedicalState(findPantientIsExam.id, 3);  \r\n                    const indexPantient = responseListPantient.findIndex(item => item.id === findPantientIsExam.id)\r\n                    responseListPantient[indexPantient].state = 3          \r\n                }\r\n            }\r\n\r\n            const findListPantientNotExam = responseListPantient.filter(item => item.state !== 1)\r\n\r\n            setListDataPatientsRegister(findListPantientNotExam);\r\n\r\n            const listPantientRegisterWaiting = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state !== 2) //chờ khám và đang khám\r\n            const listPantientRegisterDone = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n \r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const updatedList = [\r\n                { chipLabel: 'BN chờ khám', chipContent: listPantientRegisterWaiting.length },\r\n                { chipLabel: 'BN đã khám', chipContent: listPantientRegisterDone.length }\r\n            ]\r\n            setListPantientChipState(updatedList);\r\n        }\r\n\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n    }\r\n\r\n    const handleReloadGetRegistersByDateNow = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setCurrentHealthRecordExamining();\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        setPreviewPredecessor();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleAppyPantientData = async (dataPantientItem) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingPrevDataExamining(true);\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            setPreviewPredecessor();\r\n        }\r\n        await handleGetMedicalDetailPatient(dataPantientItem.id);\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.stt = dataPantientItem.order;\r\n        _dataPantientsReadyExamining.id = dataPantientItem.id;\r\n        _dataPantientsReadyExamining.status = 0;\r\n        _dataPantientsReadyExamining.patientsId = dataPantientItem.patient.patientId;\r\n        _dataPantientsReadyExamining.patientCode = dataPantientItem.patient.patientCode;\r\n        _dataPantientsReadyExamining.patientsName = dataPantientItem.patient.fullName;\r\n        _dataPantientsReadyExamining.patientsDOB = dataPantientItem.patient.dayOfBirth;\r\n        _dataPantientsReadyExamining.patientsMonthsOld = dataPantientItem.patient.monthsOfAge;\r\n        _dataPantientsReadyExamining.patientsGender = dataPantientItem.patient.gender;\r\n        _dataPantientsReadyExamining.patientsHeight = dataPantientItem.height;\r\n        _dataPantientsReadyExamining.patientsWeight = dataPantientItem.weight;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsPhone = dataPantientItem.patient.phoneMother ? dataPantientItem.patient.phoneMother : dataPantientItem.patient.phoneFather;\r\n        _dataPantientsReadyExamining.patientsAddress = dataPantientItem.patient.fullAddress;\r\n        _dataPantientsReadyExamining.vaccination = dataPantientItem.vaccination === true ? true : false;\r\n        _dataPantientsReadyExamining.editExamining = dataPantientItem.state === 2 ? true : false;\r\n        _dataPantientsReadyExamining.backRegister = dataPantientItem.state === 3 ? true : false;\r\n        _dataPantientsReadyExamining.isContinueExam = false;\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n        setLoadingInfoPatient(false);\r\n        setLoadingPrevDataExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //nhấn chọn bệnh nhân để load vào ô thông tin bn\r\n    const handleSelectPantientExamining = async (dataPantientItem) => {\r\n        if(dataPantientItem.state === 0 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName || dataPantientItem.state === 3 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId === '' || dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 0){\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n            else{\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n        }\r\n        \r\n        else if(dataPantientItem.state === 2 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 1){\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n            else{\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    //bắt đầu khám bệnh cho bệnh nhân\r\n    const handleBeginExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            if(prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                    //backup prevDataPredecessor để khi cần dùng\r\n                    setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n                    setOldPreviewPredecessor(_.cloneDeep(previewPredecessor));\r\n                }\r\n\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleSetMainDataExamining();\r\n                toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n            }\r\n            else{\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleGetCategoryReExamining();\r\n            }\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error(response.data, {toastId: 'error1'});\r\n        }\r\n        setLoadingPatient(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu khám cho bệnh nhân khám mới\r\n    const handleSetMainDataExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        prevDataExamining.healthRecords.forEach((healthRecordsItem) => {\r\n            if(healthRecordsItem.medicalBookId === null){\r\n                healthRecordsItem.state = 1\r\n            }\r\n        })\r\n        \r\n        //tái khám và có tiền căn đã đụng\r\n        if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === false){\r\n            const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //tái khám và có tiền căn chưa đụng\r\n        else if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === true){\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n\r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //khám mới hoàn toàn\r\n        else{\r\n            const editDataCategoryPresForConclusion = prevDataExamining.categoryPres.map((predecessorItem) => {\r\n                const mainCategoryContentsExamining = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentOrder: categoryContentsItem.categoryContentOrder,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n    \r\n                const mainCategoryExamining = {\r\n                    categoryName: predecessorItem.categoryName,\r\n                    isPredecessor: true,\r\n                    categoryOrder: predecessorItem.categoryOrder,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n    \r\n                return mainCategoryExamining\r\n            })\r\n    \r\n            const editDataHealthRecordsForConclusion = prevDataExamining.healthRecords.find((healthRecordsItem) => healthRecordsItem.patientId === dataPantientsReadyExamining.patientsId)\r\n    \r\n            setDataExaminingForConclusion({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n                conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n                categories: editDataCategoryPresForConclusion,\r\n            });\r\n    \r\n            prevDataExamining.categoryPres.forEach((categoryPresItem, categoryPresIndex) => {\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.map((categoryContentsItem) => {\r\n                    return {\r\n                        ...categoryContentsItem,\r\n                        categoryPresOrder: categoryPresIndex\r\n                    }\r\n                })\r\n                return {\r\n                    ...categoryPresItem,\r\n                }\r\n            })\r\n            \r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //bắt đầu sửa dữ liệu khám bệnh\r\n    const handleBeginEditExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n            const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n            _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n            setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n            const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            await handleGetCategoryReExamining();\r\n            setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n            setLoadingPatient(false);\r\n        }\r\n    }\r\n\r\n    //lấy dữ liệu cây thư mục khám lại\r\n    const handleGetCategoryReExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        const responseGetUpdateMedicalBook = await getUpdateMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n\r\n        if(responseGetUpdateMedicalBook.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n\r\n            if(prevDataExamining.newPredecessor === false){\r\n                setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                //backup prevDataPredecessor để khi cần dùng\r\n                setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                setOldPreviewPredecessor(_.cloneDeep(previewPredecessor));\r\n            }\r\n            \r\n            await handleSetMainDataReExamining(responseGetUpdateMedicalBook.data);\r\n            toast.success(`Đang mở khám lại cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        }\r\n        else if(responseGetUpdateMedicalBook.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu cây thư mục khám của chức năng mở khám lại\r\n    const handleSetMainDataReExamining = async (responseGetUpdateMedicalBookData) => {\r\n        prevDataExamining.healthRecords[0].state = 1\r\n        prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBookData.categories\r\n\r\n        const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n            categoryName: category.categoryName,\r\n            isHealthRecord: true,\r\n            categoryContents: category.categoryContents.map(content => ({\r\n              ...content,\r\n              categoryContentQuestions: []\r\n            })) \r\n        }))\r\n\r\n        //demo truớc data kết luận\r\n        const demoDataExaminingForConclusion = {\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            isVaccination: prevDataExamining.vaccination,\r\n            medicalRegisterId: dataPantientsReadyExamining.id !== prevDataExamining.healthRecords[0].medicalRegisterId ? dataPantientsReadyExamining.id : prevDataExamining.healthRecords[0].medicalRegisterId,\r\n            conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n            categories: updateHealthRecordsCategoriesForConclusion\r\n        }\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        //sửa categories của conclusion phần sổ khám bệnh\r\n        let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.healthRecords[0].categories);\r\n\r\n        updateCategoriesForConclusion = updateCategoriesForConclusion.map(category => {\r\n            category.categoryContents = category.categoryContents.map(content => {\r\n                const questions = content.categoryContentQuestions;\r\n    \r\n                // Check if all questions have both categoryContentAnswer and categoryContentNote as null\r\n                const allNull = questions.every(q => q.categoryContentAnswer === null && q.categoryContentNote === null);\r\n                    \r\n                if (allNull) {\r\n                  // Set categoryContentQuestions to an empty array\r\n                  content.categoryContentQuestions = [];                    \r\n                } else {\r\n                  // Filter out questions with both categoryContentAnswer and categoryContentNote as null\r\n                  content.categoryContentQuestions = questions.filter(q => q.categoryContentAnswer !== null || q.categoryContentNote !== null);\r\n                }\r\n                    \r\n                return content;\r\n            });\r\n                  \r\n            category.isHealthRecord = true\r\n            return category;\r\n        })\r\n\r\n        demoDataExaminingForConclusion.categories = updateCategoriesForConclusion\r\n\r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        //tiền căn đợt trước đã đụng (newPredecessor = false)\r\n        if(responseGetUpdatePredecessor.status === 200)\r\n        {   \r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        \r\n        //tiền căn đợt trước chưa đụng (newPredecessor = true) \r\n        else{\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n        \r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n    }\r\n\r\n    //sửa dữ liệu tiền căn cho mở khám lại hoặc tái khám\r\n    const handleEditDataPredecessor = async (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        \r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        const findUpdatePredecessor = responseGetUpdatePredecessor.data.find(responseGetUpdatePredecessorItem => responseGetUpdatePredecessorItem.categoryOrder === categoryOrder);\r\n\r\n        mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n            if(categoryPresItem.categoryOrder === findUpdatePredecessor.categoryOrder){\r\n                categoryPresItem.categoryContents = findUpdatePredecessor.categoryContents\r\n                categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                    categoryContentsItem.isLock = false\r\n                })\r\n                categoryPresItem.isLock = false\r\n            }\r\n        })\r\n\r\n        const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n        \r\n        if(!newDataPredecessor.categoryPres.some(categoryPresItem => categoryPresItem.categoryName === categoryName)){\r\n            newDataPredecessor.categoryPres = prevDataPredecessor\r\n        }\r\n\r\n        handleSelectCategoryClick(selectCategoryReExamining);\r\n\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //huỷ không sửa dữ liệu tiền căn nữa\r\n    const handleCancelEditDataPredecessor = (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        setTimeout(() => {\r\n            const findPrevDataPredecessorByCategoryName = oldDataPredecessor.find(prevDataPredecessorItem => prevDataPredecessorItem.categoryOrder === categoryOrder);\r\n\r\n            if(findPrevDataPredecessorByCategoryName){\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        categoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                        categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                            categoryContentsItem.isLock = true\r\n                        })\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                newDataPredecessor.categoryPres.forEach((newDataPredecessorCategoryPresItem) => {\r\n                    if(newDataPredecessorCategoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        newDataPredecessorCategoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === categoryOrder){\r\n                        categoryPresItem.categoryContents = [];\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                const _newDataPredecessor = {...newDataPredecessor};\r\n                const removeCategoryPredecessor = _newDataPredecessor.categoryPres.filter(categoryPresItem => categoryPresItem.categoryOrder !== categoryOrder);\r\n                newDataPredecessor.categoryPres = removeCategoryPredecessor\r\n            }\r\n\r\n            setPrevDataPredecessor(_.cloneDeep(oldDataPredecessor));\r\n\r\n            const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n            handleSelectCategoryClick(selectCategoryReExamining)\r\n\r\n            const findOldDataPredecessorByCategoryOrder = oldPreviewPredecessor.filter(item => item.categoryOrder === categoryOrder);\r\n            const findPreviewPredecessorNotByCategoryOrder = previewPredecessor.filter(item => item.categoryOrder !== categoryOrder);\r\n\r\n            const newPreviewPredecessor = findOldDataPredecessorByCategoryOrder.concat(findPreviewPredecessorNotByCategoryOrder);\r\n            setPreviewPredecessor(newPreviewPredecessor);\r\n   \r\n            setOpenAlertProcessingBackdrop(false);\r\n        }, 300)       \r\n    }\r\n\r\n    //tạo data tiền căn để lưu lại khi tái khám hoặc mở khám lại\r\n    //câu trả lời dạng check chọn true false\r\n    const handleAnswerCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n    }\r\n\r\n    //câu trả lời dạng check chọn sửa lại note\r\n    const handleNoteCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n        const isEditNote = true;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], takenValue, isEditNote)\r\n        }, 0)\r\n    }\r\n\r\n    //câu trả lời dạng giá trị, sửa lại note\r\n    const handleNoteValueQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsValuePredecessorForReExamOrBackExam(\r\n                categoryContentsIndex,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, \r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], \r\n                takenValue\r\n            )\r\n        }, 0)\r\n    }\r\n\r\n    const createSelectedQuestionsValuePredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue) => {\r\n        const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n        if(findNewDataPredecessorCategoryOrder){\r\n            // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n            const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n            if(findNewDataPredecessorCategoryContents){\r\n                // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue !== '');\r\n                const questionIndexRemove = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue === '');\r\n\r\n                if(questionIndex !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value khác rỗng => gán note cũ bằng note mới\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n                }\r\n\r\n                else if(questionIndexRemove !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value bằng rỗng => bỏ note đó\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexRemove, 1);\r\n                }\r\n\r\n                else{\r\n                    //nếu không tìm thấy, đẩy note mới vào\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                }\r\n            }\r\n\r\n            else{\r\n                // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                const newDataPredecessorCategoryContents = {\r\n                    categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                    categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                    categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                    categoryContentQuestions: [categoryContentQuestion],\r\n                    categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                    categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                }\r\n                findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n            }\r\n        }\r\n\r\n        else{\r\n            // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n            const newDataPredecessorCategoryContents = {\r\n                categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                categoryContentQuestions: [categoryContentQuestion],\r\n                categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n            }\r\n\r\n            const newDataPredecessorCategoryPres = {\r\n                categoryOrder: categorySelectedExamining.categoryOrder,\r\n                categoryName: categorySelectedExamining.categoryName,\r\n                newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                categoryContents: [newDataPredecessorCategoryContents]\r\n            }\r\n\r\n            newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n        }   \r\n        \r\n        createPreviewDataPredecessor(categoryContentQuestion);\r\n    }\r\n\r\n    const createSelectedQuestionsPredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue, isEditNote) => {\r\n        if(isEditNote){\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){       \r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng rỗng\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n         \r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                        else{\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndex, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else{\r\n            //câu hỏi là dạng check câu trả lời là true\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote !== '');\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n                        }\r\n                        else{\r\n                            // Nếu tìm thấy categoryContentOrder, thêm câu hỏi mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }       \r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents)\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check câu trả lời là false\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndexNoteDontExit = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote === null);\r\n                        if(questionIndexNoteDontExit !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexNoteDontExit, 1);\r\n                        }\r\n                        else{\r\n                            const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n    }\r\n\r\n    //lưu dữ liệu tiền căn khi sửa xong\r\n    const handleEditDataPredecessorForSaving = (categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setTimeout(() => {\r\n            const findNewDataPredecessor = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPres => newDataPredecessorCategoryPres.categoryOrder === categoryOrder)\r\n\r\n            const findOldDataPredecessorCategoryOrder = oldDataPredecessor.find(oldDataPredecessorItem => oldDataPredecessorItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n\r\n            if(findOldDataPredecessorCategoryOrder){\r\n                // Nếu tìm thấy categoryOrder, duyệt qua categoryContents của findNewDataPredecessor\r\n                findNewDataPredecessor.categoryContents.forEach(findNewDataPredecessorCategoryContentsItem => {\r\n\r\n                    let content = findOldDataPredecessorCategoryOrder.categoryContents.find(findOldDataPredecessorCategoryContentsItem => findOldDataPredecessorCategoryContentsItem.categoryContentOrder === findNewDataPredecessorCategoryContentsItem.categoryContentOrder);\r\n\r\n                    if(content){\r\n                        // Loại bỏ các categoryContentQuestions trong content nếu không tồn tại trong findNewDataPredecessorCategoryContentsItem\r\n                        content.categoryContentQuestions = content.categoryContentQuestions.filter(q =>\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.some(newQ => newQ.categoryContentQuestionOrder === q.categoryContentQuestionOrder)\r\n                        );\r\n\r\n                        // Nếu tìm thấy categoryContentOrder, duyệt qua categoryContentQuestions\r\n                        if(findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.length !== 0){\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.forEach(findNewDataPredecessorQuestionItem => {\r\n                                if(findNewDataPredecessorQuestionItem.categoryContentAnswer === null && findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'check'){\r\n                                    // Nếu categoryContentAnswer là false và categoryContentNote là null, loại bỏ question đó\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else if(findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'string'){\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else{\r\n                                    const questionIndex = content.categoryContentQuestions.findIndex(q => q.categoryContentQuestionOrder === findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n\r\n                                    if (questionIndex !== -1) {\r\n                                        // Thay thế question nếu trùng khớp\r\n                                        content.categoryContentQuestions[questionIndex] = findNewDataPredecessorQuestionItem;\r\n                                    }\r\n\r\n                                    else {\r\n                                        // Thêm question mới nếu không trùng khớp\r\n                                        content.categoryContentQuestions.push(findNewDataPredecessorQuestionItem);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        }else{\r\n                            findOldDataPredecessorCategoryOrder.categoryContents = findOldDataPredecessorCategoryOrder.categoryContents.filter(contentCategoryContentsItem => contentCategoryContentsItem.categoryContentOrder !== findNewDataPredecessorCategoryContentsItem.categoryContentOrder)\r\n                        }\r\n                        \r\n                    }else{\r\n                        findOldDataPredecessorCategoryOrder.categoryContents.push(findNewDataPredecessorCategoryContentsItem);\r\n                    }\r\n\r\n                })\r\n            }else{\r\n                // Thêm toàn bộ object2 nếu không tìm thấy findNewDataPredecessor\r\n                oldDataPredecessor.push(findNewDataPredecessor)\r\n            }\r\n\r\n            oldDataPredecessor.forEach((oldDataPredecessorItem) => {\r\n                oldDataPredecessorItem.categoryContents = oldDataPredecessorItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length !== 0)\r\n            }) \r\n\r\n            const removeOldDataPredecessorCategoryPres = oldDataPredecessor.findIndex(item => item.categoryContents.length === 0);\r\n            if(removeOldDataPredecessorCategoryPres !== -1){\r\n                oldDataPredecessor.splice(removeOldDataPredecessorCategoryPres, 1);\r\n            }\r\n\r\n            const saveNewDataPredecessor = {\r\n                patientId: newDataPredecessor.patientId,\r\n                categoryPres: oldDataPredecessor\r\n            }\r\n\r\n            handleSaveNewDataPredecessor(saveNewDataPredecessor, findNewDataPredecessor)            \r\n        }, 500)\r\n    }\r\n\r\n    const handleSaveNewDataPredecessor = async (saveNewDataPredecessor, findNewDataPredecessor) => {\r\n        const responseCreateAddPredecessor = await createAddPredecessor(saveNewDataPredecessor);\r\n        if(responseCreateAddPredecessor.status === 200){\r\n\r\n            const _mainDataExamining = {...mainDataExamining};\r\n\r\n            _mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                if(categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder){\r\n                    categoryPresItem.categoryContents = findNewDataPredecessor.categoryContents\r\n                    categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                        categoryContentsItem.isLock = true\r\n                    })\r\n                    if(findNewDataPredecessor.categoryContents.length === 0){\r\n                        categoryPresItem.newCategoryPre = true\r\n                    }else{\r\n                        categoryPresItem.newCategoryPre = false\r\n                    }\r\n                    categoryPresItem.isLock = true\r\n                }\r\n\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.filter(item => item.categoryContentQuestions.length !== 0);\r\n            })\r\n\r\n            setMainDataExamining(_mainDataExamining);\r\n\r\n            const selectCategoryReExamining = _mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n\r\n            setPreviewPredecessor(previewPredecessor);\r\n            setOldPreviewPredecessor(previewPredecessor);\r\n            \r\n            toast.success('Đã cập nhật lại tiền căn', {toastId: 'handleSaveNewDataPredecessorSuccess'});\r\n            \r\n            handleSelectCategoryClick(selectCategoryReExamining);\r\n        }\r\n        else{\r\n            toast.error(responseCreateAddPredecessor.data, {toastId: 'handleSaveNewDataPredecessorError'});\r\n        }\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //tìm danh mục khám gồm tiền căn, sổ sức khỏe, dinh dưỡng...\r\n    const handleGetMedicalDetailPatient = async (id) => {\r\n        const responseDataExamining = await getMedicalDetailPatient(id);\r\n        setPrevDataExamining(responseDataExamining);\r\n\r\n        const findNewCategoryPreIsFalse = responseDataExamining.categoryPres.filter(item => item.newCategoryPre === false);\r\n        const previewDataPredecessor = findNewCategoryPreIsFalse.flatMap(item => \r\n            item.categoryContents.flatMap(content => \r\n                content.categoryContentQuestions.map(question => ({\r\n                    categoryContentQuestionOrder: question.categoryContentQuestionOrder,\r\n                    categoryContentQuestionName: question.categoryContentQuestionName,\r\n                    categoryContentQuestionType: question.categoryContentQuestionType,\r\n                    categoryContentAnswer: question.categoryContentAnswer,\r\n                    categoryContentNote: question.categoryContentNote,\r\n                    categoryContentDefauls: question.categoryContentDefauls,\r\n                    categoryOrder: item.categoryOrder // Thêm categoryOrder từ cấp trên\r\n                }))\r\n            )\r\n        )\r\n        setPreviewPredecessor(previewDataPredecessor);\r\n    }\r\n\r\n    //chọn mục lục để khám\r\n    const handleSelectCategoryClick = async (categoryIncludeCotent) => {\r\n        if(openCollapseHealthRecords === true){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }\r\n\r\n        if(contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length !== 0){\r\n            setContentCategorySelectedExamining([]);\r\n        }\r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                ...categoryIncludeCotent,\r\n                //contentQuantity: categoryIncludeCotent.categoryContents.length\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining([]);\r\n    }\r\n\r\n    //chọn cây thư mục khám sổ sức khỏe\r\n    const handleSelectHealthRecords = (healthRecords) => {\r\n        if(openCollapseHealthRecords === false){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }        \r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                categoryName: 'Sổ sức khỏe',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(\r\n            {\r\n                healthRecordsContentsType: 'tree',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n    }\r\n\r\n    //chọn chỉ định một sổ khám bệnh (tìm chi tiết một sổ khám bệnh)\r\n    const handleSelectHealthRecordsItem = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingContentsExamining(true);\r\n\r\n        //dùng cho tái khám (có tiền căn đã đụng), mở khám lại\r\n        if(currentHealthRecordExamining){\r\n            if(healthRecordsContents.healthRecordsName !== examinationName){\r\n                if(healthRecordsState === 2){\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n                else if(healthRecordsState === 1 && dataPantientsReadyExamining.editExamining || healthRecordsState === 1 && dataPantientsReadyExamining.backRegister){\r\n                    setHealthRecordsContents({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    })\r\n\r\n                    setCurrentHealthRecordExamining({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    });\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && dataPantientsReadyExamining.isContinueExam){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else{\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n            }\r\n        }\r\n        //dùng cho tái khám (tiền căn chưa đụng), khám mới hoàn toàn\r\n        else{\r\n            await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n        }\r\n\r\n        setLoadingContentsExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const findHealthRecord = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        const responseMedicalBook = await getMedicalBook(medicalRegisterId);\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        });\r\n\r\n        if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && mainDataExamining.healthRecords[0].medicalBookId === null){\r\n            const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n                \r\n                const mainCategoryExamining = {\r\n                    categoryName: categoriesItem.categoryName,\r\n                    isHealthRecord: true,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n\r\n                return mainCategoryExamining\r\n            })\r\n\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    //chọn loại mục khám của một sổ khám bệnh\r\n    const handleOpenHealthRecordsItem = (categoryPatientsIndex) => {\r\n        setOpenCollapseHealthRecordsItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryPatientsIndex] = !newOpen[categoryPatientsIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleAnswerCheckQuestion = (categoryContentsIndex, questionIndex, answer) => {\r\n        //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng check\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else{\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }   \r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const handleNoteCheckQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            )\r\n        }, 0)\r\n    }\r\n\r\n    const handleAnswerValueQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }, 0)\r\n    }\r\n\r\n    const handleAnswerCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else if(answer === true){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else{\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n    }\r\n    \r\n    //trả lời câu hỏi của mục sổ khám bệnh\r\n    const handleNoteCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            );\r\n        }, 0)\r\n    }\r\n\r\n    const createSelectedQuestionsExaminingForConclusion = (categoryName, isPredecessor, categoryContentQuestion, questionOrder, categoryContentTitle, isEditNote) => {\r\n        if(categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            if(isEditNote){\r\n                if(categoryContentQuestion.categoryContentNote !== ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n\r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n\r\n                else if(categoryContentQuestion.categoryContentNote === ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentAnswer === null || categoryContentQuestionsItem.categoryContentAnswer === false){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n            }\r\n            else{\r\n                //question dạng check nhưng answer là true\r\n                if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n    \r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n    \r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n    \r\n                //question dạng check nhưng answer là false\r\n                else if(categoryContentQuestion.categoryContentAnswer === false && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentNote === null || categoryContentQuestionsItem.categoryContentNote === ''){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion)\r\n                }\r\n            }\r\n        }\r\n\r\n        else{\r\n            //question dạng giá trị nhưng khác rỗng\r\n            if(categoryContentQuestion.categoryContentNote !== '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                // Duyệt qua từng categoriesItem trong categories\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                    // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                    const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                        question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                    );\r\n                    \r\n                                    if (existingQuestion) {\r\n                                        // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                        existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                    } else {\r\n                                        // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                        categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                    }\r\n\r\n                                } else {\r\n                                // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                    categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                }\r\n                            }\r\n                        });        \r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n            //question dạng giá trị nhưng là rỗng\r\n            else if(categoryContentQuestion.categoryContentNote === '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n        }\r\n\r\n        if(isPredecessor === true){\r\n            createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n        }\r\n            \r\n    }\r\n\r\n    const createPreviewDataPredecessor = (categoryContentQuestion, isEditNote) => {\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            let _previewPredecessor = [...previewPredecessor];\r\n\r\n            const findQuestion = _previewPredecessor.find(item => item.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n            if(findQuestion){\r\n                if(findQuestion.categoryContentQuestionType === 'string'){\r\n                    if(categoryContentQuestion.categoryContentNote === ''){\r\n                        _previewPredecessor = previewPredecessor.filter(item => item.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName);\r\n                    }\r\n                    else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                        const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                        if(existingQuestion){\r\n                            existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                        }\r\n                        else{\r\n                            categoryContentQuestion.categoryOrder = categorySelectedExamining.categoryOrder\r\n                            _previewPredecessor.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                }\r\n                else if(findQuestion.categoryContentQuestionType === 'check'){\r\n                    if(isEditNote){\r\n                        if(categoryContentQuestion.categoryContentNote === ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName && question.categoryContentAnswer === true);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                if(categoryContentQuestion.categoryContentAnswer === null || categoryContentQuestion.categoryContentAnswer === false){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                categoryContentQuestion.categoryOrder = categorySelectedExamining.categoryOrder\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    else{\r\n                        if(categoryContentQuestion.categoryContentAnswer === false || categoryContentQuestion.categoryContentAnswer === null){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                if(existingQuestion.categoryContentNote === '' || existingQuestion.categoryContentNote === null){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                                else if(existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                    existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                }               \r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentAnswer === true){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion || existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                            }\r\n                            else{\r\n                                categoryContentQuestion.categoryOrder = categorySelectedExamining.categoryOrder\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }        \r\n                    }\r\n                }\r\n            }\r\n\r\n            else{\r\n                categoryContentQuestion.categoryOrder = categorySelectedExamining.categoryOrder\r\n                _previewPredecessor.push(categoryContentQuestion);\r\n            }\r\n            setPreviewPredecessor(_previewPredecessor)\r\n        }\r\n\r\n        else{\r\n            setPreviewPredecessor([categoryContentQuestion])\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        // Đăng ký sự kiện nhận thông báo bn đăng ký khám khi component được mount\r\n        const handleReceiveMessage = (medicalRegisterMessage) => {\r\n            if(medicalRegisterMessage === true && dataPantientsReadyExamining.id === ''){\r\n                setLoadingPatient(true);\r\n                handleGetRegistersByDateNow();\r\n            }\r\n        };\r\n\r\n        startSignalRConnection(localStorage.getItem('jwt', handleReceiveMessage))\r\n\r\n        onReceiveMessage(handleReceiveMessage);\r\n\r\n        return () => {\r\n            // Dừng lắng nghe sự kiện nếu cần khi component Chat unmount\r\n        };\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(dataPantientsReadyExamining.status === 1 && alertVisible){\r\n                const userConfirmed = window.confirm(`Bạn đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, có chắc là muốn đăng xuất không?`);\r\n                if(userConfirmed){\r\n                    sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                    sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                    sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n\r\n                    if(currentHealthRecordExamining){\r\n                        sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                    }\r\n\r\n                    if(prevDataPredecessor){\r\n                        sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                    }\r\n\r\n                    if(oldDataPredecessor){\r\n                        sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                    }\r\n                    confirmAlert();\r\n                }\r\n                else{\r\n                    resetAlert();\r\n                }\r\n        }\r\n\r\n        else if(dataPantientsReadyExamining.status){\r\n            setIsFormDirty(true)\r\n\r\n            const handleBeforeUnload = (e) => {\r\n                const confirmationMessage = 'Bạn có chắc chắn muốn rời khỏi trang này?';\r\n                e.returnValue = confirmationMessage; // Hiển thị thông báo cảnh báo\r\n                return confirmationMessage;\r\n            };\r\n\r\n            const unblock = history.block((location, action) => {\r\n                if (isFormDirty) {\r\n                    const confirmLeave = window.confirm(\r\n                        'Bạn có chắc chắn muốn rời khỏi trang này? Những thay đổi sẽ không được lưu....'\r\n                    );\r\n                    if (confirmLeave) {\r\n                        const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                        sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                        sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                        sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                        sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                        if(currentHealthRecordExamining){\r\n                            sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                        }\r\n    \r\n                        if(prevDataPredecessor){\r\n                            sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                        }\r\n    \r\n                        if(oldDataPredecessor){\r\n                            sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                        }\r\n\r\n                        unblock(); // Hủy chặn để điều hướng\r\n                        history.push(location.pathname); // Điều hướng đến trang mới\r\n                        \r\n                    } else {\r\n                        return false; // Ngăn điều hướng\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n    \r\n            const handleUnload = () => {                \r\n                const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                \r\n                sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                if(currentHealthRecordExamining){\r\n                    sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                }\r\n    \r\n                if(prevDataPredecessor){\r\n                    sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                }\r\n    \r\n                if(oldDataPredecessor){\r\n                    sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                }\r\n            };\r\n            \r\n            window.addEventListener('beforeunload', handleBeforeUnload);\r\n            window.addEventListener('unload', handleUnload);\r\n            \r\n            return () => {\r\n                window.removeEventListener('beforeunload', handleBeforeUnload);\r\n                unblock();\r\n                window.removeEventListener('unload', handleUnload);                \r\n            };\r\n        }\r\n\r\n        else if(alertVisible){\r\n            confirmAlert();\r\n        }\r\n    }, [dataPantientsReadyExamining, mainDataExamining, currentHealthRecordExamining, dataExaminingForConclusion, alertVisible, confirmAlert, resetAlert, isLogOutClick, history, isFormDirty])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Doctor'){\r\n                history.push('/404');\r\n            }\r\n            else{\r\n                if(sessionStorage.dataPantientsReadyExamining){\r\n                    handleReloadUIWhenExamining();\r\n                }\r\n                else{\r\n                    handleGetRegistersByDateNow();\r\n                }\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(isDialogChangePasswordOpen === false){\r\n            const handleKeyDown = (event) => {\r\n                if(event.keyCode === 112){\r\n                    event.preventDefault();\r\n                }\r\n\r\n                if(dataPantientsReadyExamining.patientsId !== '' && openAlertProcessingBackdrop === false && openModalCompleteExamining === false && event.keyCode !== 116){\r\n                    if(event.keyCode === 112 && dataPantientsReadyExamining.status === 1){\r\n                        event.preventDefault();\r\n                        handleCancelExamining();\r\n                    }\r\n\r\n                    else if(event.keyCode === 113 && prevDataExamining){\r\n                        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n                            handleBeginExaminingForPantient();\r\n                        }\r\n                        else if(dataPantientsReadyExamining.status === 1){\r\n                            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n                        }\r\n                        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n                            handleBeginEditExaminingForPantient();\r\n                        }\r\n                    }\r\n\r\n                    else if(event.keyCode === 115){\r\n                    setOpenAlertProcessingBackdrop(true)\r\n                        if(dataPantientsReadyExamining.status === 1){\r\n                            setTimeout(() => {\r\n                                setOpenAlertProcessingBackdrop(false)\r\n                                setOpenModalCompleteExamining(true);\r\n                            }, 1000)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            document.addEventListener('keydown', handleKeyDown);\r\n\r\n            return () => {\r\n                document.removeEventListener('keydown', handleKeyDown);\r\n            };\r\n        }\r\n        \r\n    }, [dataPantientsReadyExamining, openModalCompleteExamining, openAlertProcessingBackdrop, openModalCompleteExamining, isDialogChangePasswordOpen])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n                <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                    <Grid container spacing={2} sx={{pl: 0.6, pr: 0.6}}>\r\n\r\n                        <Grid item xs={5}>\r\n                            {/* <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{`${moment().format('dddd')}, ${moment().format('LL')}`}</Typography> */}\r\n                            <TableContainer component={Paper} sx={{ height: '330px', boxShadow: 5, borderRadius: '10px' }}>\r\n                                {loadingPatient ?\r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                                            <CircularProgress />\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                                        </Box>        \r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Box>\r\n                                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                                                    <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                                                        <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                                        onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                                                    </Badge>\r\n                                                ))}\r\n                                            </Stack>\r\n\r\n                                            <Box sx={{mt: 0.2, position: 'relative', display: 'flex', justifyContent: 'center', flexDirection: 'column'}}>\r\n                                                {dataPantientsReadyExamining.status !== 1 ?\r\n                                                    <>\r\n                                                        <Typography variant=\"subtitle2\" sx={{textAlign: 'center', mt: 0.2, fontSize: '1rem'}}>Nếu không tìm thấy bệnh nhân, hãy nhấn nút tải lại phía dưới</Typography>\r\n                                                        <CachedIcon sx={{color: 'brown', fontWeight: 'bolder', position: 'absolute', right: 55, top: 30, fontSize: '2.5rem', cursor: 'pointer'}} titleAccess='Tải lại' onClick={() => handleReloadGetRegistersByDateNow()}/>\r\n                                                    </>\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                                <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                                            </Box>\r\n                                            \r\n                                            <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                                                <TextField sx={{mb: 0.6, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                                        startAdornment: (\r\n                                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                                        ),\r\n                                                        endAdornment: (\r\n                                                            <InputAdornment position='end'>\r\n                                                                {searchPatientsQuery !== '' ? \r\n                                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                                                                    /> \r\n                                                                : \r\n                                                                    null\r\n                                                                }\r\n                                                            </InputAdornment>  \r\n                                                        )\r\n                                                    }}>\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Box>\r\n                                \r\n                                        <Table stickyHeader >\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listDataPatientsRegisterSort.map((dataPantientItem, dataPantientIndex) => (\r\n                                                    <TableRow hover role=\"checkbox\" key={dataPantientItem.order}\r\n                                                        sx={{ cursor: 'pointer', backgroundColor: dataPantientItem.state === 1 ? '#26c6da' : '#fff', \r\n                                                        ':hover': {backgroundColor: dataPantientItem.state === 1 ? '#00bcd4 !important' : 'rgba(0, 0, 0, 0.1) !important'} }} \r\n                                                        onClick={() => handleSelectPantientExamining(dataPantientItem)}\r\n                                                    >\r\n                                                        <TableCell align='left' sx={{width: '20px'}}>{dataPantientItem.order}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '150px'}}>{dataPantientItem.patient.patientCode}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '240px'}}>{dataPantientItem.patient.fullName}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </>\r\n                                }\r\n                            </TableContainer>\r\n\r\n                            {/* cây thư mục khám */}\r\n                            <Box style={{width: '100%', marginTop: '10px', borderRadius: '10px', border: '2px solid red', height: '300px', overflow: 'auto'}} >\r\n                                {\r\n                                    mainDataExamining.length === 0 && loadingCategoryExamining === false || prevDataExamining === false ?\r\n                                        null\r\n                                    :\r\n                                    <>\r\n                                        {loadingCategoryExamining ?\r\n                                            <Box sx={{backgroundColor: '#e0e0e0', borderRadius: '10px', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu cây thư mục khám, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <>\r\n                                                <div className='category-scrollbar'>\r\n                                                    <List sx={{p: 0, display: 'inline-grid'}}>\r\n                                                        {mainDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                                            <Box sx={{display: 'inline-flex'}} key={`category ${predecessorIndex}`}>\r\n                                                                <ListItemButton\r\n                                                                    sx={{\r\n                                                                    width: 'fitContent', pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'},\r\n                                                                    backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffd54f' : ''}} \r\n                                                                    onClick={() => handleSelectCategoryClick(predecessorItem)}\r\n                                                                >\r\n                                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                        <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </Box>\r\n                                                                </ListItemButton>\r\n\r\n                                                                {predecessorItem.newCategoryPre === true && predecessorItem.newPredecessor === true ? \r\n                                                                    null\r\n                                                                :\r\n                                                                    <>\r\n                                                                        {predecessorItem.newCategoryPre === false  ?\r\n                                                                            <>  \r\n                                                                                <CheckCircleIcon sx={{color: 'green', fontSize: '1.4rem', margin: 'auto'}} titleAccess='đã theo dõi'/>\r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        {mainDataExamining.newPredecessor ? \r\n                                                                            null\r\n                                                                        :\r\n                                                                            predecessorItem.isLock === true ?\r\n                                                                                <>  \r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <EditIcon sx={{color: 'blue', fontSize: '1.6rem'}} titleAccess='Sửa'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>\r\n                                                                            \r\n                                                                            :\r\n                                                                                <>\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessorForSaving(predecessorItem.categoryOrder)}>\r\n                                                                                        <BeenhereIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Lưu'/>\r\n                                                                                    </IconButton>\r\n\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleCancelEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <CancelIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Hủy'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>   \r\n                                                                        }                                  \r\n                                                                    </>\r\n                                                                }\r\n                                                            </Box>\r\n                                                        ))}\r\n\r\n                                                        <ListItemButton \r\n                                                            sx={{pt: '4px', pb: '4px', borderRadius: '8px', backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffd54f' : '',\r\n                                                                ':hover': {backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                            onClick={() => handleSelectHealthRecords(mainDataExamining.healthRecords)}\r\n                                                        >\r\n                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}>\r\n                                                                <SendIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                            </ListItemIcon>\r\n\r\n                                                            <ListItemText primary={'Sổ sức khỏe'} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>                                                    \r\n                                                        </ListItemButton>\r\n\r\n                                                        <Collapse in={openCollapseHealthRecords} timeout=\"auto\" unmountOnExit>\r\n                                                            <div style={{ paddingLeft: '24px' }}>\r\n                                                                {mainDataExamining.healthRecords.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                    <ListItemButton key={`healthRecords ${healthRecordsIndex}`} sx={{pt: '0px', pb: '0px', width: 'auto', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                                        onClick={() => handleSelectHealthRecordsItem(healthRecordsItem.medicalRegisterId, healthRecordsItem.examinationName, healthRecordsItem.state)}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: healthRecordsItem.state === 1 ? 'red' : '#009688'}}}>\r\n                                                                            <FiberManualRecordIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={healthRecordsItem.examinationName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </ListItemButton>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </Collapse>\r\n                                                    </List>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </Box>\r\n                            {activeChip.chipOrder === 0 && dataPantientsReadyExamining.editExamining === false ?\r\n                                <div className='instruction' style={{display: 'flex', justifyContent: 'space-between', marginTop: '4.5px'}}>\r\n                                    <Button variant=\"contained\" color=\"error\" onClick={() => handleCancelExamining()}>Hủy khám (f1)</Button>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Bắt đầu khám (f2)</Button>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                </div>\r\n                            :\r\n                                dataPantientsReadyExamining.id === '' ?\r\n                                    null\r\n                                :\r\n                                    dataPantientsReadyExamining.id !== '' && dataPantientsReadyExamining.status === 0 ? \r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            {/* <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleDeleteExamining()}>Xóa khám (f1)</Button> */}\r\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Sửa đổi (f2)</Button>\r\n                                        </div>\r\n                                    :\r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleCancelExamining()}>Hủy thay đổi (f1)</Button>\r\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                        </div>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            {/* thông tin bệnh nhân */}\r\n                            <Box sx={{boxShadow: 4, borderRadius: '20px', border: '2px solid blue', height: '230px', mb: '8px', overflow: 'auto'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', mt: 0.6, mb: 0.6, fontWeight: 'bolder', fontSize: '1.2rem', textAlign: 'center'}}>Thông tin bệnh nhân</Typography>\r\n                                <Box sx={{pl: 2.8, pr: 2.8, mt: 1}}>\r\n                                    {loadingInfoPatient ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', mt: 4}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải thông tin bệnh nhân, hãy chờ một chút...</Typography>\r\n                                        </Box>\r\n                                    :\r\n                                        <>\r\n                                            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Mã BN: ${dataPantientsReadyExamining.patientCode || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Họ tên: ${dataPantientsReadyExamining.patientsName || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    {dataPantientsReadyExamining.patientsGender === true ? <MaleIcon sx={{color: 'coral', fontSize: '27px'}}/> : <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/>}\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Giới tính: ${dataPantientsReadyExamining.patientsGender !== '' ? dataPantientsReadyExamining.patientsGender === true ? 'Nam' : 'Nữ' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: {dataPantientsReadyExamining.patientsDOB ? moment(dataPantientsReadyExamining.patientsDOB).format(\"DD/MM/YYYY\") : ''}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Tháng tuổi: ${dataPantientsReadyExamining.patientsMonthsOld || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Sdt: ${dataPantientsReadyExamining.patientsPhone || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiBodyHeight style={{color: 'tomato', fontSize: '1.42rem', marginLeft: '2px'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 0.8}}>\r\n                                                        {`Chiều cao: ${dataPantientsReadyExamining.patientsHeight ? dataPantientsReadyExamining.patientsHeight + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Cân nặng: ${dataPantientsReadyExamining.patientsWeight ? dataPantientsReadyExamining.patientsWeight + ' kg' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <TbRulerMeasure style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Vòng đầu: ${dataPantientsReadyExamining.patientsHeadCircumference ? dataPantientsReadyExamining.patientsHeadCircumference + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={12} sx={{display: 'inline-flex'}}>\r\n                                                    <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Địa chỉ: ${dataPantientsReadyExamining.patientsAddress || ''}`}</Typography>\r\n                                                </Grid> \r\n\r\n                                                {previewPredecessor ? \r\n                                                    <>\r\n                                                        <Grid item xs={12} >\r\n                                                            <Box sx={{display: 'flex', flexWrap: 'wrap'}}>\r\n                                                                {previewPredecessor.map((item, index) => (\r\n                                                                    <Typography variant='subtitle1' sx={{ml: 0.5, fontSize: '1.1rem', color: 'mediumblue', fontWeight: 'bolder'}} key={index} >{`${item.categoryContentQuestionName}: ${item.categoryContentAnswer ? 'có' : ''} ${item.categoryContentNote !== null ? `${item.categoryContentNote}` : ''}, `}</Typography>\r\n                                                                ))}\r\n                                                            </Box>\r\n                                                            \r\n                                                        </Grid> \r\n                                                    </>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </Grid>\r\n                                        </>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {/* nội dung khám */}\r\n                            <div className='container-content-examining'>\r\n                                {\r\n                                    loadingPrevDataExamining ? \r\n                                        <>\r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu kỳ khám gần nhất, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    :\r\n                                    prevDataExamining ? \r\n                                        prevDataExamining.healthRecords.length === 1 && prevDataExamining.healthRecords[0].medicalBookId === null ? \r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <Typography variant='h6'>Bệnh nhân không có kỳ khám trước</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <div className='content-examining'><PreviewLastExamining prevDataExamining={prevDataExamining} /></div>\r\n                                    :\r\n                                        null\r\n                                }\r\n                                \r\n                                {categorySelectedExamining.categoryContents ? \r\n                                    <>\r\n                                        <div className='content-examining'>\r\n                                            {loadingContentsExamining ? \r\n                                                <>\r\n                                                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                        <CircularProgress />\r\n                                                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh, hãy chờ một chút...</Typography>\r\n                                                    </Box>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {categorySelectedExamining.newCategoryPre === true && categorySelectedExamining.isLock === true ? \r\n                                                        <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                            <Typography variant='h6'>Bệnh nhân không có tiền căn đang được theo dõi ở mục này</Typography>\r\n                                                        </Box>\r\n                                                    :\r\n                                                        contentCategorySelectedExamining.healthRecordsContentsType !== 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                            categorySelectedExamining.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                                <Box key={categoryContentsIndex} sx={categoryContentsItem.categoryContentTitle === null ? {marginTop: '30px'} : {}}>\r\n\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>{categoryContentsItem.categoryContentTitle || ''}</Typography>\r\n                                                                    {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                        <Box key={`categoryContentQuestionName ${questionIndex}`}>\r\n                                                                            <Grid container rowSpacing={0}>\r\n                                                                                {questionIndex === 0 ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                        </Grid>\r\n\r\n                                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                    <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                </Grid>\r\n\r\n                                                                                                <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            : \r\n                                                                                                <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                        }                                                                             \r\n                                                                                    </> \r\n                                                                                    : \r\n                                                                                    null\r\n                                                                                }\r\n                                                                                \r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1.2rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled={categorySelectedExamining.isLock === true ? true : false} \r\n                                                                                            checked={questionItem.categoryContentAnswer === true ? true : false } \r\n                                                                                            classes={{ root: classes.root }} color='error' \r\n                                                                                            sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} \r\n                                                                                            onClick={() => \r\n                                                                                                dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleAnswerCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer) : handleAnswerCheckQuestion(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer)} />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={7} >\r\n                                                                                            <div className='textfield-for-answer'>\r\n                                                                                                <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                        onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleNoteCheckQuestion(categoryContentsIndex, questionIndex, e.target.value)}\r\n                                                                                                        defaultValue={questionItem.categoryContentNote}\r\n                                                                                                    />\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>   \r\n                                                                                    :\r\n                                                                                    <>\r\n                                                                                        {categorySelectedExamining.categoryOrder === 4 ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8} >\r\n                                                                                                    <div className='textfield-for-answer'>\r\n                                                                                                        <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                                onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                                defaultValue={questionItem.categoryContentNote}\r\n                                                                                                            />\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            :\r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8}>\r\n                                                                                                    <div className='textfield-for-answer' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >\r\n                                                                                                        <input type='text' disabled={categorySelectedExamining.isLock === true ? true : false}\r\n                                                                                                            className='value-for-answer' \r\n                                                                                                            onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                            defaultValue={questionItem.categoryContentNote} \r\n                                                                                                        />\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                        }\r\n                                                                                    </>\r\n                                                                                }\r\n                                                                                \r\n                                                                            </Grid>\r\n                                                                        </Box>\r\n                                                                    ))}\r\n                                                                </Box>\r\n                                                            ))\r\n                                                        :\r\n                                                            contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n                                                                    <TableContainer component={Paper}>\r\n                                                                        <Table stickyHeader>\r\n                                                                            <TableHead>\r\n                                                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                                                    <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n                                                                                </TableRow>\r\n                                                                            </TableHead>\r\n                                                                            <TableBody sx={{borderRadius: '0px'}}>\r\n                                                                                {contentCategorySelectedExamining.categoryContents.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                                    <TableRow hover role=\"checkbox\" key={healthRecordsIndex}>\r\n                                                                                        <TableCell align='left' sx={{width: '158px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{healthRecordsItem.examinationName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '144px'}}>{handleRenderExamsStatus(healthRecordsItem.state)}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '108px'}}>{moment(healthRecordsItem.timeRegister).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '115px'}}>{healthRecordsItem.doctorFullName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: 'auto'}}>{healthRecordsItem.conclusion}</TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                ))}\r\n                                                                            </TableBody>\r\n                                                                        </Table>\r\n                                                                    </TableContainer>\r\n                                                                </>\r\n                                                            :\r\n                                                                \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', lineHeight: 1, mt: 1}}>{currentHealthRecordExamining ? currentHealthRecordExamining.healthRecordsName : ''}</Typography>\r\n                                                                    <div className='health-record-content'>\r\n                                                                        {currentHealthRecordExamining ? \r\n                                                                            <List sx={{p: 0}}>\r\n                                                                                {currentHealthRecordExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => (\r\n                                                                                    <div key={`categoryPatients ${categoryPatientsIndex}`}>\r\n                                                                                        <ListItemButton     \r\n                                                                                            sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                                                                            onClick={() => handleOpenHealthRecordsItem(categoryPatientsIndex)}\r\n                                                                                        >\r\n                                                                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseHealthRecordsItem[categoryPatientsIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                                                                <ListItemText primary={categoryPatientsItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                                            </Box>\r\n                                                                                        </ListItemButton>\r\n\r\n                                                                                        <Collapse in={openCollapseHealthRecordsItem[categoryPatientsIndex]} timeout=\"auto\" unmountOnExit>\r\n                                                                                            {categoryPatientsItem.categoryContents.map((categoryPatientsContentsItem, categoryPatientsContentsIndex) => (\r\n                                                                                                <div className='header-health-record' key={categoryPatientsContentsIndex} style={{marginTop: '15px', marginBottom: '15px', border: '2px solid #00bcd4', borderRadius: '20px'}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{fontWeight: 'bolder', textAlign: 'center'}}>{categoryPatientsContentsItem.categoryContentTitle}</Typography>\r\n                                                                                                \r\n                                                                                                    <div className='content-health-record' style={{padding: '10px'}} >  \r\n                                                                                                        <Grid container rowSpacing={0}>\r\n                                                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryPatientsContentsItem.categoryContentName}</Typography>\r\n                                                                                                            </Grid>\r\n\r\n                                                                                                            <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryPatientsContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                            </Grid>\r\n                                                                                                        \r\n                                                                                                            <Grid item xs={5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryPatientsContentsItem.categoryContentText}</Typography>\r\n                                                                                                            </Grid> \r\n\r\n                                                                                                            {categoryPatientsContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                                                                <Box key={`questionItem ${questionIndex} healthRecordsName ${contentCategorySelectedExamining.healthRecordsName}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                                                        <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                                                    </Grid>    \r\n\r\n                                                                                                                    {questionItem.categoryContentQuestionType === 'check' ?\r\n                                                                                                                        <>\r\n                                                                                                                            <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                                                                <Checkbox classes={{ root: classes.root }} checked={questionItem.categoryContentAnswer === true ? true : false }\r\n                                                                                                                                    disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                    sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                                                                    onClick={(e) => handleAnswerCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, questionItem.categoryContentAnswer)} \r\n                                                                                                                                />\r\n                                                                                                                            </Grid>\r\n                                                                                                                    \r\n                                                                                                                            <Grid item xs={5} >\r\n                                                                                                                                <div className='note-for-answer'>\r\n                                                                                                                                    <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                            disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                            onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                        />\r\n                                                                                                                                    </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </Grid>\r\n                                                                                                                        </>\r\n                                                                                                                    :\r\n                                                                                                                        <>\r\n                                                                                                                            <Grid item xs={8} >\r\n                                                                                                                                <div className='note-for-answer'>\r\n                                                                                                                                    <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                            disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                            onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                        />\r\n                                                                                                                                    </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </Grid>\r\n                                                                                                                        </>\r\n                                                                                                                    }\r\n                                                                                                                </Box>\r\n                                                                                                            ))}\r\n                                                                                                        </Grid>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        ))}\r\n                                                                                    </Collapse>\r\n                                                                                </div>\r\n                                                                            ))}\r\n                                                                            </List>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                        \r\n\r\n                                                                        {currentHealthRecordExamining ?\r\n                                                                            currentHealthRecordExamining.conclusion !== null ?\r\n                                                                            <>  \r\n                                                                                <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                                                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận của bác sĩ: ${currentHealthRecordExamining.conclusion}`}</Typography>\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                        \r\n                                                                    </div>\r\n\r\n                                                                </>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n\r\n            <CompleteExamining openModalCompleteExamining={openModalCompleteExamining} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n                handleCompleteExaminingForPantient={handleCompleteExaminingForPantient} dataExaminingForConclusion={dataExaminingForConclusion}\r\n            />\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n            />\r\n            {/* <AlertConfirm openAlertConfirmModal={openAlertConfirmModal.open} onCloseAlertConfirmModal={setOpenAlertConfirmModal} \r\n                titleConfirm={openAlertConfirmModal.title} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDoctorExamining","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getReportPatient = async (dateSelectedReport) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Admin/GetReportPatient?dateStart=${dateSelectedReport.dateStart}&dateEnd=${dateSelectedReport.dateEnd}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListUser = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/UserAccount/GetUserAccounts`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getReportPatient, getListUser\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridToolbarExport, GridToolbarColumnsButton, GridToolbarDensitySelector, GridToolbarFilterButton, GridToolbarContainer, viVN } from '@mui/x-data-grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//icon\r\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\r\n//moment\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\n//api\r\nimport { getReportPatient } from '../../Service/StatisticsService';\r\n\r\nfunction MainDashboard() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [dateSelectedReport, setDateSelectedReport] = useState({dateStart: '', dateEnd: ''})\r\n    const [mainDataDashboard, setMainDataDashboard] = useState([]);\r\n    const [loadingDataDashboard, setLoadingDataDashboard] = useState(false);\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'STT', width: 120, align: 'left', headerAlign: 'left', },\r\n        { field: 'fullName', headerName: 'Họ tên', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'dayExam', headerName: 'Ngày khám', width: 180, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'gender', headerName: 'Giới tính', width: 140, align: 'left', headerAlign: 'left' },\r\n        { field: 'dayOfBirth', headerName: 'Ngày sinh', width: 165, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'examName', headerName: 'Kỳ khám', width: 170, align: 'left', headerAlign: 'left' },\r\n        { field: 'phone', headerName: 'Điện thoại', width: 170, type: 'number', align: 'left', headerAlign: 'left'},\r\n        { field: 'district', headerName: 'Quận/Huyện', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'province', headerName: 'Tỉnh/Thành phố', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'address', headerName: 'Địa chỉ', width: 700, align: 'left', headerAlign: 'left' },\r\n    ];\r\n\r\n    // Hàm xử lý xuất file Excel\r\n    const handleExportExcel = () => {\r\n        // Tạo lại dữ liệu với các tiêu đề cột tùy chỉnh\r\n        const formattedRows = mainDataDashboard.map((row, index) => ({\r\n            'STT': index + 1,\r\n            'Họ tên': row.fullName, \r\n            'Ngày khám': row.dayExam,\r\n            'Giới tính': row.gender,\r\n            'Ngày sinh': row.dayOfBirth,\r\n            'Kỳ khám': row.examName,\r\n            'Điện thoại': row.phone,\r\n            'Quận/Huyện': row.district,\r\n            'Tỉnh/Thành phố': row.province,\r\n            'Địa chỉ': row.address\r\n          }));\r\n\r\n        // Tạo worksheet từ dữ liệu đã định dạng\r\n        const ws = XLSX.utils.json_to_sheet(formattedRows);\r\n\r\n        // Tạo workbook và thêm worksheet vào đó\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n\r\n        // Xuất file Excel\r\n        XLSX.writeFile(wb, `Danh sách bệnh nhân khám bệnh từ ${moment(dateSelectedReport.dateStart).format('DD-MM-YYYY')} đến ${moment(dateSelectedReport.dateEnd).format('DD-MM-YYYY')}.xlsx`);\r\n    };\r\n\r\n    // Custom toolbar bao gồm nút xuất Excel\r\n    const CustomToolbar = ({ handleExportExcel }) => {\r\n        return (\r\n            <GridToolbarContainer >\r\n                {/* Các chức năng của GridToolbar mặc định */}\r\n                <GridToolbarColumnsButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarFilterButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarDensitySelector sx={{fontSize: '16px'}}/>\r\n                <Button variant=\"text\" startIcon={< RiFileExcel2Fill/>} onClick={handleExportExcel} sx={{fontSize: '16px'}}>Xuất Excel</Button>\r\n            </GridToolbarContainer>\r\n        );\r\n    };\r\n\r\n    const onChangeDateStart = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateStart = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const onChangeDateEnd = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateEnd = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const handleGetReportPatient = async () => {\r\n        setLoadingDataDashboard(true);\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        const responseGetReportPatient = await getReportPatient(dateSelectedReport);\r\n        const editMainDataDashboard = responseGetReportPatient.map((item) => {\r\n            const dataReportPatient = {\r\n                patientId: item.patientId,\r\n                fullName: item.fullName,\r\n                dayExam: moment(item.dayExam).format('DD/MM/YYYY'),\r\n                gender: item.gender ? 'Nam' : 'Nữ',\r\n                dayOfBirth: moment(item.dayOfBirth).format('DD/MM/YYYY'),\r\n                examName: item.examName,\r\n                phone: item.phone,\r\n                district: item.district,\r\n                province: item.province,\r\n                address: item.address\r\n            }\r\n            return dataReportPatient\r\n        })\r\n        setMainDataDashboard(editMainDataDashboard);\r\n        setLoadingDataDashboard(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Admin'){\r\n                history.push('/404');\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(dateSelectedReport.dateStart !== '' && dateSelectedReport.dateEnd !== ''){\r\n            handleGetReportPatient();\r\n        }\r\n    }, [dateSelectedReport])\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1}}>\r\n            <Box sx={{display: 'flex', justifyContent: 'center'}}>\r\n                <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                    <DemoContainer components={['DatePicker']}> \r\n                        <DatePicker label=\"Từ ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateStart(value)}/> \r\n                        <DatePicker label=\"Đến ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateEnd(value)} minDate={moment(dateSelectedReport.dateStart)}/>                                   \r\n                    </DemoContainer>\r\n                </LocalizationProvider>\r\n            </Box>\r\n\r\n            <Box sx={{ height: 600, width: '100%', mt: 1.2 }}>\r\n                {loadingDataDashboard ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '80%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>  \r\n                    </>\r\n                    :\r\n                        mainDataDashboard.length !== 0 ?\r\n                            <>       \r\n                                <DataGrid \r\n                                    style={{ fontSize: '18px' }}\r\n                                    localeText={viVN.components.MuiDataGrid.defaultProps.localeText}\r\n                                    rows={mainDataDashboard.map((row, index) => ({\r\n                                        ...row,\r\n                                        id: index + 1,\r\n                                    }))}\r\n                                    columns={columns}\r\n                                    pageSizeOptions={[1]}\r\n                                    components={{\r\n                                        Toolbar: CustomToolbar, // Chèn toolbar vào đây\r\n                                      }}\r\n                                    componentsProps={{\r\n                                        toolbar: { handleExportExcel }, // Truyền hàm export vào props của toolbar\r\n                                    }}\r\n                                    disableRowSelectionOnClick\r\n                                    sx={{\r\n                                        '.MuiTablePagination-selectLabel': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                        '.MuiTablePagination-displayedRows': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        :\r\n                           <h5 style={{textAlign: 'center', color: 'blue'}}>Hãy chọn khoảng ngày khám để lấy dữ liệu thống kê</h5>\r\n                }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainDashboard","import React, { useState, useContext, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//api\r\nimport { addUser } from '../../Service/UserService';\r\n\r\nfunction AddUser(props) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n    const [dataAddUser, setDataAddUser] = useState( \r\n      {\r\n        userName: \"\",\r\n        userFullName: \"\",\r\n        userPassword: \"123456\",\r\n        userEmail: \"\",\r\n        userPosition: \"\"\r\n      }\r\n    )\r\n\r\n    const handleCloseModalAddUser = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalAddUser(false);\r\n      }\r\n    }\r\n\r\n    const listPosition = [\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n      {id: '3', positionName: 'Tiếp nhận'},\r\n    ]\r\n\r\n    const onChangeUserFullName = (value) => {\r\n      setDataAddUser(prevDataAddUser => {\r\n        return {\r\n          ...prevDataAddUser,\r\n          userFullName: value\r\n        }\r\n      })\r\n    }\r\n\r\n    const onSelectPosition = (e, value) => {\r\n      setDataAddUser(prevDataAddUser => {\r\n        return {\r\n          ...prevDataAddUser,\r\n          userPosition: value.id\r\n        }\r\n      })\r\n    }\r\n\r\n    const onChangeUserName = (value) => {\r\n      setDataAddUser(prevDataAddUser => {\r\n        return {\r\n          ...prevDataAddUser,\r\n          userName: value\r\n        }\r\n      })\r\n    }\r\n\r\n    const handleAddUser = async () => {\r\n      setLoading(true);\r\n      const responseAddUser = await addUser(dataAddUser);\r\n      if(responseAddUser.status === 200){\r\n        toast.success(responseAddUser.data, {toastId: 'AddUserSuccess'})\r\n        props.setReloadComponent(true);\r\n      }\r\n      else{\r\n        toast.error(responseAddUser.data, {toastId: 'AddUserError'})\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalAddUser} onClose={(event, reason) => handleCloseModalAddUser(event, reason)} disableEscapeKeyDown={true} >\r\n          {loading ? \r\n            <>\r\n              <div style={{display: 'flex', justifyContent: 'center', height: '100px', alignItems: 'center'}}>\r\n                <CircularProgress />\r\n              </div>\r\n            </>\r\n          :\r\n            <>     \r\n              <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n              <IconButton onClick={() => handleCloseModalAddUser()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                <CloseIcon fontSize='medium'/>\r\n              </IconButton>\r\n\r\n              <DialogContent dividers>\r\n                <TextField label=\"Họ tên\" variant=\"outlined\" autoFocus sx={{ width: '46ch', mb: 2.5 }} onChange={(e) => onChangeUserFullName(e.target.value)}/>\r\n                <Autocomplete \r\n                  options={listPosition} \r\n                  getOptionLabel={(option) => option.positionName}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.positionName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectPosition(e, value)}\r\n                  renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} \r\n                  sx={{ width: '45.95ch', mb: 2.5 }}\r\n                />\r\n                <TextField label=\"Tên tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                <Stack spacing={2} direction=\"column\">\r\n                  <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleAddUser()}>Tạo tài khoản</Button>\r\n                </Stack>\r\n              \r\n              </DialogContent>\r\n            </>\r\n          }\r\n        </Dialog>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default AddUser","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport _ from \"lodash\";\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//modal add user\r\nimport AddUser from '../ManageAddUser/AddUser';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridToolbarExport, GridToolbarColumnsButton, GridToolbarDensitySelector, GridToolbarFilterButton, GridToolbarContainer, viVN } from '@mui/x-data-grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Switch from '@mui/material/Switch';\r\n//icon\r\nimport { HiUserAdd } from \"react-icons/hi\";\r\n//api\r\nimport { getListUser } from '../../Service/StatisticsService';\r\nimport { updateActiveUser } from '../../Service/UserService';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nfunction MainListUser() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const [reloadComponent, setReloadComponent] = useState(false);\r\n    const [loadingListUser, setLoadingListUser] = useState(false);\r\n    const [listUser, setListUser] = useState([]);\r\n\r\n    const [openModalAddUser, setOpenModalAddUser] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const onChangeActiveUser = async (event, data) => {\r\n        setLoadingListUser(true);\r\n        const responseUpdateActiveUser = await updateActiveUser(data.userId, event.target.checked);\r\n        if(responseUpdateActiveUser.status === 200){\r\n            const responseGetListUser = await getListUser();\r\n            const editMainDataListUser = responseGetListUser.map((item) => {\r\n                const dataReportUser = {\r\n                    userId: item.userId,\r\n                    userName: item.userName,\r\n                    userFullName: item.userFullName,\r\n                    userEmail: item.userEmail,\r\n                    positionName: item.positionName,\r\n                    userIsActive: item.userIsActive\r\n                }\r\n\r\n                if(item.positionName === 'Doctor'){\r\n                    dataReportUser.positionName = 'Bác sĩ'\r\n                }\r\n                else if(item.positionName === 'Nursing'){\r\n                    dataReportUser.positionName = 'Tiếp nhận'\r\n                }\r\n\r\n                return dataReportUser\r\n            })\r\n            setListUser(editMainDataListUser);\r\n            \r\n            toast.success(event.target.checked === true ? `Đã vô hiệu hóa người dùng ${data.userFullName}` : `Đã kích hoạt lại người dùng ${data.userFullName}`)\r\n        }\r\n        setLoadingListUser(false);\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'userName', headerName: 'Tên đăng nhập', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'userFullName', headerName: 'Họ tên', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'userEmail', headerName: 'Email', width: 340, align: 'left', headerAlign: 'left', },\r\n        { field: 'positionName', headerName: 'Vị trí', width: 200, align: 'left', headerAlign: 'left' },\r\n        { field: 'userIsActive', headerName: 'Trạng thái', width: 165, align: 'left', headerAlign: 'left', renderCell: (params) => params.row.userIsActive ? <Switch checked={true} onChange={(e) => onChangeActiveUser(e, params.row)} /> : <Switch checked={false} onChange={(e) => onChangeActiveUser(e, params.row)}/> },\r\n    ];\r\n\r\n    // Custom toolbar bao gồm nút thêm user\r\n    const CustomToolbar = ({ handleOpenModalAddUser }) => {\r\n        return (\r\n            <GridToolbarContainer >\r\n                {/* Các chức năng của GridToolbar mặc định */}\r\n                <GridToolbarColumnsButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarFilterButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarDensitySelector sx={{fontSize: '16px'}}/>\r\n                <Button variant=\"text\" startIcon={<HiUserAdd/>} onClick={handleOpenModalAddUser} sx={{fontSize: '16px'}}>Thêm người dùng</Button>\r\n            </GridToolbarContainer>\r\n        );\r\n    };\r\n\r\n    const handleOpenModalAddUser = () => {\r\n        setOpenModalAddUser(true);\r\n    }\r\n\r\n    const handleGetListUser = async () => {\r\n        setLoadingListUser(true);\r\n        const responseGetListUser = await getListUser();\r\n        const editMainDataListUser = responseGetListUser.map((item) => {\r\n            const dataReportUser = {\r\n                userId: item.userId,\r\n                userName: item.userName,\r\n                userFullName: item.userFullName,\r\n                userEmail: item.userEmail,\r\n                positionName: item.positionName,\r\n                userIsActive: item.userIsActive\r\n            }\r\n\r\n            if(item.positionName === 'Doctor'){\r\n                dataReportUser.positionName = 'Bác sĩ'\r\n            }\r\n            else if(item.positionName === 'Nursing'){\r\n                dataReportUser.positionName = 'Tiếp nhận'\r\n            }\r\n\r\n            return dataReportUser\r\n        })\r\n        setListUser(editMainDataListUser);\r\n        setLoadingListUser(false);\r\n\r\n        if(reloadComponent){\r\n            setReloadComponent(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetListUser();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(reloadComponent){\r\n            handleGetListUser();\r\n        }\r\n    }, [reloadComponent])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Admin'){\r\n                history.push('/404');\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 1}}>\r\n                <Box sx={{ height: 600, width: '100%', mt: 1.2 }}>\r\n                    {loadingListUser ? \r\n                        <>\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                                <CircularProgress />\r\n                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                            </Box>  \r\n                        </>\r\n                    :\r\n                        <>  \r\n                            <Typography variant='h5' sx={{textAlign: 'center', mb: 1, fontWeight: 'bolder', color: 'red'}}>Danh sách người dùng</Typography>     \r\n                            <DataGrid \r\n                                style={{ fontSize: '18px', marginLeft: '50px', marginRight: '50px' }}\r\n                                localeText={viVN.components.MuiDataGrid.defaultProps.localeText}\r\n                                rows={listUser.map((row, index) => ({\r\n                                    ...row,\r\n                                    id: index + 1,\r\n                                }))}\r\n                                columns={columns}\r\n                                pageSizeOptions={[1]}\r\n                                components={{\r\n                                    Toolbar: CustomToolbar, // Chèn toolbar vào đây\r\n                                  }}\r\n                                componentsProps={{\r\n                                    toolbar: { handleOpenModalAddUser },\r\n                                }}\r\n                                disableRowSelectionOnClick\r\n                                sx={{ \r\n                                    '.MuiTablePagination-selectLabel': { marginBottom: '3px', }, \r\n                                    '.MuiTablePagination-displayedRows': { marginBottom: '3px', },\r\n                                }}\r\n                            />\r\n                        </>\r\n                    }\r\n                </Box>\r\n            </Container>\r\n            \r\n            <AddUser openModalAddUser={openModalAddUser} setOpenModalAddUser={setOpenModalAddUser} setReloadComponent={setReloadComponent}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainListUser","import { BrowserRouter, Route, Link, Switch, NavLink, HashRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport Header from \"../components/Nav/Header.jsx\";\nimport Page404 from \"../components/ErrorPage/Page404\";\nimport Home from \"../components/Home/Home.jsx\";\nimport Login from \"../components/LoginAccount/Log-in\";\nimport MainMedicalRegister from \"../components/MedicalRegister/MainMedicalRegister.jsx\";\nimport MainAppointmentExamining from \"../components/MedicalAppointment/MainAppointmentExamining.jsx\";\nimport MainDoctorExamining from \"../components/DoctorExamining/MainDoctorExamining.jsx\";\nimport MainDashboard from \"../components/Dashboard/MainDashboard.jsx\";\nimport MainListUser from \"../components/Dashboard/MainListUser.jsx\";\n\nconst AppRoutes = (props) => {\n  return (\n    <>\n      <HashRouter>\n        {/* <Header />{\" \"} */}\n        <Switch>\n          <Route exact path=\"/\"><Home /></Route>\n          <Route path=\"/login\"><Login /></Route>\n          <PrivateRoutes path=\"/medicalregister\" component={MainMedicalRegister}></PrivateRoutes>\n          <PrivateRoutes path=\"/doctor-examining\" component={MainDoctorExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/remind-examining\" component={MainAppointmentExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/dashboard\" component={MainDashboard}></PrivateRoutes>\n          <PrivateRoutes path=\"/manage-user\" component={MainListUser}></PrivateRoutes>\n          <Route path=\"*\"><Page404 />{\" \"}</Route>\n          {/* <PrivateRoutes path=\"/users\" component={Users} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\nexport default AppRoutes;\n","import \"./App.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Nav/Header\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <div className=\"header-container\">\n          <Header />\n        </div>\n\n        <div className=\"app-container\">\n          <AppRoutes />\n        </div>\n      </HashRouter>\n\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}