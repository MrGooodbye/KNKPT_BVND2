{"version":3,"sources":["components/ManageUserManual/UserManual.jsx","Service/UserService.jsx","components/ManageChangePassword/ChangePassword.jsx","assets/image/logo.png","components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop.jsx","Service/MedicalService.jsx","context/UserContext.jsx","components/Nav/Header.jsx","routes/PrivateRoutes.js","components/ErrorPage/Page404.js","components/ManageRegister/Register.jsx","components/LoginAccount/Log-in.jsx","components/ManageAlertProcessing/AlertProcessing.jsx","Service/PlaceService.jsx","components/ManageInfoPantients/ManageInfoPantients.jsx","components/MedicalRegister/ListPatientsRegister.jsx","components/ManageExaminingSession/ExaminingSession.jsx","components/ManageOldDisease/OldDisease.jsx","components/MedicalRegister/BookMedical.jsx","components/MedicalRegister/MainMedicalRegister.jsx","components/MedicalAppointment/MainAppointmentExamining.jsx","components/ManageCompleteExamining/CompleteExamining.jsx","components/DoctorExamining/PreviewLastExamining.jsx","components/DoctorExamining/MainDoctorExamining.jsx","Service/StatisticsService.jsx","components/Dashboard/MainDashboard.jsx","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["UserManual","props","_jsxs","Dialog","fullWidth","maxWidth","open","openModalUserManual","disableEscapeKeyDown","children","_jsx","DialogTitle","sx","fontWeight","fontSize","textAlign","color","textTransform","IconButton","onClick","setOpenModalUserManual","position","right","top","CloseIcon","DialogContent","dividers","pl","pr","Typography","variant","Box","backendURL","ChangePassword","inputPasswordDefault","currentPassword","openCurrentPassword","newPassword","openNewPassword","inputPassword","setInputPassword","useState","loading","setLoading","handleCloseModalChangePassword","event","reason","setIsDialogChangePasswordOpen","setOpenModalChangePassword","setTimeout","handleChangePassword","async","Promise","resolve","handleValidate","isValid","toast","warning","toastId","inputPayloadPassword","password","passwordOld","responseUpdatePassword","token","localStorage","getItem","axios","put","concat","headers","Authorization","then","response","catch","error","updatePassword","status","data","success","_Fragment","openModalChangePassword","onClose","m","p","display","flexDirection","alignItems","style","justifyContent","CircularProgress","TextField","autoFocus","label","type","width","mb","onChange","e","value","_inputPassword","onChangeCurrentPassword","target","InputProps","endAdornment","InputAdornment","handleClickShowCurrentPassword","padding","VisibilityIcon","VisibilityOffIcon","onChangeNewPassword","handleClickShowNewPassword","Stack","spacing","direction","Button","height","margin","AlertProcessingBackdrop","Backdrop","zIndex","theme","drawer","backgroundColor","changeBackground","openAlertProcessingBackdrop","mt","alertTitle","createConfig","createMedicalBackRegister","post","dataPatientsRegister","createAddPredecessor","dataPredecessor","getRegistersByDateNow","config","get","getListMedicalExaminationsGiveRegister","dayOfBirth","getVaccinationByPatientId","patientId","getMedicalBook","medicalRegisterId","getUpdatePredecessor","getAppointmentsNextWeek","updateMedicalState","id","state","updateStateAppointment","dataAppointment","stateAppointment","medicalBookId","appointmentDate","UserContext","React","createContext","UserProvider","_ref","userDefault","isAuthenticated","isLogin","user","setUser","alertVisible","setAlertVisible","isLogOutClick","setIsLogOutClick","onConfirm","setOnConfirm","setOpenAlertProcessingBackdrop","isDialogChangePasswordOpen","resetAlert","checkJWTExpire","result","getJWT","decodeJWT","JSON","parse","atob","split","parseJwt","currentDate","Date","exp","getTime","removeItem","sessionStorage","clear","useEffect","getUserLogin","Provider","loadingContext","loginContext","userContextLogin","logoutContext","triggerAlert","confirmCallback","confirmAlert","withRouter","useContext","location","useLocation","history","useHistory","anchorEl","setAnchorEl","Boolean","handleClick","currentTarget","handleClose","actionNursing","key","icon","LocalHospitalIcon","LinkComponent","NavLink","to","LocalPhoneIcon","actionDoctor","MedicationLiquidIcon","actionAdmin","BarChartIcon","userAction","setUserAction","pathname","findIndex","action","handleLogout","positionName","push","AppBar","Toolbar","Avatar","src","Logo","mr","BottomNavigation","showLabels","flexGrow","map","actionItem","BottomNavigationAction","userFullName","Menu","MenuItem","HelpIcon","titleAccess","cursor","exact","PrivateRoutes","Route","path","component","Redirect","Page404","className","CreateAccount","showPassword","setShowPassword","handleCloseModalRegister","setOpenModalRegister","openModalRegister","handleClickShowPassword","Autocomplete","options","option","renderInput","params","Login","userAccount","setUserAccount","userName","handleLogin","userLogin","setItem","tokenDTO","userId","stringify","handleKeyDown","preventDefault","document","addEventListener","removeEventListener","Container","borderRadius","ml","autoComplete","onChangeUserName","prevUserAccount","onChangeUserPassword","onKeyDown","which","code","handlePressEnter","Register","AlertProcessing","openAlertProcessing","getListProvince","getListDistrict","provinceId","getListWard","districtId","getFullAddressByIdWard","codeWard","ManageInfoPantients","dataPatientInfoDefault","examinationId","weight","headCircumference","vaccination","patient","identifier","address","fullName","gender","fullNameMother","phoneMother","fullNameFather","phoneFather","dataPatientInfoErrorDefault","title","isError","openTooltip","focus","examiningSession","province","district","ward","listGender","genderOrder","genderName","genderValue","selectedAutoCompleteDefault","openOption","typingRef","useRef","dateFieldRef","dataPatientInfoNotEdit","setDataPatientInfoNotEdit","dataPatientInfo","setDataPatientInfo","dataPatientInfoError","setDataPatientInfoError","selectedAutoComplete","setSelectedAutoComplete","listExaminingSession","setListExaminingSession","listProvince","setListProvince","listDistrict","setListDistrict","list","listWard","setListWard","focusField","setFocusField","setOpenAlertProcessing","tooltipTheme","createTheme","components","MuiTooltip","defaultProps","placement","arrow","componentsProps","tooltip","bgcolor","slotProps","popper","modifiers","name","offset","handleFocus","fieldName","prevSelectedAutoComplete","handleBlur","test","filterOptions","inputValue","lowercasedInput","toLowerCase","filter","lowercasedFullName","initials","word","join","includes","onChangeDOBToGetExaminingSession","responseListMedicalExaminationsGiveRegister","formattedDate","exams","handleCloseModalInfoPantients","prevListDistrict","prevListWard","setSelectedPantientInfo","setOpenModalInfoPantients","handleUpdateMedicalRegister","checkValidate","_dataPatientInfoError","Object","values","every","item","current","_","isEqual","updateMedicalRegister","setCompleteMedicalRegister","length","responseListProvince","handleGetListProvince","selectedPantientInfo","setIsContinueUpdateMedicalRegister","editPropsDataPatientInfo","cloneDeep","responseListDistrict","provinceCode","responseListWard","districtCode","selectedGender","find","indexListExamining","indexListProvince","indexListDistrict","indexListWard","wardCode","handleApplyPantientDataToField","openModalInfoPantients","isContinueUpdateMedicalRegister","pt","pb","flexWrap","ThemeProvider","Tooltip","marginTop","inputProps","maxLength","inputRef","input","defaultValue","takenValue","clearInterval","prevDataPatientsRegister","onChangeIdentifier","prevDataPatientInfo","onChangeFullName","getOptionLabel","renderOption","onSelectGender","onFocus","onBlur","disableClearable","popupIcon","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DemoContainer","DatePicker","format","moment","disableFuture","disableOpenPicker","textField","_d","today","yearsDifference","getFullYear","monthsDifference","getMonth","daysDifference","getDate","age","totalMonths","totalDays","isNaN","onChangeDOB","noOptionsText","onSelectExaminingSession","size","onSelectProvine","onSelectDistrict","onSelectWard","onChangeAddress","onChangeFullNameMother","onChangePhoneMother","onChangeFullNameFather","onChangePhoneFather","onChangeHeight","onChangeWeight","onChangeHeadCircumference","FormControlLabel","control","Checkbox","checked","onChangeVaccination","bool","DialogActions","ListPatientsRegister","activeChip","setActiveChip","chipOrder","chipLabel","listPantientChipState","setListPantientChipState","chipContent","listDataPatientsRegister","setListDataPatientsRegister","listDataPatientsAppointmentsToday","setListDataPatientsAppointmentsToday","searchPatientsQuery","setSearchPatientsQuery","listDataPatientsRegisterState","setListDataPatientsRegisterState","listDataPatientsRegisterSort","setListDataPatientsRegisterSort","searchPatients","patients","searchTerm","lowerCaseSearchTerm","patientObj","handleGetRegistersByDateNow","responseGetAppointmentsToday","getAppointmentsToday","_listDataPatientsAppointmentsToday","updatedList","patientFullName","dateOfBirth","fullAddress","nextExamId","listPantientRegisterWaiting","patientsRegisterItem","listCountState","listPantientRegisterDone","setComponent1Loading","keyCode","completeMedicalRegister","border","boxShadow","pantientChipStateItem","pantientChipStateIndex","Badge","badgeContent","Chip","handleSelectedChip","chipIndex","placeholder","handleSearchPantient","startAdornment","SearchIcon","TableContainer","Paper","overflowX","borderBottomLeftRadius","borderBottomRightRadius","Table","stickyHeader","minWidth","TableHead","TableRow","TableCell","align","TableBody","patientsRegisterSortItem","patientsRegisterSortIndex","hover","role","onDoubleClick","responseVaccinationByPatientId","dataPantientOldOldDiseaseRegister","oldDisease","medicalTypeId","userIdDoctor","setDataPantientAppointmentsToday","handleSelectedPantientAppointmentsToday","handleSelectedPantientInfo","order","whiteSpace","overflow","textOverflow","ExaminingSession","isConfirmOpen","setIsConfirmOpen","handleListMedicalExaminationsGiveRegister","getListMedicalExaminationsGiveOldRegister","handleMedicalRegister","isAppointment","oldExams","setIsContinueSelectedExaminingSession","setOpenModalExaminingSession","handleResetField","createMedicalRegister","handleOpenConfirm","openModalExaminingSession","isContinueSelectedExaminingSession","monthsOfAge","Grid","container","rowSpacing","xs","oldExamItem","oldExamIndex","RadioGroup","onChangeRadioSelect","examItem","examIndex","Radio","OldDisease","dataPatientsForSearchOldDiseaseDefault","phone","dataPatientsForSearchOldDiseaseErrorDefault","listFoundOldDisease","setListFoundOldDisease","dataPatientsForSearchOldDisease","setDataPatientsForSearchOldDisease","dataPatientsForSearchOldDiseaseError","setDataPatientsForSearchOldDiseaseError","selectedRowIndex","setSelectedRowIndex","formRef","tableRef","handleEnterPress","_dataPatientsForSearchOldDiseaseError","handleCloseModalOldDisease","setOpenModalOldDisease","handleFindOldDisease","getListOldDisease","reset","querySelectorAll","forEach","dispatchEvent","Event","bubbles","handleClickFindOldDisease","validate","handleApplyDataPatientOldDisease","foundOldDiseaseItem","oldDiseaseWithNullCodeWard","setDataPatientsRegister","openModalOldDisease","ref","prevDataPatientsForSearchOldDisease","onChangePatientId","date","onChangeDayOfBirth","onChangePhone","tabIndex","prevIndex","Math","min","max","handleTableKeyDown","foundOldDiseaseIndex","selected","BookMedical","dataPatientsRegisterDefault","autocompleteValueDefault","medicalType","dataPatientsRegisterErrorDefault","listMedicalType","medicalTypeOrder","medicalTypeName","dataPatientsRegisterError","setDataPatientsRegisterError","autocompleteValue","setAutocompleteValue","firstFocusRef","replaceSpecialCharacters","str","replace","normalizedInput","prevAutocompleteValue","_dataPatientsRegisterError","dataPantientAppointmentsToday","handleMedicalBackRegister","responseCreateMedicalBackRegister","handleOpenModalOldDisease","getElementById","_autocompleteValue","indexListGender","indexListMedicalType","handleApplyPantientOldDiseaseData","handleApplyPantientAppointmentsTodayData","onF2Press","setOnF2Press","onF4Press","setOnF4Press","onF8Press","setOnF8Press","minHeight","PopperProps","disabled","WebkitTextFillColor","InputLabelProps","shrink","DateField","disablePortal","onSelectMedicalType","paddingLeft","paddingRight","multiline","rows","onChangeReason","MainMedicalRegister","component1Loading","setHandleResetField","handleOpenModalExaminingSession","setHandleOpenModalExaminingSession","setHandleOpenModalOldDisease","marginLeft","Skeleton","MainAppointmentExamining","listPantientAppointmentChipState","listAppointment","setListAppointment","listDataPatientsAppointmentPaginate","setListDataPatientsAppointmentPaginate","listDataPatientsAppointmentState","setListDataPatientsAppointmentState","listDataPatientsAppointmentSort","setListDataPatientsAppointmentSort","page","setPage","pageCount","setPageCount","setDataAppointment","handlePaginate","calculatedPageCount","ceil","startIndex","newCurrentItems","slice","handleAcceptReExamining","findDataAppointment","responseUpdateStateAppointment","responseGetAppointmentsNextWeek","_listAppointmentNotRemind","_listAppointmentAcceptReExamining","_listAppointmentRejectReExamining","updateListPantientAppointmentChipState","dataAppointmentNotRemind","dataAppointmentAcceptReExamining","dataAppointmentRejectReExamining","handleRejectReExamining","handleGetAppointmentsNextWeek","pantientAppointmentChipStateItem","pantientAppointmentChipStateIndex","dataPantientAppointmentItem","dataPantientAppointmentIndex","examNameOld","nextExamName","disablePast","minDate","onChangeAppointmentDate","convertAppointmentDateFindDataAppointment","CheckIcon","CancelIcon","Pagination","count","handlePageChange","CompleteExamining","mainDataExaminingForConclusion","setMainDataExaminingForConclusion","textareaRef","classes","makeStyles","root","useStyles","handleCloseModalCompleteExamining","setOpenModalCompleteExamining","handleSetDataCompleteExamining","editDataExaminingForConclusion","clone","dataExaminingForConclusion","categories","categoriesItem","categoryContents","categoryContentsItem","categoryContentQuestions","responseAppointmentDate","getAppointmentDate","isVaccination","nextVaccination","reminder","conclusion","setSelectionRange","handleAddMedicalBook","some","isPredecessor","categoryPres","categoriesHealthRecordExamining","isHealthRecord","responseAddMedicalBook","dataMedicalBook","createAddMedicalBook","handleCompleteExaminingForPantient","openModalCompleteExamining","List","categoriesIndex","categoryName","categoryContentsIndex","marginBottom","categoryContentTitle","questionItem","questionIndex","borderRight","categoryContentName","categoryContentQuestionType","CheckBoxIcon","lineHeight","categoryContentCheck","categoryContentText","borderTop","categoryContentQuestionName","categoryContentAnswer","TextareaAutosize","categoryContentNote","onChangeExaminingConclusion","prevMainDataExaminingForConclusion","locale","PreviewLastExamining","previewDataExamining","setPreviewDataExamining","healthRecords","examinationName","timeUpdateState","medicakBook","nutritionals","vaccinationBook","loadingMedicalBook","setLoadingMedicalBook","openCollapsePredecessorItem","setOpenCollapsePredecessorItem","openCollapseMedicakBookItem","setOpenCollapseMedicakBookItem","prevDataExamining","responseMedicalBook","healthRecordsItem","newPredecessor","healthRecordsUpdate","newMedicalBook","medicalBookIdRecently","sort","a","b","categoryOrder","handleEditPrevDataExamining","predecessorItem","predecessorIndex","ListItemButton","prevOpen","newOpen","handleOpenPredecessorItem","ListItemIcon","transform","SendIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","predecessorItemCategoryContentsItem","predecessorItemCategoryContentsIndex","medicakBookItems","medicakBookIndex","handleOpenMedicakBookItem","medicakBookCategoryContentsItem","medicakBookCategoryContentsIndex","doctorFullName","MainDoctorExamining","dataPantientsReadyExaminingDefault","stt","patientsId","patientsName","patientsDOB","patientsMonthsOld","patientsGender","patientsHeight","patientsWeight","patientsHeadCircumference","patientsPhone","patientsAddress","isFormDirty","setIsFormDirty","dataPantientsReadyExamining","setDataPantientsReadyExamining","mainDataExamining","setMainDataExamining","setPrevDataExamining","openCollapseHealthRecords","setOpenCollapseHealthRecords","openCollapseHealthRecordsItem","setOpenCollapseHealthRecordsItem","categorySelectedExamining","setCategorySelectedExamining","contentCategorySelectedExamining","setContentCategorySelectedExamining","healthRecordsContents","setHealthRecordsContents","currentHealthRecordExamining","setCurrentHealthRecordExamining","previewPredecessor","setPreviewPredecessor","setDataExaminingForConclusion","oldDataPredecessor","setOldDataPredecessor","newDataPredecessor","setNewDataPredecessor","prevDataPredecessor","setPrevDataPredecessor","loadingPrevDataExamining","setLoadingPrevDataExamining","loadingPatient","setLoadingPatient","loadingInfoPatient","setLoadingInfoPatient","loadingCategoryExamining","setLoadingCategoryExamining","loadingContentsExamining","setLoadingContentsExamining","handleCancelExamining","editExamining","backRegister","handleDeleteExamining","window","confirm","responseDeleteMedicalBook","delete","deleteMedicalBook","handleStartExaminingButtonClick","handleBeginExaminingForPantient","alert","handleBeginEditExaminingForPantient","handleCompleteExaminingButtonClick","findListPantientNotExam","handleAppyPantientData","handleGetMedicalDetailPatient","dataPantientItem","_dataPantientsReadyExamining","isContinueExam","_listDataPatientsRegister","findIndexPatient","handleSetMainDataExamining","handleGetCategoryReExamining","editPrevDataExaminingCategoryPres","responseGetUpdatePredecessorItem","matchingPrevDataExamining","prevDataExaminingCategoryPresItem","isLock","content2","content1","categoryContentOrder","matchingContent1","isNullCategoryPres","responseGetUpdateMedicalBook","updateHealthRecordsCategoriesForConclusion","category","content","demoDataExaminingForConclusion","healthRecordsName","categoryPatients","updateCategoriesForConclusion","editCategoryContents","itemCategoryContents","newCategoriesDemoDataExaminingForConclusion","editDataCategoryPresForConclusion","mainCategoryContentsExamining","editDataHealthRecordsForConclusion","categoryPresItem","categoryPresIndex","categoryPresOrder","getUpdateMedicalBook","handleSetMainDataReExamining","responseGetUpdateMedicalBookData","questions","allNull","q","responseGetUpdatePredecessor","handleNoteValueQuestionPredecessorForReExamOrBackExam","_categorySelectedExamining","createSelectedQuestionsValuePredecessorForReExamOrBackExam","categoryContentQuestion","findNewDataPredecessorCategoryOrder","newDataPredecessorCategoryPresItem","findNewDataPredecessorCategoryContents","newDataPredecessorCategoryContentsItem","newDataPredecessorcategoryContentQuestionsItem","categoryContentQuestionOrder","questionIndexRemove","splice","newDataPredecessorCategoryContents","newDataPredecessorCategoryPres","newCategoryPre","createSelectedQuestionsPredecessorForReExamOrBackExam","isEditNote","questionIndexNoteDontExit","createPreviewDataPredecessor","handleSaveNewDataPredecessor","saveNewDataPredecessor","findNewDataPredecessor","responseCreateAddPredecessor","_mainDataExamining","selectCategoryReExamining","handleSelectCategoryClick","responseDataExamining","getMedicalDetailPatient","previewDataPredecessor","flatMap","question","healthRecordsContentsType","categoryIncludeCotent","findHealthRecord","healthRecordsState","editDataHealthRecordsItemForConclusion","_dataExaminingForConclusion","dataHealthRecordsItemForConclusionItem","handleAnswerValueQuestion","createSelectedQuestionsExaminingForConclusion","handleNoteCheckQuestionHealthRecords","categoryPatientsIndex","categoryPatientsContentsIndex","_healthRecordsContents","questionOrder","existingQuestion","categoryContentQuestionsItem","_previewPredecessor","findQuestion","intervalId","setInterval","reFetchListDataPatientsRegister","handleBeforeUnload","confirmationMessage","returnValue","unblock","block","_dataPatientsRegisterSort","handleUnload","reDataPatientsRegisterSort","dataPatientsRegisterSort","reDataPantientsReadyExamining","reMainDataExamining","reDataExaminingForConclusion","reCurrentHealthRecordExamining","rePrevDataPredecessor","reOldDataPredecessor","handleReloadUIWhenExamining","dataPantientIndex","handleSelectPantientExamining","CheckCircleIcon","edge","findUpdatePredecessor","handleEditDataPredecessor","EditIcon","handleEditDataPredecessorForSaving","findOldDataPredecessorCategoryOrder","oldDataPredecessorItem","findNewDataPredecessorCategoryContentsItem","findOldDataPredecessorCategoryContentsItem","newQ","findNewDataPredecessorQuestionItem","contentCategoryContentsItem","removeOldDataPredecessorCategoryPres","BeenhereIcon","handleCancelEditDataPredecessor","findPrevDataPredecessorByCategoryName","prevDataPredecessorItem","removeCategoryPredecessor","handleSelectHealthRecords","healthRecordsIndex","handleSelectHealthRecordsItem","FiberManualRecordIcon","columnSpacing","sm","md","PinIcon","PersonIcon","MaleIcon","FemaleIcon","CalendarMonthIcon","InfoIcon","PhoneIcon","GiBodyHeight","GiWeightScale","TbRulerMeasure","Home","index","handleAnswerCheckQuestionPredecessorForReExamOrBackExam","answer","handleAnswerCheckQuestion","handleNoteCheckQuestionPredecessorForReExamOrBackExam","handleNoteCheckQuestion","DescriptionIcon","timeRegister","categoryPatientsItem","handleOpenHealthRecordsItem","categoryPatientsContentsItem","handleAnswerCheckQuestionHealthRecords","currentHealthRecordsContent","getReportPatient","dateSelectedReport","dateStart","dateEnd","MainDashboard","setDateSelectedReport","mainDataDashboard","setMainDataDashboard","loadingDataDashboard","setLoadingDataDashboard","editMainDataDashboard","dayExam","examName","handleGetReportPatient","_dateSelectedReport","onChangeDateStart","onChangeDateEnd","DataGrid","localeText","viVN","MuiDataGrid","row","columns","field","headerName","headerAlign","pageSizeOptions","handleExportExcel","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","startIcon","RiFileExcel2Fill","toolbar","formattedRows","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","disableRowSelectionOnClick","AppRoutes","HashRouter","Switch","App","Header","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.342b76e2.chunk.js","sourcesContent":["import React from 'react'\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nfunction UserManual(props) {\r\n\r\n    return (\r\n        <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalUserManual} disableEscapeKeyDown={true}>\r\n            <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Hướng dẫn sử dụng</DialogTitle>\r\n            <IconButton onClick={() => props.setOpenModalUserManual(false)} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Điều dưỡng</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F2 hoặc nút Đăng ký trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Làm mới form thông tin đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F4 hoặc nút Làm mới trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Tìm bệnh cũ</Typography>\r\n                        <Typography>Nhấn phím F8 hoặc nút Bệnh cũ trên màn hình, sau khi nhập thông tin và tìm được bệnh nhân, click đúp thông tin bệnh nhân để form thông tin đăng ký khám nhận dữ liệu</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin bệnh nhân</Typography>\r\n                        <Typography>Trong bảng danh sách đăng ký khám trong ngày, nhấn vào bệnh nhân để mở form sửa thông tin</Typography>\r\n                    </Box>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Bác sĩ</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Khám bệnh</Typography>\r\n                        <Typography>Bước 1: Nhấn chọn bệnh nhân để khám</Typography>\r\n                        <Typography>Bước 2: Nhấn F2 để bắt đầu khám</Typography>\r\n                        <Typography>Bước 3: Nhấn F4 để kết thúc khám</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin hỏi bệnh khi đã kết thúc khám</Typography>\r\n\r\n                    </Box>\r\n                \r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Admin</Typography>\r\n                {/* <Typography variant='subtitle1' sx={{color: 'red'}}>Nếu có sự cố liên hệ zalo: 0987654321 (chỉ phục vụ giờ hành chính)</Typography> */}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default UserManual","import axios from \"axios\";\r\n//import SignalService from \"./SignalService.jsx\"\r\n\r\nconst backendURL = 'https://api-knkpt.somee.com';\r\n\r\nconst createConfig = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\nconst userLogin = async (userName, password) => {\r\n  return await axios.post(`${backendURL}/api/UserAccount/Login`, { userName, password })\r\n  .then(function (response) {\r\n    //SignalService.startSignalRConnection(response.data.tokenDTO.token)\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n};\r\n\r\nconst getUserLogin = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetUserLogin`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst getGetListDoctor = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetDoctors`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst updatePassword = async (inputPayloadPassword) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/UserAccount/ChangePassword`, inputPayloadPassword, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    userLogin, \r\n    getUserLogin, getGetListDoctor,\r\n    updatePassword\r\n}\r\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { toast } from 'react-toastify';\r\n//api\r\nimport { updatePassword } from '../../Service/UserService';\r\n\r\nfunction ChangePassword(props) {\r\n    const inputPasswordDefault = {\r\n        currentPassword: '',\r\n        openCurrentPassword: false,\r\n        newPassword: '',\r\n        openNewPassword: false\r\n    }\r\n\r\n    const [inputPassword, setInputPassword] = useState(inputPasswordDefault);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleCloseModalChangePassword = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            props.setIsDialogChangePasswordOpen(false);\r\n            props.setOpenModalChangePassword(false);\r\n            setTimeout(() => {\r\n                setInputPassword(inputPasswordDefault);\r\n            }, 200)\r\n        }\r\n    }\r\n\r\n    const handleClickShowCurrentPassword = () => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.openCurrentPassword = !inputPassword.openCurrentPassword\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const handleClickShowNewPassword = () => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.openNewPassword = !inputPassword.openNewPassword\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const onChangeCurrentPassword = (value) => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.currentPassword = value\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const onChangeNewPassword = (value) => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.newPassword = value\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const handleValidate = () => {\r\n        let isValid = true;\r\n        if(inputPassword.currentPassword === ''){\r\n            toast.warning('Bạn chưa nhập mật khẩu hiện tại!', {toastId: 'validateCurrentPassword'})\r\n            isValid = false;\r\n        }\r\n        \r\n        if(inputPassword.newPassword === ''){\r\n            toast.warning('Bạn chưa nhập mật khẩu mới!', {toastId: 'validateNewPassword'})\r\n            isValid = false\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    const handleChangePassword = async () => {\r\n        setLoading(true);\r\n        await new Promise(resolve => setTimeout(resolve, 2 * 100));\r\n        if(handleValidate()){\r\n            const inputPayloadPassword = { password: inputPassword.newPassword, passwordOld: inputPassword.currentPassword }\r\n            const responseUpdatePassword = await updatePassword(inputPayloadPassword);\r\n\r\n            if(responseUpdatePassword.status === 400 && responseUpdatePassword.data === 'Tài khoản hoặc mật khẩu không chính xác !'){\r\n                toast.error('Mật khẩu hiện tại không chính xác.', {toastId: 'handleChangePasswordError1'})\r\n            }\r\n            else if(responseUpdatePassword.status === 400){\r\n                toast.error(responseUpdatePassword.data, {toastId: 'handleChangePasswordError2'})\r\n            }\r\n            else if(responseUpdatePassword.status === 200){\r\n                toast.success(responseUpdatePassword.data, {toastId: 'handleChangePasswordSuccess'})\r\n                handleCloseModalChangePassword();\r\n            }\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalChangePassword} onClose={(event, reason) => handleCloseModalChangePassword(event, reason)} disableEscapeKeyDown={true} >\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Đổi mật khẩu</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalChangePassword()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                \r\n                <DialogContent dividers sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                    {loading ? \r\n                        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                            <CircularProgress />\r\n                        </div>\r\n                    :\r\n                        <>\r\n\r\n                            <TextField autoFocus={true} label=\"Mật khẩu hiện tại\" variant=\"outlined\" type={inputPassword.openCurrentPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeCurrentPassword(e.target.value)} \r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={handleClickShowCurrentPassword} sx={{padding: '1px'}}> {inputPassword.openCurrentPassword  ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n\r\n                            <TextField label=\"Mật khẩu mới\" variant=\"outlined\" type={inputPassword.openNewPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeNewPassword(e.target.value)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={handleClickShowNewPassword} sx={{padding: '1px'}}> {inputPassword.openNewPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleChangePassword()}>Đổi mật khẩu</Button>\r\n                            </Stack>\r\n                        </>\r\n                    }\r\n\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChangePassword","export default __webpack_public_path__ + \"static/media/logo.e5a4a234.png\";","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessingBackdrop(props) {\r\n    return (\r\n        <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: props.changeBackground ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.6)' }} open={props.openAlertProcessingBackdrop}>\r\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <CircularProgress color='inherit' />\r\n                <Typography sx={{mt: 1.4,}} variant='subtitle1'>{props.alertTitle}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n\r\nexport default AlertProcessingBackdrop\r\n","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-knkpt.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst createMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/Register`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createMedicalBackRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/BackRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createCurrentDoctorExamining = async (userIdDoctor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/SetDoctorExaming/${userIdDoctor}`, \r\n        {}, // Body của request, có thể là {} hoặc object\r\n        {\r\n            headers: {\r\n                \"content-type\": \"text/plain; charset=utf-8\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddPredecessor = async (dataPredecessor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddPredecessor`, dataPredecessor,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddMedicalBook = async (dataMedicalBook) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddMedicalBook`, dataMedicalBook,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getRegistersByDateNow = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetRegistersByDateNow`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveRegister = async (dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveOldRegister = async (dayOfBirth, patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}&patientId=${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListOldDisease = async (patientId, phone, fullName, dayOfBirth, gender) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/SearchPatients?patientId=${patientId}&phone=${phone}&fullName=${fullName}&dayOfBirth=${dayOfBirth}&gender=${gender}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getVaccinationByPatientId = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetVaccinationByPatientId/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getCurrentDoctorExamining = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetDoctorExamining`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalDetailPatient = async (id) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/DetailPatient/${id}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalBook = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetMediacalBook?medicalRegisterId=${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdatePredecessor = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdatePredecessor/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdateMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdateMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentDate = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentDate/${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentsNextWeek = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsNextWeek`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getAppointmentsToday = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsToday`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst updateMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/EditRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateMedicalState = async (id, state) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateState?id=${id}&state=${state}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateStateAppointment = async (dataAppointment, stateAppointment) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateStateAppointment/${dataAppointment.medicalBookId}?appointmentDate=${dataAppointment.appointmentDate}&stateAppointment=${stateAppointment}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst deleteMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.delete(`${backendURL}/api/Medical/DeleteMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    createMedicalRegister, createMedicalBackRegister, createCurrentDoctorExamining, createAddPredecessor, createAddMedicalBook,\r\n    getRegistersByDateNow, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister, getListOldDisease, getVaccinationByPatientId, getCurrentDoctorExamining, getMedicalDetailPatient, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook, getAppointmentDate, getAppointmentsNextWeek, getAppointmentsToday,\r\n    updateMedicalRegister, updateMedicalState, updateStateAppointment,\r\n    deleteMedicalBook\r\n}","import React, { useState, useEffect } from 'react';\r\n//modal\r\nimport AlertProcessingBackdrop from '../components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//api\r\nimport { getUserLogin } from '../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../Service/MedicalService';\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n\r\n    const userDefault = {\r\n        isAuthenticated: false,\r\n        isLogin: false,\r\n        token: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(userDefault);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [isLogOutClick, setIsLogOutClick] = useState(false);\r\n    const [onConfirm, setOnConfirm] = useState(null);\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [isDialogChangePasswordOpen, setIsDialogChangePasswordOpen] = useState(false);\r\n\r\n    const loginContext = (userContextLogin) => {\r\n        setUser({ ...userContextLogin });\r\n        setLoading(false);\r\n    };\r\n\r\n    const triggerAlert = (confirmCallback) => {\r\n        setAlertVisible(true);\r\n        setIsLogOutClick(true);\r\n        setOnConfirm(() => confirmCallback);\r\n    };\r\n\r\n    const confirmAlert = () => {\r\n        if (onConfirm) onConfirm();\r\n        setIsLogOutClick(false);\r\n        resetAlert();\r\n    };\r\n\r\n    const resetAlert = () => {\r\n        setAlertVisible(false);\r\n        setIsLogOutClick(false);\r\n        setOnConfirm(null);\r\n    };\r\n\r\n    const logoutContext = () => {\r\n        setUser({ ...userDefault });\r\n    }\r\n\r\n    const loadingContext = (loading) => {\r\n        setLoading(...loading);\r\n    }\r\n\r\n    const fetchUser = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        const response = await getUserLogin();\r\n        setUser({\r\n                isAuthenticated: true, \r\n                isLogin: true,\r\n                userId: response.userId,\r\n                userFullName: response.userFullName,\r\n                positionName: response.positionName\r\n            }) \r\n        setLoading(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const parseJwt = (token) => {\r\n        try {\r\n          return JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n    };\r\n\r\n    const checkJWTExpire = () => {\r\n        let result = false;\r\n        let getJWT = localStorage.getItem('jwt');\r\n        if(getJWT){\r\n            let decodeJWT = parseJwt(getJWT);\r\n            let currentDate  = new Date();\r\n            if(decodeJWT.exp * 1000 < currentDate.getTime()) {\r\n                //console.log('Token đã hết hạn hoặc không tồn tại')\r\n                localStorage.removeItem('jwt'); //xóa localStorage\r\n                localStorage.removeItem('userLogin');\r\n                sessionStorage.clear();\r\n                return result \r\n            }\r\n            else{\r\n                //console.log('token còn hạn');\r\n                result = true;\r\n                return result\r\n            }\r\n        }\r\n        else{\r\n            localStorage.removeItem('userLogin');\r\n            return result\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n        if(getUserLogin){\r\n            const result = checkJWTExpire();\r\n            if(result){\r\n                const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n                setUser(getUserLogin);\r\n            }else{\r\n                //không có token\r\n                setUser(userDefault);\r\n            }\r\n        }else{\r\n            localStorage.removeItem('jwt'); //xóa localStorage\r\n            setUser(userDefault);\r\n        }\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <UserContext.Provider \r\n                value={{ user, loading, loadingContext, loginContext, \r\n                    logoutContext, alertVisible, triggerAlert, confirmAlert, resetAlert, isLogOutClick,\r\n                    isDialogChangePasswordOpen, setIsDialogChangePasswordOpen\r\n                }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop}\r\n                alertTitle={'Đang tải thông tin người dùng'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n//modal\r\nimport UserManual from '../ManageUserManual/UserManual';\r\nimport ChangePassword from '../ManageChangePassword/ChangePassword';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nfunction Header(props) {\r\n\r\n  const { user, logoutContext, triggerAlert, isDialogChangePasswordOpen, setIsDialogChangePasswordOpen } = useContext(UserContext);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [openModalUserManual, setOpenModalUserManual] = useState(false);\r\n  const [openModalChangePassword, setOpenModalChangePassword] = useState(false);\r\n\r\n  //mui state menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  \r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const actionNursing = [\r\n    { key: 'medicalRegister', maxWidth: '114px', label: 'Đăng ký khám', icon: <LocalHospitalIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/medicalregister\" },\r\n    { key: 'remind-examining', maxWidth: '95px', label: 'Nhắc khám', icon: <LocalPhoneIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/remind-examining\" },\r\n  ]\r\n\r\n  const actionDoctor = [\r\n    { key: 'examining', maxWidth: '100px', label: 'Khám bệnh', icon: <MedicationLiquidIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/doctor-examining\" },\r\n  ]\r\n\r\n  const actionAdmin = [\r\n    { key: 'statistical', maxWidth: '83px', label: 'Thống kê', icon: <BarChartIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/dashboard\" },\r\n  ]\r\n\r\n  const [userAction, setUserAction] = useState([]);\r\n\r\n  const handleChangeURL = (pathname) => {\r\n    const actionIndex = userAction.findIndex(action => action.to === pathname);\r\n    return actionIndex;\r\n  }\r\n\r\n  const value = handleChangeURL(props.location.pathname);\r\n\r\n  const handleLogout = () => {\r\n    if(user.positionName === 'Doctor'){\r\n      triggerAlert(() => {\r\n        localStorage.removeItem('jwt');\r\n        localStorage.removeItem('userLogin');\r\n        logoutContext();\r\n        setAnchorEl(null);\r\n        history.push('/login');\r\n      });\r\n    }\r\n    \r\n    else{\r\n      localStorage.removeItem('jwt'); //xóa localStorage\r\n      localStorage.removeItem('userLogin');\r\n      logoutContext();\r\n      setAnchorEl(null);\r\n      history.push('/login');\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(user.positionName === 'Nursing'){        \r\n      setUserAction(actionNursing);\r\n    }\r\n    else if(user.positionName === 'Doctor'){\r\n      setUserAction(actionDoctor);\r\n    }\r\n    else if(user.positionName === 'Admin'){\r\n      setUserAction(actionAdmin);\r\n    }\r\n  }, [user])\r\n  \r\n  if(location.pathname !== '/login'){\r\n    return (\r\n      <>\r\n        <Box sx={{ width: '100%'}} >\r\n          <AppBar sx={{position: 'unset'}}>\r\n            <Toolbar sx={{backgroundColor: '#cfe8fc', height: '78px'}}>\r\n              {/* <Link to=\"/\"> */}\r\n                <Avatar src={Logo} sx={{ width: 62, height: 62, mt: 'auto', mb: 'auto', mr: 4 }} />\r\n              {/* </Link> */}\r\n                {user.isAuthenticated === true || token ? \r\n                  <>\r\n                    <BottomNavigation showLabels value={value}\r\n                      sx={{display: 'flex', justifyContent: 'flex-start', backgroundColor: '#cfe8fc', flexGrow: 1}}>\r\n                      {userAction.map(actionItem => (\r\n                        <BottomNavigationAction\r\n                          key={actionItem.key}\r\n                          label={actionItem.label}\r\n                          icon={actionItem.icon}\r\n                          LinkComponent={actionItem.LinkComponent}\r\n                          to={actionItem.to}\r\n                          sx={{color: '#000', maxWidth: actionItem.maxWidth}}\r\n                        />\r\n                      ))}  \r\n                    </BottomNavigation>\r\n\r\n                    <Button onClick={handleClick} sx={{color: '#000', textTransform: 'none'}}>{user.userFullName}</Button>\r\n                    <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\r\n                      <MenuItem onClick={() => [setOpenModalChangePassword(true), setIsDialogChangePasswordOpen(true), setAnchorEl(null)]}>Đổi mật khẩu</MenuItem>\r\n                      <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                    </Menu>\r\n                    <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                  </>\r\n                  :\r\n                    <>\r\n                      <Box sx={{position: 'absolute', right: 22}}>\r\n                        <NavLink exact to=\"/login\"><Button sx={{textTransform: 'none', color: '#000'}}>Đăng nhập</Button></NavLink>\r\n                        <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                      </Box>\r\n                    </>\r\n                  }            \r\n                </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n  \r\n        <UserManual openModalUserManual={openModalUserManual} setOpenModalUserManual={setOpenModalUserManual}/>\r\n        <ChangePassword openModalChangePassword={openModalChangePassword} setOpenModalChangePassword={setOpenModalChangePassword} setIsDialogChangePasswordOpen={setIsDialogChangePasswordOpen}/>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst PrivateRoutes = (props) => {\n  const token = localStorage.getItem('jwt');\n  const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\n\n  if (token && getUserLogin) {\n    return (\n      <>\n        <Route path={props.path} component={props.component}></Route>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <Redirect to='/login'></Redirect>\n      </>\n    )\n  }\n};\nexport default PrivateRoutes;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../ErrorPage/Page500.scss\";\n\nconst Page404 = () => {\n\n  let history = useHistory();\n\n  return (\n    <div>\n      <div className=\"section\">\n        <h1 className=\"error\">404</h1>\n        <div className=\"page\">Trang mà bạn đang truy cập không tồn tại.</div>\n      </div>\n    </div>\n  );\n};\nexport default Page404;\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CreateAccount = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleCloseModalRegister = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalRegister(false);\r\n      }\r\n    }\r\n\r\n    const position = [\r\n      {id: '1', positionName: 'Điều dưỡng'},\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n          <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalRegister} onClose={(event, reason) => handleCloseModalRegister(event, reason)} disableEscapeKeyDown={true}  >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n            <IconButton onClick={() => handleCloseModalRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n              <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} />\r\n              <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }}/>\r\n              <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '46ch', mb: 2.5 }} \r\n                InputProps={{ // <-- This is where the toggle button is added.\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <Autocomplete options={position.map((option) => option.positionName)} renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} sx={{ width: '45.95ch', mb: 2.5 }}/>\r\n              <Stack spacing={2} direction=\"column\">\r\n                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleCloseModalRegister()}>Tạo tài khoản</Button>\r\n              </Stack>\r\n            \r\n            </DialogContent>\r\n          </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAccount","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Register from '../ManageRegister/Register';\r\nimport { toast } from 'react-toastify';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//api\r\nimport { userLogin } from '../../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nconst Login = () => {\r\n    const { user, loadingContext, loginContext } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [userAccount, setUserAccount] = useState({userName: '', password: ''})\r\n    const [openModalRegister, setOpenModalRegister] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const onChangeUserName = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                userName: value\r\n            }\r\n        }) \r\n    }\r\n\r\n    const onChangeUserPassword = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                password: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if(userAccount.userName === ''){\r\n            toast.error('Bạn chưa nhập tài khoản!')\r\n        }\r\n        else if(userAccount.password === ''){\r\n            toast.error('Bạn chưa nhập mật khẩu!');\r\n        }\r\n        else{\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const response = await userLogin(userAccount.userName, userAccount.password);\r\n            setOpenAlertProcessingBackdrop(false);\r\n            if(response.status !== 200){\r\n                toast.error(response.data);\r\n            }\r\n            else{\r\n                localStorage.setItem('jwt', response.data.tokenDTO.token)\r\n                const userLogin = {\r\n                    isAuthenticated: true, \r\n                    isLogin: true, \r\n                    userId: response.data.userId,\r\n                    userName: response.data.userName, \r\n                    userFullName: response.data.userFullName, \r\n                    positionName: response.data.positionName\r\n                }\r\n\r\n                localStorage.setItem('userLogin', JSON.stringify(userLogin))\r\n                loginContext(userLogin);\r\n                   \r\n                if(response.data.positionName === 'Nursing'){\r\n                    history.push('/medicalregister');\r\n                }\r\n                else if(response.data.positionName === 'Doctor'){\r\n                    history.push('/doctor-examining');\r\n                }\r\n                else if(response.data.positionName === 'Admin'){\r\n                    history.push('/dashboard');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleLogin();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAuthenticated === true) {\r\n            history.push('/');\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        const userLogin = localStorage.getItem('userLogin');\r\n        if (token && userLogin) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(openAlertProcessingBackdrop){\r\n                event.preventDefault();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [openAlertProcessingBackdrop])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box sx={{ mt: 3, borderRadius: '25px' }} >\r\n                    <Box sx={{ p: 7.6 }}>\r\n                        <Avatar src={Logo} sx={{ width: 120, height: 120, ml: 'auto', mr: 'auto', mb: 2 }} />\r\n                        <Typography sx={{ textAlign: 'center', textTransform: 'uppercase', fontWeight: 'bolder', fontSize: '1.15rem', mb: 2, color: '#4caf50' }} variant=\"h5\">Chương trình khám nhi khoa phát triển</Typography>\r\n                        <Box component=\"form\" autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                            <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                            <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 3 }} \r\n                            onChange={(e) => onChangeUserPassword(e.target.value)} onKeyDown={(e) => handlePressEnter(e)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6.5vh', width: '28ch' }} variant=\"contained\" style={{ margin: 'auto' }} onClick={(e) => handleLogin()}>Đăng nhập</Button>\r\n                                <Typography sx={{textAlign: 'center', color: 'red', fontSize: '18px'}} variant=\"subtitle1\"><strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Quên mật khẩu</strong></Typography>\r\n                                <Typography sx={{textAlign: 'center', mt: '10px !important'}} variant=\"subtitle1\">Chưa có tài khoản? <strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Đăng ký</strong></Typography>\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Register\r\n                openModalRegister={openModalRegister} setOpenModalRegister={setOpenModalRegister}\r\n            />\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang đăng nhập'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessing(props) {\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={props.openAlertProcessing} disableEscapeKeyDown={true}>\r\n                <DialogContent>\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <CircularProgress/>\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang xử lý...</Typography>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertProcessing","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-knkpt.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getListProvince = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/ListProvince`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListDistrict = async (provinceId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListDistrictByIdProvince/${provinceId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListWard = async (districtId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListWardByIdDistrict/${districtId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getFullAddressByIdWard = async (codeWard) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetFullAddressByIdWard/${codeWard}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getListProvince, getListDistrict, getListWard, getFullAddressByIdWard\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport { Autocomplete } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//lodash\r\nimport _ from 'lodash';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { updateMedicalRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalService';\r\n\r\nfunction ManageInfoPantients(props) {\r\n  const dataPatientInfoDefault = {\r\n    examinationId: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    headCircumference: \"\",\r\n    reason: \"\",\r\n    vaccination: false,\r\n    id: \"\",\r\n    patient: {\r\n      identifier: \"\",\r\n      address: \"\",\r\n      fullName: \"\",\r\n      dayOfBirth: null,\r\n      codeWard: \"\",\r\n      gender: true,\r\n      fullNameMother: \"\",\r\n      phoneMother: \"\",\r\n      fullNameFather: \"\",\r\n      phoneFather: \"\",\r\n      patientId: \"\"\r\n    }\r\n  }\r\n\r\n  const dataPatientInfoErrorDefault = {\r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    examiningSession: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n  } \r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const selectedAutoCompleteDefault = { \r\n    gender: { value: null, openOption: false }, \r\n    examiningSession: {value: null, openOption: false, loading: false},\r\n    province: { value: null, openOption: false }, \r\n    district: { value: null, openOption: false }, \r\n    ward: { value: null, openOption: false },\r\n  }\r\n\r\n  const typingRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  const [dataPatientInfoNotEdit, setDataPatientInfoNotEdit] = useState();\r\n  const [dataPatientInfo, setDataPatientInfo] = useState(dataPatientInfoDefault);\r\n  const [dataPatientInfoError, setDataPatientInfoError] = useState(dataPatientInfoErrorDefault);\r\n    \r\n  const [selectedAutoComplete, setSelectedAutoComplete] = useState(selectedAutoCompleteDefault);\r\n\r\n  const [listExaminingSession, setListExaminingSession] = useState([]);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f',\r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -8],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.gender.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'ExaminingSession'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.examiningSession.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else{\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      //const _dataPatientInfoError = {...dataPatientInfoError};\r\n      // if(fieldName === 'patientId'){\r\n      //   _dataPatientInfoError.patientId.title = '';\r\n      //   _dataPatientInfoError.patientId.openTooltip = false;\r\n      //   setDataPatientInfoError(_dataPatientInfoError);\r\n      // }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.dayOfBirth.title = '';\r\n      //     _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientInfoError.dayOfBirth.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneMother.title = '';\r\n      //     _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneMother.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneFather'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneFather.title = '';\r\n      //     _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneFather.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'Gender'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.gender.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'ExaminingSession'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n      //     prevSelectedAutoComplete.examiningSession.openOption = false\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Province'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.province.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'District'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.district.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Ward'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.ward.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.gender.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'ExaminingSession'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n          prevSelectedAutoComplete.examiningSession.openOption = false\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.district.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.ward.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n  \r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n  \r\n      return (lowercasedFullName.includes(lowercasedInput) || initials.includes(lowercasedInput));\r\n    });\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientInfoError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientInfoError.identifier.openTooltip = true;\r\n          _dataPatientInfoError.identifier.isError = true;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n        else{\r\n          setDataPatientInfo(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientInfoError.identifier.title = '';\r\n          _dataPatientInfoError.identifier.openTooltip = false;\r\n          _dataPatientInfoError.identifier.isError = false;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.identifier.title = '';\r\n      _dataPatientInfoError.identifier.openTooltip = false;\r\n      _dataPatientInfoError.identifier.isError = false;\r\n      _dataPatientInfoError.identifier.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n    \r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.fullName = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n    \r\n      if(dataPatientInfoError.fullName.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullName.title = '';\r\n        _dataPatientInfoError.fullName.openTooltip = false;\r\n        _dataPatientInfoError.fullName.isError = false;\r\n        _dataPatientInfoError.fullName.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = async (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n    \r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n            \r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n    \r\n        if(today < takenValue || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientInfoError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n          _dataPatientInfoError.dayOfBirth.isError = true;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n    \r\n        else{\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.dayOfBirth = formattedDate\r\n            return {...prevDataPatientInfo}\r\n          })\r\n    \r\n          _dataPatientInfoError.dayOfBirth.title = '';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n          _dataPatientInfoError.dayOfBirth.isError = false;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n\r\n          onChangeDOBToGetExaminingSession(formattedDate);\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onChangeDOBToGetExaminingSession = async (formattedDate) => {\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.value = null\r\n      return {...prevSelectedAutoComplete}\r\n    })\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = true\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(formattedDate);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = false\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.patient.gender = value.genderValue\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n    \r\n    if(dataPatientInfoError.gender.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.gender.isError = false;\r\n      _dataPatientInfoError.gender.title = '';\r\n      _dataPatientInfoError.gender.openTooltip = false;\r\n      _dataPatientInfoError.gender.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectExaminingSession = (e, value) => {\r\n    if(focusField === 'examiningSession'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.examinationId = value.id\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.examiningSession.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(dataPatientInfoError.examiningSession.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.examiningSession.isError = false;\r\n      _dataPatientInfoError.examiningSession.title = '';\r\n      _dataPatientInfoError.examiningSession.openTooltip = false;\r\n      _dataPatientInfoError.examiningSession.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.province.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(selectedAutoComplete.district.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.province.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.province.isError = false;\r\n      _dataPatientInfoError.province.title = '';\r\n      _dataPatientInfoError.province.openTooltip = false;\r\n      _dataPatientInfoError.province.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.district.value = value;\r\n      return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.district.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.district.isError = false;\r\n      _dataPatientInfoError.district.title = '';\r\n      _dataPatientInfoError.district.openTooltip = false;\r\n      _dataPatientInfoError.district.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n\r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.codeWard = value.code\r\n      return { ...prevDataPatientInfo }\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.ward.value = value;\r\n        return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(dataPatientInfoError.ward.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.ward.isError = false;\r\n      _dataPatientInfoError.ward.title = '';\r\n      _dataPatientInfoError.ward.openTooltip = false;\r\n      _dataPatientInfoError.ward.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    if(focusField === 'address'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.address = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.address.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.address.isError = false;\r\n        _dataPatientInfoError.address.title = '';\r\n        _dataPatientInfoError.address.openTooltip = false;\r\n        _dataPatientInfoError.address.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    if(focusField === 'fullNameMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameMother = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(focusField === 'phoneMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneMother.openTooltip = true;\r\n          _dataPatientInfoError.phoneMother.isError = true;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n          \r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneMother = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n      \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n      \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 10)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneMother.title = '';\r\n      _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      _dataPatientInfoError.phoneMother.isError = false;\r\n      _dataPatientInfoError.phoneMother.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameFather = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneFather.openTooltip = true;\r\n          _dataPatientInfoError.phoneFather.isError = true;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n\r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneFather = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n                \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n                \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneFather.title = '';\r\n      _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      _dataPatientInfoError.phoneFather.isError = false;\r\n      _dataPatientInfoError.phoneFather.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    if(focusField === 'height'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.height = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.height.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.height.title = '';\r\n        _dataPatientInfoError.height.openTooltip = false;\r\n        _dataPatientInfoError.height.isError = false;\r\n        _dataPatientInfoError.height.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    if(focusField === 'weight'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.weight = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.weight.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.weight.title = '';\r\n        _dataPatientInfoError.weight.openTooltip = false;\r\n        _dataPatientInfoError.weight.isError = false;\r\n        _dataPatientInfoError.weight.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    if(focusField === 'headCircumference'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.headCircumference = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.headCircumference.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.headCircumference.title = '';\r\n        _dataPatientInfoError.headCircumference.openTooltip = false;\r\n        _dataPatientInfoError.headCircumference.isError = false;\r\n        _dataPatientInfoError.headCircumference.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.vaccination = bool\r\n      return {...prevDataPatientInfo}\r\n    })\r\n  }\r\n\r\n  const handleCloseModalInfoPantients = (event, reason) => {\r\n    if(reason && reason === \"backdropClick\"){\r\n      return;\r\n    }\r\n    else{\r\n      setListDistrict(prevListDistrict => {\r\n        prevListDistrict.loading = false\r\n        prevListDistrict.list = []\r\n        return {...prevListDistrict}\r\n      })\r\n      setListWard(prevListWard => {\r\n        prevListWard.loading = false\r\n        prevListWard.list = []\r\n        return {...prevListWard}\r\n      })\r\n      setListExaminingSession([]);\r\n      setSelectedAutoComplete(selectedAutoCompleteDefault);\r\n      setDataPatientInfo(dataPatientInfoDefault);\r\n      setDataPatientInfoNotEdit('');\r\n      setDataPatientInfoError(dataPatientInfoErrorDefault);\r\n      setLoading(true);\r\n      props.setSelectedPantientInfo();\r\n      props.setOpenModalInfoPantients(false);\r\n    }\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const responseListProvince = await getListProvince();\r\n    setListProvince(responseListProvince);\r\n  }\r\n\r\n  const handleApplyPantientDataToField = async () => {\r\n    setOpenAlertProcessing(true);   \r\n      \r\n    const editPropsDataPatientInfo = {...dataPatientInfo};\r\n    editPropsDataPatientInfo.examinationId = props.selectedPantientInfo.examinationId\r\n    editPropsDataPatientInfo.height = props.selectedPantientInfo.height\r\n    editPropsDataPatientInfo.weight = props.selectedPantientInfo.weight\r\n    editPropsDataPatientInfo.headCircumference = props.selectedPantientInfo.headCircumference\r\n    editPropsDataPatientInfo.reason = props.selectedPantientInfo.reason\r\n    editPropsDataPatientInfo.vaccination = props.selectedPantientInfo.vaccination\r\n    editPropsDataPatientInfo.id = props.selectedPantientInfo.id\r\n    editPropsDataPatientInfo.patient.identifier = props.selectedPantientInfo.patient.identifier\r\n    editPropsDataPatientInfo.patient.address = props.selectedPantientInfo.patient.address\r\n    editPropsDataPatientInfo.patient.fullName = props.selectedPantientInfo.patient.fullName\r\n    editPropsDataPatientInfo.patient.dayOfBirth = props.selectedPantientInfo.patient.dayOfBirth\r\n    editPropsDataPatientInfo.patient.codeWard = props.selectedPantientInfo.patient.codeWard\r\n    editPropsDataPatientInfo.patient.gender = props.selectedPantientInfo.patient.gender\r\n    editPropsDataPatientInfo.patient.fullNameMother = props.selectedPantientInfo.patient.fullNameMother\r\n    editPropsDataPatientInfo.patient.phoneMother = props.selectedPantientInfo.patient.phoneMother\r\n    editPropsDataPatientInfo.patient.fullNameFather = props.selectedPantientInfo.patient.fullNameFather\r\n    editPropsDataPatientInfo.patient.phoneFather = props.selectedPantientInfo.patient.phoneFather\r\n    editPropsDataPatientInfo.patient.patientId = props.selectedPantientInfo.patient.patientId\r\n\r\n    setDataPatientInfo(_.cloneDeep(editPropsDataPatientInfo));\r\n    setDataPatientInfoNotEdit(_.cloneDeep(editPropsDataPatientInfo));\r\n        \r\n    const response = await getFullAddressByIdWard(props.selectedPantientInfo.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.list = responseListDistrict;\r\n      return {...prevListDistrict}\r\n    });\r\n    const responseListWard = await getListWard(response.districtCode);\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = responseListWard;\r\n      return {...prevListWard}\r\n    });\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(props.selectedPantientInfo.patient.dayOfBirth);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n     \r\n    const selectedGender = listGender.find(gender => gender.genderValue === props.selectedPantientInfo.patient.gender);\r\n    const indexListExamining = responseListMedicalExaminationsGiveRegister.exams.findIndex(examiningSession => examiningSession.id === props.selectedPantientInfo.examinationId)\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = selectedGender\r\n      prevSelectedAutoComplete.examiningSession.value = responseListMedicalExaminationsGiveRegister.exams[indexListExamining];\r\n      prevSelectedAutoComplete.province.value = listProvince[indexListProvince];\r\n      prevSelectedAutoComplete.district.value = responseListDistrict[indexListDistrict];\r\n      prevSelectedAutoComplete.ward.value = responseListWard[indexListWard];\r\n      return prevSelectedAutoComplete\r\n    })\r\n\r\n    setLoading(false);\r\n    setOpenAlertProcessing(false);   \r\n  }\r\n\r\n  const checkValidate = () => {\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      let isValid = true;\r\n\r\n      if(dataPatientInfoError.identifier.title !== ''){\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.identifier.focus = true;\r\n          setFocusField('identifier');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullName === ''){\r\n        _dataPatientInfoError.fullName.title = 'Bạn chưa nhập họ tên';\r\n        _dataPatientInfoError.fullName.openTooltip = true;\r\n        _dataPatientInfoError.fullName.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullName.focus = true;\r\n          setFocusField('fullName');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(dataPatientInfo.patient.gender === ''){\r\n        _dataPatientInfoError.gender.title = 'Bạn chưa chọn giới tính';\r\n        _dataPatientInfoError.gender.isError = true;\r\n        _dataPatientInfoError.gender.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.gender.focus = true;\r\n          setFocusField('gender');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.dayOfBirth === ''){\r\n        _dataPatientInfoError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfoError.dayOfBirth.title !== ''){\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.examiningSession.value === null){\r\n        _dataPatientInfoError.examiningSession.title = 'Bạn chưa chọn lại kỳ khám';\r\n        _dataPatientInfoError.examiningSession.isError = true;\r\n        _dataPatientInfoError.examiningSession.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.examiningSession.focus = true;\r\n          setFocusField('examiningSession');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.province.value === null){\r\n        _dataPatientInfoError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n        _dataPatientInfoError.province.isError = true;\r\n        _dataPatientInfoError.province.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.province.focus = true;\r\n          setFocusField('province');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.district.value === null){\r\n        _dataPatientInfoError.district.title = 'Bạn chưa chọn quận huyện';\r\n        _dataPatientInfoError.district.isError = true;\r\n        _dataPatientInfoError.district.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.district.focus = true;\r\n          setFocusField('district');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.ward.value === null){\r\n        _dataPatientInfoError.ward.title = 'Bạn chưa chọn phường xã';\r\n        _dataPatientInfoError.ward.isError = true;\r\n        _dataPatientInfoError.ward.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.ward.focus = true;\r\n          setFocusField('ward');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.address === ''){\r\n        _dataPatientInfoError.address.title = 'Bạn chưa nhập địa chỉ';\r\n        _dataPatientInfoError.address.isError = true;\r\n        _dataPatientInfoError.address.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.address.focus = true;\r\n          setFocusField('address');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullNameMother === '' && dataPatientInfo.patient.fullNameFather === ''){\r\n        _dataPatientInfoError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n        _dataPatientInfoError.fullNameMother.isError = true;\r\n        _dataPatientInfoError.fullNameMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullNameMother.focus = true;\r\n          setFocusField('fullNameMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.phoneMother === '' && dataPatientInfo.patient.phoneFather === ''){\r\n        _dataPatientInfoError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        _dataPatientInfoError.phoneMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneMother.title !== ''){\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneFather.title !== ''){\r\n        _dataPatientInfoError.phoneFather.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneFather.focus = true;\r\n          setFocusField('phoneFather');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.height === ''){\r\n        _dataPatientInfoError.height.title = 'Bạn chưa nhập chiều cao';\r\n        _dataPatientInfoError.height.isError = true;\r\n        _dataPatientInfoError.height.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.height.focus = true;\r\n          setFocusField('height');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.weight === ''){\r\n        _dataPatientInfoError.weight.title = 'Bạn chưa nhập cân nặng';\r\n        _dataPatientInfoError.weight.isError = true;\r\n        _dataPatientInfoError.weight.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.weight.focus = true;\r\n          setFocusField('weight');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.headCircumference === ''){\r\n        _dataPatientInfoError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n        _dataPatientInfoError.headCircumference.isError = true;\r\n        _dataPatientInfoError.headCircumference.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.headCircumference.focus = true;\r\n          setFocusField('headCircumference');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      // if(dataPatientInfo.reason === ''){\r\n      //   _dataPatientInfoError.reason.isError = true;\r\n      //   isValid = false;\r\n      // }\r\n\r\n      if(_.isEqual(dataPatientInfo, dataPatientInfoNotEdit) === true){\r\n        toast.warning('Hiện không có gì để cập nhật', {toastId: 'warning1'});\r\n        isValid = false;\r\n      }\r\n\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n      return isValid;\r\n  }\r\n\r\n  const handleUpdateMedicalRegister = async () => {\r\n    if(checkValidate()){\r\n      setOpenAlertProcessing(true);\r\n      const response = await updateMedicalRegister(dataPatientInfo);\r\n      if(response.status === 200){\r\n        toast.success(response.data, {toastId: 'success1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      else{\r\n        toast.error(response.data, {toastId: 'error1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      setOpenAlertProcessing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(listProvince.length === 0){\r\n      handleGetListProvince();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.selectedPantientInfo){\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n      handleApplyPantientDataToField();\r\n    }\r\n  }, [props.selectedPantientInfo])\r\n\r\n  useEffect(() => {\r\n    if(props.openModalInfoPantients && props.isContinueUpdateMedicalRegister && loading === false){\r\n      handleUpdateMedicalRegister();\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n    }\r\n  }, [props.isContinueUpdateMedicalRegister, loading])\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth={true} maxWidth='md' open={props.openModalInfoPantients} onClose={(event, reason) => handleCloseModalInfoPantients(event, reason)} >\r\n        <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center', color: 'blue' }}>Thông tin bệnh nhân</DialogTitle>\r\n        <IconButton onClick={() => handleCloseModalInfoPantients()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n          <CloseIcon fontSize='medium'/>\r\n        </IconButton>\r\n        <DialogContent dividers sx={{pt: 1.5, pb: 1.5}}>\r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', pl: 4.2, pr: 4.2, mb: 0.8}}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.identifier.title}</h6>} open={dataPatientInfoError.identifier.openTooltip} placement='left'> \r\n              <TextField error={true ? dataPatientInfoError.identifier.isError === true : false}\r\n                label=\"Mã định danh\" variant=\"outlined\" \r\n                sx={{width: '18%', '&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                inputProps={{ maxLength: 12 }}\r\n                inputRef={(input) => input && focusField === 'identifier' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.identifier}\r\n                onChange={(e) => onChangeIdentifier(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n                      \r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullName.title}</h6>} open={dataPatientInfoError.fullName.openTooltip} placement='top'\r\n              slotProps={{\r\n                popper: {\r\n                  modifiers: [\r\n                    {\r\n                      name: 'offset',\r\n                      options: { offset: [-10, -6], },\r\n                    },\r\n                  ],\r\n                },\r\n              }} \r\n            > \r\n              <TextField error={true ? dataPatientInfoError.fullName.isError === true : false}\r\n                label=\"Họ tên\" variant=\"outlined\" \r\n                sx={{width: '32%', '&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.fullName}\r\n                onChange={(e) => onChangeFullName(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.gender.title}</h6>} open={dataPatientInfoError.gender.openTooltip} placement='top'>\r\n              <Autocomplete \r\n                sx={{width: '12%', marginTop: '7.5px'}}\r\n                options={listGender} \r\n                getOptionLabel={(option) => option.genderName}\r\n                value={selectedAutoComplete.gender.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.genderName}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectGender(e, value)}\r\n                open={selectedAutoComplete.gender.openOption}\r\n                onFocus={() => handleFocus('Gender')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Giới tính\" \r\n                    inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                    error={true ? dataPatientInfoError.gender.isError === true : false}                     \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <DemoContainer components={['DatePicker']}>  \r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.dayOfBirth.title}</h6>} open={dataPatientInfoError.dayOfBirth.openTooltip}>    \r\n                  <Box sx={{width: 110}}>\r\n                    <DatePicker label=\"Ngày sinh\" \r\n                      format='DD/MM/YYYY' defaultValue={moment(dataPatientInfo.patient.dayOfBirth)}\r\n                      disableFuture={true} disableOpenPicker \r\n                      slotProps={{ \r\n                        textField: \r\n                          { \r\n                            inputRef: dateFieldRef,\r\n                            error: true ? dataPatientInfoError.dayOfBirth.isError === true : false,\r\n                            onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                          }\r\n                        }}\r\n                      onChange={(value) => onChangeDOB(value)}\r\n                    />\r\n                  </Box>\r\n                </Tooltip>\r\n              </DemoContainer>\r\n            </ThemeProvider>\r\n          </LocalizationProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.examiningSession.title}</h6>} open={dataPatientInfoError.examiningSession.openTooltip} placement='right'>\r\n              <Autocomplete \r\n                sx={{width: '18%', mt: '7.5px'}}\r\n                options={listExaminingSession} \r\n                noOptionsText={selectedAutoComplete.examiningSession.loading ? 'Đang tải...' : ''}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.examiningSession.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectExaminingSession(e, value)}\r\n                open={selectedAutoComplete.examiningSession.openOption}\r\n                onFocus={() => handleFocus('ExaminingSession')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'ExaminingSession')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Kỳ khám\" \r\n                    inputRef={(input) => input && focusField === 'examiningSession' && input.focus()}\r\n                    error={true ? dataPatientInfoError.examiningSession.isError === true : false} \r\n                    sx={{'& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot': {pl: '6px', pr: '6px'}}}\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      endAdornment: (\r\n                        <>\r\n                          {selectedAutoComplete.examiningSession.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </>\r\n                      ),\r\n                    }} \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.province.title}</h6>} open={dataPatientInfoError.province.openTooltip} placement='left'>\r\n              <Autocomplete \r\n                sx={{width: '20%', mt: 2}}\r\n                options={listProvince} \r\n                filterOptions={filterOptions}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.province.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectProvine(e, value)}\r\n                open={selectedAutoComplete.province.openOption}\r\n                onFocus={() => handleFocus('Province')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Thành phố\"\r\n                    inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                    error={true ? dataPatientInfoError.province.isError === true : false}  \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.district.title}</h6>} open={dataPatientInfoError.district.openTooltip} placement='top'>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listDistrict.list} \r\n                  noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.district.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectDistrict(e, value)}\r\n                  open={selectedAutoComplete.district.openOption}\r\n                  onFocus={() => handleFocus('District')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Quận/huyện\" \r\n                      inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                      error={true ? dataPatientInfoError.district.isError === true : false} \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.ward.title}</h6>} open={dataPatientInfoError.ward.openTooltip}>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listWard.list}\r\n                  noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.ward.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectWard(e, value)}\r\n                  open={selectedAutoComplete.ward.openOption}\r\n                  onFocus={() => handleFocus('Ward')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Phường/Xã\" \r\n                      inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                      error={true ? dataPatientInfoError.ward.isError === true : false}  \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.address.title}</h6>} open={dataPatientInfoError.address.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.address.isError === true : false}\r\n                  label=\"Địa chỉ\" variant=\"outlined\" \r\n                  sx={{width: '36%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.address}\r\n                  onChange={(e) => onChangeAddress(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullNameMother.title}</h6>} open={dataPatientInfoError.fullNameMother.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.fullNameMother.isError === true : false}\r\n                  label=\"Họ tên mẹ\" variant=\"outlined\" \r\n                  sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.fullNameMother}\r\n                  onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                />    \r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneMother.title}</h6>} open={dataPatientInfoError.phoneMother.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.phoneMother.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneMother}\r\n                  onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <TextField \r\n              label=\"Họ tên cha\" variant=\"outlined\" sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n              defaultValue={dataPatientInfo.patient.fullNameFather}\r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n            />\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneFather.title}</h6>} open={dataPatientInfoError.phoneFather.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.phoneFather.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneFather}\r\n                  onChange={(e) => onChangePhoneFather(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.height.title}</h6>} open={dataPatientInfoError.height.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.height.isError === true : false}\r\n                  label='Chiều cao' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.height}\r\n                  onChange={(e) => onChangeHeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.weight.title}</h6>} open={dataPatientInfoError.weight.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.weight.isError === true : false}\r\n                  label='Cân nặng' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(kg)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.weight}\r\n                  onChange={(e) => onChangeWeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.headCircumference.title}</h6>} open={dataPatientInfoError.headCircumference.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.headCircumference.isError === true : false}\r\n                  label='Vòng đầu' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.headCircumference}\r\n                  onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <FormControlLabel sx={{width: '30%', mt: 2}} control={<Checkbox checked={dataPatientInfo.vaccination}/>} \r\n              label=\"Có tham gia tiêm ngừa\"\r\n              onChange={(e) => onChangeVaccination(e.target.checked)}\r\n            />  \r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{justifyContent: 'center'}}>\r\n          <Button variant=\"contained\" onClick={() => handleUpdateMedicalRegister()}>Sửa (F1)</Button>\r\n          <Button variant=\"contained\" color='secondary' onClick={(event, reason) => handleCloseModalInfoPantients(event, reason)}>Đóng (ESC)</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <AlertProcessing openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageInfoPantients","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//info pantients modal\r\nimport ManageInfoPantients from '../ManageInfoPantients/ManageInfoPantients';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//mui theme\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getRegistersByDateNow, getAppointmentsToday, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction ListPatientsRegister(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n  const [listPantientChipState, setListPantientChipState] = useState(\r\n    [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n    ]\r\n  )\r\n\r\n  const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n  \r\n  const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n  const [listDataPatientsAppointmentsToday, setListDataPatientsAppointmentsToday] = useState([]); \r\n  \r\n  const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n  const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n  const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n  const [selectedPantientInfo, setSelectedPantientInfo] = useState();\r\n  const [openModalInfoPantients, setOpenModalInfoPantients] = useState(false);\r\n  const [isContinueUpdateMedicalRegister, setIsContinueUpdateMedicalRegister] = useState();\r\n\r\n  const renderPatientsStatus = (state) => {\r\n    if(state === 0 || state === 3){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterWaiting' />\r\n        </>\r\n      )\r\n    }\r\n    else if(state === 1){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterExamining' />\r\n        </>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterDone' />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSelectedChip = (chipIndex, chipLabel) => {\r\n    setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n    if(chipIndex === 0){\r\n      const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n      setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n    }\r\n    else if(chipIndex === 1){\r\n      const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n      setListDataPatientsRegisterState(listPantientRegisterDone);\r\n    }\r\n    else if(chipIndex === 2){\r\n      setListDataPatientsRegisterSort(listDataPatientsAppointmentsToday);\r\n      setListDataPatientsRegisterState(listDataPatientsAppointmentsToday);\r\n    }\r\n  };\r\n\r\n  const handleSearchPantient = (value) => {\r\n    const takenValue = value;\r\n    setSearchPatientsQuery(takenValue);\r\n\r\n    if(value === ''){\r\n      setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n    }else{\r\n      setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n    }\r\n  }\r\n\r\n  const searchPatients = (patients, searchTerm) => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return patients.filter(patientObj => {\r\n      const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n      return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n    });\r\n  }\r\n\r\n  const handleSelectedPantientInfo = (patientsRegisterSortItem) => {\r\n    setSelectedPantientInfo(patientsRegisterSortItem);\r\n    setIsContinueUpdateMedicalRegister(true);\r\n    setOpenModalInfoPantients(true);\r\n  }\r\n\r\n  const handleSelectedPantientAppointmentsToday = async (patientsRegisterSortItem) => {\r\n    setOpenAlertProcessingBackdrop(true);\r\n    const responseVaccinationByPatientId = await getVaccinationByPatientId(patientsRegisterSortItem.patient.patientId);\r\n    const dataPantientOldOldDiseaseRegister = {\r\n      examinationId: patientsRegisterSortItem.patient.nextExamId,\r\n      oldDisease: true,\r\n      height: '',\r\n      weight: '',\r\n      headCircumference: '',\r\n      reason: '',\r\n      vaccination: responseVaccinationByPatientId.vaccination,\r\n      medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n      userIdDoctor: '',\r\n      patient: patientsRegisterSortItem.patient\r\n    }\r\n    props.setDataPantientAppointmentsToday(dataPantientOldOldDiseaseRegister)\r\n    setOpenAlertProcessingBackdrop(false);\r\n  }\r\n\r\n  const handleGetRegistersByDateNow = async () => {\r\n    setLoading(true);\r\n\r\n    const response = await getRegistersByDateNow();\r\n    const responseGetAppointmentsToday = await getAppointmentsToday();\r\n\r\n    let updatedList = [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: responseGetAppointmentsToday.length }\r\n    ]\r\n\r\n    let _listDataPatientsAppointmentsToday\r\n    if(responseGetAppointmentsToday.length > 0){\r\n      _listDataPatientsAppointmentsToday = responseGetAppointmentsToday.map((item) => {\r\n        const result = {\r\n          patient : {\r\n            identifier: item.identifier,\r\n            patientId: item.patientId,\r\n            fullName: item.patientFullName,\r\n            gender: item.gender,\r\n            dayOfBirth: item.dateOfBirth,\r\n            fullNameMother: item.fullNameMother,\r\n            phoneMother: item.phoneMother,\r\n            fullNameFather: item.fullNameFather,\r\n            phoneFather: item.phoneFather,\r\n            address: item.address,\r\n            fullAddress: item.fullAddress,\r\n            codeWard: item.codeWard,\r\n            nextExamId: item.nextExamId\r\n          }\r\n        }\r\n        return result;\r\n      })\r\n      setListDataPatientsAppointmentsToday(_listDataPatientsAppointmentsToday);\r\n    }\r\n    else{\r\n      setListDataPatientsAppointmentsToday(responseGetAppointmentsToday)\r\n    }\r\n\r\n    if(response !== 400){\r\n      if(response.list.length !== 0){\r\n        setListDataPatientsRegister(response.list);\r\n        if(activeChip.chipOrder === 0){\r\n          const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám và tái khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n          setListDataPatientsRegisterState(listPantientRegisterDone);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 2){\r\n          setListDataPatientsRegisterSort(_listDataPatientsAppointmentsToday);\r\n          setListDataPatientsRegisterState(_listDataPatientsAppointmentsToday);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n      }\r\n    }\r\n    setListPantientChipState(updatedList);\r\n    props.setComponent1Loading(false);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetRegistersByDateNow();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(openModalInfoPantients){\r\n      const handleKeyDown = (event) => {\r\n        if(event.keyCode === 112){\r\n          event.preventDefault()\r\n          setIsContinueUpdateMedicalRegister(true);\r\n          //nhấn F1 để sửa thông tin đăng ký khám\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [openModalInfoPantients, isContinueUpdateMedicalRegister]);\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true){\r\n      handleGetRegistersByDateNow();\r\n      props.setCompleteMedicalRegister(false);\r\n    }\r\n  }, [props.completeMedicalRegister])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{p: 0}}>\r\n        {/* <Typography variant='h6' sx={{color: 'red', mb: 0, fontWeight: 'bolder', fontSize: '1.16rem', marginBottom: '5px'}}>\r\n          {loading ? \r\n            <Skeleton /> \r\n          : \r\n            <div style={{display: 'flex', height: '30px'}}>\r\n              {props.currentDoctorExamining.userIdDoctor !== '' ?\r\n              <>\r\n                <Typography variant='subbtitle1'>{`Bác sĩ khám hôm nay: ${props.currentDoctorExamining.userFullName}`}</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Sửa'/>\r\n              </>\r\n              :\r\n              <>\r\n                <Typography variant='subbtitle1'>Chưa chọn bác sĩ khám hôm nay</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Thêm'/>\r\n              </>}\r\n            </div>\r\n          }\r\n        </Typography> */}\r\n\r\n        <div className='container' style={{border: '1px solid #fff', borderRadius: '10px', height: '590px', padding: 0, boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)'}}>\r\n          {loading ? \r\n             <>\r\n              <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                <CircularProgress/>\r\n                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n              </Box>        \r\n            </>\r\n          :\r\n            <>\r\n              <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                  <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                    <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                      onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                  </Badge>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n            \r\n              <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                <TextField sx={{mt: 0.2, mb: 1, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                  variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc SĐT' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    startAdornment: (\r\n                      <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                    ),\r\n                    endAdornment: (\r\n                      <InputAdornment position='end'>\r\n                        {searchPatientsQuery !== '' ? \r\n                          <CloseIcon sx={{cursor: 'pointer'}} \r\n                            titleAccess='Xóa'\r\n                            onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                          /> \r\n                        : \r\n                          null\r\n                        }\r\n                        </InputAdornment>  \r\n                      )\r\n                    }}>\r\n                  </TextField>\r\n              </Box>\r\n\r\n              <TableContainer component={Paper} sx={{ height: '465px', overflowX: 'scroll', borderBottomLeftRadius: '10px', borderBottomRightRadius: '10px' }}>\r\n                <Table stickyHeader sx={{ minWidth: 1200 }}>\r\n                  <TableHead>\r\n                    <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                      {activeChip.chipOrder === 2 ? \r\n                        null\r\n                      :\r\n                        <>\r\n                          <TableCell align=\"left\" sx={{fontSize: '0.95rem', p: '10px'}}>Trạng thái</TableCell>\r\n                          <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                        </>\r\n                      }\r\n                      <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {listDataPatientsRegisterSort.length !== 0 ?\r\n                      <>\r\n                        {listDataPatientsRegisterSort.map((patientsRegisterSortItem, patientsRegisterSortIndex) => (\r\n                          <TableRow hover role=\"checkbox\" key={patientsRegisterSortIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => activeChip.chipOrder === 2 ? handleSelectedPantientAppointmentsToday(patientsRegisterSortItem) : handleSelectedPantientInfo(patientsRegisterSortItem)}>\r\n                            {activeChip.chipOrder === 2 ? \r\n                              null\r\n                            :\r\n                              <>\r\n                                <TableCell align='center' sx={{width: '90px'}}>\r\n                                  <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.state === 0 || patientsRegisterSortItem.state === 3 ? 'Chờ khám' : patientsRegisterSortItem.state === 2 ? 'Đã khám' : 'Đang khám'}</Typography>} >\r\n                                    <span>{renderPatientsStatus(patientsRegisterSortItem.state)}</span>\r\n                                  </Tooltip>\r\n                                </TableCell>\r\n                                <TableCell align='left' sx={{width: '20px'}}>{patientsRegisterSortItem.order}</TableCell>\r\n                              </>\r\n                            }\r\n                            <TableCell align='left' sx={{width: '150px'}}>{patientsRegisterSortItem.patient.patientId}</TableCell>\r\n                            <TableCell align='left' sx={{width: '200px'}}>{patientsRegisterSortItem.patient.fullName}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{patientsRegisterSortItem.patient.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{moment(patientsRegisterSortItem.patient.dayOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                            <TableCell align='left' sx={{width: '140px'}}>{patientsRegisterSortItem.patient.phoneMother !== '' ? patientsRegisterSortItem.patient.phoneMother : patientsRegisterSortItem.patient.phoneFather}</TableCell>\r\n                            <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 120}}>\r\n                              <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.patient.fullAddress}</Typography>} >\r\n                                <span>{patientsRegisterSortItem.patient.fullAddress}</span>\r\n                              </Tooltip>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))} \r\n                      </>\r\n                    :\r\n                      null\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </>\r\n          }\r\n        </div>\r\n      </Box>\r\n      \r\n      <AlertProcessingBackdrop openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n      />\r\n\r\n      <ManageInfoPantients \r\n        openModalInfoPantients={openModalInfoPantients} setOpenModalInfoPantients={setOpenModalInfoPantients}\r\n        selectedPantientInfo={selectedPantientInfo} setSelectedPantientInfo={setSelectedPantientInfo}\r\n        isContinueUpdateMedicalRegister={isContinueUpdateMedicalRegister} setIsContinueUpdateMedicalRegister={setIsContinueUpdateMedicalRegister}\r\n        setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListPatientsRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//modal\r\n// import AlertConfirmModal from '../ManageAlertConfirm/AlertConfirm';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//api\r\nimport { createMedicalRegister, createMedicalBackRegister, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister } from '../../Service/MedicalService';\r\n\r\nfunction ExaminingSession(props) {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [listExaminingSession, setListExaminingSession] = useState(null);\r\n\r\n    const onChangeRadioSelect = (value) => {\r\n        props.dataPatientsRegister.examinationId = value;\r\n    }\r\n\r\n    const handleListMedicalExaminationsGiveRegister = async () =>  {\r\n        if(props.dataPatientsRegister.oldDisease){\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveOldRegister(props.dataPatientsRegister.patient.dayOfBirth, props.dataPatientsRegister.patient.patientId);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n        else{\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveRegister(props.dataPatientsRegister.patient.dayOfBirth);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    const handleMedicalRegister = async () => {\r\n        // //bệnh cũ\r\n        if(props.dataPatientsRegister.oldDisease === true && props.dataPatientsRegister.examinationId !== ''){\r\n            //là bênh mới đã đăng ký nhưng chưa từng khám bao giờ\r\n            if(listExaminingSession.isAppointment === false && listExaminingSession.oldExams.length === 0){\r\n                setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            //có hẹn khám nhưng không nhắc khám hoặc đến trễ ngày hẹn khám\r\n            else{\r\n                setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n        }\r\n        //bệnh mới\r\n        else{\r\n            //setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalRegister(props.dataPatientsRegister);\r\n            setOpenAlertProcessing(false);\r\n\r\n            if(response.status === 200){\r\n                toast.success(response.data);\r\n                setListExaminingSession(null);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCloseConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n      };\r\n\r\n    const handleOpenConfirm = () => {\r\n        if(props.dataPatientsRegister.examinationId === ''){\r\n            // setIsConfirmOpen(false);\r\n            toast.error('Bạn chưa chọn kỳ khám', {toastId: 'error1'});\r\n        }\r\n        else{\r\n            //setIsConfirmOpen(true);\r\n            handleMedicalRegister();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.dataPatientsRegister.patient.dayOfBirth !== '' && props.openModalExaminingSession === true){\r\n            handleListMedicalExaminationsGiveRegister();\r\n        }\r\n    }, [props.openModalExaminingSession])\r\n\r\n    useEffect(() => {\r\n        if(props.isContinueSelectedExaminingSession === true){\r\n            //nhấn F2 để hoàn tất đăng ký khám\r\n            handleOpenConfirm();\r\n            props.setIsContinueSelectedExaminingSession(false);\r\n        }\r\n    }, [props.isContinueSelectedExaminingSession])\r\n\r\n    return (\r\n        <>\r\n            {listExaminingSession ? \r\n                <>\r\n                    <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalExaminingSession} disableEscapeKeyDown={true}>\r\n                        <DialogTitle \r\n                            sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'green', textTransform: 'uppercase' }}>\r\n                            {`${props.dataPatientsRegister.patient.fullName}, \r\n                            ${props.dataPatientsRegister.patient.gender === true ? 'Nam' : 'Nữ'}, \r\n                            ${listExaminingSession.monthsOfAge}`}\r\n                        </DialogTitle>\r\n\r\n                        <IconButton onClick={() => [props.setOpenModalExaminingSession(false), props.dataPatientsRegister.examinationId = '', setListExaminingSession(null)]} \r\n                            sx={{position: 'absolute', right: 5, top: 7}}>\r\n                                <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n\r\n                        <DialogContent dividers sx={{pl: '0px', pr: '0px'}}>\r\n                            <Grid container rowSpacing={0}>\r\n                                <Grid item xs={0.5}/>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid black', p: 1, height: '50vh', overflow: 'auto'}}>\r\n                                        <Typography variant='h6' sx={{fontWeight: 'bolder'}}>Lịch sử khám</Typography>\r\n                                        {listExaminingSession.oldExams ?\r\n                                            listExaminingSession.oldExams.map((oldExamItem, oldExamIndex) => (\r\n                                                <Typography key={oldExamIndex} variant='subtitle1'>{oldExamItem.name}</Typography>\r\n                                            ))\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </Box>  \r\n                                </Grid>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid red', p: 1, height: '50vh'}}>\r\n                                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', color: 'red'}}>Chọn kỳ khám</Typography>\r\n                                            <RadioGroup key={`${props.dataPatientsRegister.patient.patientId}`} defaultValue={listExaminingSession.exams[0].id} onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                {listExaminingSession.exams.map((examItem, examIndex) => (\r\n                                                    <FormControlLabel key={`${examIndex}`} value={examItem.id} control={<Radio />} label={examItem.name} />\r\n                                                ))}\r\n                                            </RadioGroup>\r\n                                            <Button variant='contained' sx={{mt: 0.5}} onClick={() => handleOpenConfirm()}>Tiếp tục (F2)</Button> \r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </>\r\n            :\r\n                null\r\n            }\r\n\r\n            {/* <AlertConfirmModal \r\n                openAlertConfirmModal={isConfirmOpen} onCloseAlertConfirmModal={handleCloseConfirm} \r\n                onConfirmAlertConfirmModal={handleMedicalRegister} \r\n                titleConfirm=\"Đăng ký khám cho bệnh nhân?\"\r\n            /> */}\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExaminingSession","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListOldDisease, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDisease(props) {\r\n\r\n    const dataPatientsForSearchOldDiseaseDefault = {patientId: '', phone: '', fullName: '', dayOfBirth: ''}\r\n    const dataPatientsForSearchOldDiseaseErrorDefault = {\r\n        patientId: { title: '', isError: false, openTooltip: false, focus: false},\r\n        phone: { title: '', isError: false, openTooltip: false, focus: false },\r\n        fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n        dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n    \r\n    const [listFoundOldDisease, setListFoundOldDisease] = useState(null);\r\n    const [dataPatientsForSearchOldDisease, setDataPatientsForSearchOldDisease] = useState(dataPatientsForSearchOldDiseaseDefault);\r\n    const [dataPatientsForSearchOldDiseaseError, setDataPatientsForSearchOldDiseaseError] = useState(dataPatientsForSearchOldDiseaseErrorDefault);\r\n    const [focusField, setFocusField] = useState(null);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n\r\n    const dateFieldRef = useRef(null);\r\n    const formRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n    const tooltipTheme = createTheme({\r\n        components: {\r\n          MuiTooltip: {\r\n            defaultProps: {\r\n              placement: 'bottom',\r\n              arrow: true,\r\n              componentsProps: {\r\n                tooltip: {\r\n                  sx: {\r\n                    bgcolor: '#d32f2f',\r\n                  },\r\n                },\r\n                arrow: {\r\n                  sx: {\r\n                    color: '#d32f2f',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n    });\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key !== 'Enter') \r\n        {\r\n            event.preventDefault();\r\n        }\r\n        else if(event.key === 'Enter'){\r\n            handleEnterPress(event);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (value, fieldName) => {\r\n        if(value === '' || value === 'DD/MM/YYYY'){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(fieldName === 'patientId'){\r\n                if(typingRef.current){\r\n                    clearInterval(typingRef.current);\r\n                }\r\n                \r\n                typingRef.current = setTimeout(() => {  \r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }, 10)\r\n                \r\n                if(focusField === 'patientId'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'dayOfBirth'){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'dayOfBirth'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'phone'){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const onChangePatientId = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 8){\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = 'Mã bệnh nhân phải từ 8 đến 12 số';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'patientId'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.patientId = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n    }\r\n\r\n    const onChangeFullName = (value) => {\r\n        if(focusField === 'fullName'){\r\n            setFocusField(null);\r\n        }\r\n\r\n        setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n            prevDataPatientsForSearchOldDisease.fullName = value;\r\n            return {...prevDataPatientsForSearchOldDisease}\r\n        })\r\n\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);      \r\n    }\r\n\r\n    const onChangeDayOfBirth = (value) => {\r\n        if(value){            \r\n            const date = value._d;\r\n            const today = new Date();\r\n            const yearsDifference = today.getFullYear() - date.getFullYear();\r\n            const monthsDifference = today.getMonth() - date.getMonth();\r\n            const daysDifference = today.getDate() - date.getDate();\r\n            const age = today.getFullYear() - date.getFullYear();\r\n\r\n            let totalMonths = yearsDifference * 12 + monthsDifference;\r\n            let totalDays = daysDifference;\r\n\r\n            if (daysDifference < 0) {\r\n                totalMonths -= 1;\r\n                totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n            }\r\n\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n\r\n            if(today < date || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = true;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n              }\r\n              else{\r\n                const formattedDate = moment(date).format('YYYY-MM-DD');\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.dayOfBirth = formattedDate;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangePhone = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 10){\r\n                    _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'phone'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.phone = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n\r\n\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 10){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.phone = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        }\r\n    }\r\n\r\n    const handleCloseModalOldDisease = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n          else{\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            setListFoundOldDisease(null);\r\n            setSelectedRowIndex(0);\r\n            props.setOpenModalOldDisease(false);\r\n        }\r\n    }\r\n\r\n    const handleResetField = () => {\r\n        formRef.current.reset();\r\n        const inputs = formRef.current.querySelectorAll('input, textarea');\r\n        inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n        setFocusField(null);\r\n    }\r\n\r\n    const validate = () => {\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        let isValid = true;\r\n\r\n        if(dataPatientsForSearchOldDisease.patientId === '' && dataPatientsForSearchOldDisease.fullName === '' && \r\n            dataPatientsForSearchOldDisease.dayOfBirth === '' && dataPatientsForSearchOldDisease.phone === '')\r\n        {\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.fullName.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.patientId.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.focus = true;\r\n                setFocusField('patientId');\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.dayOfBirth.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                if (dateFieldRef.current) {\r\n                    dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n                }\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.phone.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.phone.focus = true;\r\n                setFocusField('phone');\r\n            }\r\n            isValid = false;\r\n        }\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        return isValid;\r\n    }\r\n\r\n    const handleFindOldDisease = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        setOpenAlertProcessing(true);\r\n        const response = await getListOldDisease(dataPatientsForSearchOldDisease.patientId, dataPatientsForSearchOldDisease.phone, dataPatientsForSearchOldDisease.fullName, dataPatientsForSearchOldDisease.dayOfBirth, '');\r\n        setOpenAlertProcessing(false);\r\n        setListFoundOldDisease(response);\r\n        setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n        setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n        handleResetField();\r\n        if(response.length > 0){\r\n            tableRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleClickFindOldDisease = () => {\r\n        if(validate()){\r\n            handleFindOldDisease()\r\n        }\r\n    }\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleClickFindOldDisease();\r\n        }\r\n    }\r\n\r\n    const handleTableKeyDown = (event) => {\r\n        if (event.key === 'ArrowDown') {\r\n            setSelectedRowIndex((prevIndex) => (Math.min(prevIndex + 1, listFoundOldDisease.length - 1)));\r\n        } else if (event.key === 'ArrowUp') {\r\n            setSelectedRowIndex((prevIndex) => (Math.max(prevIndex - 1, 0)));\r\n        } else if (event.key === 'Enter' && selectedRowIndex !== null){\r\n            handleApplyDataPatientOldDisease(listFoundOldDisease[selectedRowIndex])\r\n        }\r\n    };\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            oldDiseaseWithNullCodeWard: foundOldDiseaseItem.codeWard ? false : true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientId: foundOldDiseaseItem.patientId,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseModalOldDisease();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalOldDisease} onClose={(event, reason) => handleCloseModalOldDisease(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Tìm bệnh cũ</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalOldDisease()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{p: '10px 24px'}}>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around'}} component=\"form\" ref={formRef}>\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.patientId.title}</h6>} open={dataPatientsForSearchOldDiseaseError.patientId.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.patientId.isError === true : false}\r\n                                    label=\"Mã BN\" variant=\"outlined\" size='small'\r\n                                    autoFocus\r\n                                    inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                                    inputProps={{ maxLength: 12 }}\r\n                                    onChange={(e) => onChangePatientId(e.target.value)}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'patientId')}\r\n                                    onKeyDown={handleKeyDown} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.fullName.title}</h6>} open={dataPatientsForSearchOldDiseaseError.fullName.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.fullName.isError === true : false}\r\n                                    label=\"Họ tên\" variant=\"outlined\" size='small'\r\n                                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                                    onKeyDown={(e) => handleEnterPress(e)} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                            <ThemeProvider theme={tooltipTheme}>\r\n                                <DemoContainer components={['DatePicker']}>\r\n                                    <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.dayOfBirth.title}</h6>} open={dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip}>    \r\n                                        <Box sx={{width: 222}}>\r\n                                            <DatePicker label=\"Ngày sinh\" format='DD/MM/YYYY' \r\n                                                disableFuture={true} disableOpenPicker \r\n                                                renderInput={(params) => <TextField {...params} size='small' />}\r\n                                                slotProps={{  \r\n                                                    textField: \r\n                                                    { \r\n                                                        inputRef: dateFieldRef,\r\n                                                        error: true ? dataPatientsForSearchOldDiseaseError.dayOfBirth.isError === true : false, \r\n                                                        size: 'small', \r\n                                                        onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                                        onKeyDown: (e) => handleEnterPress(e)\r\n                                                    }, \r\n                                                }}\r\n                                                onChange={(value) => onChangeDayOfBirth(value)}\r\n                                            />\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                </DemoContainer>\r\n                            </ThemeProvider>      \r\n                        </LocalizationProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.phone.title}</h6>} open={dataPatientsForSearchOldDiseaseError.phone.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                                    inputRef={(input) => input && focusField === 'phone' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.phone.isError === true : false}\r\n                                    label=\"Điện thoại cha/mẹ\" variant=\"outlined\" size='small'\r\n                                    inputProps={{ maxLength: 10 }}\r\n                                    onChange={(e) => onChangePhone(e.target.value)}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'phone')}\r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 1.6}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleClickFindOldDisease()}>Tìm (Enter)</Button>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        {\r\n                            listFoundOldDisease ? \r\n                                listFoundOldDisease.length !== 0 ? \r\n                                <>\r\n                                    <TableContainer component={Paper} sx={{boxShadow: 4, mt: 1.4}} tabIndex={0} onKeyDown={(event) => handleTableKeyDown(event)} ref={tableRef}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listFoundOldDisease ? \r\n                                                    listFoundOldDisease.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                        <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} \r\n                                                            selected={selectedRowIndex === foundOldDiseaseIndex} \r\n                                                            onDoubleClick={() => handleApplyDataPatientOldDisease(foundOldDiseaseItem)}\r\n                                                        >\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.patientId}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                            <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'green'}}>Tìm thấy {listFoundOldDisease.length} bệnh nhân</Typography>\r\n                                </>\r\n                                : \r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'red'}}>Không tìm thấy bệnh nhân</Typography>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Box>  \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDisease","import React, { useContext, useState, useEffect, useRef } from 'react';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//ExaminingSessios modal\r\nimport ExaminingSession from '../ManageExaminingSession/ExaminingSession';\r\n//old disease modal\r\nimport OldDisease from '../ManageOldDisease/OldDisease';\r\n// import OldDiseaseForRegister from '../ManageOldDisease/OldDiseaseForRegister';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateField } from '@mui/x-date-pickers/DateField';\r\n//lodash\r\nimport _ from 'lodash';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { createMedicalBackRegister } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction BookMedical(props) {\r\n\r\n  const dataPatientsRegisterDefault = {\r\n    examinationId: '',\r\n    oldDisease: false,\r\n    height: '',\r\n    weight: '',\r\n    headCircumference: '',\r\n    reason: '',\r\n    vaccination: false,\r\n    medicalTypeId: '',\r\n    userIdDoctor: '',\r\n    patient: {\r\n      patientId: '',\r\n      identifier: '',\r\n      address: '',\r\n      fullName: '',\r\n      dayOfBirth: '',\r\n      codeWard: '',\r\n      gender: '',\r\n      fullNameMother: '',\r\n      phoneMother: '',\r\n      fullNameFather: '',\r\n      phoneFather: ''\r\n    }\r\n  }\r\n\r\n  const autocompleteValueDefault = { \r\n    dayOfBirth: null, \r\n    gender: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    province: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    district: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    ward: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    medicalType: {\r\n      value: null,\r\n      openOption: false\r\n    },\r\n    vaccination: false \r\n  }\r\n\r\n  const dataPatientsRegisterErrorDefault = { \r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    patientId: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n    medicalType: { title: '', isError: false, openTooltip: false, focus: false },\r\n    reason: { title: '', isError: false, openTooltip: false, focus: false }\r\n  }\r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const listMedicalType = [\r\n    {medicalTypeOrder: 1, medicalTypeName: 'Khám Nhi khoa phát triển', medicalTypeId: 1},\r\n    {medicalTypeOrder: 2, medicalTypeName: 'Khám trẻ nguy cơ cao', medicalTypeId: 2},\r\n  ]\r\n\r\n  const { isDialogChangePasswordOpen } = useContext(UserContext);\r\n\r\n  const [openModalExaminingSession, setOpenModalExaminingSession] = useState(false);\r\n  const [isContinueSelectedExaminingSession, setIsContinueSelectedExaminingSession] = useState(false);\r\n\r\n  const [openModalOldDisease, setOpenModalOldDisease] = useState(false);\r\n\r\n  // const [openOldDiseaseRegister, setOpenOldDiseaseRegister] = useState(false);\r\n  // const [listOldDiseaseRegister, setListOldDiseaseRegister] = useState([]);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const [dataPatientsRegister, setDataPatientsRegister] = useState(dataPatientsRegisterDefault);\r\n  const [dataPatientsRegisterError, setDataPatientsRegisterError] = useState(dataPatientsRegisterErrorDefault);\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [autocompleteValue, setAutocompleteValue] = useState(autocompleteValueDefault);\r\n\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const formRef = useRef(null);\r\n  const firstFocusRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n  const typingRef = useRef(null);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f', \r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -7],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n        event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n\r\n    // Xử lý đặc biệt cho \"d\" và \"đ\"\r\n    const replaceSpecialCharacters = str => str.replace(/đ/g, 'd');\r\n\r\n    return options.filter(option => {\r\n        const lowercasedFullName = replaceSpecialCharacters(option.fullName.toLowerCase());\r\n        const initials = replaceSpecialCharacters(option.fullName.split(' ').map(word => word[0]).join('').toLowerCase());\r\n\r\n        const normalizedInput = replaceSpecialCharacters(lowercasedInput);\r\n\r\n        return (\r\n            lowercasedFullName.includes(normalizedInput) ||\r\n            initials.includes(normalizedInput)\r\n        );\r\n    });\r\n  };\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.gender.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.province.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Ward'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'MedicalType'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.medicalType.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n      if(fieldName === 'Identifier'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n        _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.dayOfBirth.title = '';\r\n      //     _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n      //   _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PatientId'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.patientId.title = '';\r\n      //     _dataPatientsRegisterError.patientId.openTooltip = false;\r\n      //     _dataPatientsRegisterError.patientId.isError = false;\r\n      //     _dataPatientsRegisterError.patientId.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.phoneMother.title = '';\r\n      //     _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      //     _dataPatientsRegisterError.phoneMother.isError = false;\r\n      //     _dataPatientsRegisterError.phoneFather.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      if(fieldName === 'PhoneFather'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      else if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientsRegisterError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientsRegisterError.identifier.openTooltip = true;\r\n          _dataPatientsRegisterError.identifier.isError = true;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.identifier.title = '';\r\n      _dataPatientsRegisterError.identifier.openTooltip = false;\r\n      _dataPatientsRegisterError.identifier.isError = false;\r\n      _dataPatientsRegisterError.identifier.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangePatientId = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 8){\r\n          _dataPatientsRegisterError.patientId.title = 'Mã BN phải từ 8 đến 12 số';\r\n          _dataPatientsRegisterError.patientId.openTooltip = true;\r\n          _dataPatientsRegisterError.patientId.isError = true;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          if(focusField === 'patientId'){\r\n            setFocusField(null);\r\n          }\r\n          \r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.patientId = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.patientId.title = '';\r\n          _dataPatientsRegisterError.patientId.openTooltip = false;\r\n          _dataPatientsRegisterError.patientId.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    // else{\r\n    //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n    //   _dataPatientsRegisterError.patientId.title = '';\r\n    //   _dataPatientsRegisterError.patientId.openTooltip = false;\r\n    //   _dataPatientsRegisterError.patientId.isError = false;\r\n    //   _dataPatientsRegisterError.patientId.focus = false;\r\n    //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    // }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullName = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      if(dataPatientsRegisterError.fullName.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullName.title = '';\r\n        _dataPatientsRegisterError.fullName.openTooltip = false;\r\n        _dataPatientsRegisterError.fullName.isError = false;\r\n        _dataPatientsRegisterError.fullName.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n\r\n      // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n      //   handleFindOldDisease();\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n\r\n        if(today < takenValue || age > 2 || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientsRegisterError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n        }\r\n\r\n        else{\r\n          if(focusField === 'dayOfBirth'){\r\n            setFocusField(null);\r\n          }\r\n\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n          prevDataPatientsRegister.patient.dayOfBirth = formattedDate\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.dayOfBirth.title = '';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n          //   handleFindOldDisease();\r\n          // }\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.gender = value.genderValue\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.gender.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.gender.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.gender.title = '';\r\n      _dataPatientsRegisterError.gender.openTooltip = false;\r\n      _dataPatientsRegisterError.gender.isError = false;\r\n      _dataPatientsRegisterError.gender.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n    //   handleFindOldDisease();\r\n    // }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.province.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.district.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.province.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.province.title = '';\r\n      _dataPatientsRegisterError.province.openTooltip = false;\r\n      _dataPatientsRegisterError.province.isError = false;\r\n      _dataPatientsRegisterError.province.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.district.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.district.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.district.title = '';\r\n      _dataPatientsRegisterError.district.openTooltip = false;\r\n      _dataPatientsRegisterError.district.isError = false;\r\n      _dataPatientsRegisterError.district.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n    \r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.codeWard = value.code\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.ward.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.ward.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.ward.title = '';\r\n      _dataPatientsRegisterError.ward.openTooltip = false;\r\n      _dataPatientsRegisterError.ward.isError = false;\r\n      _dataPatientsRegisterError.ward.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeFolk = (value) => {\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'address'){\r\n        setFocusField(null);\r\n      }\r\n      \r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.address = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.address.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.address.title = '';\r\n        _dataPatientsRegisterError.address.openTooltip = false;\r\n        _dataPatientsRegisterError.address.isError = false;\r\n        _dataPatientsRegisterError.address.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'fullNameMother'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameMother = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        if(focusField === 'phoneMother'){\r\n          setFocusField(null);\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneMother.isError = true;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneMother = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneMother.title = '';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneMother.isError = false;\r\n      _dataPatientsRegisterError.phoneMother.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    if(focusField === 'fullNameFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameFather = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (e, value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneFather.isError = true;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneFather = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'phoneFather'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneFather.title = '';\r\n      _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneFather.isError = false;\r\n      _dataPatientsRegisterError.phoneFather.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'height'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.height = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.height.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.height.title = '';\r\n        _dataPatientsRegisterError.height.openTooltip = false;\r\n        _dataPatientsRegisterError.height.isError = false;\r\n        _dataPatientsRegisterError.height.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'weight'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.weight = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.weight.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.weight.title = '';\r\n        _dataPatientsRegisterError.weight.openTooltip = false;\r\n        _dataPatientsRegisterError.weight.isError = false;\r\n        _dataPatientsRegisterError.weight.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'headCircumference'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.headCircumference = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.headCircumference.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.headCircumference.title = '';\r\n        _dataPatientsRegisterError.headCircumference.openTooltip = false;\r\n        _dataPatientsRegisterError.headCircumference.isError = false;\r\n        _dataPatientsRegisterError.headCircumference.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onSelectMedicalType = (e, value) => {\r\n    if(focusField === 'medicalType'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.medicalTypeId = value.medicalTypeId\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.medicalType.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.medicalType.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.medicalType.title = '';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = false;\r\n      _dataPatientsRegisterError.medicalType.isError = false;\r\n      _dataPatientsRegisterError.medicalType.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeReason = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.reason = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      // if(dataPatientsRegisterError.reason.isError){\r\n      //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      //   _dataPatientsRegisterError.reason.isError = false;\r\n      //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.vaccination = bool\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.vaccination = bool\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkValidate = () => {\r\n    let isValid = true;\r\n    const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n\r\n    if(dataPatientsRegisterError.identifier.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.identifier.focus = true;\r\n        setFocusField('identifier');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.patientId === ''){\r\n      _dataPatientsRegisterError.patientId.title = 'Bạn chưa nhập mã bệnh nhân';\r\n      _dataPatientsRegisterError.patientId.openTooltip = true;\r\n      _dataPatientsRegisterError.patientId.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.patientId.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullName === ''){\r\n      _dataPatientsRegisterError.fullName.title = 'Bạn chưa nhập họ tên';\r\n      _dataPatientsRegisterError.fullName.openTooltip = true;\r\n      _dataPatientsRegisterError.fullName.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullName.focus = true;\r\n        setFocusField('fullName');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.dayOfBirth === ''){\r\n      _dataPatientsRegisterError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n      _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n      _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.dayOfBirth.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.gender === ''){\r\n      _dataPatientsRegisterError.gender.title = 'Bạn chưa chọn giới tính';\r\n      _dataPatientsRegisterError.gender.openTooltip = true;\r\n      _dataPatientsRegisterError.gender.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.gender.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n      setFocusField('gender');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.province.value === null){\r\n      _dataPatientsRegisterError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n      _dataPatientsRegisterError.province.openTooltip = true;\r\n      _dataPatientsRegisterError.province.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.province.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('province');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.district.value === null){\r\n      _dataPatientsRegisterError.district.title = 'Bạn chưa chọn quận huyện';\r\n      _dataPatientsRegisterError.district.openTooltip = true;\r\n      _dataPatientsRegisterError.district.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.district.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('district');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.ward.value === null){\r\n      _dataPatientsRegisterError.ward.title = 'Bạn chưa chọn phường xã';\r\n      _dataPatientsRegisterError.ward.openTooltip = true;\r\n      _dataPatientsRegisterError.ward.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.ward.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('ward');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.address === ''){\r\n      _dataPatientsRegisterError.address.title = 'Bạn chưa nhập địa chỉ';\r\n      _dataPatientsRegisterError.address.openTooltip = true;\r\n      _dataPatientsRegisterError.address.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.address.focus = true;\r\n        setFocusField('address');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullNameMother === '' && dataPatientsRegister.patient.fullNameFather === ''){\r\n      _dataPatientsRegisterError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n      _dataPatientsRegisterError.fullNameMother.openTooltip = true;\r\n      _dataPatientsRegisterError.fullNameMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullNameMother.focus = true;\r\n        setFocusField('fullNameMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.phoneMother === '' && dataPatientsRegister.patient.phoneFather === ''){\r\n      _dataPatientsRegisterError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n      _dataPatientsRegisterError.phoneMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneMother.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneFather.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneFather.focus = true;\r\n        setFocusField('phoneFather');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.weight === ''){\r\n      _dataPatientsRegisterError.weight.title = 'Bạn chưa nhập cân nặng';\r\n      _dataPatientsRegisterError.weight.openTooltip = true;\r\n      _dataPatientsRegisterError.weight.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.weight.focus = true;\r\n        setFocusField('weight');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.height === ''){\r\n      _dataPatientsRegisterError.height.title = 'Bạn chưa nhập chiều cao';\r\n      _dataPatientsRegisterError.height.openTooltip = true;\r\n      _dataPatientsRegisterError.height.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.height.focus = true;\r\n        setFocusField('height');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.headCircumference === ''){\r\n      _dataPatientsRegisterError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n      _dataPatientsRegisterError.headCircumference.openTooltip = true;\r\n      _dataPatientsRegisterError.headCircumference.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.headCircumference.focus = true;\r\n        setFocusField('headCircumference');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.medicalTypeId === ''){\r\n      _dataPatientsRegisterError.medicalType.title = 'Bạn chưa chọn loại hình khám';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = true;\r\n      _dataPatientsRegisterError.medicalType.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.medicalType.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('medicalType');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    // if(dataPatientsRegister.reason === ''){\r\n    //   _dataPatientsRegisterError.reason.isError = true;\r\n    //   isValid = false;\r\n    // }\r\n\r\n    setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    return isValid;\r\n  }\r\n\r\n  const handleMedicalRegister = () => {\r\n    setTimeout(() => {\r\n      if(checkValidate()){\r\n        firstFocusRef.current.focus();\r\n        if(props.dataPantientAppointmentsToday){\r\n          handleMedicalBackRegister();\r\n        }\r\n        else{\r\n          setOpenModalExaminingSession(true);\r\n        }\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const handleMedicalBackRegister = async () => {\r\n    setOpenAlertProcessing(true);\r\n    const responseCreateMedicalBackRegister = await createMedicalBackRegister(dataPatientsRegister);\r\n    if(responseCreateMedicalBackRegister.status === 200){\r\n      toast.success(responseCreateMedicalBackRegister.data, {toastId: 'success5'})\r\n      props.setCompleteMedicalRegister(true);\r\n      handleResetField();\r\n    }\r\n    else{\r\n      toast.error(responseCreateMedicalBackRegister.data, {toastId: 'error5'})\r\n    }\r\n    setOpenAlertProcessing(false);\r\n  }\r\n\r\n  const handleApplyPantientOldDiseaseData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = dataPatientsRegister.patient.identifier;\r\n    document.getElementById('patientId').value = dataPatientsRegister.patient.patientId;\r\n    document.getElementById('patientFullName').value = dataPatientsRegister.patient.fullName;\r\n\r\n    let _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(dataPatientsRegister.patient.dayOfBirth);\r\n\r\n    if(dataPatientsRegister.patient.codeWard){\r\n      const response = await getFullAddressByIdWard(dataPatientsRegister.patient.codeWard);\r\n      const responseListDistrict = await getListDistrict(response.provinceCode);\r\n      const responseListWard = await getListWard(response.districtCode);\r\n  \r\n      const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n      const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n      const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n      \r\n      _autocompleteValue.province.value = listProvince[indexListProvince];\r\n      _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n      _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n      _autocompleteValue.vaccination = dataPatientsRegister.vaccination;\r\n    }\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === dataPatientsRegister.patient.gender);\r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === dataPatientsRegister.medicalTypeId);\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n\r\n    setAutocompleteValue(_autocompleteValue);\r\n    \r\n    document.getElementById('patientAddress').value = dataPatientsRegister.patient.address;\r\n    document.getElementById('patientFullNameMother').value = dataPatientsRegister.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = dataPatientsRegister.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = dataPatientsRegister.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = dataPatientsRegister.patient.phoneFather;\r\n\r\n    if(dataPatientsRegister.oldDiseaseWithNullCodeWard){\r\n      setTimeout(() => {\r\n        setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n        setOpenAlertProcessing(false);\r\n\r\n        setFocusField('province');\r\n      }, 300)\r\n    }\r\n    else{\r\n      setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n      setOpenAlertProcessing(false);\r\n      \r\n      setFocusField('weight');\r\n    }\r\n  }\r\n\r\n  const handleApplyPantientAppointmentsTodayData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = props.dataPantientAppointmentsToday.patient.identifier;\r\n    document.getElementById('patientId').value = props.dataPantientAppointmentsToday.patient.patientId;\r\n    document.getElementById('patientFullName').value = props.dataPantientAppointmentsToday.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(props.dataPantientAppointmentsToday.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(props.dataPantientAppointmentsToday.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === props.dataPantientAppointmentsToday.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === props.dataPantientAppointmentsToday.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = props.dataPantientAppointmentsToday.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = props.dataPantientAppointmentsToday.patient.address;\r\n    document.getElementById('patientFullNameMother').value = props.dataPantientAppointmentsToday.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = props.dataPantientAppointmentsToday.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = props.dataPantientAppointmentsToday.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = props.dataPantientAppointmentsToday.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('height');\r\n  }\r\n\r\n  const handleResetField = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n\r\n    const oldDisease = dataPatientsRegister.oldDisease ? true : false\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n\r\n    if(oldDisease){\r\n      setTimeout(() => {\r\n        firstFocusRef.current.focus();\r\n      }, 100)\r\n    }\r\n    else{\r\n      firstFocusRef.current.focus();\r\n    }\r\n  }\r\n\r\n  const handleOpenModalOldDisease = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n    firstFocusRef.current.focus();\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const response = await getListProvince();\r\n    if(response !== 400){\r\n      setListProvince(response);\r\n    }\r\n  }\r\n\r\n  // const handleFindOldDisease = async () => {\r\n  //   const response = await getListOldDisease('', '', dataPatientsRegister.patient.fullName, dataPatientsRegister.patient.dayOfBirth, dataPatientsRegister.patient.gender);\r\n  //   if(response.length !== 0){\r\n  //     setListOldDiseaseRegister(response);\r\n  //     setOpenOldDiseaseRegister(true);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleGetListProvince();\r\n    firstFocusRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(dataPatientsRegister.oldDisease === true){\r\n      handleApplyPantientOldDiseaseData();\r\n    }\r\n  }, [dataPatientsRegister.oldDisease])\r\n\r\n  useEffect(() => {\r\n    if(props.dataPantientAppointmentsToday){\r\n      setDataPatientsRegister(props.dataPantientAppointmentsToday);\r\n      handleApplyPantientAppointmentsTodayData();\r\n    }\r\n  }, [props.dataPantientAppointmentsToday]) \r\n\r\n  useEffect(() => {\r\n    if(isDialogChangePasswordOpen === false){\r\n      if(props.onF2Press){\r\n        if(openModalExaminingSession === true && openModalOldDisease === false){\r\n          setIsContinueSelectedExaminingSession(true);\r\n          props.setOnF2Press(false);\r\n        }\r\n        else{\r\n          handleMedicalRegister();\r\n          props.setOnF2Press(false);\r\n        }\r\n      }\r\n      \r\n      if(props.onF4Press){\r\n        if(openModalExaminingSession === true || openModalOldDisease === true){\r\n          props.setOnF4Press(false);\r\n        }\r\n        else{\r\n          handleResetField();\r\n          props.setOnF4Press(false);\r\n        }\r\n      }\r\n\r\n      if(props.onF8Press){\r\n        if(openModalExaminingSession === true || openModalOldDisease === true){\r\n          props.setOnF8Press(false);\r\n        }\r\n        else{\r\n          handleOpenModalOldDisease();\r\n          props.setOnF8Press(false);\r\n        }\r\n      }\r\n    }\r\n  }, [props.onF2Press, props.onF4Press, props.onF8Press, isDialogChangePasswordOpen])\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{'&.MuiContainer-maxWidthLg': {pr: 0}, height: '100%',}}>\r\n        <Box sx={{ minHeight: '36.8rem', borderRadius: '20px', boxShadow: 5, pt: 1.2, pb: 1.2, pl: 2.4, pr: 2.4, }}>\r\n          <Typography variant='h6' sx={{textAlign: 'center', fontWeight: 'bolder', color: 'blue'}}>Thông tin đăng ký khám</Typography> \r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}} component=\"form\" ref={formRef}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.identifier.title}</h6>} open={dataPatientsRegisterError.identifier.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.identifier.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã định danh\" variant=\"outlined\" id='patientIdentifier' autoComplete='off'\r\n                  inputRef={focusField === 'identifier' ? (input) => input && focusField === 'identifier' && input.focus() : firstFocusRef}\r\n                  onChange={(e) => onChangeIdentifier(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Identifier')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.patientId.title}</h6>} open={dataPatientsRegisterError.patientId.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.patientId.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã BN\" variant=\"outlined\" id='patientId' autoComplete='off'\r\n                  inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                  onChange={(e) => onChangePatientId(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'PatientId')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullName.title}</h6>} open={dataPatientsRegisterError.fullName.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }} \r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [37, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              > \r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullName.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên\" variant=\"outlined\" id=\"patientFullName\" autoComplete='off'                \r\n                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  /> \r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n      \r\n            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n              <ThemeProvider theme={tooltipTheme}>\r\n                <DemoContainer components={['DatePicker']} >\r\n                  <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.dayOfBirth.title}</h6>} open={dataPatientsRegisterError.dayOfBirth.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>    \r\n                    <Box sx={{width: 142, mt: '12px !important'}}>\r\n                      <div style={{width: '100%', }}>\r\n                        <DateField label=\"Ngày sinh\" \r\n                          format='DD/MM/YYYY' value={autocompleteValue.dayOfBirth}\r\n                          disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                          slotProps={{ \r\n                            textField: \r\n                              { \r\n                                inputRef: dateFieldRef,\r\n                                error: true ? dataPatientsRegisterError.dayOfBirth.isError === true : false,\r\n                                onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                sx: {'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } },\r\n                              }\r\n                          }}\r\n                          onChange={(value) => onChangeDOB(value)}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  </Tooltip>\r\n                </DemoContainer>\r\n              </ThemeProvider>      \r\n            </LocalizationProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.gender.title}</h6>} open={dataPatientsRegisterError.gender.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '12%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientGender' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.gender.value}\r\n                    options={listGender} \r\n                    getOptionLabel={(option) => option.genderName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.genderName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectGender(e, value)}\r\n                    open={autocompleteValue.gender.openOption}\r\n                    onFocus={() => handleFocus('Gender')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Giới tính\" \r\n                        inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.gender.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n             \r\n            {/* <TextField label=\"Dân tộc\" variant=\"outlined\" sx={{width: '12%', '&.MuiTextField-root' : {marginTop: '15px'}}}/> */}\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.province.title}</h6>} open={dataPatientsRegisterError.province.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '19.2%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                    value={autocompleteValue.province.value}\r\n                    options={listProvince} \r\n                    noOptionsText={'Đang tải...'}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectProvine(e, value)}\r\n                    open={autocompleteValue.province.openOption}\r\n                    onFocus={() => handleFocus('Province')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Thành phố\" \r\n                        inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.province.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.district.title}</h6>} open={dataPatientsRegisterError.district.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '24%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                    value={autocompleteValue.district.value}\r\n                    options={listDistrict.list} \r\n                    noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                    open={autocompleteValue.district.openOption}\r\n                    onFocus={() => handleFocus('District')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.fullName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectDistrict(e, value)}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Quận/Huyện\" \r\n                        inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.district.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <>\r\n                              {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <>\r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.ward.title}</h6>} open={dataPatientsRegisterError.ward.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                  <div style={{width: '23.5%', marginTop: '20px'}}>\r\n                    <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                      value={autocompleteValue.ward.value}\r\n                      options={listWard.list} \r\n                      noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                      filterOptions={filterOptions}\r\n                      getOptionLabel={(option) => option.name}\r\n                      autoComplete={false}\r\n                      renderOption={(props, option) => (\r\n                        <li {...props}>\r\n                          {option.fullName}\r\n                        </li>\r\n                      )}\r\n                      onChange={(e, value) => onSelectWard(e, value)}\r\n                      open={autocompleteValue.ward.openOption}\r\n                      onFocus={() => handleFocus('Ward')}\r\n                      onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} \r\n                          label=\"Phường/Xã\" \r\n                          inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                          error={true ? dataPatientsRegisterError.ward.isError === true : false} \r\n                          sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                              <>\r\n                                {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                              </>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      disableClearable // Bỏ icon xóa\r\n                      popupIcon={null} // Bỏ icon dropdown\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.address.title}</h6>} open={dataPatientsRegisterError.address.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.address.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Địa chỉ\" variant=\"outlined\" id='patientAddress' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                    onChange={(e) => onChangeAddress(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullNameMother.title}</h6>} open={dataPatientsRegisterError.fullNameMother.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullNameMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên mẹ\" variant=\"outlined\" id='patientFullNameMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                    autoFocus={dataPatientsRegisterError.fullNameMother.focus}\r\n                    onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneMother.title}</h6>} open={dataPatientsRegisterError.phoneMother.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.phoneMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Điện thoại\" variant=\"outlined\" id='patientPhoneMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                    onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n\r\n            <TextField label=\"Họ tên cha\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n              variant=\"outlined\" id='patientFullNameFather' autoComplete='off'\r\n              sx={{width: '30.4%', '&.MuiTextField-root' : {marginTop: '20px'}}} \r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n              inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n              InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n            />\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneFather.title}</h6>} open={dataPatientsRegisterError.phoneFather.openTooltip}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField label=\"Điện thoại\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                    variant=\"outlined\" id='patientPhoneFather' autoComplete='off'\r\n                    onChange={(e) => onChangePhoneFather(e, e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneFather')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.weight.title}</h6>} open={dataPatientsRegisterError.weight.openTooltip} PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Cân nặng bé\" variant=\"outlined\" id='patientWeight' autoComplete='off' error={true ? dataPatientsRegisterError.weight.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(kg)</InputAdornment>}}\r\n                    onChange={(e) => onChangeWeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.height.title}</h6>} open={dataPatientsRegisterError.height.openTooltip} placement='left' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Chiều cao bé\" variant=\"outlined\" id='patientHeight' autoComplete='off' error={true ? dataPatientsRegisterError.height.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.headCircumference.title}</h6>} open={dataPatientsRegisterError.headCircumference.openTooltip} placement='top-start' PopperProps={{sx: { zIndex: 2 } }}\r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [70, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              >\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Vòng đầu bé\" variant=\"outlined\" id='patientHeadCircumference' autoComplete='off' error={true ? dataPatientsRegisterError.headCircumference.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.medicalType.title}</h6>} open={dataPatientsRegisterError.medicalType.openTooltip} placement='bottom' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30.5%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientMedicalType' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.medicalType.value}\r\n                    options={listMedicalType} \r\n                    getOptionLabel={(option) => option.medicalTypeName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.medicalTypeName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectMedicalType(e, value)}\r\n                    open={autocompleteValue.medicalType.openOption}\r\n                    onFocus={() => handleFocus('MedicalType')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'MedicalType')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Loại hình khám\" \r\n                        inputRef={(input) => input && focusField === 'medicalType' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.medicalType.isError === true : false} \r\n                        sx={{\r\n                          '& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } ,\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.Mui-disabled.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'},\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'}\r\n                        }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.reason.title}</h6>} open={dataPatientsRegisterError.reason.openTooltip} >\r\n                <div style={{width: '100%' }}>\r\n                  <TextField fullWidth label=\"Lý do khám\" multiline rows={3} variant=\"outlined\" id='patientReason' autoComplete='off' error={true ? dataPatientsRegisterError.reason.isError === true : false}\r\n                    sx={{'&.MuiTextField-root' : {marginTop: '20px'}}} \r\n                    onChange={(e) => onChangeReason(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <FormControlLabel control={<Checkbox checked={autocompleteValue.vaccination}/>} sx={{width: '100%'}}\r\n              label=\"Bệnh nhân có tham gia tiêm ngừa\" onChange={(e) => onChangeVaccination(e.target.checked)}/>  \r\n\r\n            <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n              <Button variant=\"contained\" color=\"primary\" sx={{mr: 1}} onClick={() => handleMedicalRegister()}>Đăng ký (f2)</Button>\r\n              <Button variant=\"contained\" color=\"warning\" onClick={() => handleResetField()}>Làm mới (f4)</Button>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => handleOpenModalOldDisease()}>Bệnh cũ (f8)</Button>\r\n            </Box>\r\n          </Box>         \r\n        </Box>\r\n      </Container>\r\n\r\n      <ExaminingSession \r\n        openModalExaminingSession={openModalExaminingSession} setOpenModalExaminingSession={setOpenModalExaminingSession} \r\n        handleResetField={handleResetField} setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        isContinueSelectedExaminingSession={isContinueSelectedExaminingSession} setIsContinueSelectedExaminingSession={setIsContinueSelectedExaminingSession}\r\n        dataPatientsRegister={dataPatientsRegister} \r\n      />\r\n\r\n      <OldDisease \r\n        openModalOldDisease={openModalOldDisease} setOpenModalOldDisease={setOpenModalOldDisease}\r\n        dataPatientsRegister={dataPatientsRegister} setDataPatientsRegister={setDataPatientsRegister}\r\n      />\r\n\r\n      {/* <OldDiseaseForRegister\r\n        openOldDiseaseRegister={openOldDiseaseRegister} setOpenOldDiseaseRegister={setOpenOldDiseaseRegister}\r\n        setDataPatientsRegister={setDataPatientsRegister}\r\n        listOldDiseaseRegister={listOldDiseaseRegister} setListOldDiseaseRegister={setListOldDiseaseRegister}\r\n      /> */}\r\n\r\n      <AlertProcessing\r\n        openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookMedical","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//modal\r\nimport SelectedDoctorExamining from '../ManageSelectedDoctorExamining/SelectedDoctorExamining';\r\n//components\r\nimport ListPatientsRegister from './ListPatientsRegister';\r\nimport BookMedical from './BookMedical';\r\n//api\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nfunction MainMedicalRegister() {\r\n\r\n  const { user, loading } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [component1Loading, setComponent1Loading] = useState(true);\r\n\r\n  const [completeMedicalRegister, setCompleteMedicalRegister] = useState(false);\r\n  const [dataPantientAppointmentsToday, setDataPantientAppointmentsToday] = useState();\r\n\r\n  const [handleResetField, setHandleResetField] = useState(false); //F2\r\n  const [handleOpenModalExaminingSession, setHandleOpenModalExaminingSession] = useState(false); //F4\r\n  const [handleOpenModalOldDisease, setHandleOpenModalOldDisease] = useState(false); //F8\r\n\r\n  const handleF2Press = () => {\r\n    setHandleOpenModalExaminingSession(true);\r\n  }\r\n\r\n  const handleF4Press = () => {\r\n    setHandleResetField(true);\r\n  }\r\n\r\n  const handleF8Press = () => {\r\n    setHandleOpenModalOldDisease(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(loading === false && user.isLogin){\r\n      if(user.positionName !== 'Nursing'){\r\n        history.push('/404');\r\n      }\r\n    }\r\n  }, [loading, user])\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if(event.keyCode === 113){\r\n        event.preventDefault()\r\n        //nhấn F2 để đăng ký khám\r\n        handleF2Press();\r\n      }\r\n      else if(event.keyCode === 115){\r\n        event.preventDefault()\r\n        //nhấn F4 để reset các input field \r\n        handleF4Press();\r\n      }\r\n      else if(event.keyCode === 119){\r\n        event.preventDefault()\r\n        //nhấn F8 để tìm bệnh cũ\r\n        handleF8Press();\r\n      }\r\n      else{\r\n\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n              <Grid container spacing={0} sx={{marginLeft: 0}}>\r\n                <Grid item xs={5}>  \r\n                  <ListPatientsRegister \r\n                    completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                    component1Loading={component1Loading} setComponent1Loading={setComponent1Loading}\r\n                    dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                  />\r\n                </Grid>\r\n            \r\n                <Grid item xs={7} >\r\n                  {component1Loading ?\r\n                    <div style={{marginLeft: '18px'}}>\r\n                      <Skeleton variant='rectangular' width=\"100%\" height={590} />\r\n                    </div>\r\n                  :\r\n                    <BookMedical \r\n                      onF2Press={handleOpenModalExaminingSession} setOnF2Press={setHandleOpenModalExaminingSession}\r\n                      onF4Press={handleResetField} setOnF4Press={setHandleResetField}\r\n                      onF8Press={handleOpenModalOldDisease} setOnF8Press={setHandleOpenModalOldDisease}\r\n                      completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                      dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                    />\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n         {/* <SelectedDoctorExamining \r\n          openSelectedDoctorExaminingModal={openSelectedDoctorExaminingModal} setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n          currentDoctorExamining={currentDoctorExamining} setCurrentDoctorExamining={setCurrentDoctorExamining}\r\n         /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainMedicalRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getAppointmentsNextWeek, updateStateAppointment } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainAppointmentExamining() {\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chưa nhắc hẹn khám'});\r\n    const [listPantientAppointmentChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [listAppointment, setListAppointment] = useState();\r\n    \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n    const [listDataPatientsAppointmentPaginate, setListDataPatientsAppointmentPaginate] = useState([]);\r\n    const [listDataPatientsAppointmentState, setListDataPatientsAppointmentState] = useState();\r\n    const [listDataPatientsAppointmentSort, setListDataPatientsAppointmentSort] = useState([]);\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [pageCount, setPageCount] = useState();\r\n\r\n    const [dataAppointment, setDataAppointment] = useState();\r\n\r\n    const handlePaginate = (data) => {\r\n        const itemsPerPage = 5;\r\n        if(data){\r\n            const calculatedPageCount = Math.ceil(data.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = data.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n        else{\r\n            const calculatedPageCount = Math.ceil(listDataPatientsAppointmentPaginate.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = listDataPatientsAppointmentPaginate.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    }\r\n\r\n    const handleGetAppointmentsNextWeek = async () => {\r\n        setLoading(true);\r\n        const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n        setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n        const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n        const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n        const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n        const updateListPantientAppointmentChipState = [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n        ]\r\n\r\n        setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n        if(activeChip.chipOrder === 0){\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind)\r\n        }\r\n\r\n        else if(activeChip.chipOrder === 1){\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n            handlePaginate(_listAppointmentAcceptReExamining)\r\n        }\r\n\r\n        else{\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n            handlePaginate(_listAppointmentRejectReExamining)\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n            const _listAppointmentNotRemind = listAppointment.filter(item => item.stateAppointment === 0);\r\n\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const _listAppointmentAcceptReExamining = listAppointment.filter(item => item.stateAppointment === 1);\r\n\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining);\r\n            handlePaginate(_listAppointmentAcceptReExamining);\r\n        }\r\n        else{\r\n            const _listAppointmentRejectReExamining = listAppointment.filter(item => item.stateAppointment === 2);\r\n\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining);\r\n            handlePaginate(_listAppointmentRejectReExamining);\r\n        }\r\n    }\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsAppointmentSort(listDataPatientsAppointmentState);\r\n        }else{\r\n          setListDataPatientsAppointmentSort(searchPatients(listDataPatientsAppointmentState, takenValue));\r\n        }\r\n    }\r\n\r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, patientFullName, phoneMother, phoneFather } = patientObj;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || patientFullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const onChangeAppointmentDate = (medicalBookId, appointmentDate) => {\r\n        if(appointmentDate){\r\n            const takenValue = appointmentDate._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const today = new Date();\r\n                const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n                const convertAppointmentDateFindDataAppointment = new Date(findDataAppointment.appointmentDate)\r\n\r\n                if(today <= takenValue || takenValue >= convertAppointmentDateFindDataAppointment){\r\n                    findDataAppointment.appointmentDate = moment(takenValue).format('YYYY-MM-DD');\r\n                }\r\n            }, 100) \r\n        }\r\n        \r\n    }\r\n\r\n    const handleAcceptReExamining = async (medicalBookId) => {\r\n        setLoading(true);\r\n\r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 1);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            \r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleRejectReExamining = async (medicalBookId) => {\r\n        setLoading(true);\r\n        \r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 2);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetAppointmentsNextWeek();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handlePaginate();\r\n    }, [page]);\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1, p: 0 }}>\r\n            <TableContainer component={Paper} sx={{height: loading ? '40rem' : 'auto', position: 'relative'}}>\r\n                {loading ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>        \r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Box>\r\n                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                {listPantientAppointmentChipState.map((pantientAppointmentChipStateItem, pantientAppointmentChipStateIndex) => (\r\n                                    <Badge badgeContent={pantientAppointmentChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientAppointmentChipStateIndex}`}> \r\n                                        <Chip label={pantientAppointmentChipStateItem.chipLabel} color={pantientAppointmentChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                            onClick={() => handleSelectedChip(pantientAppointmentChipStateIndex, pantientAppointmentChipStateItem.chipLabel)} />  \r\n                                    </Badge>\r\n                                ))}\r\n                            </Stack>\r\n\r\n                            <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.15rem', fontWeight: 'bolder'}}>Danh sách {activeChip.chipLabel} trong 6 ngày tới</Typography>\r\n\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', mb: 1}}>\r\n                                <TextField sx={{width: 500, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc Số điện thoại' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                        startAdornment: (\r\n                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                        ),\r\n                                        endAdornment: (\r\n                                            <InputAdornment position='end'>\r\n                                                {searchPatientsQuery !== '' ? \r\n                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsAppointmentSort(listDataPatientsAppointmentState)]}\r\n                                                    /> \r\n                                                : \r\n                                                    null\r\n                                                }\r\n                                            </InputAdornment>  \r\n                                        )\r\n                                    }}>\r\n                                </TextField>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Table stickyHeader >\r\n                            <TableHead>\r\n                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                    <TableCell align='left' >Mã bệnh nhân</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày sinh</TableCell>\r\n                                    {/* <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Giới tính</TableCell> */}\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Địa chỉ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên Cha/Mẹ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Số điện thoại</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám cũ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám tiếp theo</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày hẹn khám</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Nhấn</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {listDataPatientsAppointmentSort.map((dataPantientAppointmentItem, dataPantientAppointmentIndex) => (\r\n                                    <TableRow hover role=\"checkbox\" key={dataPantientAppointmentIndex} sx={{':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1) !important'}}}>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientId}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientFullName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{moment(dataPantientAppointmentItem.dateOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                        {/* <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.gender === true ? 'Nam' : 'Nữ'}</TableCell> */}\r\n                                        <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 240, fontSize: '0.9rem'}}>\r\n                                            <Tooltip title={<Typography variant='subtitle2'>{dataPantientAppointmentItem.fullAddress}</Typography>} >\r\n                                                <span>{dataPantientAppointmentItem.fullAddress}</span>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.fullNameFather !== '' ? dataPantientAppointmentItem.fullNameFather : dataPantientAppointmentItem.fullNameMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.phoneFather !== '' ? dataPantientAppointmentItem.phoneFather : dataPantientAppointmentItem.phoneMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.examNameOld}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.nextExamName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto'}}>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                                <DemoContainer components={['DatePicker']}> \r\n                                                    <Box sx={{width: 145}}>\r\n                                                        <div style={{width: '100%'}}>\r\n                                                            <DatePicker label=\"Ngày khám dự kiến\" disablePast minDate={moment()}\r\n                                                                format='DD/MM/YYYY' value={moment(dataPantientAppointmentItem.appointmentDate)}\r\n                                                                onChange={(value) => onChangeAppointmentDate(dataPantientAppointmentItem.medicalBookId, value)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Box> \r\n                                                </DemoContainer>\r\n                                            </LocalizationProvider>\r\n                                        </TableCell>                                                                                                \r\n                                        <TableCell align={dataPantientAppointmentItem.stateAppointment === 0 ? 'left' : 'center'} sx={{width: 'auto', fontSize: '0.9rem'}}>\r\n                                            {dataPantientAppointmentItem.stateAppointment === 0 ?\r\n                                                <>   \r\n                                                    <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {dataPantientAppointmentItem.stateAppointment === 1 ?\r\n                                                        <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    :\r\n                                                        <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </>\r\n                }\r\n            </TableContainer>\r\n\r\n            {listDataPatientsAppointmentSort.length !== 0 && loading === false ?\r\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n                    <Pagination count={pageCount} page={page} onChange={handlePageChange} color=\"secondary\" />\r\n                </Box>\r\n            :\r\n                null\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainAppointmentExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport _ from 'lodash'\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DialogActions } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//other\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n//css\r\nimport './SCSS/CompleteExamining.scss';\r\n//api\r\nimport { createAddPredecessor, createAddMedicalBook, getAppointmentDate } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CompleteExamining(props) {\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState();\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n\r\n    const typingRef = useRef(null);\r\n    const textareaRef = useRef(null);\r\n    const dateFieldRef = useRef(null);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleCloseModalCompleteExamining = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n          return;\r\n        }\r\n        else{\r\n            setMainDataExaminingForConclusion();\r\n            props.setOpenModalCompleteExamining(false);\r\n        }\r\n      }\r\n\r\n    const onChangeExaminingConclusion = (value) => {\r\n        typingRef.current = setTimeout(() => {\r\n            setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                prevMainDataExaminingForConclusion.conclusion = value;\r\n                return {...prevMainDataExaminingForConclusion}\r\n            })\r\n        }, 300)\r\n    }\r\n\r\n    const onChangeAppointmentDate = (value) => {\r\n        if(value){\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n            typingRef.current = setTimeout(() => {\r\n                const takenValue = value._d;\r\n                const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n                if(formattedDate !== 'Invalid date'){\r\n                    setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                        prevMainDataExaminingForConclusion.appointmentDate = formattedDate;\r\n                        return {...prevMainDataExaminingForConclusion}\r\n                    })\r\n                }\r\n            }, 200)   \r\n        }\r\n    }\r\n\r\n    const handleSetDataCompleteExamining = async () => {\r\n        setOpenAlertProcessing(true);\r\n\r\n        const editDataExaminingForConclusion = _.clone(props.dataExaminingForConclusion);\r\n        editDataExaminingForConclusion.categories = editDataExaminingForConclusion.categories.map(categoriesItem => ({\r\n            ...categoriesItem,\r\n            // Lọc các categoryContents để giữ lại những phần tử có categoryContentQuestions không rỗng\r\n            categoryContents: categoriesItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length > 0)\r\n\r\n            // Loại bỏ các categories nếu tất cả categoryContents của nó đều bị loại bỏ\r\n        })).filter(categoriesItem => categoriesItem.categoryContents.length > 0);\r\n\r\n        const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        if(responseAppointmentDate.status === 200){\r\n            editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n            editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n            editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n            if(editDataExaminingForConclusion.isVaccination){\r\n                editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n                editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n                editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n            }\r\n\r\n        }else{\r\n            toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        }\r\n \r\n        setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        setOpenAlertProcessing(false);\r\n        if(props.dataExaminingForConclusion.conclusion !== ''){\r\n            const length = textareaRef.current.value.length;\r\n            textareaRef.current.setSelectionRange(length, length);\r\n            textareaRef.current.focus();\r\n        }\r\n        else{\r\n            textareaRef.current.focus();\r\n        }\r\n\r\n        // if(editDataExaminingForConclusion.categories.length !== 0){\r\n            \r\n        //     const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        //     if(responseAppointmentDate.status === 200){\r\n        //         editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n        //         editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n        //         editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n        //         if(editDataExaminingForConclusion.isVaccination){\r\n        //             editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n        //             editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n        //             editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n        //         }\r\n\r\n        //     }else{\r\n        //         toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        //     }\r\n \r\n        //     setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        //     setOpenAlertProcessing(false);\r\n        //     if(props.dataExaminingForConclusion.conclusion !== ''){\r\n        //         const length = textareaRef.current.value.length;\r\n        //         textareaRef.current.setSelectionRange(length, length);\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        //     else{\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    const handleAddMedicalBook = async () => {\r\n        if(checkValidate()){\r\n            setOpenAlertProcessing(true);\r\n    \r\n                if(mainDataExaminingForConclusion.categories.some(categoriesItem => categoriesItem.isPredecessor === true)){\r\n                    const categoryPres = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isPredecessor === true)\r\n                    const dataPredecessor = { patientId: mainDataExaminingForConclusion.patientId, categoryPres: categoryPres }\r\n                    await createAddPredecessor(dataPredecessor);\r\n                }\r\n\r\n                const categoriesHealthRecordExamining = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isHealthRecord === true)\r\n                mainDataExaminingForConclusion.categories = categoriesHealthRecordExamining\r\n                const responseAddMedicalBook = await createAddMedicalBook(mainDataExaminingForConclusion);\r\n                if(responseAddMedicalBook.status === 200){\r\n                    toast.success(responseAddMedicalBook.data, {toastId: 'success3'});\r\n                    props.handleCompleteExaminingForPantient();\r\n                    setMainDataExaminingForConclusion();\r\n                    props.setOpenModalCompleteExamining(false);\r\n                }\r\n                else{\r\n                    toast.error(responseAddMedicalBook.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            setOpenAlertProcessing(false);\r\n    }\r\n\r\n    const checkValidate = () => {\r\n        let isValid = true;\r\n        if(mainDataExaminingForConclusion.conclusion === null){\r\n            textareaRef.current.focus();\r\n            toast.error('Bạn chưa nhập kết luận khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === 'Invalid date'){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Ngày tái khám không hợp lệ', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === ''){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Bạn chưa chọn ngày tái khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalCompleteExamining){\r\n            handleSetDataCompleteExamining();\r\n        }\r\n    }, [props.openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalCompleteExamining} onClose={(event, reason) => handleCloseModalCompleteExamining(event, reason)} disableEscapeKeyDown={true}>\r\n                <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Tóm tắt quá trình khám</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalCompleteExamining()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='large'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                    <Box sx={{pl: 6, pr: 6}}>\r\n                        <List sx={{p: 0}}>\r\n                            <Box>\r\n                                {mainDataExaminingForConclusion ? \r\n                                    mainDataExaminingForConclusion.categories.length !== 0 ? \r\n                                        <div className='category-complete-examining'>\r\n                                            {mainDataExaminingForConclusion.categories.map((categoriesItem, categoriesIndex) => (\r\n                                                <div key={`categoriesItem ${categoriesIndex}`}>\r\n                                                    <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                        {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                            <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                                \r\n                                                                {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                    <div key={`questionItem ${questionIndex}`}>\r\n                                                                        <Grid container rowSpacing={0}>\r\n                                                                            {questionIndex === 0 ?\r\n                                                                                <>\r\n                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                    </Grid> \r\n\r\n                                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                        <>\r\n                                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                            </Grid>\r\n                                                                        \r\n                                                                                            <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                        </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    }   \r\n                                                                                </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n                                                                \r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                                classes={{ root: classes.root }}\r\n                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                            />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={5.5} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                :   \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={8} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                }                                                                                                                                                                          \r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    :\r\n                                        <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                :\r\n                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                }\r\n                            </Box>\r\n                        </List>\r\n                    </Box>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{borderTop: '1px solid black'}}>\r\n                    {mainDataExaminingForConclusion ? \r\n                        <div style={{width: '100%', padding: '8px 50px 8px 50px'}}>\r\n                            <TextareaAutosize key={`pantientId ${mainDataExaminingForConclusion.patientId}`} placeholder='Kết luận của bác sĩ' style={{width: '100%', padding: '15px', fontSize: '17px'}} onChange={(e) => onChangeExaminingConclusion(e.target.value)} ref={textareaRef} defaultValue={mainDataExaminingForConclusion.conclusion} /> \r\n                            \r\n                                {mainDataExaminingForConclusion.isVaccination ? \r\n                                    <>\r\n                                        <Box sx={{mb: 0.4}}>\r\n                                            {mainDataExaminingForConclusion.vaccination === '' || mainDataExaminingForConclusion.vaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.vaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.nextVaccination === '' || mainDataExaminingForConclusion.nextVaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.nextVaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.reminder === '' ||  mainDataExaminingForConclusion.reminder === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.reminder}`}</Typography>\r\n                                                </>\r\n                                            }\r\n                                        </Box>\r\n                                            \r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n\r\n                                {mainDataExaminingForConclusion.appointmentDate ? \r\n                                <>\r\n                                    <Box sx={{display: 'flex', justifyContent: 'center', mb: 2}}>\r\n                                        <Typography variant='h6' sx={{mt: 'auto', mb: 'auto', mr: 2}}>Kỳ khám tiếp theo: <span style={{fontWeight: 'bolder', color: '#ff1744'}}>{mainDataExaminingForConclusion.nextExamName}</span></Typography>\r\n                                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                            <DemoContainer components={['DatePicker']}>  \r\n                                                <DatePicker label=\"Ngày khám dự kiến\" disablePast\r\n                                                    format='DD/MM/YYYY' defaultValue={moment(mainDataExaminingForConclusion.appointmentDate)}\r\n                                                    onChange={(value) => onChangeAppointmentDate(value)}\r\n                                                    slotProps={{ \r\n                                                        textField: { inputRef: dateFieldRef, }\r\n                                                    }}\r\n                                                />\r\n                                            </DemoContainer>\r\n                                        </LocalizationProvider>\r\n                                    </Box>\r\n                                </>\r\n                                :\r\n                                    null\r\n                                }\r\n                        \r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <Stack spacing={1} direction=\"row\">\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' onClick={() => handleAddMedicalBook()}>Lưu</Button>\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' color={'error'} onClick={() => handleCloseModalCompleteExamining()}>Đóng</Button>\r\n                                </Stack>\r\n                            </div>\r\n                        </div>   \r\n                    :\r\n                        null            \r\n                    }             \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//scss\r\nimport './SCSS/PreviewLastExamining.scss'; \r\n//api\r\nimport { getMedicalBook } from '../../Service/MedicalService';\r\n//moment\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi'; \r\nmoment.locale('vi');\r\n\r\nfunction PreviewLastExamining(props) {\r\n    const previewDataExaminingDefault = {\r\n        categoryPres: [],\r\n        healthRecords: { examinationName: '', timeUpdateState: '', conclusion: '', medicakBook: [] },\r\n        nutritionals: [],\r\n        vaccinationBook: [] \r\n    }\r\n\r\n    const [previewDataExamining, setPreviewDataExamining] = useState(previewDataExaminingDefault);\r\n    // const [fullDataPredecessor, setFullDataPredecessor] = useState();\r\n    // const [fullDataHealthRecord, setFullDataHealthRecord] = useState();\r\n    \r\n    const [loadingMedicalBook, setLoadingMedicalBook] = useState(false);\r\n\r\n    const [openCollapsePredecessorItem, setOpenCollapsePredecessorItem] = useState([]);\r\n    const [openCollapseMedicakBookItem, setOpenCollapseMedicakBookItem] = useState([]);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpenPredecessorItem = (predecessorIndex) => {\r\n        setOpenCollapsePredecessorItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[predecessorIndex] = !newOpen[predecessorIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleOpenMedicakBookItem = (medicakBookIndex) => {\r\n        setOpenCollapseMedicakBookItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[medicakBookIndex] = !newOpen[medicakBookIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    // const handeOnChangePagePredecessor = (e, page, indexPredecessor) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].categoryContents = fullDataPredecessor[indexPredecessor].categoryContents[page - 1];\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    // const handeOnChangePageHealthRecords = (e, page, indexMedicakbook) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].categoryContents = fullDataHealthRecord[indexMedicakbook].categoryContents[page - 1];\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    const handleEditPrevDataExamining = async () => {\r\n        setLoadingMedicalBook(true);\r\n        const responseMedicalBook = await getMedicalBook(props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0].medicalRegisterId);\r\n        if(props.prevDataExamining.newPredecessor){\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n             \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: [],\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n\r\n        else{\r\n            if(props.prevDataExamining.categoryPres.length > 1){\r\n                props.prevDataExamining.categoryPres = props.prevDataExamining.categoryPres.sort((a, b) => a.categoryOrder - b.categoryOrder);\r\n            }\r\n\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n            \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: props.prevDataExamining.categoryPres,\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n        setLoadingMedicalBook(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.prevDataExamining){\r\n            handleEditPrevDataExamining();\r\n        }\r\n    }, [props.prevDataExamining])\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{height: '100%', position: 'relative'}}>\r\n                {loadingMedicalBook ? \r\n                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                        <CircularProgress />\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh gần nhất, hãy chờ một chút...</Typography>\r\n                    </Box>\r\n                :\r\n                    <>\r\n                        <div className='preview-last-examining-contents' >\r\n\r\n                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem'}}>\r\n                                Thông tin tóm tắt <span style={{color: 'red'}}>{previewDataExamining.healthRecords.examinationName}</span>\r\n                            </Typography>\r\n\r\n                            <List sx={{p: 0}}>\r\n                                {previewDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                    <div key={`predecessorItem ${predecessorIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenPredecessorItem(predecessorIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapsePredecessorItem[predecessorIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapsePredecessorItem[predecessorIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {predecessorItem.categoryContents.map((predecessorItemCategoryContentsItem, predecessorItemCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`predecessorItemCategoryContentsIndex ${predecessorItemCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: predecessorItemCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{predecessorItemCategoryContentsItem.categoryContentTitle}</Typography>\r\n                                                    \r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {predecessorItemCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{predecessorItemCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={6.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                                    \r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={6.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))} \r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                {previewDataExamining.healthRecords.medicakBook.map((medicakBookItems, medicakBookIndex) => (\r\n                                    <div key={`medicakBookItems ${medicakBookIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenMedicakBookItem(medicakBookIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseMedicakBookItem[medicakBookIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={medicakBookItems.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapseMedicakBookItem[medicakBookIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {medicakBookItems.categoryContents.map((medicakBookCategoryContentsItem, medicakBookCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`medicakBookCategoryContentsIndex ${medicakBookCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: medicakBookCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{medicakBookCategoryContentsItem.categoryContentTitle}</Typography>\r\n\r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {medicakBookCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{medicakBookCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={5.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))}\r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}             \r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n                            </List>\r\n\r\n                            <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận: ${previewDataExamining.healthRecords.conclusion}`}</Typography>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='time-examining' style={{marginLeft: '16px', marginTop: '4px', width: '99%'}}>\r\n                            <Typography variant='subtitle1' sx={{color: '#009688', fontWeight: 'bolder', fontSize: '1.08rem'}}>{`${previewDataExamining.healthRecords.doctorFullName}, ${moment(previewDataExamining.healthRecords.timeUpdateState).format('LLLL')}`}</Typography>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Box>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default PreviewLastExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//lodash\r\nimport _, { constant } from \"lodash\";\r\n//modal\r\nimport CompleteExamining from '../ManageCompleteExamining/CompleteExamining';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//components\r\nimport PreviewLastExamining from './PreviewLastExamining';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { GiWeightScale } from \"react-icons/gi\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport { TbRulerMeasure } from \"react-icons/tb\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport BeenhereIcon from '@mui/icons-material/Beenhere';\r\nimport VaccinesIcon from '@mui/icons-material/Vaccines';\r\n//moment\r\nimport moment from 'moment';\r\n//scss\r\nimport './SCSS/DoctorExamining.scss';\r\n//real-time\r\nimport {startSignalRConnection, stopSignalRConnection, removeFromGroup} from '../../Service/SignalService';\r\n//api\r\nimport { \r\n    createAddPredecessor,\r\n    getMedicalDetailPatient,\r\n    getRegistersByDateNow, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook,\r\n    updateMedicalState,\r\n    deleteMedicalBook\r\n} from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainDoctorExamining() {\r\n    const dataPantientsReadyExaminingDefault = {\r\n        stt: '',\r\n        id: '',\r\n        patientsId: '',\r\n        patientsName: '',\r\n        patientsDOB: '',\r\n        patientsMonthsOld: '',\r\n        patientsGender: '',\r\n        patientsHeight: '',\r\n        patientsWeight: '',\r\n        patientsHeadCircumference: '',\r\n        patientsPhone: '',\r\n        patientsAddress: ''\r\n    }\r\n\r\n    const { user, loading, alertVisible, confirmAlert, resetAlert, isLogOutClick, isDialogChangePasswordOpen } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isFormDirty, setIsFormDirty] = useState(false);\r\n\r\n    //state thông tin bệnh nhân ban đầu \r\n    const [dataPantientsReadyExamining, setDataPantientsReadyExamining] = useState(dataPantientsReadyExaminingDefault);\r\n\r\n    //state các category gồm tiêu đề nội dung khám và câu hỏi khám ban đầu\r\n    const [mainDataExamining, setMainDataExamining] = useState([]);\r\n\r\n    //state lưu tạm data các kỳ khám \r\n    const [prevDataExamining, setPrevDataExamining] = useState();\r\n\r\n    //state đóng mở cây thư mục khám của sổ khám bệnh\r\n    const [openCollapseHealthRecords, setOpenCollapseHealthRecords] = useState(false);\r\n\r\n    //state đóng mở chi tiết nội dung của sổ khám bệnh\r\n    const [openCollapseHealthRecordsItem, setOpenCollapseHealthRecordsItem] = useState([]);\r\n\r\n    //state chọn danh mục khám ban đầu\r\n    const [categorySelectedExamining, setCategorySelectedExamining] = useState({});\r\n\r\n    //state chọn danh mục bao gồm nội dung bên trong ban đầu\r\n    const [contentCategorySelectedExamining, setContentCategorySelectedExamining] = useState([]);\r\n\r\n    //state lưu tạm nội dung chi tiết của sổ khám bệnh\r\n    const [healthRecordsContents, setHealthRecordsContents] = useState([]);\r\n    const [currentHealthRecordExamining, setCurrentHealthRecordExamining] = useState();\r\n\r\n    //tiền căn show ở thông tin bệnh nhân\r\n    const [previewPredecessor, setPreviewPredecessor] = useState();\r\n\r\n    //state các câu hỏi được bác sĩ khám tích hoặc gõ vào\r\n    const [dataExaminingForConclusion , setDataExaminingForConclusion ] = useState({});\r\n\r\n    //state lưu tạm các data tiền căn của getUpdatePredecessor (bao gồm những data tiền căn đã chọn và chưa chọn)\r\n    const [oldDataPredecessor, setOldDataPredecessor] = useState();\r\n\r\n    //dùng khi tái khám hoặc mở khám lại cho bệnh nhân có tiền căn đã đụng\r\n    const [newDataPredecessor, setNewDataPredecessor] = useState();\r\n\r\n    //state lưu data tiền căn cũ (những data tiền căn đã chọn)  \r\n    const [prevDataPredecessor, setPrevDataPredecessor] = useState();\r\n\r\n    //state quản lý modal kết thúc khám\r\n    const [openModalCompleteExamining, setOpenModalCompleteExamining] = useState(false);\r\n\r\n    const [loadingPrevDataExamining, setLoadingPrevDataExamining] = useState(false);\r\n    const [loadingPatient, setLoadingPatient] = useState(true);\r\n    const [loadingInfoPatient, setLoadingInfoPatient] = useState(true);\r\n    const [loadingCategoryExamining, setLoadingCategoryExamining] = useState(false);\r\n    const [loadingContentsExamining, setLoadingContentsExamining] = useState(false);\r\n\r\n    const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n  \r\n    const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n    const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n    const [listPantientChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n            { chipLabel: 'BN đã khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n          const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n            setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n            setListDataPatientsRegisterState(listPantientRegisterDone);\r\n        }\r\n    };\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n        }else{\r\n          setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n        }\r\n      }\r\n    \r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const handleCompleteExaminingForPantient = () => {\r\n        setLoadingPatient(true);\r\n        toast.success(`Đã kết thúc khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setCurrentHealthRecordExamining();\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        setPreviewPredecessor();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleCancelExamining = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingCategoryExamining(true);\r\n        setLoadingContentsExamining(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, [dataPantientsReadyExamining.editExamining === true ? 2 : 0 || dataPantientsReadyExamining.backRegister === true ? 3 : 0]);\r\n        if(response.status === 200){\r\n            toast.success(`Đã hủy khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success2'});    \r\n            setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n            setMainDataExamining([]);\r\n            setOpenCollapseHealthRecords(false);\r\n            setOpenCollapseHealthRecordsItem([]);\r\n            setCategorySelectedExamining({});\r\n            setContentCategorySelectedExamining([]);\r\n            setHealthRecordsContents([]);\r\n            setCurrentHealthRecordExamining();\r\n            setDataExaminingForConclusion({});\r\n            setPrevDataPredecessor();\r\n            setCurrentHealthRecordExamining();\r\n            setOldDataPredecessor();\r\n            setPreviewPredecessor();\r\n            handleGetRegistersByDateNow();\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    const handleDeleteExamining = async () => {\r\n        const confirmLeave = window.confirm(\r\n            'Chức năng này sẽ xóa tất cả dữ liệu của kỳ khám hiện tại và đặt bệnh nhân về trạng thái chưa khám. Bạn có muốn xóa không?'\r\n        );\r\n        if (confirmLeave) {\r\n            setLoadingPatient(true);\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const responseDeleteMedicalBook = await deleteMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n            if(responseDeleteMedicalBook.status === 200){\r\n                toast.success(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingSuccess'});\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    await updateMedicalState(dataPantientsReadyExamining.id, 3);\r\n                }\r\n                setPrevDataExamining();\r\n                if(previewPredecessor && previewPredecessor.length !== 0){\r\n                    setPreviewPredecessor();\r\n                }\r\n                setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n                setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n                handleGetRegistersByDateNow();\r\n            }\r\n            else{\r\n                toast.error(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingError'});\r\n            }\r\n            setOpenAlertProcessingBackdrop(false);\r\n        } else {\r\n            return false; // Ngăn điều hướng\r\n        }\r\n    }\r\n\r\n    const handleStartExaminingButtonClick = () => {\r\n        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n            handleBeginExaminingForPantient();\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 1){\r\n            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n            handleBeginEditExaminingForPantient();\r\n        }\r\n    }\r\n\r\n    const handleCompleteExaminingButtonClick = () => {\r\n        setOpenAlertProcessingBackdrop(true)\r\n        if(dataPantientsReadyExamining.status === 1){\r\n            setTimeout(() => {\r\n            setOpenAlertProcessingBackdrop(false)\r\n                setOpenModalCompleteExamining(true);\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    //hàm này dùng khi user đang khám mà bị ngáo lỡ nhấn f5\r\n    const handleReloadUIWhenExamining = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        const reDataPatientsRegisterSort = JSON.parse(sessionStorage.dataPatientsRegisterSort)\r\n        const reDataPantientsReadyExamining = JSON.parse(sessionStorage.dataPantientsReadyExamining);\r\n        const reMainDataExamining = JSON.parse(sessionStorage.mainDataExamining);\r\n        const reDataExaminingForConclusion = JSON.parse(sessionStorage.dataExaminingForConclusion);\r\n\r\n        setListDataPatientsRegisterSort(reDataPatientsRegisterSort);\r\n        \r\n        reDataPantientsReadyExamining.isContinueExam = true;\r\n        \r\n        setDataPantientsReadyExamining(_.cloneDeep(reDataPantientsReadyExamining));\r\n        setMainDataExamining(_.cloneDeep(reMainDataExamining));\r\n        setDataExaminingForConclusion(_.cloneDeep(reDataExaminingForConclusion));\r\n\r\n        if(sessionStorage.currentHealthRecordExamining){\r\n            const reCurrentHealthRecordExamining = JSON.parse(sessionStorage.currentHealthRecordExamining);\r\n            setHealthRecordsContents(_.cloneDeep(reCurrentHealthRecordExamining));\r\n            setCurrentHealthRecordExamining(_.cloneDeep(reCurrentHealthRecordExamining));\r\n        }\r\n\r\n        if(sessionStorage.prevDataPredecessor){\r\n            const rePrevDataPredecessor = JSON.parse(sessionStorage.prevDataPredecessor);\r\n            setPrevDataPredecessor(_.cloneDeep(rePrevDataPredecessor));\r\n        }\r\n\r\n        if(sessionStorage.oldDataPredecessor){\r\n            const reOldDataPredecessor = JSON.parse(sessionStorage.oldDataPredecessor);\r\n            setOldDataPredecessor(_.cloneDeep(reOldDataPredecessor));\r\n        }\r\n        \r\n        setNewDataPredecessor({\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            categoryPres: []\r\n        })\r\n        \r\n        sessionStorage.clear();\r\n\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //lấy danh sách đăng ký khám trong ngày\r\n    const handleGetRegistersByDateNow = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1 * 1000));\r\n        const response = await getRegistersByDateNow();\r\n        if(response !== 400){\r\n            const findListPantientNotExam = response.list.filter(item => item.state !== 1)\r\n            setListDataPatientsRegister(findListPantientNotExam);\r\n\r\n            let listPantientRegisterWaiting = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n            let listPantientRegisterDone = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n\r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const updatedList = [\r\n                { chipLabel: 'BN chờ khám', chipContent: listPantientRegisterWaiting.length },\r\n                { chipLabel: 'BN đã khám', chipContent: listPantientRegisterDone.length }\r\n            ]\r\n            setListPantientChipState(updatedList);\r\n        }\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n    }\r\n\r\n    const handleAppyPantientData = async (dataPantientItem) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingPrevDataExamining(true);\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            setPreviewPredecessor();\r\n        }\r\n        await handleGetMedicalDetailPatient(dataPantientItem.id);\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.stt = dataPantientItem.order;\r\n        _dataPantientsReadyExamining.id = dataPantientItem.id;\r\n        _dataPantientsReadyExamining.status = 0;\r\n        _dataPantientsReadyExamining.patientsId = dataPantientItem.patient.patientId;\r\n        _dataPantientsReadyExamining.patientsName = dataPantientItem.patient.fullName;\r\n        _dataPantientsReadyExamining.patientsDOB = dataPantientItem.patient.dayOfBirth;\r\n        _dataPantientsReadyExamining.patientsMonthsOld = dataPantientItem.patient.monthsOfAge;\r\n        _dataPantientsReadyExamining.patientsGender = dataPantientItem.patient.gender;\r\n        _dataPantientsReadyExamining.patientsHeight = dataPantientItem.height;\r\n        _dataPantientsReadyExamining.patientsWeight = dataPantientItem.weight;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsPhone = dataPantientItem.patient.phoneMother ? dataPantientItem.patient.phoneMother : dataPantientItem.patient.phoneFather;\r\n        _dataPantientsReadyExamining.patientsAddress = dataPantientItem.patient.fullAddress;\r\n        _dataPantientsReadyExamining.vaccination = dataPantientItem.vaccination === true ? true : false;\r\n        _dataPantientsReadyExamining.editExamining = dataPantientItem.state === 2 ? true : false;\r\n        _dataPantientsReadyExamining.backRegister = dataPantientItem.state === 3 ? true : false;\r\n        _dataPantientsReadyExamining.isContinueExam = false;\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n        setLoadingInfoPatient(false);\r\n        setLoadingPrevDataExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //nhấn chọn bệnh nhân để load vào ô thông tin bn\r\n    const handleSelectPantientExamining = async (dataPantientItem) => {\r\n        if(dataPantientItem.state === 0 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName || dataPantientItem.state === 3 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId === '' || dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 0){\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n            else{\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n        }\r\n        \r\n        else if(dataPantientItem.state === 2 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 1){\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n            else{\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    //bắt đầu khám bệnh cho bệnh nhân\r\n    const handleBeginExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            if(prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                    //backup prevDataPredecessor để khi cần dùng\r\n                    setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n                }\r\n\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleSetMainDataExamining();\r\n                toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n            }\r\n            else{\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleGetCategoryReExamining();\r\n            }\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error(response.data, {toastId: 'error1'});\r\n        }\r\n        setLoadingPatient(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu khám cho bệnh nhân khám mới\r\n    const handleSetMainDataExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        prevDataExamining.healthRecords.forEach((healthRecordsItem) => {\r\n            if(healthRecordsItem.medicalBookId === null){\r\n                healthRecordsItem.state = 1\r\n            }\r\n        })\r\n        \r\n        //tái khám và có tiền căn đã đụng\r\n        if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === false){\r\n            const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //tái khám và có tiền căn chưa đụng\r\n        else if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === true){\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n\r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //khám mới hoàn toàn\r\n        else{\r\n            const editDataCategoryPresForConclusion = prevDataExamining.categoryPres.map((predecessorItem) => {\r\n                const mainCategoryContentsExamining = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentOrder: categoryContentsItem.categoryContentOrder,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n    \r\n                const mainCategoryExamining = {\r\n                    categoryName: predecessorItem.categoryName,\r\n                    isPredecessor: true,\r\n                    categoryOrder: predecessorItem.categoryOrder,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n    \r\n                return mainCategoryExamining\r\n            })\r\n    \r\n            const editDataHealthRecordsForConclusion = prevDataExamining.healthRecords.find((healthRecordsItem) => healthRecordsItem.patientId === dataPantientsReadyExamining.patientsId)\r\n    \r\n            setDataExaminingForConclusion({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n                conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n                categories: editDataCategoryPresForConclusion,\r\n            });\r\n    \r\n            prevDataExamining.categoryPres.forEach((categoryPresItem, categoryPresIndex) => {\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.map((categoryContentsItem) => {\r\n                    return {\r\n                        ...categoryContentsItem,\r\n                        categoryPresOrder: categoryPresIndex\r\n                    }\r\n                })\r\n                return {\r\n                    ...categoryPresItem,\r\n                }\r\n            })\r\n            \r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //bắt đầu sửa dữ liệu khám bệnh\r\n    const handleBeginEditExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n            const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n            _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n            setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n            const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            await handleGetCategoryReExamining();\r\n            setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n            setLoadingPatient(false);\r\n        }\r\n    }\r\n\r\n    //lấy dữ liệu cây thư mục khám lại\r\n    const handleGetCategoryReExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        const responseGetUpdateMedicalBook = await getUpdateMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n\r\n        if(responseGetUpdateMedicalBook.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n\r\n            if(prevDataExamining.newPredecessor === false){\r\n                setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                //backup prevDataPredecessor để khi cần dùng\r\n                setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n            }\r\n            \r\n            await handleSetMainDataReExamining(responseGetUpdateMedicalBook.data);\r\n            toast.success(`Đang mở khám lại cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        }\r\n        else if(responseGetUpdateMedicalBook.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu cây thư mục khám của chức năng mở khám lại\r\n    const handleSetMainDataReExamining = async (responseGetUpdateMedicalBookData) => {\r\n        prevDataExamining.healthRecords[0].state = 1\r\n        prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBookData.categories\r\n\r\n        const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n            categoryName: category.categoryName,\r\n            isHealthRecord: true,\r\n            categoryContents: category.categoryContents.map(content => ({\r\n              ...content,\r\n              categoryContentQuestions: []\r\n            })) \r\n        }))\r\n\r\n        //demo truớc data kết luận\r\n        const demoDataExaminingForConclusion = {\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            isVaccination: prevDataExamining.vaccination,\r\n            medicalRegisterId: dataPantientsReadyExamining.id !== prevDataExamining.healthRecords[0].medicalRegisterId ? dataPantientsReadyExamining.id : prevDataExamining.healthRecords[0].medicalRegisterId,\r\n            conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n            categories: updateHealthRecordsCategoriesForConclusion\r\n        }\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        //sửa categories của conclusion phần sổ khám bệnh\r\n        let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.healthRecords[0].categories);\r\n\r\n        updateCategoriesForConclusion = updateCategoriesForConclusion.map(category => {\r\n            category.categoryContents = category.categoryContents.map(content => {\r\n                const questions = content.categoryContentQuestions;\r\n    \r\n                // Check if all questions have both categoryContentAnswer and categoryContentNote as null\r\n                const allNull = questions.every(q => q.categoryContentAnswer === null && q.categoryContentNote === null);\r\n                    \r\n                if (allNull) {\r\n                  // Set categoryContentQuestions to an empty array\r\n                  content.categoryContentQuestions = [];                    \r\n                } else {\r\n                  // Filter out questions with both categoryContentAnswer and categoryContentNote as null\r\n                  content.categoryContentQuestions = questions.filter(q => q.categoryContentAnswer !== null || q.categoryContentNote !== null);\r\n                }\r\n                    \r\n                return content;\r\n            });\r\n                  \r\n            category.isHealthRecord = true\r\n            return category;\r\n        })\r\n\r\n        demoDataExaminingForConclusion.categories = updateCategoriesForConclusion\r\n\r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        //tiền căn đợt trước đã đụng (newPredecessor = false)\r\n        if(responseGetUpdatePredecessor.status === 200)\r\n        {   \r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        \r\n        //tiền căn đợt trước chưa đụng (newPredecessor = true) \r\n        else{\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n        \r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n    }\r\n\r\n    //sửa dữ liệu tiền căn cho mở khám lại hoặc tái khám\r\n    const handleEditDataPredecessor = async (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        \r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        const findUpdatePredecessor = responseGetUpdatePredecessor.data.find(responseGetUpdatePredecessorItem => responseGetUpdatePredecessorItem.categoryOrder === categoryOrder);\r\n\r\n        mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n            if(categoryPresItem.categoryOrder === findUpdatePredecessor.categoryOrder){\r\n                categoryPresItem.categoryContents = findUpdatePredecessor.categoryContents\r\n                categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                    categoryContentsItem.isLock = false\r\n                })\r\n                categoryPresItem.isLock = false\r\n            }\r\n        })\r\n\r\n        const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n        \r\n        if(!newDataPredecessor.categoryPres.some(categoryPresItem => categoryPresItem.categoryName === categoryName)){\r\n            newDataPredecessor.categoryPres = prevDataPredecessor\r\n        }\r\n\r\n        handleSelectCategoryClick(selectCategoryReExamining);\r\n\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //huỷ không sửa dữ liệu tiền căn nữa\r\n    const handleCancelEditDataPredecessor = (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        setTimeout(() => {\r\n            const findPrevDataPredecessorByCategoryName = oldDataPredecessor.find(prevDataPredecessorItem => prevDataPredecessorItem.categoryOrder === categoryOrder);\r\n\r\n            if(findPrevDataPredecessorByCategoryName){\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        categoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                        categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                            categoryContentsItem.isLock = true\r\n                        })\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                newDataPredecessor.categoryPres.forEach((newDataPredecessorCategoryPresItem) => {\r\n                    if(newDataPredecessorCategoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        newDataPredecessorCategoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === categoryOrder){\r\n                        categoryPresItem.categoryContents = [];\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                const _newDataPredecessor = {...newDataPredecessor};\r\n                const removeCategoryPredecessor = _newDataPredecessor.categoryPres.filter(categoryPresItem => categoryPresItem.categoryOrder !== categoryOrder);\r\n                newDataPredecessor.categoryPres = removeCategoryPredecessor\r\n            }\r\n\r\n            setPrevDataPredecessor(_.cloneDeep(oldDataPredecessor));\r\n\r\n            const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n            handleSelectCategoryClick(selectCategoryReExamining)\r\n   \r\n            setOpenAlertProcessingBackdrop(false);\r\n        }, 300)       \r\n    }\r\n\r\n    //tạo data tiền căn để lưu lại khi tái khám hoặc mở khám lại\r\n    //câu trả lời dạng check chọn true false\r\n    const handleAnswerCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n    }\r\n\r\n    //câu trả lời dạng check chọn sửa lại note\r\n    const handleNoteCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n        const isEditNote = true;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], takenValue, isEditNote)\r\n        }, 300)\r\n    }\r\n\r\n    //câu trả lời dạng giá trị, sửa lại note\r\n    const handleNoteValueQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsValuePredecessorForReExamOrBackExam(\r\n                categoryContentsIndex,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, \r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], \r\n                takenValue\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const createSelectedQuestionsValuePredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue) => {\r\n        const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n        if(findNewDataPredecessorCategoryOrder){\r\n            // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n            const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n            if(findNewDataPredecessorCategoryContents){\r\n                // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue !== '');\r\n                const questionIndexRemove = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue === '');\r\n\r\n                if(questionIndex !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value khác rỗng => gán note cũ bằng note mới\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n                }\r\n\r\n                else if(questionIndexRemove !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value bằng rỗng => bỏ note đó\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexRemove, 1);\r\n                }\r\n\r\n                else{\r\n                    //nếu không tìm thấy, đẩy note mới vào\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                }\r\n            }\r\n\r\n            else{\r\n                // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                const newDataPredecessorCategoryContents = {\r\n                    categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                    categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                    categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                    categoryContentQuestions: [categoryContentQuestion],\r\n                    categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                    categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                }\r\n                findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n            }\r\n        }\r\n\r\n        else{\r\n            // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n            const newDataPredecessorCategoryContents = {\r\n                categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                categoryContentQuestions: [categoryContentQuestion],\r\n                categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n            }\r\n\r\n            const newDataPredecessorCategoryPres = {\r\n                categoryOrder: categorySelectedExamining.categoryOrder,\r\n                categoryName: categorySelectedExamining.categoryName,\r\n                newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                categoryContents: [newDataPredecessorCategoryContents]\r\n            }\r\n\r\n            newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n        }         \r\n    }\r\n\r\n    const createSelectedQuestionsPredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue, isEditNote) => {\r\n        if(isEditNote){\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){       \r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng rỗng\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n         \r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                        else{\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndex, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else{\r\n            //câu hỏi là dạng check câu trả lời là true\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote !== '');\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n                        }\r\n                        else{\r\n                            // Nếu tìm thấy categoryContentOrder, thêm câu hỏi mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }       \r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents)\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check câu trả lời là false\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndexNoteDontExit = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote === null);\r\n                        if(questionIndexNoteDontExit !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexNoteDontExit, 1);\r\n                        }\r\n                        else{\r\n                            const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n    }\r\n\r\n    //lưu dữ liệu tiền căn khi sửa xong\r\n    const handleEditDataPredecessorForSaving = (categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setTimeout(() => {\r\n            const findNewDataPredecessor = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPres => newDataPredecessorCategoryPres.categoryOrder === categoryOrder)\r\n\r\n            const findOldDataPredecessorCategoryOrder = oldDataPredecessor.find(oldDataPredecessorItem => oldDataPredecessorItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n\r\n            if(findOldDataPredecessorCategoryOrder){\r\n                // Nếu tìm thấy categoryOrder, duyệt qua categoryContents của findNewDataPredecessor\r\n                findNewDataPredecessor.categoryContents.forEach(findNewDataPredecessorCategoryContentsItem => {\r\n\r\n                    let content = findOldDataPredecessorCategoryOrder.categoryContents.find(findOldDataPredecessorCategoryContentsItem => findOldDataPredecessorCategoryContentsItem.categoryContentOrder === findNewDataPredecessorCategoryContentsItem.categoryContentOrder);\r\n\r\n                    if(content){\r\n                        // Loại bỏ các categoryContentQuestions trong content nếu không tồn tại trong findNewDataPredecessorCategoryContentsItem\r\n                        content.categoryContentQuestions = content.categoryContentQuestions.filter(q =>\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.some(newQ => newQ.categoryContentQuestionOrder === q.categoryContentQuestionOrder)\r\n                        );\r\n\r\n                        // Nếu tìm thấy categoryContentOrder, duyệt qua categoryContentQuestions\r\n                        if(findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.length !== 0){\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.forEach(findNewDataPredecessorQuestionItem => {\r\n                                if(findNewDataPredecessorQuestionItem.categoryContentAnswer === null && findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'check'){\r\n                                    // Nếu categoryContentAnswer là false và categoryContentNote là null, loại bỏ question đó\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else if(findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'string'){\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else{\r\n                                    const questionIndex = content.categoryContentQuestions.findIndex(q => q.categoryContentQuestionOrder === findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n\r\n                                    if (questionIndex !== -1) {\r\n                                        // Thay thế question nếu trùng khớp\r\n                                        content.categoryContentQuestions[questionIndex] = findNewDataPredecessorQuestionItem;\r\n                                    }\r\n\r\n                                    else {\r\n                                        // Thêm question mới nếu không trùng khớp\r\n                                        content.categoryContentQuestions.push(findNewDataPredecessorQuestionItem);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        }else{\r\n                            findOldDataPredecessorCategoryOrder.categoryContents = findOldDataPredecessorCategoryOrder.categoryContents.filter(contentCategoryContentsItem => contentCategoryContentsItem.categoryContentOrder !== findNewDataPredecessorCategoryContentsItem.categoryContentOrder)\r\n                        }\r\n                        \r\n                    }else{\r\n                        findOldDataPredecessorCategoryOrder.categoryContents.push(findNewDataPredecessorCategoryContentsItem);\r\n                    }\r\n\r\n                })\r\n            }else{\r\n                // Thêm toàn bộ object2 nếu không tìm thấy findNewDataPredecessor\r\n                oldDataPredecessor.push(findNewDataPredecessor)\r\n            }\r\n\r\n            oldDataPredecessor.forEach((oldDataPredecessorItem) => {\r\n                oldDataPredecessorItem.categoryContents = oldDataPredecessorItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length !== 0)\r\n            }) \r\n\r\n            const removeOldDataPredecessorCategoryPres = oldDataPredecessor.findIndex(item => item.categoryContents.length === 0);\r\n            if(removeOldDataPredecessorCategoryPres !== -1){\r\n                oldDataPredecessor.splice(removeOldDataPredecessorCategoryPres, 1);\r\n            }\r\n\r\n            const saveNewDataPredecessor = {\r\n                patientId: newDataPredecessor.patientId,\r\n                categoryPres: oldDataPredecessor\r\n            }\r\n\r\n            handleSaveNewDataPredecessor(saveNewDataPredecessor, findNewDataPredecessor)            \r\n        }, 500)\r\n    }\r\n\r\n    const handleSaveNewDataPredecessor = async (saveNewDataPredecessor, findNewDataPredecessor) => {\r\n        const responseCreateAddPredecessor = await createAddPredecessor(saveNewDataPredecessor);\r\n        if(responseCreateAddPredecessor.status === 200){\r\n\r\n            const _mainDataExamining = {...mainDataExamining};\r\n\r\n            _mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                if(categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder){\r\n                    categoryPresItem.categoryContents = findNewDataPredecessor.categoryContents\r\n                    categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                        categoryContentsItem.isLock = true\r\n                    })\r\n                    if(findNewDataPredecessor.categoryContents.length === 0){\r\n                        categoryPresItem.newCategoryPre = true\r\n                    }else{\r\n                        categoryPresItem.newCategoryPre = false\r\n                    }\r\n                    categoryPresItem.isLock = true\r\n                }\r\n\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.filter(item => item.categoryContentQuestions.length !== 0);\r\n            })\r\n\r\n            setMainDataExamining(_mainDataExamining);\r\n\r\n            const selectCategoryReExamining = _mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n            \r\n            toast.success('Đã cập nhật lại tiền căn', {toastId: 'handleSaveNewDataPredecessorSuccess'});\r\n            \r\n            handleSelectCategoryClick(selectCategoryReExamining);\r\n        }\r\n        else{\r\n            toast.error(responseCreateAddPredecessor.data, {toastId: 'handleSaveNewDataPredecessorError'});\r\n        }\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //tìm danh mục khám gồm tiền căn, sổ sức khỏe, dinh dưỡng...\r\n    const handleGetMedicalDetailPatient = async (id) => {\r\n        const responseDataExamining = await getMedicalDetailPatient(id);\r\n        setPrevDataExamining(responseDataExamining);\r\n\r\n        if(responseDataExamining.newPredecessor === false){\r\n            const previewDataPredecessor = responseDataExamining.categoryPres.filter(item => item.newCategoryPre === false).flatMap(item => item.categoryContents).flatMap(content => content.categoryContentQuestions).filter(question => question.categoryContentAnswer === true || question.categoryContentNote !== null)\r\n            setPreviewPredecessor(previewDataPredecessor);     \r\n        }\r\n    }\r\n\r\n    //chọn mục lục để khám\r\n    const handleSelectCategoryClick = async (categoryIncludeCotent) => {\r\n        if(openCollapseHealthRecords === true){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }\r\n\r\n        if(contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length !== 0){\r\n            setContentCategorySelectedExamining([]);\r\n        }\r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                ...categoryIncludeCotent,\r\n                //contentQuantity: categoryIncludeCotent.categoryContents.length\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining([]);\r\n    }\r\n\r\n    //chọn cây thư mục khám sổ sức khỏe\r\n    const handleSelectHealthRecords = (healthRecords) => {\r\n        if(openCollapseHealthRecords === false){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }        \r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                categoryName: 'Sổ sức khỏe',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(\r\n            {\r\n                healthRecordsContentsType: 'tree',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n    }\r\n\r\n    //chọn chỉ định một sổ khám bệnh (tìm chi tiết một sổ khám bệnh)\r\n    const handleSelectHealthRecordsItem = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingContentsExamining(true);\r\n\r\n        //dùng cho tái khám (có tiền căn đã đụng), mở khám lại\r\n        if(currentHealthRecordExamining){\r\n            if(healthRecordsContents.healthRecordsName !== examinationName){\r\n                if(healthRecordsState === 2){\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n                else if(healthRecordsState === 1 && dataPantientsReadyExamining.editExamining || healthRecordsState === 1 && dataPantientsReadyExamining.backRegister){\r\n                    setHealthRecordsContents({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    })\r\n\r\n                    setCurrentHealthRecordExamining({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    });\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && dataPantientsReadyExamining.isContinueExam){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else{\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n            }\r\n        }\r\n        //dùng cho tái khám (tiền căn chưa đụng), khám mới hoàn toàn\r\n        else{\r\n            await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n        }\r\n\r\n        setLoadingContentsExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const findHealthRecord = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        const responseMedicalBook = await getMedicalBook(medicalRegisterId);\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        });\r\n\r\n        if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && mainDataExamining.healthRecords[0].medicalBookId === null){\r\n            const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n                \r\n                const mainCategoryExamining = {\r\n                    categoryName: categoriesItem.categoryName,\r\n                    isHealthRecord: true,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n\r\n                return mainCategoryExamining\r\n            })\r\n\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    //chọn loại mục khám của một sổ khám bệnh\r\n    const handleOpenHealthRecordsItem = (categoryPatientsIndex) => {\r\n        setOpenCollapseHealthRecordsItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryPatientsIndex] = !newOpen[categoryPatientsIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleAnswerCheckQuestion = (categoryContentsIndex, questionIndex, answer) => {\r\n        //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng check\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else{\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }   \r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const handleNoteCheckQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            )\r\n        }, 1000)\r\n    }\r\n\r\n    const handleAnswerValueQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const handleAnswerCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else if(answer === true){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else{\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n    }\r\n    \r\n    //trả lời câu hỏi của mục sổ khám bệnh\r\n    const handleNoteCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            );\r\n        }, 1000)\r\n    }\r\n\r\n    const createSelectedQuestionsExaminingForConclusion = (categoryName, isPredecessor, categoryContentQuestion, questionOrder, categoryContentTitle, isEditNote) => {\r\n        if(categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            if(isEditNote){\r\n                if(categoryContentQuestion.categoryContentNote !== ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n\r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n\r\n                else if(categoryContentQuestion.categoryContentNote === ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentAnswer === null || categoryContentQuestionsItem.categoryContentAnswer === false){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n            }\r\n            else{\r\n                //question dạng check nhưng answer là true\r\n                if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n    \r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n    \r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n    \r\n                //question dạng check nhưng answer là false\r\n                else if(categoryContentQuestion.categoryContentAnswer === false && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentNote === null || categoryContentQuestionsItem.categoryContentNote === ''){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion)\r\n                }\r\n            }\r\n        }\r\n\r\n        else{\r\n            //question dạng giá trị nhưng khác rỗng\r\n            if(categoryContentQuestion.categoryContentNote !== '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                // Duyệt qua từng categoriesItem trong categories\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                    // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                    const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                        question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                    );\r\n                    \r\n                                    if (existingQuestion) {\r\n                                        // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                        existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                    } else {\r\n                                        // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                        categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                    }\r\n\r\n                                } else {\r\n                                // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                    categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                }\r\n                            }\r\n                        });        \r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n            //question dạng giá trị nhưng là rỗng\r\n            else if(categoryContentQuestion.categoryContentNote === '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n        }\r\n\r\n        if(isPredecessor === true){\r\n            createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n        }\r\n            \r\n    }\r\n\r\n    const createPreviewDataPredecessor = (categoryContentQuestion, isEditNote) => {\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            let _previewPredecessor = [...previewPredecessor];\r\n\r\n            const findQuestion = _previewPredecessor.find(item => item.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n            if(findQuestion){\r\n                if(findQuestion.categoryContentQuestionType === 'string'){\r\n                    if(categoryContentQuestion.categoryContentNote === ''){\r\n                        _previewPredecessor = previewPredecessor.filter(item => item.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName);\r\n                    }\r\n                    else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                        const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                        if(existingQuestion){\r\n                            existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                        }\r\n                        else{\r\n                            _previewPredecessor.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                }\r\n                else if(findQuestion.categoryContentQuestionType === 'check'){\r\n                    if(isEditNote){\r\n                        if(categoryContentQuestion.categoryContentNote === ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName && question.categoryContentAnswer === true);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                if(categoryContentQuestion.categoryContentAnswer === null || categoryContentQuestion.categoryContentAnswer === false){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    else{\r\n                        if(categoryContentQuestion.categoryContentAnswer === false || categoryContentQuestion.categoryContentAnswer === null){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                if(existingQuestion.categoryContentNote === '' || existingQuestion.categoryContentNote === null){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                                else if(existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                    existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                }               \r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentAnswer === true){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion || existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                            }\r\n                            else{\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }        \r\n                    }\r\n                }\r\n            }\r\n\r\n            else{\r\n                _previewPredecessor.push(categoryContentQuestion);\r\n            }\r\n            setPreviewPredecessor(_previewPredecessor)\r\n        }\r\n\r\n        else{\r\n            setPreviewPredecessor([categoryContentQuestion])\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const reFetchListDataPatientsRegister = async () => {\r\n        if(dataPantientsReadyExamining.id === ''){\r\n            const response = await getRegistersByDateNow();\r\n            if(response.list.length !== listDataPatientsRegister.length){\r\n                handleGetRegistersByDateNow();\r\n            }\r\n        }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // Khởi tạo kết nối SignalR khi component mount\r\n    //     const token = localStorage.getItem(\"jwt\");\r\n    //     startSignalRConnection(token);\r\n\r\n    //     return () => {\r\n    //         // Dừng kết nối SignalR khi component unmount\r\n    //         stopSignalRConnection();\r\n    //     };\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        // Đặt setInterval để gọi API sau 30 giây\r\n        const intervalId = setInterval(() => {\r\n            reFetchListDataPatientsRegister();\r\n        }, 30000); // 30000ms = 30 giây\r\n\r\n        // Cleanup interval khi component unmount để tránh memory leak\r\n        return () => clearInterval(intervalId);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(dataPantientsReadyExamining.status === 1 && alertVisible){\r\n                const userConfirmed = window.confirm(`Bạn đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, có chắc là muốn đăng xuất không?`);\r\n                if(userConfirmed){\r\n                    sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                    sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                    sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n\r\n                    if(currentHealthRecordExamining){\r\n                        sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                    }\r\n\r\n                    if(prevDataPredecessor){\r\n                        sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                    }\r\n\r\n                    if(oldDataPredecessor){\r\n                        sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                    }\r\n                    confirmAlert();\r\n                }\r\n                else{\r\n                    resetAlert();\r\n                }\r\n        }\r\n\r\n        else if(dataPantientsReadyExamining.status){\r\n            setIsFormDirty(true)\r\n\r\n            const handleBeforeUnload = (e) => {\r\n                const confirmationMessage = 'Bạn có chắc chắn muốn rời khỏi trang này?';\r\n                e.returnValue = confirmationMessage; // Hiển thị thông báo cảnh báo\r\n                return confirmationMessage;\r\n            };\r\n\r\n            const unblock = history.block((location, action) => {\r\n                if (isFormDirty) {\r\n                    const confirmLeave = window.confirm(\r\n                        'Bạn có chắc chắn muốn rời khỏi trang này? Những thay đổi sẽ không được lưu....'\r\n                    );\r\n                    if (confirmLeave) {\r\n                        const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                        sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                        sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                        sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                        sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                        if(currentHealthRecordExamining){\r\n                            sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                        }\r\n    \r\n                        if(prevDataPredecessor){\r\n                            sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                        }\r\n    \r\n                        if(oldDataPredecessor){\r\n                            sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                        }\r\n\r\n                        unblock(); // Hủy chặn để điều hướng\r\n                        history.push(location.pathname); // Điều hướng đến trang mới\r\n                        \r\n                    } else {\r\n                        return false; // Ngăn điều hướng\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n    \r\n            const handleUnload = () => {                \r\n                const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                \r\n                sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                if(currentHealthRecordExamining){\r\n                    sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                }\r\n    \r\n                if(prevDataPredecessor){\r\n                    sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                }\r\n    \r\n                if(oldDataPredecessor){\r\n                    sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                }\r\n            };\r\n            \r\n            window.addEventListener('beforeunload', handleBeforeUnload);\r\n            window.addEventListener('unload', handleUnload);\r\n            \r\n            return () => {\r\n                window.removeEventListener('beforeunload', handleBeforeUnload);\r\n                unblock();\r\n                window.removeEventListener('unload', handleUnload);                \r\n            };\r\n        }\r\n\r\n        else if(alertVisible){\r\n            confirmAlert();\r\n        }\r\n    }, [dataPantientsReadyExamining, mainDataExamining, currentHealthRecordExamining, dataExaminingForConclusion, alertVisible, confirmAlert, resetAlert, isLogOutClick, history, isFormDirty])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Doctor'){\r\n                history.push('/404');\r\n            }\r\n            else{\r\n                if(sessionStorage.dataPantientsReadyExamining){\r\n                    handleReloadUIWhenExamining();\r\n                }\r\n                else{\r\n                    handleGetRegistersByDateNow();\r\n                }\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(isDialogChangePasswordOpen === false){\r\n            const handleKeyDown = (event) => {\r\n                if(event.keyCode === 112){\r\n                    event.preventDefault();\r\n                }\r\n\r\n                if(dataPantientsReadyExamining.patientsId !== '' && openAlertProcessingBackdrop === false && openModalCompleteExamining === false && event.keyCode !== 116){\r\n                    if(event.keyCode === 112 && dataPantientsReadyExamining.status === 1){\r\n                        event.preventDefault();\r\n                        handleCancelExamining();\r\n                    }\r\n\r\n                    else if(event.keyCode === 113 && prevDataExamining){\r\n                        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n                            handleBeginExaminingForPantient();\r\n                        }\r\n                        else if(dataPantientsReadyExamining.status === 1){\r\n                            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n                        }\r\n                        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n                            handleBeginEditExaminingForPantient();\r\n                        }\r\n                    }\r\n\r\n                    else if(event.keyCode === 115){\r\n                    setOpenAlertProcessingBackdrop(true)\r\n                        if(dataPantientsReadyExamining.status === 1){\r\n                            setTimeout(() => {\r\n                                setOpenAlertProcessingBackdrop(false)\r\n                                setOpenModalCompleteExamining(true);\r\n                            }, 1000)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            document.addEventListener('keydown', handleKeyDown);\r\n\r\n            return () => {\r\n                document.removeEventListener('keydown', handleKeyDown);\r\n            };\r\n        }\r\n        \r\n    }, [dataPantientsReadyExamining, openModalCompleteExamining, openAlertProcessingBackdrop, openModalCompleteExamining, isDialogChangePasswordOpen])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n                <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                    <Grid container spacing={2} sx={{pl: 0.6, pr: 0.6}}>\r\n\r\n                        <Grid item xs={5}>\r\n                            {/* <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{`${moment().format('dddd')}, ${moment().format('LL')}`}</Typography> */}\r\n                            <TableContainer component={Paper} sx={{ height: '330px', boxShadow: 5, borderRadius: '10px' }}>\r\n                                {loadingPatient ?\r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                                            <CircularProgress />\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                                        </Box>        \r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Box>\r\n                                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                                                    <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                                                        <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                                        onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                                                    </Badge>\r\n                                                ))}\r\n                                            </Stack>\r\n                                            <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                                            <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                                                <TextField sx={{mb: 0.6, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                                        startAdornment: (\r\n                                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                                        ),\r\n                                                        endAdornment: (\r\n                                                            <InputAdornment position='end'>\r\n                                                                {searchPatientsQuery !== '' ? \r\n                                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                                                                    /> \r\n                                                                : \r\n                                                                    null\r\n                                                                }\r\n                                                            </InputAdornment>  \r\n                                                        )\r\n                                                    }}>\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Box>\r\n                                \r\n                                        <Table stickyHeader >\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listDataPatientsRegisterSort.map((dataPantientItem, dataPantientIndex) => (\r\n                                                    <TableRow hover role=\"checkbox\" key={dataPantientItem.order}\r\n                                                        sx={{ cursor: 'pointer', backgroundColor: dataPantientItem.state === 1 ? '#26c6da' : '#fff', \r\n                                                        ':hover': {backgroundColor: dataPantientItem.state === 1 ? '#00bcd4 !important' : 'rgba(0, 0, 0, 0.1) !important'} }} \r\n                                                        onClick={() => handleSelectPantientExamining(dataPantientItem)}\r\n                                                    >\r\n                                                        <TableCell align='left' sx={{width: '20px'}}>{dataPantientItem.order}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '150px'}}>{dataPantientItem.patient.patientId}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '240px'}}>{dataPantientItem.patient.fullName}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </>\r\n                                }\r\n                            </TableContainer>\r\n\r\n                            {/* cây thư mục khám */}\r\n                            <Box style={{width: '100%', marginTop: '10px', borderRadius: '10px', border: '2px solid red', height: '300px', overflow: 'auto'}} >\r\n                                {\r\n                                    mainDataExamining.length === 0 && loadingCategoryExamining === false || prevDataExamining === false ?\r\n                                        null\r\n                                    :\r\n                                    <>\r\n                                        {loadingCategoryExamining ?\r\n                                            <Box sx={{backgroundColor: '#e0e0e0', borderRadius: '10px', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu cây thư mục khám, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <>\r\n                                                <div className='category-scrollbar'>\r\n                                                    <List sx={{p: 0, display: 'inline-grid'}}>\r\n                                                        {mainDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                                            <Box sx={{display: 'inline-flex'}} key={`category ${predecessorIndex}`}>\r\n                                                                <ListItemButton\r\n                                                                    sx={{\r\n                                                                    width: 'fitContent', pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'},\r\n                                                                    backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffd54f' : ''}} \r\n                                                                    onClick={() => handleSelectCategoryClick(predecessorItem)}\r\n                                                                >\r\n                                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                        <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </Box>\r\n                                                                </ListItemButton>\r\n\r\n                                                                {predecessorItem.newCategoryPre === true && predecessorItem.newPredecessor === true ? \r\n                                                                    null\r\n                                                                :\r\n                                                                    <>\r\n                                                                        {predecessorItem.newCategoryPre === false  ?\r\n                                                                            <>  \r\n                                                                                <CheckCircleIcon sx={{color: 'green', fontSize: '1.4rem', margin: 'auto'}} titleAccess='đã theo dõi'/>\r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        {mainDataExamining.newPredecessor ? \r\n                                                                            null\r\n                                                                        :\r\n                                                                            predecessorItem.isLock === true ?\r\n                                                                                <>  \r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <EditIcon sx={{color: 'blue', fontSize: '1.6rem'}} titleAccess='Sửa'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>\r\n                                                                            \r\n                                                                            :\r\n                                                                                <>\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessorForSaving(predecessorItem.categoryOrder)}>\r\n                                                                                        <BeenhereIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Lưu'/>\r\n                                                                                    </IconButton>\r\n\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleCancelEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <CancelIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Hủy'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>   \r\n                                                                        }                                  \r\n                                                                    </>\r\n                                                                }\r\n                                                            </Box>\r\n                                                        ))}\r\n\r\n                                                        <ListItemButton \r\n                                                            sx={{pt: '4px', pb: '4px', borderRadius: '8px', backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffd54f' : '',\r\n                                                                ':hover': {backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                            onClick={() => handleSelectHealthRecords(mainDataExamining.healthRecords)}\r\n                                                        >\r\n                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}>\r\n                                                                <SendIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                            </ListItemIcon>\r\n\r\n                                                            <ListItemText primary={'Sổ sức khỏe'} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>                                                    \r\n                                                        </ListItemButton>\r\n\r\n                                                        <Collapse in={openCollapseHealthRecords} timeout=\"auto\" unmountOnExit>\r\n                                                            <div style={{ paddingLeft: '24px' }}>\r\n                                                                {mainDataExamining.healthRecords.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                    <ListItemButton key={`healthRecords ${healthRecordsIndex}`} sx={{pt: '0px', pb: '0px', width: 'auto', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                                        onClick={() => handleSelectHealthRecordsItem(healthRecordsItem.medicalRegisterId, healthRecordsItem.examinationName, healthRecordsItem.state)}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: healthRecordsItem.state === 1 ? 'red' : '#009688'}}}>\r\n                                                                            <FiberManualRecordIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={healthRecordsItem.examinationName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </ListItemButton>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </Collapse>\r\n                                                    </List>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </Box>\r\n                            {activeChip.chipOrder === 0 && dataPantientsReadyExamining.editExamining === false ?\r\n                                <div className='instruction' style={{display: 'flex', justifyContent: 'space-between', marginTop: '4.5px'}}>\r\n                                    <Button variant=\"contained\" color=\"error\" onClick={() => handleCancelExamining()}>Hủy khám (f1)</Button>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Bắt đầu khám (f2)</Button>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                </div>\r\n                            :\r\n                                dataPantientsReadyExamining.id === '' ?\r\n                                    null\r\n                                :\r\n                                    dataPantientsReadyExamining.id !== '' && dataPantientsReadyExamining.status === 0 ? \r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleDeleteExamining()}>Xóa khám (f1)</Button>\r\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Sửa đổi (f2)</Button>\r\n                                        </div>\r\n                                    :\r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleCancelExamining()}>Hủy thay đổi (f1)</Button>\r\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                        </div>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            {/* thông tin bệnh nhân */}\r\n                            <Box sx={{boxShadow: 4, borderRadius: '20px', border: '2px solid blue', height: '230px', mb: '8px', overflow: 'auto'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', mt: 0.6, mb: 0.6, fontWeight: 'bolder', fontSize: '1.2rem', textAlign: 'center'}}>Thông tin bệnh nhân</Typography>\r\n                                <Box sx={{pl: 2.8, pr: 2.8, mt: 1}}>\r\n                                    {loadingInfoPatient ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', mt: 4}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải thông tin bệnh nhân, hãy chờ một chút...</Typography>\r\n                                        </Box>\r\n                                    :\r\n                                        <>\r\n                                            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Mã BN: ${dataPantientsReadyExamining.patientsId || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Họ tên: ${dataPantientsReadyExamining.patientsName || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    {dataPantientsReadyExamining.patientsGender === true ? <MaleIcon sx={{color: 'coral', fontSize: '27px'}}/> : <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/>}\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Giới tính: ${dataPantientsReadyExamining.patientsGender !== '' ? dataPantientsReadyExamining.patientsGender === true ? 'Nam' : 'Nữ' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: {dataPantientsReadyExamining.patientsDOB ? moment(dataPantientsReadyExamining.patientsDOB).format(\"DD/MM/YYYY\") : ''}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Tháng tuổi: ${dataPantientsReadyExamining.patientsMonthsOld || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Sdt: ${dataPantientsReadyExamining.patientsPhone || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiBodyHeight style={{color: 'tomato', fontSize: '1.42rem', marginLeft: '2px'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 0.8}}>\r\n                                                        {`Chiều cao: ${dataPantientsReadyExamining.patientsHeight ? dataPantientsReadyExamining.patientsHeight + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Cân nặng: ${dataPantientsReadyExamining.patientsWeight ? dataPantientsReadyExamining.patientsWeight + ' kg' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <TbRulerMeasure style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Vòng đầu: ${dataPantientsReadyExamining.patientsHeadCircumference ? dataPantientsReadyExamining.patientsHeadCircumference + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={12} sx={{display: 'inline-flex'}}>\r\n                                                    <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Địa chỉ: ${dataPantientsReadyExamining.patientsAddress || ''}`}</Typography>\r\n                                                </Grid> \r\n\r\n                                                {previewPredecessor ? \r\n                                                    <>\r\n                                                        <Grid item xs={12} >\r\n                                                            <Box sx={{display: 'flex', flexWrap: 'wrap'}}>\r\n                                                                {previewPredecessor.map((item, index) => (\r\n                                                                    <Typography variant='subtitle1' sx={{ml: 0.5, fontSize: '1.1rem', color: 'mediumblue', fontWeight: 'bolder'}} key={index} >{`${item.categoryContentQuestionName}: ${item.categoryContentAnswer ? 'có' : ''} ${item.categoryContentNote !== null ? `${item.categoryContentNote}` : ''}, `}</Typography>\r\n                                                                ))}\r\n                                                            </Box>\r\n                                                            \r\n                                                        </Grid> \r\n                                                    </>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </Grid>\r\n                                        </>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {/* nội dung khám */}\r\n                            <div className='container-content-examining'>\r\n                                {\r\n                                    loadingPrevDataExamining ? \r\n                                        <>\r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu kỳ khám gần nhất, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    :\r\n                                    prevDataExamining ? \r\n                                        prevDataExamining.healthRecords.length === 1 && prevDataExamining.healthRecords[0].medicalBookId === null ? \r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <Typography variant='h6'>Bệnh nhân không có kỳ khám trước</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <div className='content-examining'><PreviewLastExamining prevDataExamining={prevDataExamining} /></div>\r\n                                    :\r\n                                        null\r\n                                }\r\n                                \r\n                                {categorySelectedExamining.categoryContents ? \r\n                                    <>\r\n                                        <div className='content-examining'>\r\n                                            {loadingContentsExamining ? \r\n                                                <>\r\n                                                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                        <CircularProgress />\r\n                                                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh, hãy chờ một chút...</Typography>\r\n                                                    </Box>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {categorySelectedExamining.newCategoryPre === true && categorySelectedExamining.isLock === true ? \r\n                                                        <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                            <Typography variant='h6'>Bệnh nhân không có tiền căn đang được theo dõi ở mục này</Typography>\r\n                                                        </Box>\r\n                                                    :\r\n                                                        contentCategorySelectedExamining.healthRecordsContentsType !== 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                            categorySelectedExamining.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                                <Box key={categoryContentsIndex} sx={categoryContentsItem.categoryContentTitle === null ? {marginTop: '30px'} : {}}>\r\n\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>{categoryContentsItem.categoryContentTitle || ''}</Typography>\r\n                                                                    {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                        <Box key={`categoryContentQuestionName ${questionIndex}`}>\r\n                                                                            <Grid container rowSpacing={0}>\r\n                                                                                {questionIndex === 0 ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                        </Grid>\r\n\r\n                                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                    <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                </Grid>\r\n\r\n                                                                                                <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            : \r\n                                                                                                <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                        }                                                                             \r\n                                                                                    </> \r\n                                                                                    : \r\n                                                                                    null\r\n                                                                                }\r\n                                                                                \r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1.2rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled={categorySelectedExamining.isLock === true ? true : false} \r\n                                                                                            checked={questionItem.categoryContentAnswer === true ? true : false } \r\n                                                                                            classes={{ root: classes.root }} color='error' \r\n                                                                                            sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} \r\n                                                                                            onClick={() => \r\n                                                                                                dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleAnswerCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer) : handleAnswerCheckQuestion(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer)} />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={7} >\r\n                                                                                            <div className='textfield-for-answer'>\r\n                                                                                                <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                        onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleNoteCheckQuestion(categoryContentsIndex, questionIndex, e.target.value)}\r\n                                                                                                        defaultValue={questionItem.categoryContentNote}\r\n                                                                                                    />\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>   \r\n                                                                                    :\r\n                                                                                    <>\r\n                                                                                        {categorySelectedExamining.categoryOrder === 4 ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8} >\r\n                                                                                                    <div className='textfield-for-answer'>\r\n                                                                                                        <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                                onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                                defaultValue={questionItem.categoryContentNote}\r\n                                                                                                            />\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            :\r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8}>\r\n                                                                                                    <div className='textfield-for-answer' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >\r\n                                                                                                        <input type='text' disabled={categorySelectedExamining.isLock === true ? true : false}\r\n                                                                                                            className='value-for-answer' \r\n                                                                                                            onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                            defaultValue={questionItem.categoryContentNote} \r\n                                                                                                        />\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                        }\r\n                                                                                    </>\r\n                                                                                }\r\n                                                                                \r\n                                                                            </Grid>\r\n                                                                        </Box>\r\n                                                                    ))}\r\n                                                                </Box>\r\n                                                            ))\r\n                                                        :\r\n                                                            contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n                                                                    <TableContainer component={Paper}>\r\n                                                                        <Table stickyHeader>\r\n                                                                            <TableHead>\r\n                                                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                                                    <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n                                                                                </TableRow>\r\n                                                                            </TableHead>\r\n                                                                            <TableBody sx={{borderRadius: '0px'}}>\r\n                                                                                {contentCategorySelectedExamining.categoryContents.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                                    <TableRow hover role=\"checkbox\" key={healthRecordsIndex}>\r\n                                                                                        <TableCell align='left' sx={{width: '158px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{healthRecordsItem.examinationName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '144px'}}>{handleRenderExamsStatus(healthRecordsItem.state)}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '108px'}}>{moment(healthRecordsItem.timeRegister).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '115px'}}>{healthRecordsItem.doctorFullName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: 'auto'}}>{healthRecordsItem.conclusion}</TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                ))}\r\n                                                                            </TableBody>\r\n                                                                        </Table>\r\n                                                                    </TableContainer>\r\n                                                                </>\r\n                                                            :\r\n                                                                \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', lineHeight: 1, mt: 1}}>{currentHealthRecordExamining.healthRecordsName}</Typography>\r\n                                                                    <div className='health-record-content'>\r\n                                                                        <List sx={{p: 0}}>\r\n                                                                            {currentHealthRecordExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => (\r\n                                                                                <div key={`categoryPatients ${categoryPatientsIndex}`}>\r\n                                                                                    <ListItemButton     \r\n                                                                                        sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                                                                        onClick={() => handleOpenHealthRecordsItem(categoryPatientsIndex)}\r\n                                                                                    >\r\n                                                                                        <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseHealthRecordsItem[categoryPatientsIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                                                            <ListItemText primary={categoryPatientsItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                                        </Box>\r\n                                                                                    </ListItemButton>\r\n\r\n                                                                                    <Collapse in={openCollapseHealthRecordsItem[categoryPatientsIndex]} timeout=\"auto\" unmountOnExit>\r\n                                                                                        {categoryPatientsItem.categoryContents.map((categoryPatientsContentsItem, categoryPatientsContentsIndex) => (\r\n                                                                                            <div className='header-health-record' key={categoryPatientsContentsIndex} style={{marginTop: '15px', marginBottom: '15px', border: '2px solid #00bcd4', borderRadius: '20px'}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', textAlign: 'center'}}>{categoryPatientsContentsItem.categoryContentTitle}</Typography>\r\n                                                                                                \r\n                                                                                                <div className='content-health-record' style={{padding: '10px'}} >  \r\n                                                                                                    <Grid container rowSpacing={0}>\r\n                                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryPatientsContentsItem.categoryContentName}</Typography>\r\n                                                                                                        </Grid>\r\n\r\n                                                                                                        <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryPatientsContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                        </Grid>\r\n                                                                                                        \r\n                                                                                                        <Grid item xs={5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryPatientsContentsItem.categoryContentText}</Typography>\r\n                                                                                                        </Grid> \r\n\r\n                                                                                                        {categoryPatientsContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                                                            <Box key={`questionItem ${questionIndex} healthRecordsName ${contentCategorySelectedExamining.healthRecordsName}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                                                 </Grid>    \r\n\r\n                                                                                                                {questionItem.categoryContentQuestionType === 'check' ?\r\n                                                                                                                    <>\r\n                                                                                                                        <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                                                            <Checkbox classes={{ root: classes.root }} checked={questionItem.categoryContentAnswer === true ? true : false }\r\n                                                                                                                                disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                                                                onClick={(e) => handleAnswerCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, questionItem.categoryContentAnswer)} \r\n                                                                                                                            />\r\n                                                                                                                        </Grid>\r\n                                                                                                                    \r\n                                                                                                                        <Grid item xs={5} >\r\n                                                                                                                            <div className='note-for-answer'>\r\n                                                                                                                                <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                        disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                        onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                    />\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                                                                                                                        </Grid>\r\n                                                                                                                    </>\r\n                                                                                                                :\r\n                                                                                                                    <>\r\n                                                                                                                        <Grid item xs={8} >\r\n                                                                                                                            <div className='note-for-answer'>\r\n                                                                                                                                <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                        disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                        onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                    />\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                                                                                                                        </Grid>\r\n                                                                                                                    </>\r\n                                                                                                                }\r\n                                                                                                            </Box>\r\n                                                                                                        ))}\r\n                                                                                                    </Grid>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        ))}\r\n                                                                                    </Collapse>\r\n                                                                                </div>\r\n                                                                            ))}\r\n                                                                        </List>\r\n                                                                        \r\n                                                                        {currentHealthRecordExamining.conclusion !== null ?\r\n                                                                            <>\r\n                                                                                <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                                                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận của bác sĩ: ${currentHealthRecordExamining.conclusion}`}</Typography>\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                            :\r\n                                                                            null\r\n                                                                            \r\n                                                                        }\r\n                                                                        \r\n                                                                    </div>\r\n\r\n                                                                </>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n\r\n            <CompleteExamining openModalCompleteExamining={openModalCompleteExamining} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n                handleCompleteExaminingForPantient={handleCompleteExaminingForPantient} dataExaminingForConclusion={dataExaminingForConclusion}\r\n            />\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n            />\r\n            {/* <AlertConfirm openAlertConfirmModal={openAlertConfirmModal.open} onCloseAlertConfirmModal={setOpenAlertConfirmModal} \r\n                titleConfirm={openAlertConfirmModal.title} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDoctorExamining","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-knkpt.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getReportPatient = async (dateSelectedReport) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Admin/GetReportPatient?dateStart=${dateSelectedReport.dateStart}&dateEnd=${dateSelectedReport.dateEnd}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getReportPatient\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridToolbarExport, GridToolbarColumnsButton, GridToolbarDensitySelector, GridToolbarFilterButton, GridToolbarContainer, viVN } from '@mui/x-data-grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//icon\r\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\r\n//moment\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\n//api\r\nimport { getReportPatient } from '../../Service/StatisticsService';\r\n\r\nfunction MainDashboard() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [dateSelectedReport, setDateSelectedReport] = useState({dateStart: '', dateEnd: ''})\r\n    const [mainDataDashboard, setMainDataDashboard] = useState([]);\r\n    const [loadingDataDashboard, setLoadingDataDashboard] = useState(false);\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'STT', width: 120, align: 'left', headerAlign: 'left', },\r\n        { field: 'fullName', headerName: 'Họ tên', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'dayExam', headerName: 'Ngày khám', width: 180, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'gender', headerName: 'Giới tính', width: 140, align: 'left', headerAlign: 'left' },\r\n        { field: 'dayOfBirth', headerName: 'Ngày sinh', width: 165, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'examName', headerName: 'Kỳ khám', width: 170, align: 'left', headerAlign: 'left' },\r\n        { field: 'phone', headerName: 'Điện thoại', width: 170, type: 'number', align: 'left', headerAlign: 'left'},\r\n        { field: 'district', headerName: 'Quận/Huyện', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'province', headerName: 'Tỉnh/Thành phố', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'address', headerName: 'Địa chỉ', width: 700, align: 'left', headerAlign: 'left' },\r\n    ];\r\n\r\n    // Hàm xử lý xuất file Excel\r\n    const handleExportExcel = () => {\r\n        // Tạo lại dữ liệu với các tiêu đề cột tùy chỉnh\r\n        const formattedRows = mainDataDashboard.map((row, index) => ({\r\n            'STT': index + 1,\r\n            'Họ tên': row.fullName, \r\n            'Ngày khám': row.dayExam,\r\n            'Giới tính': row.gender,\r\n            'Ngày sinh': row.dayOfBirth,\r\n            'Kỳ khám': row.examName,\r\n            'Điện thoại': row.phone,\r\n            'Quận/Huyện': row.district,\r\n            'Tỉnh/Thành phố': row.province,\r\n            'Địa chỉ': row.address\r\n          }));\r\n\r\n        // Tạo worksheet từ dữ liệu đã định dạng\r\n        const ws = XLSX.utils.json_to_sheet(formattedRows);\r\n\r\n        // Tạo workbook và thêm worksheet vào đó\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n\r\n        // Xuất file Excel\r\n        XLSX.writeFile(wb, `Danh sách bệnh nhân khám bệnh từ ${moment(dateSelectedReport.dateStart).format('DD-MM-YYYY')} đến ${moment(dateSelectedReport.dateEnd).format('DD-MM-YYYY')}.xlsx`);\r\n    };\r\n\r\n    // Custom toolbar bao gồm nút xuất Excel\r\n    const CustomToolbar = ({ handleExportExcel }) => {\r\n        return (\r\n            <GridToolbarContainer >\r\n                {/* Các chức năng của GridToolbar mặc định */}\r\n                <GridToolbarColumnsButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarFilterButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarDensitySelector sx={{fontSize: '16px'}}/>\r\n                <Button variant=\"text\" startIcon={< RiFileExcel2Fill/>} onClick={handleExportExcel} sx={{fontSize: '16px'}}>Xuất Excel</Button>\r\n            </GridToolbarContainer>\r\n        );\r\n    };\r\n\r\n    const onChangeDateStart = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateStart = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const onChangeDateEnd = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateEnd = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const handleGetReportPatient = async () => {\r\n        setLoadingDataDashboard(true);\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        const responseGetReportPatient = await getReportPatient(dateSelectedReport);\r\n        const editMainDataDashboard = responseGetReportPatient.map((item) => {\r\n            const dataReportPatient = {\r\n                patientId: item.patientId,\r\n                fullName: item.fullName,\r\n                dayExam: moment(item.dayExam).format('DD/MM/YYYY'),\r\n                gender: item.gender ? 'Nam' : 'Nữ',\r\n                dayOfBirth: moment(item.dayOfBirth).format('DD/MM/YYYY'),\r\n                examName: item.examName,\r\n                phone: item.phone,\r\n                district: item.district,\r\n                province: item.province,\r\n                address: item.address\r\n            }\r\n            return dataReportPatient\r\n        })\r\n        setMainDataDashboard(editMainDataDashboard);\r\n        setLoadingDataDashboard(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Admin'){\r\n                history.push('/404');\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(dateSelectedReport.dateStart !== '' && dateSelectedReport.dateEnd !== ''){\r\n            handleGetReportPatient();\r\n        }\r\n    }, [dateSelectedReport])\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1}}>\r\n            <Box sx={{display: 'flex', justifyContent: 'center'}}>\r\n                <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                    <DemoContainer components={['DatePicker']}> \r\n                        <DatePicker label=\"Từ ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateStart(value)}/> \r\n                        <DatePicker label=\"Đến ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateEnd(value)}/>                                   \r\n                    </DemoContainer>\r\n                </LocalizationProvider>\r\n            </Box>\r\n\r\n            <Box sx={{ height: 600, width: '100%', mt: 1.2 }}>\r\n                {loadingDataDashboard ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '80%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>  \r\n                    </>\r\n                    :\r\n                        mainDataDashboard.length !== 0 ?\r\n                            <>       \r\n                                <DataGrid \r\n                                    style={{ fontSize: '18px' }}\r\n                                    localeText={viVN.components.MuiDataGrid.defaultProps.localeText}\r\n                                    rows={mainDataDashboard.map((row, index) => ({\r\n                                        ...row,\r\n                                        id: index + 1,\r\n                                    }))}\r\n                                    columns={columns}\r\n                                    pageSizeOptions={[1]}\r\n                                    components={{\r\n                                        Toolbar: CustomToolbar, // Chèn toolbar vào đây\r\n                                      }}\r\n                                      componentsProps={{\r\n                                        toolbar: { handleExportExcel }, // Truyền hàm export vào props của toolbar\r\n                                      }}\r\n                                    disableRowSelectionOnClick\r\n                                    sx={{\r\n                                        '.MuiTablePagination-selectLabel': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                        '.MuiTablePagination-displayedRows': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        :\r\n                           <h5 style={{textAlign: 'center', color: 'blue'}}>Hãy chọn khoảng ngày khám để lấy dữ liệu thống kê</h5>\r\n                }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainDashboard","import { BrowserRouter, Route, Link, Switch, NavLink, HashRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport Header from \"../components/Nav/Header.jsx\";\nimport Page404 from \"../components/ErrorPage/Page404\";\nimport Login from \"../components/LoginAccount/Log-in\";\nimport MainMedicalRegister from \"../components/MedicalRegister/MainMedicalRegister.jsx\";\nimport MainAppointmentExamining from \"../components/MedicalAppointment/MainAppointmentExamining.jsx\";\nimport MainDoctorExamining from \"../components/DoctorExamining/MainDoctorExamining.jsx\";\nimport MainDashboard from \"../components/Dashboard/MainDashboard.jsx\";\n\nconst AppRoutes = (props) => {\n  return (\n    <>\n      <HashRouter>\n        {/* <Header />{\" \"} */}\n        <Switch>\n          <Route exact path=\"/\">home{\" \"}</Route>\n          <Route path=\"/login\"><Login /></Route>\n          <PrivateRoutes path=\"/medicalregister\" component={MainMedicalRegister}></PrivateRoutes>\n          <PrivateRoutes path=\"/doctor-examining\" component={MainDoctorExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/remind-examining\" component={MainAppointmentExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/dashboard\" component={MainDashboard}></PrivateRoutes>\n          <Route path=\"*\"><Page404 />{\" \"}</Route>\n          {/* <PrivateRoutes path=\"/users\" component={Users} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\nexport default AppRoutes;\n","import \"./App.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Nav/Header\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <div className=\"header-container\">\n          <Header />\n        </div>\n\n        <div className=\"app-container\">\n          <AppRoutes />\n        </div>\n      </HashRouter>\n\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}