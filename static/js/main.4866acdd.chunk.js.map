{"version":3,"sources":["components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop.jsx","Service/UserService.jsx","context/UserContext.jsx","routes/PrivateRoutes.js","components/ManageUserManual/UserManual.jsx","assets/image/logo.png","components/Nav/Header.jsx","components/ErrorPage/Page404.js","components/ManageRegister/Register.jsx","components/LoginAccount/Log-in.jsx","Service/MedicalRegisterService.jsx","components/ManageSelectedDoctorExamining/SelectedDoctorExamining.jsx","components/ManageAlertProcessing/AlertProcessing.jsx","Service/PlaceService.jsx","components/ManageInfoPantients/ManageInfoPantients.jsx","components/MedicalRegister/ListPatientsRegister.jsx","components/ManageExaminingSession/ExaminingSession.jsx","components/ManageOldDisease/OldDisease.jsx","components/MedicalRegister/BookMedical.jsx","components/MedicalRegister/MainMedicalRegister.jsx","components/ManageCompleteExamining/CompleteExamining.jsx","components/ManageAlertConfirm/AlertConfirm.jsx","components/ManageHealthRecords/HealthRecords.jsx","components/DoctorExamining/MainDoctorExamining.jsx","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["AlertProcessingBackdrop","props","_jsx","Backdrop","sx","color","zIndex","theme","drawer","open","openAlertProcessingBackdrop","children","_jsxs","Box","display","flexDirection","alignItems","CircularProgress","Typography","mt","variant","alertTitle","backendURL","createConfig","token","localStorage","getItem","headers","Authorization","concat","UserContext","React","createContext","UserProvider","_ref","userDefault","isAuthenticated","isLogin","user","setUser","useState","setOpenAlertProcessingBackdrop","fetchUser","async","response","config","axios","get","then","data","catch","error","status","getUserLogin","userId","userFullName","positionName","checkJWTExpire","result","getJWT","decodeJWT","JSON","parse","atob","split","e","parseJwt","currentDate","Date","exp","getTime","removeItem","useEffect","_Fragment","Provider","value","loginContext","userContextLogin","logoutContext","PrivateRoutes","Route","path","component","Redirect","to","UserManual","Dialog","fullWidth","maxWidth","openModalUserManual","disableEscapeKeyDown","DialogTitle","fontWeight","fontSize","textAlign","textTransform","IconButton","onClick","setOpenModalUserManual","position","right","top","CloseIcon","DialogContent","dividers","pl","pr","withRouter","useContext","location","useLocation","history","useHistory","anchorEl","setAnchorEl","Boolean","handleClick","event","currentTarget","handleClose","actionNursing","key","label","icon","LocalHospitalIcon","LinkComponent","NavLink","LocalPhoneIcon","actionDoctor","MedicationLiquidIcon","actionAdmin","BarChartIcon","userAction","setUserAction","pathname","findIndex","action","handleLogout","push","width","AppBar","Toolbar","backgroundColor","height","Link","Avatar","src","Logo","mb","mr","BottomNavigation","showLabels","justifyContent","flexGrow","map","actionItem","BottomNavigationAction","Button","Menu","onClose","MenuItem","HelpIcon","titleAccess","cursor","exact","Page404","className","CreateAccount","showPassword","setShowPassword","handleCloseModalRegister","reason","setOpenModalRegister","openModalRegister","m","p","TextField","type","InputProps","endAdornment","InputAdornment","handleClickShowPassword","padding","VisibilityIcon","VisibilityOffIcon","Autocomplete","options","id","option","renderInput","params","Stack","spacing","direction","style","margin","Login","userAccount","setUserAccount","password","handleLogin","userName","toast","post","userLogin","setItem","tokenDTO","Container","borderRadius","ml","autoComplete","onChange","onChangeUserName","target","prevUserAccount","onChangeUserPassword","onKeyDown","which","code","handlePressEnter","Register","getListMedicalExaminationsGiveRegister","dayOfBirth","SelectedDoctorExamining","listDoctor","setListDoctor","selectedDoctor","setSelectedDoctor","handleCreateCurrentDoctorExamining","toastId","_","isEqual","currentDoctorExamining","warning","userIdDoctor","createCurrentDoctorExamining","success","setCurrentDoctorExamining","setOpenSelectedDoctorExaminingModal","handleGetGetListDoctor","getGetListDoctor","indexResponseListDoctor","openSelectedDoctorExaminingModal","length","handleCloseSelectedDoctorExaminingModal","marginBottom","PopperComponent","Popper","clientWidth","undefined","placement","getOptionLabel","renderOption","onSelectDoctor","disableClearable","popupIcon","AlertProcessing","openAlertProcessing","getListProvince","getListDistrict","provinceId","getListWard","districtId","getFullAddressByIdWard","codeWard","ManageInfoPantients","dataPatientInfoDefault","examinationId","weight","headCircumference","vaccination","patient","identifier","address","fullName","gender","fullNameMother","phoneMother","fullNameFather","phoneFather","patientId","dataPatientInfoErrorDefault","title","isError","openTooltip","focus","examiningSession","province","district","ward","listGender","genderOrder","genderName","genderValue","selectedAutoCompleteDefault","openOption","loading","typingRef","useRef","dateFieldRef","setLoading","dataPatientInfoNotEdit","setDataPatientInfoNotEdit","dataPatientInfo","setDataPatientInfo","dataPatientInfoError","setDataPatientInfoError","selectedAutoComplete","setSelectedAutoComplete","listExaminingSession","setListExaminingSession","listProvince","setListProvince","listDistrict","setListDistrict","list","listWard","setListWard","focusField","setFocusField","setOpenAlertProcessing","tooltipTheme","createTheme","components","MuiTooltip","defaultProps","arrow","componentsProps","tooltip","bgcolor","slotProps","popper","modifiers","name","offset","handleFocus","fieldName","prevSelectedAutoComplete","handleBlur","handleKeyDown","test","preventDefault","filterOptions","inputValue","lowercasedInput","toLowerCase","filter","lowercasedFullName","initials","word","join","includes","onChangeDOBToGetExaminingSession","responseListMedicalExaminationsGiveRegister","formattedDate","exams","handleCloseModalInfoPantients","prevListDistrict","prevListWard","setSelectedPantientInfo","setOpenModalInfoPantients","handleUpdateMedicalRegister","checkValidate","_dataPatientInfoError","isValid","Object","values","every","item","current","put","dataPatientsRegister","updateMedicalRegister","setCompleteMedicalRegister","responseListProvince","handleGetListProvince","selectedPantientInfo","setIsContinueUpdateMedicalRegister","editPropsDataPatientInfo","cloneDeep","responseListDistrict","provinceCode","responseListWard","districtCode","selectedGender","find","indexListExamining","indexListProvince","indexListDistrict","indexListWard","wardCode","handleApplyPantientDataToField","openModalInfoPantients","isContinueUpdateMedicalRegister","pt","pb","flexWrap","ThemeProvider","Tooltip","marginTop","inputProps","maxLength","inputRef","input","defaultValue","takenValue","clearInterval","setTimeout","prevDataPatientsRegister","onChangeIdentifier","prevDataPatientInfo","onChangeFullName","onSelectGender","onFocus","onBlur","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DemoContainer","DatePicker","format","moment","disableFuture","disableOpenPicker","textField","_d","today","yearsDifference","getFullYear","monthsDifference","getMonth","daysDifference","getDate","age","totalMonths","totalDays","isNaN","onChangeDOB","noOptionsText","onSelectExaminingSession","size","onSelectProvine","onSelectDistrict","onSelectWard","onChangeAddress","onChangeFullNameMother","onChangePhoneMother","onChangeFullNameFather","onChangePhoneFather","onChangeHeight","onChangeWeight","onChangeHeadCircumference","FormControlLabel","control","Checkbox","checked","onChangeVaccination","bool","DialogActions","ListPatientsRegister","activeChip","setActiveChip","chipOrder","chipLabel","listPantientChipState","setListPantientChipState","chipContent","listDataPatientsRegister","setListDataPatientsRegister","searchPatientsQuery","setSearchPatientsQuery","listDataPatientsRegisterState","setListDataPatientsRegisterState","listDataPatientsRegisterSort","setListDataPatientsRegisterSort","searchPatients","patients","searchTerm","lowerCaseSearchTerm","patientObj","handleGetRegistersByDateNow","getRegistersByDateNow","listPantientRegisterWaiting","patientsRegisterItem","state","updatedList","index","listCountState","listPantientRegisterExamining","listPantientRegisterDone","setComponent1Loading","keyCode","document","addEventListener","removeEventListener","completeMedicalRegister","Skeleton","EditIcon","TableContainer","Paper","boxShadow","overflowX","pantientChipStateItem","pantientChipStateIndex","Badge","badgeContent","Chip","handleSelectedChip","chipIndex","placeholder","handleSearchPantient","startAdornment","SearchIcon","Table","stickyHeader","minWidth","TableHead","TableRow","TableCell","align","TableBody","patientsRegisterSortItem","patientsRegisterSortIndex","hover","role","onDoubleClick","handleSelectedPantientInfo","order","whiteSpace","overflow","textOverflow","fullAddress","ExaminingSession","isConfirmOpen","setIsConfirmOpen","handleMedicalRegister","oldDisease","createMedicalBackRegister","handleResetField","setIsContinueSelectedExaminingSession","setOpenModalExaminingSession","createMedicalRegister","handleOpenConfirm","openModalExaminingSession","handleListMedicalExaminationsGiveRegister","isContinueSelectedExaminingSession","monthsOfAge","Grid","container","rowSpacing","xs","border","oldExams","oldExamItem","oldExamIndex","RadioGroup","onChangeRadioSelect","examItem","examIndex","Radio","OldDisease","dataPatientsForSearchOldDiseaseDefault","phone","dataPatientsForSearchOldDiseaseErrorDefault","listFoundOldDisease","setListFoundOldDisease","dataPatientsForSearchOldDisease","setDataPatientsForSearchOldDisease","dataPatientsForSearchOldDiseaseError","setDataPatientsForSearchOldDiseaseError","selectedRowIndex","setSelectedRowIndex","formRef","tableRef","handleEnterPress","_dataPatientsForSearchOldDiseaseError","handleCloseModalOldDisease","setOpenModalOldDisease","handleFindOldDisease","validate","getListOldDisease","reset","querySelectorAll","forEach","dispatchEvent","Event","bubbles","handleApplyDataPatientOldDisease","responseVaccinationByPatientId","getVaccinationByPatientId","foundOldDiseaseItem","dataPantientOldOldDiseaseRegister","medicalTypeId","setDataPatientsRegister","openModalOldDisease","ref","autoFocus","prevDataPatientsForSearchOldDisease","onChangePatientId","date","onChangeDayOfBirth","onChangePhone","tabIndex","prevIndex","Math","min","max","handleTableKeyDown","foundOldDiseaseIndex","selected","BookMedical","dataPatientsRegisterDefault","autocompleteValueDefault","medicalType","dataPatientsRegisterErrorDefault","listMedicalType","medicalTypeOrder","medicalTypeName","dataPatientsRegisterError","setDataPatientsRegisterError","autocompleteValue","setAutocompleteValue","firstFocusRef","prevAutocompleteValue","_dataPatientsRegisterError","handleOpenModalOldDisease","getElementById","_autocompleteValue","indexListGender","indexListMedicalType","handleApplyPantientOldDiseaseData","onF2Press","setOnF2Press","onF4Press","setOnF4Press","onF8Press","setOnF8Press","minHeight","PopperProps","disabled","WebkitTextFillColor","InputLabelProps","shrink","DateField","disablePortal","onSelectMedicalType","paddingLeft","paddingRight","multiline","rows","onChangeReason","MainMedicalRegister","component1Loading","currentDoctorExaminingDefault","setHandleResetField","handleOpenModalExaminingSession","setHandleOpenModalExaminingSession","setHandleOpenModalOldDisease","handleGetCurrentDoctorExamining","getCurrentDoctorExamining","marginLeft","CompleteExamining","mainDataExaminingForConclusion","setMainDataExaminingForConclusion","openModalCompleteExamining","handleSetDataCompleteExamining","editDataExaminingForConclusion","clone","dataExaminingForConclusion","categories","categoriesItem","categoryContents","categoryContentsItem","categoryContentQuestions","List","categoriesIndex","categoryName","categoryContentsIndex","categoryContentTitle","questionItem","questionIndex","borderRight","categoryContentName","categoryContentQuestionType","CheckBoxIcon","lineHeight","categoryContentCheck","categoryContentText","borderTop","categoryContentQuestionName","categoryContentAnswer","TextareaAutosize","categoryContentNote","setOpenModalCompleteExamining","AlertConfirm","openAlertConfirmModal","titleConfirm","onConfirmAlertConfirmModal","onCloseAlertConfirmModal","HealthRecords","handleCloseModalHealthRecords","setOpenModalHealthRecords","MainDataExaminingFake","dataExaminingSelected","setDataExaminingSelected","openCollapse","setOpenCollapse","currentContentExamining","setCurrentContentExamining","processedData","category","firstContent","contentQuantity","openModalHealthRecords","categoryItem","categoryIndex","ListItemButton","prevOpen","newOpen","handleOpenCollapseByCategory","ListItemIcon","SendIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","contentItem","contentIndex","console","log","outline","Pagination","count","page","handleOnChangePage","prevCurrentContentExamining","newContentExamining","a","b","MainDoctorExamining","listDataPantientsWaitExamining","setListDataPantientsWaitExamining","stt","patientsId","patientsName","patientsDOB","patientsGender","patientsHeight","patientsWeight","patientsPhone","patientsAddress","dataPantientsReadyExamining","setDataPantientsReadyExamining","mainDataExamining","setMainDataExamining","openCollapseHealthRecords","setOpenCollapseHealthRecords","openCollapseHealthRecordsItem","setOpenCollapseHealthRecordsItem","categorySelectedExamining","setCategorySelectedExamining","contentCategorySelectedExamining","setContentCategorySelectedExamining","healthRecordsContents","setHealthRecordsContents","currentContentHealthRecords","setCurrentContentHealthRecords","setDataExaminingForConclusion","openModalAlertConfirm","setOpenModalAlertConfirm","createSelectedQuestionsExaminingForConclusion","currentCategory","categoryContentQuestion","questionOrder","_dataExaminingForConclusion","removeSelectedQuestion","categoryContentQuestionOrder","existingQuestion","question","categoryContentQuestionsItem","classes","makeStyles","root","useStyles","handleBeginExaminingForPantient","_dataPantientsReadyExamining","categoryPres","categoryPresItem","categoryPresIndex","categoryPresOrder","prevListDataPantientsWaitExamining","dataPantientitem","editDataCategoryPresForConclusion","mainCategoryContentsExamining","editDataHealthRecordsForConclusion","healthRecords","healthRecordsItem","medicalRegisterId","conclusion","alert","clickable","dataPantientItem","dataPantientIndex","handleSelectPantientExamining","handleSelectCategoryClick","categoryIncludeCotent","newCategoryPre","edge","CheckCircleIcon","handleSelectHealthRecords","healthRecordsContentsType","transform","healthRecordsIndex","handleSelectHealthRecordsItem","medicalBookId","examinationName","healthRecordsState","healthRecordsName","newMedicalBook","MainDataHealthRecordsFake","medicakBook","categoryPatients","editHealthRecordsContent","categoryPatientsItem","categoryPatientsIndex","currentHealthRecordsContent","updateHealthRecordsContent","editDataHealthRecordsItemForConclusion","dataHealthRecordsItemForConclusionItem","FiberManualRecordIcon","columnSpacing","sm","md","PinIcon","PersonIcon","CalendarMonthIcon","InfoIcon","MaleIcon","FemaleIcon","GiBodyHeight","GiWeightScale","PhoneIcon","Home","handleAnswerCheckQuestion","answer","_categorySelectedExamining","handleNoteCheckQuestion","categoryContentOrder","handleAnswerValueQuestion","DescriptionIcon","timeRegister","doctorFullName","handleOpenHealthRecordsItem","handleAnswerCheckQuestionHealthRecords","_healthRecordsContents","handleNoteCheckQuestionHealthRecords","handeOnChangePageHealthRecords","_contentCategorySelectedExamining","AppRoutes","HashRouter","Header","Switch","App","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4866acdd.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessingBackdrop(props) {\r\n    return (\r\n        <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={props.openAlertProcessingBackdrop}>\r\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <CircularProgress color='inherit' />\r\n                <Typography sx={{mt: 1.4,}} variant='subtitle1'>{props.alertTitle}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n\r\nexport default AlertProcessingBackdrop\r\n","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\nconst userLogin = async (userId, password) => {\r\n  return await axios.post(`${backendURL}/api/UserAccount/Login`, { userId, password })\r\n  .then(function (response) {\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n};\r\n\r\nconst getUserLogin = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetUserLogin`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst getGetListDoctor = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetDoctors`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nexport {\r\n    userLogin, \r\n    getUserLogin, getGetListDoctor\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n//modal\r\nimport AlertProcessingBackdrop from '../components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//api\r\nimport { getUserLogin } from '../Service/UserService';\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n\r\n    const userDefault = {\r\n        isAuthenticated: false,\r\n        isLogin: false,\r\n        token: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(userDefault);\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const loginContext = (userContextLogin) => {\r\n        setUser({ ...userContextLogin });\r\n    };\r\n\r\n    const logoutContext = () => {\r\n        setUser({ ...userDefault });\r\n    }\r\n\r\n    const fetchUser = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        const response = await getUserLogin();\r\n        setUser({\r\n            isAuthenticated: true, \r\n            isLogin: true,\r\n            userId: response.userId,\r\n            userFullName: response.userFullName,\r\n            positionName: response.positionName\r\n        })\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const parseJwt = (token) => {\r\n        try {\r\n          return JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n    };\r\n\r\n    const checkJWTExpire = () => {\r\n        let result = false;\r\n        let getJWT = localStorage.getItem('jwt');\r\n        if(getJWT){\r\n            let decodeJWT = parseJwt(getJWT);\r\n            let currentDate  = new Date();\r\n\r\n            if(decodeJWT.exp * 1000 < currentDate.getTime()) {\r\n                //console.log('Token đã hết hạn hoặc không tồn tại')\r\n                localStorage.removeItem('jwt'); //xóa localStorage\r\n                return result \r\n            }\r\n            else{\r\n                //console.log('token còn hạn');\r\n                result = true;\r\n                return result\r\n            }\r\n        }\r\n        else{\r\n            return result\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const result = checkJWTExpire();\r\n        if(result){\r\n            fetchUser();\r\n        }else{\r\n            //không có token\r\n            setUser(userDefault);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <UserContext.Provider value={{ user, loginContext, logoutContext }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang tải thông tin người dùng'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst PrivateRoutes = (props) => {\n  const token = localStorage.getItem('jwt');\n\n  if (token) {\n    return (\n      <>\n        <Route path={props.path} component={props.component}></Route>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <Redirect to='/login'></Redirect>\n      </>\n    )\n  }\n};\nexport default PrivateRoutes;\n","import React from 'react'\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nfunction UserManual(props) {\r\n\r\n    return (\r\n        <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalUserManual} disableEscapeKeyDown={true}>\r\n            <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Hướng dẫn sử dụng</DialogTitle>\r\n            <IconButton onClick={() => props.setOpenModalUserManual(false)} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Điều dưỡng</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F2 hoặc nút Đăng ký trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Làm mới form thông tin đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F4 hoặc nút Làm mới trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Tìm bệnh cũ</Typography>\r\n                        <Typography>Nhấn phím F8 hoặc nút Bệnh cũ trên màn hình, sau khi nhập thông tin và tìm được bệnh nhân, click đúp thông tin bệnh nhân để form thông tin đăng ký khám nhận dữ liệu</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin bệnh nhân</Typography>\r\n                        <Typography>Trong bảng danh sách đăng ký khám trong ngày, nhấn vào bệnh nhân để mở form sửa thông tin</Typography>\r\n                    </Box>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Bác sĩ</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Khám bệnh</Typography>\r\n                        <Typography>Bước 1: Nhấn chọn bệnh nhân để khám</Typography>\r\n                        <Typography>Bước 2: Nhấn F2 để bắt đầu khám</Typography>\r\n                        <Typography>Bước 3: Nhấn F4 để kết thúc khám</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin hỏi bệnh khi đã kết thúc khám</Typography>\r\n\r\n                    </Box>\r\n                \r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Admin</Typography>\r\n                {/* <Typography variant='subtitle1' sx={{color: 'red'}}>Nếu có sự cố liên hệ zalo: 0987654321 (chỉ phục vụ giờ hành chính)</Typography> */}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default UserManual","export default __webpack_public_path__ + \"static/media/logo.e5a4a234.png\";","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\nimport UserManual from '../ManageUserManual/UserManual';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nfunction Header(props) {\r\n\r\n  const { user, logoutContext } = useContext(UserContext);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [openModalUserManual, setOpenModalUserManual] = useState(false);\r\n\r\n  //mui state menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  \r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const actionNursing = [\r\n    { key: 'medicalRegister', maxWidth: '114px', label: 'Đăng ký khám', icon: <LocalHospitalIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/medicalregister\" },\r\n    { key: 're-examining', maxWidth: '95px', label: 'Nhắc khám', icon: <LocalPhoneIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/re-examination\" },\r\n  ]\r\n\r\n  const actionDoctor = [\r\n    { key: 'examining', maxWidth: '100px', label: 'Khám bệnh', icon: <MedicationLiquidIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/doctor-examining\" },\r\n  ]\r\n\r\n  const actionAdmin = [\r\n    { key: 'statistical', maxWidth: '83px', label: 'Thống kê', icon: <BarChartIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/dashboard\" },\r\n  ]\r\n\r\n  const [userAction, setUserAction] = useState([]);\r\n\r\n  const handleChangeURL = (pathname) => {\r\n    const actionIndex = userAction.findIndex(action => action.to === pathname);\r\n    return actionIndex;\r\n  }\r\n\r\n  const value = handleChangeURL(props.location.pathname);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('jwt'); //xóa localStorage\r\n    logoutContext();\r\n    setAnchorEl(null);\r\n    history.push('/login');\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(user.positionName === 'Nursing'){        \r\n      setUserAction(actionNursing);\r\n    }\r\n    else if(user.positionName === 'Doctor'){\r\n      setUserAction(actionDoctor);\r\n    }\r\n    else if(user.positionName === 'Admin'){\r\n      setUserAction(actionAdmin);\r\n    }\r\n  }, [user])\r\n  \r\n  if(location.pathname !== '/login'){\r\n    return (\r\n      <>\r\n        <Box sx={{ width: '100%', position: 'fixed', top: 0}} >\r\n          <AppBar>\r\n            <Toolbar sx={{backgroundColor: '#cfe8fc', height: '78px'}}>\r\n              <Link to=\"/\">\r\n                <Avatar src={Logo} sx={{ width: 62, height: 62, mt: 'auto', mb: 'auto', mr: 4 }} />\r\n              </Link>\r\n                {user.isAuthenticated === true || token ? \r\n                  <>\r\n                    <BottomNavigation showLabels value={value}\r\n                      sx={{display: 'flex', justifyContent: 'flex-start', backgroundColor: '#cfe8fc', flexGrow: 1}}>\r\n                      {userAction.map(actionItem => (\r\n                        <BottomNavigationAction\r\n                          key={actionItem.key}\r\n                          label={actionItem.label}\r\n                          icon={actionItem.icon}\r\n                          LinkComponent={actionItem.LinkComponent}\r\n                          to={actionItem.to}\r\n                          sx={{color: '#000', maxWidth: actionItem.maxWidth}}\r\n                        />\r\n                      ))}  \r\n                    </BottomNavigation>\r\n\r\n                    <Button onClick={handleClick} sx={{color: '#000', textTransform: 'none'}}>{user.userFullName}</Button>\r\n                    <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\r\n                      <MenuItem>Đổi mật khẩu</MenuItem>\r\n                      <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                    </Menu>\r\n                    <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                  </>\r\n                  :\r\n                    <>\r\n                      <Box sx={{position: 'absolute', right: 22}}>\r\n                        <NavLink exact to=\"/login\"><Button sx={{textTransform: 'none', color: '#000'}}>Đăng nhập</Button></NavLink>\r\n                        <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                      </Box>\r\n                    </>\r\n                  }            \r\n                </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n  \r\n        <UserManual openModalUserManual={openModalUserManual} setOpenModalUserManual={setOpenModalUserManual}/>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../ErrorPage/Page500.scss\";\nconst Page404 = () => {\n  let history = useHistory();\n  const handleBack = () => {\n    history.push(\"/\");\n  };\n  return (\n    <div>\n      <div className=\"section\">\n        <h1 className=\"error\">404</h1>\n        <div className=\"page\">\n          Oh snap!!! The page you are looking for is not found.\n        </div>\n        <div>\n          <a className=\"back-home\" onClick={() => handleBack()}>\n            Back to home\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Page404;\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CreateAccount = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleCloseModalRegister = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalRegister(false);\r\n      }\r\n    }\r\n\r\n    const position = [\r\n      {id: '1', positionName: 'Điều dưỡng'},\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n          <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalRegister} onClose={(event, reason) => handleCloseModalRegister(event, reason)} disableEscapeKeyDown={true}  >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n            <IconButton onClick={() => handleCloseModalRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n              <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} />\r\n              <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }}/>\r\n              <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '46ch', mb: 2.5 }} \r\n                InputProps={{ // <-- This is where the toggle button is added.\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <Autocomplete options={position.map((option) => option.positionName)} renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} sx={{ width: '45.95ch', mb: 2.5 }}/>\r\n              <Stack spacing={2} direction=\"column\">\r\n                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleCloseModalRegister()}>Tạo tài khoản</Button>\r\n              </Stack>\r\n            \r\n            </DialogContent>\r\n          </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAccount","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Register from '../ManageRegister/Register';\r\nimport { toast } from 'react-toastify';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//api\r\nimport { userLogin } from '../../Service/UserService';\r\n\r\nconst Login = () => {\r\n    const { user, loginContext } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [userAccount, setUserAccount] = useState({userId: '', password: ''})\r\n    const [openModalRegister, setOpenModalRegister] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const onChangeUserName = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                userId: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const onChangeUserPassword = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                password: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if(userAccount.userName === ''){\r\n            toast.error('Bạn chưa nhập tài khoản!')\r\n        }\r\n        else if(userAccount.password === ''){\r\n            toast.error('Bạn chưa nhập mật khẩu!');\r\n        }\r\n        else{\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const response = await userLogin(userAccount.userId, userAccount.password);\r\n            setOpenAlertProcessingBackdrop(false);\r\n            if(response.status !== 200){\r\n                toast.error(response.data);\r\n            }\r\n            else{\r\n                loginContext(\r\n                    {\r\n                        isAuthenticated: true, \r\n                        isLogin: true,\r\n                        userId: response.data.userId,\r\n                        userFullName: response.data.userFullName,\r\n                        positionName: response.data.positionName\r\n                    }\r\n                )\r\n\r\n                localStorage.setItem('jwt', response.data.tokenDTO.token)\r\n\r\n                if(response.data.positionName === 'Nursing'){\r\n                    history.push('/medicalregister');\r\n                }\r\n                else if(response.data.positionName === 'Doctor'){\r\n                    history.push('/doctor-examining');\r\n                }\r\n                else{\r\n                    history.push('/');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleLogin();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAuthenticated === true) {\r\n            history.push('/');\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        if (token) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box sx={{ mt: 3, borderRadius: '25px' }} >\r\n                    <Box sx={{ p: 7.6 }}>\r\n                        <Avatar src={Logo} sx={{ width: 120, height: 120, ml: 'auto', mr: 'auto', mb: 2 }} />\r\n                        <Typography sx={{ textAlign: 'center', textTransform: 'uppercase', fontWeight: 'bolder', fontSize: '1.15rem', mb: 2, color: '#4caf50' }} variant=\"h5\">Chương trình khám nhi khoa phát triển</Typography>\r\n                        <Box component=\"form\" autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                            <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                            <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 3 }} \r\n                            onChange={(e) => onChangeUserPassword(e.target.value)} onKeyDown={(e) => handlePressEnter(e)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6.5vh', width: '28ch' }} variant=\"contained\" style={{ margin: 'auto' }} onClick={(e) => handleLogin()}>Đăng nhập</Button>\r\n                                <Typography sx={{textAlign: 'center'}} variant=\"subtitle1\">Chưa có tài khoản? <strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Đăng ký</strong></Typography>\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Register\r\n                openModalRegister={openModalRegister} setOpenModalRegister={setOpenModalRegister}\r\n            />\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang đăng nhập'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst createMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/Register`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createMedicalBackRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/BackRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createCurrentDoctorExamining = async (userIdDoctor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/SetDoctorExaming/${userIdDoctor}`, \r\n        {}, // Body của request, có thể là {} hoặc object\r\n        {\r\n            headers: {\r\n                \"content-type\": \"text/plain; charset=utf-8\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getRegistersByDateNow = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetRegistersByDateNow`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveRegister = async (dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListOldDisease = async (patientId, phone, fullName, dayOfBirth, gender) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/SearchPatients?patientId=${patientId}&phone=${phone}&fullName=${fullName}&dayOfBirth=${dayOfBirth}&gender=${gender}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getVaccinationByPatientId = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetVaccinationByPatientId/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getCurrentDoctorExamining = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetDoctorExamining`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst updateMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/EditRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    createMedicalRegister, createMedicalBackRegister, createCurrentDoctorExamining,\r\n    getRegistersByDateNow, getListMedicalExaminationsGiveRegister, getListOldDisease, getVaccinationByPatientId, getCurrentDoctorExamining,\r\n    updateMedicalRegister\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\n//lodash\r\nimport _ from 'lodash';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Popper from '@mui/material/Popper';\r\n//toast\r\nimport { toast } from 'react-toastify';\r\n//api\r\nimport { getGetListDoctor } from '../../Service/UserService';\r\nimport { createCurrentDoctorExamining } from '../../Service/MedicalRegisterService';\r\nimport { Box } from '@mui/material';\r\n\r\nfunction SelectedDoctorExamining(props) {\r\n\r\n    const [listDoctor, setListDoctor] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n\r\n    const CustomPopper = (props) => {\r\n        return <Popper {...props} style={{ width: props.anchorEl ? props.anchorEl.clientWidth : undefined }} placement=\"bottom-start\" />;\r\n      };\r\n\r\n    const onSelectDoctor = (e, value) => {\r\n        setSelectedDoctor( { userFullName: value.userFullName, userIdDoctor: value.userId } );\r\n    }\r\n\r\n    const handleCloseSelectedDoctorExaminingModal = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            props.setOpenSelectedDoctorExaminingModal(false);\r\n            setSelectedDoctor(null)\r\n        }\r\n    }\r\n\r\n    const handleCreateCurrentDoctorExamining = async () => {\r\n        if(selectedDoctor === null){\r\n            toast.error('Bạn chưa chọn bác sĩ khám!', {toastId: 'error1'})\r\n        }\r\n        else{\r\n            if(_.isEqual(props.currentDoctorExamining, selectedDoctor)){\r\n                toast.warning('Hiện không có gì để lưu', {toastId: 'warning1'})\r\n            }\r\n            else{\r\n                const response = await createCurrentDoctorExamining(selectedDoctor.userIdDoctor);\r\n                toast.success(response.data, {toastId: 'success1'});\r\n                props.setCurrentDoctorExamining(selectedDoctor);\r\n                props.setOpenSelectedDoctorExaminingModal(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleGetGetListDoctor = async () => {\r\n        const response = await getGetListDoctor();\r\n        setListDoctor(response);\r\n        if(props.currentDoctorExamining){\r\n            const indexResponseListDoctor = response.findIndex(listDoctor => listDoctor.userId === props.currentDoctorExamining.userIdDoctor);\r\n            setSelectedDoctor(response[indexResponseListDoctor]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openSelectedDoctorExaminingModal){\r\n            if(listDoctor.length === 0){\r\n                handleGetGetListDoctor();\r\n            }\r\n            else{\r\n                const indexResponseListDoctor = listDoctor.findIndex(listDoctor => listDoctor.userId === props.currentDoctorExamining.userIdDoctor);\r\n                setSelectedDoctor(listDoctor[indexResponseListDoctor]);\r\n            }\r\n        }\r\n    }, [props.currentDoctorExamining, props.openSelectedDoctorExaminingModal])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth='xs' open={props.openSelectedDoctorExaminingModal} onClose={(event, reason) => handleCloseSelectedDoctorExaminingModal(event, reason)} disableEscapeKeyDown={true} >\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>{props.currentDoctorExamining ? 'Thay đổi bác sĩ khám' : 'Chọn bác sĩ khám'}</DialogTitle>\r\n                <IconButton onClick={() => props.setOpenSelectedDoctorExaminingModal(false)}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers >\r\n                    <Box sx={{height: 'auto'}}>\r\n                        <Autocomplete \r\n                            value={selectedDoctor}\r\n                            sx={{marginBottom: '10px'}}\r\n                            options={listDoctor}\r\n                            PopperComponent={CustomPopper}\r\n                            getOptionLabel={(option) => option.userFullName}\r\n                            renderOption={(props, option) => (\r\n                                <li {...props}>\r\n                                    {option.userFullName}\r\n                                </li>\r\n                            )}\r\n                            onChange={(e, value) => onSelectDoctor(e, value)}\r\n                            renderInput={(params) => (\r\n                                <TextField {...params} \r\n                                    label={'Chọn một bác sĩ'} \r\n                                />\r\n                            )}\r\n                            disableClearable // Bỏ icon xóa\r\n                            popupIcon={null} // Bỏ icon dropdown\r\n                        />\r\n\r\n                        <Stack spacing={2} direction=\"column\">\r\n                            <Button sx={{ width: '12ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} \r\n                                onClick={() => handleCreateCurrentDoctorExamining()}>Lưu\r\n                            </Button>\r\n                        </Stack>\r\n                    </Box>\r\n            \r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectedDoctorExamining","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessing(props) {\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={props.openAlertProcessing} disableEscapeKeyDown={true}>\r\n                <DialogContent>\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <CircularProgress/>\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang xử lý...</Typography>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertProcessing","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getListProvince = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/ListProvince`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListDistrict = async (provinceId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListDistrictByIdProvince/${provinceId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListWard = async (districtId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListWardByIdDistrict/${districtId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getFullAddressByIdWard = async (codeWard) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetFullAddressByIdWard/${codeWard}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getListProvince, getListDistrict, getListWard, getFullAddressByIdWard\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport { Autocomplete } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//lodash\r\nimport _ from 'lodash';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { updateMedicalRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalRegisterService';\r\n\r\nfunction ManageInfoPantients(props) {\r\n  const dataPatientInfoDefault = {\r\n    examinationId: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    headCircumference: \"\",\r\n    reason: \"\",\r\n    vaccination: false,\r\n    id: \"\",\r\n    patient: {\r\n      identifier: \"\",\r\n      address: \"\",\r\n      fullName: \"\",\r\n      dayOfBirth: null,\r\n      codeWard: \"\",\r\n      gender: true,\r\n      fullNameMother: \"\",\r\n      phoneMother: \"\",\r\n      fullNameFather: \"\",\r\n      phoneFather: \"\",\r\n      patientId: \"\"\r\n    }\r\n  }\r\n\r\n  const dataPatientInfoErrorDefault = {\r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    examiningSession: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n  } \r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const selectedAutoCompleteDefault = { \r\n    gender: { value: null, openOption: false }, \r\n    examiningSession: {value: null, openOption: false, loading: false},\r\n    province: { value: null, openOption: false }, \r\n    district: { value: null, openOption: false }, \r\n    ward: { value: null, openOption: false },\r\n  }\r\n\r\n  const typingRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  const [dataPatientInfoNotEdit, setDataPatientInfoNotEdit] = useState();\r\n  const [dataPatientInfo, setDataPatientInfo] = useState(dataPatientInfoDefault);\r\n  const [dataPatientInfoError, setDataPatientInfoError] = useState(dataPatientInfoErrorDefault);\r\n    \r\n  const [selectedAutoComplete, setSelectedAutoComplete] = useState(selectedAutoCompleteDefault);\r\n\r\n  const [listExaminingSession, setListExaminingSession] = useState([]);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f',\r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -8],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.gender.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'ExaminingSession'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.examiningSession.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else{\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      //const _dataPatientInfoError = {...dataPatientInfoError};\r\n      // if(fieldName === 'patientId'){\r\n      //   _dataPatientInfoError.patientId.title = '';\r\n      //   _dataPatientInfoError.patientId.openTooltip = false;\r\n      //   setDataPatientInfoError(_dataPatientInfoError);\r\n      // }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.dayOfBirth.title = '';\r\n      //     _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientInfoError.dayOfBirth.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneMother.title = '';\r\n      //     _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneMother.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneFather'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneFather.title = '';\r\n      //     _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneFather.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'Gender'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.gender.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'ExaminingSession'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n      //     prevSelectedAutoComplete.examiningSession.openOption = false\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Province'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.province.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'District'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.district.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Ward'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.ward.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.gender.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'ExaminingSession'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n          prevSelectedAutoComplete.examiningSession.openOption = false\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.district.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.ward.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n  \r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n  \r\n      return (lowercasedFullName.includes(lowercasedInput) || initials.includes(lowercasedInput));\r\n    });\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientInfoError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientInfoError.identifier.openTooltip = true;\r\n          _dataPatientInfoError.identifier.isError = true;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n        else{\r\n          setDataPatientInfo(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientInfoError.identifier.title = '';\r\n          _dataPatientInfoError.identifier.openTooltip = false;\r\n          _dataPatientInfoError.identifier.isError = false;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.identifier.title = '';\r\n      _dataPatientInfoError.identifier.openTooltip = false;\r\n      _dataPatientInfoError.identifier.isError = false;\r\n      _dataPatientInfoError.identifier.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n    \r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.fullName = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n    \r\n      if(dataPatientInfoError.fullName.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullName.title = '';\r\n        _dataPatientInfoError.fullName.openTooltip = false;\r\n        _dataPatientInfoError.fullName.isError = false;\r\n        _dataPatientInfoError.fullName.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = async (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n    \r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n            \r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n    \r\n        if(today < takenValue || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientInfoError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n          _dataPatientInfoError.dayOfBirth.isError = true;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n    \r\n        else{\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.dayOfBirth = formattedDate\r\n            return {...prevDataPatientInfo}\r\n          })\r\n    \r\n          _dataPatientInfoError.dayOfBirth.title = '';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n          _dataPatientInfoError.dayOfBirth.isError = false;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n\r\n          onChangeDOBToGetExaminingSession(formattedDate);\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onChangeDOBToGetExaminingSession = async (formattedDate) => {\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.value = null\r\n      return {...prevSelectedAutoComplete}\r\n    })\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = true\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(formattedDate);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = false\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.patient.gender = value.genderValue\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n    \r\n    if(dataPatientInfoError.gender.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.gender.isError = false;\r\n      _dataPatientInfoError.gender.title = '';\r\n      _dataPatientInfoError.gender.openTooltip = false;\r\n      _dataPatientInfoError.gender.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectExaminingSession = (e, value) => {\r\n    if(focusField === 'examiningSession'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.examinationId = value.id\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.examiningSession.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(dataPatientInfoError.examiningSession.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.examiningSession.isError = false;\r\n      _dataPatientInfoError.examiningSession.title = '';\r\n      _dataPatientInfoError.examiningSession.openTooltip = false;\r\n      _dataPatientInfoError.examiningSession.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.province.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(selectedAutoComplete.district.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.province.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.province.isError = false;\r\n      _dataPatientInfoError.province.title = '';\r\n      _dataPatientInfoError.province.openTooltip = false;\r\n      _dataPatientInfoError.province.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.district.value = value;\r\n      return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.district.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.district.isError = false;\r\n      _dataPatientInfoError.district.title = '';\r\n      _dataPatientInfoError.district.openTooltip = false;\r\n      _dataPatientInfoError.district.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n\r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.codeWard = value.code\r\n      return { ...prevDataPatientInfo }\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.ward.value = value;\r\n        return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(dataPatientInfoError.ward.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.ward.isError = false;\r\n      _dataPatientInfoError.ward.title = '';\r\n      _dataPatientInfoError.ward.openTooltip = false;\r\n      _dataPatientInfoError.ward.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    if(focusField === 'address'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.address = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.address.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.address.isError = false;\r\n        _dataPatientInfoError.address.title = '';\r\n        _dataPatientInfoError.address.openTooltip = false;\r\n        _dataPatientInfoError.address.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    if(focusField === 'fullNameMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameMother = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(focusField === 'phoneMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneMother.openTooltip = true;\r\n          _dataPatientInfoError.phoneMother.isError = true;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n          \r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneMother = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n      \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n      \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 10)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneMother.title = '';\r\n      _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      _dataPatientInfoError.phoneMother.isError = false;\r\n      _dataPatientInfoError.phoneMother.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameFather = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneFather.openTooltip = true;\r\n          _dataPatientInfoError.phoneFather.isError = true;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n\r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneFather = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n                \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n                \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneFather.title = '';\r\n      _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      _dataPatientInfoError.phoneFather.isError = false;\r\n      _dataPatientInfoError.phoneFather.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    if(focusField === 'height'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.height = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.height.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.height.title = '';\r\n        _dataPatientInfoError.height.openTooltip = false;\r\n        _dataPatientInfoError.height.isError = false;\r\n        _dataPatientInfoError.height.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    if(focusField === 'weight'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.weight = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.weight.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.weight.title = '';\r\n        _dataPatientInfoError.weight.openTooltip = false;\r\n        _dataPatientInfoError.weight.isError = false;\r\n        _dataPatientInfoError.weight.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    if(focusField === 'headCircumference'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.headCircumference = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.headCircumference.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.headCircumference.title = '';\r\n        _dataPatientInfoError.headCircumference.openTooltip = false;\r\n        _dataPatientInfoError.headCircumference.isError = false;\r\n        _dataPatientInfoError.headCircumference.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.vaccination = bool\r\n      return {...prevDataPatientInfo}\r\n    })\r\n  }\r\n\r\n  const handleCloseModalInfoPantients = (event, reason) => {\r\n    if(reason && reason === \"backdropClick\"){\r\n      return;\r\n    }\r\n    else{\r\n      setListDistrict(prevListDistrict => {\r\n        prevListDistrict.loading = false\r\n        prevListDistrict.list = []\r\n        return {...prevListDistrict}\r\n      })\r\n      setListWard(prevListWard => {\r\n        prevListWard.loading = false\r\n        prevListWard.list = []\r\n        return {...prevListWard}\r\n      })\r\n      setListExaminingSession([]);\r\n      setSelectedAutoComplete(selectedAutoCompleteDefault);\r\n      setDataPatientInfo(dataPatientInfoDefault);\r\n      setDataPatientInfoNotEdit('');\r\n      setDataPatientInfoError(dataPatientInfoErrorDefault);\r\n      setLoading(true);\r\n      props.setSelectedPantientInfo();\r\n      props.setOpenModalInfoPantients(false);\r\n    }\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const responseListProvince = await getListProvince();\r\n    setListProvince(responseListProvince);\r\n  }\r\n\r\n  const handleApplyPantientDataToField = async () => {\r\n    setOpenAlertProcessing(true);   \r\n      \r\n    const editPropsDataPatientInfo = {...dataPatientInfo};\r\n    editPropsDataPatientInfo.examinationId = props.selectedPantientInfo.examinationId\r\n    editPropsDataPatientInfo.height = props.selectedPantientInfo.height\r\n    editPropsDataPatientInfo.weight = props.selectedPantientInfo.weight\r\n    editPropsDataPatientInfo.headCircumference = props.selectedPantientInfo.headCircumference\r\n    editPropsDataPatientInfo.reason = props.selectedPantientInfo.reason\r\n    editPropsDataPatientInfo.vaccination = props.selectedPantientInfo.vaccination\r\n    editPropsDataPatientInfo.id = props.selectedPantientInfo.id\r\n    editPropsDataPatientInfo.patient.identifier = props.selectedPantientInfo.patient.identifier\r\n    editPropsDataPatientInfo.patient.address = props.selectedPantientInfo.patient.address\r\n    editPropsDataPatientInfo.patient.fullName = props.selectedPantientInfo.patient.fullName\r\n    editPropsDataPatientInfo.patient.dayOfBirth = props.selectedPantientInfo.patient.dayOfBirth\r\n    editPropsDataPatientInfo.patient.codeWard = props.selectedPantientInfo.patient.codeWard\r\n    editPropsDataPatientInfo.patient.gender = props.selectedPantientInfo.patient.gender\r\n    editPropsDataPatientInfo.patient.fullNameMother = props.selectedPantientInfo.patient.fullNameMother\r\n    editPropsDataPatientInfo.patient.phoneMother = props.selectedPantientInfo.patient.phoneMother\r\n    editPropsDataPatientInfo.patient.fullNameFather = props.selectedPantientInfo.patient.fullNameFather\r\n    editPropsDataPatientInfo.patient.phoneFather = props.selectedPantientInfo.patient.phoneFather\r\n    editPropsDataPatientInfo.patient.patientId = props.selectedPantientInfo.patient.patientId\r\n\r\n    setDataPatientInfo(_.cloneDeep(editPropsDataPatientInfo));\r\n    setDataPatientInfoNotEdit(_.cloneDeep(editPropsDataPatientInfo));\r\n        \r\n    const response = await getFullAddressByIdWard(props.selectedPantientInfo.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.list = responseListDistrict;\r\n      return {...prevListDistrict}\r\n    });\r\n    const responseListWard = await getListWard(response.districtCode);\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = responseListWard;\r\n      return {...prevListWard}\r\n    });\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(props.selectedPantientInfo.patient.dayOfBirth);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n     \r\n    const selectedGender = listGender.find(gender => gender.genderValue === props.selectedPantientInfo.patient.gender);\r\n    const indexListExamining = responseListMedicalExaminationsGiveRegister.exams.findIndex(examiningSession => examiningSession.id === props.selectedPantientInfo.examinationId)\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = selectedGender\r\n      prevSelectedAutoComplete.examiningSession.value = responseListMedicalExaminationsGiveRegister.exams[indexListExamining];\r\n      prevSelectedAutoComplete.province.value = listProvince[indexListProvince];\r\n      prevSelectedAutoComplete.district.value = responseListDistrict[indexListDistrict];\r\n      prevSelectedAutoComplete.ward.value = responseListWard[indexListWard];\r\n      return prevSelectedAutoComplete\r\n    })\r\n\r\n    setLoading(false);\r\n    setOpenAlertProcessing(false);   \r\n  }\r\n\r\n  const checkValidate = () => {\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      let isValid = true;\r\n\r\n      if(dataPatientInfoError.identifier.title !== ''){\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.identifier.focus = true;\r\n          setFocusField('identifier');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullName === ''){\r\n        _dataPatientInfoError.fullName.title = 'Bạn chưa nhập họ tên';\r\n        _dataPatientInfoError.fullName.openTooltip = true;\r\n        _dataPatientInfoError.fullName.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullName.focus = true;\r\n          setFocusField('fullName');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(dataPatientInfo.patient.gender === ''){\r\n        _dataPatientInfoError.gender.title = 'Bạn chưa chọn giới tính';\r\n        _dataPatientInfoError.gender.isError = true;\r\n        _dataPatientInfoError.gender.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.gender.focus = true;\r\n          setFocusField('gender');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.dayOfBirth === ''){\r\n        _dataPatientInfoError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfoError.dayOfBirth.title !== ''){\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.examiningSession.value === null){\r\n        _dataPatientInfoError.examiningSession.title = 'Bạn chưa chọn lại kỳ khám';\r\n        _dataPatientInfoError.examiningSession.isError = true;\r\n        _dataPatientInfoError.examiningSession.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.examiningSession.focus = true;\r\n          setFocusField('examiningSession');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.province.value === null){\r\n        _dataPatientInfoError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n        _dataPatientInfoError.province.isError = true;\r\n        _dataPatientInfoError.province.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.province.focus = true;\r\n          setFocusField('province');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.district.value === null){\r\n        _dataPatientInfoError.district.title = 'Bạn chưa chọn quận huyện';\r\n        _dataPatientInfoError.district.isError = true;\r\n        _dataPatientInfoError.district.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.district.focus = true;\r\n          setFocusField('district');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.ward.value === null){\r\n        _dataPatientInfoError.ward.title = 'Bạn chưa chọn phường xã';\r\n        _dataPatientInfoError.ward.isError = true;\r\n        _dataPatientInfoError.ward.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.ward.focus = true;\r\n          setFocusField('ward');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.address === ''){\r\n        _dataPatientInfoError.address.title = 'Bạn chưa nhập địa chỉ';\r\n        _dataPatientInfoError.address.isError = true;\r\n        _dataPatientInfoError.address.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.address.focus = true;\r\n          setFocusField('address');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullNameMother === '' && dataPatientInfo.patient.fullNameFather === ''){\r\n        _dataPatientInfoError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n        _dataPatientInfoError.fullNameMother.isError = true;\r\n        _dataPatientInfoError.fullNameMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullNameMother.focus = true;\r\n          setFocusField('fullNameMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.phoneMother === '' && dataPatientInfo.patient.phoneFather === ''){\r\n        _dataPatientInfoError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        _dataPatientInfoError.phoneMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneMother.title !== ''){\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneFather.title !== ''){\r\n        _dataPatientInfoError.phoneFather.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneFather.focus = true;\r\n          setFocusField('phoneFather');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.height === ''){\r\n        _dataPatientInfoError.height.title = 'Bạn chưa nhập chiều cao';\r\n        _dataPatientInfoError.height.isError = true;\r\n        _dataPatientInfoError.height.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.height.focus = true;\r\n          setFocusField('height');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.weight === ''){\r\n        _dataPatientInfoError.weight.title = 'Bạn chưa nhập cân nặng';\r\n        _dataPatientInfoError.weight.isError = true;\r\n        _dataPatientInfoError.weight.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.weight.focus = true;\r\n          setFocusField('weight');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.headCircumference === ''){\r\n        _dataPatientInfoError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n        _dataPatientInfoError.headCircumference.isError = true;\r\n        _dataPatientInfoError.headCircumference.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.headCircumference.focus = true;\r\n          setFocusField('headCircumference');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      // if(dataPatientInfo.reason === ''){\r\n      //   _dataPatientInfoError.reason.isError = true;\r\n      //   isValid = false;\r\n      // }\r\n\r\n      if(_.isEqual(dataPatientInfo, dataPatientInfoNotEdit) === true){\r\n        toast.warning('Hiện không có gì để cập nhật', {toastId: 'warning1'});\r\n        isValid = false;\r\n      }\r\n\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n      return isValid;\r\n  }\r\n\r\n  const handleUpdateMedicalRegister = async () => {\r\n    if(checkValidate()){\r\n      setOpenAlertProcessing(true);\r\n      const response = await updateMedicalRegister(dataPatientInfo);\r\n      if(response.status === 200){\r\n        toast.success(response.data, {toastId: 'success1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      else{\r\n        toast.error(response.data, {toastId: 'error1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      setOpenAlertProcessing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(listProvince.length === 0){\r\n      handleGetListProvince();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.selectedPantientInfo){\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n      handleApplyPantientDataToField();\r\n    }\r\n  }, [props.selectedPantientInfo])\r\n\r\n  useEffect(() => {\r\n    if(props.openModalInfoPantients && props.isContinueUpdateMedicalRegister && loading === false){\r\n      handleUpdateMedicalRegister();\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n    }\r\n  }, [props.isContinueUpdateMedicalRegister, loading])\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth={true} maxWidth='md' open={props.openModalInfoPantients} onClose={(event, reason) => handleCloseModalInfoPantients(event, reason)} >\r\n        <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center', color: 'blue' }}>Thông tin bệnh nhân</DialogTitle>\r\n        <IconButton onClick={() => handleCloseModalInfoPantients()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n          <CloseIcon fontSize='medium'/>\r\n        </IconButton>\r\n        <DialogContent dividers sx={{pt: 1.5, pb: 1.5}}>\r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', pl: 4.2, pr: 4.2, mb: 0.8}}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.identifier.title}</h6>} open={dataPatientInfoError.identifier.openTooltip} placement='left'> \r\n              <TextField error={true ? dataPatientInfoError.identifier.isError === true : false}\r\n                label=\"Mã định danh\" variant=\"outlined\" \r\n                sx={{width: '18%', '&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                inputProps={{ maxLength: 12 }}\r\n                inputRef={(input) => input && focusField === 'identifier' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.identifier}\r\n                onChange={(e) => onChangeIdentifier(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n                      \r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullName.title}</h6>} open={dataPatientInfoError.fullName.openTooltip} placement='top'\r\n              slotProps={{\r\n                popper: {\r\n                  modifiers: [\r\n                    {\r\n                      name: 'offset',\r\n                      options: { offset: [-10, -6], },\r\n                    },\r\n                  ],\r\n                },\r\n              }} \r\n            > \r\n              <TextField error={true ? dataPatientInfoError.fullName.isError === true : false}\r\n                label=\"Họ tên\" variant=\"outlined\" \r\n                sx={{width: '32%', '&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.fullName}\r\n                onChange={(e) => onChangeFullName(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.gender.title}</h6>} open={dataPatientInfoError.gender.openTooltip} placement='top'>\r\n              <Autocomplete \r\n                sx={{width: '12%', marginTop: '7.5px'}}\r\n                options={listGender} \r\n                getOptionLabel={(option) => option.genderName}\r\n                value={selectedAutoComplete.gender.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.genderName}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectGender(e, value)}\r\n                open={selectedAutoComplete.gender.openOption}\r\n                onFocus={() => handleFocus('Gender')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Giới tính\" \r\n                    inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                    error={true ? dataPatientInfoError.gender.isError === true : false}                     \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <DemoContainer components={['DatePicker']}>  \r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.dayOfBirth.title}</h6>} open={dataPatientInfoError.dayOfBirth.openTooltip}>    \r\n                  <Box sx={{width: 110}}>\r\n                    <DatePicker label=\"Ngày sinh\" \r\n                      format='DD/MM/YYYY' defaultValue={moment(dataPatientInfo.patient.dayOfBirth)}\r\n                      disableFuture={true} disableOpenPicker \r\n                      slotProps={{ \r\n                        textField: \r\n                          { \r\n                            inputRef: dateFieldRef,\r\n                            error: true ? dataPatientInfoError.dayOfBirth.isError === true : false,\r\n                            onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                          }\r\n                        }}\r\n                      onChange={(value) => onChangeDOB(value)}\r\n                    />\r\n                  </Box>\r\n                </Tooltip>\r\n              </DemoContainer>\r\n            </ThemeProvider>\r\n          </LocalizationProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.examiningSession.title}</h6>} open={dataPatientInfoError.examiningSession.openTooltip} placement='right'>\r\n              <Autocomplete \r\n                sx={{width: '18%', mt: '7.5px'}}\r\n                options={listExaminingSession} \r\n                noOptionsText={selectedAutoComplete.examiningSession.loading ? 'Đang tải...' : ''}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.examiningSession.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectExaminingSession(e, value)}\r\n                open={selectedAutoComplete.examiningSession.openOption}\r\n                onFocus={() => handleFocus('ExaminingSession')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'ExaminingSession')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Kỳ khám\" \r\n                    inputRef={(input) => input && focusField === 'examiningSession' && input.focus()}\r\n                    error={true ? dataPatientInfoError.examiningSession.isError === true : false} \r\n                    sx={{'& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot': {pl: '6px', pr: '6px'}}}\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      endAdornment: (\r\n                        <>\r\n                          {selectedAutoComplete.examiningSession.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </>\r\n                      ),\r\n                    }} \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.province.title}</h6>} open={dataPatientInfoError.province.openTooltip} placement='left'>\r\n              <Autocomplete \r\n                sx={{width: '20%', mt: 2}}\r\n                options={listProvince} \r\n                filterOptions={filterOptions}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.province.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectProvine(e, value)}\r\n                open={selectedAutoComplete.province.openOption}\r\n                onFocus={() => handleFocus('Province')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Thành phố\"\r\n                    inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                    error={true ? dataPatientInfoError.province.isError === true : false}  \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.district.title}</h6>} open={dataPatientInfoError.district.openTooltip} placement='top'>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listDistrict.list} \r\n                  noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.district.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectDistrict(e, value)}\r\n                  open={selectedAutoComplete.district.openOption}\r\n                  onFocus={() => handleFocus('District')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Quận/huyện\" \r\n                      inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                      error={true ? dataPatientInfoError.district.isError === true : false} \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.ward.title}</h6>} open={dataPatientInfoError.ward.openTooltip}>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listWard.list}\r\n                  noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.ward.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectWard(e, value)}\r\n                  open={selectedAutoComplete.ward.openOption}\r\n                  onFocus={() => handleFocus('Ward')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Phường/Xã\" \r\n                      inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                      error={true ? dataPatientInfoError.ward.isError === true : false}  \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.address.title}</h6>} open={dataPatientInfoError.address.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.address.isError === true : false}\r\n                  label=\"Địa chỉ\" variant=\"outlined\" \r\n                  sx={{width: '36%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.address}\r\n                  onChange={(e) => onChangeAddress(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullNameMother.title}</h6>} open={dataPatientInfoError.fullNameMother.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.fullNameMother.isError === true : false}\r\n                  label=\"Họ tên mẹ\" variant=\"outlined\" \r\n                  sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.fullNameMother}\r\n                  onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                />    \r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneMother.title}</h6>} open={dataPatientInfoError.phoneMother.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.phoneMother.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneMother}\r\n                  onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <TextField \r\n              label=\"Họ tên cha\" variant=\"outlined\" sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n              defaultValue={dataPatientInfo.patient.fullNameFather}\r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n            />\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneFather.title}</h6>} open={dataPatientInfoError.phoneFather.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.phoneFather.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneFather}\r\n                  onChange={(e) => onChangePhoneFather(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.height.title}</h6>} open={dataPatientInfoError.height.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.height.isError === true : false}\r\n                  label='Chiều cao' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.height}\r\n                  onChange={(e) => onChangeHeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.weight.title}</h6>} open={dataPatientInfoError.weight.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.weight.isError === true : false}\r\n                  label='Cân nặng' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(kg)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.weight}\r\n                  onChange={(e) => onChangeWeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.headCircumference.title}</h6>} open={dataPatientInfoError.headCircumference.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.headCircumference.isError === true : false}\r\n                  label='Vòng đầu' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.headCircumference}\r\n                  onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <FormControlLabel sx={{width: '30%', mt: 2}} control={<Checkbox checked={dataPatientInfo.vaccination}/>} \r\n              label=\"Có tham gia tiêm ngừa\"\r\n              onChange={(e) => onChangeVaccination(e.target.checked)}\r\n            />  \r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{justifyContent: 'center'}}>\r\n          <Button variant=\"contained\" onClick={() => handleUpdateMedicalRegister()}>Sửa (F1)</Button>\r\n          <Button variant=\"contained\" color='secondary' onClick={(event, reason) => handleCloseModalInfoPantients(event, reason)}>Đóng (ESC)</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <AlertProcessing openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageInfoPantients","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//info pantients modal\r\nimport ManageInfoPantients from '../ManageInfoPantients/ManageInfoPantients';\r\n//mui theme\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getRegistersByDateNow } from '../../Service/MedicalRegisterService';\r\n\r\nfunction ListPatientsRegister(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n  const [listPantientChipState, setListPantientChipState] = useState(\r\n    [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 }\r\n    ]\r\n  )\r\n  \r\n  const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n  const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n  const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n  const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n  const [selectedPantientInfo, setSelectedPantientInfo] = useState();\r\n  const [openModalInfoPantients, setOpenModalInfoPantients] = useState(false);\r\n  const [isContinueUpdateMedicalRegister, setIsContinueUpdateMedicalRegister] = useState();\r\n\r\n  const renderPatientsStatus = (state) => {\r\n    if(state === 0 || state === 3){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterWaiting' />\r\n        </>\r\n      )\r\n    }\r\n    else if(state === 1){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterExamining' />\r\n        </>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterDone' />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSelectedChip = (chipIndex, chipLabel) => {\r\n    setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n    if(chipIndex === 0){\r\n      const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1) //chờ khám và đang khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n      setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n    }\r\n    else if(chipIndex === 1){\r\n      const listPantientRegisterExamining = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 3) //hẹn khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterExamining);\r\n      setListDataPatientsRegisterState(listPantientRegisterExamining);\r\n    }\r\n    else{\r\n      const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n      setListDataPatientsRegisterState(listPantientRegisterDone);\r\n    }\r\n  };\r\n\r\n  const handleSearchPantient = (value) => {\r\n    const takenValue = value;\r\n    setSearchPatientsQuery(takenValue);\r\n\r\n    if(value === ''){\r\n      setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n    }else{\r\n      setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n    }\r\n  }\r\n\r\n  const searchPatients = (patients, searchTerm) => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return patients.filter(patientObj => {\r\n      const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n      return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n    });\r\n  }\r\n\r\n  const handleSelectedPantientInfo = (patientsRegisterSortItem) => {\r\n    setSelectedPantientInfo(patientsRegisterSortItem);\r\n    setIsContinueUpdateMedicalRegister(true);\r\n    setOpenModalInfoPantients(true);\r\n  }\r\n\r\n  const handleGetRegistersByDateNow = async () => {\r\n    setLoading(true);\r\n    const response = await getRegistersByDateNow();\r\n    if(response !== 400){\r\n      if(response.list.length !== 0){\r\n        setListDataPatientsRegister(response.list);\r\n        if(activeChip.chipOrder === 0){\r\n          const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n          const updatedList = listPantientChipState.map((item, index) => ({\r\n            ...item,\r\n            chipContent: response.listCountState[index]\r\n          }));\r\n          setListPantientChipState(updatedList);\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n          const listPantientRegisterExamining = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 3) //hẹn khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterExamining);\r\n          setListDataPatientsRegisterState(listPantientRegisterExamining);\r\n          const updatedList = listPantientChipState.map((item, index) => ({\r\n            ...item,\r\n            chipContent: response.listCountState[index]\r\n          }));\r\n          setListPantientChipState(updatedList);\r\n        }\r\n        else{\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n          setListDataPatientsRegisterState(listPantientRegisterDone);\r\n          const updatedList = listPantientChipState.map((item, index) => ({\r\n            ...item,\r\n            chipContent: response.listCountState[index]\r\n          }));\r\n          setListPantientChipState(updatedList);\r\n        }\r\n      }\r\n    }\r\n    props.setComponent1Loading(false);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetRegistersByDateNow();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(openModalInfoPantients){\r\n      const handleKeyDown = (event) => {\r\n        if(event.keyCode === 112){\r\n          event.preventDefault()\r\n          setIsContinueUpdateMedicalRegister(true);\r\n          //nhấn F1 để sửa thông tin đăng ký khám\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [openModalInfoPantients, isContinueUpdateMedicalRegister]);\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true){\r\n      handleGetRegistersByDateNow();\r\n      props.setCompleteMedicalRegister(false);\r\n    }\r\n  }, [props.completeMedicalRegister])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{p: 0}}>\r\n        <Typography variant='h6' sx={{color: 'red', mb: 0, fontWeight: 'bolder', fontSize: '1.16rem'}}>\r\n          {loading ? \r\n            <Skeleton /> \r\n          : \r\n            props.currentDoctorExamining.userIdDoctor !== '' ?\r\n              <>\r\n                {`Bác sĩ khám hôm nay: ${props.currentDoctorExamining.userFullName}`} <IconButton onClick={() => props.setOpenSelectedDoctorExaminingModal(true)}> <EditIcon sx={{color: '#2e7d32', fontSize: '30px'}}/></IconButton>\r\n              </>\r\n            :\r\n              <>\r\n                {`Chưa chọn bác sĩ khám hôm nay `} <IconButton onClick={() => props.setOpenSelectedDoctorExaminingModal(true)}> <EditIcon sx={{color: '#2e7d32', fontSize: '30px'}}/></IconButton>\r\n              </>\r\n          }\r\n        </Typography>\r\n          <TableContainer component={Paper} sx={{ height: '548px', borderRadius: '10px', boxShadow: 5, overflowX: 'scroll' }}>\r\n          {loading ? \r\n            <>\r\n              <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                <CircularProgress/>\r\n                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n              </Box>        \r\n            </>\r\n          :\r\n            <>\r\n              <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                  <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                    <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                      onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                  </Badge>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n        \r\n              <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                <TextField sx={{mt: 0.2, mb: 1, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                  variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc SĐT' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                      startAdornment: (\r\n                        <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                      ),\r\n                      endAdornment: (\r\n                        <InputAdornment position='end'>\r\n                          {searchPatientsQuery !== '' ? \r\n                            <CloseIcon sx={{cursor: 'pointer'}} \r\n                              titleAccess='Xóa'\r\n                              onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                            /> \r\n                          : \r\n                            null\r\n                          }\r\n                        </InputAdornment>  \r\n                      )\r\n                  }}>\r\n                </TextField>\r\n              </Box>\r\n\r\n              <Table stickyHeader sx={{ minWidth: 1200 }}>\r\n                <TableHead>\r\n                  <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem', p: '10px'}}>Trạng thái</TableCell>\r\n                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {listDataPatientsRegisterSort.length !== 0 ?\r\n                    <>\r\n                      {listDataPatientsRegisterSort.map((patientsRegisterSortItem, patientsRegisterSortIndex) => (\r\n                        <TableRow hover role=\"checkbox\" key={patientsRegisterSortIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => handleSelectedPantientInfo(patientsRegisterSortItem)}>\r\n                          <TableCell align='center' sx={{width: '90px'}}>{renderPatientsStatus(patientsRegisterSortItem.state)}</TableCell>\r\n                          <TableCell align='left' sx={{width: '20px'}}>{patientsRegisterSortItem.order}</TableCell>\r\n                          <TableCell align='left' sx={{width: '150px'}}>{patientsRegisterSortItem.patient.patientId}</TableCell>\r\n                          <TableCell align='left' sx={{width: '200px'}}>{patientsRegisterSortItem.patient.fullName}</TableCell>\r\n                          <TableCell align='left' sx={{width: '110px'}}>{patientsRegisterSortItem.patient.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                          <TableCell align='left' sx={{width: '110px'}}>{moment(patientsRegisterSortItem.patient.dayOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                          <TableCell align='left' sx={{width: '140px'}}>{patientsRegisterSortItem.patient.phoneMother !== '' ? patientsRegisterSortItem.patient.phoneMother : patientsRegisterSortItem.patient.phoneFather}</TableCell>\r\n                          <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 120}}>\r\n                            <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.patient.fullAddress}</Typography>} >\r\n                              <span>{patientsRegisterSortItem.patient.fullAddress}</span>\r\n                            </Tooltip>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))} \r\n                    </>\r\n                    :\r\n                      null\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n            </>\r\n          }\r\n          </TableContainer>\r\n      </Box>\r\n      \r\n\r\n      <ManageInfoPantients \r\n        openModalInfoPantients={openModalInfoPantients} setOpenModalInfoPantients={setOpenModalInfoPantients}\r\n        selectedPantientInfo={selectedPantientInfo} setSelectedPantientInfo={setSelectedPantientInfo}\r\n        isContinueUpdateMedicalRegister={isContinueUpdateMedicalRegister} setIsContinueUpdateMedicalRegister={setIsContinueUpdateMedicalRegister}\r\n        setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListPatientsRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//modal\r\n// import AlertConfirmModal from '../ManageAlertConfirm/AlertConfirm';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//api\r\nimport { createMedicalRegister, createMedicalBackRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalRegisterService';\r\n\r\nfunction ExaminingSession(props) {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [listExaminingSession, setListExaminingSession] = useState(null);\r\n\r\n    const onChangeRadioSelect = (value) => {\r\n        props.dataPatientsRegister.examinationId = value;\r\n        // if(props.isContinueSelectedExaminingSession === false){\r\n        //     props.setIsContinueSelectedExaminingSession(true);\r\n        // }\r\n    }\r\n\r\n    const handleListMedicalExaminationsGiveRegister = async () =>  {\r\n        setOpenAlertProcessing(true);\r\n        const response = await getListMedicalExaminationsGiveRegister(props.dataPatientsRegister.patient.dayOfBirth);\r\n        setOpenAlertProcessing(false);\r\n        setListExaminingSession(response);\r\n    }\r\n\r\n    const handleMedicalRegister = async () => {\r\n        if(props.dataPatientsRegister.oldDisease === true){\r\n            setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n            setOpenAlertProcessing(false);\r\n            if(response.status === 200){\r\n                toast.success(response.data);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n        }else{\r\n            setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalRegister(props.dataPatientsRegister);\r\n            setOpenAlertProcessing(false);\r\n\r\n            if(response.status === 200){\r\n                toast.success(response.data);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCloseConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n      };\r\n\r\n    const handleOpenConfirm = () => {\r\n        if(props.dataPatientsRegister.examinationId === ''){\r\n            // setIsConfirmOpen(false);\r\n            toast.error('Bạn chưa chọn kỳ khám', {toastId: 'error1'});\r\n        }\r\n        else{\r\n            //setIsConfirmOpen(true);\r\n            handleMedicalRegister();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.dataPatientsRegister.patient.dayOfBirth !== '' && props.openModalExaminingSession === true){\r\n            handleListMedicalExaminationsGiveRegister();\r\n        }\r\n    }, [props.openModalExaminingSession])\r\n\r\n    useEffect(() => {\r\n        if(props.isContinueSelectedExaminingSession === true){\r\n            //nhấn F2 để hoàn tất đăng ký khám\r\n            handleOpenConfirm();\r\n            props.setIsContinueSelectedExaminingSession(false);\r\n        }\r\n    }, [props.isContinueSelectedExaminingSession])\r\n\r\n    return (\r\n        <>\r\n            {listExaminingSession ? \r\n                <>\r\n                    <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalExaminingSession} disableEscapeKeyDown={true}>\r\n                        <DialogTitle \r\n                            sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'green', textTransform: 'uppercase' }}>\r\n                            {`${props.dataPatientsRegister.patient.fullName}, \r\n                            ${props.dataPatientsRegister.patient.gender === true ? 'Nam' : 'Nữ'}, \r\n                            ${listExaminingSession.monthsOfAge}`}\r\n                        </DialogTitle>\r\n\r\n                        <IconButton onClick={() => [props.setOpenModalExaminingSession(false), props.dataPatientsRegister.examinationId = '']} \r\n                            sx={{position: 'absolute', right: 5, top: 7}}>\r\n                                <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n\r\n                        <DialogContent dividers sx={{pl: '0px', pr: '0px'}}>\r\n                            <Grid container rowSpacing={0}>\r\n                                <Grid item xs={0.5}/>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid black', p: 1, height: '50vh', overflow: 'auto'}}>\r\n                                        <Typography variant='h6' sx={{fontWeight: 'bolder'}}>Lịch sử khám</Typography>\r\n                                        {listExaminingSession.oldExams ?\r\n                                            listExaminingSession.oldExams.map((oldExamItem, oldExamIndex) => (\r\n                                                <Typography key={oldExamIndex} variant='subtitle1'>{oldExamItem}</Typography>\r\n                                            ))\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </Box>  \r\n                                </Grid>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid red', p: 1, height: '50vh'}}>\r\n                                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', color: 'red'}}>Chọn kỳ khám</Typography>\r\n                                            {listExaminingSession.exams ? \r\n                                                <RadioGroup onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                    {listExaminingSession.exams.map((examItem, examIndex) => (\r\n                                                        <FormControlLabel key={examIndex} value={examItem.id} control={<Radio />} label={examItem.name} />\r\n                                                    ))}\r\n                                                </RadioGroup>\r\n                                            :\r\n                                                null\r\n                                            }\r\n                                            <Button variant='contained' sx={{mt: 0.5}} onClick={() => handleOpenConfirm()}>Tiếp tục (F2)</Button> \r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </>\r\n            :\r\n                null\r\n            }\r\n\r\n            {/* <AlertConfirmModal \r\n                openAlertConfirmModal={isConfirmOpen} onCloseAlertConfirmModal={handleCloseConfirm} \r\n                onConfirmAlertConfirmModal={handleMedicalRegister} \r\n                titleConfirm=\"Đăng ký khám cho bệnh nhân?\"\r\n            /> */}\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExaminingSession","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListOldDisease, getVaccinationByPatientId } from '../../Service/MedicalRegisterService';\r\n\r\nfunction OldDisease(props) {\r\n\r\n    const dataPatientsForSearchOldDiseaseDefault = {patientId: '', phone: '', fullName: '', dayOfBirth: ''}\r\n    const dataPatientsForSearchOldDiseaseErrorDefault = {\r\n        patientId: { title: '', isError: false, openTooltip: false, focus: false},\r\n        phone: { title: '', isError: false, openTooltip: false, focus: false },\r\n        fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n        dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    }\r\n    \r\n    const [listFoundOldDisease, setListFoundOldDisease] = useState(null);\r\n    const [dataPatientsForSearchOldDisease, setDataPatientsForSearchOldDisease] = useState(dataPatientsForSearchOldDiseaseDefault);\r\n    const [dataPatientsForSearchOldDiseaseError, setDataPatientsForSearchOldDiseaseError] = useState(dataPatientsForSearchOldDiseaseErrorDefault);\r\n    const [focusField, setFocusField] = useState(null);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n\r\n    const dateFieldRef = useRef(null);\r\n    const formRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n    const tooltipTheme = createTheme({\r\n        components: {\r\n          MuiTooltip: {\r\n            defaultProps: {\r\n              placement: 'bottom',\r\n              arrow: true,\r\n              componentsProps: {\r\n                tooltip: {\r\n                  sx: {\r\n                    bgcolor: '#d32f2f',\r\n                  },\r\n                },\r\n                arrow: {\r\n                  sx: {\r\n                    color: '#d32f2f',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n    });\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key !== 'Enter') \r\n        {\r\n            event.preventDefault();\r\n        }\r\n        else if(event.key === 'Enter'){\r\n            handleEnterPress(event);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (value, fieldName) => {\r\n        if(value === '' || value === 'DD/MM/YYYY'){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(fieldName === 'patientId'){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'patientId'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'dayOfBirth'){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'dayOfBirth'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'phone'){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const onChangePatientId = (value) => {\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 8){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.title = 'Mã bệnh nhân phải từ 8 đến 12 số';\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.patientId = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'patientId'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n    }\r\n\r\n    const onChangeFullName = (value) => {\r\n        if(focusField === 'fullName'){\r\n            setFocusField(null);\r\n        }\r\n\r\n        setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n            prevDataPatientsForSearchOldDisease.fullName = value;\r\n            return {...prevDataPatientsForSearchOldDisease}\r\n        })\r\n\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);      \r\n    }\r\n\r\n    const onChangeDayOfBirth = (value) => {\r\n        if(value){            \r\n            const date = value._d;\r\n            const today = new Date();\r\n            const yearsDifference = today.getFullYear() - date.getFullYear();\r\n            const monthsDifference = today.getMonth() - date.getMonth();\r\n            const daysDifference = today.getDate() - date.getDate();\r\n            const age = today.getFullYear() - date.getFullYear();\r\n\r\n            let totalMonths = yearsDifference * 12 + monthsDifference;\r\n            let totalDays = daysDifference;\r\n\r\n            if (daysDifference < 0) {\r\n                totalMonths -= 1;\r\n                totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n            }\r\n\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n\r\n            if(today < date || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = true;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n              }\r\n              else{\r\n                const formattedDate = moment(date).format('YYYY-MM-DD');\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.dayOfBirth = formattedDate;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangePhone = (value) => {\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 10){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.phone = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        }\r\n    }\r\n\r\n    const handleCloseModalOldDisease = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n          else{\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            setListFoundOldDisease(null);\r\n            setSelectedRowIndex(0);\r\n            props.setOpenModalOldDisease(false);\r\n        }\r\n    }\r\n\r\n    const handleResetField = () => {\r\n        formRef.current.reset();\r\n        const inputs = formRef.current.querySelectorAll('input, textarea');\r\n        inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n        setFocusField(null);\r\n    }\r\n\r\n    const validate = () => {\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        let isValid = true;\r\n\r\n        if(dataPatientsForSearchOldDisease.patientId === '' && dataPatientsForSearchOldDisease.fullName === '' && \r\n            dataPatientsForSearchOldDisease.dayOfBirth === '' && dataPatientsForSearchOldDisease.phone === '')\r\n        {\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.fullName.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.patientId.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.focus = true;\r\n                setFocusField('patientId');\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.dayOfBirth.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                if (dateFieldRef.current) {\r\n                    dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n                }\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.phone.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.phone.focus = true;\r\n                setFocusField('phone');\r\n            }\r\n            isValid = false;\r\n        }\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        return isValid;\r\n    }\r\n\r\n    const handleFindOldDisease = async () => {\r\n        if(validate()){\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListOldDisease(dataPatientsForSearchOldDisease.patientId, dataPatientsForSearchOldDisease.phone, dataPatientsForSearchOldDisease.fullName, dataPatientsForSearchOldDisease.dayOfBirth, '');\r\n            setOpenAlertProcessing(false);\r\n            setListFoundOldDisease(response);\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            handleResetField();\r\n            if(response.length > 0){\r\n                tableRef.current.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleFindOldDisease();\r\n        }\r\n    }\r\n\r\n    const handleTableKeyDown = (event) => {\r\n        if (event.key === 'ArrowDown') {\r\n            setSelectedRowIndex((prevIndex) => (Math.min(prevIndex + 1, listFoundOldDisease.length - 1)));\r\n        } else if (event.key === 'ArrowUp') {\r\n            setSelectedRowIndex((prevIndex) => (Math.max(prevIndex - 1, 0)));\r\n        } else if (event.key === 'Enter' && selectedRowIndex !== null){\r\n            handleApplyDataPatientOldDisease(listFoundOldDisease[selectedRowIndex])\r\n        }\r\n    };\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientId: foundOldDiseaseItem.patientId,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseModalOldDisease();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalOldDisease} onClose={(event, reason) => handleCloseModalOldDisease(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Tìm bệnh cũ</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalOldDisease()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{p: '10px 24px'}}>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around'}} component=\"form\" ref={formRef}>\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.patientId.title}</h6>} open={dataPatientsForSearchOldDiseaseError.patientId.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.patientId.isError === true : false}\r\n                                    label=\"Mã BN\" variant=\"outlined\" size='small'\r\n                                    autoFocus\r\n                                    inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                                    inputProps={{ maxLength: 12 }}\r\n                                    onChange={(e) => onChangePatientId(e.target.value)}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'patientId')}\r\n                                    onKeyDown={handleKeyDown} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.fullName.title}</h6>} open={dataPatientsForSearchOldDiseaseError.fullName.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.fullName.isError === true : false}\r\n                                    label=\"Họ tên\" variant=\"outlined\" size='small'\r\n                                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                                    onKeyDown={(e) => handleEnterPress(e)} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                            <ThemeProvider theme={tooltipTheme}>\r\n                                <DemoContainer components={['DatePicker']}>\r\n                                    <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.dayOfBirth.title}</h6>} open={dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip}>    \r\n                                        <Box sx={{width: 222}}>\r\n                                            <DatePicker label=\"Ngày sinh\" format='DD/MM/YYYY' \r\n                                                disableFuture={true} disableOpenPicker \r\n                                                renderInput={(params) => <TextField {...params} size='small' />}\r\n                                                slotProps={{  \r\n                                                    textField: \r\n                                                    { \r\n                                                        inputRef: dateFieldRef,\r\n                                                        error: true ? dataPatientsForSearchOldDiseaseError.dayOfBirth.isError === true : false, \r\n                                                        size: 'small', \r\n                                                        onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                                        onKeyDown: (e) => handleEnterPress(e)\r\n                                                    }, \r\n                                                }}\r\n                                                onChange={(value) => onChangeDayOfBirth(value)}\r\n                                            />\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                </DemoContainer>\r\n                            </ThemeProvider>      \r\n                        </LocalizationProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.phone.title}</h6>} open={dataPatientsForSearchOldDiseaseError.phone.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                                    inputRef={(input) => input && focusField === 'phone' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.phone.isError === true : false}\r\n                                    label=\"Điện thoại cha/mẹ\" variant=\"outlined\" size='small'\r\n                                    inputProps={{ maxLength: 10 }}\r\n                                    onChange={(e) => onChangePhone(e.target.value)}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'phone')}\r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 1.6}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleFindOldDisease()}>Tìm (Enter)</Button>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        {\r\n                            listFoundOldDisease ? \r\n                                listFoundOldDisease.length !== 0 ? \r\n                                <>\r\n                                    <TableContainer component={Paper} sx={{boxShadow: 4, mt: 1.4}} tabIndex={0} onKeyDown={(event) => handleTableKeyDown(event)} ref={tableRef}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listFoundOldDisease ? \r\n                                                    listFoundOldDisease.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                        <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} \r\n                                                            selected={selectedRowIndex === foundOldDiseaseIndex} >\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.patientId}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                            <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'green'}}>Tìm thấy {listFoundOldDisease.length} bệnh nhân</Typography>\r\n                                </>\r\n                                : \r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'red'}}>Không tìm thấy bệnh nhân</Typography>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Box>  \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDisease","import React, { useState, useEffect, useRef } from 'react';\r\n//ExaminingSessios modal\r\nimport ExaminingSession from '../ManageExaminingSession/ExaminingSession';\r\n//old disease modal\r\nimport OldDisease from '../ManageOldDisease/OldDisease';\r\n// import OldDiseaseForRegister from '../ManageOldDisease/OldDiseaseForRegister';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateField } from '@mui/x-date-pickers/DateField';\r\n//lodash\r\nimport _ from 'lodash';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction BookMedical(props) {\r\n\r\n  const dataPatientsRegisterDefault = {\r\n    examinationId: '',\r\n    oldDisease: false,\r\n    height: '',\r\n    weight: '',\r\n    headCircumference: '',\r\n    reason: '',\r\n    vaccination: false,\r\n    medicalTypeId: '',\r\n    userIdDoctor: '',\r\n    patient: {\r\n      patientId: '',\r\n      identifier: '',\r\n      address: '',\r\n      fullName: '',\r\n      dayOfBirth: '',\r\n      codeWard: '',\r\n      gender: '',\r\n      fullNameMother: '',\r\n      phoneMother: '',\r\n      fullNameFather: '',\r\n      phoneFather: ''\r\n    }\r\n  }\r\n\r\n  const autocompleteValueDefault = { \r\n    dayOfBirth: null, \r\n    gender: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    province: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    district: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    ward: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    medicalType: {\r\n      value: null,\r\n      openOption: false\r\n    },\r\n    vaccination: false \r\n  }\r\n\r\n  const dataPatientsRegisterErrorDefault = { \r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    patientId: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n    medicalType: { title: '', isError: false, openTooltip: false, focus: false },\r\n    reason: { title: '', isError: false, openTooltip: false, focus: false }\r\n  }\r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const listMedicalType = [\r\n    {medicalTypeOrder: 1, medicalTypeName: 'Khám Nhi khoa phát triển', medicalTypeId: 1},\r\n    {medicalTypeOrder: 2, medicalTypeName: 'Khám trẻ nguy cơ cao', medicalTypeId: 2},\r\n  ]\r\n\r\n  const [openModalExaminingSession, setOpenModalExaminingSession] = useState(false);\r\n  const [isContinueSelectedExaminingSession, setIsContinueSelectedExaminingSession] = useState(false);\r\n\r\n  const [openModalOldDisease, setOpenModalOldDisease] = useState(false);\r\n\r\n  // const [openOldDiseaseRegister, setOpenOldDiseaseRegister] = useState(false);\r\n  // const [listOldDiseaseRegister, setListOldDiseaseRegister] = useState([]);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const [dataPatientsRegister, setDataPatientsRegister] = useState(dataPatientsRegisterDefault);\r\n  const [dataPatientsRegisterError, setDataPatientsRegisterError] = useState(dataPatientsRegisterErrorDefault);\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [autocompleteValue, setAutocompleteValue] = useState(autocompleteValueDefault);\r\n\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const formRef = useRef(null);\r\n  const firstFocusRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n  const typingRef = useRef(null);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f', \r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -7],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n        event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n\r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n\r\n      return (\r\n        lowercasedFullName.includes(lowercasedInput) ||\r\n        initials.includes(lowercasedInput)\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.gender.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.province.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Ward'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'MedicalType'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.medicalType.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n      if(fieldName === 'Identifier'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n        _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.dayOfBirth.title = '';\r\n      //     _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n      //   _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PatientId'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.patientId.title = '';\r\n      //     _dataPatientsRegisterError.patientId.openTooltip = false;\r\n      //     _dataPatientsRegisterError.patientId.isError = false;\r\n      //     _dataPatientsRegisterError.patientId.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.phoneMother.title = '';\r\n      //     _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      //     _dataPatientsRegisterError.phoneMother.isError = false;\r\n      //     _dataPatientsRegisterError.phoneFather.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      if(fieldName === 'PhoneFather'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      else if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientsRegisterError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientsRegisterError.identifier.openTooltip = true;\r\n          _dataPatientsRegisterError.identifier.isError = true;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.identifier.title = '';\r\n      _dataPatientsRegisterError.identifier.openTooltip = false;\r\n      _dataPatientsRegisterError.identifier.isError = false;\r\n      _dataPatientsRegisterError.identifier.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangePatientId = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 8){\r\n          _dataPatientsRegisterError.patientId.title = 'Mã BN phải từ 8 đến 12 số';\r\n          _dataPatientsRegisterError.patientId.openTooltip = true;\r\n          _dataPatientsRegisterError.patientId.isError = true;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          if(focusField === 'patientId'){\r\n            setFocusField(null);\r\n          }\r\n          \r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.patientId = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.patientId.title = '';\r\n          _dataPatientsRegisterError.patientId.openTooltip = false;\r\n          _dataPatientsRegisterError.patientId.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    // else{\r\n    //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n    //   _dataPatientsRegisterError.patientId.title = '';\r\n    //   _dataPatientsRegisterError.patientId.openTooltip = false;\r\n    //   _dataPatientsRegisterError.patientId.isError = false;\r\n    //   _dataPatientsRegisterError.patientId.focus = false;\r\n    //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    // }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullName = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      if(dataPatientsRegisterError.fullName.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullName.title = '';\r\n        _dataPatientsRegisterError.fullName.openTooltip = false;\r\n        _dataPatientsRegisterError.fullName.isError = false;\r\n        _dataPatientsRegisterError.fullName.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n\r\n      // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n      //   handleFindOldDisease();\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n\r\n        if(today < takenValue || age > 2 || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientsRegisterError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n        }\r\n\r\n        else{\r\n          if(focusField === 'dayOfBirth'){\r\n            setFocusField(null);\r\n          }\r\n\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n          prevDataPatientsRegister.patient.dayOfBirth = formattedDate\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.dayOfBirth.title = '';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n          //   handleFindOldDisease();\r\n          // }\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.gender = value.genderValue\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.gender.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.gender.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.gender.title = '';\r\n      _dataPatientsRegisterError.gender.openTooltip = false;\r\n      _dataPatientsRegisterError.gender.isError = false;\r\n      _dataPatientsRegisterError.gender.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n    //   handleFindOldDisease();\r\n    // }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.province.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.district.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.province.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.province.title = '';\r\n      _dataPatientsRegisterError.province.openTooltip = false;\r\n      _dataPatientsRegisterError.province.isError = false;\r\n      _dataPatientsRegisterError.province.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.district.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.district.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.district.title = '';\r\n      _dataPatientsRegisterError.district.openTooltip = false;\r\n      _dataPatientsRegisterError.district.isError = false;\r\n      _dataPatientsRegisterError.district.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n    \r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.codeWard = value.code\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.ward.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.ward.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.ward.title = '';\r\n      _dataPatientsRegisterError.ward.openTooltip = false;\r\n      _dataPatientsRegisterError.ward.isError = false;\r\n      _dataPatientsRegisterError.ward.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeFolk = (value) => {\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'address'){\r\n        setFocusField(null);\r\n      }\r\n      \r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.address = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.address.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.address.title = '';\r\n        _dataPatientsRegisterError.address.openTooltip = false;\r\n        _dataPatientsRegisterError.address.isError = false;\r\n        _dataPatientsRegisterError.address.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'fullNameMother'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameMother = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        if(focusField === 'phoneMother'){\r\n          setFocusField(null);\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneMother.isError = true;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneMother = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneMother.title = '';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneMother.isError = false;\r\n      _dataPatientsRegisterError.phoneMother.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    if(focusField === 'fullNameFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameFather = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (e, value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneFather.isError = true;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneFather = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'phoneFather'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneFather.title = '';\r\n      _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneFather.isError = false;\r\n      _dataPatientsRegisterError.phoneFather.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'height'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.height = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.height.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.height.title = '';\r\n        _dataPatientsRegisterError.height.openTooltip = false;\r\n        _dataPatientsRegisterError.height.isError = false;\r\n        _dataPatientsRegisterError.height.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'weight'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.weight = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.weight.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.weight.title = '';\r\n        _dataPatientsRegisterError.weight.openTooltip = false;\r\n        _dataPatientsRegisterError.weight.isError = false;\r\n        _dataPatientsRegisterError.weight.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'headCircumference'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.headCircumference = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.headCircumference.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.headCircumference.title = '';\r\n        _dataPatientsRegisterError.headCircumference.openTooltip = false;\r\n        _dataPatientsRegisterError.headCircumference.isError = false;\r\n        _dataPatientsRegisterError.headCircumference.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onSelectMedicalType = (e, value) => {\r\n    if(focusField === 'medicalType'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.medicalTypeId = value.medicalTypeId\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.medicalType.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.medicalType.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.medicalType.title = '';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = false;\r\n      _dataPatientsRegisterError.medicalType.isError = false;\r\n      _dataPatientsRegisterError.medicalType.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeReason = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.reason = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      // if(dataPatientsRegisterError.reason.isError){\r\n      //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      //   _dataPatientsRegisterError.reason.isError = false;\r\n      //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.vaccination = bool\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.vaccination = bool\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkValidate = () => {\r\n    let isValid = true;\r\n    const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n\r\n    if(dataPatientsRegisterError.identifier.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.identifier.focus = true;\r\n        setFocusField('identifier');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.patientId === ''){\r\n      _dataPatientsRegisterError.patientId.title = 'Bạn chưa nhập mã bệnh nhân';\r\n      _dataPatientsRegisterError.patientId.openTooltip = true;\r\n      _dataPatientsRegisterError.patientId.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.patientId.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullName === ''){\r\n      _dataPatientsRegisterError.fullName.title = 'Bạn chưa nhập họ tên';\r\n      _dataPatientsRegisterError.fullName.openTooltip = true;\r\n      _dataPatientsRegisterError.fullName.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullName.focus = true;\r\n        setFocusField('fullName');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.dayOfBirth === ''){\r\n      _dataPatientsRegisterError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n      _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n      _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.dayOfBirth.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.gender === ''){\r\n      _dataPatientsRegisterError.gender.title = 'Bạn chưa chọn giới tính';\r\n      _dataPatientsRegisterError.gender.openTooltip = true;\r\n      _dataPatientsRegisterError.gender.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.gender.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n      setFocusField('gender');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.province.value === null){\r\n      _dataPatientsRegisterError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n      _dataPatientsRegisterError.province.openTooltip = true;\r\n      _dataPatientsRegisterError.province.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.province.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('province');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.district.value === null){\r\n      _dataPatientsRegisterError.district.title = 'Bạn chưa chọn quận huyện';\r\n      _dataPatientsRegisterError.district.openTooltip = true;\r\n      _dataPatientsRegisterError.district.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.district.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('district');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.ward.value === null){\r\n      _dataPatientsRegisterError.ward.title = 'Bạn chưa chọn phường xã';\r\n      _dataPatientsRegisterError.ward.openTooltip = true;\r\n      _dataPatientsRegisterError.ward.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.ward.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('ward');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.address === ''){\r\n      _dataPatientsRegisterError.address.title = 'Bạn chưa nhập địa chỉ';\r\n      _dataPatientsRegisterError.address.openTooltip = true;\r\n      _dataPatientsRegisterError.address.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.address.focus = true;\r\n        setFocusField('address');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullNameMother === '' && dataPatientsRegister.patient.fullNameFather === ''){\r\n      _dataPatientsRegisterError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n      _dataPatientsRegisterError.fullNameMother.openTooltip = true;\r\n      _dataPatientsRegisterError.fullNameMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullNameMother.focus = true;\r\n        setFocusField('fullNameMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.phoneMother === '' && dataPatientsRegister.patient.phoneFather === ''){\r\n      _dataPatientsRegisterError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n      _dataPatientsRegisterError.phoneMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneMother.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneFather.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneFather.focus = true;\r\n        setFocusField('phoneFather');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.height === ''){\r\n      _dataPatientsRegisterError.height.title = 'Bạn chưa nhập chiều cao';\r\n      _dataPatientsRegisterError.height.openTooltip = true;\r\n      _dataPatientsRegisterError.height.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.height.focus = true;\r\n        setFocusField('height');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.weight === ''){\r\n      _dataPatientsRegisterError.weight.title = 'Bạn chưa nhập cân nặng';\r\n      _dataPatientsRegisterError.weight.openTooltip = true;\r\n      _dataPatientsRegisterError.weight.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.weight.focus = true;\r\n        setFocusField('weight');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.headCircumference === ''){\r\n      _dataPatientsRegisterError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n      _dataPatientsRegisterError.headCircumference.openTooltip = true;\r\n      _dataPatientsRegisterError.headCircumference.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.headCircumference.focus = true;\r\n        setFocusField('headCircumference');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.medicalTypeId === ''){\r\n      _dataPatientsRegisterError.medicalType.title = 'Bạn chưa chọn loại hình khám';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = true;\r\n      _dataPatientsRegisterError.medicalType.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.medicalType.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('medicalType');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    // if(dataPatientsRegister.reason === ''){\r\n    //   _dataPatientsRegisterError.reason.isError = true;\r\n    //   isValid = false;\r\n    // }\r\n\r\n    if(dataPatientsRegister.userIdDoctor === ''){\r\n      if(props.currentDoctorExamining.userIdDoctor === '') {\r\n        toast.error('Bạn chưa chọn bác sĩ khám cho ngày hôm nay!', {toastId: 'error1'});\r\n        isValid = false;\r\n      }\r\n\r\n    else if(props.currentDoctorExamining.userIdDoctor !== ''){\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.userIdDoctor = props.currentDoctorExamining.userIdDoctor\r\n          return prevDataPatientsRegister\r\n        })\r\n      }\r\n    }\r\n\r\n    setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    return isValid;\r\n  }\r\n\r\n  const handleMedicalRegister = () => {\r\n    setTimeout(() => {\r\n      if(checkValidate()){\r\n        setOpenModalExaminingSession(true);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const handleApplyPantientOldDiseaseData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = dataPatientsRegister.patient.identifier;\r\n    document.getElementById('patientId').value = dataPatientsRegister.patient.patientId;\r\n    document.getElementById('patientFullName').value = dataPatientsRegister.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(dataPatientsRegister.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(dataPatientsRegister.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === dataPatientsRegister.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === dataPatientsRegister.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = dataPatientsRegister.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = dataPatientsRegister.patient.address;\r\n    document.getElementById('patientFullNameMother').value = dataPatientsRegister.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = dataPatientsRegister.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = dataPatientsRegister.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = dataPatientsRegister.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n  }\r\n\r\n  const handleResetField = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    setFocusField(null);\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n\r\n    firstFocusRef.current.focus();\r\n  }\r\n\r\n  const handleOpenModalOldDisease = () => {\r\n    handleResetField();\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const response = await getListProvince();\r\n    if(response !== 400){\r\n      setListProvince(response);\r\n    }\r\n  }\r\n\r\n  // const handleFindOldDisease = async () => {\r\n  //   const response = await getListOldDisease('', '', dataPatientsRegister.patient.fullName, dataPatientsRegister.patient.dayOfBirth, dataPatientsRegister.patient.gender);\r\n  //   if(response.length !== 0){\r\n  //     setListOldDiseaseRegister(response);\r\n  //     setOpenOldDiseaseRegister(true);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleGetListProvince();\r\n    firstFocusRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(dataPatientsRegister.oldDisease === true){\r\n      handleApplyPantientOldDiseaseData();\r\n    }\r\n  }, [dataPatientsRegister.oldDisease])\r\n\r\n  useEffect(() => {\r\n    if(props.onF2Press){\r\n      if(openModalExaminingSession === true && openModalOldDisease === false){\r\n        setIsContinueSelectedExaminingSession(true);\r\n        props.setOnF2Press(false);\r\n      }\r\n      else{\r\n        handleMedicalRegister();\r\n        props.setOnF2Press(false);\r\n      }\r\n    }\r\n    \r\n    if(props.onF4Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF4Press(false);\r\n      }\r\n      else{\r\n        handleResetField();\r\n        props.setOnF4Press(false);\r\n      }\r\n    }\r\n\r\n    if(props.onF8Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF8Press(false);\r\n      }\r\n      else{\r\n        handleOpenModalOldDisease();\r\n        props.setOnF8Press(false);\r\n      }\r\n    }\r\n  }, [props.onF2Press, props.onF4Press, props.onF8Press])\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{'&.MuiContainer-maxWidthLg': {pr: 0}}}>\r\n        <Box sx={{ minHeight: '36.4rem', borderRadius: '20px', boxShadow: 5, pt: 1.2, pb: 1.2, pl: 2.4, pr: 2.4, mt: 1.5}}>\r\n          <Typography variant='h6' sx={{textAlign: 'center', fontWeight: 'bolder', color: 'blue'}}>Thông tin đăng ký khám</Typography> \r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}} component=\"form\" ref={formRef}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.identifier.title}</h6>} open={dataPatientsRegisterError.identifier.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.identifier.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã định danh\" variant=\"outlined\" id='patientIdentifier'\r\n                  inputRef={focusField === 'identifier' ? (input) => input && focusField === 'identifier' && input.focus() : firstFocusRef}\r\n                  onChange={(e) => onChangeIdentifier(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Identifier')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.patientId.title}</h6>} open={dataPatientsRegisterError.patientId.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.patientId.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã BN\" variant=\"outlined\" id='patientId'\r\n                  inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                  onChange={(e) => onChangePatientId(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'PatientId')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullName.title}</h6>} open={dataPatientsRegisterError.fullName.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }} \r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [37, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              > \r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullName.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên\" variant=\"outlined\" id=\"patientFullName\"                   \r\n                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  /> \r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n      \r\n            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n              <ThemeProvider theme={tooltipTheme}>\r\n                <DemoContainer components={['DatePicker']} >\r\n                  <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.dayOfBirth.title}</h6>} open={dataPatientsRegisterError.dayOfBirth.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>    \r\n                    <Box sx={{width: 142, mt: '12px !important'}}>\r\n                      <div style={{width: '100%', }}>\r\n                        <DateField label=\"Ngày sinh\" \r\n                          format='DD/MM/YYYY' value={autocompleteValue.dayOfBirth}\r\n                          disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                          slotProps={{ \r\n                            textField: \r\n                              { \r\n                                inputRef: dateFieldRef,\r\n                                error: true ? dataPatientsRegisterError.dayOfBirth.isError === true : false,\r\n                                onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                sx: {'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } },\r\n                              }\r\n                          }}\r\n                          onChange={(value) => onChangeDOB(value)}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  </Tooltip>\r\n                </DemoContainer>\r\n              </ThemeProvider>      \r\n            </LocalizationProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.gender.title}</h6>} open={dataPatientsRegisterError.gender.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '12%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientGender' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.gender.value}\r\n                    options={listGender} \r\n                    getOptionLabel={(option) => option.genderName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.genderName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectGender(e, value)}\r\n                    open={autocompleteValue.gender.openOption}\r\n                    onFocus={() => handleFocus('Gender')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Giới tính\" \r\n                        inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.gender.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n             \r\n            {/* <TextField label=\"Dân tộc\" variant=\"outlined\" sx={{width: '12%', '&.MuiTextField-root' : {marginTop: '15px'}}}/> */}\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.province.title}</h6>} open={dataPatientsRegisterError.province.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '19.2%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.province.value}\r\n                    options={listProvince} \r\n                    noOptionsText={'Đang tải...'}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectProvine(e, value)}\r\n                    open={autocompleteValue.province.openOption}\r\n                    onFocus={() => handleFocus('Province')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Thành phố\" \r\n                        inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.province.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.district.title}</h6>} open={dataPatientsRegisterError.district.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '24%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.district.value}\r\n                    options={listDistrict.list} \r\n                    noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                    open={autocompleteValue.district.openOption}\r\n                    onFocus={() => handleFocus('District')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.fullName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectDistrict(e, value)}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Quận/Huyện\" \r\n                        inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.district.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <>\r\n                              {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <>\r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.ward.title}</h6>} open={dataPatientsRegisterError.ward.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                  <div style={{width: '23.5%', marginTop: '20px'}}>\r\n                    <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                      value={autocompleteValue.ward.value}\r\n                      options={listWard.list} \r\n                      noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                      filterOptions={filterOptions}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderOption={(props, option) => (\r\n                        <li {...props}>\r\n                          {option.fullName}\r\n                        </li>\r\n                      )}\r\n                      onChange={(e, value) => onSelectWard(e, value)}\r\n                      open={autocompleteValue.ward.openOption}\r\n                      onFocus={() => handleFocus('Ward')}\r\n                      onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} \r\n                          label=\"Phường/Xã\" \r\n                          inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                          error={true ? dataPatientsRegisterError.ward.isError === true : false} \r\n                          sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                              <>\r\n                                {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                              </>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      disableClearable // Bỏ icon xóa\r\n                      popupIcon={null} // Bỏ icon dropdown\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.address.title}</h6>} open={dataPatientsRegisterError.address.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.address.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Địa chỉ\" variant=\"outlined\" id='patientAddress'\r\n                    inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                    onChange={(e) => onChangeAddress(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullNameMother.title}</h6>} open={dataPatientsRegisterError.fullNameMother.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullNameMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên mẹ\" variant=\"outlined\" id='patientFullNameMother'\r\n                    inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                    autoFocus={dataPatientsRegisterError.fullNameMother.focus}\r\n                    onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneMother.title}</h6>} open={dataPatientsRegisterError.phoneMother.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.phoneMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Điện thoại\" variant=\"outlined\" id='patientPhoneMother' \r\n                    inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                    onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n\r\n            <TextField label=\"Họ tên cha\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n              variant=\"outlined\" id='patientFullNameFather' \r\n              sx={{width: '30.4%', '&.MuiTextField-root' : {marginTop: '20px'}}} \r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n              inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n              InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n            />\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneFather.title}</h6>} open={dataPatientsRegisterError.phoneFather.openTooltip}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField label=\"Điện thoại\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                    variant=\"outlined\" id='patientPhoneFather'\r\n                    onChange={(e) => onChangePhoneFather(e, e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneFather')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.height.title}</h6>} open={dataPatientsRegisterError.height.openTooltip} placement='left' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Chiều cao bé\" variant=\"outlined\" id='patientHeight' error={true ? dataPatientsRegisterError.height.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.weight.title}</h6>} open={dataPatientsRegisterError.weight.openTooltip} PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Cân nặng bé\" variant=\"outlined\" id='patientWeight' error={true ? dataPatientsRegisterError.weight.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(kg)</InputAdornment>}}\r\n                    onChange={(e) => onChangeWeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>  \r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.headCircumference.title}</h6>} open={dataPatientsRegisterError.headCircumference.openTooltip} placement='top-start' PopperProps={{sx: { zIndex: 2 } }}\r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [70, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              >\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Vòng đầu bé\" variant=\"outlined\" id='patientHeadCircumference' error={true ? dataPatientsRegisterError.headCircumference.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.medicalType.title}</h6>} open={dataPatientsRegisterError.medicalType.openTooltip} placement='bottom' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30.5%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientMedicalType' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.medicalType.value}\r\n                    options={listMedicalType} \r\n                    getOptionLabel={(option) => option.medicalTypeName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.medicalTypeName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectMedicalType(e, value)}\r\n                    open={autocompleteValue.medicalType.openOption}\r\n                    onFocus={() => handleFocus('MedicalType')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'MedicalType')}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Loại hình khám\" \r\n                        inputRef={(input) => input && focusField === 'medicalType' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.medicalType.isError === true : false} \r\n                        sx={{\r\n                          '& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } ,\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.Mui-disabled.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'},\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'}\r\n                        }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.reason.title}</h6>} open={dataPatientsRegisterError.reason.openTooltip} >\r\n                <div style={{width: '100%' }}>\r\n                  <TextField fullWidth label=\"Lý do khám\" multiline rows={3} variant=\"outlined\" id='patientReason' error={true ? dataPatientsRegisterError.reason.isError === true : false}\r\n                    sx={{'&.MuiTextField-root' : {marginTop: '20px'}}} \r\n                    onChange={(e) => onChangeReason(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <FormControlLabel control={<Checkbox checked={autocompleteValue.vaccination}/>} sx={{width: '100%'}}\r\n              label=\"Bệnh nhân có tham gia tiêm ngừa\" onChange={(e) => onChangeVaccination(e.target.checked)}/>  \r\n\r\n            <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n              <Button variant=\"contained\" color=\"primary\" sx={{mr: 1}} onClick={() => handleMedicalRegister()}>Đăng ký (f2)</Button>\r\n              <Button variant=\"contained\" color=\"warning\" onClick={() => handleResetField()}>Làm mới (f4)</Button>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => handleOpenModalOldDisease()}>Bệnh cũ (f8)</Button>\r\n            </Box>\r\n          </Box>         \r\n        </Box>\r\n      </Container>\r\n\r\n      <ExaminingSession \r\n        openModalExaminingSession={openModalExaminingSession} setOpenModalExaminingSession={setOpenModalExaminingSession} \r\n        handleResetField={handleResetField} setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        isContinueSelectedExaminingSession={isContinueSelectedExaminingSession} setIsContinueSelectedExaminingSession={setIsContinueSelectedExaminingSession}\r\n        dataPatientsRegister={dataPatientsRegister} \r\n      />\r\n\r\n      <OldDisease \r\n        openModalOldDisease={openModalOldDisease} setOpenModalOldDisease={setOpenModalOldDisease}\r\n        dataPatientsRegister={dataPatientsRegister} setDataPatientsRegister={setDataPatientsRegister}\r\n      />\r\n\r\n      {/* <OldDiseaseForRegister\r\n        openOldDiseaseRegister={openOldDiseaseRegister} setOpenOldDiseaseRegister={setOpenOldDiseaseRegister}\r\n        setDataPatientsRegister={setDataPatientsRegister}\r\n        listOldDiseaseRegister={listOldDiseaseRegister} setListOldDiseaseRegister={setListOldDiseaseRegister}\r\n      /> */}\r\n\r\n      <AlertProcessing\r\n        openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookMedical","import React, { useState, useContext, useEffect } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//modal\r\nimport SelectedDoctorExamining from '../ManageSelectedDoctorExamining/SelectedDoctorExamining';\r\n//components\r\nimport ListPatientsRegister from './ListPatientsRegister';\r\nimport BookMedical from './BookMedical';\r\n//api\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalRegisterService';\r\n\r\nfunction MainMedicalRegister() {\r\n\r\n  const [component1Loading, setComponent1Loading] = useState(true);\r\n\r\n  const currentDoctorExaminingDefault = {userFullName: '', userIdDoctor: ''};\r\n\r\n  const [completeMedicalRegister, setCompleteMedicalRegister] = useState(false);\r\n\r\n  const [handleResetField, setHandleResetField] = useState(false); //F2\r\n  const [handleOpenModalExaminingSession, setHandleOpenModalExaminingSession] = useState(false); //F4\r\n  const [handleOpenModalOldDisease, setHandleOpenModalOldDisease] = useState(false); //F8\r\n\r\n  const [currentDoctorExamining, setCurrentDoctorExamining] = useState();\r\n  const [openSelectedDoctorExaminingModal, setOpenSelectedDoctorExaminingModal] = useState(false);\r\n\r\n  const handleF2Press = () => {\r\n    setHandleOpenModalExaminingSession(true);\r\n  }\r\n\r\n  const handleF4Press = () => {\r\n    setHandleResetField(true);\r\n  }\r\n\r\n  const handleF8Press = () => {\r\n    setHandleOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetCurrentDoctorExamining = async () => {\r\n    const response = await getCurrentDoctorExamining();\r\n    if(response.status === 200){\r\n      setCurrentDoctorExamining( {userIdDoctor: response.data.userIdDoctor, userFullName: response.data.userFullName} );\r\n    }\r\n    else{\r\n      setCurrentDoctorExamining(currentDoctorExaminingDefault);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetCurrentDoctorExamining();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if(event.keyCode === 113){\r\n        event.preventDefault()\r\n        //nhấn F2 để đăng ký khám\r\n        handleF2Press();\r\n      }\r\n      else if(event.keyCode === 115){\r\n        event.preventDefault()\r\n        //nhấn F4 để reset các input field \r\n        handleF4Press();\r\n      }\r\n      else if(event.keyCode === 119){\r\n        event.preventDefault()\r\n        //nhấn F8 để tìm bệnh cũ\r\n        handleF8Press();\r\n      }\r\n      else{\r\n\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 11}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                <Grid container spacing={0} sx={{marginLeft: 0}}>\r\n                  {currentDoctorExamining ? \r\n                    <>\r\n                      <Grid item xs={5}>  \r\n                        <ListPatientsRegister \r\n                          completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                          currentDoctorExamining={currentDoctorExamining}\r\n                          setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n                          component1Loading={component1Loading} setComponent1Loading={setComponent1Loading}\r\n                        />\r\n                      </Grid>\r\n            \r\n                      <Grid item xs={7} >\r\n                        {component1Loading ?\r\n                          <div style={{marginTop: '20px', marginLeft: '18px'}}>\r\n                            <Skeleton variant='rectangular' width=\"100%\" height={576} />\r\n                          </div>\r\n                          :\r\n                          <BookMedical \r\n                            onF2Press={handleOpenModalExaminingSession} setOnF2Press={setHandleOpenModalExaminingSession}\r\n                            onF4Press={handleResetField} setOnF4Press={setHandleResetField}\r\n                            onF8Press={handleOpenModalOldDisease} setOnF8Press={setHandleOpenModalOldDisease}\r\n                            setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                            currentDoctorExamining={currentDoctorExamining}\r\n                          />\r\n                        }\r\n                      </Grid>\r\n                    </>\r\n                  :\r\n                      null\r\n                  }\r\n                </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n         <SelectedDoctorExamining \r\n          openSelectedDoctorExaminingModal={openSelectedDoctorExaminingModal} setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n          currentDoctorExamining={currentDoctorExamining} setCurrentDoctorExamining={setCurrentDoctorExamining}\r\n         />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainMedicalRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport _ from 'lodash'\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//other\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { DialogActions } from '@mui/material';\r\n//css\r\nimport './SCSS/CompleteExamining.scss';\r\n\r\nfunction CompleteExamining(props) {\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState([]);\r\n\r\n    const handleSetDataCompleteExamining = () => {\r\n        const editDataExaminingForConclusion = _.clone(props.dataExaminingForConclusion);\r\n\r\n        editDataExaminingForConclusion.categories = editDataExaminingForConclusion.categories.map(categoriesItem => ({\r\n            ...categoriesItem,\r\n            // Lọc các categoryContents để giữ lại những phần tử có categoryContentQuestions không rỗng\r\n            categoryContents: categoriesItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length > 0)\r\n\r\n            // Loại bỏ các categories nếu tất cả categoryContents của nó đều bị loại bỏ\r\n        })).filter(categoriesItem => categoriesItem.categoryContents.length > 0);\r\n\r\n        setMainDataExaminingForConclusion(editDataExaminingForConclusion)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalCompleteExamining){\r\n            handleSetDataCompleteExamining();\r\n        }\r\n    }, [props.openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalCompleteExamining} disableEscapeKeyDown={true}>\r\n            <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Tóm tắt quá trình khám</DialogTitle>\r\n            <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                <Box sx={{pl: 6, pr: 6}}>\r\n                    <List sx={{p: 0}}>\r\n                        <Box>\r\n                            {mainDataExaminingForConclusion.length !== 0 ? \r\n                                <div className='container-complete-examining'>\r\n                                    <div className='category-complete-examining'>\r\n                                        {mainDataExaminingForConclusion.categories.map((categoriesItem, categoriesIndex) => (\r\n                                            <>\r\n                                                <Box>\r\n                                                    <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                    {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                        <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                            <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                                            \r\n\r\n                                                            {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Grid container rowSpacing={0}>\r\n                                                                    {questionIndex === 0 ?\r\n                                                                        <>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                            </Grid> \r\n\r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                        <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                \r\n                                                                                    <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            : \r\n                                                                                <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                </Grid>\r\n                                                                            }   \r\n                                                                        </>\r\n                                                                    :\r\n                                                                        null\r\n                                                                    }\r\n\r\n                                                                    <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                            <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                        </Grid>\r\n                                                                        \r\n                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                            <>\r\n                                                                                <Grid item xs={2.5} \r\n                                                                                    sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                        sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'/>\r\n                                                                                </Grid>\r\n                                                                                <Grid item xs={5.5} >\r\n                                                                                    <div className='note-for-answer'>\r\n                                                                                        <div className='suggest-note'>                                                                          \r\n                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </Grid>\r\n                                                                            </>\r\n                                                                        :\r\n                                                                            <>\r\n                                                                                <Grid item xs={8} >\r\n                                                                                    <div className='note-for-answer'>\r\n                                                                                        <div className='suggest-note'>                                                                          \r\n                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentAnswer}/>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </Grid>\r\n                                                                            </>\r\n                                                                        }                                                                                                                                                                          \r\n                                                                    </Box>\r\n                                                                </Grid>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </Box>\r\n                                            </>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            :\r\n                                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Không có nội dung nào được khám.</Typography>\r\n                            }\r\n                        </Box>\r\n        \r\n                    </List>\r\n                </Box>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <div style={{width: '100%', padding: '8px 50px 8px 50px'}}>\r\n                    <TextareaAutosize placeholder='Kết luận của bác sĩ' style={{width: '100%', padding: '15px', fontSize: '17px', marginBottom: '4px'}}/>\r\n\r\n                    <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                        <Stack spacing={1} direction=\"row\">\r\n                            <Button sx={{fontSize: '17px', textTransform: 'none'}} variant='contained'\r\n                                >Lưu (F4)</Button>\r\n                            <Button sx={{fontSize: '17px', textTransform: 'none'}} variant='contained' color={'error'}\r\n                                onClick={() => props.setOpenModalCompleteExamining(false)}>Đóng (ESC)</Button>\r\n                        </Stack>\r\n                    </div>\r\n                </div>                \r\n            </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteExamining","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nfunction AlertConfirm(props) {\r\n    return (\r\n        <>\r\n            <Dialog open={props.openAlertConfirmModal}>\r\n                <DialogTitle>{props.titleConfirm}</DialogTitle>\r\n                <DialogActions sx={{m: 'auto'}}>\r\n                    <Button sx={{fontWeight: 'bolder', fontSize: '17px', ':hover': {backgroundColor: 'rgba(25, 118, 210, 0.1)'}}} \r\n                    onClick={props.onConfirmAlertConfirmModal}>Có</Button>\r\n                    <Button sx={{fontWeight: 'bolder', color: 'red', fontSize: '17px', ':hover': {backgroundColor: 'rgb(210, 25, 25, 0.1)'}}} \r\n                    onClick={props.onCloseAlertConfirmModal}>Không</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertConfirm","import React, { useState, useContext, useEffect } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Chip from '@mui/material/Chip';\r\nimport Button from '@mui/material/Button';\r\n//mui icon\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\n//\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n//scss\r\nimport './SCSS/HealthRecords.scss';\r\n\r\nfunction HealthRecords(props) {\r\n\r\n    const listHealthRecords = [\r\n      {periodExams: 'Khám 21 tháng', status: 0, dateExams: '20/04/2024', doctorExams: '', conclude: ''},\r\n      {periodExams: 'Khám 20 tháng', status: 2, dateExams: '10/03/2024', doctorExams: 'Nguyễn Văn A', conclude: 'kết luận 2'},\r\n      {periodExams: 'Khám 18 tháng', status: 2, dateExams: '01/01/2024', doctorExams: 'Nguyễn Văn A', conclude: 'kết luận 1'},\r\n      {periodExams: 'Khám 20 tháng', status: 2, dateExams: '10/03/2024', doctorExams: 'Nguyễn Văn A', conclude: 'kết luận 2'},\r\n      {periodExams: 'Khám 18 tháng', status: 2, dateExams: '01/01/2024', doctorExams: 'Nguyễn Văn A', conclude: 'kết luận 1'},\r\n      {periodExams: 'Khám 20 tháng', status: 2, dateExams: '10/03/2024', doctorExams: 'Nguyễn Văn A', conclude: 'kết luận 2'},\r\n      {periodExams: 'Khám 18 tháng', status: 2, dateExams: '01/01/2024', doctorExams: 'Nguyễn Văn A', conclude: 'kết luận 1'}\r\n    ]\r\n\r\n    const handleCloseModalHealthRecords = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalHealthRecords(false);\r\n      }\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const MainDataExaminingFake = [\r\n      {\r\n          \"categoryName\": \"Nhóm máu mẹ / con\",\r\n          \"categoryContents\": [\r\n              {\r\n                  \"categoryContentOrder\": 1,\r\n                  \"categoryContentTitle\": null,\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Nhóm máu mẹ\",\r\n                          \"categoryContentQuestionType\": \"string\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Nhóm máu con\",\r\n                          \"categoryContentQuestionType\": \"string\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      },\r\n      {\r\n          \"categoryName\": \"Tiểu sử bệnh lý của mẹ\",\r\n          \"categoryContents\": [\r\n              {\r\n                  \"categoryContentOrder\": 1,\r\n                  \"categoryContentTitle\": \"Bệnh lý trước mang thai\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Hen suyễn\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Tiểu đường\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Béo phì\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"Bệnh lý tuyến giáp\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 5,\r\n                          \"categoryContentQuestionName\": \"Bệnh tim\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 6,\r\n                          \"categoryContentQuestionName\": \"Bệnh thận mạn\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 7,\r\n                          \"categoryContentQuestionName\": \"Sức khỏe răng miệng kém\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 8,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"categoryContentOrder\": 2,\r\n                  \"categoryContentTitle\": \"Biến chứng thai kỳ\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Tiểu đường thai kỳ\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Tăng huyết áp thai kỳ\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Tiền sản giật\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"Sản giật\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 5,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"categoryContentOrder\": 3,\r\n                  \"categoryContentTitle\": \"Bệnh lý nhiễm trùng\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Nhiễm Streptococcus nhóm B\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Viêm màng ối\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Nhiễm trùng tiết niệu\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"HIV\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 5,\r\n                          \"categoryContentQuestionName\": \"Viêm gan B\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 6,\r\n                          \"categoryContentQuestionName\": \"Giang mai\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 7,\r\n                          \"categoryContentQuestionName\": \"Nhiễm Toxoplasma\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 8,\r\n                          \"categoryContentQuestionName\": \"Nhiễm CMV\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 9,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"categoryContentOrder\": 4,\r\n                  \"categoryContentTitle\": \"Thuốc / Độc chất\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Thuốc lá\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Rượu\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Thuốc đang sử dụng\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"Thuốc đã sử dụng\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 5,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      },\r\n      {\r\n          \"categoryName\": \"Tiền căn sản khoa\",\r\n          \"categoryContents\": [\r\n              {\r\n                  \"categoryContentOrder\": 1,\r\n                  \"categoryContentTitle\": null,\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Tuổi thai (tuần)\",\r\n                          \"categoryContentQuestionType\": \"string\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Cân nặng (kg)\",\r\n                          \"categoryContentQuestionType\": \"string\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Chiều dài (cm)\",\r\n                          \"categoryContentQuestionType\": \"string\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"Vòng đầu (cm)\",\r\n                          \"categoryContentQuestionType\": \"string\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"categoryContentOrder\": 2,\r\n                  \"categoryContentTitle\": \"Tình trạng trước sinh\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Sinh non\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": \"Tuổi thai: \"\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Ối vỡ sớm\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": \"Thời gian vỡ ối: \"\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Sinh thường\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": \"Can thiệp: \"\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"Sinh mổ\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": \"Lý do mổ: \"\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 5,\r\n                          \"categoryContentQuestionName\": \"Chuyển dạ kéo dài\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": \"Thời gian chuyển dạ\"\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 6,\r\n                          \"categoryContentQuestionName\": \"Sốt lúc sinh\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 7,\r\n                          \"categoryContentQuestionName\": \"Chảy máu lúc sinh\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 8,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"categoryContentOrder\": 3,\r\n                  \"categoryContentTitle\": \"Tình trạng khi sinh\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Bất thường lúc sinh\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Bệnh lý bẩm sinh\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Tiêm ngừa lao\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"Tiêm ngừa VGSV B\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 5,\r\n                          \"categoryContentQuestionName\": \"Tiêm Vitamin K1\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 6,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"categoryContentOrder\": 4,\r\n                  \"categoryContentTitle\": \"Chăm sóc sau sinh\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Nằm với mẹ\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Dưỡng nhi\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Chăm sóc đặc biệt\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"Sữa mẹ\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 5,\r\n                          \"categoryContentQuestionName\": \"Sữa công thức\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 6,\r\n                          \"categoryContentQuestionName\": \"Vitamin D\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 7,\r\n                          \"categoryContentQuestionName\": \"Vàng da\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 8,\r\n                          \"categoryContentQuestionName\": \"Bệnh lý cần theo giỏi\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 9,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      },\r\n      {\r\n          \"categoryName\": \"Xét nghiệm\",\r\n          \"categoryContents\": [\r\n              {\r\n                  \"categoryContentOrder\": 1,\r\n                  \"categoryContentTitle\": null,\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Huyết đồ\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Tổng quát\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Điện di Hemoglobin\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"Bilan đạm, lipid (bệnh nhân suy dinh dưỡng, béo phì)\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 5,\r\n                          \"categoryContentQuestionName\": \"Tổng quan tích nước tiểu\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 6,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      },\r\n      {\r\n          \"categoryName\": \"Khám tổng quát\",\r\n          \"categoryContents\": [\r\n              {\r\n                  \"categoryContentOrder\": 1,\r\n                  \"categoryContentTitle\": \"Khám da\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Rối loạn sắc tố\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Sang thương da\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Tình trạng móng\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"categoryContentOrder\": 2,\r\n                  \"categoryContentTitle\": \"Khám đầu\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Thóp trước (thường đóng lúc 14 tháng)\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Biến dạng họp sọ\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"categoryContentOrder\": 3,\r\n                  \"categoryContentTitle\": \"Khám mắt\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Mi mắt\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Nhãn cầu\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Đồng tử\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"Phản xạ ánh sáng đỏ\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 5,\r\n                          \"categoryContentQuestionName\": \"Vận động mắt theo vật\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 6,\r\n                          \"categoryContentQuestionName\": \"Đánh giá thị lực theo bảng câu hỏi\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": \"Bảng thị lực\"\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 7,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"categoryContentOrder\": 4,\r\n                  \"categoryContentTitle\": \"Khám miệng\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Nấm miệng\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Sâu răng\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Mảng bám\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"viêm nướu\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 5,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"categoryContentOrder\": 5,\r\n                  \"categoryContentTitle\": \"Khám tim\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Nhịp tim\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Âm thổi\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"categoryContentOrder\": 6,\r\n                  \"categoryContentTitle\": \"Khám bụng\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Rốn\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Khối vùng bụng\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"categoryContentOrder\": 7,\r\n                  \"categoryContentTitle\": \"Khám xương khớp\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Dị tật cột sống\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Dị tật chi\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Bàn chân bẹt\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"Dáng đi bất thường\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 5,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              },\r\n              {\r\n                  \"categoryContentOrder\": 8,\r\n                  \"categoryContentTitle\": \"Khám thần kinh\",\r\n                  \"categoryContentQuestions\": [\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 1,\r\n                          \"categoryContentQuestionName\": \"Tương tác giao tiếp\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 2,\r\n                          \"categoryContentQuestionName\": \"Nhận thức\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 3,\r\n                          \"categoryContentQuestionName\": \"Vận động thô\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 4,\r\n                          \"categoryContentQuestionName\": \"Vận động tinh\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 5,\r\n                          \"categoryContentQuestionName\": \"Sức cơ\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      },\r\n                      {\r\n                          \"categoryContentQuestionOrder\": 6,\r\n                          \"categoryContentQuestionName\": \"Khác\",\r\n                          \"categoryContentQuestionType\": \"check\",\r\n                          \"categoryContentAnswer\": null,\r\n                          \"categoryContentNote\": null\r\n                      }\r\n                  ]\r\n              }\r\n          ]\r\n      }\r\n  ]\r\n\r\n    const [dataExaminingSelected, setDataExaminingSelected] = useState(MainDataExaminingFake);\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState([]);\r\n\r\n    const [openCollapse, setOpenCollapse] = useState([]);\r\n\r\n    //state vị trí nội dung hiện tại\r\n    const [currentContentExamining, setCurrentContentExamining] = useState([1]);\r\n\r\n    const handleSetDataCompleteExamining = () => {\r\n        setDataExaminingSelected(MainDataExaminingFake);\r\n\r\n        // const editMainDataExamining = props.mainDataExamining.filter((data) => data.categoryName !== 'Sổ sức khỏe' && data.categoryName !== 'Đánh giá dinh dưỡng' && data.categoryName !== 'Sổ tiêm ngừa');\r\n        // setDataExaminingSelected(editMainDataExamining);\r\n\r\n        const editMainDataExamining = [...dataExaminingSelected];\r\n\r\n        //console.log(editMainDataExamining);\r\n\r\n        const processedData = editMainDataExamining.map(category => {\r\n            const firstContent = category.categoryContents[0];\r\n            return {\r\n              ...category,\r\n              categoryContents: [firstContent],\r\n              contentQuantity: category.categoryContents.length\r\n            };\r\n          });\r\n\r\n        setMainDataExaminingForConclusion(processedData);\r\n\r\n        // console.log(processedData);\r\n    }\r\n\r\n    const handleOpenCollapseByCategory = (categoryIndex) => {\r\n        setOpenCollapse((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryIndex] = !newOpen[categoryIndex];\r\n            return newOpen;\r\n        });\r\n    };\r\n\r\n    const handleAnswerCheckQuestion = () => {\r\n        console.log(dataExaminingSelected);\r\n    }\r\n\r\n    const handleOnChangePage = (categoryIndex, page) => {\r\n        //set lại số trang hiện tại\r\n        setCurrentContentExamining((prevCurrentContentExamining) => {\r\n            const newContentExamining = [...prevCurrentContentExamining];\r\n            newContentExamining[categoryIndex] = newContentExamining[categoryIndex + 1];\r\n            return newContentExamining;\r\n        })\r\n\r\n        //\r\n        // console.log('index category: ', categoryIndex, 'trang tiep theo: ', page);\r\n        //console.log(dataExaminingSelected[categoryIndex].categoryContents[page - 1]);\r\n\r\n        const a = [...mainDataExaminingForConclusion];\r\n        const b = dataExaminingSelected[categoryIndex].categoryContents[page - 1];\r\n\r\n        a[categoryIndex].categoryContents = [b];\r\n\r\n        setMainDataExaminingForConclusion(a);\r\n\r\n        // console.log(a);\r\n        // console.log(mainDataExaminingForConclusion);\r\n        // console.log([b]);\r\n\r\n        //console.log(mainDataExaminingForConclusion[categoryIndex].categoryContents);\r\n\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n      handleSetDataCompleteExamining();\r\n    }, [])\r\n  \r\n\r\n    return (\r\n      <>\r\n          <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalHealthRecords} onClose={(event, reason) => handleCloseModalHealthRecords(event, reason)} disableEscapeKeyDown={true}>\r\n              <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Khám 20 tháng</DialogTitle>\r\n              <IconButton onClick={() => handleCloseModalHealthRecords()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                <CloseIcon fontSize='medium'/>\r\n              </IconButton>\r\n              <DialogContent dividers sx={{pt: '15px', pb: '15px'}}>\r\n                  <Box sx={{pl: 6, pr: 6}}>\r\n                  <List sx={{p: 0}}>\r\n                        {mainDataExaminingForConclusion.map((categoryItem, categoryIndex) => (\r\n                            <Box key={`category ${categoryIndex}`}>\r\n                                {/* cây thư mục khám */}\r\n                                <ListItemButton sx={{pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}, backgroundColor: ''}} onClick={() => handleOpenCollapseByCategory(categoryIndex)}>\r\n                                    <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                    <ListItemText primary={categoryItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                </ListItemButton>\r\n\r\n                                <Collapse in={openCollapse[categoryIndex]} timeout=\"auto\" unmountOnExit>\r\n                                    {categoryItem.categoryContents.map((contentItem, contentIndex) => (\r\n                                        <div key={`category ${categoryIndex} content ${contentIndex}`} className='header-content-category'>\r\n                                            <div className='content-examining'>\r\n                                                <div className='title-examining'>\r\n                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mt: 0, mb: 0.2}}>{contentItem.categoryContentTitle}</Typography>\r\n                                                </div>       \r\n\r\n\r\n                                                <div className='question-examining' style={contentItem.categoryContentTitle === null ? {marginTop: '25px'} : {marginTop: '2px'}}>\r\n                                                    {contentItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                        <Box key={`category ${categoryIndex} content ${contentIndex} question ${questionIndex}`}>\r\n                                                            <Grid container rowSpacing={0}>\r\n                                                                {questionIndex === 0 ? \r\n                                                                    <>\r\n                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>Tình trạng</Typography>\r\n                                                                        </Grid>\r\n\r\n                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                            <>\r\n                                                                                <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                        <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>Có</Typography>\r\n                                                                                </Grid>\r\n                                                                                <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>Ghi chú</Typography>\r\n                                                                                </Grid>\r\n                                                                            </>\r\n                                                                            : \r\n                                                                                <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>Giá trị</Typography>\r\n                                                                                </Grid>\r\n                                                                        }                                                                                \r\n                                                                    </>\r\n                                                                    : \r\n                                                                        null\r\n                                                                }\r\n\r\n                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                </Grid>\r\n                                                                \r\n                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                    <>\r\n                                                                        <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                            <Checkbox checked={questionItem.categoryContentAnswer === true ? true : false } color='error' sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} onClick={() => handleAnswerCheckQuestion(categoryIndex)}></Checkbox>\r\n                                                                        </Grid>\r\n\r\n                                                                        <Grid item xs={7} >\r\n                                                                            <div className='note-for-answer'>\r\n                                                                                <div className='suggest-note' key={`category ${categoryIndex} content ${contentIndex} question ${questionIndex} current ${currentContentExamining[categoryIndex]}`}>                                                                          \r\n                                                                                    <TextareaAutosize className='test' rows={1} style={{width: '100%', color: 'red', border: 'none', outline: 'none'}} \r\n                                                                                        \r\n                                                                                        //value={questionItem.categoryContentNote}\r\n                                                                                    />\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </Grid>\r\n                                                                    </>   \r\n                                                                    :\r\n                                                                    <>\r\n                                                                        <Grid item xs={8}>\r\n                                                                            <input type='text' className='value-for-answer' defaultValue={questionItem.categoryContentAnswer} />\r\n                                                                        </Grid>\r\n                                                                    </>\r\n                                                                }\r\n                                                            </Grid>\r\n                                                        </Box>\r\n                                                    ))}\r\n                                                </div>                                             \r\n                                            </div>\r\n\r\n                                            <div className='footer-content-category'>\r\n                                                <Pagination count={categoryItem.contentQuantity} page={currentContentExamining[categoryIndex]} color=\"success\" sx={{m: 'auto'}} onChange={(e, page) => handleOnChangePage(categoryIndex, page)}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </Collapse>\r\n                            </Box>\r\n                        ))}\r\n                    </List>\r\n                    <TextareaAutosize disabled placeholder='Kết luận của bác sĩ' style={{width: '100%', height: '10vh', padding: '10px', fontSize: '18px', marginTop: '5px'}} value={'đây là kết luận'}/>\r\n                  </Box>\r\n              </DialogContent>\r\n              <DialogActions sx={{justifyContent: 'center'}}>\r\n                <Button variant='contained' color='secondary' onClick={(event, reason) => handleCloseModalHealthRecords(event, reason)}>Đóng</Button>\r\n              </DialogActions>\r\n          </Dialog>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default HealthRecords\r\n\r\n\r\n\r\n\r\n\r\n\r\n// <Box>\r\n//                     <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', fontSize: '1.2rem'}}>Thông tin bệnh nhân</Typography>\r\n//                       <Box sx={{pl: 2, pr: 2, mt: 1, mb: 1}}>\r\n//                         <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n//                           <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n//                             <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Mã BN: 000001</Typography>\r\n//                           </Grid>\r\n//                           <Grid item xs={8} sx={{display: 'inline-flex'}}>\r\n//                             <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Họ tên: Tạ Thị Phương Thảo Thảo Thảo</Typography>\r\n//                           </Grid>\r\n//                           <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n//                             <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: 01/01/2024</Typography>\r\n//                           </Grid>\r\n//                           <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n//                             {/* <MaleIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Giới tính: Nam</Typography> */}\r\n//                             <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Giới tính: Nữ</Typography>\r\n//                           </Grid>\r\n//                           <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n//                             <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Tháng tuổi: 4</Typography>\r\n//                           </Grid>\r\n//                           <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n//                             <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Số điện thoại: 0987654321</Typography>\r\n//                           </Grid>\r\n//                           <Grid item xs={8} sx={{display: 'inline-flex'}}>\r\n//                             <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Địa chỉ: Đây là địa chỉ</Typography>\r\n//                           </Grid>\r\n//                         </Grid>\r\n//                       </Box>\r\n//                     <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', fontSize: '1.2rem', mt: 1.4, mb: 0.5}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n//                     <TableContainer component={Paper} sx={{boxShadow: 4, mb: 1.5}}>\r\n//                       <Table stickyHeader>\r\n//                         <TableHead>\r\n//                             <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n//                             <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n//                             <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n//                             <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n//                             <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n//                             <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n//                           </TableRow>\r\n//                         </TableHead>\r\n//                         <TableBody sx={{\":before\": {boxSizing: 'unset'}, \":after\": {boxSizing: 'unset'}}}>\r\n//                         {listHealthRecords.map((row, index) => (\r\n//                           <TableRow hover role=\"checkbox\" key={index} sx={{cursor: 'pointer',}} onClick={(e) => console.log(row)}>\r\n//                             <TableCell align='left' sx={{width: '120px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{row.periodExams}</TableCell>\r\n//                             <TableCell align='left' sx={{width: '105px'}}>{handleRenderExamsStatus(row.status)}</TableCell>\r\n//                             <TableCell align='left' sx={{width: '62px'}}>{row.dateExams}</TableCell>\r\n//                             <TableCell align='left' sx={{width: '120px'}}>{row.doctorExams}</TableCell>\r\n//                             <TableCell align='left' sx={{width: '160px'}}>{row.conclude}</TableCell>\r\n//                           </TableRow>\r\n//                         ))}\r\n//                        </TableBody>\r\n//                       </Table>\r\n//                     </TableContainer>\r\n//                   </Box>","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//fake data\r\nimport MainDataExaminingFake from '../../assets/data/MainDataExaminingFake.json'\r\nimport MainDataHealthRecordsFake from '../../assets/data/MainDataHealthRecordsFake.json'\r\n//modal\r\nimport CompleteExamining from '../ManageCompleteExamining/CompleteExamining';\r\nimport AlertConfirm from '../ManageAlertConfirm/AlertConfirm';\r\nimport HealthRecords from '../ManageHealthRecords/HealthRecords';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { GiWeightScale } from \"react-icons/gi\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\n\r\n//moment\r\nimport moment from 'moment';\r\n//scss\r\nimport './SCSS/DoctorExamining.scss';\r\n\r\nfunction MainDoctorExamining() {\r\n    const dataPantientsReadyExaminingDefault = {\r\n        stt: '',\r\n        patientsId: '',\r\n        patientsName: '',\r\n        patientsDOB: '',\r\n        patientsGender: '',\r\n        patientsHeight: '',\r\n        patientsWeight: '',\r\n        patientsPhone: '',\r\n        patientsAddress: ''\r\n    }\r\n\r\n    const listDataPantientsWaitExaminingFake = [\r\n      {stt: 1, patientsId: '000001', patientsName: 'ABC', patientsDOB: '2000-01-01', patientsGender: '1', patientsHeight: 120, patientsWeight: 10, patientsPhone: '0987654321', patientsAddress: 'Hồ Chí Minh', status: 0},\r\n      {stt: 2, patientsId: '000002', patientsName: 'Tạ Thị Phương Thảo', patientsDOB: '2023-12-10', patientsGender: '1', patientsHeight: 125, patientsWeight: 8, patientsPhone: '0987654321', patientsAddress: 'Hà Nội', status: 0},\r\n      {stt: 3, patientsId: '000003', patientsName: 'GHI', patientsDOB: '2023-05-26', patientsGender: '0', patientsHeight: 135, patientsWeight: 19, patientsPhone: '0987654321', patientsAddress: 'Đà Nẵng', status: 0},\r\n      {stt: 4, patientsId: '000004', patientsName: 'JKL', patientsDOB: '2023-01-10', patientsGender: '0', patientsHeight: 137, patientsWeight: 27, patientsPhone: '0987654321', patientsAddress: 'Thừa Thiên Huế', status: 0},\r\n      {stt: 5, patientsId: '000005', patientsName: 'MNO', patientsDOB: '2023-11-22', patientsGender: '1', patientsHeight: 110, patientsWeight: 14, patientsPhone: '0987654321', patientsAddress: 'Cà Mau', status: 0},\r\n  ]\r\n\r\n    //state danh sách bệnh nhân chờ khám ban đầu\r\n    const [listDataPantientsWaitExamining, setListDataPantientsWaitExamining] = useState(listDataPantientsWaitExaminingFake);\r\n\r\n    //state thông tin bệnh nhân ban đầu \r\n    const [dataPantientsReadyExamining, setDataPantientsReadyExamining] = useState(dataPantientsReadyExaminingDefault);\r\n\r\n    //state các category gồm tiêu đề nội dung khám và câu hỏi khám ban đầu\r\n    const [mainDataExamining, setMainDataExamining] = useState([]);\r\n\r\n    //state đóng mở cây thư mục khám của sổ khám bệnh\r\n    const [openCollapseHealthRecords, setOpenCollapseHealthRecords] = useState(false);\r\n\r\n    //state đóng mở chi tiết nội dung của sổ khám bệnh\r\n    const [openCollapseHealthRecordsItem, setOpenCollapseHealthRecordsItem] = useState([]);\r\n\r\n    //state chọn danh mục khám ban đầu\r\n    const [categorySelectedExamining, setCategorySelectedExamining] = useState({});\r\n\r\n    //state chọn danh mục bao gồm nội dung bên trong ban đầu\r\n    const [contentCategorySelectedExamining, setContentCategorySelectedExamining] = useState([]);\r\n\r\n    //state lưu tạm nội dung chi tiết của sổ khám bệnh\r\n    const [healthRecordsContents, setHealthRecordsContents] = useState([]);\r\n\r\n    //state vị trí nội dung hiện tại\r\n    const [currentContentExamining, setCurrentContentExamining] = useState(1);\r\n\r\n    //state vị trí nội dung hiện tại của sổ khám bệnh\r\n    const [currentContentHealthRecords, setCurrentContentHealthRecords] = useState(1);\r\n\r\n    //state các câu hỏi được bác sĩ khám tích hoặc gõ vào\r\n    const [dataExaminingForConclusion , setDataExaminingForConclusion ] = useState({});\r\n\r\n    //state quản lý modal sổ sức khỏe\r\n    const [openModalHealthRecords, setOpenModalHealthRecords] = useState(false);\r\n\r\n    //state quản lý modal xác nhận\r\n    const [openModalAlertConfirm, setOpenModalAlertConfirm] = useState(false);\r\n\r\n    //state quản lý modal kết thúc khám\r\n    const [openModalCompleteExamining, setOpenModalCompleteExamining] = useState(false);\r\n\r\n    //nhấn chọn bệnh nhân để load vào ô thông tin bn\r\n    const handleSelectPantientExamining = (dataPantientItem) => {\r\n      if(dataPantientsReadyExamining.patientsId === ''){\r\n        setDataPantientsReadyExamining(dataPantientItem);\r\n      }\r\n      else if(dataPantientsReadyExamining.patientsId !== ''){\r\n        if(dataPantientsReadyExamining.status === 0){\r\n          setDataPantientsReadyExamining(dataPantientItem);\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 1){\r\n          alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n        }\r\n      }\r\n    }\r\n\r\n    //nhấn bắt đầu để khám bệnh cho bệnh nhân\r\n    const handleBeginExaminingForPantient = () => {\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.status = 1;\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n\r\n        MainDataExaminingFake.categoryPres.forEach((categoryPresItem, categoryPresIndex) => {\r\n            categoryPresItem.categoryContents = categoryPresItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => {\r\n                return {\r\n                    ...categoryContentsItem,\r\n                    categoryPresOrder: categoryPresIndex\r\n                }\r\n            })\r\n            return {\r\n                ...categoryPresItem,\r\n            }\r\n        })\r\n\r\n\r\n        setMainDataExamining(MainDataExaminingFake);\r\n\r\n        //setListDataPantientsWaitExamining((prevListDataPantientsWaitExamining) => prevListDataPantientsWaitExamining.filter((item) => item.patientsId !== _dataPantientsReadyExamining.patientsId));\r\n\r\n        setListDataPantientsWaitExamining(prevListDataPantientsWaitExamining => \r\n            prevListDataPantientsWaitExamining.map(dataPantientitem => \r\n                dataPantientitem.patientsId === dataPantientsReadyExamining.patientsId ? { ...dataPantientitem, status: 1 } : dataPantientitem\r\n            )\r\n        )\r\n\r\n        const editDataCategoryPresForConclusion = MainDataExaminingFake.categoryPres.map((categoryPresItem, categoryPresIndex) => {\r\n            const mainCategoryContentsExamining = categoryPresItem.categoryContents.map((categoryContentsItem) => {\r\n                const categoryContents = {\r\n                    categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                    categoryContentName: categoryContentsItem.categoryContentName,\r\n                    categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                    categoryContentText: categoryContentsItem.categoryContentText,\r\n                    categoryContentQuestions: []\r\n                }\r\n                return categoryContents\r\n            })\r\n\r\n            const mainCategoryExamining = {\r\n                categoryName: categoryPresItem.categoryName,\r\n                categoryContents: mainCategoryContentsExamining\r\n            }\r\n\r\n            return mainCategoryExamining\r\n        })\r\n\r\n        const editDataHealthRecordsForConclusion = MainDataExaminingFake.healthRecords.find((healthRecordsItem) => healthRecordsItem.state === 1)\r\n\r\n        setDataExaminingForConclusion({\r\n            medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n            conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n            categories: editDataCategoryPresForConclusion\r\n        });\r\n    }\r\n\r\n    //chọn mục lục để khám\r\n    const handleSelectCategoryClick = (categoryIncludeCotent) => {\r\n        if(openCollapseHealthRecords === true){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                ...categoryIncludeCotent,\r\n                contentQuantity: categoryIncludeCotent.categoryContents.length\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(categoryIncludeCotent.categoryContents[0]);\r\n\r\n        setCurrentContentExamining(1);\r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n    }\r\n\r\n    //chọn cây thư mục khám sổ sức khỏe\r\n    const handleSelectHealthRecords = (healthRecords) => {\r\n        if(openCollapseHealthRecords === false){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }        \r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                categoryName: 'Sổ sức khỏe',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(\r\n            {\r\n                healthRecordsContentsType: 'tree',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n    }\r\n\r\n    //chọn chỉ định một sổ khám bệnh \r\n    const handleSelectHealthRecordsItem = (medicalBookId, examinationName, healthRecordsState) => {\r\n        setHealthRecordsContents({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: MainDataHealthRecordsFake.medicakBook.newMedicalBook,\r\n            categoryPatients: MainDataHealthRecordsFake.medicakBook.categories\r\n        })\r\n\r\n        const editHealthRecordsContent = MainDataHealthRecordsFake.medicakBook.categories.map((categoryPatientsItem, categoryPatientsIndex) => {\r\n            const categoryName = categoryPatientsItem.categoryName;\r\n            const firstContent = categoryPatientsItem.categoryContents[0];\r\n\r\n            return{\r\n                categoryName: categoryName,\r\n                categoryContents: firstContent,\r\n                currentHealthRecordsContent: 1,\r\n                contentQuantity: categoryPatientsItem.categoryContents.length\r\n            }\r\n        })\r\n\r\n        const updateHealthRecordsContent = {\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: MainDataHealthRecordsFake.medicakBook.newMedicalBook,\r\n            conclusion: MainDataHealthRecordsFake.medicakBook.conclusion,\r\n            categoryPatients: editHealthRecordsContent\r\n        }\r\n\r\n        setContentCategorySelectedExamining(updateHealthRecordsContent);\r\n\r\n        if(healthRecordsState === 1){\r\n\r\n            const editDataHealthRecordsItemForConclusion = MainDataHealthRecordsFake.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n                \r\n                const mainCategoryExamining = {\r\n                    categoryName: categoriesItem.categoryName,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n\r\n                return mainCategoryExamining\r\n            })\r\n\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    //chọn loại mục khám của một sổ khám bệnh\r\n    const handleOpenHealthRecordsItem = (categoryPatientsIndex) => {\r\n        setOpenCollapseHealthRecordsItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryPatientsIndex] = !newOpen[categoryPatientsIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleOnChangePage = (event, value) => {\r\n         setContentCategorySelectedExamining(categorySelectedExamining.categoryContents[value - 1]);\r\n         setCurrentContentExamining(value);\r\n    }\r\n\r\n    const handeOnChangePageHealthRecords = (event, page, categoryIndex) => {\r\n        const _contentCategorySelectedExamining = {...contentCategorySelectedExamining};\r\n        _contentCategorySelectedExamining.categoryPatients[categoryIndex].categoryContents = healthRecordsContents.categoryPatients[categoryIndex].categoryContents[page - 1];\r\n        _contentCategorySelectedExamining.categoryPatients[categoryIndex].currentHealthRecordsContent = page;\r\n        setContentCategorySelectedExamining(_contentCategorySelectedExamining);\r\n    }\r\n\r\n    const handleAnswerCheckQuestion = (questionIndex, answer) => {\r\n        //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng check\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            )\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = false\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            )\r\n        }\r\n        else{\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion();\r\n        }   \r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const handleNoteCheckQuestion = (questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            //createSelectedQuestionsExaminingForConclusion();\r\n        }, 300)\r\n    }\r\n\r\n    const handleAnswerValueQuestion = (questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = takenValue;\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentTitle,\r\n            )\r\n        }, 100)\r\n    }\r\n\r\n    const handleAnswerCheckQuestionHealthRecords = (categoryPatientsIndex, currentHealthRecordsContent, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                currentHealthRecordsContent - 1,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            );\r\n        }\r\n\r\n        else if(answer === true){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = false;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                currentHealthRecordsContent - 1,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            );\r\n        }\r\n\r\n        else{\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                currentHealthRecordsContent - 1,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            );\r\n        }\r\n    }\r\n    \r\n    const handleNoteCheckQuestionHealthRecords = (categoryPatientsIndex, currentHealthRecordsContent, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n        }, 300)\r\n    }\r\n\r\n    const createSelectedQuestionsExaminingForConclusion = (categoryName, currentCategory, categoryContentQuestion, questionOrder, categoryContentTitle) => {\r\n        //question dạng check nhưng answer là true\r\n        if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    categoriesItem.categoryContents[currentCategory].categoryContentQuestions.push(categoryContentQuestion)\r\n                }\r\n            })\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n\r\n        //question dạng check nhưng answer là false\r\n        else if(categoryContentQuestion.categoryContentAnswer === false && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    const removeSelectedQuestion = categoriesItem.categoryContents[currentCategory].categoryContentQuestions.filter((questionItem) => questionItem.categoryContentQuestionOrder !== questionOrder)\r\n                    categoriesItem.categoryContents[currentCategory].categoryContentQuestions = removeSelectedQuestion\r\n                }\r\n            })\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion)\r\n        }\r\n        //question dạng giá trị nhưng khác rỗng\r\n        else if(categoryContentQuestion.categoryContentAnswer !== '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n            //console.log(categoryName, currentCategory, categoryContentQuestion, questionOrder);\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            // _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n            //     if(categoriesItem.categoryName === categoryName){\r\n            //         categoriesItem.categoryContents.forEach((categoryContentsItem) => {\r\n            //             if(categoryContentsItem.categoryContentQuestions.length === 0){\r\n            //                 categoriesItem.categoryContents[currentCategory].categoryContentQuestions.push(categoryContentQuestion);\r\n            //                 console.log('mảng rỗng')\r\n            //             }\r\n            //             else if(categoryContentsItem.categoryContentQuestions.length !== 0){\r\n            //                 const check = categoryContentsItem.categoryContentQuestions.find((categoryContentQuestionsItem) => (categoryContentQuestionsItem.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName))\r\n            //                 if(check){\r\n            //                     categoryContentsItem.categoryContentQuestions.forEach((categoryContentQuestionsItem) => {\r\n            //                         if(categoryContentQuestionsItem.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName)\r\n            //                         {\r\n            //                             categoryContentQuestionsItem.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n            //                             //mảng đã có câu hỏi đã chọn\r\n            //                             console.log('mảng đã có câu hỏi đã chọn')\r\n            //                         } \r\n            //                     })\r\n            //                 }\r\n            //                 else{\r\n            //                     categoriesItem.categoryContents[currentCategory].categoryContentQuestions.push(categoryContentQuestion);\r\n            //                     //mảng chưa có câu hỏi đã chọn\r\n            //                     console.log('mảng chưa có câu hỏi đã chọn');\r\n            //                 }\r\n            //             }\r\n            //         })\r\n            //     }\r\n            // })\r\n\r\n\r\n            // _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n            //     // Duyệt qua từng categoryContentsItem trong categoryContents\r\n            //     if(categoriesItem.categoryName === categoryName){\r\n            //         categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n            //             // Kiểm tra nếu categoryContentQuestions không rỗng\r\n            //             if (categoryContentsItem.categoryContentQuestions.length === 0) {\r\n            //                  // Nếu categoryContentQuestions rỗng, thêm mới đối tượng vào categoryContentQuestions\r\n            //                  console.log('Nếu categoryContentQuestions rỗng, thêm mới đối tượng vào categoryContentQuestions');\r\n            //                  categoriesItem.categoryContents[currentCategory].categoryContentQuestions.push(categoryContentQuestion);\r\n            //             } else {\r\n            //                // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n            //                 const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n            //                     question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n            //                 );\r\n            \r\n            //                 if (existingQuestion) {\r\n            //                     // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n            //                     existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n            //                 } else {\r\n            //                     // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions   \r\n            //                     console.log('Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions');\r\n            //                     categoriesItem.categoryContents[currentCategory].categoryContentQuestions.push(categoryContentQuestion);\r\n            //                 }\r\n            //             }\r\n            //         });       \r\n            //     }\r\n            // });\r\n\r\n            // Duyệt qua từng categoriesItem trong categories\r\n            _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                    categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                        if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                            // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                            if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                    question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                );\r\n                \r\n                                if (existingQuestion) {\r\n                                    // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                    existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                } else {\r\n                                    // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                    categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                }\r\n\r\n                            } else {\r\n                            // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                            }\r\n                        }\r\n                    });        \r\n                }\r\n            });\r\n\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n        //question dạng giá trị nhưng là rỗng\r\n        else if(categoryContentQuestion.categoryContentAnswer === '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                        if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    const handleAnswerValueQuestionHealthRecords = () => {\r\n\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n          if(dataPantientsReadyExamining.patientsId !== ''){\r\n            if(event.keyCode === 113){\r\n              if(dataPantientsReadyExamining.status === 0){\r\n                handleBeginExaminingForPantient();\r\n              }\r\n              else if(dataPantientsReadyExamining.status === 1){\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n              }\r\n            }\r\n\r\n            else if(event.keyCode === 115){\r\n              if(dataPantientsReadyExamining.status === 1){\r\n                if(openModalCompleteExamining === false){\r\n                    setOpenModalAlertConfirm(true);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n\r\n    }, [dataPantientsReadyExamining, openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 10.6}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                <Grid container spacing={2} sx={{pl: 0.6, pr: 0.6}}>\r\n                    <Grid item xs={0.3}></Grid>\r\n\r\n                    <Grid item xs={5}>\r\n                        {/* <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{`${moment().format('dddd')}, ${moment().format('LL')}`}</Typography> */}\r\n                        <TableContainer component={Paper} sx={{ height: '332px', boxShadow: 4 }}>\r\n                            <Box sx={{mt: 1.4, mb: 0.3}}>\r\n                                <Stack direction='row' spacing={1} sx={{justifyContent: 'center'}}>\r\n                                    <Badge badgeContent={10} color=\"error\"><Chip label=\"BN chờ khám\" color=\"info\" clickable/></Badge>\r\n                                    <Badge badgeContent={4} color=\"error\"><Chip label=\"BN đang khám\" variant=\"outlined\" clickable/></Badge>\r\n                                    <Badge badgeContent={4} color=\"error\"><Chip label=\"BN đã khám\" variant=\"outlined\" clickable/></Badge>    \r\n                                </Stack>\r\n                                <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.10rem'}}>{`Danh sách bệnh nhân chờ khám ngày ${moment().format('LL')}`}</Typography>\r\n                                <Box sx={{display: 'flex', justifyContent: 'center'}}>\r\n                                    <TextField sx={{mt: 0.1, mb: 0.4, width: 400, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN'\r\n                                        InputProps={{startAdornment: (\r\n                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>\r\n                                        )}}>\r\n                                    </TextField>\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            <Table stickyHeader >\r\n                                <TableHead>\r\n                                    <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                        <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                                        <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                        <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {listDataPantientsWaitExamining.map((dataPantientItem, dataPantientIndex) => (\r\n                                        <TableRow hover role=\"checkbox\" key={dataPantientItem.stt}\r\n                                        sx={{cursor: 'pointer', backgroundColor: dataPantientItem.status === 1 ? '#26c6da' : '#fff', \r\n                                            ':hover': {backgroundColor: dataPantientsReadyExamining.patientsName === dataPantientItem.patientsName && dataPantientItem.status === 1 ? '#00bcd4!important' : 'rgba(0, 0, 0, 0.1)!important'}\r\n                                        }} \r\n                                        onClick={() => handleSelectPantientExamining(dataPantientItem)}>\r\n                                            <TableCell align='left' sx={{width: '20px'}}>{dataPantientItem.stt}</TableCell>\r\n                                            <TableCell align='left' sx={{width: '150px'}}>{dataPantientItem.patientsId}</TableCell>\r\n                                            <TableCell align='left' sx={{width: '240px'}}>{dataPantientItem.patientsName}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                        {/* cây thư mục khám */}\r\n                        <Box style={{width: '100%', marginTop: '8px', borderRadius: '10px', border: '2px solid red', height: '270px'}} >\r\n                            {mainDataExamining.length !== 0 ? \r\n                                <>\r\n                                    <div className='category-scrollbar'>\r\n                                        <List sx={{p: 0}}>\r\n                                            {mainDataExamining.categoryPres.map((categoryItem, categoryIndex) => (\r\n                                                <ListItemButton key={`category ${categoryIndex}`} \r\n                                                sx={{\r\n                                                  pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: categorySelectedExamining.categoryName === categoryItem.categoryName ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'},\r\n                                                  backgroundColor: categorySelectedExamining.categoryName === categoryItem.categoryName ? '#ffd54f' : ''}} \r\n                                                  onClick={() => handleSelectCategoryClick(categoryItem)}>\r\n                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                        <ListItemText primary={categoryItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                        {mainDataExamining.newCategoryPre === true ? \r\n                                                            null\r\n                                                        :\r\n                                                            <IconButton edge=\"end\">\r\n                                                                <CheckCircleIcon sx={{color: 'green', fontSize: '1.4rem'}} titleAccess='đã theo dõi'/>\r\n                                                            </IconButton>\r\n                                                        }\r\n                                                    </Box>\r\n                                                </ListItemButton>\r\n                                            ))}\r\n\r\n                                            <ListItemButton \r\n                                                sx={{pt: '4px', pb: '4px', borderRadius: '8px', backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffd54f' : '',\r\n                                                    ':hover': {backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                    onClick={() => handleSelectHealthRecords(mainDataExamining.healthRecords)}\r\n                                            >\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}>\r\n                                                    <SendIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                </ListItemIcon>\r\n\r\n                                                <ListItemText primary={'Sổ sức khỏe'} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>                                                    \r\n                                            </ListItemButton>\r\n\r\n                                            <Collapse in={openCollapseHealthRecords} timeout=\"auto\" unmountOnExit>\r\n                                                <div style={{ paddingLeft: '24px' }}>\r\n                                                    {mainDataExamining.healthRecords.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                        <ListItemButton key={`healthRecords ${healthRecordsIndex}`} sx={{pt: '0px', pb: '0px', width: 'auto', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                        onClick={() => handleSelectHealthRecordsItem(healthRecordsItem.medicalBookId, healthRecordsItem.examinationName, healthRecordsItem.state)}>\r\n                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#009688'}}}>\r\n                                                                <FiberManualRecordIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                            </ListItemIcon>\r\n                                                            <ListItemText primary={healthRecordsItem.examinationName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                        </ListItemButton>\r\n                                                    ))}\r\n                                                </div>\r\n                                            </Collapse>\r\n                                        </List>\r\n                                    </div>\r\n                                </>\r\n                            :                \r\n                                null\r\n                            }\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={0.25}></Grid>\r\n\r\n                    <Grid item xs={6.3}>\r\n                        {/* thông tin bệnh nhân */}\r\n                        <Box sx={{boxShadow: 4, borderRadius: '20px', border: '2px solid blue', height: '220px', mb: '4px', overflow: 'auto'}}>\r\n                            <Typography variant='h6' sx={{color: 'blue', mt: 0.6, mb: 0.6, fontWeight: 'bolder', fontSize: '1.2rem', textAlign: 'center'}}>Thông tin bệnh nhân</Typography>\r\n                            <Box sx={{pl: 4, pr: 4, mt: 1}}>\r\n                                <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n\r\n                                    <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                        <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Mã BN: ${dataPantientsReadyExamining.patientsId || ''}`}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={8} sx={{display: 'inline-flex'}}>\r\n                                        <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Họ tên: ${dataPantientsReadyExamining.patientsName || ''}`}</Typography>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                        <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: {dataPantientsReadyExamining.patientsDOB ? moment(dataPantientsReadyExamining.patientsDOB).format(\"DD/MM/YYYY\") : ''}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4.5} sx={{display: 'inline-flex'}}>\r\n                                        <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Tháng tuổi: `}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3.5} sx={{display: 'inline-flex'}}>\r\n                                        {dataPantientsReadyExamining.patientsGender === '0' ? <MaleIcon sx={{color: 'coral', fontSize: '27px'}}/> : <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/>}\r\n                                        <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                            {`Giới tính: ${dataPantientsReadyExamining.patientsGender ? dataPantientsReadyExamining.patientsGender === '0' ? 'Nam' : 'Nữ' : ''}`}\r\n                                        </Typography>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                        <GiBodyHeight style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                        <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                            {`Chiều cao: ${dataPantientsReadyExamining.patientsHeight ? dataPantientsReadyExamining.patientsHeight + ' cm' : ''}`}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                        <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                        <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                            {`Cân nặng: ${dataPantientsReadyExamining.patientsWeight ? dataPantientsReadyExamining.patientsWeight + ' kg' : ''}`}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                        <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Điện thoại: ${dataPantientsReadyExamining.patientsPhone || ''}`}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} sx={{display: 'inline-flex'}}>\r\n                                        <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Địa chỉ: ${dataPantientsReadyExamining.patientsAddress || ''}`}</Typography>\r\n                                    </Grid> \r\n\r\n                                </Grid>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        {/* nội dung khám */}\r\n                        <div className='container-content-examining'>\r\n                            {contentCategorySelectedExamining.length !== 0 ? \r\n                                <>\r\n                                    <div className='content-examining' style={{height: healthRecordsContents.length === 0 ? '47.4vh' : '50vh'}}>\r\n                                    {  \r\n                                        <Box sx={contentCategorySelectedExamining.categoryContentTitle === null ? {marginTop: '30px'} : {}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>{contentCategorySelectedExamining.categoryContentTitle || ''}</Typography>\r\n                                            {/* {console.log(contentCategorySelectedExamining)} */}\r\n                                            {contentCategorySelectedExamining.categoryContentQuestions ? \r\n                                              contentCategorySelectedExamining.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                <Box key={`categoryContentQuestionName ${questionIndex}`}>\r\n                                                    <Grid container rowSpacing={0}>\r\n\r\n                                                        {questionIndex === 0 ? \r\n                                                            <>\r\n                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{contentCategorySelectedExamining.categoryContentName}</Typography>\r\n                                                                </Grid>\r\n\r\n                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                <>\r\n                                                                    <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                        <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>{contentCategorySelectedExamining.categoryContentCheck}</Typography>\r\n                                                                    </Grid>\r\n\r\n                                                                    <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{contentCategorySelectedExamining.categoryContentText}</Typography>\r\n                                                                    </Grid>\r\n                                                                </>\r\n                                                            : \r\n                                                                <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{contentCategorySelectedExamining.categoryContentText}</Typography>\r\n                                                                </Grid>\r\n                                                                }                                                                              \r\n                                                            </> \r\n                                                        : \r\n                                                            null\r\n                                                        }\r\n\r\n                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                            </Grid>\r\n                                                            \r\n                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                <>\r\n                                                                    <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                        <Checkbox checked={questionItem.categoryContentAnswer === true ? true : false } color='error' sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} onClick={(e) => handleAnswerCheckQuestion(questionIndex, questionItem.categoryContentAnswer)}></Checkbox>\r\n                                                                    </Grid>\r\n\r\n                                                                    <Grid item xs={7} >\r\n                                                                        <div className='textfield-for-answer'>\r\n                                                                            <div className='suggest-note' key={`current ${currentContentExamining} - question ${questionIndex} - category ${contentCategorySelectedExamining.categoryContentOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder}`} >                                                                          \r\n                                                                                <TextareaAutosize className='textarea-autosize' rows={1} \r\n                                                                                    onChange={(e) => handleNoteCheckQuestion(questionIndex, e.target.value)}\r\n                                                                                    defaultValue={questionItem.categoryContentNote}\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </Grid>\r\n                                                                </>   \r\n                                                                :\r\n                                                                <>\r\n                                                                    <Grid item xs={8}>\r\n                                                                        <div className='textfield-for-answer' \r\n                                                                        key={`current ${currentContentExamining} - question ${questionIndex} - category ${contentCategorySelectedExamining.categoryContentOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder}`} >\r\n                                                                            <input type='text' className='value-for-answer' \r\n                                                                                onChange={(e) => handleAnswerValueQuestion(questionIndex, e.target.value)} \r\n                                                                                defaultValue={questionItem.categoryContentAnswer} \r\n                                                                            />\r\n                                                                        </div>\r\n                                                                    </Grid>\r\n                                                                </>\r\n                                                            }\r\n                                                    </Grid>\r\n                                                </Box>\r\n                                            ))\r\n                                            :\r\n                                                contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length === 0 ? \r\n                                                    <>\r\n                                                        <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n                                                        <TableContainer component={Paper}>\r\n                                                            <Table stickyHeader>\r\n                                                                <TableHead>\r\n                                                                    <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                                        <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n                                                                        <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n                                                                        <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n                                                                        <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n                                                                        <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n                                                                    </TableRow>\r\n                                                                </TableHead>\r\n                                                                <TableBody sx={{borderRadius: '0px'}}>\r\n                                                                    {contentCategorySelectedExamining.categoryContents.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                        <TableRow hover role=\"checkbox\" key={healthRecordsIndex}>\r\n                                                                            <TableCell align='left' sx={{width: '158px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{healthRecordsItem.examinationName}</TableCell>\r\n                                                                            <TableCell align='left' sx={{width: '144px'}}>{handleRenderExamsStatus(healthRecordsItem.state)}</TableCell>\r\n                                                                            <TableCell align='left' sx={{width: '108px'}}>{moment(healthRecordsItem.timeRegister).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                                                            <TableCell align='left' sx={{width: '115px'}}>{healthRecordsItem.doctorFullName}</TableCell>\r\n                                                                            <TableCell align='left' sx={{width: 'auto'}}>{healthRecordsItem.conclusion}</TableCell>\r\n                                                                        </TableRow>\r\n                                                                    ))}\r\n                                                                </TableBody>\r\n                                                            </Table>\r\n                                                        </TableContainer>\r\n                                                    </>\r\n                                                :\r\n                                                    <>\r\n                                                        <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', lineHeight: 1, mt: 1}}>{contentCategorySelectedExamining.healthRecordsName}</Typography>\r\n                                                        <div className='health-record-content'>\r\n                                                            <List sx={{p: 0}}>\r\n                                                                {contentCategorySelectedExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => (\r\n                                                                    <div key={`categoryPatients ${categoryPatientsIndex}`}>\r\n                                                                        <ListItemButton  \r\n                                                                            sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                                                            onClick={() => handleOpenHealthRecordsItem(categoryPatientsIndex)}\r\n                                                                        >\r\n                                                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                                <ListItemText primary={categoryPatientsItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                            </Box>\r\n                                                                        </ListItemButton>\r\n\r\n                                                                        <Collapse in={openCollapseHealthRecordsItem[categoryPatientsIndex]} timeout=\"auto\" unmountOnExit>\r\n                                                                            <div className='header-health-record' style={{marginTop: '0.4x', marginBottom: '0.4px', border: '2px solid #00bcd4', borderRadius: '20px'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', textAlign: 'center'}}>{categoryPatientsItem.categoryContents.categoryContentTitle}</Typography>\r\n\r\n                                                                                <div className='content-health-record' style={{padding: '10px'}}>                                                                                                                                                                \r\n                                                                                    <Grid container rowSpacing={0}>\r\n                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryPatientsItem.categoryContents.categoryContentName}</Typography>\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryPatientsItem.categoryContents.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryPatientsItem.categoryContents.categoryContentText}</Typography>\r\n                                                                                        </Grid> \r\n\r\n                                                                                        {categoryPatientsItem.categoryContents.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                                            <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                        \r\n                                                                                                <Grid item xs={3} \r\n                                                                                                sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                                    <Checkbox disabled={contentCategorySelectedExamining.newMedicalBook === true ? false : true} \r\n                                                                                                        classes={{ root: classes.root }}\r\n                                                                                                        checked={questionItem.categoryContentAnswer === true ? true : false }\r\n                                                                                                        sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                                        onClick={(e) => handleAnswerCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsItem.currentHealthRecordsContent, questionIndex, questionItem.categoryContentAnswer)} />\r\n                                                                                                </Grid>\r\n                                                                                                    \r\n                                                                                                <Grid item xs={5} >\r\n                                                                                                    <div className='note-for-answer'>\r\n                                                                                                        <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex}`}>                                                                          \r\n                                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} \r\n                                                                                                                disabled={contentCategorySelectedExamining.newMedicalBook === true ? false : true}\r\n                                                                                                                onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsItem.currentHealthRecordsContent, questionIndex, e.target.value)}\r\n                                                                                                                defaultValue={questionItem.categoryContentNote}\r\n                                                                                                            />\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </Box>\r\n                                                                                        ))}\r\n                                                                                    </Grid>\r\n                                                                                </div>\r\n\r\n                                                                                <div className='footer-content-examining' style={{backgroundColor: '#00bcd4'}}>\r\n                                                                                    <Pagination count={categoryPatientsItem.contentQuantity} page={categoryPatientsItem.currentHealthRecordsContent} \r\n                                                                                        color=\"error\" sx={{m: 'auto'}} onChange={(e, value) => handeOnChangePageHealthRecords(e, value, categoryPatientsIndex)}>\r\n                                                                                    </Pagination>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </Collapse>\r\n                                                                    </div>\r\n                                                                ))}\r\n\r\n                                                                {contentCategorySelectedExamining.newMedicalBook === false ?\r\n                                                                    <>\r\n                                                                        <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                                                            <Typography variant='h6' sx={{color: 'blueviolet', fontWeight: 'bolder'}}>{`Kết luận của bác sĩ: ${contentCategorySelectedExamining.conclusion}`}</Typography>\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                    :\r\n                                                                    null\r\n                                                                }\r\n\r\n                                                            </List>\r\n                                                        </div>\r\n                                                    </>\r\n                                            }\r\n                                        </Box>\r\n                                    }\r\n                                    </div>\r\n\r\n                                    {contentCategorySelectedExamining.categoryContentQuestions ? \r\n                                    <>\r\n                                        <div className='footer-content-examining'>\r\n                                            <Pagination count={categorySelectedExamining.contentQuantity} page={currentContentExamining} color=\"success\" sx={{m: 'auto'}} onChange={(event, value) => handleOnChangePage(event, value)}/>\r\n                                        </div>\r\n                                    </>\r\n                                    :\r\n                                        <></>\r\n                                    }\r\n                                </>\r\n                            :\r\n                                null\r\n                            }\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n        <HealthRecords openModalHealthRecords={openModalHealthRecords} setOpenModalHealthRecords={setOpenModalHealthRecords} />\r\n        <CompleteExamining openModalCompleteExamining={openModalCompleteExamining} setOpenModalCompleteExamining={setOpenModalCompleteExamining} dataExaminingForConclusion={dataExaminingForConclusion}/>\r\n        <AlertConfirm openModalAlertConfirm={openModalAlertConfirm} setOpenModalAlertConfirm={setOpenModalAlertConfirm} setOpenModalCompleteExamining={setOpenModalCompleteExamining} />\r\n    </>\r\n    )\r\n}\r\n\r\nexport default MainDoctorExamining","import { BrowserRouter, Route, Link, Switch, NavLink, HashRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport Header from \"../components/Nav/Header.jsx\";\nimport Page404 from \"../components/ErrorPage/Page404\";\nimport Login from \"../components/LoginAccount/Log-in\";\nimport MainMedicalRegister from \"../components/MedicalRegister/MainMedicalRegister.jsx\";\nimport MainDoctorExamining from \"../components/DoctorExamining/MainDoctorExamining.jsx\";\n\nconst AppRoutes = (props) => {\n  return (\n    <>\n      <HashRouter>\n        <Header />{\" \"}\n        <Switch>\n          {/* <Route exact path=\"/KNKPT_BVND2\">\n            home{\" \"}\n          </Route> */}\n          <Route exact path=\"/\">home{\" \"}</Route>\n          <Route path=\"/login\"><Login /></Route>\n          <PrivateRoutes path=\"/medicalregister\" component={MainMedicalRegister}></PrivateRoutes>\n          <PrivateRoutes path=\"/doctor-examining\" component={MainDoctorExamining}></PrivateRoutes>\n          <Route path=\"*\"><Page404 />{\" \"}</Route>\n          {/* <PrivateRoutes path=\"/users\" component={Users} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\nexport default AppRoutes;\n","import \"./App.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <div className=\"app-container\">\n          <AppRoutes />\n        </div>\n      </HashRouter>\n\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}