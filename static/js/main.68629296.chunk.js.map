{"version":3,"sources":["components/ManageUserManual/UserManual.jsx","assets/image/logo.png","components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop.jsx","Service/UserService.jsx","Service/MedicalService.jsx","context/UserContext.jsx","components/Nav/Header.jsx","routes/PrivateRoutes.js","components/ErrorPage/Page404.js","components/ManageRegister/Register.jsx","components/LoginAccount/Log-in.jsx","components/ManageAlertProcessing/AlertProcessing.jsx","Service/PlaceService.jsx","components/ManageInfoPantients/ManageInfoPantients.jsx","components/MedicalRegister/ListPatientsRegister.jsx","components/ManageExaminingSession/ExaminingSession.jsx","components/ManageOldDisease/OldDisease.jsx","components/MedicalRegister/BookMedical.jsx","components/MedicalRegister/MainMedicalRegister.jsx","components/MedicalAppointment/MainAppointmentExamining.jsx","components/ManageCompleteExamining/CompleteExamining.jsx","components/DoctorExamining/PreviewLastExamining.jsx","components/DoctorExamining/MainDoctorExamining.jsx","Service/StatisticsService.jsx","components/Dashboard/MainDashboard.jsx","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["UserManual","props","_jsxs","Dialog","fullWidth","maxWidth","open","openModalUserManual","disableEscapeKeyDown","children","_jsx","DialogTitle","sx","fontWeight","fontSize","textAlign","color","textTransform","IconButton","onClick","setOpenModalUserManual","position","right","top","CloseIcon","DialogContent","dividers","pl","pr","Typography","variant","Box","AlertProcessingBackdrop","Backdrop","zIndex","theme","drawer","backgroundColor","changeBackground","openAlertProcessingBackdrop","display","flexDirection","alignItems","CircularProgress","mt","alertTitle","backendURL","createConfig","token","localStorage","getItem","headers","Authorization","concat","createMedicalBackRegister","async","axios","post","dataPatientsRegister","then","response","catch","error","createAddPredecessor","dataPredecessor","getRegistersByDateNow","config","get","data","status","getListMedicalExaminationsGiveRegister","dayOfBirth","getVaccinationByPatientId","patientId","getMedicalBook","medicalRegisterId","getUpdatePredecessor","getAppointmentsNextWeek","updateMedicalState","id","state","put","updateStateAppointment","dataAppointment","stateAppointment","medicalBookId","appointmentDate","UserContext","React","createContext","UserProvider","_ref","userDefault","isAuthenticated","isLogin","user","setUser","useState","loading","setLoading","alertVisible","setAlertVisible","isLogOutClick","setIsLogOutClick","onConfirm","setOnConfirm","setOpenAlertProcessingBackdrop","resetAlert","checkJWTExpire","result","getJWT","decodeJWT","JSON","parse","atob","split","e","parseJwt","currentDate","Date","exp","getTime","removeItem","sessionStorage","clear","useEffect","getUserLogin","_Fragment","Provider","value","loadingContext","loginContext","userContextLogin","logoutContext","triggerAlert","confirmCallback","confirmAlert","withRouter","useContext","location","useLocation","history","useHistory","anchorEl","setAnchorEl","Boolean","handleClick","event","currentTarget","handleClose","actionNursing","key","label","icon","LocalHospitalIcon","LinkComponent","NavLink","to","LocalPhoneIcon","actionDoctor","MedicationLiquidIcon","actionAdmin","BarChartIcon","userAction","setUserAction","pathname","findIndex","action","handleLogout","positionName","push","width","AppBar","Toolbar","height","Avatar","src","Logo","mb","mr","BottomNavigation","showLabels","justifyContent","flexGrow","map","actionItem","BottomNavigationAction","Button","userFullName","Menu","onClose","MenuItem","HelpIcon","titleAccess","cursor","exact","PrivateRoutes","Route","path","component","Redirect","Page404","className","CreateAccount","showPassword","setShowPassword","handleCloseModalRegister","reason","setOpenModalRegister","openModalRegister","m","p","TextField","type","InputProps","endAdornment","InputAdornment","handleClickShowPassword","padding","VisibilityIcon","VisibilityOffIcon","Autocomplete","options","option","renderInput","params","Stack","spacing","direction","style","margin","Login","userAccount","setUserAccount","userId","password","handleLogin","userName","toast","userLogin","setItem","tokenDTO","stringify","handleKeyDown","preventDefault","document","addEventListener","removeEventListener","Container","borderRadius","ml","autoComplete","onChange","onChangeUserName","target","prevUserAccount","onChangeUserPassword","onKeyDown","which","code","handlePressEnter","Register","AlertProcessing","openAlertProcessing","getListProvince","getListDistrict","provinceId","getListWard","districtId","getFullAddressByIdWard","codeWard","ManageInfoPantients","dataPatientInfoDefault","examinationId","weight","headCircumference","vaccination","patient","identifier","address","fullName","gender","fullNameMother","phoneMother","fullNameFather","phoneFather","dataPatientInfoErrorDefault","title","isError","openTooltip","focus","examiningSession","province","district","ward","listGender","genderOrder","genderName","genderValue","selectedAutoCompleteDefault","openOption","typingRef","useRef","dateFieldRef","dataPatientInfoNotEdit","setDataPatientInfoNotEdit","dataPatientInfo","setDataPatientInfo","dataPatientInfoError","setDataPatientInfoError","selectedAutoComplete","setSelectedAutoComplete","listExaminingSession","setListExaminingSession","listProvince","setListProvince","listDistrict","setListDistrict","list","listWard","setListWard","focusField","setFocusField","setOpenAlertProcessing","tooltipTheme","createTheme","components","MuiTooltip","defaultProps","placement","arrow","componentsProps","tooltip","bgcolor","slotProps","popper","modifiers","name","offset","handleFocus","fieldName","prevSelectedAutoComplete","handleBlur","test","filterOptions","inputValue","lowercasedInput","toLowerCase","filter","lowercasedFullName","initials","word","join","includes","onChangeDOBToGetExaminingSession","responseListMedicalExaminationsGiveRegister","formattedDate","exams","handleCloseModalInfoPantients","prevListDistrict","prevListWard","setSelectedPantientInfo","setOpenModalInfoPantients","handleUpdateMedicalRegister","checkValidate","_dataPatientInfoError","isValid","Object","values","every","item","current","_","isEqual","warning","toastId","updateMedicalRegister","success","setCompleteMedicalRegister","length","responseListProvince","handleGetListProvince","selectedPantientInfo","setIsContinueUpdateMedicalRegister","editPropsDataPatientInfo","cloneDeep","responseListDistrict","provinceCode","responseListWard","districtCode","selectedGender","find","indexListExamining","indexListProvince","indexListDistrict","indexListWard","wardCode","handleApplyPantientDataToField","openModalInfoPantients","isContinueUpdateMedicalRegister","pt","pb","flexWrap","ThemeProvider","Tooltip","marginTop","inputProps","maxLength","inputRef","input","defaultValue","takenValue","clearInterval","setTimeout","prevDataPatientsRegister","onChangeIdentifier","prevDataPatientInfo","onChangeFullName","getOptionLabel","renderOption","onSelectGender","onFocus","onBlur","disableClearable","popupIcon","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DemoContainer","DatePicker","format","moment","disableFuture","disableOpenPicker","textField","_d","today","yearsDifference","getFullYear","monthsDifference","getMonth","daysDifference","getDate","age","totalMonths","totalDays","isNaN","onChangeDOB","noOptionsText","onSelectExaminingSession","size","onSelectProvine","onSelectDistrict","onSelectWard","onChangeAddress","onChangeFullNameMother","onChangePhoneMother","onChangeFullNameFather","onChangePhoneFather","onChangeHeight","onChangeWeight","onChangeHeadCircumference","FormControlLabel","control","Checkbox","checked","onChangeVaccination","bool","DialogActions","ListPatientsRegister","activeChip","setActiveChip","chipOrder","chipLabel","listPantientChipState","setListPantientChipState","chipContent","listDataPatientsRegister","setListDataPatientsRegister","listDataPatientsAppointmentsToday","setListDataPatientsAppointmentsToday","searchPatientsQuery","setSearchPatientsQuery","listDataPatientsRegisterState","setListDataPatientsRegisterState","listDataPatientsRegisterSort","setListDataPatientsRegisterSort","searchPatients","patients","searchTerm","lowerCaseSearchTerm","patientObj","handleGetRegistersByDateNow","responseGetAppointmentsToday","getAppointmentsToday","_listDataPatientsAppointmentsToday","updatedList","patientFullName","dateOfBirth","fullAddress","nextExamId","listPantientRegisterWaiting","patientsRegisterItem","listCountState","listPantientRegisterDone","setComponent1Loading","keyCode","completeMedicalRegister","border","boxShadow","pantientChipStateItem","pantientChipStateIndex","Badge","badgeContent","Chip","handleSelectedChip","chipIndex","placeholder","handleSearchPantient","startAdornment","SearchIcon","TableContainer","Paper","overflowX","borderBottomLeftRadius","borderBottomRightRadius","Table","stickyHeader","minWidth","TableHead","TableRow","TableCell","align","TableBody","patientsRegisterSortItem","patientsRegisterSortIndex","hover","role","onDoubleClick","responseVaccinationByPatientId","dataPantientOldOldDiseaseRegister","oldDisease","medicalTypeId","userIdDoctor","setDataPantientAppointmentsToday","handleSelectedPantientAppointmentsToday","handleSelectedPantientInfo","order","whiteSpace","overflow","textOverflow","ExaminingSession","isConfirmOpen","setIsConfirmOpen","handleListMedicalExaminationsGiveRegister","getListMedicalExaminationsGiveOldRegister","handleMedicalRegister","isAppointment","oldExams","setIsContinueSelectedExaminingSession","setOpenModalExaminingSession","handleResetField","createMedicalRegister","handleOpenConfirm","openModalExaminingSession","isContinueSelectedExaminingSession","monthsOfAge","Grid","container","rowSpacing","xs","oldExamItem","oldExamIndex","RadioGroup","onChangeRadioSelect","examItem","examIndex","Radio","OldDisease","dataPatientsForSearchOldDiseaseDefault","phone","dataPatientsForSearchOldDiseaseErrorDefault","listFoundOldDisease","setListFoundOldDisease","dataPatientsForSearchOldDisease","setDataPatientsForSearchOldDisease","dataPatientsForSearchOldDiseaseError","setDataPatientsForSearchOldDiseaseError","selectedRowIndex","setSelectedRowIndex","formRef","tableRef","handleEnterPress","_dataPatientsForSearchOldDiseaseError","handleCloseModalOldDisease","setOpenModalOldDisease","handleFindOldDisease","getListOldDisease","reset","querySelectorAll","forEach","dispatchEvent","Event","bubbles","handleClickFindOldDisease","validate","handleApplyDataPatientOldDisease","foundOldDiseaseItem","setDataPatientsRegister","openModalOldDisease","ref","autoFocus","prevDataPatientsForSearchOldDisease","onChangePatientId","date","onChangeDayOfBirth","onChangePhone","tabIndex","prevIndex","Math","min","max","handleTableKeyDown","foundOldDiseaseIndex","selected","BookMedical","dataPatientsRegisterDefault","autocompleteValueDefault","medicalType","dataPatientsRegisterErrorDefault","listMedicalType","medicalTypeOrder","medicalTypeName","dataPatientsRegisterError","setDataPatientsRegisterError","autocompleteValue","setAutocompleteValue","firstFocusRef","replaceSpecialCharacters","str","replace","normalizedInput","prevAutocompleteValue","_dataPatientsRegisterError","dataPantientAppointmentsToday","handleMedicalBackRegister","responseCreateMedicalBackRegister","handleOpenModalOldDisease","getElementById","_autocompleteValue","indexListMedicalType","indexListGender","handleApplyPantientOldDiseaseData","handleApplyPantientAppointmentsTodayData","onF2Press","setOnF2Press","onF4Press","setOnF4Press","onF8Press","setOnF8Press","minHeight","PopperProps","disabled","WebkitTextFillColor","InputLabelProps","shrink","DateField","disablePortal","onSelectMedicalType","paddingLeft","paddingRight","multiline","rows","onChangeReason","MainMedicalRegister","component1Loading","setHandleResetField","handleOpenModalExaminingSession","setHandleOpenModalExaminingSession","setHandleOpenModalOldDisease","marginLeft","Skeleton","MainAppointmentExamining","listPantientAppointmentChipState","listAppointment","setListAppointment","listDataPatientsAppointmentPaginate","setListDataPatientsAppointmentPaginate","listDataPatientsAppointmentState","setListDataPatientsAppointmentState","listDataPatientsAppointmentSort","setListDataPatientsAppointmentSort","page","setPage","pageCount","setPageCount","setDataAppointment","handlePaginate","calculatedPageCount","ceil","startIndex","newCurrentItems","slice","handleAcceptReExamining","findDataAppointment","responseUpdateStateAppointment","responseGetAppointmentsNextWeek","_listAppointmentNotRemind","_listAppointmentAcceptReExamining","_listAppointmentRejectReExamining","updateListPantientAppointmentChipState","dataAppointmentNotRemind","dataAppointmentAcceptReExamining","dataAppointmentRejectReExamining","handleRejectReExamining","handleGetAppointmentsNextWeek","pantientAppointmentChipStateItem","pantientAppointmentChipStateIndex","dataPantientAppointmentItem","dataPantientAppointmentIndex","examNameOld","nextExamName","disablePast","minDate","onChangeAppointmentDate","convertAppointmentDateFindDataAppointment","CheckIcon","CancelIcon","Pagination","count","handlePageChange","CompleteExamining","mainDataExaminingForConclusion","setMainDataExaminingForConclusion","textareaRef","classes","makeStyles","root","useStyles","handleCloseModalCompleteExamining","setOpenModalCompleteExamining","handleSetDataCompleteExamining","editDataExaminingForConclusion","clone","dataExaminingForConclusion","categories","categoriesItem","categoryContents","categoryContentsItem","categoryContentQuestions","responseAppointmentDate","getAppointmentDate","isVaccination","nextVaccination","reminder","conclusion","setSelectionRange","handleAddMedicalBook","some","isPredecessor","categoryPres","categoriesHealthRecordExamining","isHealthRecord","responseAddMedicalBook","dataMedicalBook","createAddMedicalBook","handleCompleteExaminingForPantient","openModalCompleteExamining","List","categoriesIndex","categoryName","categoryContentsIndex","marginBottom","categoryContentTitle","questionItem","questionIndex","borderRight","categoryContentName","categoryContentQuestionType","CheckBoxIcon","lineHeight","categoryContentCheck","categoryContentText","borderTop","categoryContentQuestionName","categoryContentAnswer","TextareaAutosize","categoryContentNote","onChangeExaminingConclusion","prevMainDataExaminingForConclusion","locale","PreviewLastExamining","previewDataExamining","setPreviewDataExamining","healthRecords","examinationName","timeUpdateState","medicakBook","nutritionals","vaccinationBook","loadingMedicalBook","setLoadingMedicalBook","openCollapsePredecessorItem","setOpenCollapsePredecessorItem","openCollapseMedicakBookItem","setOpenCollapseMedicakBookItem","prevDataExamining","responseMedicalBook","healthRecordsItem","newPredecessor","healthRecordsUpdate","newMedicalBook","medicalBookIdRecently","sort","a","b","categoryOrder","handleEditPrevDataExamining","predecessorItem","predecessorIndex","ListItemButton","prevOpen","newOpen","handleOpenPredecessorItem","ListItemIcon","transform","SendIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","predecessorItemCategoryContentsItem","predecessorItemCategoryContentsIndex","medicakBookItems","medicakBookIndex","handleOpenMedicakBookItem","medicakBookCategoryContentsItem","medicakBookCategoryContentsIndex","doctorFullName","MainDoctorExamining","dataPantientsReadyExaminingDefault","stt","patientsId","patientsName","patientsDOB","patientsMonthsOld","patientsGender","patientsHeight","patientsWeight","patientsHeadCircumference","patientsPhone","patientsAddress","isFormDirty","setIsFormDirty","dataPantientsReadyExamining","setDataPantientsReadyExamining","mainDataExamining","setMainDataExamining","setPrevDataExamining","openCollapseHealthRecords","setOpenCollapseHealthRecords","openCollapseHealthRecordsItem","setOpenCollapseHealthRecordsItem","categorySelectedExamining","setCategorySelectedExamining","contentCategorySelectedExamining","setContentCategorySelectedExamining","healthRecordsContents","setHealthRecordsContents","currentHealthRecordExamining","setCurrentHealthRecordExamining","previewPredecessor","setPreviewPredecessor","setDataExaminingForConclusion","oldDataPredecessor","setOldDataPredecessor","newDataPredecessor","setNewDataPredecessor","prevDataPredecessor","setPrevDataPredecessor","loadingPrevDataExamining","setLoadingPrevDataExamining","loadingPatient","setLoadingPatient","loadingInfoPatient","setLoadingInfoPatient","loadingCategoryExamining","setLoadingCategoryExamining","loadingContentsExamining","setLoadingContentsExamining","handleCancelExamining","editExamining","backRegister","handleDeleteExamining","window","confirm","responseDeleteMedicalBook","delete","deleteMedicalBook","handleStartExaminingButtonClick","handleBeginExaminingForPantient","alert","handleBeginEditExaminingForPantient","handleCompleteExaminingButtonClick","Promise","resolve","findListPantientNotExam","handleAppyPantientData","handleGetMedicalDetailPatient","dataPantientItem","_dataPantientsReadyExamining","isContinueExam","_listDataPatientsRegister","findIndexPatient","handleSetMainDataExamining","handleGetCategoryReExamining","editPrevDataExaminingCategoryPres","responseGetUpdatePredecessorItem","matchingPrevDataExamining","prevDataExaminingCategoryPresItem","isLock","content2","content1","categoryContentOrder","matchingContent1","isNullCategoryPres","responseGetUpdateMedicalBook","updateHealthRecordsCategoriesForConclusion","category","content","demoDataExaminingForConclusion","healthRecordsName","categoryPatients","updateCategoriesForConclusion","editCategoryContents","itemCategoryContents","newCategoriesDemoDataExaminingForConclusion","editDataCategoryPresForConclusion","mainCategoryContentsExamining","editDataHealthRecordsForConclusion","categoryPresItem","categoryPresIndex","categoryPresOrder","getUpdateMedicalBook","handleSetMainDataReExamining","responseGetUpdateMedicalBookData","questions","allNull","q","responseGetUpdatePredecessor","handleNoteValueQuestionPredecessorForReExamOrBackExam","_categorySelectedExamining","createSelectedQuestionsValuePredecessorForReExamOrBackExam","categoryContentQuestion","findNewDataPredecessorCategoryOrder","newDataPredecessorCategoryPresItem","findNewDataPredecessorCategoryContents","newDataPredecessorCategoryContentsItem","newDataPredecessorcategoryContentQuestionsItem","categoryContentQuestionOrder","questionIndexRemove","splice","newDataPredecessorCategoryContents","newDataPredecessorCategoryPres","newCategoryPre","createSelectedQuestionsPredecessorForReExamOrBackExam","isEditNote","questionIndexNoteDontExit","createPreviewDataPredecessor","handleSaveNewDataPredecessor","saveNewDataPredecessor","findNewDataPredecessor","responseCreateAddPredecessor","_mainDataExamining","selectCategoryReExamining","handleSelectCategoryClick","responseDataExamining","getMedicalDetailPatient","previewDataPredecessor","flatMap","question","healthRecordsContentsType","categoryIncludeCotent","findHealthRecord","healthRecordsState","editDataHealthRecordsItemForConclusion","_dataExaminingForConclusion","dataHealthRecordsItemForConclusionItem","handleAnswerValueQuestion","createSelectedQuestionsExaminingForConclusion","handleNoteCheckQuestionHealthRecords","categoryPatientsIndex","categoryPatientsContentsIndex","_healthRecordsContents","questionOrder","existingQuestion","categoryContentQuestionsItem","_previewPredecessor","findQuestion","intervalId","setInterval","reFetchListDataPatientsRegister","handleBeforeUnload","confirmationMessage","returnValue","unblock","block","_dataPatientsRegisterSort","handleUnload","reDataPatientsRegisterSort","dataPatientsRegisterSort","reDataPantientsReadyExamining","reMainDataExamining","reDataExaminingForConclusion","reCurrentHealthRecordExamining","rePrevDataPredecessor","reOldDataPredecessor","handleReloadUIWhenExamining","dataPantientIndex","handleSelectPantientExamining","CheckCircleIcon","edge","findUpdatePredecessor","handleEditDataPredecessor","EditIcon","handleEditDataPredecessorForSaving","findOldDataPredecessorCategoryOrder","oldDataPredecessorItem","findNewDataPredecessorCategoryContentsItem","findOldDataPredecessorCategoryContentsItem","newQ","findNewDataPredecessorQuestionItem","contentCategoryContentsItem","removeOldDataPredecessorCategoryPres","BeenhereIcon","handleCancelEditDataPredecessor","findPrevDataPredecessorByCategoryName","prevDataPredecessorItem","removeCategoryPredecessor","handleSelectHealthRecords","healthRecordsIndex","handleSelectHealthRecordsItem","FiberManualRecordIcon","columnSpacing","sm","md","PinIcon","PersonIcon","MaleIcon","FemaleIcon","CalendarMonthIcon","InfoIcon","PhoneIcon","GiBodyHeight","GiWeightScale","TbRulerMeasure","Home","index","handleAnswerCheckQuestionPredecessorForReExamOrBackExam","answer","handleAnswerCheckQuestion","handleNoteCheckQuestionPredecessorForReExamOrBackExam","handleNoteCheckQuestion","DescriptionIcon","timeRegister","categoryPatientsItem","handleOpenHealthRecordsItem","categoryPatientsContentsItem","handleAnswerCheckQuestionHealthRecords","currentHealthRecordsContent","getReportPatient","dateSelectedReport","dateStart","dateEnd","MainDashboard","setDateSelectedReport","mainDataDashboard","setMainDataDashboard","loadingDataDashboard","setLoadingDataDashboard","editMainDataDashboard","dayExam","examName","handleGetReportPatient","_dateSelectedReport","onChangeDateStart","onChangeDateEnd","DataGrid","localeText","viVN","MuiDataGrid","row","columns","field","headerName","headerAlign","pageSizeOptions","handleExportExcel","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","startIcon","RiFileExcel2Fill","toolbar","formattedRows","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","disableRowSelectionOnClick","AppRoutes","HashRouter","Switch","App","Header","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.68629296.chunk.js","sourcesContent":["import React from 'react'\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nfunction UserManual(props) {\r\n\r\n    return (\r\n        <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalUserManual} disableEscapeKeyDown={true}>\r\n            <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Hướng dẫn sử dụng</DialogTitle>\r\n            <IconButton onClick={() => props.setOpenModalUserManual(false)} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Điều dưỡng</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F2 hoặc nút Đăng ký trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Làm mới form thông tin đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F4 hoặc nút Làm mới trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Tìm bệnh cũ</Typography>\r\n                        <Typography>Nhấn phím F8 hoặc nút Bệnh cũ trên màn hình, sau khi nhập thông tin và tìm được bệnh nhân, click đúp thông tin bệnh nhân để form thông tin đăng ký khám nhận dữ liệu</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin bệnh nhân</Typography>\r\n                        <Typography>Trong bảng danh sách đăng ký khám trong ngày, nhấn vào bệnh nhân để mở form sửa thông tin</Typography>\r\n                    </Box>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Bác sĩ</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Khám bệnh</Typography>\r\n                        <Typography>Bước 1: Nhấn chọn bệnh nhân để khám</Typography>\r\n                        <Typography>Bước 2: Nhấn F2 để bắt đầu khám</Typography>\r\n                        <Typography>Bước 3: Nhấn F4 để kết thúc khám</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin hỏi bệnh khi đã kết thúc khám</Typography>\r\n\r\n                    </Box>\r\n                \r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Admin</Typography>\r\n                {/* <Typography variant='subtitle1' sx={{color: 'red'}}>Nếu có sự cố liên hệ zalo: 0987654321 (chỉ phục vụ giờ hành chính)</Typography> */}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default UserManual","export default __webpack_public_path__ + \"static/media/logo.e5a4a234.png\";","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessingBackdrop(props) {\r\n    return (\r\n        <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: props.changeBackground ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.6)' }} open={props.openAlertProcessingBackdrop}>\r\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <CircularProgress color='inherit' />\r\n                <Typography sx={{mt: 1.4,}} variant='subtitle1'>{props.alertTitle}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n\r\nexport default AlertProcessingBackdrop\r\n","import axios from \"axios\";\r\n//import SignalService from \"./SignalService.jsx\"\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\nconst userLogin = async (userId, password) => {\r\n  return await axios.post(`${backendURL}/api/UserAccount/Login`, { userId, password })\r\n  .then(function (response) {\r\n    //SignalService.startSignalRConnection(response.data.tokenDTO.token)\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n};\r\n\r\nconst getUserLogin = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetUserLogin`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst getGetListDoctor = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetDoctors`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nexport {\r\n    userLogin, \r\n    getUserLogin, getGetListDoctor\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst createMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/Register`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createMedicalBackRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/BackRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createCurrentDoctorExamining = async (userIdDoctor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/SetDoctorExaming/${userIdDoctor}`, \r\n        {}, // Body của request, có thể là {} hoặc object\r\n        {\r\n            headers: {\r\n                \"content-type\": \"text/plain; charset=utf-8\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddPredecessor = async (dataPredecessor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddPredecessor`, dataPredecessor,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddMedicalBook = async (dataMedicalBook) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddMedicalBook`, dataMedicalBook,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getRegistersByDateNow = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetRegistersByDateNow`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveRegister = async (dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveOldRegister = async (dayOfBirth, patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}&patientId=${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListOldDisease = async (patientId, phone, fullName, dayOfBirth, gender) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/SearchPatients?patientId=${patientId}&phone=${phone}&fullName=${fullName}&dayOfBirth=${dayOfBirth}&gender=${gender}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getVaccinationByPatientId = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetVaccinationByPatientId/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getCurrentDoctorExamining = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetDoctorExamining`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalDetailPatient = async (id) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/DetailPatient/${id}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalBook = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetMediacalBook?medicalRegisterId=${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdatePredecessor = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdatePredecessor/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdateMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdateMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentDate = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentDate/${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentsNextWeek = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsNextWeek`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getAppointmentsToday = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsToday`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst updateMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/EditRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateMedicalState = async (id, state) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateState?id=${id}&state=${state}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateStateAppointment = async (dataAppointment, stateAppointment) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateStateAppointment/${dataAppointment.medicalBookId}?appointmentDate=${dataAppointment.appointmentDate}&stateAppointment=${stateAppointment}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst deleteMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.delete(`${backendURL}/api/Medical/DeleteMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    createMedicalRegister, createMedicalBackRegister, createCurrentDoctorExamining, createAddPredecessor, createAddMedicalBook,\r\n    getRegistersByDateNow, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister, getListOldDisease, getVaccinationByPatientId, getCurrentDoctorExamining, getMedicalDetailPatient, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook, getAppointmentDate, getAppointmentsNextWeek, getAppointmentsToday,\r\n    updateMedicalRegister, updateMedicalState, updateStateAppointment,\r\n    deleteMedicalBook\r\n}","import React, { useState, useEffect } from 'react';\r\n//modal\r\nimport AlertProcessingBackdrop from '../components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//api\r\nimport { getUserLogin } from '../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../Service/MedicalService';\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n\r\n    const userDefault = {\r\n        isAuthenticated: false,\r\n        isLogin: false,\r\n        token: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(userDefault);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [isLogOutClick, setIsLogOutClick] = useState(false);\r\n    const [onConfirm, setOnConfirm] = useState(null);\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const loginContext = (userContextLogin) => {\r\n        setUser({ ...userContextLogin });\r\n        setLoading(false);\r\n    };\r\n\r\n    const triggerAlert = (confirmCallback) => {\r\n        setAlertVisible(true);\r\n        setIsLogOutClick(true);\r\n        setOnConfirm(() => confirmCallback);\r\n    };\r\n\r\n    const confirmAlert = () => {\r\n        if (onConfirm) onConfirm();\r\n        setIsLogOutClick(false);\r\n        resetAlert();\r\n    };\r\n\r\n    const resetAlert = () => {\r\n        setAlertVisible(false);\r\n        setIsLogOutClick(false);\r\n        setOnConfirm(null);\r\n    };\r\n\r\n    const logoutContext = () => {\r\n        setUser({ ...userDefault });\r\n    }\r\n\r\n    const loadingContext = (loading) => {\r\n        setLoading(...loading);\r\n    }\r\n\r\n    const fetchUser = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        const response = await getUserLogin();\r\n        setUser({\r\n                isAuthenticated: true, \r\n                isLogin: true,\r\n                userId: response.userId,\r\n                userFullName: response.userFullName,\r\n                positionName: response.positionName\r\n            }) \r\n        setLoading(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const parseJwt = (token) => {\r\n        try {\r\n          return JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n    };\r\n\r\n    const checkJWTExpire = () => {\r\n        let result = false;\r\n        let getJWT = localStorage.getItem('jwt');\r\n        if(getJWT){\r\n            let decodeJWT = parseJwt(getJWT);\r\n            let currentDate  = new Date();\r\n            if(decodeJWT.exp * 1000 < currentDate.getTime()) {\r\n                //console.log('Token đã hết hạn hoặc không tồn tại')\r\n                localStorage.removeItem('jwt'); //xóa localStorage\r\n                localStorage.removeItem('userLogin');\r\n                sessionStorage.clear();\r\n                return result \r\n            }\r\n            else{\r\n                //console.log('token còn hạn');\r\n                result = true;\r\n                return result\r\n            }\r\n        }\r\n        else{\r\n            localStorage.removeItem('userLogin');\r\n            return result\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n        if(getUserLogin){\r\n            const result = checkJWTExpire();\r\n            if(result){\r\n                const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n                setUser(getUserLogin);\r\n            }else{\r\n                //không có token\r\n                setUser(userDefault);\r\n            }\r\n        }else{\r\n            localStorage.removeItem('jwt'); //xóa localStorage\r\n            setUser(userDefault);\r\n        }\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <UserContext.Provider \r\n                value={{ user, loading, loadingContext, loginContext, \r\n                    logoutContext, alertVisible, triggerAlert, confirmAlert, resetAlert, isLogOutClick\r\n                }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop}\r\n                alertTitle={'Đang tải thông tin người dùng'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\nimport UserManual from '../ManageUserManual/UserManual';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nfunction Header(props) {\r\n\r\n  const { user, logoutContext, triggerAlert } = useContext(UserContext);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [openModalUserManual, setOpenModalUserManual] = useState(false);\r\n\r\n  //mui state menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  \r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const actionNursing = [\r\n    { key: 'medicalRegister', maxWidth: '114px', label: 'Đăng ký khám', icon: <LocalHospitalIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/medicalregister\" },\r\n    { key: 'remind-examining', maxWidth: '95px', label: 'Nhắc khám', icon: <LocalPhoneIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/remind-examining\" },\r\n  ]\r\n\r\n  const actionDoctor = [\r\n    { key: 'examining', maxWidth: '100px', label: 'Khám bệnh', icon: <MedicationLiquidIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/doctor-examining\" },\r\n  ]\r\n\r\n  const actionAdmin = [\r\n    { key: 'statistical', maxWidth: '83px', label: 'Thống kê', icon: <BarChartIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/dashboard\" },\r\n  ]\r\n\r\n  const [userAction, setUserAction] = useState([]);\r\n\r\n  const handleChangeURL = (pathname) => {\r\n    const actionIndex = userAction.findIndex(action => action.to === pathname);\r\n    return actionIndex;\r\n  }\r\n\r\n  const value = handleChangeURL(props.location.pathname);\r\n\r\n  const handleLogout = () => {\r\n    if(user.positionName === 'Doctor'){\r\n      triggerAlert(() => {\r\n        localStorage.removeItem('jwt');\r\n        localStorage.removeItem('userLogin');\r\n        logoutContext();\r\n        setAnchorEl(null);\r\n        history.push('/login');\r\n      });\r\n    }\r\n    \r\n    else{\r\n      localStorage.removeItem('jwt'); //xóa localStorage\r\n      localStorage.removeItem('userLogin');\r\n      logoutContext();\r\n      setAnchorEl(null);\r\n      history.push('/login');\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(user.positionName === 'Nursing'){        \r\n      setUserAction(actionNursing);\r\n    }\r\n    else if(user.positionName === 'Doctor'){\r\n      setUserAction(actionDoctor);\r\n    }\r\n    else if(user.positionName === 'Admin'){\r\n      setUserAction(actionAdmin);\r\n    }\r\n  }, [user])\r\n  \r\n  if(location.pathname !== '/login'){\r\n    return (\r\n      <>\r\n        <Box sx={{ width: '100%'}} >\r\n          <AppBar sx={{position: 'unset'}}>\r\n            <Toolbar sx={{backgroundColor: '#cfe8fc', height: '78px'}}>\r\n              {/* <Link to=\"/\"> */}\r\n                <Avatar src={Logo} sx={{ width: 62, height: 62, mt: 'auto', mb: 'auto', mr: 4 }} />\r\n              {/* </Link> */}\r\n                {user.isAuthenticated === true || token ? \r\n                  <>\r\n                    <BottomNavigation showLabels value={value}\r\n                      sx={{display: 'flex', justifyContent: 'flex-start', backgroundColor: '#cfe8fc', flexGrow: 1}}>\r\n                      {userAction.map(actionItem => (\r\n                        <BottomNavigationAction\r\n                          key={actionItem.key}\r\n                          label={actionItem.label}\r\n                          icon={actionItem.icon}\r\n                          LinkComponent={actionItem.LinkComponent}\r\n                          to={actionItem.to}\r\n                          sx={{color: '#000', maxWidth: actionItem.maxWidth}}\r\n                        />\r\n                      ))}  \r\n                    </BottomNavigation>\r\n\r\n                    <Button onClick={handleClick} sx={{color: '#000', textTransform: 'none'}}>{user.userFullName}</Button>\r\n                    <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\r\n                      <MenuItem>Đổi mật khẩu</MenuItem>\r\n                      <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                    </Menu>\r\n                    <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                  </>\r\n                  :\r\n                    <>\r\n                      <Box sx={{position: 'absolute', right: 22}}>\r\n                        <NavLink exact to=\"/login\"><Button sx={{textTransform: 'none', color: '#000'}}>Đăng nhập</Button></NavLink>\r\n                        <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                      </Box>\r\n                    </>\r\n                  }            \r\n                </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n  \r\n        <UserManual openModalUserManual={openModalUserManual} setOpenModalUserManual={setOpenModalUserManual}/>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst PrivateRoutes = (props) => {\n  const token = localStorage.getItem('jwt');\n  const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\n\n  if (token && getUserLogin) {\n    return (\n      <>\n        <Route path={props.path} component={props.component}></Route>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <Redirect to='/login'></Redirect>\n      </>\n    )\n  }\n};\nexport default PrivateRoutes;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../ErrorPage/Page500.scss\";\n\nconst Page404 = () => {\n\n  let history = useHistory();\n\n  return (\n    <div>\n      <div className=\"section\">\n        <h1 className=\"error\">404</h1>\n        <div className=\"page\">Trang mà bạn đang truy cập không tồn tại.</div>\n      </div>\n    </div>\n  );\n};\nexport default Page404;\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CreateAccount = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleCloseModalRegister = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalRegister(false);\r\n      }\r\n    }\r\n\r\n    const position = [\r\n      {id: '1', positionName: 'Điều dưỡng'},\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n          <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalRegister} onClose={(event, reason) => handleCloseModalRegister(event, reason)} disableEscapeKeyDown={true}  >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n            <IconButton onClick={() => handleCloseModalRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n              <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} />\r\n              <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }}/>\r\n              <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '46ch', mb: 2.5 }} \r\n                InputProps={{ // <-- This is where the toggle button is added.\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <Autocomplete options={position.map((option) => option.positionName)} renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} sx={{ width: '45.95ch', mb: 2.5 }}/>\r\n              <Stack spacing={2} direction=\"column\">\r\n                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleCloseModalRegister()}>Tạo tài khoản</Button>\r\n              </Stack>\r\n            \r\n            </DialogContent>\r\n          </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAccount","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Register from '../ManageRegister/Register';\r\nimport { toast } from 'react-toastify';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//api\r\nimport { userLogin } from '../../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nconst Login = () => {\r\n    const { user, loadingContext, loginContext } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [userAccount, setUserAccount] = useState({userId: '', password: ''})\r\n    const [openModalRegister, setOpenModalRegister] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const onChangeUserName = (e, value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                userId: value\r\n            }\r\n        }) \r\n    }\r\n\r\n    const onChangeUserPassword = (e, value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                password: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if(userAccount.userName === ''){\r\n            toast.error('Bạn chưa nhập tài khoản!')\r\n        }\r\n        else if(userAccount.password === ''){\r\n            toast.error('Bạn chưa nhập mật khẩu!');\r\n        }\r\n        else{\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const response = await userLogin(userAccount.userId, userAccount.password);\r\n            setOpenAlertProcessingBackdrop(false);\r\n            if(response.status !== 200){\r\n                toast.error(response.data);\r\n            }\r\n            else{\r\n                localStorage.setItem('jwt', response.data.tokenDTO.token)\r\n                const userLogin = {\r\n                    isAuthenticated: true, \r\n                    isLogin: true, \r\n                    userId: response.data.userId, \r\n                    userFullName: response.data.userFullName, \r\n                    positionName: response.data.positionName\r\n                }\r\n\r\n                localStorage.setItem('userLogin', JSON.stringify(userLogin))\r\n                loginContext(userLogin);\r\n                   \r\n                if(response.data.positionName === 'Nursing'){\r\n                    history.push('/medicalregister');\r\n                }\r\n                else if(response.data.positionName === 'Doctor'){\r\n                    history.push('/doctor-examining');\r\n                }\r\n                else if(response.data.positionName === 'Admin'){\r\n                    history.push('/dashboard');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleLogin();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAuthenticated === true) {\r\n            history.push('/');\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        const userLogin = localStorage.getItem('userLogin');\r\n        if (token && userLogin) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(openAlertProcessingBackdrop){\r\n                event.preventDefault();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [openAlertProcessingBackdrop])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box sx={{ mt: 3, borderRadius: '25px' }} >\r\n                    <Box sx={{ p: 7.6 }}>\r\n                        <Avatar src={Logo} sx={{ width: 120, height: 120, ml: 'auto', mr: 'auto', mb: 2 }} />\r\n                        <Typography sx={{ textAlign: 'center', textTransform: 'uppercase', fontWeight: 'bolder', fontSize: '1.15rem', mb: 2, color: '#4caf50' }} variant=\"h5\">Chương trình khám nhi khoa phát triển</Typography>\r\n                        <Box component=\"form\" autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                            <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e, e.target.value)}/>\r\n                            <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 3 }} \r\n                            onChange={(e) => onChangeUserPassword(e, e.target.value)} onKeyDown={(e) => handlePressEnter(e)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6.5vh', width: '28ch' }} variant=\"contained\" style={{ margin: 'auto' }} onClick={(e) => handleLogin()}>Đăng nhập</Button>\r\n                                <Typography sx={{textAlign: 'center'}} variant=\"subtitle1\">Chưa có tài khoản? <strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Đăng ký</strong></Typography>\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Register\r\n                openModalRegister={openModalRegister} setOpenModalRegister={setOpenModalRegister}\r\n            />\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang đăng nhập'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessing(props) {\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={props.openAlertProcessing} disableEscapeKeyDown={true}>\r\n                <DialogContent>\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <CircularProgress/>\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang xử lý...</Typography>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertProcessing","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getListProvince = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/ListProvince`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListDistrict = async (provinceId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListDistrictByIdProvince/${provinceId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListWard = async (districtId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListWardByIdDistrict/${districtId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getFullAddressByIdWard = async (codeWard) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetFullAddressByIdWard/${codeWard}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getListProvince, getListDistrict, getListWard, getFullAddressByIdWard\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport { Autocomplete } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//lodash\r\nimport _ from 'lodash';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { updateMedicalRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalService';\r\n\r\nfunction ManageInfoPantients(props) {\r\n  const dataPatientInfoDefault = {\r\n    examinationId: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    headCircumference: \"\",\r\n    reason: \"\",\r\n    vaccination: false,\r\n    id: \"\",\r\n    patient: {\r\n      identifier: \"\",\r\n      address: \"\",\r\n      fullName: \"\",\r\n      dayOfBirth: null,\r\n      codeWard: \"\",\r\n      gender: true,\r\n      fullNameMother: \"\",\r\n      phoneMother: \"\",\r\n      fullNameFather: \"\",\r\n      phoneFather: \"\",\r\n      patientId: \"\"\r\n    }\r\n  }\r\n\r\n  const dataPatientInfoErrorDefault = {\r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    examiningSession: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n  } \r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const selectedAutoCompleteDefault = { \r\n    gender: { value: null, openOption: false }, \r\n    examiningSession: {value: null, openOption: false, loading: false},\r\n    province: { value: null, openOption: false }, \r\n    district: { value: null, openOption: false }, \r\n    ward: { value: null, openOption: false },\r\n  }\r\n\r\n  const typingRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  const [dataPatientInfoNotEdit, setDataPatientInfoNotEdit] = useState();\r\n  const [dataPatientInfo, setDataPatientInfo] = useState(dataPatientInfoDefault);\r\n  const [dataPatientInfoError, setDataPatientInfoError] = useState(dataPatientInfoErrorDefault);\r\n    \r\n  const [selectedAutoComplete, setSelectedAutoComplete] = useState(selectedAutoCompleteDefault);\r\n\r\n  const [listExaminingSession, setListExaminingSession] = useState([]);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f',\r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -8],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.gender.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'ExaminingSession'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.examiningSession.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else{\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      //const _dataPatientInfoError = {...dataPatientInfoError};\r\n      // if(fieldName === 'patientId'){\r\n      //   _dataPatientInfoError.patientId.title = '';\r\n      //   _dataPatientInfoError.patientId.openTooltip = false;\r\n      //   setDataPatientInfoError(_dataPatientInfoError);\r\n      // }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.dayOfBirth.title = '';\r\n      //     _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientInfoError.dayOfBirth.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneMother.title = '';\r\n      //     _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneMother.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneFather'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneFather.title = '';\r\n      //     _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneFather.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'Gender'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.gender.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'ExaminingSession'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n      //     prevSelectedAutoComplete.examiningSession.openOption = false\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Province'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.province.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'District'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.district.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Ward'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.ward.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.gender.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'ExaminingSession'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n          prevSelectedAutoComplete.examiningSession.openOption = false\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.district.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.ward.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n  \r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n  \r\n      return (lowercasedFullName.includes(lowercasedInput) || initials.includes(lowercasedInput));\r\n    });\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientInfoError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientInfoError.identifier.openTooltip = true;\r\n          _dataPatientInfoError.identifier.isError = true;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n        else{\r\n          setDataPatientInfo(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientInfoError.identifier.title = '';\r\n          _dataPatientInfoError.identifier.openTooltip = false;\r\n          _dataPatientInfoError.identifier.isError = false;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.identifier.title = '';\r\n      _dataPatientInfoError.identifier.openTooltip = false;\r\n      _dataPatientInfoError.identifier.isError = false;\r\n      _dataPatientInfoError.identifier.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n    \r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.fullName = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n    \r\n      if(dataPatientInfoError.fullName.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullName.title = '';\r\n        _dataPatientInfoError.fullName.openTooltip = false;\r\n        _dataPatientInfoError.fullName.isError = false;\r\n        _dataPatientInfoError.fullName.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = async (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n    \r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n            \r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n    \r\n        if(today < takenValue || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientInfoError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n          _dataPatientInfoError.dayOfBirth.isError = true;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n    \r\n        else{\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.dayOfBirth = formattedDate\r\n            return {...prevDataPatientInfo}\r\n          })\r\n    \r\n          _dataPatientInfoError.dayOfBirth.title = '';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n          _dataPatientInfoError.dayOfBirth.isError = false;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n\r\n          onChangeDOBToGetExaminingSession(formattedDate);\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onChangeDOBToGetExaminingSession = async (formattedDate) => {\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.value = null\r\n      return {...prevSelectedAutoComplete}\r\n    })\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = true\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(formattedDate);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = false\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.patient.gender = value.genderValue\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n    \r\n    if(dataPatientInfoError.gender.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.gender.isError = false;\r\n      _dataPatientInfoError.gender.title = '';\r\n      _dataPatientInfoError.gender.openTooltip = false;\r\n      _dataPatientInfoError.gender.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectExaminingSession = (e, value) => {\r\n    if(focusField === 'examiningSession'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.examinationId = value.id\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.examiningSession.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(dataPatientInfoError.examiningSession.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.examiningSession.isError = false;\r\n      _dataPatientInfoError.examiningSession.title = '';\r\n      _dataPatientInfoError.examiningSession.openTooltip = false;\r\n      _dataPatientInfoError.examiningSession.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.province.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(selectedAutoComplete.district.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.province.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.province.isError = false;\r\n      _dataPatientInfoError.province.title = '';\r\n      _dataPatientInfoError.province.openTooltip = false;\r\n      _dataPatientInfoError.province.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.district.value = value;\r\n      return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.district.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.district.isError = false;\r\n      _dataPatientInfoError.district.title = '';\r\n      _dataPatientInfoError.district.openTooltip = false;\r\n      _dataPatientInfoError.district.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n\r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.codeWard = value.code\r\n      return { ...prevDataPatientInfo }\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.ward.value = value;\r\n        return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(dataPatientInfoError.ward.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.ward.isError = false;\r\n      _dataPatientInfoError.ward.title = '';\r\n      _dataPatientInfoError.ward.openTooltip = false;\r\n      _dataPatientInfoError.ward.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    if(focusField === 'address'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.address = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.address.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.address.isError = false;\r\n        _dataPatientInfoError.address.title = '';\r\n        _dataPatientInfoError.address.openTooltip = false;\r\n        _dataPatientInfoError.address.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    if(focusField === 'fullNameMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameMother = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(focusField === 'phoneMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneMother.openTooltip = true;\r\n          _dataPatientInfoError.phoneMother.isError = true;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n          \r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneMother = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n      \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n      \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 10)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneMother.title = '';\r\n      _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      _dataPatientInfoError.phoneMother.isError = false;\r\n      _dataPatientInfoError.phoneMother.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameFather = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneFather.openTooltip = true;\r\n          _dataPatientInfoError.phoneFather.isError = true;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n\r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneFather = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n                \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n                \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneFather.title = '';\r\n      _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      _dataPatientInfoError.phoneFather.isError = false;\r\n      _dataPatientInfoError.phoneFather.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    if(focusField === 'height'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.height = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.height.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.height.title = '';\r\n        _dataPatientInfoError.height.openTooltip = false;\r\n        _dataPatientInfoError.height.isError = false;\r\n        _dataPatientInfoError.height.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    if(focusField === 'weight'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.weight = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.weight.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.weight.title = '';\r\n        _dataPatientInfoError.weight.openTooltip = false;\r\n        _dataPatientInfoError.weight.isError = false;\r\n        _dataPatientInfoError.weight.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    if(focusField === 'headCircumference'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.headCircumference = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.headCircumference.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.headCircumference.title = '';\r\n        _dataPatientInfoError.headCircumference.openTooltip = false;\r\n        _dataPatientInfoError.headCircumference.isError = false;\r\n        _dataPatientInfoError.headCircumference.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.vaccination = bool\r\n      return {...prevDataPatientInfo}\r\n    })\r\n  }\r\n\r\n  const handleCloseModalInfoPantients = (event, reason) => {\r\n    if(reason && reason === \"backdropClick\"){\r\n      return;\r\n    }\r\n    else{\r\n      setListDistrict(prevListDistrict => {\r\n        prevListDistrict.loading = false\r\n        prevListDistrict.list = []\r\n        return {...prevListDistrict}\r\n      })\r\n      setListWard(prevListWard => {\r\n        prevListWard.loading = false\r\n        prevListWard.list = []\r\n        return {...prevListWard}\r\n      })\r\n      setListExaminingSession([]);\r\n      setSelectedAutoComplete(selectedAutoCompleteDefault);\r\n      setDataPatientInfo(dataPatientInfoDefault);\r\n      setDataPatientInfoNotEdit('');\r\n      setDataPatientInfoError(dataPatientInfoErrorDefault);\r\n      setLoading(true);\r\n      props.setSelectedPantientInfo();\r\n      props.setOpenModalInfoPantients(false);\r\n    }\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const responseListProvince = await getListProvince();\r\n    setListProvince(responseListProvince);\r\n  }\r\n\r\n  const handleApplyPantientDataToField = async () => {\r\n    setOpenAlertProcessing(true);   \r\n      \r\n    const editPropsDataPatientInfo = {...dataPatientInfo};\r\n    editPropsDataPatientInfo.examinationId = props.selectedPantientInfo.examinationId\r\n    editPropsDataPatientInfo.height = props.selectedPantientInfo.height\r\n    editPropsDataPatientInfo.weight = props.selectedPantientInfo.weight\r\n    editPropsDataPatientInfo.headCircumference = props.selectedPantientInfo.headCircumference\r\n    editPropsDataPatientInfo.reason = props.selectedPantientInfo.reason\r\n    editPropsDataPatientInfo.vaccination = props.selectedPantientInfo.vaccination\r\n    editPropsDataPatientInfo.id = props.selectedPantientInfo.id\r\n    editPropsDataPatientInfo.patient.identifier = props.selectedPantientInfo.patient.identifier\r\n    editPropsDataPatientInfo.patient.address = props.selectedPantientInfo.patient.address\r\n    editPropsDataPatientInfo.patient.fullName = props.selectedPantientInfo.patient.fullName\r\n    editPropsDataPatientInfo.patient.dayOfBirth = props.selectedPantientInfo.patient.dayOfBirth\r\n    editPropsDataPatientInfo.patient.codeWard = props.selectedPantientInfo.patient.codeWard\r\n    editPropsDataPatientInfo.patient.gender = props.selectedPantientInfo.patient.gender\r\n    editPropsDataPatientInfo.patient.fullNameMother = props.selectedPantientInfo.patient.fullNameMother\r\n    editPropsDataPatientInfo.patient.phoneMother = props.selectedPantientInfo.patient.phoneMother\r\n    editPropsDataPatientInfo.patient.fullNameFather = props.selectedPantientInfo.patient.fullNameFather\r\n    editPropsDataPatientInfo.patient.phoneFather = props.selectedPantientInfo.patient.phoneFather\r\n    editPropsDataPatientInfo.patient.patientId = props.selectedPantientInfo.patient.patientId\r\n\r\n    setDataPatientInfo(_.cloneDeep(editPropsDataPatientInfo));\r\n    setDataPatientInfoNotEdit(_.cloneDeep(editPropsDataPatientInfo));\r\n        \r\n    const response = await getFullAddressByIdWard(props.selectedPantientInfo.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.list = responseListDistrict;\r\n      return {...prevListDistrict}\r\n    });\r\n    const responseListWard = await getListWard(response.districtCode);\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = responseListWard;\r\n      return {...prevListWard}\r\n    });\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(props.selectedPantientInfo.patient.dayOfBirth);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n     \r\n    const selectedGender = listGender.find(gender => gender.genderValue === props.selectedPantientInfo.patient.gender);\r\n    const indexListExamining = responseListMedicalExaminationsGiveRegister.exams.findIndex(examiningSession => examiningSession.id === props.selectedPantientInfo.examinationId)\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = selectedGender\r\n      prevSelectedAutoComplete.examiningSession.value = responseListMedicalExaminationsGiveRegister.exams[indexListExamining];\r\n      prevSelectedAutoComplete.province.value = listProvince[indexListProvince];\r\n      prevSelectedAutoComplete.district.value = responseListDistrict[indexListDistrict];\r\n      prevSelectedAutoComplete.ward.value = responseListWard[indexListWard];\r\n      return prevSelectedAutoComplete\r\n    })\r\n\r\n    setLoading(false);\r\n    setOpenAlertProcessing(false);   \r\n  }\r\n\r\n  const checkValidate = () => {\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      let isValid = true;\r\n\r\n      if(dataPatientInfoError.identifier.title !== ''){\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.identifier.focus = true;\r\n          setFocusField('identifier');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullName === ''){\r\n        _dataPatientInfoError.fullName.title = 'Bạn chưa nhập họ tên';\r\n        _dataPatientInfoError.fullName.openTooltip = true;\r\n        _dataPatientInfoError.fullName.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullName.focus = true;\r\n          setFocusField('fullName');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(dataPatientInfo.patient.gender === ''){\r\n        _dataPatientInfoError.gender.title = 'Bạn chưa chọn giới tính';\r\n        _dataPatientInfoError.gender.isError = true;\r\n        _dataPatientInfoError.gender.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.gender.focus = true;\r\n          setFocusField('gender');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.dayOfBirth === ''){\r\n        _dataPatientInfoError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfoError.dayOfBirth.title !== ''){\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.examiningSession.value === null){\r\n        _dataPatientInfoError.examiningSession.title = 'Bạn chưa chọn lại kỳ khám';\r\n        _dataPatientInfoError.examiningSession.isError = true;\r\n        _dataPatientInfoError.examiningSession.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.examiningSession.focus = true;\r\n          setFocusField('examiningSession');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.province.value === null){\r\n        _dataPatientInfoError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n        _dataPatientInfoError.province.isError = true;\r\n        _dataPatientInfoError.province.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.province.focus = true;\r\n          setFocusField('province');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.district.value === null){\r\n        _dataPatientInfoError.district.title = 'Bạn chưa chọn quận huyện';\r\n        _dataPatientInfoError.district.isError = true;\r\n        _dataPatientInfoError.district.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.district.focus = true;\r\n          setFocusField('district');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.ward.value === null){\r\n        _dataPatientInfoError.ward.title = 'Bạn chưa chọn phường xã';\r\n        _dataPatientInfoError.ward.isError = true;\r\n        _dataPatientInfoError.ward.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.ward.focus = true;\r\n          setFocusField('ward');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.address === ''){\r\n        _dataPatientInfoError.address.title = 'Bạn chưa nhập địa chỉ';\r\n        _dataPatientInfoError.address.isError = true;\r\n        _dataPatientInfoError.address.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.address.focus = true;\r\n          setFocusField('address');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullNameMother === '' && dataPatientInfo.patient.fullNameFather === ''){\r\n        _dataPatientInfoError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n        _dataPatientInfoError.fullNameMother.isError = true;\r\n        _dataPatientInfoError.fullNameMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullNameMother.focus = true;\r\n          setFocusField('fullNameMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.phoneMother === '' && dataPatientInfo.patient.phoneFather === ''){\r\n        _dataPatientInfoError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        _dataPatientInfoError.phoneMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneMother.title !== ''){\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneFather.title !== ''){\r\n        _dataPatientInfoError.phoneFather.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneFather.focus = true;\r\n          setFocusField('phoneFather');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.height === ''){\r\n        _dataPatientInfoError.height.title = 'Bạn chưa nhập chiều cao';\r\n        _dataPatientInfoError.height.isError = true;\r\n        _dataPatientInfoError.height.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.height.focus = true;\r\n          setFocusField('height');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.weight === ''){\r\n        _dataPatientInfoError.weight.title = 'Bạn chưa nhập cân nặng';\r\n        _dataPatientInfoError.weight.isError = true;\r\n        _dataPatientInfoError.weight.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.weight.focus = true;\r\n          setFocusField('weight');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.headCircumference === ''){\r\n        _dataPatientInfoError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n        _dataPatientInfoError.headCircumference.isError = true;\r\n        _dataPatientInfoError.headCircumference.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.headCircumference.focus = true;\r\n          setFocusField('headCircumference');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      // if(dataPatientInfo.reason === ''){\r\n      //   _dataPatientInfoError.reason.isError = true;\r\n      //   isValid = false;\r\n      // }\r\n\r\n      if(_.isEqual(dataPatientInfo, dataPatientInfoNotEdit) === true){\r\n        toast.warning('Hiện không có gì để cập nhật', {toastId: 'warning1'});\r\n        isValid = false;\r\n      }\r\n\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n      return isValid;\r\n  }\r\n\r\n  const handleUpdateMedicalRegister = async () => {\r\n    if(checkValidate()){\r\n      setOpenAlertProcessing(true);\r\n      const response = await updateMedicalRegister(dataPatientInfo);\r\n      if(response.status === 200){\r\n        toast.success(response.data, {toastId: 'success1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      else{\r\n        toast.error(response.data, {toastId: 'error1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      setOpenAlertProcessing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(listProvince.length === 0){\r\n      handleGetListProvince();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.selectedPantientInfo){\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n      handleApplyPantientDataToField();\r\n    }\r\n  }, [props.selectedPantientInfo])\r\n\r\n  useEffect(() => {\r\n    if(props.openModalInfoPantients && props.isContinueUpdateMedicalRegister && loading === false){\r\n      handleUpdateMedicalRegister();\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n    }\r\n  }, [props.isContinueUpdateMedicalRegister, loading])\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth={true} maxWidth='md' open={props.openModalInfoPantients} onClose={(event, reason) => handleCloseModalInfoPantients(event, reason)} >\r\n        <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center', color: 'blue' }}>Thông tin bệnh nhân</DialogTitle>\r\n        <IconButton onClick={() => handleCloseModalInfoPantients()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n          <CloseIcon fontSize='medium'/>\r\n        </IconButton>\r\n        <DialogContent dividers sx={{pt: 1.5, pb: 1.5}}>\r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', pl: 4.2, pr: 4.2, mb: 0.8}}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.identifier.title}</h6>} open={dataPatientInfoError.identifier.openTooltip} placement='left'> \r\n              <TextField error={true ? dataPatientInfoError.identifier.isError === true : false}\r\n                label=\"Mã định danh\" variant=\"outlined\" \r\n                sx={{width: '18%', '&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                inputProps={{ maxLength: 12 }}\r\n                inputRef={(input) => input && focusField === 'identifier' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.identifier}\r\n                onChange={(e) => onChangeIdentifier(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n                      \r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullName.title}</h6>} open={dataPatientInfoError.fullName.openTooltip} placement='top'\r\n              slotProps={{\r\n                popper: {\r\n                  modifiers: [\r\n                    {\r\n                      name: 'offset',\r\n                      options: { offset: [-10, -6], },\r\n                    },\r\n                  ],\r\n                },\r\n              }} \r\n            > \r\n              <TextField error={true ? dataPatientInfoError.fullName.isError === true : false}\r\n                label=\"Họ tên\" variant=\"outlined\" \r\n                sx={{width: '32%', '&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.fullName}\r\n                onChange={(e) => onChangeFullName(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.gender.title}</h6>} open={dataPatientInfoError.gender.openTooltip} placement='top'>\r\n              <Autocomplete \r\n                sx={{width: '12%', marginTop: '7.5px'}}\r\n                options={listGender} \r\n                getOptionLabel={(option) => option.genderName}\r\n                value={selectedAutoComplete.gender.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.genderName}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectGender(e, value)}\r\n                open={selectedAutoComplete.gender.openOption}\r\n                onFocus={() => handleFocus('Gender')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Giới tính\" \r\n                    inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                    error={true ? dataPatientInfoError.gender.isError === true : false}                     \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <DemoContainer components={['DatePicker']}>  \r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.dayOfBirth.title}</h6>} open={dataPatientInfoError.dayOfBirth.openTooltip}>    \r\n                  <Box sx={{width: 110}}>\r\n                    <DatePicker label=\"Ngày sinh\" \r\n                      format='DD/MM/YYYY' defaultValue={moment(dataPatientInfo.patient.dayOfBirth)}\r\n                      disableFuture={true} disableOpenPicker \r\n                      slotProps={{ \r\n                        textField: \r\n                          { \r\n                            inputRef: dateFieldRef,\r\n                            error: true ? dataPatientInfoError.dayOfBirth.isError === true : false,\r\n                            onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                          }\r\n                        }}\r\n                      onChange={(value) => onChangeDOB(value)}\r\n                    />\r\n                  </Box>\r\n                </Tooltip>\r\n              </DemoContainer>\r\n            </ThemeProvider>\r\n          </LocalizationProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.examiningSession.title}</h6>} open={dataPatientInfoError.examiningSession.openTooltip} placement='right'>\r\n              <Autocomplete \r\n                sx={{width: '18%', mt: '7.5px'}}\r\n                options={listExaminingSession} \r\n                noOptionsText={selectedAutoComplete.examiningSession.loading ? 'Đang tải...' : ''}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.examiningSession.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectExaminingSession(e, value)}\r\n                open={selectedAutoComplete.examiningSession.openOption}\r\n                onFocus={() => handleFocus('ExaminingSession')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'ExaminingSession')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Kỳ khám\" \r\n                    inputRef={(input) => input && focusField === 'examiningSession' && input.focus()}\r\n                    error={true ? dataPatientInfoError.examiningSession.isError === true : false} \r\n                    sx={{'& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot': {pl: '6px', pr: '6px'}}}\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      endAdornment: (\r\n                        <>\r\n                          {selectedAutoComplete.examiningSession.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </>\r\n                      ),\r\n                    }} \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.province.title}</h6>} open={dataPatientInfoError.province.openTooltip} placement='left'>\r\n              <Autocomplete \r\n                sx={{width: '20%', mt: 2}}\r\n                options={listProvince} \r\n                filterOptions={filterOptions}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.province.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectProvine(e, value)}\r\n                open={selectedAutoComplete.province.openOption}\r\n                onFocus={() => handleFocus('Province')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Thành phố\"\r\n                    inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                    error={true ? dataPatientInfoError.province.isError === true : false}  \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.district.title}</h6>} open={dataPatientInfoError.district.openTooltip} placement='top'>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listDistrict.list} \r\n                  noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.district.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectDistrict(e, value)}\r\n                  open={selectedAutoComplete.district.openOption}\r\n                  onFocus={() => handleFocus('District')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Quận/huyện\" \r\n                      inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                      error={true ? dataPatientInfoError.district.isError === true : false} \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.ward.title}</h6>} open={dataPatientInfoError.ward.openTooltip}>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listWard.list}\r\n                  noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.ward.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectWard(e, value)}\r\n                  open={selectedAutoComplete.ward.openOption}\r\n                  onFocus={() => handleFocus('Ward')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Phường/Xã\" \r\n                      inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                      error={true ? dataPatientInfoError.ward.isError === true : false}  \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.address.title}</h6>} open={dataPatientInfoError.address.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.address.isError === true : false}\r\n                  label=\"Địa chỉ\" variant=\"outlined\" \r\n                  sx={{width: '36%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.address}\r\n                  onChange={(e) => onChangeAddress(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullNameMother.title}</h6>} open={dataPatientInfoError.fullNameMother.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.fullNameMother.isError === true : false}\r\n                  label=\"Họ tên mẹ\" variant=\"outlined\" \r\n                  sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.fullNameMother}\r\n                  onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                />    \r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneMother.title}</h6>} open={dataPatientInfoError.phoneMother.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.phoneMother.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneMother}\r\n                  onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <TextField \r\n              label=\"Họ tên cha\" variant=\"outlined\" sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n              defaultValue={dataPatientInfo.patient.fullNameFather}\r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n            />\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneFather.title}</h6>} open={dataPatientInfoError.phoneFather.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.phoneFather.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneFather}\r\n                  onChange={(e) => onChangePhoneFather(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.height.title}</h6>} open={dataPatientInfoError.height.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.height.isError === true : false}\r\n                  label='Chiều cao' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.height}\r\n                  onChange={(e) => onChangeHeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.weight.title}</h6>} open={dataPatientInfoError.weight.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.weight.isError === true : false}\r\n                  label='Cân nặng' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(kg)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.weight}\r\n                  onChange={(e) => onChangeWeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.headCircumference.title}</h6>} open={dataPatientInfoError.headCircumference.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.headCircumference.isError === true : false}\r\n                  label='Vòng đầu' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.headCircumference}\r\n                  onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <FormControlLabel sx={{width: '30%', mt: 2}} control={<Checkbox checked={dataPatientInfo.vaccination}/>} \r\n              label=\"Có tham gia tiêm ngừa\"\r\n              onChange={(e) => onChangeVaccination(e.target.checked)}\r\n            />  \r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{justifyContent: 'center'}}>\r\n          <Button variant=\"contained\" onClick={() => handleUpdateMedicalRegister()}>Sửa (F1)</Button>\r\n          <Button variant=\"contained\" color='secondary' onClick={(event, reason) => handleCloseModalInfoPantients(event, reason)}>Đóng (ESC)</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <AlertProcessing openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageInfoPantients","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//info pantients modal\r\nimport ManageInfoPantients from '../ManageInfoPantients/ManageInfoPantients';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//mui theme\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getRegistersByDateNow, getAppointmentsToday, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction ListPatientsRegister(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n  const [listPantientChipState, setListPantientChipState] = useState(\r\n    [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n    ]\r\n  )\r\n\r\n  const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n  \r\n  const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n  const [listDataPatientsAppointmentsToday, setListDataPatientsAppointmentsToday] = useState([]); \r\n  \r\n  const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n  const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n  const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n  const [selectedPantientInfo, setSelectedPantientInfo] = useState();\r\n  const [openModalInfoPantients, setOpenModalInfoPantients] = useState(false);\r\n  const [isContinueUpdateMedicalRegister, setIsContinueUpdateMedicalRegister] = useState();\r\n\r\n  const renderPatientsStatus = (state) => {\r\n    if(state === 0 || state === 3){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterWaiting' />\r\n        </>\r\n      )\r\n    }\r\n    else if(state === 1){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterExamining' />\r\n        </>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterDone' />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSelectedChip = (chipIndex, chipLabel) => {\r\n    setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n    if(chipIndex === 0){\r\n      const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n      setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n    }\r\n    else if(chipIndex === 1){\r\n      const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n      setListDataPatientsRegisterState(listPantientRegisterDone);\r\n    }\r\n    else if(chipIndex === 2){\r\n      setListDataPatientsRegisterSort(listDataPatientsAppointmentsToday);\r\n      setListDataPatientsRegisterState(listDataPatientsAppointmentsToday);\r\n    }\r\n  };\r\n\r\n  const handleSearchPantient = (value) => {\r\n    const takenValue = value;\r\n    setSearchPatientsQuery(takenValue);\r\n\r\n    if(value === ''){\r\n      setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n    }else{\r\n      setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n    }\r\n  }\r\n\r\n  const searchPatients = (patients, searchTerm) => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return patients.filter(patientObj => {\r\n      const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n      return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n    });\r\n  }\r\n\r\n  const handleSelectedPantientInfo = (patientsRegisterSortItem) => {\r\n    setSelectedPantientInfo(patientsRegisterSortItem);\r\n    setIsContinueUpdateMedicalRegister(true);\r\n    setOpenModalInfoPantients(true);\r\n  }\r\n\r\n  const handleSelectedPantientAppointmentsToday = async (patientsRegisterSortItem) => {\r\n    setOpenAlertProcessingBackdrop(true);\r\n    const responseVaccinationByPatientId = await getVaccinationByPatientId(patientsRegisterSortItem.patient.patientId);\r\n    const dataPantientOldOldDiseaseRegister = {\r\n      examinationId: patientsRegisterSortItem.patient.nextExamId,\r\n      oldDisease: true,\r\n      height: '',\r\n      weight: '',\r\n      headCircumference: '',\r\n      reason: '',\r\n      vaccination: responseVaccinationByPatientId.vaccination,\r\n      medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n      userIdDoctor: '',\r\n      patient: patientsRegisterSortItem.patient\r\n    }\r\n    props.setDataPantientAppointmentsToday(dataPantientOldOldDiseaseRegister)\r\n    setOpenAlertProcessingBackdrop(false);\r\n  }\r\n\r\n  const handleGetRegistersByDateNow = async () => {\r\n    setLoading(true);\r\n\r\n    const response = await getRegistersByDateNow();\r\n    const responseGetAppointmentsToday = await getAppointmentsToday();\r\n\r\n    let updatedList = [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: responseGetAppointmentsToday.length }\r\n    ]\r\n\r\n    let _listDataPatientsAppointmentsToday\r\n    if(responseGetAppointmentsToday.length > 0){\r\n      _listDataPatientsAppointmentsToday = responseGetAppointmentsToday.map((item) => {\r\n        const result = {\r\n          patient : {\r\n            identifier: item.identifier,\r\n            patientId: item.patientId,\r\n            fullName: item.patientFullName,\r\n            gender: item.gender,\r\n            dayOfBirth: item.dateOfBirth,\r\n            fullNameMother: item.fullNameMother,\r\n            phoneMother: item.phoneMother,\r\n            fullNameFather: item.fullNameFather,\r\n            phoneFather: item.phoneFather,\r\n            address: item.address,\r\n            fullAddress: item.fullAddress,\r\n            codeWard: item.codeWard,\r\n            nextExamId: item.nextExamId\r\n          }\r\n        }\r\n        return result;\r\n      })\r\n      setListDataPatientsAppointmentsToday(_listDataPatientsAppointmentsToday);\r\n    }\r\n    else{\r\n      setListDataPatientsAppointmentsToday(responseGetAppointmentsToday)\r\n    }\r\n\r\n    if(response !== 400){\r\n      if(response.list.length !== 0){\r\n        setListDataPatientsRegister(response.list);\r\n        if(activeChip.chipOrder === 0){\r\n          const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám và tái khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n          setListDataPatientsRegisterState(listPantientRegisterDone);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 2){\r\n          setListDataPatientsRegisterSort(_listDataPatientsAppointmentsToday);\r\n          setListDataPatientsRegisterState(_listDataPatientsAppointmentsToday);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n      }\r\n    }\r\n    setListPantientChipState(updatedList);\r\n    props.setComponent1Loading(false);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetRegistersByDateNow();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(openModalInfoPantients){\r\n      const handleKeyDown = (event) => {\r\n        if(event.keyCode === 112){\r\n          event.preventDefault()\r\n          setIsContinueUpdateMedicalRegister(true);\r\n          //nhấn F1 để sửa thông tin đăng ký khám\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [openModalInfoPantients, isContinueUpdateMedicalRegister]);\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true){\r\n      handleGetRegistersByDateNow();\r\n      props.setCompleteMedicalRegister(false);\r\n    }\r\n  }, [props.completeMedicalRegister])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{p: 0}}>\r\n        {/* <Typography variant='h6' sx={{color: 'red', mb: 0, fontWeight: 'bolder', fontSize: '1.16rem', marginBottom: '5px'}}>\r\n          {loading ? \r\n            <Skeleton /> \r\n          : \r\n            <div style={{display: 'flex', height: '30px'}}>\r\n              {props.currentDoctorExamining.userIdDoctor !== '' ?\r\n              <>\r\n                <Typography variant='subbtitle1'>{`Bác sĩ khám hôm nay: ${props.currentDoctorExamining.userFullName}`}</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Sửa'/>\r\n              </>\r\n              :\r\n              <>\r\n                <Typography variant='subbtitle1'>Chưa chọn bác sĩ khám hôm nay</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Thêm'/>\r\n              </>}\r\n            </div>\r\n          }\r\n        </Typography> */}\r\n\r\n        <div className='container' style={{border: '1px solid #fff', borderRadius: '10px', height: '590px', padding: 0, boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)'}}>\r\n          {loading ? \r\n             <>\r\n              <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                <CircularProgress/>\r\n                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n              </Box>        \r\n            </>\r\n          :\r\n            <>\r\n              <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                  <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                    <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                      onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                  </Badge>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n            \r\n              <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                <TextField sx={{mt: 0.2, mb: 1, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                  variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc SĐT' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    startAdornment: (\r\n                      <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                    ),\r\n                    endAdornment: (\r\n                      <InputAdornment position='end'>\r\n                        {searchPatientsQuery !== '' ? \r\n                          <CloseIcon sx={{cursor: 'pointer'}} \r\n                            titleAccess='Xóa'\r\n                            onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                          /> \r\n                        : \r\n                          null\r\n                        }\r\n                        </InputAdornment>  \r\n                      )\r\n                    }}>\r\n                  </TextField>\r\n              </Box>\r\n\r\n              <TableContainer component={Paper} sx={{ height: '465px', overflowX: 'scroll', borderBottomLeftRadius: '10px', borderBottomRightRadius: '10px' }}>\r\n                <Table stickyHeader sx={{ minWidth: 1200 }}>\r\n                  <TableHead>\r\n                    <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                      {activeChip.chipOrder === 2 ? \r\n                        null\r\n                      :\r\n                        <>\r\n                          <TableCell align=\"left\" sx={{fontSize: '0.95rem', p: '10px'}}>Trạng thái</TableCell>\r\n                          <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                        </>\r\n                      }\r\n                      <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {listDataPatientsRegisterSort.length !== 0 ?\r\n                      <>\r\n                        {listDataPatientsRegisterSort.map((patientsRegisterSortItem, patientsRegisterSortIndex) => (\r\n                          <TableRow hover role=\"checkbox\" key={patientsRegisterSortIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => activeChip.chipOrder === 2 ? handleSelectedPantientAppointmentsToday(patientsRegisterSortItem) : handleSelectedPantientInfo(patientsRegisterSortItem)}>\r\n                            {activeChip.chipOrder === 2 ? \r\n                              null\r\n                            :\r\n                              <>\r\n                                <TableCell align='center' sx={{width: '90px'}}>\r\n                                  <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.state === 0 || patientsRegisterSortItem.state === 3 ? 'Chờ khám' : patientsRegisterSortItem.state === 2 ? 'Đã khám' : 'Đang khám'}</Typography>} >\r\n                                    <span>{renderPatientsStatus(patientsRegisterSortItem.state)}</span>\r\n                                  </Tooltip>\r\n                                </TableCell>\r\n                                <TableCell align='left' sx={{width: '20px'}}>{patientsRegisterSortItem.order}</TableCell>\r\n                              </>\r\n                            }\r\n                            <TableCell align='left' sx={{width: '150px'}}>{patientsRegisterSortItem.patient.patientId}</TableCell>\r\n                            <TableCell align='left' sx={{width: '200px'}}>{patientsRegisterSortItem.patient.fullName}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{patientsRegisterSortItem.patient.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{moment(patientsRegisterSortItem.patient.dayOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                            <TableCell align='left' sx={{width: '140px'}}>{patientsRegisterSortItem.patient.phoneMother !== '' ? patientsRegisterSortItem.patient.phoneMother : patientsRegisterSortItem.patient.phoneFather}</TableCell>\r\n                            <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 120}}>\r\n                              <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.patient.fullAddress}</Typography>} >\r\n                                <span>{patientsRegisterSortItem.patient.fullAddress}</span>\r\n                              </Tooltip>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))} \r\n                      </>\r\n                    :\r\n                      null\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </>\r\n          }\r\n        </div>\r\n      </Box>\r\n      \r\n      <AlertProcessingBackdrop openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n      />\r\n\r\n      <ManageInfoPantients \r\n        openModalInfoPantients={openModalInfoPantients} setOpenModalInfoPantients={setOpenModalInfoPantients}\r\n        selectedPantientInfo={selectedPantientInfo} setSelectedPantientInfo={setSelectedPantientInfo}\r\n        isContinueUpdateMedicalRegister={isContinueUpdateMedicalRegister} setIsContinueUpdateMedicalRegister={setIsContinueUpdateMedicalRegister}\r\n        setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListPatientsRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//modal\r\n// import AlertConfirmModal from '../ManageAlertConfirm/AlertConfirm';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//api\r\nimport { createMedicalRegister, createMedicalBackRegister, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister } from '../../Service/MedicalService';\r\n\r\nfunction ExaminingSession(props) {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [listExaminingSession, setListExaminingSession] = useState(null);\r\n\r\n    const onChangeRadioSelect = (value) => {\r\n        props.dataPatientsRegister.examinationId = value;\r\n    }\r\n\r\n    const handleListMedicalExaminationsGiveRegister = async () =>  {\r\n        if(props.dataPatientsRegister.oldDisease){\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveOldRegister(props.dataPatientsRegister.patient.dayOfBirth, props.dataPatientsRegister.patient.patientId);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n        else{\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveRegister(props.dataPatientsRegister.patient.dayOfBirth);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    const handleMedicalRegister = async () => {\r\n        // //bệnh cũ\r\n        if(props.dataPatientsRegister.oldDisease === true && props.dataPatientsRegister.examinationId !== ''){\r\n            //là bênh mới đã đăng ký nhưng chưa từng khám bao giờ\r\n            if(listExaminingSession.isAppointment === false && listExaminingSession.oldExams.length === 0){\r\n                setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            //có hẹn khám nhưng không nhắc khám hoặc đến trễ ngày hẹn khám\r\n            else{\r\n                setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n        }\r\n        //bệnh mới\r\n        else{\r\n            //setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalRegister(props.dataPatientsRegister);\r\n            setOpenAlertProcessing(false);\r\n\r\n            if(response.status === 200){\r\n                toast.success(response.data);\r\n                setListExaminingSession(null);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCloseConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n      };\r\n\r\n    const handleOpenConfirm = () => {\r\n        if(props.dataPatientsRegister.examinationId === ''){\r\n            // setIsConfirmOpen(false);\r\n            toast.error('Bạn chưa chọn kỳ khám', {toastId: 'error1'});\r\n        }\r\n        else{\r\n            //setIsConfirmOpen(true);\r\n            handleMedicalRegister();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.dataPatientsRegister.patient.dayOfBirth !== '' && props.openModalExaminingSession === true){\r\n            handleListMedicalExaminationsGiveRegister();\r\n        }\r\n    }, [props.openModalExaminingSession])\r\n\r\n    useEffect(() => {\r\n        if(props.isContinueSelectedExaminingSession === true){\r\n            //nhấn F2 để hoàn tất đăng ký khám\r\n            handleOpenConfirm();\r\n            props.setIsContinueSelectedExaminingSession(false);\r\n        }\r\n    }, [props.isContinueSelectedExaminingSession])\r\n\r\n    return (\r\n        <>\r\n            {listExaminingSession ? \r\n                <>\r\n                    <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalExaminingSession} disableEscapeKeyDown={true}>\r\n                        <DialogTitle \r\n                            sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'green', textTransform: 'uppercase' }}>\r\n                            {`${props.dataPatientsRegister.patient.fullName}, \r\n                            ${props.dataPatientsRegister.patient.gender === true ? 'Nam' : 'Nữ'}, \r\n                            ${listExaminingSession.monthsOfAge}`}\r\n                        </DialogTitle>\r\n\r\n                        <IconButton onClick={() => [props.setOpenModalExaminingSession(false), props.dataPatientsRegister.examinationId = '', setListExaminingSession(null)]} \r\n                            sx={{position: 'absolute', right: 5, top: 7}}>\r\n                                <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n\r\n                        <DialogContent dividers sx={{pl: '0px', pr: '0px'}}>\r\n                            <Grid container rowSpacing={0}>\r\n                                <Grid item xs={0.5}/>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid black', p: 1, height: '50vh', overflow: 'auto'}}>\r\n                                        <Typography variant='h6' sx={{fontWeight: 'bolder'}}>Lịch sử khám</Typography>\r\n                                        {listExaminingSession.oldExams ?\r\n                                            listExaminingSession.oldExams.map((oldExamItem, oldExamIndex) => (\r\n                                                <Typography key={oldExamIndex} variant='subtitle1'>{oldExamItem.name}</Typography>\r\n                                            ))\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </Box>  \r\n                                </Grid>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid red', p: 1, height: '50vh'}}>\r\n                                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', color: 'red'}}>Chọn kỳ khám</Typography>\r\n                                            <RadioGroup key={`${props.dataPatientsRegister.patient.patientId}`} defaultValue={listExaminingSession.exams[0].id} onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                {listExaminingSession.exams.map((examItem, examIndex) => (\r\n                                                    <FormControlLabel key={`${examIndex}`} value={examItem.id} control={<Radio />} label={examItem.name} />\r\n                                                ))}\r\n                                            </RadioGroup>\r\n                                            <Button variant='contained' sx={{mt: 0.5}} onClick={() => handleOpenConfirm()}>Tiếp tục (F2)</Button> \r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </>\r\n            :\r\n                null\r\n            }\r\n\r\n            {/* <AlertConfirmModal \r\n                openAlertConfirmModal={isConfirmOpen} onCloseAlertConfirmModal={handleCloseConfirm} \r\n                onConfirmAlertConfirmModal={handleMedicalRegister} \r\n                titleConfirm=\"Đăng ký khám cho bệnh nhân?\"\r\n            /> */}\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExaminingSession","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListOldDisease, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDisease(props) {\r\n\r\n    const dataPatientsForSearchOldDiseaseDefault = {patientId: '', phone: '', fullName: '', dayOfBirth: ''}\r\n    const dataPatientsForSearchOldDiseaseErrorDefault = {\r\n        patientId: { title: '', isError: false, openTooltip: false, focus: false},\r\n        phone: { title: '', isError: false, openTooltip: false, focus: false },\r\n        fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n        dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n    \r\n    const [listFoundOldDisease, setListFoundOldDisease] = useState(null);\r\n    const [dataPatientsForSearchOldDisease, setDataPatientsForSearchOldDisease] = useState(dataPatientsForSearchOldDiseaseDefault);\r\n    const [dataPatientsForSearchOldDiseaseError, setDataPatientsForSearchOldDiseaseError] = useState(dataPatientsForSearchOldDiseaseErrorDefault);\r\n    const [focusField, setFocusField] = useState(null);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n\r\n    const dateFieldRef = useRef(null);\r\n    const formRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n    const tooltipTheme = createTheme({\r\n        components: {\r\n          MuiTooltip: {\r\n            defaultProps: {\r\n              placement: 'bottom',\r\n              arrow: true,\r\n              componentsProps: {\r\n                tooltip: {\r\n                  sx: {\r\n                    bgcolor: '#d32f2f',\r\n                  },\r\n                },\r\n                arrow: {\r\n                  sx: {\r\n                    color: '#d32f2f',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n    });\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key !== 'Enter') \r\n        {\r\n            event.preventDefault();\r\n        }\r\n        else if(event.key === 'Enter'){\r\n            handleEnterPress(event);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (value, fieldName) => {\r\n        if(value === '' || value === 'DD/MM/YYYY'){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(fieldName === 'patientId'){\r\n                if(typingRef.current){\r\n                    clearInterval(typingRef.current);\r\n                }\r\n                \r\n                typingRef.current = setTimeout(() => {  \r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }, 10)\r\n                \r\n                if(focusField === 'patientId'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'dayOfBirth'){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'dayOfBirth'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'phone'){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const onChangePatientId = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 8){\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = 'Mã bệnh nhân phải từ 8 đến 12 số';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'patientId'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.patientId = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n    }\r\n\r\n    const onChangeFullName = (value) => {\r\n        if(focusField === 'fullName'){\r\n            setFocusField(null);\r\n        }\r\n\r\n        setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n            prevDataPatientsForSearchOldDisease.fullName = value;\r\n            return {...prevDataPatientsForSearchOldDisease}\r\n        })\r\n\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);      \r\n    }\r\n\r\n    const onChangeDayOfBirth = (value) => {\r\n        if(value){            \r\n            const date = value._d;\r\n            const today = new Date();\r\n            const yearsDifference = today.getFullYear() - date.getFullYear();\r\n            const monthsDifference = today.getMonth() - date.getMonth();\r\n            const daysDifference = today.getDate() - date.getDate();\r\n            const age = today.getFullYear() - date.getFullYear();\r\n\r\n            let totalMonths = yearsDifference * 12 + monthsDifference;\r\n            let totalDays = daysDifference;\r\n\r\n            if (daysDifference < 0) {\r\n                totalMonths -= 1;\r\n                totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n            }\r\n\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n\r\n            if(today < date || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = true;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n              }\r\n              else{\r\n                const formattedDate = moment(date).format('YYYY-MM-DD');\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.dayOfBirth = formattedDate;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangePhone = (value) => {\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 10){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.phone = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        }\r\n    }\r\n\r\n    const handleCloseModalOldDisease = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n          else{\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            setListFoundOldDisease(null);\r\n            setSelectedRowIndex(0);\r\n            props.setOpenModalOldDisease(false);\r\n        }\r\n    }\r\n\r\n    const handleResetField = () => {\r\n        formRef.current.reset();\r\n        const inputs = formRef.current.querySelectorAll('input, textarea');\r\n        inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n        setFocusField(null);\r\n    }\r\n\r\n    const validate = () => {\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        let isValid = true;\r\n\r\n        if(dataPatientsForSearchOldDisease.patientId === '' && dataPatientsForSearchOldDisease.fullName === '' && \r\n            dataPatientsForSearchOldDisease.dayOfBirth === '' && dataPatientsForSearchOldDisease.phone === '')\r\n        {\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.fullName.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.patientId.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.focus = true;\r\n                setFocusField('patientId');\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.dayOfBirth.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                if (dateFieldRef.current) {\r\n                    dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n                }\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.phone.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.phone.focus = true;\r\n                setFocusField('phone');\r\n            }\r\n            isValid = false;\r\n        }\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        return isValid;\r\n    }\r\n\r\n    const handleFindOldDisease = async () => {\r\n        setOpenAlertProcessing(true);\r\n        const response = await getListOldDisease(dataPatientsForSearchOldDisease.patientId, dataPatientsForSearchOldDisease.phone, dataPatientsForSearchOldDisease.fullName, dataPatientsForSearchOldDisease.dayOfBirth, '');\r\n        setOpenAlertProcessing(false);\r\n        setListFoundOldDisease(response);\r\n        setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n        setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n        handleResetField();\r\n        if(response.length > 0){\r\n            tableRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleClickFindOldDisease = () => {\r\n        if(validate()){\r\n            setTimeout(()=> {\r\n                handleFindOldDisease()\r\n            }, 200)\r\n        }\r\n    }\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleClickFindOldDisease();\r\n        }\r\n    }\r\n\r\n    const handleTableKeyDown = (event) => {\r\n        if (event.key === 'ArrowDown') {\r\n            setSelectedRowIndex((prevIndex) => (Math.min(prevIndex + 1, listFoundOldDisease.length - 1)));\r\n        } else if (event.key === 'ArrowUp') {\r\n            setSelectedRowIndex((prevIndex) => (Math.max(prevIndex - 1, 0)));\r\n        } else if (event.key === 'Enter' && selectedRowIndex !== null){\r\n            handleApplyDataPatientOldDisease(listFoundOldDisease[selectedRowIndex])\r\n        }\r\n    };\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientId: foundOldDiseaseItem.patientId,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseModalOldDisease();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalOldDisease} onClose={(event, reason) => handleCloseModalOldDisease(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Tìm bệnh cũ</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalOldDisease()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{p: '10px 24px'}}>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around'}} component=\"form\" ref={formRef}>\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.patientId.title}</h6>} open={dataPatientsForSearchOldDiseaseError.patientId.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.patientId.isError === true : false}\r\n                                    label=\"Mã BN\" variant=\"outlined\" size='small'\r\n                                    autoFocus\r\n                                    inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                                    inputProps={{ maxLength: 12 }}\r\n                                    onChange={(e) => onChangePatientId(e.target.value)}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'patientId')}\r\n                                    onKeyDown={handleKeyDown} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.fullName.title}</h6>} open={dataPatientsForSearchOldDiseaseError.fullName.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.fullName.isError === true : false}\r\n                                    label=\"Họ tên\" variant=\"outlined\" size='small'\r\n                                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                                    onKeyDown={(e) => handleEnterPress(e)} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                            <ThemeProvider theme={tooltipTheme}>\r\n                                <DemoContainer components={['DatePicker']}>\r\n                                    <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.dayOfBirth.title}</h6>} open={dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip}>    \r\n                                        <Box sx={{width: 222}}>\r\n                                            <DatePicker label=\"Ngày sinh\" format='DD/MM/YYYY' \r\n                                                disableFuture={true} disableOpenPicker \r\n                                                renderInput={(params) => <TextField {...params} size='small' />}\r\n                                                slotProps={{  \r\n                                                    textField: \r\n                                                    { \r\n                                                        inputRef: dateFieldRef,\r\n                                                        error: true ? dataPatientsForSearchOldDiseaseError.dayOfBirth.isError === true : false, \r\n                                                        size: 'small', \r\n                                                        onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                                        onKeyDown: (e) => handleEnterPress(e)\r\n                                                    }, \r\n                                                }}\r\n                                                onChange={(value) => onChangeDayOfBirth(value)}\r\n                                            />\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                </DemoContainer>\r\n                            </ThemeProvider>      \r\n                        </LocalizationProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.phone.title}</h6>} open={dataPatientsForSearchOldDiseaseError.phone.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                                    inputRef={(input) => input && focusField === 'phone' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.phone.isError === true : false}\r\n                                    label=\"Điện thoại cha/mẹ\" variant=\"outlined\" size='small'\r\n                                    inputProps={{ maxLength: 10 }}\r\n                                    onChange={(e) => onChangePhone(e.target.value)}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'phone')}\r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 1.6}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleClickFindOldDisease()}>Tìm (Enter)</Button>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        {\r\n                            listFoundOldDisease ? \r\n                                listFoundOldDisease.length !== 0 ? \r\n                                <>\r\n                                    <TableContainer component={Paper} sx={{boxShadow: 4, mt: 1.4}} tabIndex={0} onKeyDown={(event) => handleTableKeyDown(event)} ref={tableRef}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listFoundOldDisease ? \r\n                                                    listFoundOldDisease.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                        <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} \r\n                                                            selected={selectedRowIndex === foundOldDiseaseIndex} \r\n                                                            onDoubleClick={() => handleApplyDataPatientOldDisease(foundOldDiseaseItem)}\r\n                                                        >\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.patientId}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                            <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'green'}}>Tìm thấy {listFoundOldDisease.length} bệnh nhân</Typography>\r\n                                </>\r\n                                : \r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'red'}}>Không tìm thấy bệnh nhân</Typography>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Box>  \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDisease","import React, { useState, useEffect, useRef } from 'react';\r\n//ExaminingSessios modal\r\nimport ExaminingSession from '../ManageExaminingSession/ExaminingSession';\r\n//old disease modal\r\nimport OldDisease from '../ManageOldDisease/OldDisease';\r\n// import OldDiseaseForRegister from '../ManageOldDisease/OldDiseaseForRegister';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateField } from '@mui/x-date-pickers/DateField';\r\n//lodash\r\nimport _ from 'lodash';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { createMedicalBackRegister } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction BookMedical(props) {\r\n\r\n  const dataPatientsRegisterDefault = {\r\n    examinationId: '',\r\n    oldDisease: false,\r\n    height: '',\r\n    weight: '',\r\n    headCircumference: '',\r\n    reason: '',\r\n    vaccination: false,\r\n    medicalTypeId: '',\r\n    userIdDoctor: '',\r\n    patient: {\r\n      patientId: '',\r\n      identifier: '',\r\n      address: '',\r\n      fullName: '',\r\n      dayOfBirth: '',\r\n      codeWard: '',\r\n      gender: '',\r\n      fullNameMother: '',\r\n      phoneMother: '',\r\n      fullNameFather: '',\r\n      phoneFather: ''\r\n    }\r\n  }\r\n\r\n  const autocompleteValueDefault = { \r\n    dayOfBirth: null, \r\n    gender: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    province: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    district: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    ward: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    medicalType: {\r\n      value: null,\r\n      openOption: false\r\n    },\r\n    vaccination: false \r\n  }\r\n\r\n  const dataPatientsRegisterErrorDefault = { \r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    patientId: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n    medicalType: { title: '', isError: false, openTooltip: false, focus: false },\r\n    reason: { title: '', isError: false, openTooltip: false, focus: false }\r\n  }\r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const listMedicalType = [\r\n    {medicalTypeOrder: 1, medicalTypeName: 'Khám Nhi khoa phát triển', medicalTypeId: 1},\r\n    {medicalTypeOrder: 2, medicalTypeName: 'Khám trẻ nguy cơ cao', medicalTypeId: 2},\r\n  ]\r\n\r\n  const [openModalExaminingSession, setOpenModalExaminingSession] = useState(false);\r\n  const [isContinueSelectedExaminingSession, setIsContinueSelectedExaminingSession] = useState(false);\r\n\r\n  const [openModalOldDisease, setOpenModalOldDisease] = useState(false);\r\n\r\n  // const [openOldDiseaseRegister, setOpenOldDiseaseRegister] = useState(false);\r\n  // const [listOldDiseaseRegister, setListOldDiseaseRegister] = useState([]);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const [dataPatientsRegister, setDataPatientsRegister] = useState(dataPatientsRegisterDefault);\r\n  const [dataPatientsRegisterError, setDataPatientsRegisterError] = useState(dataPatientsRegisterErrorDefault);\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [autocompleteValue, setAutocompleteValue] = useState(autocompleteValueDefault);\r\n\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const formRef = useRef(null);\r\n  const firstFocusRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n  const typingRef = useRef(null);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f', \r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -7],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n        event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n\r\n    // Xử lý đặc biệt cho \"d\" và \"đ\"\r\n    const replaceSpecialCharacters = str => str.replace(/đ/g, 'd');\r\n\r\n    return options.filter(option => {\r\n        const lowercasedFullName = replaceSpecialCharacters(option.fullName.toLowerCase());\r\n        const initials = replaceSpecialCharacters(option.fullName.split(' ').map(word => word[0]).join('').toLowerCase());\r\n\r\n        const normalizedInput = replaceSpecialCharacters(lowercasedInput);\r\n\r\n        return (\r\n            lowercasedFullName.includes(normalizedInput) ||\r\n            initials.includes(normalizedInput)\r\n        );\r\n    });\r\n  };\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.gender.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.province.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Ward'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'MedicalType'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.medicalType.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n      if(fieldName === 'Identifier'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n        _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.dayOfBirth.title = '';\r\n      //     _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n      //   _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PatientId'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.patientId.title = '';\r\n      //     _dataPatientsRegisterError.patientId.openTooltip = false;\r\n      //     _dataPatientsRegisterError.patientId.isError = false;\r\n      //     _dataPatientsRegisterError.patientId.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.phoneMother.title = '';\r\n      //     _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      //     _dataPatientsRegisterError.phoneMother.isError = false;\r\n      //     _dataPatientsRegisterError.phoneFather.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      if(fieldName === 'PhoneFather'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      else if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientsRegisterError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientsRegisterError.identifier.openTooltip = true;\r\n          _dataPatientsRegisterError.identifier.isError = true;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.identifier.title = '';\r\n      _dataPatientsRegisterError.identifier.openTooltip = false;\r\n      _dataPatientsRegisterError.identifier.isError = false;\r\n      _dataPatientsRegisterError.identifier.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangePatientId = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 8){\r\n          _dataPatientsRegisterError.patientId.title = 'Mã BN phải từ 8 đến 12 số';\r\n          _dataPatientsRegisterError.patientId.openTooltip = true;\r\n          _dataPatientsRegisterError.patientId.isError = true;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          if(focusField === 'patientId'){\r\n            setFocusField(null);\r\n          }\r\n          \r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.patientId = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.patientId.title = '';\r\n          _dataPatientsRegisterError.patientId.openTooltip = false;\r\n          _dataPatientsRegisterError.patientId.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    // else{\r\n    //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n    //   _dataPatientsRegisterError.patientId.title = '';\r\n    //   _dataPatientsRegisterError.patientId.openTooltip = false;\r\n    //   _dataPatientsRegisterError.patientId.isError = false;\r\n    //   _dataPatientsRegisterError.patientId.focus = false;\r\n    //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    // }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullName = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      if(dataPatientsRegisterError.fullName.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullName.title = '';\r\n        _dataPatientsRegisterError.fullName.openTooltip = false;\r\n        _dataPatientsRegisterError.fullName.isError = false;\r\n        _dataPatientsRegisterError.fullName.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n\r\n      // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n      //   handleFindOldDisease();\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n\r\n        if(today < takenValue || age > 2 || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientsRegisterError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n        }\r\n\r\n        else{\r\n          if(focusField === 'dayOfBirth'){\r\n            setFocusField(null);\r\n          }\r\n\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n          prevDataPatientsRegister.patient.dayOfBirth = formattedDate\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.dayOfBirth.title = '';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n          //   handleFindOldDisease();\r\n          // }\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.gender = value.genderValue\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.gender.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.gender.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.gender.title = '';\r\n      _dataPatientsRegisterError.gender.openTooltip = false;\r\n      _dataPatientsRegisterError.gender.isError = false;\r\n      _dataPatientsRegisterError.gender.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n    //   handleFindOldDisease();\r\n    // }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.province.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.district.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.province.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.province.title = '';\r\n      _dataPatientsRegisterError.province.openTooltip = false;\r\n      _dataPatientsRegisterError.province.isError = false;\r\n      _dataPatientsRegisterError.province.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.district.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.district.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.district.title = '';\r\n      _dataPatientsRegisterError.district.openTooltip = false;\r\n      _dataPatientsRegisterError.district.isError = false;\r\n      _dataPatientsRegisterError.district.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n    \r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.codeWard = value.code\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.ward.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.ward.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.ward.title = '';\r\n      _dataPatientsRegisterError.ward.openTooltip = false;\r\n      _dataPatientsRegisterError.ward.isError = false;\r\n      _dataPatientsRegisterError.ward.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeFolk = (value) => {\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'address'){\r\n        setFocusField(null);\r\n      }\r\n      \r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.address = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.address.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.address.title = '';\r\n        _dataPatientsRegisterError.address.openTooltip = false;\r\n        _dataPatientsRegisterError.address.isError = false;\r\n        _dataPatientsRegisterError.address.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'fullNameMother'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameMother = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        if(focusField === 'phoneMother'){\r\n          setFocusField(null);\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneMother.isError = true;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneMother = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneMother.title = '';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneMother.isError = false;\r\n      _dataPatientsRegisterError.phoneMother.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    if(focusField === 'fullNameFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameFather = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (e, value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneFather.isError = true;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneFather = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'phoneFather'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneFather.title = '';\r\n      _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneFather.isError = false;\r\n      _dataPatientsRegisterError.phoneFather.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'height'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.height = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.height.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.height.title = '';\r\n        _dataPatientsRegisterError.height.openTooltip = false;\r\n        _dataPatientsRegisterError.height.isError = false;\r\n        _dataPatientsRegisterError.height.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'weight'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.weight = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.weight.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.weight.title = '';\r\n        _dataPatientsRegisterError.weight.openTooltip = false;\r\n        _dataPatientsRegisterError.weight.isError = false;\r\n        _dataPatientsRegisterError.weight.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'headCircumference'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.headCircumference = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.headCircumference.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.headCircumference.title = '';\r\n        _dataPatientsRegisterError.headCircumference.openTooltip = false;\r\n        _dataPatientsRegisterError.headCircumference.isError = false;\r\n        _dataPatientsRegisterError.headCircumference.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onSelectMedicalType = (e, value) => {\r\n    if(focusField === 'medicalType'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.medicalTypeId = value.medicalTypeId\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.medicalType.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.medicalType.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.medicalType.title = '';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = false;\r\n      _dataPatientsRegisterError.medicalType.isError = false;\r\n      _dataPatientsRegisterError.medicalType.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeReason = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.reason = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      // if(dataPatientsRegisterError.reason.isError){\r\n      //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      //   _dataPatientsRegisterError.reason.isError = false;\r\n      //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.vaccination = bool\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.vaccination = bool\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkValidate = () => {\r\n    let isValid = true;\r\n    const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n\r\n    if(dataPatientsRegisterError.identifier.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.identifier.focus = true;\r\n        setFocusField('identifier');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.patientId === ''){\r\n      _dataPatientsRegisterError.patientId.title = 'Bạn chưa nhập mã bệnh nhân';\r\n      _dataPatientsRegisterError.patientId.openTooltip = true;\r\n      _dataPatientsRegisterError.patientId.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.patientId.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullName === ''){\r\n      _dataPatientsRegisterError.fullName.title = 'Bạn chưa nhập họ tên';\r\n      _dataPatientsRegisterError.fullName.openTooltip = true;\r\n      _dataPatientsRegisterError.fullName.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullName.focus = true;\r\n        setFocusField('fullName');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.dayOfBirth === ''){\r\n      _dataPatientsRegisterError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n      _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n      _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.dayOfBirth.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.gender === ''){\r\n      _dataPatientsRegisterError.gender.title = 'Bạn chưa chọn giới tính';\r\n      _dataPatientsRegisterError.gender.openTooltip = true;\r\n      _dataPatientsRegisterError.gender.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.gender.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n      setFocusField('gender');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.province.value === null){\r\n      _dataPatientsRegisterError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n      _dataPatientsRegisterError.province.openTooltip = true;\r\n      _dataPatientsRegisterError.province.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.province.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('province');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.district.value === null){\r\n      _dataPatientsRegisterError.district.title = 'Bạn chưa chọn quận huyện';\r\n      _dataPatientsRegisterError.district.openTooltip = true;\r\n      _dataPatientsRegisterError.district.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.district.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('district');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.ward.value === null){\r\n      _dataPatientsRegisterError.ward.title = 'Bạn chưa chọn phường xã';\r\n      _dataPatientsRegisterError.ward.openTooltip = true;\r\n      _dataPatientsRegisterError.ward.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.ward.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('ward');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.address === ''){\r\n      _dataPatientsRegisterError.address.title = 'Bạn chưa nhập địa chỉ';\r\n      _dataPatientsRegisterError.address.openTooltip = true;\r\n      _dataPatientsRegisterError.address.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.address.focus = true;\r\n        setFocusField('address');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullNameMother === '' && dataPatientsRegister.patient.fullNameFather === ''){\r\n      _dataPatientsRegisterError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n      _dataPatientsRegisterError.fullNameMother.openTooltip = true;\r\n      _dataPatientsRegisterError.fullNameMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullNameMother.focus = true;\r\n        setFocusField('fullNameMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.phoneMother === '' && dataPatientsRegister.patient.phoneFather === ''){\r\n      _dataPatientsRegisterError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n      _dataPatientsRegisterError.phoneMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneMother.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneFather.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneFather.focus = true;\r\n        setFocusField('phoneFather');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.height === ''){\r\n      _dataPatientsRegisterError.height.title = 'Bạn chưa nhập chiều cao';\r\n      _dataPatientsRegisterError.height.openTooltip = true;\r\n      _dataPatientsRegisterError.height.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.height.focus = true;\r\n        setFocusField('height');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.weight === ''){\r\n      _dataPatientsRegisterError.weight.title = 'Bạn chưa nhập cân nặng';\r\n      _dataPatientsRegisterError.weight.openTooltip = true;\r\n      _dataPatientsRegisterError.weight.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.weight.focus = true;\r\n        setFocusField('weight');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.headCircumference === ''){\r\n      _dataPatientsRegisterError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n      _dataPatientsRegisterError.headCircumference.openTooltip = true;\r\n      _dataPatientsRegisterError.headCircumference.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.headCircumference.focus = true;\r\n        setFocusField('headCircumference');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.medicalTypeId === ''){\r\n      _dataPatientsRegisterError.medicalType.title = 'Bạn chưa chọn loại hình khám';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = true;\r\n      _dataPatientsRegisterError.medicalType.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.medicalType.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('medicalType');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    // if(dataPatientsRegister.reason === ''){\r\n    //   _dataPatientsRegisterError.reason.isError = true;\r\n    //   isValid = false;\r\n    // }\r\n\r\n    setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    return isValid;\r\n  }\r\n\r\n  const handleMedicalRegister = () => {\r\n    setTimeout(() => {\r\n      if(checkValidate()){\r\n        firstFocusRef.current.focus();\r\n        if(props.dataPantientAppointmentsToday){\r\n          handleMedicalBackRegister();\r\n        }\r\n        else{\r\n          setOpenModalExaminingSession(true);\r\n        }\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const handleMedicalBackRegister = async () => {\r\n    setOpenAlertProcessing(true);\r\n    const responseCreateMedicalBackRegister = await createMedicalBackRegister(dataPatientsRegister);\r\n    if(responseCreateMedicalBackRegister.status === 200){\r\n      toast.success(responseCreateMedicalBackRegister.data, {toastId: 'success5'})\r\n      props.setCompleteMedicalRegister(true);\r\n      handleResetField();\r\n    }\r\n    else{\r\n      toast.error(responseCreateMedicalBackRegister.data, {toastId: 'error5'})\r\n    }\r\n    setOpenAlertProcessing(false);\r\n  }\r\n\r\n  const handleApplyPantientOldDiseaseData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = dataPatientsRegister.patient.identifier;\r\n    document.getElementById('patientId').value = dataPatientsRegister.patient.patientId;\r\n    document.getElementById('patientFullName').value = dataPatientsRegister.patient.fullName;\r\n\r\n    let _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(dataPatientsRegister.patient.dayOfBirth);\r\n\r\n    if(dataPatientsRegister.patient.codeWard){\r\n      const response = await getFullAddressByIdWard(dataPatientsRegister.patient.codeWard);\r\n      const responseListDistrict = await getListDistrict(response.provinceCode);\r\n      const responseListWard = await getListWard(response.districtCode);\r\n  \r\n      const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n      const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n      const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n      const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === dataPatientsRegister.medicalTypeId);\r\n    \r\n      _autocompleteValue.province.value = listProvince[indexListProvince];\r\n      _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n      _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n      _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n      _autocompleteValue.vaccination = dataPatientsRegister.vaccination;\r\n    }\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === dataPatientsRegister.patient.gender);\r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n\r\n    setAutocompleteValue(_autocompleteValue);\r\n    \r\n    document.getElementById('patientAddress').value = dataPatientsRegister.patient.address;\r\n    document.getElementById('patientFullNameMother').value = dataPatientsRegister.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = dataPatientsRegister.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = dataPatientsRegister.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = dataPatientsRegister.patient.phoneFather;\r\n\r\n    if(dataPatientsRegister.patient.codeWard === null){\r\n      setTimeout(() => {\r\n        setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n        setOpenAlertProcessing(false);\r\n\r\n        setFocusField('province');\r\n      }, 300)\r\n    }\r\n    else{\r\n      setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n      setOpenAlertProcessing(false);\r\n      \r\n      setFocusField('weight');\r\n    }\r\n  }\r\n\r\n  const handleApplyPantientAppointmentsTodayData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = props.dataPantientAppointmentsToday.patient.identifier;\r\n    document.getElementById('patientId').value = props.dataPantientAppointmentsToday.patient.patientId;\r\n    document.getElementById('patientFullName').value = props.dataPantientAppointmentsToday.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(props.dataPantientAppointmentsToday.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(props.dataPantientAppointmentsToday.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === props.dataPantientAppointmentsToday.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === props.dataPantientAppointmentsToday.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = props.dataPantientAppointmentsToday.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = props.dataPantientAppointmentsToday.patient.address;\r\n    document.getElementById('patientFullNameMother').value = props.dataPantientAppointmentsToday.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = props.dataPantientAppointmentsToday.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = props.dataPantientAppointmentsToday.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = props.dataPantientAppointmentsToday.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('height');\r\n  }\r\n\r\n  const handleResetField = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n\r\n    firstFocusRef.current.focus();\r\n  }\r\n\r\n  const handleOpenModalOldDisease = () => {\r\n    handleResetField();\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const response = await getListProvince();\r\n    if(response !== 400){\r\n      setListProvince(response);\r\n    }\r\n  }\r\n\r\n  // const handleFindOldDisease = async () => {\r\n  //   const response = await getListOldDisease('', '', dataPatientsRegister.patient.fullName, dataPatientsRegister.patient.dayOfBirth, dataPatientsRegister.patient.gender);\r\n  //   if(response.length !== 0){\r\n  //     setListOldDiseaseRegister(response);\r\n  //     setOpenOldDiseaseRegister(true);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleGetListProvince();\r\n    firstFocusRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(dataPatientsRegister.oldDisease === true){\r\n      handleApplyPantientOldDiseaseData();\r\n    }\r\n  }, [dataPatientsRegister.oldDisease])\r\n\r\n  useEffect(() => {\r\n    if(props.dataPantientAppointmentsToday){\r\n      setDataPatientsRegister(props.dataPantientAppointmentsToday);\r\n      handleApplyPantientAppointmentsTodayData();\r\n    }\r\n  }, [props.dataPantientAppointmentsToday]) \r\n\r\n  useEffect(() => {\r\n    if(props.onF2Press){\r\n      if(openModalExaminingSession === true && openModalOldDisease === false){\r\n        setIsContinueSelectedExaminingSession(true);\r\n        props.setOnF2Press(false);\r\n      }\r\n      else{\r\n        handleMedicalRegister();\r\n        props.setOnF2Press(false);\r\n      }\r\n    }\r\n    \r\n    if(props.onF4Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF4Press(false);\r\n      }\r\n      else{\r\n        handleResetField();\r\n        props.setOnF4Press(false);\r\n      }\r\n    }\r\n\r\n    if(props.onF8Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF8Press(false);\r\n      }\r\n      else{\r\n        handleOpenModalOldDisease();\r\n        props.setOnF8Press(false);\r\n      }\r\n    }\r\n  }, [props.onF2Press, props.onF4Press, props.onF8Press])\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{'&.MuiContainer-maxWidthLg': {pr: 0}, height: '100%',}}>\r\n        <Box sx={{ minHeight: '36.8rem', borderRadius: '20px', boxShadow: 5, pt: 1.2, pb: 1.2, pl: 2.4, pr: 2.4, }}>\r\n          <Typography variant='h6' sx={{textAlign: 'center', fontWeight: 'bolder', color: 'blue'}}>Thông tin đăng ký khám</Typography> \r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}} component=\"form\" ref={formRef}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.identifier.title}</h6>} open={dataPatientsRegisterError.identifier.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.identifier.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã định danh\" variant=\"outlined\" id='patientIdentifier' autoComplete='off'\r\n                  inputRef={focusField === 'identifier' ? (input) => input && focusField === 'identifier' && input.focus() : firstFocusRef}\r\n                  onChange={(e) => onChangeIdentifier(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Identifier')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.patientId.title}</h6>} open={dataPatientsRegisterError.patientId.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.patientId.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã BN\" variant=\"outlined\" id='patientId' autoComplete='off'\r\n                  inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                  onChange={(e) => onChangePatientId(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'PatientId')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullName.title}</h6>} open={dataPatientsRegisterError.fullName.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }} \r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [37, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              > \r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullName.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên\" variant=\"outlined\" id=\"patientFullName\" autoComplete='off'                \r\n                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  /> \r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n      \r\n            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n              <ThemeProvider theme={tooltipTheme}>\r\n                <DemoContainer components={['DatePicker']} >\r\n                  <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.dayOfBirth.title}</h6>} open={dataPatientsRegisterError.dayOfBirth.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>    \r\n                    <Box sx={{width: 142, mt: '12px !important'}}>\r\n                      <div style={{width: '100%', }}>\r\n                        <DateField label=\"Ngày sinh\" \r\n                          format='DD/MM/YYYY' value={autocompleteValue.dayOfBirth}\r\n                          disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                          slotProps={{ \r\n                            textField: \r\n                              { \r\n                                inputRef: dateFieldRef,\r\n                                error: true ? dataPatientsRegisterError.dayOfBirth.isError === true : false,\r\n                                onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                sx: {'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } },\r\n                              }\r\n                          }}\r\n                          onChange={(value) => onChangeDOB(value)}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  </Tooltip>\r\n                </DemoContainer>\r\n              </ThemeProvider>      \r\n            </LocalizationProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.gender.title}</h6>} open={dataPatientsRegisterError.gender.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '12%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientGender' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.gender.value}\r\n                    options={listGender} \r\n                    getOptionLabel={(option) => option.genderName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.genderName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectGender(e, value)}\r\n                    open={autocompleteValue.gender.openOption}\r\n                    onFocus={() => handleFocus('Gender')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Giới tính\" \r\n                        inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.gender.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n             \r\n            {/* <TextField label=\"Dân tộc\" variant=\"outlined\" sx={{width: '12%', '&.MuiTextField-root' : {marginTop: '15px'}}}/> */}\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.province.title}</h6>} open={dataPatientsRegisterError.province.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '19.2%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.patient.codeWard ?  true : false}\r\n                    value={autocompleteValue.province.value}\r\n                    options={listProvince} \r\n                    noOptionsText={'Đang tải...'}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectProvine(e, value)}\r\n                    open={autocompleteValue.province.openOption}\r\n                    onFocus={() => handleFocus('Province')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Thành phố\" \r\n                        inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.province.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.district.title}</h6>} open={dataPatientsRegisterError.district.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '24%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.patient.codeWard ? true : false}\r\n                    value={autocompleteValue.district.value}\r\n                    options={listDistrict.list} \r\n                    noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                    open={autocompleteValue.district.openOption}\r\n                    onFocus={() => handleFocus('District')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.fullName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectDistrict(e, value)}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Quận/Huyện\" \r\n                        inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.district.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <>\r\n                              {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <>\r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.ward.title}</h6>} open={dataPatientsRegisterError.ward.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                  <div style={{width: '23.5%', marginTop: '20px'}}>\r\n                    <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.patient.codeWard ? true : false}\r\n                      value={autocompleteValue.ward.value}\r\n                      options={listWard.list} \r\n                      noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                      filterOptions={filterOptions}\r\n                      getOptionLabel={(option) => option.name}\r\n                      autoComplete={false}\r\n                      renderOption={(props, option) => (\r\n                        <li {...props}>\r\n                          {option.fullName}\r\n                        </li>\r\n                      )}\r\n                      onChange={(e, value) => onSelectWard(e, value)}\r\n                      open={autocompleteValue.ward.openOption}\r\n                      onFocus={() => handleFocus('Ward')}\r\n                      onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} \r\n                          label=\"Phường/Xã\" \r\n                          inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                          error={true ? dataPatientsRegisterError.ward.isError === true : false} \r\n                          sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                              <>\r\n                                {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                              </>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      disableClearable // Bỏ icon xóa\r\n                      popupIcon={null} // Bỏ icon dropdown\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.address.title}</h6>} open={dataPatientsRegisterError.address.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.address.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Địa chỉ\" variant=\"outlined\" id='patientAddress' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                    onChange={(e) => onChangeAddress(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullNameMother.title}</h6>} open={dataPatientsRegisterError.fullNameMother.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullNameMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên mẹ\" variant=\"outlined\" id='patientFullNameMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                    autoFocus={dataPatientsRegisterError.fullNameMother.focus}\r\n                    onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneMother.title}</h6>} open={dataPatientsRegisterError.phoneMother.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.phoneMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Điện thoại\" variant=\"outlined\" id='patientPhoneMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                    onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n\r\n            <TextField label=\"Họ tên cha\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n              variant=\"outlined\" id='patientFullNameFather' autoComplete='off'\r\n              sx={{width: '30.4%', '&.MuiTextField-root' : {marginTop: '20px'}}} \r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n              inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n              InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n            />\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneFather.title}</h6>} open={dataPatientsRegisterError.phoneFather.openTooltip}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField label=\"Điện thoại\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                    variant=\"outlined\" id='patientPhoneFather' autoComplete='off'\r\n                    onChange={(e) => onChangePhoneFather(e, e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneFather')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.weight.title}</h6>} open={dataPatientsRegisterError.weight.openTooltip} PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Cân nặng bé\" variant=\"outlined\" id='patientWeight' autoComplete='off' error={true ? dataPatientsRegisterError.weight.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(kg)</InputAdornment>}}\r\n                    onChange={(e) => onChangeWeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.height.title}</h6>} open={dataPatientsRegisterError.height.openTooltip} placement='left' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Chiều cao bé\" variant=\"outlined\" id='patientHeight' autoComplete='off' error={true ? dataPatientsRegisterError.height.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.headCircumference.title}</h6>} open={dataPatientsRegisterError.headCircumference.openTooltip} placement='top-start' PopperProps={{sx: { zIndex: 2 } }}\r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [70, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              >\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Vòng đầu bé\" variant=\"outlined\" id='patientHeadCircumference' autoComplete='off' error={true ? dataPatientsRegisterError.headCircumference.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.medicalType.title}</h6>} open={dataPatientsRegisterError.medicalType.openTooltip} placement='bottom' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30.5%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientMedicalType' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.medicalType.value}\r\n                    options={listMedicalType} \r\n                    getOptionLabel={(option) => option.medicalTypeName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.medicalTypeName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectMedicalType(e, value)}\r\n                    open={autocompleteValue.medicalType.openOption}\r\n                    onFocus={() => handleFocus('MedicalType')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'MedicalType')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Loại hình khám\" \r\n                        inputRef={(input) => input && focusField === 'medicalType' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.medicalType.isError === true : false} \r\n                        sx={{\r\n                          '& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } ,\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.Mui-disabled.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'},\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'}\r\n                        }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.reason.title}</h6>} open={dataPatientsRegisterError.reason.openTooltip} >\r\n                <div style={{width: '100%' }}>\r\n                  <TextField fullWidth label=\"Lý do khám\" multiline rows={3} variant=\"outlined\" id='patientReason' autoComplete='off' error={true ? dataPatientsRegisterError.reason.isError === true : false}\r\n                    sx={{'&.MuiTextField-root' : {marginTop: '20px'}}} \r\n                    onChange={(e) => onChangeReason(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <FormControlLabel control={<Checkbox checked={autocompleteValue.vaccination}/>} sx={{width: '100%'}}\r\n              label=\"Bệnh nhân có tham gia tiêm ngừa\" onChange={(e) => onChangeVaccination(e.target.checked)}/>  \r\n\r\n            <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n              <Button variant=\"contained\" color=\"primary\" sx={{mr: 1}} onClick={() => handleMedicalRegister()}>Đăng ký (f2)</Button>\r\n              <Button variant=\"contained\" color=\"warning\" onClick={() => handleResetField()}>Làm mới (f4)</Button>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => handleOpenModalOldDisease()}>Bệnh cũ (f8)</Button>\r\n            </Box>\r\n          </Box>         \r\n        </Box>\r\n      </Container>\r\n\r\n      <ExaminingSession \r\n        openModalExaminingSession={openModalExaminingSession} setOpenModalExaminingSession={setOpenModalExaminingSession} \r\n        handleResetField={handleResetField} setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        isContinueSelectedExaminingSession={isContinueSelectedExaminingSession} setIsContinueSelectedExaminingSession={setIsContinueSelectedExaminingSession}\r\n        dataPatientsRegister={dataPatientsRegister} \r\n      />\r\n\r\n      <OldDisease \r\n        openModalOldDisease={openModalOldDisease} setOpenModalOldDisease={setOpenModalOldDisease}\r\n        dataPatientsRegister={dataPatientsRegister} setDataPatientsRegister={setDataPatientsRegister}\r\n      />\r\n\r\n      {/* <OldDiseaseForRegister\r\n        openOldDiseaseRegister={openOldDiseaseRegister} setOpenOldDiseaseRegister={setOpenOldDiseaseRegister}\r\n        setDataPatientsRegister={setDataPatientsRegister}\r\n        listOldDiseaseRegister={listOldDiseaseRegister} setListOldDiseaseRegister={setListOldDiseaseRegister}\r\n      /> */}\r\n\r\n      <AlertProcessing\r\n        openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookMedical","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//modal\r\nimport SelectedDoctorExamining from '../ManageSelectedDoctorExamining/SelectedDoctorExamining';\r\n//components\r\nimport ListPatientsRegister from './ListPatientsRegister';\r\nimport BookMedical from './BookMedical';\r\n//api\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nfunction MainMedicalRegister() {\r\n\r\n  const { user, loading } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [component1Loading, setComponent1Loading] = useState(true);\r\n\r\n  const [completeMedicalRegister, setCompleteMedicalRegister] = useState(false);\r\n  const [dataPantientAppointmentsToday, setDataPantientAppointmentsToday] = useState();\r\n\r\n  const [handleResetField, setHandleResetField] = useState(false); //F2\r\n  const [handleOpenModalExaminingSession, setHandleOpenModalExaminingSession] = useState(false); //F4\r\n  const [handleOpenModalOldDisease, setHandleOpenModalOldDisease] = useState(false); //F8\r\n\r\n  const handleF2Press = () => {\r\n    setHandleOpenModalExaminingSession(true);\r\n  }\r\n\r\n  const handleF4Press = () => {\r\n    setHandleResetField(true);\r\n  }\r\n\r\n  const handleF8Press = () => {\r\n    setHandleOpenModalOldDisease(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(loading === false && user.isLogin){\r\n      if(user.positionName !== 'Nursing'){\r\n        history.push('/404');\r\n      }\r\n    }\r\n  }, [loading, user])\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if(event.keyCode === 113){\r\n        event.preventDefault()\r\n        //nhấn F2 để đăng ký khám\r\n        handleF2Press();\r\n      }\r\n      else if(event.keyCode === 115){\r\n        event.preventDefault()\r\n        //nhấn F4 để reset các input field \r\n        handleF4Press();\r\n      }\r\n      else if(event.keyCode === 119){\r\n        event.preventDefault()\r\n        //nhấn F8 để tìm bệnh cũ\r\n        handleF8Press();\r\n      }\r\n      else{\r\n\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n              <Grid container spacing={0} sx={{marginLeft: 0}}>\r\n                <Grid item xs={5}>  \r\n                  <ListPatientsRegister \r\n                    completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                    component1Loading={component1Loading} setComponent1Loading={setComponent1Loading}\r\n                    dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                  />\r\n                </Grid>\r\n            \r\n                <Grid item xs={7} >\r\n                  {component1Loading ?\r\n                    <div style={{marginLeft: '18px'}}>\r\n                      <Skeleton variant='rectangular' width=\"100%\" height={590} />\r\n                    </div>\r\n                  :\r\n                    <BookMedical \r\n                      onF2Press={handleOpenModalExaminingSession} setOnF2Press={setHandleOpenModalExaminingSession}\r\n                      onF4Press={handleResetField} setOnF4Press={setHandleResetField}\r\n                      onF8Press={handleOpenModalOldDisease} setOnF8Press={setHandleOpenModalOldDisease}\r\n                      completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                      dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                    />\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n         {/* <SelectedDoctorExamining \r\n          openSelectedDoctorExaminingModal={openSelectedDoctorExaminingModal} setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n          currentDoctorExamining={currentDoctorExamining} setCurrentDoctorExamining={setCurrentDoctorExamining}\r\n         /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainMedicalRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getAppointmentsNextWeek, updateStateAppointment } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainAppointmentExamining() {\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chưa nhắc hẹn khám'});\r\n    const [listPantientAppointmentChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [listAppointment, setListAppointment] = useState();\r\n    \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n    const [listDataPatientsAppointmentPaginate, setListDataPatientsAppointmentPaginate] = useState([]);\r\n    const [listDataPatientsAppointmentState, setListDataPatientsAppointmentState] = useState();\r\n    const [listDataPatientsAppointmentSort, setListDataPatientsAppointmentSort] = useState([]);\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [pageCount, setPageCount] = useState();\r\n\r\n    const [dataAppointment, setDataAppointment] = useState();\r\n\r\n    const handlePaginate = (data) => {\r\n        const itemsPerPage = 5;\r\n        if(data){\r\n            const calculatedPageCount = Math.ceil(data.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = data.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n        else{\r\n            const calculatedPageCount = Math.ceil(listDataPatientsAppointmentPaginate.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = listDataPatientsAppointmentPaginate.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    }\r\n\r\n    const handleGetAppointmentsNextWeek = async () => {\r\n        setLoading(true);\r\n        const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n        setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n        const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n        const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n        const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n        const updateListPantientAppointmentChipState = [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n        ]\r\n\r\n        setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n        if(activeChip.chipOrder === 0){\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind)\r\n        }\r\n\r\n        else if(activeChip.chipOrder === 1){\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n            handlePaginate(_listAppointmentAcceptReExamining)\r\n        }\r\n\r\n        else{\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n            handlePaginate(_listAppointmentRejectReExamining)\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n            const _listAppointmentNotRemind = listAppointment.filter(item => item.stateAppointment === 0);\r\n\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const _listAppointmentAcceptReExamining = listAppointment.filter(item => item.stateAppointment === 1);\r\n\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining);\r\n            handlePaginate(_listAppointmentAcceptReExamining);\r\n        }\r\n        else{\r\n            const _listAppointmentRejectReExamining = listAppointment.filter(item => item.stateAppointment === 2);\r\n\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining);\r\n            handlePaginate(_listAppointmentRejectReExamining);\r\n        }\r\n    }\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsAppointmentSort(listDataPatientsAppointmentState);\r\n        }else{\r\n          setListDataPatientsAppointmentSort(searchPatients(listDataPatientsAppointmentState, takenValue));\r\n        }\r\n    }\r\n\r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, patientFullName, phoneMother, phoneFather } = patientObj;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || patientFullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const onChangeAppointmentDate = (medicalBookId, appointmentDate) => {\r\n        if(appointmentDate){\r\n            const takenValue = appointmentDate._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const today = new Date();\r\n                const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n                const convertAppointmentDateFindDataAppointment = new Date(findDataAppointment.appointmentDate)\r\n\r\n                if(today <= takenValue || takenValue >= convertAppointmentDateFindDataAppointment){\r\n                    findDataAppointment.appointmentDate = moment(takenValue).format('YYYY-MM-DD');\r\n                }\r\n            }, 100) \r\n        }\r\n        \r\n    }\r\n\r\n    const handleAcceptReExamining = async (medicalBookId) => {\r\n        setLoading(true);\r\n\r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 1);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            \r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleRejectReExamining = async (medicalBookId) => {\r\n        setLoading(true);\r\n        \r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 2);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetAppointmentsNextWeek();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handlePaginate();\r\n    }, [page]);\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1, p: 0 }}>\r\n            <TableContainer component={Paper} sx={{height: loading ? '40rem' : 'auto', position: 'relative'}}>\r\n                {loading ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>        \r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Box>\r\n                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                {listPantientAppointmentChipState.map((pantientAppointmentChipStateItem, pantientAppointmentChipStateIndex) => (\r\n                                    <Badge badgeContent={pantientAppointmentChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientAppointmentChipStateIndex}`}> \r\n                                        <Chip label={pantientAppointmentChipStateItem.chipLabel} color={pantientAppointmentChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                            onClick={() => handleSelectedChip(pantientAppointmentChipStateIndex, pantientAppointmentChipStateItem.chipLabel)} />  \r\n                                    </Badge>\r\n                                ))}\r\n                            </Stack>\r\n\r\n                            <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.15rem', fontWeight: 'bolder'}}>Danh sách {activeChip.chipLabel} trong 6 ngày tới</Typography>\r\n\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', mb: 1}}>\r\n                                <TextField sx={{width: 500, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc Số điện thoại' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                        startAdornment: (\r\n                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                        ),\r\n                                        endAdornment: (\r\n                                            <InputAdornment position='end'>\r\n                                                {searchPatientsQuery !== '' ? \r\n                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsAppointmentSort(listDataPatientsAppointmentState)]}\r\n                                                    /> \r\n                                                : \r\n                                                    null\r\n                                                }\r\n                                            </InputAdornment>  \r\n                                        )\r\n                                    }}>\r\n                                </TextField>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Table stickyHeader >\r\n                            <TableHead>\r\n                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                    <TableCell align='left' >Mã bệnh nhân</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày sinh</TableCell>\r\n                                    {/* <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Giới tính</TableCell> */}\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Địa chỉ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên Cha/Mẹ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Số điện thoại</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám cũ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám tiếp theo</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày hẹn khám</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Nhấn</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {listDataPatientsAppointmentSort.map((dataPantientAppointmentItem, dataPantientAppointmentIndex) => (\r\n                                    <TableRow hover role=\"checkbox\" key={dataPantientAppointmentIndex} sx={{':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1) !important'}}}>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientId}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientFullName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{moment(dataPantientAppointmentItem.dateOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                        {/* <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.gender === true ? 'Nam' : 'Nữ'}</TableCell> */}\r\n                                        <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 240, fontSize: '0.9rem'}}>\r\n                                            <Tooltip title={<Typography variant='subtitle2'>{dataPantientAppointmentItem.fullAddress}</Typography>} >\r\n                                                <span>{dataPantientAppointmentItem.fullAddress}</span>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.fullNameFather !== '' ? dataPantientAppointmentItem.fullNameFather : dataPantientAppointmentItem.fullNameMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.phoneFather !== '' ? dataPantientAppointmentItem.phoneFather : dataPantientAppointmentItem.phoneMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.examNameOld}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.nextExamName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto'}}>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                                <DemoContainer components={['DatePicker']}> \r\n                                                    <Box sx={{width: 145}}>\r\n                                                        <div style={{width: '100%'}}>\r\n                                                            <DatePicker label=\"Ngày khám dự kiến\" disablePast minDate={moment()}\r\n                                                                format='DD/MM/YYYY' value={moment(dataPantientAppointmentItem.appointmentDate)}\r\n                                                                onChange={(value) => onChangeAppointmentDate(dataPantientAppointmentItem.medicalBookId, value)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Box> \r\n                                                </DemoContainer>\r\n                                            </LocalizationProvider>\r\n                                        </TableCell>                                                                                                \r\n                                        <TableCell align={dataPantientAppointmentItem.stateAppointment === 0 ? 'left' : 'center'} sx={{width: 'auto', fontSize: '0.9rem'}}>\r\n                                            {dataPantientAppointmentItem.stateAppointment === 0 ?\r\n                                                <>   \r\n                                                    <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {dataPantientAppointmentItem.stateAppointment === 1 ?\r\n                                                        <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    :\r\n                                                        <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </>\r\n                }\r\n            </TableContainer>\r\n\r\n            {listDataPatientsAppointmentSort.length !== 0 && loading === false ?\r\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n                    <Pagination count={pageCount} page={page} onChange={handlePageChange} color=\"secondary\" />\r\n                </Box>\r\n            :\r\n                null\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainAppointmentExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport _ from 'lodash'\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DialogActions } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//other\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n//css\r\nimport './SCSS/CompleteExamining.scss';\r\n//api\r\nimport { createAddPredecessor, createAddMedicalBook, getAppointmentDate } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CompleteExamining(props) {\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState();\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n\r\n    const typingRef = useRef(null);\r\n    const textareaRef = useRef(null);\r\n    const dateFieldRef = useRef(null);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleCloseModalCompleteExamining = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n          return;\r\n        }\r\n        else{\r\n            setMainDataExaminingForConclusion();\r\n            props.setOpenModalCompleteExamining(false);\r\n        }\r\n      }\r\n\r\n    const onChangeExaminingConclusion = (value) => {\r\n        typingRef.current = setTimeout(() => {\r\n            setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                prevMainDataExaminingForConclusion.conclusion = value;\r\n                return {...prevMainDataExaminingForConclusion}\r\n            })\r\n        }, 300)\r\n    }\r\n\r\n    const onChangeAppointmentDate = (value) => {\r\n        if(value){\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n            typingRef.current = setTimeout(() => {\r\n                const takenValue = value._d;\r\n                const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n                if(formattedDate !== 'Invalid date'){\r\n                    setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                        prevMainDataExaminingForConclusion.appointmentDate = formattedDate;\r\n                        return {...prevMainDataExaminingForConclusion}\r\n                    })\r\n                }\r\n            }, 200)   \r\n        }\r\n    }\r\n\r\n    const handleSetDataCompleteExamining = async () => {\r\n        setOpenAlertProcessing(true);\r\n\r\n        const editDataExaminingForConclusion = _.clone(props.dataExaminingForConclusion);\r\n        editDataExaminingForConclusion.categories = editDataExaminingForConclusion.categories.map(categoriesItem => ({\r\n            ...categoriesItem,\r\n            // Lọc các categoryContents để giữ lại những phần tử có categoryContentQuestions không rỗng\r\n            categoryContents: categoriesItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length > 0)\r\n\r\n            // Loại bỏ các categories nếu tất cả categoryContents của nó đều bị loại bỏ\r\n        })).filter(categoriesItem => categoriesItem.categoryContents.length > 0);\r\n\r\n        const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        if(responseAppointmentDate.status === 200){\r\n            editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n            editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n            editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n            if(editDataExaminingForConclusion.isVaccination){\r\n                editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n                editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n                editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n            }\r\n\r\n        }else{\r\n            toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        }\r\n \r\n        setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        setOpenAlertProcessing(false);\r\n        if(props.dataExaminingForConclusion.conclusion !== ''){\r\n            const length = textareaRef.current.value.length;\r\n            textareaRef.current.setSelectionRange(length, length);\r\n            textareaRef.current.focus();\r\n        }\r\n        else{\r\n            textareaRef.current.focus();\r\n        }\r\n\r\n        // if(editDataExaminingForConclusion.categories.length !== 0){\r\n            \r\n        //     const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        //     if(responseAppointmentDate.status === 200){\r\n        //         editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n        //         editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n        //         editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n        //         if(editDataExaminingForConclusion.isVaccination){\r\n        //             editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n        //             editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n        //             editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n        //         }\r\n\r\n        //     }else{\r\n        //         toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        //     }\r\n \r\n        //     setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        //     setOpenAlertProcessing(false);\r\n        //     if(props.dataExaminingForConclusion.conclusion !== ''){\r\n        //         const length = textareaRef.current.value.length;\r\n        //         textareaRef.current.setSelectionRange(length, length);\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        //     else{\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    const handleAddMedicalBook = async () => {\r\n        if(checkValidate()){\r\n            setOpenAlertProcessing(true);\r\n    \r\n                if(mainDataExaminingForConclusion.categories.some(categoriesItem => categoriesItem.isPredecessor === true)){\r\n                    const categoryPres = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isPredecessor === true)\r\n                    const dataPredecessor = { patientId: mainDataExaminingForConclusion.patientId, categoryPres: categoryPres }\r\n                    await createAddPredecessor(dataPredecessor);\r\n                }\r\n\r\n                const categoriesHealthRecordExamining = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isHealthRecord === true)\r\n                mainDataExaminingForConclusion.categories = categoriesHealthRecordExamining\r\n                const responseAddMedicalBook = await createAddMedicalBook(mainDataExaminingForConclusion);\r\n                if(responseAddMedicalBook.status === 200){\r\n                    toast.success(responseAddMedicalBook.data, {toastId: 'success3'});\r\n                    props.handleCompleteExaminingForPantient();\r\n                    setMainDataExaminingForConclusion();\r\n                    props.setOpenModalCompleteExamining(false);\r\n                }\r\n                else{\r\n                    toast.error(responseAddMedicalBook.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            setOpenAlertProcessing(false);\r\n    }\r\n\r\n    const checkValidate = () => {\r\n        let isValid = true;\r\n        if(mainDataExaminingForConclusion.conclusion === null){\r\n            textareaRef.current.focus();\r\n            toast.error('Bạn chưa nhập kết luận khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === 'Invalid date'){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Ngày tái khám không hợp lệ', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === ''){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Bạn chưa chọn ngày tái khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalCompleteExamining){\r\n            handleSetDataCompleteExamining();\r\n        }\r\n    }, [props.openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalCompleteExamining} onClose={(event, reason) => handleCloseModalCompleteExamining(event, reason)} disableEscapeKeyDown={true}>\r\n                <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Tóm tắt quá trình khám</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalCompleteExamining()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='large'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                    <Box sx={{pl: 6, pr: 6}}>\r\n                        <List sx={{p: 0}}>\r\n                            <Box>\r\n                                {mainDataExaminingForConclusion ? \r\n                                    mainDataExaminingForConclusion.categories.length !== 0 ? \r\n                                        <div className='category-complete-examining'>\r\n                                            {mainDataExaminingForConclusion.categories.map((categoriesItem, categoriesIndex) => (\r\n                                                <div key={`categoriesItem ${categoriesIndex}`}>\r\n                                                    <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                        {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                            <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                                \r\n                                                                {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                    <div key={`questionItem ${questionIndex}`}>\r\n                                                                        <Grid container rowSpacing={0}>\r\n                                                                            {questionIndex === 0 ?\r\n                                                                                <>\r\n                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                    </Grid> \r\n\r\n                                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                        <>\r\n                                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                            </Grid>\r\n                                                                        \r\n                                                                                            <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                        </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    }   \r\n                                                                                </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n                                                                \r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                                classes={{ root: classes.root }}\r\n                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                            />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={5.5} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                :   \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={8} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                }                                                                                                                                                                          \r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    :\r\n                                        <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                :\r\n                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                }\r\n                            </Box>\r\n                        </List>\r\n                    </Box>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{borderTop: '1px solid black'}}>\r\n                    {mainDataExaminingForConclusion ? \r\n                        <div style={{width: '100%', padding: '8px 50px 8px 50px'}}>\r\n                            <TextareaAutosize key={`pantientId ${mainDataExaminingForConclusion.patientId}`} placeholder='Kết luận của bác sĩ' style={{width: '100%', padding: '15px', fontSize: '17px'}} onChange={(e) => onChangeExaminingConclusion(e.target.value)} ref={textareaRef} defaultValue={mainDataExaminingForConclusion.conclusion} /> \r\n                            \r\n                                {mainDataExaminingForConclusion.isVaccination ? \r\n                                    <>\r\n                                        <Box sx={{mb: 0.4}}>\r\n                                            {mainDataExaminingForConclusion.vaccination === '' || mainDataExaminingForConclusion.vaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.vaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.nextVaccination === '' || mainDataExaminingForConclusion.nextVaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.nextVaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.reminder === '' ||  mainDataExaminingForConclusion.reminder === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.reminder}`}</Typography>\r\n                                                </>\r\n                                            }\r\n                                        </Box>\r\n                                            \r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n\r\n                                {mainDataExaminingForConclusion.appointmentDate ? \r\n                                <>\r\n                                    <Box sx={{display: 'flex', justifyContent: 'center', mb: 2}}>\r\n                                        <Typography variant='h6' sx={{mt: 'auto', mb: 'auto', mr: 2}}>Kỳ khám tiếp theo: <span style={{fontWeight: 'bolder', color: '#ff1744'}}>{mainDataExaminingForConclusion.nextExamName}</span></Typography>\r\n                                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                            <DemoContainer components={['DatePicker']}>  \r\n                                                <DatePicker label=\"Ngày khám dự kiến\" disablePast\r\n                                                    format='DD/MM/YYYY' defaultValue={moment(mainDataExaminingForConclusion.appointmentDate)}\r\n                                                    onChange={(value) => onChangeAppointmentDate(value)}\r\n                                                    slotProps={{ \r\n                                                        textField: { inputRef: dateFieldRef, }\r\n                                                    }}\r\n                                                />\r\n                                            </DemoContainer>\r\n                                        </LocalizationProvider>\r\n                                    </Box>\r\n                                </>\r\n                                :\r\n                                    null\r\n                                }\r\n                        \r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <Stack spacing={1} direction=\"row\">\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' onClick={() => handleAddMedicalBook()}>Lưu</Button>\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' color={'error'} onClick={() => handleCloseModalCompleteExamining()}>Đóng</Button>\r\n                                </Stack>\r\n                            </div>\r\n                        </div>   \r\n                    :\r\n                        null            \r\n                    }             \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//scss\r\nimport './SCSS/PreviewLastExamining.scss'; \r\n//api\r\nimport { getMedicalBook } from '../../Service/MedicalService';\r\n//moment\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi'; \r\nmoment.locale('vi');\r\n\r\nfunction PreviewLastExamining(props) {\r\n    const previewDataExaminingDefault = {\r\n        categoryPres: [],\r\n        healthRecords: { examinationName: '', timeUpdateState: '', conclusion: '', medicakBook: [] },\r\n        nutritionals: [],\r\n        vaccinationBook: [] \r\n    }\r\n\r\n    const [previewDataExamining, setPreviewDataExamining] = useState(previewDataExaminingDefault);\r\n    // const [fullDataPredecessor, setFullDataPredecessor] = useState();\r\n    // const [fullDataHealthRecord, setFullDataHealthRecord] = useState();\r\n    \r\n    const [loadingMedicalBook, setLoadingMedicalBook] = useState(false);\r\n\r\n    const [openCollapsePredecessorItem, setOpenCollapsePredecessorItem] = useState([]);\r\n    const [openCollapseMedicakBookItem, setOpenCollapseMedicakBookItem] = useState([]);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpenPredecessorItem = (predecessorIndex) => {\r\n        setOpenCollapsePredecessorItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[predecessorIndex] = !newOpen[predecessorIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleOpenMedicakBookItem = (medicakBookIndex) => {\r\n        setOpenCollapseMedicakBookItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[medicakBookIndex] = !newOpen[medicakBookIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    // const handeOnChangePagePredecessor = (e, page, indexPredecessor) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].categoryContents = fullDataPredecessor[indexPredecessor].categoryContents[page - 1];\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    // const handeOnChangePageHealthRecords = (e, page, indexMedicakbook) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].categoryContents = fullDataHealthRecord[indexMedicakbook].categoryContents[page - 1];\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    const handleEditPrevDataExamining = async () => {\r\n        setLoadingMedicalBook(true);\r\n        const responseMedicalBook = await getMedicalBook(props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0].medicalRegisterId);\r\n        if(props.prevDataExamining.newPredecessor){\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n             \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: [],\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n\r\n        else{\r\n            if(props.prevDataExamining.categoryPres.length > 1){\r\n                props.prevDataExamining.categoryPres = props.prevDataExamining.categoryPres.sort((a, b) => a.categoryOrder - b.categoryOrder);\r\n            }\r\n\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n            \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: props.prevDataExamining.categoryPres,\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n        setLoadingMedicalBook(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.prevDataExamining){\r\n            handleEditPrevDataExamining();\r\n        }\r\n    }, [props.prevDataExamining])\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{height: '100%', position: 'relative'}}>\r\n                {loadingMedicalBook ? \r\n                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                        <CircularProgress />\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh gần nhất, hãy chờ một chút...</Typography>\r\n                    </Box>\r\n                :\r\n                    <>\r\n                        <div className='preview-last-examining-contents' >\r\n\r\n                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem'}}>\r\n                                Thông tin tóm tắt <span style={{color: 'red'}}>{previewDataExamining.healthRecords.examinationName}</span>\r\n                            </Typography>\r\n\r\n                            <List sx={{p: 0}}>\r\n                                {previewDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                    <div key={`predecessorItem ${predecessorIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenPredecessorItem(predecessorIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapsePredecessorItem[predecessorIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapsePredecessorItem[predecessorIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {predecessorItem.categoryContents.map((predecessorItemCategoryContentsItem, predecessorItemCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`predecessorItemCategoryContentsIndex ${predecessorItemCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: predecessorItemCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{predecessorItemCategoryContentsItem.categoryContentTitle}</Typography>\r\n                                                    \r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {predecessorItemCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{predecessorItemCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={6.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                                    \r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={6.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))} \r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                {previewDataExamining.healthRecords.medicakBook.map((medicakBookItems, medicakBookIndex) => (\r\n                                    <div key={`medicakBookItems ${medicakBookIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenMedicakBookItem(medicakBookIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseMedicakBookItem[medicakBookIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={medicakBookItems.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapseMedicakBookItem[medicakBookIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {medicakBookItems.categoryContents.map((medicakBookCategoryContentsItem, medicakBookCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`medicakBookCategoryContentsIndex ${medicakBookCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: medicakBookCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{medicakBookCategoryContentsItem.categoryContentTitle}</Typography>\r\n\r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {medicakBookCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{medicakBookCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={5.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))}\r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}             \r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n                            </List>\r\n\r\n                            <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận: ${previewDataExamining.healthRecords.conclusion}`}</Typography>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='time-examining' style={{marginLeft: '16px', marginTop: '4px', width: '99%'}}>\r\n                            <Typography variant='subtitle1' sx={{color: '#009688', fontWeight: 'bolder', fontSize: '1.08rem'}}>{`${previewDataExamining.healthRecords.doctorFullName}, ${moment(previewDataExamining.healthRecords.timeUpdateState).format('LLLL')}`}</Typography>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Box>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default PreviewLastExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//lodash\r\nimport _, { constant } from \"lodash\";\r\n//modal\r\nimport CompleteExamining from '../ManageCompleteExamining/CompleteExamining';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//components\r\nimport PreviewLastExamining from './PreviewLastExamining';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { GiWeightScale } from \"react-icons/gi\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport { TbRulerMeasure } from \"react-icons/tb\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport BeenhereIcon from '@mui/icons-material/Beenhere';\r\nimport VaccinesIcon from '@mui/icons-material/Vaccines';\r\n//moment\r\nimport moment from 'moment';\r\n//scss\r\nimport './SCSS/DoctorExamining.scss';\r\n//real-time\r\nimport {startSignalRConnection, stopSignalRConnection, removeFromGroup} from '../../Service/SignalService';\r\n//api\r\nimport { \r\n    createAddPredecessor,\r\n    getMedicalDetailPatient,\r\n    getRegistersByDateNow, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook,\r\n    updateMedicalState,\r\n    deleteMedicalBook\r\n} from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainDoctorExamining() {\r\n    const dataPantientsReadyExaminingDefault = {\r\n        stt: '',\r\n        id: '',\r\n        patientsId: '',\r\n        patientsName: '',\r\n        patientsDOB: '',\r\n        patientsMonthsOld: '',\r\n        patientsGender: '',\r\n        patientsHeight: '',\r\n        patientsWeight: '',\r\n        patientsHeadCircumference: '',\r\n        patientsPhone: '',\r\n        patientsAddress: ''\r\n    }\r\n\r\n    const { user, loading, alertVisible, confirmAlert, resetAlert, isLogOutClick } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isFormDirty, setIsFormDirty] = useState(false);\r\n\r\n    //state thông tin bệnh nhân ban đầu \r\n    const [dataPantientsReadyExamining, setDataPantientsReadyExamining] = useState(dataPantientsReadyExaminingDefault);\r\n\r\n    //state các category gồm tiêu đề nội dung khám và câu hỏi khám ban đầu\r\n    const [mainDataExamining, setMainDataExamining] = useState([]);\r\n\r\n    //state lưu tạm data các kỳ khám \r\n    const [prevDataExamining, setPrevDataExamining] = useState();\r\n\r\n    //state đóng mở cây thư mục khám của sổ khám bệnh\r\n    const [openCollapseHealthRecords, setOpenCollapseHealthRecords] = useState(false);\r\n\r\n    //state đóng mở chi tiết nội dung của sổ khám bệnh\r\n    const [openCollapseHealthRecordsItem, setOpenCollapseHealthRecordsItem] = useState([]);\r\n\r\n    //state chọn danh mục khám ban đầu\r\n    const [categorySelectedExamining, setCategorySelectedExamining] = useState({});\r\n\r\n    //state chọn danh mục bao gồm nội dung bên trong ban đầu\r\n    const [contentCategorySelectedExamining, setContentCategorySelectedExamining] = useState([]);\r\n\r\n    //state lưu tạm nội dung chi tiết của sổ khám bệnh\r\n    const [healthRecordsContents, setHealthRecordsContents] = useState([]);\r\n    const [currentHealthRecordExamining, setCurrentHealthRecordExamining] = useState();\r\n\r\n    //tiền căn show ở thông tin bệnh nhân\r\n    const [previewPredecessor, setPreviewPredecessor] = useState();\r\n\r\n    //state các câu hỏi được bác sĩ khám tích hoặc gõ vào\r\n    const [dataExaminingForConclusion , setDataExaminingForConclusion ] = useState({});\r\n\r\n    //state lưu tạm các data tiền căn của getUpdatePredecessor (bao gồm những data tiền căn đã chọn và chưa chọn)\r\n    const [oldDataPredecessor, setOldDataPredecessor] = useState();\r\n\r\n    //dùng khi tái khám hoặc mở khám lại cho bệnh nhân có tiền căn đã đụng\r\n    const [newDataPredecessor, setNewDataPredecessor] = useState();\r\n\r\n    //state lưu data tiền căn cũ (những data tiền căn đã chọn)  \r\n    const [prevDataPredecessor, setPrevDataPredecessor] = useState();\r\n\r\n    //state quản lý modal kết thúc khám\r\n    const [openModalCompleteExamining, setOpenModalCompleteExamining] = useState(false);\r\n\r\n    const [loadingPrevDataExamining, setLoadingPrevDataExamining] = useState(false);\r\n    const [loadingPatient, setLoadingPatient] = useState(true);\r\n    const [loadingInfoPatient, setLoadingInfoPatient] = useState(true);\r\n    const [loadingCategoryExamining, setLoadingCategoryExamining] = useState(false);\r\n    const [loadingContentsExamining, setLoadingContentsExamining] = useState(false);\r\n\r\n    const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n  \r\n    const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n    const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n    const [listPantientChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n            { chipLabel: 'BN đã khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n          const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n            setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n            setListDataPatientsRegisterState(listPantientRegisterDone);\r\n        }\r\n    };\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n        }else{\r\n          setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n        }\r\n      }\r\n    \r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const handleCompleteExaminingForPantient = () => {\r\n        setLoadingPatient(true);\r\n        toast.success(`Đã kết thúc khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setCurrentHealthRecordExamining();\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        setPreviewPredecessor();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleCancelExamining = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingCategoryExamining(true);\r\n        setLoadingContentsExamining(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, [dataPantientsReadyExamining.editExamining === true ? 2 : 0 || dataPantientsReadyExamining.backRegister === true ? 3 : 0]);\r\n        if(response.status === 200){\r\n            toast.success(`Đã hủy khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success2'});    \r\n            setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n            setMainDataExamining([]);\r\n            setOpenCollapseHealthRecords(false);\r\n            setOpenCollapseHealthRecordsItem([]);\r\n            setCategorySelectedExamining({});\r\n            setContentCategorySelectedExamining([]);\r\n            setHealthRecordsContents([]);\r\n            setCurrentHealthRecordExamining();\r\n            setDataExaminingForConclusion({});\r\n            setPrevDataPredecessor();\r\n            setCurrentHealthRecordExamining();\r\n            setOldDataPredecessor();\r\n            setPreviewPredecessor();\r\n            handleGetRegistersByDateNow();\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    const handleDeleteExamining = async () => {\r\n        const confirmLeave = window.confirm(\r\n            'Chức năng này sẽ xóa tất cả dữ liệu của kỳ khám hiện tại và đặt bệnh nhân về trạng thái chưa khám. Bạn có muốn xóa không?'\r\n        );\r\n        if (confirmLeave) {\r\n            setLoadingPatient(true);\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const responseDeleteMedicalBook = await deleteMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n            if(responseDeleteMedicalBook.status === 200){\r\n                toast.success(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingSuccess'});\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    await updateMedicalState(dataPantientsReadyExamining.id, 3);\r\n                }\r\n                setPrevDataExamining();\r\n                if(previewPredecessor && previewPredecessor.length !== 0){\r\n                    setPreviewPredecessor();\r\n                }\r\n                setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n                setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n                handleGetRegistersByDateNow();\r\n            }\r\n            else{\r\n                toast.error(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingError'});\r\n            }\r\n            setOpenAlertProcessingBackdrop(false);\r\n        } else {\r\n            return false; // Ngăn điều hướng\r\n        }\r\n    }\r\n\r\n    const handleStartExaminingButtonClick = () => {\r\n        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n            handleBeginExaminingForPantient();\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 1){\r\n            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n            handleBeginEditExaminingForPantient();\r\n        }\r\n    }\r\n\r\n    const handleCompleteExaminingButtonClick = () => {\r\n        setOpenAlertProcessingBackdrop(true)\r\n        if(dataPantientsReadyExamining.status === 1){\r\n            setTimeout(() => {\r\n            setOpenAlertProcessingBackdrop(false)\r\n                setOpenModalCompleteExamining(true);\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    //hàm này dùng khi user đang khám mà bị ngáo lỡ nhấn f5\r\n    const handleReloadUIWhenExamining = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        const reDataPatientsRegisterSort = JSON.parse(sessionStorage.dataPatientsRegisterSort)\r\n        const reDataPantientsReadyExamining = JSON.parse(sessionStorage.dataPantientsReadyExamining);\r\n        const reMainDataExamining = JSON.parse(sessionStorage.mainDataExamining);\r\n        const reDataExaminingForConclusion = JSON.parse(sessionStorage.dataExaminingForConclusion);\r\n\r\n        setListDataPatientsRegisterSort(reDataPatientsRegisterSort);\r\n        \r\n        reDataPantientsReadyExamining.isContinueExam = true;\r\n        \r\n        setDataPantientsReadyExamining(_.cloneDeep(reDataPantientsReadyExamining));\r\n        setMainDataExamining(_.cloneDeep(reMainDataExamining));\r\n        setDataExaminingForConclusion(_.cloneDeep(reDataExaminingForConclusion));\r\n\r\n        if(sessionStorage.currentHealthRecordExamining){\r\n            const reCurrentHealthRecordExamining = JSON.parse(sessionStorage.currentHealthRecordExamining);\r\n            setHealthRecordsContents(_.cloneDeep(reCurrentHealthRecordExamining));\r\n            setCurrentHealthRecordExamining(_.cloneDeep(reCurrentHealthRecordExamining));\r\n        }\r\n\r\n        if(sessionStorage.prevDataPredecessor){\r\n            const rePrevDataPredecessor = JSON.parse(sessionStorage.prevDataPredecessor);\r\n            setPrevDataPredecessor(_.cloneDeep(rePrevDataPredecessor));\r\n        }\r\n\r\n        if(sessionStorage.oldDataPredecessor){\r\n            const reOldDataPredecessor = JSON.parse(sessionStorage.oldDataPredecessor);\r\n            setOldDataPredecessor(_.cloneDeep(reOldDataPredecessor));\r\n        }\r\n        \r\n        setNewDataPredecessor({\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            categoryPres: []\r\n        })\r\n        \r\n        sessionStorage.clear();\r\n\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //lấy danh sách đăng ký khám trong ngày\r\n    const handleGetRegistersByDateNow = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1 * 1000));\r\n        const response = await getRegistersByDateNow();\r\n        if(response !== 400){\r\n            const findListPantientNotExam = response.list.filter(item => item.state !== 1)\r\n            setListDataPatientsRegister(findListPantientNotExam);\r\n\r\n            let listPantientRegisterWaiting = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n            let listPantientRegisterDone = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n\r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const updatedList = [\r\n                { chipLabel: 'BN chờ khám', chipContent: listPantientRegisterWaiting.length },\r\n                { chipLabel: 'BN đã khám', chipContent: listPantientRegisterDone.length }\r\n            ]\r\n            setListPantientChipState(updatedList);\r\n        }\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n    }\r\n\r\n    const handleAppyPantientData = async (dataPantientItem) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingPrevDataExamining(true);\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            setPreviewPredecessor();\r\n        }\r\n        await handleGetMedicalDetailPatient(dataPantientItem.id);\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.stt = dataPantientItem.order;\r\n        _dataPantientsReadyExamining.id = dataPantientItem.id;\r\n        _dataPantientsReadyExamining.status = 0;\r\n        _dataPantientsReadyExamining.patientsId = dataPantientItem.patient.patientId;\r\n        _dataPantientsReadyExamining.patientsName = dataPantientItem.patient.fullName;\r\n        _dataPantientsReadyExamining.patientsDOB = dataPantientItem.patient.dayOfBirth;\r\n        _dataPantientsReadyExamining.patientsMonthsOld = dataPantientItem.patient.monthsOfAge;\r\n        _dataPantientsReadyExamining.patientsGender = dataPantientItem.patient.gender;\r\n        _dataPantientsReadyExamining.patientsHeight = dataPantientItem.height;\r\n        _dataPantientsReadyExamining.patientsWeight = dataPantientItem.weight;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsPhone = dataPantientItem.patient.phoneMother ? dataPantientItem.patient.phoneMother : dataPantientItem.patient.phoneFather;\r\n        _dataPantientsReadyExamining.patientsAddress = dataPantientItem.patient.fullAddress;\r\n        _dataPantientsReadyExamining.vaccination = dataPantientItem.vaccination === true ? true : false;\r\n        _dataPantientsReadyExamining.editExamining = dataPantientItem.state === 2 ? true : false;\r\n        _dataPantientsReadyExamining.backRegister = dataPantientItem.state === 3 ? true : false;\r\n        _dataPantientsReadyExamining.isContinueExam = false;\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n        setLoadingInfoPatient(false);\r\n        setLoadingPrevDataExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //nhấn chọn bệnh nhân để load vào ô thông tin bn\r\n    const handleSelectPantientExamining = async (dataPantientItem) => {\r\n        if(dataPantientItem.state === 0 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName || dataPantientItem.state === 3 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId === '' || dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 0){\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n            else{\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n        }\r\n        \r\n        else if(dataPantientItem.state === 2 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 1){\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n            else{\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    //bắt đầu khám bệnh cho bệnh nhân\r\n    const handleBeginExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            if(prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                    //backup prevDataPredecessor để khi cần dùng\r\n                    setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n                }\r\n\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleSetMainDataExamining();\r\n                toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n            }\r\n            else{\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleGetCategoryReExamining();\r\n            }\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error(response.data, {toastId: 'error1'});\r\n        }\r\n        setLoadingPatient(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu khám cho bệnh nhân khám mới\r\n    const handleSetMainDataExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        prevDataExamining.healthRecords.forEach((healthRecordsItem) => {\r\n            if(healthRecordsItem.medicalBookId === null){\r\n                healthRecordsItem.state = 1\r\n            }\r\n        })\r\n        \r\n        //tái khám và có tiền căn đã đụng\r\n        if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === false){\r\n            const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //tái khám và có tiền căn chưa đụng\r\n        else if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === true){\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n\r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //khám mới hoàn toàn\r\n        else{\r\n            const editDataCategoryPresForConclusion = prevDataExamining.categoryPres.map((predecessorItem) => {\r\n                const mainCategoryContentsExamining = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentOrder: categoryContentsItem.categoryContentOrder,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n    \r\n                const mainCategoryExamining = {\r\n                    categoryName: predecessorItem.categoryName,\r\n                    isPredecessor: true,\r\n                    categoryOrder: predecessorItem.categoryOrder,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n    \r\n                return mainCategoryExamining\r\n            })\r\n    \r\n            const editDataHealthRecordsForConclusion = prevDataExamining.healthRecords.find((healthRecordsItem) => healthRecordsItem.patientId === dataPantientsReadyExamining.patientsId)\r\n    \r\n            setDataExaminingForConclusion({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n                conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n                categories: editDataCategoryPresForConclusion,\r\n            });\r\n    \r\n            prevDataExamining.categoryPres.forEach((categoryPresItem, categoryPresIndex) => {\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.map((categoryContentsItem) => {\r\n                    return {\r\n                        ...categoryContentsItem,\r\n                        categoryPresOrder: categoryPresIndex\r\n                    }\r\n                })\r\n                return {\r\n                    ...categoryPresItem,\r\n                }\r\n            })\r\n            \r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //bắt đầu sửa dữ liệu khám bệnh\r\n    const handleBeginEditExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n            const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n            _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n            setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n            const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            await handleGetCategoryReExamining();\r\n            setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n            setLoadingPatient(false);\r\n        }\r\n    }\r\n\r\n    //lấy dữ liệu cây thư mục khám lại\r\n    const handleGetCategoryReExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        const responseGetUpdateMedicalBook = await getUpdateMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n\r\n        if(responseGetUpdateMedicalBook.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n\r\n            if(prevDataExamining.newPredecessor === false){\r\n                setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                //backup prevDataPredecessor để khi cần dùng\r\n                setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n            }\r\n            \r\n            await handleSetMainDataReExamining(responseGetUpdateMedicalBook.data);\r\n            toast.success(`Đang mở khám lại cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        }\r\n        else if(responseGetUpdateMedicalBook.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu cây thư mục khám của chức năng mở khám lại\r\n    const handleSetMainDataReExamining = async (responseGetUpdateMedicalBookData) => {\r\n        prevDataExamining.healthRecords[0].state = 1\r\n        prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBookData.categories\r\n\r\n        const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n            categoryName: category.categoryName,\r\n            isHealthRecord: true,\r\n            categoryContents: category.categoryContents.map(content => ({\r\n              ...content,\r\n              categoryContentQuestions: []\r\n            })) \r\n        }))\r\n\r\n        //demo truớc data kết luận\r\n        const demoDataExaminingForConclusion = {\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            isVaccination: prevDataExamining.vaccination,\r\n            medicalRegisterId: dataPantientsReadyExamining.id !== prevDataExamining.healthRecords[0].medicalRegisterId ? dataPantientsReadyExamining.id : prevDataExamining.healthRecords[0].medicalRegisterId,\r\n            conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n            categories: updateHealthRecordsCategoriesForConclusion\r\n        }\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        //sửa categories của conclusion phần sổ khám bệnh\r\n        let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.healthRecords[0].categories);\r\n\r\n        updateCategoriesForConclusion = updateCategoriesForConclusion.map(category => {\r\n            category.categoryContents = category.categoryContents.map(content => {\r\n                const questions = content.categoryContentQuestions;\r\n    \r\n                // Check if all questions have both categoryContentAnswer and categoryContentNote as null\r\n                const allNull = questions.every(q => q.categoryContentAnswer === null && q.categoryContentNote === null);\r\n                    \r\n                if (allNull) {\r\n                  // Set categoryContentQuestions to an empty array\r\n                  content.categoryContentQuestions = [];                    \r\n                } else {\r\n                  // Filter out questions with both categoryContentAnswer and categoryContentNote as null\r\n                  content.categoryContentQuestions = questions.filter(q => q.categoryContentAnswer !== null || q.categoryContentNote !== null);\r\n                }\r\n                    \r\n                return content;\r\n            });\r\n                  \r\n            category.isHealthRecord = true\r\n            return category;\r\n        })\r\n\r\n        demoDataExaminingForConclusion.categories = updateCategoriesForConclusion\r\n\r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        //tiền căn đợt trước đã đụng (newPredecessor = false)\r\n        if(responseGetUpdatePredecessor.status === 200)\r\n        {   \r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        \r\n        //tiền căn đợt trước chưa đụng (newPredecessor = true) \r\n        else{\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n        \r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n    }\r\n\r\n    //sửa dữ liệu tiền căn cho mở khám lại hoặc tái khám\r\n    const handleEditDataPredecessor = async (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        \r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        const findUpdatePredecessor = responseGetUpdatePredecessor.data.find(responseGetUpdatePredecessorItem => responseGetUpdatePredecessorItem.categoryOrder === categoryOrder);\r\n\r\n        mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n            if(categoryPresItem.categoryOrder === findUpdatePredecessor.categoryOrder){\r\n                categoryPresItem.categoryContents = findUpdatePredecessor.categoryContents\r\n                categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                    categoryContentsItem.isLock = false\r\n                })\r\n                categoryPresItem.isLock = false\r\n            }\r\n        })\r\n\r\n        const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n        \r\n        if(!newDataPredecessor.categoryPres.some(categoryPresItem => categoryPresItem.categoryName === categoryName)){\r\n            newDataPredecessor.categoryPres = prevDataPredecessor\r\n        }\r\n\r\n        handleSelectCategoryClick(selectCategoryReExamining);\r\n\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //huỷ không sửa dữ liệu tiền căn nữa\r\n    const handleCancelEditDataPredecessor = (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        setTimeout(() => {\r\n            const findPrevDataPredecessorByCategoryName = oldDataPredecessor.find(prevDataPredecessorItem => prevDataPredecessorItem.categoryOrder === categoryOrder);\r\n\r\n            if(findPrevDataPredecessorByCategoryName){\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        categoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                        categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                            categoryContentsItem.isLock = true\r\n                        })\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                newDataPredecessor.categoryPres.forEach((newDataPredecessorCategoryPresItem) => {\r\n                    if(newDataPredecessorCategoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        newDataPredecessorCategoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === categoryOrder){\r\n                        categoryPresItem.categoryContents = [];\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                const _newDataPredecessor = {...newDataPredecessor};\r\n                const removeCategoryPredecessor = _newDataPredecessor.categoryPres.filter(categoryPresItem => categoryPresItem.categoryOrder !== categoryOrder);\r\n                newDataPredecessor.categoryPres = removeCategoryPredecessor\r\n            }\r\n\r\n            setPrevDataPredecessor(_.cloneDeep(oldDataPredecessor));\r\n\r\n            const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n            handleSelectCategoryClick(selectCategoryReExamining)\r\n   \r\n            setOpenAlertProcessingBackdrop(false);\r\n        }, 300)       \r\n    }\r\n\r\n    //tạo data tiền căn để lưu lại khi tái khám hoặc mở khám lại\r\n    //câu trả lời dạng check chọn true false\r\n    const handleAnswerCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n    }\r\n\r\n    //câu trả lời dạng check chọn sửa lại note\r\n    const handleNoteCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n        const isEditNote = true;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], takenValue, isEditNote)\r\n        }, 300)\r\n    }\r\n\r\n    //câu trả lời dạng giá trị, sửa lại note\r\n    const handleNoteValueQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsValuePredecessorForReExamOrBackExam(\r\n                categoryContentsIndex,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, \r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], \r\n                takenValue\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const createSelectedQuestionsValuePredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue) => {\r\n        const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n        if(findNewDataPredecessorCategoryOrder){\r\n            // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n            const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n            if(findNewDataPredecessorCategoryContents){\r\n                // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue !== '');\r\n                const questionIndexRemove = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue === '');\r\n\r\n                if(questionIndex !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value khác rỗng => gán note cũ bằng note mới\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n                }\r\n\r\n                else if(questionIndexRemove !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value bằng rỗng => bỏ note đó\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexRemove, 1);\r\n                }\r\n\r\n                else{\r\n                    //nếu không tìm thấy, đẩy note mới vào\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                }\r\n            }\r\n\r\n            else{\r\n                // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                const newDataPredecessorCategoryContents = {\r\n                    categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                    categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                    categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                    categoryContentQuestions: [categoryContentQuestion],\r\n                    categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                    categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                }\r\n                findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n            }\r\n        }\r\n\r\n        else{\r\n            // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n            const newDataPredecessorCategoryContents = {\r\n                categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                categoryContentQuestions: [categoryContentQuestion],\r\n                categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n            }\r\n\r\n            const newDataPredecessorCategoryPres = {\r\n                categoryOrder: categorySelectedExamining.categoryOrder,\r\n                categoryName: categorySelectedExamining.categoryName,\r\n                newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                categoryContents: [newDataPredecessorCategoryContents]\r\n            }\r\n\r\n            newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n        }         \r\n    }\r\n\r\n    const createSelectedQuestionsPredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue, isEditNote) => {\r\n        if(isEditNote){\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){       \r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng rỗng\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n         \r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                        else{\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndex, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else{\r\n            //câu hỏi là dạng check câu trả lời là true\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote !== '');\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n                        }\r\n                        else{\r\n                            // Nếu tìm thấy categoryContentOrder, thêm câu hỏi mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }       \r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents)\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check câu trả lời là false\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndexNoteDontExit = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote === null);\r\n                        if(questionIndexNoteDontExit !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexNoteDontExit, 1);\r\n                        }\r\n                        else{\r\n                            const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n    }\r\n\r\n    //lưu dữ liệu tiền căn khi sửa xong\r\n    const handleEditDataPredecessorForSaving = (categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setTimeout(() => {\r\n            const findNewDataPredecessor = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPres => newDataPredecessorCategoryPres.categoryOrder === categoryOrder)\r\n\r\n            const findOldDataPredecessorCategoryOrder = oldDataPredecessor.find(oldDataPredecessorItem => oldDataPredecessorItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n\r\n            if(findOldDataPredecessorCategoryOrder){\r\n                // Nếu tìm thấy categoryOrder, duyệt qua categoryContents của findNewDataPredecessor\r\n                findNewDataPredecessor.categoryContents.forEach(findNewDataPredecessorCategoryContentsItem => {\r\n\r\n                    let content = findOldDataPredecessorCategoryOrder.categoryContents.find(findOldDataPredecessorCategoryContentsItem => findOldDataPredecessorCategoryContentsItem.categoryContentOrder === findNewDataPredecessorCategoryContentsItem.categoryContentOrder);\r\n\r\n                    if(content){\r\n                        // Loại bỏ các categoryContentQuestions trong content nếu không tồn tại trong findNewDataPredecessorCategoryContentsItem\r\n                        content.categoryContentQuestions = content.categoryContentQuestions.filter(q =>\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.some(newQ => newQ.categoryContentQuestionOrder === q.categoryContentQuestionOrder)\r\n                        );\r\n\r\n                        // Nếu tìm thấy categoryContentOrder, duyệt qua categoryContentQuestions\r\n                        if(findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.length !== 0){\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.forEach(findNewDataPredecessorQuestionItem => {\r\n                                if(findNewDataPredecessorQuestionItem.categoryContentAnswer === null && findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'check'){\r\n                                    // Nếu categoryContentAnswer là false và categoryContentNote là null, loại bỏ question đó\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else if(findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'string'){\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else{\r\n                                    const questionIndex = content.categoryContentQuestions.findIndex(q => q.categoryContentQuestionOrder === findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n\r\n                                    if (questionIndex !== -1) {\r\n                                        // Thay thế question nếu trùng khớp\r\n                                        content.categoryContentQuestions[questionIndex] = findNewDataPredecessorQuestionItem;\r\n                                    }\r\n\r\n                                    else {\r\n                                        // Thêm question mới nếu không trùng khớp\r\n                                        content.categoryContentQuestions.push(findNewDataPredecessorQuestionItem);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        }else{\r\n                            findOldDataPredecessorCategoryOrder.categoryContents = findOldDataPredecessorCategoryOrder.categoryContents.filter(contentCategoryContentsItem => contentCategoryContentsItem.categoryContentOrder !== findNewDataPredecessorCategoryContentsItem.categoryContentOrder)\r\n                        }\r\n                        \r\n                    }else{\r\n                        findOldDataPredecessorCategoryOrder.categoryContents.push(findNewDataPredecessorCategoryContentsItem);\r\n                    }\r\n\r\n                })\r\n            }else{\r\n                // Thêm toàn bộ object2 nếu không tìm thấy findNewDataPredecessor\r\n                oldDataPredecessor.push(findNewDataPredecessor)\r\n            }\r\n\r\n            oldDataPredecessor.forEach((oldDataPredecessorItem) => {\r\n                oldDataPredecessorItem.categoryContents = oldDataPredecessorItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length !== 0)\r\n            }) \r\n\r\n            const removeOldDataPredecessorCategoryPres = oldDataPredecessor.findIndex(item => item.categoryContents.length === 0);\r\n            if(removeOldDataPredecessorCategoryPres !== -1){\r\n                oldDataPredecessor.splice(removeOldDataPredecessorCategoryPres, 1);\r\n            }\r\n\r\n            const saveNewDataPredecessor = {\r\n                patientId: newDataPredecessor.patientId,\r\n                categoryPres: oldDataPredecessor\r\n            }\r\n\r\n            handleSaveNewDataPredecessor(saveNewDataPredecessor, findNewDataPredecessor)            \r\n        }, 500)\r\n    }\r\n\r\n    const handleSaveNewDataPredecessor = async (saveNewDataPredecessor, findNewDataPredecessor) => {\r\n        const responseCreateAddPredecessor = await createAddPredecessor(saveNewDataPredecessor);\r\n        if(responseCreateAddPredecessor.status === 200){\r\n\r\n            const _mainDataExamining = {...mainDataExamining};\r\n\r\n            _mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                if(categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder){\r\n                    categoryPresItem.categoryContents = findNewDataPredecessor.categoryContents\r\n                    categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                        categoryContentsItem.isLock = true\r\n                    })\r\n                    if(findNewDataPredecessor.categoryContents.length === 0){\r\n                        categoryPresItem.newCategoryPre = true\r\n                    }else{\r\n                        categoryPresItem.newCategoryPre = false\r\n                    }\r\n                    categoryPresItem.isLock = true\r\n                }\r\n\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.filter(item => item.categoryContentQuestions.length !== 0);\r\n            })\r\n\r\n            setMainDataExamining(_mainDataExamining);\r\n\r\n            const selectCategoryReExamining = _mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n            \r\n            toast.success('Đã cập nhật lại tiền căn', {toastId: 'handleSaveNewDataPredecessorSuccess'});\r\n            \r\n            handleSelectCategoryClick(selectCategoryReExamining);\r\n        }\r\n        else{\r\n            toast.error(responseCreateAddPredecessor.data, {toastId: 'handleSaveNewDataPredecessorError'});\r\n        }\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //tìm danh mục khám gồm tiền căn, sổ sức khỏe, dinh dưỡng...\r\n    const handleGetMedicalDetailPatient = async (id) => {\r\n        const responseDataExamining = await getMedicalDetailPatient(id);\r\n        setPrevDataExamining(responseDataExamining);\r\n\r\n        if(responseDataExamining.newPredecessor === false){\r\n            const previewDataPredecessor = responseDataExamining.categoryPres.filter(item => item.newCategoryPre === false).flatMap(item => item.categoryContents).flatMap(content => content.categoryContentQuestions).filter(question => question.categoryContentAnswer === true || question.categoryContentNote !== null)\r\n            setPreviewPredecessor(previewDataPredecessor);     \r\n        }\r\n    }\r\n\r\n    //chọn mục lục để khám\r\n    const handleSelectCategoryClick = async (categoryIncludeCotent) => {\r\n        if(openCollapseHealthRecords === true){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }\r\n\r\n        if(contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length !== 0){\r\n            setContentCategorySelectedExamining([]);\r\n        }\r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                ...categoryIncludeCotent,\r\n                //contentQuantity: categoryIncludeCotent.categoryContents.length\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining([]);\r\n    }\r\n\r\n    //chọn cây thư mục khám sổ sức khỏe\r\n    const handleSelectHealthRecords = (healthRecords) => {\r\n        if(openCollapseHealthRecords === false){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }        \r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                categoryName: 'Sổ sức khỏe',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(\r\n            {\r\n                healthRecordsContentsType: 'tree',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n    }\r\n\r\n    //chọn chỉ định một sổ khám bệnh (tìm chi tiết một sổ khám bệnh)\r\n    const handleSelectHealthRecordsItem = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingContentsExamining(true);\r\n\r\n        //dùng cho tái khám (có tiền căn đã đụng), mở khám lại\r\n        if(currentHealthRecordExamining){\r\n            if(healthRecordsContents.healthRecordsName !== examinationName){\r\n                if(healthRecordsState === 2){\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n                else if(healthRecordsState === 1 && dataPantientsReadyExamining.editExamining || healthRecordsState === 1 && dataPantientsReadyExamining.backRegister){\r\n                    setHealthRecordsContents({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    })\r\n\r\n                    setCurrentHealthRecordExamining({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    });\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && dataPantientsReadyExamining.isContinueExam){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else{\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n            }\r\n        }\r\n        //dùng cho tái khám (tiền căn chưa đụng), khám mới hoàn toàn\r\n        else{\r\n            await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n        }\r\n\r\n        setLoadingContentsExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const findHealthRecord = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        const responseMedicalBook = await getMedicalBook(medicalRegisterId);\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        });\r\n\r\n        if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && mainDataExamining.healthRecords[0].medicalBookId === null){\r\n            const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n                \r\n                const mainCategoryExamining = {\r\n                    categoryName: categoriesItem.categoryName,\r\n                    isHealthRecord: true,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n\r\n                return mainCategoryExamining\r\n            })\r\n\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    //chọn loại mục khám của một sổ khám bệnh\r\n    const handleOpenHealthRecordsItem = (categoryPatientsIndex) => {\r\n        setOpenCollapseHealthRecordsItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryPatientsIndex] = !newOpen[categoryPatientsIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleAnswerCheckQuestion = (categoryContentsIndex, questionIndex, answer) => {\r\n        //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng check\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else{\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }   \r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const handleNoteCheckQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            )\r\n        }, 1000)\r\n    }\r\n\r\n    const handleAnswerValueQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const handleAnswerCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else if(answer === true){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else{\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n    }\r\n    \r\n    //trả lời câu hỏi của mục sổ khám bệnh\r\n    const handleNoteCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            );\r\n        }, 1000)\r\n    }\r\n\r\n    const createSelectedQuestionsExaminingForConclusion = (categoryName, isPredecessor, categoryContentQuestion, questionOrder, categoryContentTitle, isEditNote) => {\r\n        if(categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            if(isEditNote){\r\n                if(categoryContentQuestion.categoryContentNote !== ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n\r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n\r\n                else if(categoryContentQuestion.categoryContentNote === ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentAnswer === null || categoryContentQuestionsItem.categoryContentAnswer === false){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n            }\r\n            else{\r\n                //question dạng check nhưng answer là true\r\n                if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n    \r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n    \r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n    \r\n                //question dạng check nhưng answer là false\r\n                else if(categoryContentQuestion.categoryContentAnswer === false && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentNote === null || categoryContentQuestionsItem.categoryContentNote === ''){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion)\r\n                }\r\n            }\r\n        }\r\n\r\n        else{\r\n            //question dạng giá trị nhưng khác rỗng\r\n            if(categoryContentQuestion.categoryContentNote !== '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                // Duyệt qua từng categoriesItem trong categories\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                    // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                    const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                        question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                    );\r\n                    \r\n                                    if (existingQuestion) {\r\n                                        // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                        existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                    } else {\r\n                                        // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                        categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                    }\r\n\r\n                                } else {\r\n                                // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                    categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                }\r\n                            }\r\n                        });        \r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n            //question dạng giá trị nhưng là rỗng\r\n            else if(categoryContentQuestion.categoryContentNote === '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n        }\r\n\r\n        if(isPredecessor === true){\r\n            createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n        }\r\n            \r\n    }\r\n\r\n    const createPreviewDataPredecessor = (categoryContentQuestion, isEditNote) => {\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            let _previewPredecessor = [...previewPredecessor];\r\n\r\n            const findQuestion = _previewPredecessor.find(item => item.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n            if(findQuestion){\r\n                if(findQuestion.categoryContentQuestionType === 'string'){\r\n                    if(categoryContentQuestion.categoryContentNote === ''){\r\n                        _previewPredecessor = previewPredecessor.filter(item => item.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName);\r\n                    }\r\n                    else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                        const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                        if(existingQuestion){\r\n                            existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                        }\r\n                        else{\r\n                            _previewPredecessor.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                }\r\n                else if(findQuestion.categoryContentQuestionType === 'check'){\r\n                    if(isEditNote){\r\n                        if(categoryContentQuestion.categoryContentNote === ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName && question.categoryContentAnswer === true);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                if(categoryContentQuestion.categoryContentAnswer === null || categoryContentQuestion.categoryContentAnswer === false){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    else{\r\n                        if(categoryContentQuestion.categoryContentAnswer === false || categoryContentQuestion.categoryContentAnswer === null){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                if(existingQuestion.categoryContentNote === '' || existingQuestion.categoryContentNote === null){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                                else if(existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                    existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                }               \r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentAnswer === true){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion || existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                            }\r\n                            else{\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }        \r\n                    }\r\n                }\r\n            }\r\n\r\n            else{\r\n                _previewPredecessor.push(categoryContentQuestion);\r\n            }\r\n            setPreviewPredecessor(_previewPredecessor)\r\n        }\r\n\r\n        else{\r\n            setPreviewPredecessor([categoryContentQuestion])\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const reFetchListDataPatientsRegister = async () => {\r\n        if(dataPantientsReadyExamining.id === ''){\r\n            const response = await getRegistersByDateNow();\r\n            if(response.list.length !== listDataPatientsRegister.length){\r\n                handleGetRegistersByDateNow();\r\n            }\r\n        }\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // Khởi tạo kết nối SignalR khi component mount\r\n    //     const token = localStorage.getItem(\"jwt\");\r\n    //     startSignalRConnection(token);\r\n\r\n    //     return () => {\r\n    //         // Dừng kết nối SignalR khi component unmount\r\n    //         stopSignalRConnection();\r\n    //     };\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        // Đặt setInterval để gọi API sau 30 giây\r\n        const intervalId = setInterval(() => {\r\n            reFetchListDataPatientsRegister();\r\n        }, 30000); // 30000ms = 30 giây\r\n\r\n        // Cleanup interval khi component unmount để tránh memory leak\r\n        return () => clearInterval(intervalId);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(dataPantientsReadyExamining.status === 1 && alertVisible){\r\n                const userConfirmed = window.confirm(`Bạn đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, có chắc là muốn đăng xuất không?`);\r\n                if(userConfirmed){\r\n                    sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                    sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                    sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n\r\n                    if(currentHealthRecordExamining){\r\n                        sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                    }\r\n\r\n                    if(prevDataPredecessor){\r\n                        sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                    }\r\n\r\n                    if(oldDataPredecessor){\r\n                        sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                    }\r\n                    confirmAlert();\r\n                }\r\n                else{\r\n                    resetAlert();\r\n                }\r\n        }\r\n\r\n        else if(dataPantientsReadyExamining.status){\r\n            setIsFormDirty(true)\r\n\r\n            const handleBeforeUnload = (e) => {\r\n                const confirmationMessage = 'Bạn có chắc chắn muốn rời khỏi trang này?';\r\n                e.returnValue = confirmationMessage; // Hiển thị thông báo cảnh báo\r\n                return confirmationMessage;\r\n            };\r\n\r\n            const unblock = history.block((location, action) => {\r\n                if (isFormDirty) {\r\n                    const confirmLeave = window.confirm(\r\n                        'Bạn có chắc chắn muốn rời khỏi trang này? Những thay đổi sẽ không được lưu....'\r\n                    );\r\n                    if (confirmLeave) {\r\n                        const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                        sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                        sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                        sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                        sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                        if(currentHealthRecordExamining){\r\n                            sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                        }\r\n    \r\n                        if(prevDataPredecessor){\r\n                            sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                        }\r\n    \r\n                        if(oldDataPredecessor){\r\n                            sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                        }\r\n\r\n                        unblock(); // Hủy chặn để điều hướng\r\n                        history.push(location.pathname); // Điều hướng đến trang mới\r\n                        \r\n                    } else {\r\n                        return false; // Ngăn điều hướng\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n    \r\n            const handleUnload = () => {                \r\n                const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                \r\n                sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                if(currentHealthRecordExamining){\r\n                    sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                }\r\n    \r\n                if(prevDataPredecessor){\r\n                    sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                }\r\n    \r\n                if(oldDataPredecessor){\r\n                    sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                }\r\n            };\r\n            \r\n            window.addEventListener('beforeunload', handleBeforeUnload);\r\n            window.addEventListener('unload', handleUnload);\r\n            \r\n            return () => {\r\n                window.removeEventListener('beforeunload', handleBeforeUnload);\r\n                unblock();\r\n                window.removeEventListener('unload', handleUnload);                \r\n            };\r\n        }\r\n\r\n        else if(alertVisible){\r\n            confirmAlert();\r\n        }\r\n    }, [dataPantientsReadyExamining, mainDataExamining, currentHealthRecordExamining, dataExaminingForConclusion, alertVisible, confirmAlert, resetAlert, isLogOutClick, history, isFormDirty])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Doctor'){\r\n                history.push('/404');\r\n            }\r\n            else{\r\n                if(sessionStorage.dataPantientsReadyExamining){\r\n                    handleReloadUIWhenExamining();\r\n                }\r\n                else{\r\n                    handleGetRegistersByDateNow();\r\n                }\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(event.keyCode === 112){\r\n                event.preventDefault();\r\n            }\r\n\r\n            if(dataPantientsReadyExamining.patientsId !== '' && openAlertProcessingBackdrop === false && openModalCompleteExamining === false && event.keyCode !== 116){\r\n                if(event.keyCode === 112 && dataPantientsReadyExamining.status === 1){\r\n                    event.preventDefault();\r\n                    handleCancelExamining();\r\n                }\r\n\r\n                else if(event.keyCode === 113 && prevDataExamining){\r\n                    if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n                        handleBeginExaminingForPantient();\r\n                    }\r\n                    else if(dataPantientsReadyExamining.status === 1){\r\n                        alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n                    }\r\n                    else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n                        handleBeginEditExaminingForPantient();\r\n                    }\r\n                }\r\n\r\n                else if(event.keyCode === 115){\r\n                setOpenAlertProcessingBackdrop(true)\r\n                    if(dataPantientsReadyExamining.status === 1){\r\n                        setTimeout(() => {\r\n                            setOpenAlertProcessingBackdrop(false)\r\n                            setOpenModalCompleteExamining(true);\r\n                        }, 1000)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n\r\n    }, [dataPantientsReadyExamining, openModalCompleteExamining, openAlertProcessingBackdrop, openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n                <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                    <Grid container spacing={2} sx={{pl: 0.6, pr: 0.6}}>\r\n\r\n                        <Grid item xs={5}>\r\n                            {/* <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{`${moment().format('dddd')}, ${moment().format('LL')}`}</Typography> */}\r\n                            <TableContainer component={Paper} sx={{ height: '330px', boxShadow: 5, borderRadius: '10px' }}>\r\n                                {loadingPatient ?\r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                                            <CircularProgress />\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                                        </Box>        \r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Box>\r\n                                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                                                    <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                                                        <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                                        onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                                                    </Badge>\r\n                                                ))}\r\n                                            </Stack>\r\n                                            <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                                            <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                                                <TextField sx={{mb: 0.6, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                                        startAdornment: (\r\n                                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                                        ),\r\n                                                        endAdornment: (\r\n                                                            <InputAdornment position='end'>\r\n                                                                {searchPatientsQuery !== '' ? \r\n                                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                                                                    /> \r\n                                                                : \r\n                                                                    null\r\n                                                                }\r\n                                                            </InputAdornment>  \r\n                                                        )\r\n                                                    }}>\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Box>\r\n                                \r\n                                        <Table stickyHeader >\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listDataPatientsRegisterSort.map((dataPantientItem, dataPantientIndex) => (\r\n                                                    <TableRow hover role=\"checkbox\" key={dataPantientItem.order}\r\n                                                        sx={{ cursor: 'pointer', backgroundColor: dataPantientItem.state === 1 ? '#26c6da' : '#fff', \r\n                                                        ':hover': {backgroundColor: dataPantientItem.state === 1 ? '#00bcd4 !important' : 'rgba(0, 0, 0, 0.1) !important'} }} \r\n                                                        onClick={() => handleSelectPantientExamining(dataPantientItem)}\r\n                                                    >\r\n                                                        <TableCell align='left' sx={{width: '20px'}}>{dataPantientItem.order}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '150px'}}>{dataPantientItem.patient.patientId}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '240px'}}>{dataPantientItem.patient.fullName}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </>\r\n                                }\r\n                            </TableContainer>\r\n\r\n                            {/* cây thư mục khám */}\r\n                            <Box style={{width: '100%', marginTop: '10px', borderRadius: '10px', border: '2px solid red', height: '300px', overflow: 'auto'}} >\r\n                                {\r\n                                    mainDataExamining.length === 0 && loadingCategoryExamining === false || prevDataExamining === false ?\r\n                                        null\r\n                                    :\r\n                                    <>\r\n                                        {loadingCategoryExamining ?\r\n                                            <Box sx={{backgroundColor: '#e0e0e0', borderRadius: '10px', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu cây thư mục khám, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <>\r\n                                                <div className='category-scrollbar'>\r\n                                                    <List sx={{p: 0, display: 'inline-grid'}}>\r\n                                                        {mainDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                                            <Box sx={{display: 'inline-flex'}} key={`category ${predecessorIndex}`}>\r\n                                                                <ListItemButton\r\n                                                                    sx={{\r\n                                                                    width: 'fitContent', pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'},\r\n                                                                    backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffd54f' : ''}} \r\n                                                                    onClick={() => handleSelectCategoryClick(predecessorItem)}\r\n                                                                >\r\n                                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                        <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </Box>\r\n                                                                </ListItemButton>\r\n\r\n                                                                {predecessorItem.newCategoryPre === true && predecessorItem.newPredecessor === true ? \r\n                                                                    null\r\n                                                                :\r\n                                                                    <>\r\n                                                                        {predecessorItem.newCategoryPre === false  ?\r\n                                                                            <>  \r\n                                                                                <CheckCircleIcon sx={{color: 'green', fontSize: '1.4rem', margin: 'auto'}} titleAccess='đã theo dõi'/>\r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        {mainDataExamining.newPredecessor ? \r\n                                                                            null\r\n                                                                        :\r\n                                                                            predecessorItem.isLock === true ?\r\n                                                                                <>  \r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <EditIcon sx={{color: 'blue', fontSize: '1.6rem'}} titleAccess='Sửa'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>\r\n                                                                            \r\n                                                                            :\r\n                                                                                <>\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessorForSaving(predecessorItem.categoryOrder)}>\r\n                                                                                        <BeenhereIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Lưu'/>\r\n                                                                                    </IconButton>\r\n\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleCancelEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <CancelIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Hủy'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>   \r\n                                                                        }                                  \r\n                                                                    </>\r\n                                                                }\r\n                                                            </Box>\r\n                                                        ))}\r\n\r\n                                                        <ListItemButton \r\n                                                            sx={{pt: '4px', pb: '4px', borderRadius: '8px', backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffd54f' : '',\r\n                                                                ':hover': {backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                            onClick={() => handleSelectHealthRecords(mainDataExamining.healthRecords)}\r\n                                                        >\r\n                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}>\r\n                                                                <SendIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                            </ListItemIcon>\r\n\r\n                                                            <ListItemText primary={'Sổ sức khỏe'} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>                                                    \r\n                                                        </ListItemButton>\r\n\r\n                                                        <Collapse in={openCollapseHealthRecords} timeout=\"auto\" unmountOnExit>\r\n                                                            <div style={{ paddingLeft: '24px' }}>\r\n                                                                {mainDataExamining.healthRecords.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                    <ListItemButton key={`healthRecords ${healthRecordsIndex}`} sx={{pt: '0px', pb: '0px', width: 'auto', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                                        onClick={() => handleSelectHealthRecordsItem(healthRecordsItem.medicalRegisterId, healthRecordsItem.examinationName, healthRecordsItem.state)}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: healthRecordsItem.state === 1 ? 'red' : '#009688'}}}>\r\n                                                                            <FiberManualRecordIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={healthRecordsItem.examinationName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </ListItemButton>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </Collapse>\r\n                                                    </List>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </Box>\r\n                            {activeChip.chipOrder === 0 && dataPantientsReadyExamining.editExamining === false ?\r\n                                <div className='instruction' style={{display: 'flex', justifyContent: 'space-between', marginTop: '4.5px'}}>\r\n                                    <Button variant=\"contained\" color=\"error\" onClick={() => handleCancelExamining()}>Hủy khám (f1)</Button>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Bắt đầu khám (f2)</Button>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                </div>\r\n                            :\r\n                                dataPantientsReadyExamining.id === '' ?\r\n                                    null\r\n                                :\r\n                                    dataPantientsReadyExamining.id !== '' && dataPantientsReadyExamining.status === 0 ? \r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleDeleteExamining()}>Xóa khám (f1)</Button>\r\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Sửa đổi (f2)</Button>\r\n                                        </div>\r\n                                    :\r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleCancelExamining()}>Hủy thay đổi (f1)</Button>\r\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                        </div>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            {/* thông tin bệnh nhân */}\r\n                            <Box sx={{boxShadow: 4, borderRadius: '20px', border: '2px solid blue', height: '230px', mb: '8px', overflow: 'auto'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', mt: 0.6, mb: 0.6, fontWeight: 'bolder', fontSize: '1.2rem', textAlign: 'center'}}>Thông tin bệnh nhân</Typography>\r\n                                <Box sx={{pl: 2.8, pr: 2.8, mt: 1}}>\r\n                                    {loadingInfoPatient ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', mt: 4}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải thông tin bệnh nhân, hãy chờ một chút...</Typography>\r\n                                        </Box>\r\n                                    :\r\n                                        <>\r\n                                            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Mã BN: ${dataPantientsReadyExamining.patientsId || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Họ tên: ${dataPantientsReadyExamining.patientsName || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    {dataPantientsReadyExamining.patientsGender === true ? <MaleIcon sx={{color: 'coral', fontSize: '27px'}}/> : <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/>}\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Giới tính: ${dataPantientsReadyExamining.patientsGender !== '' ? dataPantientsReadyExamining.patientsGender === true ? 'Nam' : 'Nữ' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: {dataPantientsReadyExamining.patientsDOB ? moment(dataPantientsReadyExamining.patientsDOB).format(\"DD/MM/YYYY\") : ''}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Tháng tuổi: ${dataPantientsReadyExamining.patientsMonthsOld || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Sdt: ${dataPantientsReadyExamining.patientsPhone || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiBodyHeight style={{color: 'tomato', fontSize: '1.42rem', marginLeft: '2px'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 0.8}}>\r\n                                                        {`Chiều cao: ${dataPantientsReadyExamining.patientsHeight ? dataPantientsReadyExamining.patientsHeight + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Cân nặng: ${dataPantientsReadyExamining.patientsWeight ? dataPantientsReadyExamining.patientsWeight + ' kg' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <TbRulerMeasure style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Vòng đầu: ${dataPantientsReadyExamining.patientsHeadCircumference ? dataPantientsReadyExamining.patientsHeadCircumference + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={12} sx={{display: 'inline-flex'}}>\r\n                                                    <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Địa chỉ: ${dataPantientsReadyExamining.patientsAddress || ''}`}</Typography>\r\n                                                </Grid> \r\n\r\n                                                {previewPredecessor ? \r\n                                                    <>\r\n                                                        <Grid item xs={12} >\r\n                                                            <Box sx={{display: 'flex', flexWrap: 'wrap'}}>\r\n                                                                {previewPredecessor.map((item, index) => (\r\n                                                                    <Typography variant='subtitle1' sx={{ml: 0.5, fontSize: '1.1rem', color: 'mediumblue', fontWeight: 'bolder'}} key={index} >{`${item.categoryContentQuestionName}: ${item.categoryContentAnswer ? 'có' : ''} ${item.categoryContentNote !== null ? `${item.categoryContentNote}` : ''}, `}</Typography>\r\n                                                                ))}\r\n                                                            </Box>\r\n                                                            \r\n                                                        </Grid> \r\n                                                    </>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </Grid>\r\n                                        </>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {/* nội dung khám */}\r\n                            <div className='container-content-examining'>\r\n                                {\r\n                                    loadingPrevDataExamining ? \r\n                                        <>\r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu kỳ khám gần nhất, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    :\r\n                                    prevDataExamining ? \r\n                                        prevDataExamining.healthRecords.length === 1 && prevDataExamining.healthRecords[0].medicalBookId === null ? \r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <Typography variant='h6'>Bệnh nhân không có kỳ khám trước</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <div className='content-examining'><PreviewLastExamining prevDataExamining={prevDataExamining} /></div>\r\n                                    :\r\n                                        null\r\n                                }\r\n                                \r\n                                {categorySelectedExamining.categoryContents ? \r\n                                    <>\r\n                                        <div className='content-examining'>\r\n                                            {loadingContentsExamining ? \r\n                                                <>\r\n                                                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                        <CircularProgress />\r\n                                                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh, hãy chờ một chút...</Typography>\r\n                                                    </Box>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {categorySelectedExamining.newCategoryPre === true && categorySelectedExamining.isLock === true ? \r\n                                                        <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                            <Typography variant='h6'>Bệnh nhân không có tiền căn đang được theo dõi ở mục này</Typography>\r\n                                                        </Box>\r\n                                                    :\r\n                                                        contentCategorySelectedExamining.healthRecordsContentsType !== 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                            categorySelectedExamining.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                                <Box key={categoryContentsIndex} sx={categoryContentsItem.categoryContentTitle === null ? {marginTop: '30px'} : {}}>\r\n\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>{categoryContentsItem.categoryContentTitle || ''}</Typography>\r\n                                                                    {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                        <Box key={`categoryContentQuestionName ${questionIndex}`}>\r\n                                                                            <Grid container rowSpacing={0}>\r\n                                                                                {questionIndex === 0 ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                        </Grid>\r\n\r\n                                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                    <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                </Grid>\r\n\r\n                                                                                                <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            : \r\n                                                                                                <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                        }                                                                             \r\n                                                                                    </> \r\n                                                                                    : \r\n                                                                                    null\r\n                                                                                }\r\n                                                                                \r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1.2rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled={categorySelectedExamining.isLock === true ? true : false} \r\n                                                                                            checked={questionItem.categoryContentAnswer === true ? true : false } \r\n                                                                                            classes={{ root: classes.root }} color='error' \r\n                                                                                            sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} \r\n                                                                                            onClick={() => \r\n                                                                                                dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleAnswerCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer) : handleAnswerCheckQuestion(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer)} />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={7} >\r\n                                                                                            <div className='textfield-for-answer'>\r\n                                                                                                <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                        onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleNoteCheckQuestion(categoryContentsIndex, questionIndex, e.target.value)}\r\n                                                                                                        defaultValue={questionItem.categoryContentNote}\r\n                                                                                                    />\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>   \r\n                                                                                    :\r\n                                                                                    <>\r\n                                                                                        {categorySelectedExamining.categoryOrder === 4 ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8} >\r\n                                                                                                    <div className='textfield-for-answer'>\r\n                                                                                                        <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                                onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                                defaultValue={questionItem.categoryContentNote}\r\n                                                                                                            />\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            :\r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8}>\r\n                                                                                                    <div className='textfield-for-answer' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >\r\n                                                                                                        <input type='text' disabled={categorySelectedExamining.isLock === true ? true : false}\r\n                                                                                                            className='value-for-answer' \r\n                                                                                                            onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                            defaultValue={questionItem.categoryContentNote} \r\n                                                                                                        />\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                        }\r\n                                                                                    </>\r\n                                                                                }\r\n                                                                                \r\n                                                                            </Grid>\r\n                                                                        </Box>\r\n                                                                    ))}\r\n                                                                </Box>\r\n                                                            ))\r\n                                                        :\r\n                                                            contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n                                                                    <TableContainer component={Paper}>\r\n                                                                        <Table stickyHeader>\r\n                                                                            <TableHead>\r\n                                                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                                                    <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n                                                                                </TableRow>\r\n                                                                            </TableHead>\r\n                                                                            <TableBody sx={{borderRadius: '0px'}}>\r\n                                                                                {contentCategorySelectedExamining.categoryContents.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                                    <TableRow hover role=\"checkbox\" key={healthRecordsIndex}>\r\n                                                                                        <TableCell align='left' sx={{width: '158px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{healthRecordsItem.examinationName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '144px'}}>{handleRenderExamsStatus(healthRecordsItem.state)}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '108px'}}>{moment(healthRecordsItem.timeRegister).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '115px'}}>{healthRecordsItem.doctorFullName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: 'auto'}}>{healthRecordsItem.conclusion}</TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                ))}\r\n                                                                            </TableBody>\r\n                                                                        </Table>\r\n                                                                    </TableContainer>\r\n                                                                </>\r\n                                                            :\r\n                                                                \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', lineHeight: 1, mt: 1}}>{currentHealthRecordExamining.healthRecordsName}</Typography>\r\n                                                                    <div className='health-record-content'>\r\n                                                                        <List sx={{p: 0}}>\r\n                                                                            {currentHealthRecordExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => (\r\n                                                                                <div key={`categoryPatients ${categoryPatientsIndex}`}>\r\n                                                                                    <ListItemButton     \r\n                                                                                        sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                                                                        onClick={() => handleOpenHealthRecordsItem(categoryPatientsIndex)}\r\n                                                                                    >\r\n                                                                                        <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseHealthRecordsItem[categoryPatientsIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                                                            <ListItemText primary={categoryPatientsItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                                        </Box>\r\n                                                                                    </ListItemButton>\r\n\r\n                                                                                    <Collapse in={openCollapseHealthRecordsItem[categoryPatientsIndex]} timeout=\"auto\" unmountOnExit>\r\n                                                                                        {categoryPatientsItem.categoryContents.map((categoryPatientsContentsItem, categoryPatientsContentsIndex) => (\r\n                                                                                            <div className='header-health-record' key={categoryPatientsContentsIndex} style={{marginTop: '15px', marginBottom: '15px', border: '2px solid #00bcd4', borderRadius: '20px'}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', textAlign: 'center'}}>{categoryPatientsContentsItem.categoryContentTitle}</Typography>\r\n                                                                                                \r\n                                                                                                <div className='content-health-record' style={{padding: '10px'}} >  \r\n                                                                                                    <Grid container rowSpacing={0}>\r\n                                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryPatientsContentsItem.categoryContentName}</Typography>\r\n                                                                                                        </Grid>\r\n\r\n                                                                                                        <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryPatientsContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                        </Grid>\r\n                                                                                                        \r\n                                                                                                        <Grid item xs={5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryPatientsContentsItem.categoryContentText}</Typography>\r\n                                                                                                        </Grid> \r\n\r\n                                                                                                        {categoryPatientsContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                                                            <Box key={`questionItem ${questionIndex} healthRecordsName ${contentCategorySelectedExamining.healthRecordsName}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                                                 </Grid>    \r\n\r\n                                                                                                                {questionItem.categoryContentQuestionType === 'check' ?\r\n                                                                                                                    <>\r\n                                                                                                                        <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                                                            <Checkbox classes={{ root: classes.root }} checked={questionItem.categoryContentAnswer === true ? true : false }\r\n                                                                                                                                disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                                                                onClick={(e) => handleAnswerCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, questionItem.categoryContentAnswer)} \r\n                                                                                                                            />\r\n                                                                                                                        </Grid>\r\n                                                                                                                    \r\n                                                                                                                        <Grid item xs={5} >\r\n                                                                                                                            <div className='note-for-answer'>\r\n                                                                                                                                <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                        disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                        onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                    />\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                                                                                                                        </Grid>\r\n                                                                                                                    </>\r\n                                                                                                                :\r\n                                                                                                                    <>\r\n                                                                                                                        <Grid item xs={8} >\r\n                                                                                                                            <div className='note-for-answer'>\r\n                                                                                                                                <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                        disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                        onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                    />\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                                                                                                                        </Grid>\r\n                                                                                                                    </>\r\n                                                                                                                }\r\n                                                                                                            </Box>\r\n                                                                                                        ))}\r\n                                                                                                    </Grid>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        ))}\r\n                                                                                    </Collapse>\r\n                                                                                </div>\r\n                                                                            ))}\r\n                                                                        </List>\r\n                                                                        \r\n                                                                        {currentHealthRecordExamining.conclusion !== null ?\r\n                                                                            <>\r\n                                                                                <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                                                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận của bác sĩ: ${currentHealthRecordExamining.conclusion}`}</Typography>\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                            :\r\n                                                                            null\r\n                                                                            \r\n                                                                        }\r\n                                                                        \r\n                                                                    </div>\r\n\r\n                                                                </>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n\r\n            <CompleteExamining openModalCompleteExamining={openModalCompleteExamining} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n                handleCompleteExaminingForPantient={handleCompleteExaminingForPantient} dataExaminingForConclusion={dataExaminingForConclusion}\r\n            />\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n            />\r\n            {/* <AlertConfirm openAlertConfirmModal={openAlertConfirmModal.open} onCloseAlertConfirmModal={setOpenAlertConfirmModal} \r\n                titleConfirm={openAlertConfirmModal.title} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDoctorExamining","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getReportPatient = async (dateSelectedReport) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Admin/GetReportPatient?dateStart=${dateSelectedReport.dateStart}&dateEnd=${dateSelectedReport.dateEnd}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getReportPatient\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridToolbarExport, GridToolbarColumnsButton, GridToolbarDensitySelector, GridToolbarFilterButton, GridToolbarContainer, viVN } from '@mui/x-data-grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//icon\r\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\r\n//moment\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\n//api\r\nimport { getReportPatient } from '../../Service/StatisticsService';\r\n\r\nfunction MainDashboard() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [dateSelectedReport, setDateSelectedReport] = useState({dateStart: '', dateEnd: ''})\r\n    const [mainDataDashboard, setMainDataDashboard] = useState([]);\r\n    const [loadingDataDashboard, setLoadingDataDashboard] = useState(false);\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'STT', width: 120, align: 'left', headerAlign: 'left', },\r\n        { field: 'fullName', headerName: 'Họ tên', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'dayExam', headerName: 'Ngày khám', width: 180, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'gender', headerName: 'Giới tính', width: 140, align: 'left', headerAlign: 'left' },\r\n        { field: 'dayOfBirth', headerName: 'Ngày sinh', width: 165, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'examName', headerName: 'Kỳ khám', width: 170, align: 'left', headerAlign: 'left' },\r\n        { field: 'phone', headerName: 'Điện thoại', width: 170, type: 'number', align: 'left', headerAlign: 'left'},\r\n        { field: 'district', headerName: 'Quận/Huyện', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'province', headerName: 'Tỉnh/Thành phố', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'address', headerName: 'Địa chỉ', width: 700, align: 'left', headerAlign: 'left' },\r\n    ];\r\n\r\n    // Hàm xử lý xuất file Excel\r\n    const handleExportExcel = () => {\r\n        // Tạo lại dữ liệu với các tiêu đề cột tùy chỉnh\r\n        const formattedRows = mainDataDashboard.map((row, index) => ({\r\n            'STT': index + 1,\r\n            'Họ tên': row.fullName, \r\n            'Ngày khám': row.dayExam,\r\n            'Giới tính': row.gender,\r\n            'Ngày sinh': row.dayOfBirth,\r\n            'Kỳ khám': row.examName,\r\n            'Điện thoại': row.phone,\r\n            'Quận/Huyện': row.district,\r\n            'Tỉnh/Thành phố': row.province,\r\n            'Địa chỉ': row.address\r\n          }));\r\n\r\n        // Tạo worksheet từ dữ liệu đã định dạng\r\n        const ws = XLSX.utils.json_to_sheet(formattedRows);\r\n\r\n        // Tạo workbook và thêm worksheet vào đó\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n\r\n        // Xuất file Excel\r\n        XLSX.writeFile(wb, `Danh sách bệnh nhân khám bệnh từ ${moment(dateSelectedReport.dateStart).format('DD-MM-YYYY')} đến ${moment(dateSelectedReport.dateEnd).format('DD-MM-YYYY')}.xlsx`);\r\n    };\r\n\r\n    // Custom toolbar bao gồm nút xuất Excel\r\n    const CustomToolbar = ({ handleExportExcel }) => {\r\n        return (\r\n            <GridToolbarContainer >\r\n                {/* Các chức năng của GridToolbar mặc định */}\r\n                <GridToolbarColumnsButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarFilterButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarDensitySelector sx={{fontSize: '16px'}}/>\r\n                <Button variant=\"text\" startIcon={< RiFileExcel2Fill/>} onClick={handleExportExcel} sx={{fontSize: '16px'}}>Xuất Excel</Button>\r\n            </GridToolbarContainer>\r\n        );\r\n    };\r\n\r\n    const onChangeDateStart = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateStart = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const onChangeDateEnd = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateEnd = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const handleGetReportPatient = async () => {\r\n        setLoadingDataDashboard(true);\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        const responseGetReportPatient = await getReportPatient(dateSelectedReport);\r\n        const editMainDataDashboard = responseGetReportPatient.map((item) => {\r\n            const dataReportPatient = {\r\n                patientId: item.patientId,\r\n                fullName: item.fullName,\r\n                dayExam: moment(item.dayExam).format('DD/MM/YYYY'),\r\n                gender: item.gender ? 'Nam' : 'Nữ',\r\n                dayOfBirth: moment(item.dayOfBirth).format('DD/MM/YYYY'),\r\n                examName: item.examName,\r\n                phone: item.phone,\r\n                district: item.district,\r\n                province: item.province,\r\n                address: item.address\r\n            }\r\n            return dataReportPatient\r\n        })\r\n        setMainDataDashboard(editMainDataDashboard);\r\n        setLoadingDataDashboard(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Admin'){\r\n                history.push('/404');\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(dateSelectedReport.dateStart !== '' && dateSelectedReport.dateEnd !== ''){\r\n            handleGetReportPatient();\r\n        }\r\n    }, [dateSelectedReport])\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1}}>\r\n            <Box sx={{display: 'flex', justifyContent: 'center'}}>\r\n                <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                    <DemoContainer components={['DatePicker']}> \r\n                        <DatePicker label=\"Từ ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateStart(value)}/> \r\n                        <DatePicker label=\"Đến ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateEnd(value)}/>                                   \r\n                    </DemoContainer>\r\n                </LocalizationProvider>\r\n            </Box>\r\n\r\n            <Box sx={{ height: 600, width: '100%', mt: 1.2 }}>\r\n                {loadingDataDashboard ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '80%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>  \r\n                    </>\r\n                    :\r\n                        mainDataDashboard.length !== 0 ?\r\n                            <>       \r\n                                <DataGrid \r\n                                    style={{ fontSize: '18px' }}\r\n                                    localeText={viVN.components.MuiDataGrid.defaultProps.localeText}\r\n                                    rows={mainDataDashboard.map((row, index) => ({\r\n                                        ...row,\r\n                                        id: index + 1,\r\n                                    }))}\r\n                                    columns={columns}\r\n                                    pageSizeOptions={[1]}\r\n                                    components={{\r\n                                        Toolbar: CustomToolbar, // Chèn toolbar vào đây\r\n                                      }}\r\n                                      componentsProps={{\r\n                                        toolbar: { handleExportExcel }, // Truyền hàm export vào props của toolbar\r\n                                      }}\r\n                                    disableRowSelectionOnClick\r\n                                    sx={{\r\n                                        '.MuiTablePagination-selectLabel': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                        '.MuiTablePagination-displayedRows': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        :\r\n                           <h5 style={{textAlign: 'center', color: 'blue'}}>Hãy chọn khoảng ngày khám để lấy dữ liệu thống kê</h5>\r\n                }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainDashboard","import { BrowserRouter, Route, Link, Switch, NavLink, HashRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport Header from \"../components/Nav/Header.jsx\";\nimport Page404 from \"../components/ErrorPage/Page404\";\nimport Login from \"../components/LoginAccount/Log-in\";\nimport MainMedicalRegister from \"../components/MedicalRegister/MainMedicalRegister.jsx\";\nimport MainAppointmentExamining from \"../components/MedicalAppointment/MainAppointmentExamining.jsx\";\nimport MainDoctorExamining from \"../components/DoctorExamining/MainDoctorExamining.jsx\";\nimport MainDashboard from \"../components/Dashboard/MainDashboard.jsx\";\n\nconst AppRoutes = (props) => {\n  return (\n    <>\n      <HashRouter>\n        {/* <Header />{\" \"} */}\n        <Switch>\n          <Route exact path=\"/\">home{\" \"}</Route>\n          <Route path=\"/login\"><Login /></Route>\n          <PrivateRoutes path=\"/medicalregister\" component={MainMedicalRegister}></PrivateRoutes>\n          <PrivateRoutes path=\"/doctor-examining\" component={MainDoctorExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/remind-examining\" component={MainAppointmentExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/dashboard\" component={MainDashboard}></PrivateRoutes>\n          <Route path=\"*\"><Page404 />{\" \"}</Route>\n          {/* <PrivateRoutes path=\"/users\" component={Users} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\nexport default AppRoutes;\n","import \"./App.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Nav/Header\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <div className=\"header-container\">\n          <Header />\n        </div>\n\n        <div className=\"app-container\">\n          <AppRoutes />\n        </div>\n      </HashRouter>\n\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}