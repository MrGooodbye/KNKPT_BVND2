{"version":3,"sources":["Service/UserService.jsx","components/ManageChangePassword/ChangePassword.jsx","assets/image/logo.png","components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop.jsx","context/UserContext.jsx","Service/SignalService.jsx","components/Nav/Header.jsx","routes/PrivateRoutes.js","components/ErrorPage/Page404.js","components/Home/Home.jsx","components/ManageRegister/Register.jsx","Service/MedicalService.jsx","components/LoginAccount/Log-in.jsx","components/ManageAlertProcessing/AlertProcessing.jsx","Service/PlaceService.jsx","components/ManageInfoPantients/ManageInfoPantients.jsx","components/MedicalRegister/ListPatientsRegister.jsx","components/ManageExaminingSession/ExaminingSession.jsx","components/ManageOldDisease/OldDisease.jsx","components/ManageOldDisease/OldDiseaseForRegister.jsx","components/MedicalRegister/BookMedical.jsx","components/MedicalRegister/MainMedicalRegister.jsx","components/MedicalAppointment/MainAppointmentExamining.jsx","components/ManageCompleteExamining/CompleteExamining.jsx","components/DoctorExamining/PreviewLastExamining.jsx","components/DoctorExamining/MainDoctorExamining.jsx","Service/StatisticsService.jsx","components/Dashboard/MainDashboard.jsx","components/ManageAddUser/AddUser.jsx","components/Dashboard/MainListUser.jsx","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["backendURL","ChangePassword","props","inputPasswordDefault","currentPassword","openCurrentPassword","newPassword","openNewPassword","inputPassword","setInputPassword","useState","loading","setLoading","handleCloseModalChangePassword","event","reason","setIsDialogChangePasswordOpen","setOpenModalChangePassword","setTimeout","handleChangePassword","async","Promise","resolve","handleValidate","isValid","toast","warning","toastId","inputPayloadPassword","password","passwordOld","responseUpdatePassword","token","localStorage","getItem","axios","put","concat","headers","Authorization","then","response","catch","error","updatePassword","status","data","success","_jsx","_Fragment","children","_jsxs","Dialog","maxWidth","fullWidth","open","openModalChangePassword","onClose","disableEscapeKeyDown","DialogTitle","sx","m","p","fontWeight","fontSize","IconButton","onClick","position","right","top","CloseIcon","DialogContent","dividers","display","flexDirection","alignItems","style","justifyContent","CircularProgress","TextField","autoFocus","label","variant","type","width","mb","onChange","e","value","_inputPassword","onChangeNewPassword","target","InputProps","endAdornment","InputAdornment","handleClickShowNewPassword","padding","VisibilityIcon","VisibilityOffIcon","onChangeCurrentPassword","handleClickShowCurrentPassword","Stack","spacing","direction","Button","height","color","margin","AlertProcessingBackdrop","Backdrop","zIndex","theme","drawer","backgroundColor","changeBackground","openAlertProcessingBackdrop","Box","Typography","mt","alertTitle","UserContext","React","createContext","UserProvider","_ref","useHistory","userDefault","isAuthenticated","isLogin","user","setUser","alertVisible","setAlertVisible","isLogOutClick","setIsLogOutClick","onConfirm","setOnConfirm","setOpenAlertProcessingBackdrop","isDialogChangePasswordOpen","isOldDiseaseWithNullCodeWard","setIsOldDiseaseWithNullCodeWard","resetAlert","useEffect","getUserLogin","JSON","parse","Provider","loadingContext","loginContext","userContextLogin","logoutContext","triggerAlert","confirmCallback","confirmAlert","connection","startSignalRConnection","signalR","withUrl","accessTokenFactory","transport","WebSockets","ServerSentEvents","LongPolling","withAutomaticReconnect","configureLogging","Information","build","start","on","message","onReceiveMessage","callback","withRouter","useContext","location","useLocation","history","anchorEl","setAnchorEl","anchorElManageMenuIcon","setAnchorElManageMenuIcon","Boolean","openManageMenuIcon","handleCloseManageMenuIcon","actionNursing","key","icon","LocalHospitalIcon","LinkComponent","NavLink","to","LocalPhoneIcon","actionDoctor","MedicationLiquidIcon","actionAdmin","BarChartIcon","SettingsSuggestIcon","userAction","setUserAction","pathname","findIndex","action","handleLogout","positionName","invoke","removeFromGroup","removeItem","push","AppBar","Toolbar","Link","Avatar","src","Logo","mr","BottomNavigation","showLabels","flexGrow","map","actionItem","BottomNavigationAction","undefined","handleOpenManageMenuIcon","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","handleMenuItemClick","path","handleClick","preventDefault","textTransform","userFullName","exact","PrivateRoutes","checkJWTExpire","result","getJWT","decodeJWT","atob","split","parseJwt","currentDate","Date","console","log","exp","getTime","sessionStorage","clear","getToken","Redirect","Route","component","Page404","className","Home","Container","ml","CreateAccount","showPassword","setShowPassword","handleCloseModalRegister","setOpenModalRegister","openModalRegister","handleClickShowPassword","Autocomplete","options","id","option","renderInput","params","createConfig","createMedicalBackRegister","post","dataPatientsRegister","createAddPredecessor","dataPredecessor","createNotificationForMedicalRegister","getRegistersByDateNow","config","get","getListMedicalExaminationsGiveRegister","dayOfBirth","getListOldDisease","patientCode","phone","fullName","getVaccinationByPatientId","patientId","getMedicalDetailPatient","getMedicalBook","medicalRegisterId","getUpdatePredecessor","getAppointmentsNextWeek","updateMedicalState","state","updateStateAppointment","dataAppointment","stateAppointment","medicalBookId","appointmentDate","Login","userAccount","setUserAccount","userName","handleLogin","userLogin","tokenDTO","setItem","userId","stringify","handleKeyDown","document","addEventListener","removeEventListener","borderRadius","textAlign","autoComplete","onChangeUserName","prevUserAccount","onChangeUserPassword","onKeyDown","which","code","handlePressEnter","Register","AlertProcessing","openAlertProcessing","getListProvince","getListDistrict","provinceId","getListWard","districtId","getFullAddressByIdWard","codeWard","ManageInfoPantients","dataPatientInfoDefault","examinationId","weight","headCircumference","vaccination","patient","identifier","address","gender","fullNameMother","phoneMother","fullNameFather","phoneFather","dataPatientInfoErrorDefault","title","isError","openTooltip","focus","examiningSession","province","district","ward","listGender","genderOrder","genderName","genderValue","selectedAutoCompleteDefault","openOption","typingRef","useRef","dateFieldRef","dataPatientInfoNotEdit","setDataPatientInfoNotEdit","dataPatientInfo","setDataPatientInfo","dataPatientInfoError","setDataPatientInfoError","selectedAutoComplete","setSelectedAutoComplete","listExaminingSession","setListExaminingSession","listProvince","setListProvince","listDistrict","setListDistrict","list","listWard","setListWard","focusField","setFocusField","setOpenAlertProcessing","tooltipTheme","createTheme","components","MuiTooltip","defaultProps","placement","arrow","componentsProps","tooltip","bgcolor","slotProps","popper","modifiers","name","offset","handleFocus","fieldName","prevSelectedAutoComplete","handleBlur","test","filterOptions","inputValue","lowercasedInput","toLowerCase","filter","lowercasedFullName","initials","word","join","includes","onChangeDOBToGetExaminingSession","responseListMedicalExaminationsGiveRegister","formattedDate","exams","handleCloseModalInfoPantients","prevListDistrict","prevListWard","setSelectedPantientInfo","setOpenModalInfoPantients","handleUpdateMedicalRegister","checkValidate","_dataPatientInfoError","Object","values","every","item","current","_","isEqual","updateMedicalRegister","setCompleteMedicalRegister","setIsEditedInfo","length","responseListProvince","handleGetListProvince","selectedPantientInfo","setIsContinueUpdateMedicalRegister","editPropsDataPatientInfo","cloneDeep","responseListDistrict","provinceCode","responseListWard","districtCode","selectedGender","find","indexListExamining","indexListProvince","indexListDistrict","indexListWard","wardCode","handleApplyPantientDataToField","openModalInfoPantients","isContinueUpdateMedicalRegister","pt","pb","flexWrap","pl","pr","ThemeProvider","Tooltip","marginTop","inputProps","maxLength","inputRef","input","defaultValue","takenValue","clearInterval","prevDataPatientsRegister","onChangeIdentifier","prevDataPatientInfo","onChangeFullName","getOptionLabel","renderOption","onSelectGender","onFocus","onBlur","disableClearable","popupIcon","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DemoContainer","DatePicker","format","moment","disableFuture","disableOpenPicker","textField","_d","today","yearsDifference","getFullYear","monthsDifference","getMonth","daysDifference","getDate","age","totalMonths","totalDays","isNaN","onChangeDOB","noOptionsText","onSelectExaminingSession","size","onSelectProvine","onSelectDistrict","onSelectWard","onChangeAddress","onChangeFullNameMother","onChangePhoneMother","onChangeFullNameFather","onChangePhoneFather","onChangeHeight","onChangeWeight","onChangeHeadCircumference","FormControlLabel","control","Checkbox","checked","onChangeVaccination","bool","DialogActions","ListPatientsRegister","activeChip","setActiveChip","chipOrder","chipLabel","listPantientChipState","setListPantientChipState","chipContent","listDataPatientsRegister","setListDataPatientsRegister","listDataPatientsAppointmentsToday","setListDataPatientsAppointmentsToday","searchPatientsQuery","setSearchPatientsQuery","listDataPatientsRegisterState","setListDataPatientsRegisterState","listDataPatientsRegisterSort","setListDataPatientsRegisterSort","isEditedInfo","searchPatients","patients","searchTerm","lowerCaseSearchTerm","patientObj","handleGetRegistersByDateNow","responseGetAppointmentsToday","getAppointmentsToday","_listDataPatientsAppointmentsToday","updatedList","patientFullName","dateOfBirth","fullAddress","nextExamId","listPantientRegisterWaiting","patientsRegisterItem","listCountState","listPantientRegisterDone","setComponent1Loading","keyCode","completeMedicalRegister","border","boxShadow","pantientChipStateItem","pantientChipStateIndex","Badge","badgeContent","Chip","handleSelectedChip","chipIndex","CachedIcon","cursor","titleAccess","handleReloadGetRegistersByDateNow","placeholder","handleSearchPantient","startAdornment","SearchIcon","TableContainer","Paper","overflowX","borderBottomLeftRadius","borderBottomRightRadius","Table","stickyHeader","minWidth","TableHead","TableRow","TableCell","align","TableBody","patientsRegisterSortItem","patientsRegisterSortIndex","hover","role","onDoubleClick","responseVaccinationByPatientId","dataPantientOldOldDiseaseRegister","oldDisease","medicalTypeId","userIdDoctor","setDataPantientAppointmentsToday","handleSelectedPantientAppointmentsToday","handleSelectedPantientInfo","order","whiteSpace","overflow","textOverflow","ExaminingSession","isConfirmOpen","setIsConfirmOpen","handleListMedicalExaminationsGiveRegister","getListMedicalExaminationsGiveOldRegister","handleMedicalRegister","isAppointment","oldExams","setIsContinueSelectedExaminingSession","setOpenModalExaminingSession","handleResetField","createMedicalRegister","handleOpenConfirm","openModalExaminingSession","isContinueSelectedExaminingSession","monthsOfAge","Grid","container","rowSpacing","xs","oldExamItem","oldExamIndex","RadioGroup","onChangeRadioSelect","examItem","examIndex","Radio","OldDisease","dataPatientsForSearchOldDiseaseDefault","dataPatientsForSearchOldDiseaseErrorDefault","listFoundOldDisease","setListFoundOldDisease","dataPatientsForSearchOldDisease","setDataPatientsForSearchOldDisease","dataPatientsForSearchOldDiseaseError","setDataPatientsForSearchOldDiseaseError","selectedRowIndex","setSelectedRowIndex","formRef","tableRef","handleEnterPress","_dataPatientsForSearchOldDiseaseError","handleCloseModalOldDisease","setOpenModalOldDisease","handleFindOldDisease","reset","querySelectorAll","forEach","dispatchEvent","Event","bubbles","handleClickFindOldDisease","validate","handleApplyDataPatientOldDisease","foundOldDiseaseItem","oldDiseaseWithNullCodeWard","setDataPatientsRegister","openModalOldDisease","ref","prevDataPatientsForSearchOldDisease","onChangePatientId","date","onChangeDayOfBirth","onChangePhone","tabIndex","prevIndex","Math","min","max","handleTableKeyDown","foundOldDiseaseIndex","selected","OldDiseaseForRegister","handleCloseOldDiseaseRegister","setOpenOldDiseaseRegister","openOldDiseaseRegister","listOldDiseaseRegister","BookMedical","dataPatientsRegisterDefault","autocompleteValueDefault","medicalType","dataPatientsRegisterErrorDefault","listMedicalType","medicalTypeOrder","medicalTypeName","setListOldDiseaseRegister","dataPatientsRegisterError","setDataPatientsRegisterError","autocompleteValue","setAutocompleteValue","firstFocusRef","nextFieldId","nextField","getElementById","select","replaceSpecialCharacters","str","replace","normalizedInput","prevAutocompleteValue","_dataPatientsRegisterError","dataPantientAppointmentsToday","handleMedicalBackRegister","responseCreateMedicalBackRegister","handleOpenModalOldDisease","_autocompleteValue","indexListGender","indexListMedicalType","handleApplyPantientOldDiseaseData","handleApplyPantientAppointmentsTodayData","onF2Press","setOnF2Press","onF4Press","setOnF4Press","onF8Press","setOnF8Press","minHeight","PopperProps","disabled","WebkitTextFillColor","InputLabelProps","shrink","DateField","disablePortal","onSelectMedicalType","paddingLeft","paddingRight","multiline","rows","onChangeReason","MainMedicalRegister","component1Loading","setHandleResetField","handleOpenModalExaminingSession","setHandleOpenModalExaminingSession","setHandleOpenModalOldDisease","marginLeft","Skeleton","MainAppointmentExamining","listPantientAppointmentChipState","listAppointment","setListAppointment","listDataPatientsAppointmentPaginate","setListDataPatientsAppointmentPaginate","listDataPatientsAppointmentState","setListDataPatientsAppointmentState","listDataPatientsAppointmentSort","setListDataPatientsAppointmentSort","loadingComponent","setLoadingComponent","page","setPage","pageCount","setPageCount","setDataAppointment","handlePaginate","calculatedPageCount","ceil","startIndex","newCurrentItems","slice","handleAcceptReExamining","findDataAppointment","responseUpdateStateAppointment","responseGetAppointmentsNextWeek","_listAppointmentNotRemind","_listAppointmentAcceptReExamining","_listAppointmentRejectReExamining","updateListPantientAppointmentChipState","dataAppointmentNotRemind","dataAppointmentAcceptReExamining","dataAppointmentRejectReExamining","handleRejectReExamining","handleGetAppointmentsNextWeek","pantientAppointmentChipStateItem","pantientAppointmentChipStateIndex","dataPantientAppointmentItem","dataPantientAppointmentIndex","examNameOld","nextExamName","disablePast","minDate","onChangeAppointmentDate","convertAppointmentDateFindDataAppointment","CheckIcon","CancelIcon","Pagination","count","handlePageChange","CompleteExamining","mainDataExaminingForConclusion","setMainDataExaminingForConclusion","textareaRef","classes","makeStyles","root","useStyles","handleCloseModalCompleteExamining","setOpenModalCompleteExamining","handleSetDataCompleteExamining","editDataExaminingForConclusion","clone","dataExaminingForConclusion","categories","categoriesItem","categoryContents","categoryContentsItem","categoryContentQuestions","responseAppointmentDate","getAppointmentDate","isVaccination","nextVaccination","reminder","conclusion","setSelectionRange","handleAddMedicalBook","some","isPredecessor","categoryPres","categoriesHealthRecordExamining","isHealthRecord","responseAddMedicalBook","dataMedicalBook","createAddMedicalBook","handleCompleteExaminingForPantient","openModalCompleteExamining","List","categoriesIndex","categoryName","categoryContentsIndex","marginBottom","categoryContentTitle","questionItem","questionIndex","borderRight","categoryContentName","categoryContentQuestionType","CheckBoxIcon","lineHeight","categoryContentCheck","categoryContentText","borderTop","categoryContentQuestionName","categoryContentAnswer","TextareaAutosize","categoryContentNote","onChangeExaminingConclusion","prevMainDataExaminingForConclusion","locale","PreviewLastExamining","previewDataExamining","setPreviewDataExamining","healthRecords","examinationName","timeUpdateState","medicakBook","nutritionals","vaccinationBook","loadingMedicalBook","setLoadingMedicalBook","openCollapsePredecessorItem","setOpenCollapsePredecessorItem","openCollapseMedicakBookItem","setOpenCollapseMedicakBookItem","prevDataExamining","responseMedicalBook","healthRecordsItem","newPredecessor","healthRecordsUpdate","newMedicalBook","medicalBookIdRecently","sort","a","b","categoryOrder","handleEditPrevDataExamining","predecessorItem","predecessorIndex","ListItemButton","prevOpen","newOpen","handleOpenPredecessorItem","ListItemIcon","transform","SendIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","predecessorItemCategoryContentsItem","predecessorItemCategoryContentsIndex","medicakBookItems","medicakBookIndex","handleOpenMedicakBookItem","medicakBookCategoryContentsItem","medicakBookCategoryContentsIndex","doctorFullName","MainDoctorExamining","dataPantientsReadyExaminingDefault","stt","patientsId","patientsName","patientsDOB","patientsMonthsOld","patientsGender","patientsHeight","patientsWeight","patientsHeadCircumference","patientsPhone","patientsAddress","isFormDirty","setIsFormDirty","dataPantientsReadyExamining","setDataPantientsReadyExamining","mainDataExamining","setMainDataExamining","setPrevDataExamining","openCollapseHealthRecords","setOpenCollapseHealthRecords","openCollapseHealthRecordsItem","setOpenCollapseHealthRecordsItem","categorySelectedExamining","setCategorySelectedExamining","contentCategorySelectedExamining","setContentCategorySelectedExamining","healthRecordsContents","setHealthRecordsContents","currentHealthRecordExamining","setCurrentHealthRecordExamining","previewPredecessor","setPreviewPredecessor","oldPreviewPredecessor","setOldPreviewPredecessor","setDataExaminingForConclusion","oldDataPredecessor","setOldDataPredecessor","newDataPredecessor","setNewDataPredecessor","prevDataPredecessor","setPrevDataPredecessor","loadingPrevDataExamining","setLoadingPrevDataExamining","loadingPatient","setLoadingPatient","loadingInfoPatient","setLoadingInfoPatient","loadingCategoryExamining","setLoadingCategoryExamining","loadingContentsExamining","setLoadingContentsExamining","handleCancelExamining","editExamining","backRegister","handleStartExaminingButtonClick","handleBeginExaminingForPantient","alert","handleBeginEditExaminingForPantient","handleCompleteExaminingButtonClick","responseListPantient","findPantientIsExam","responseDataExamining","indexPantient","findListPantientNotExam","handleAppyPantientData","handleGetMedicalDetailPatient","dataPantientItem","_dataPantientsReadyExamining","isContinueExam","_listDataPatientsRegister","findIndexPatient","handleSetMainDataExamining","handleGetCategoryReExamining","editPrevDataExaminingCategoryPres","responseGetUpdatePredecessorItem","matchingPrevDataExamining","prevDataExaminingCategoryPresItem","isLock","content2","content1","categoryContentOrder","matchingContent1","isNullCategoryPres","responseGetUpdateMedicalBook","updateHealthRecordsCategoriesForConclusion","category","content","demoDataExaminingForConclusion","healthRecordsName","categoryPatients","updateCategoriesForConclusion","editCategoryContents","itemCategoryContents","newCategoriesDemoDataExaminingForConclusion","editDataCategoryPresForConclusion","mainCategoryContentsExamining","editDataHealthRecordsForConclusion","categoryPresItem","categoryPresIndex","categoryPresOrder","getUpdateMedicalBook","handleSetMainDataReExamining","responseGetUpdateMedicalBookData","questions","allNull","q","responseGetUpdatePredecessor","handleNoteValueQuestionPredecessorForReExamOrBackExam","_categorySelectedExamining","createSelectedQuestionsValuePredecessorForReExamOrBackExam","categoryContentQuestion","findNewDataPredecessorCategoryOrder","newDataPredecessorCategoryPresItem","findNewDataPredecessorCategoryContents","newDataPredecessorCategoryContentsItem","newDataPredecessorcategoryContentQuestionsItem","categoryContentQuestionOrder","questionIndexRemove","splice","newDataPredecessorCategoryContents","newDataPredecessorCategoryPres","newCategoryPre","createPreviewDataPredecessor","createSelectedQuestionsPredecessorForReExamOrBackExam","isEditNote","questionIndexNoteDontExit","handleSaveNewDataPredecessor","saveNewDataPredecessor","findNewDataPredecessor","responseCreateAddPredecessor","_mainDataExamining","selectCategoryReExamining","handleSelectCategoryClick","previewDataPredecessor","flatMap","question","categoryContentDefauls","healthRecordsContentsType","categoryIncludeCotent","findHealthRecord","healthRecordsState","editDataHealthRecordsItemForConclusion","_dataExaminingForConclusion","dataHealthRecordsItemForConclusionItem","handleAnswerValueQuestion","createSelectedQuestionsExaminingForConclusion","handleNoteCheckQuestionHealthRecords","categoryPatientsIndex","categoryPatientsContentsIndex","_healthRecordsContents","questionOrder","existingQuestion","categoryContentQuestionsItem","_previewPredecessor","findQuestion","handleReceiveMessage","medicalRegisterMessage","window","confirm","handleBeforeUnload","confirmationMessage","returnValue","unblock","block","_dataPatientsRegisterSort","handleUnload","reDataPatientsRegisterSort","dataPatientsRegisterSort","reDataPantientsReadyExamining","reMainDataExamining","reDataExaminingForConclusion","reCurrentHealthRecordExamining","rePrevDataPredecessor","reOldDataPredecessor","handleReloadUIWhenExamining","dataPantientIndex","handleSelectPantientExamining","CheckCircleIcon","edge","findUpdatePredecessor","handleEditDataPredecessor","EditIcon","handleEditDataPredecessorForSaving","findOldDataPredecessorCategoryOrder","oldDataPredecessorItem","findNewDataPredecessorCategoryContentsItem","findOldDataPredecessorCategoryContentsItem","newQ","findNewDataPredecessorQuestionItem","contentCategoryContentsItem","removeOldDataPredecessorCategoryPres","BeenhereIcon","handleCancelEditDataPredecessor","findPrevDataPredecessorByCategoryName","prevDataPredecessorItem","removeCategoryPredecessor","findOldDataPredecessorByCategoryOrder","findPreviewPredecessorNotByCategoryOrder","newPreviewPredecessor","handleSelectHealthRecords","healthRecordsIndex","handleSelectHealthRecordsItem","FiberManualRecordIcon","columnSpacing","sm","md","PinIcon","PersonIcon","MaleIcon","FemaleIcon","CalendarMonthIcon","InfoIcon","PhoneIcon","GiBodyHeight","GiWeightScale","TbRulerMeasure","index","handleAnswerCheckQuestionPredecessorForReExamOrBackExam","answer","handleAnswerCheckQuestion","handleNoteCheckQuestionPredecessorForReExamOrBackExam","handleNoteCheckQuestion","DescriptionIcon","timeRegister","categoryPatientsItem","handleOpenHealthRecordsItem","categoryPatientsContentsItem","handleAnswerCheckQuestionHealthRecords","currentHealthRecordsContent","getListUser","MainDashboard","dateSelectedReport","setDateSelectedReport","dateStart","dateEnd","mainDataDashboard","setMainDataDashboard","loadingDataDashboard","setLoadingDataDashboard","handleGetReportPatient","responseGetReportPatient","getReportPatient","editMainDataDashboard","dayExam","examName","_dateSelectedReport","onChangeDateStart","onChangeDateEnd","DataGrid","localeText","viVN","MuiDataGrid","row","columns","field","headerName","headerAlign","pageSizeOptions","handleExportExcel","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","startIcon","RiFileExcel2Fill","toolbar","formattedRows","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","disableRowSelectionOnClick","AddUser","dataAddUser","setDataAddUser","userPassword","userEmail","userPosition","handleCloseModalAddUser","setOpenModalAddUser","handleAddUser","responseAddUser","addUser","setReloadComponent","openModalAddUser","onChangeUserFullName","prevDataAddUser","onSelectPosition","MainListUser","reloadComponent","loadingListUser","setLoadingListUser","listUser","setListUser","onChangeActiveUser","isActive","updateActiveUser","editMainDataListUser","dataReportUser","userIsActive","renderCell","Switch","handleGetListUser","marginRight","handleOpenModalAddUser","HiUserAdd","AppRoutes","HashRouter","App","Header","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.689d8d5d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n//import SignalService from \"./SignalService.jsx\"\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\nconst userLogin = async (userName, password) => {\r\n  return await axios.post(`${backendURL}/api/UserAccount/Login`, { userName, password })\r\n  .then(function (response) {\r\n    //SignalService.startSignalRConnection(response.data.tokenDTO.token)\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n};\r\n\r\nconst addUser = async (dataAddUser) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  return await axios.post(`${backendURL}/api/UserAccount/AddUser`, dataAddUser, { \r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n  },\r\n  })\r\n  .then(function (response) {\r\n    //SignalService.startSignalRConnection(response.data.tokenDTO.token)\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n}\r\n\r\nconst getUserLogin = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetUserLogin`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst getGetListDoctor = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetDoctors`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst updatePassword = async (inputPayloadPassword) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/UserAccount/ChangePassword`, inputPayloadPassword, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateActiveUser = async (userId, isActive) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/UserAccount/EditIsActiveUser?userId=${userId}&isActive=${isActive}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    userLogin, addUser,\r\n    getUserLogin, getGetListDoctor,\r\n    updatePassword, updateActiveUser\r\n}\r\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { toast } from 'react-toastify';\r\n//api\r\nimport { updatePassword } from '../../Service/UserService';\r\n\r\nfunction ChangePassword(props) {\r\n    const inputPasswordDefault = {\r\n        currentPassword: '',\r\n        openCurrentPassword: false,\r\n        newPassword: '',\r\n        openNewPassword: false\r\n    }\r\n\r\n    const [inputPassword, setInputPassword] = useState(inputPasswordDefault);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleCloseModalChangePassword = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            props.setIsDialogChangePasswordOpen(false);\r\n            props.setOpenModalChangePassword(false);\r\n            setTimeout(() => {\r\n                setInputPassword(inputPasswordDefault);\r\n            }, 200)\r\n        }\r\n    }\r\n\r\n    const handleClickShowCurrentPassword = () => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.openCurrentPassword = !inputPassword.openCurrentPassword\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const handleClickShowNewPassword = () => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.openNewPassword = !inputPassword.openNewPassword\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const onChangeCurrentPassword = (value) => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.currentPassword = value\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const onChangeNewPassword = (value) => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.newPassword = value\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const handleValidate = () => {\r\n        let isValid = true;\r\n        if(inputPassword.currentPassword === ''){\r\n            toast.warning('Bạn chưa nhập mật khẩu hiện tại!', {toastId: 'validateCurrentPassword'})\r\n            isValid = false;\r\n        }\r\n        \r\n        if(inputPassword.newPassword === ''){\r\n            toast.warning('Bạn chưa nhập mật khẩu mới!', {toastId: 'validateNewPassword'})\r\n            isValid = false\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    const handleChangePassword = async () => {\r\n        setLoading(true);\r\n        await new Promise(resolve => setTimeout(resolve, 2 * 100));\r\n        if(handleValidate()){\r\n            const inputPayloadPassword = { password: inputPassword.newPassword, passwordOld: inputPassword.currentPassword }\r\n            const responseUpdatePassword = await updatePassword(inputPayloadPassword);\r\n\r\n            if(responseUpdatePassword.status === 400 && responseUpdatePassword.data === 'Tài khoản hoặc mật khẩu không chính xác !'){\r\n                toast.error('Mật khẩu hiện tại không chính xác.', {toastId: 'handleChangePasswordError1'})\r\n            }\r\n            else if(responseUpdatePassword.status === 400){\r\n                toast.error(responseUpdatePassword.data, {toastId: 'handleChangePasswordError2'})\r\n            }\r\n            else if(responseUpdatePassword.status === 200){\r\n                toast.success(responseUpdatePassword.data, {toastId: 'handleChangePasswordSuccess'})\r\n                handleCloseModalChangePassword();\r\n            }\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalChangePassword} onClose={(event, reason) => handleCloseModalChangePassword(event, reason)} disableEscapeKeyDown={true} >\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Đổi mật khẩu</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalChangePassword()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                \r\n                <DialogContent dividers sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                    {loading ? \r\n                        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                            <CircularProgress />\r\n                        </div>\r\n                    :\r\n                        <>\r\n                            <TextField autoFocus={true} label=\"Mật khẩu mới\" variant=\"outlined\" type={inputPassword.openNewPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeNewPassword(e.target.value)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={handleClickShowNewPassword} sx={{padding: '1px'}}> {inputPassword.openNewPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n\r\n                            <TextField label=\"Mật khẩu hiện tại\" variant=\"outlined\" type={inputPassword.openCurrentPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeCurrentPassword(e.target.value)} \r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={handleClickShowCurrentPassword} sx={{padding: '1px'}}> {inputPassword.openCurrentPassword  ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleChangePassword()}>Đổi mật khẩu</Button>\r\n                            </Stack>\r\n                        </>\r\n                    }\r\n\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChangePassword","export default __webpack_public_path__ + \"static/media/logo.e5a4a234.png\";","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessingBackdrop(props) {\r\n    return (\r\n        <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: props.changeBackground ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.6)' }} open={props.openAlertProcessingBackdrop}>\r\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <CircularProgress color='inherit' />\r\n                <Typography sx={{mt: 1.4,}} variant='subtitle1'>{props.alertTitle}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n\r\nexport default AlertProcessingBackdrop\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//modal\r\nimport AlertProcessingBackdrop from '../components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const userDefault = {\r\n        isAuthenticated: false,\r\n        isLogin: false,\r\n        token: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(userDefault);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [isLogOutClick, setIsLogOutClick] = useState(false);\r\n    const [onConfirm, setOnConfirm] = useState(null);\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [isDialogChangePasswordOpen, setIsDialogChangePasswordOpen] = useState(false);\r\n\r\n    const [isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard] = useState(false);\r\n\r\n    const loginContext = (userContextLogin) => {\r\n        setUser({ ...userContextLogin });\r\n        setLoading(false);\r\n    };\r\n\r\n    const triggerAlert = (confirmCallback) => {\r\n        setAlertVisible(true);\r\n        setIsLogOutClick(true);\r\n        setOnConfirm(() => confirmCallback);\r\n    };\r\n\r\n    const confirmAlert = () => {\r\n        if (onConfirm) onConfirm();\r\n        setIsLogOutClick(false);\r\n        resetAlert();\r\n    };\r\n\r\n    const resetAlert = () => {\r\n        setAlertVisible(false);\r\n        setIsLogOutClick(false);\r\n        setOnConfirm(null);\r\n    };\r\n\r\n    const logoutContext = () => {\r\n        setUser({ ...userDefault });\r\n    }\r\n\r\n    const loadingContext = (loading) => {\r\n        setLoading(...loading);\r\n    }\r\n\r\n    // const fetchUser = async () => {\r\n    //     setOpenAlertProcessingBackdrop(true);\r\n    //     const response = await getUserLogin();\r\n    //     setUser({\r\n    //             isAuthenticated: true, \r\n    //             isLogin: true,\r\n    //             userId: response.userId,\r\n    //             userFullName: response.userFullName,\r\n    //             positionName: response.positionName\r\n    //         }) \r\n    //     setLoading(false);\r\n    //     setOpenAlertProcessingBackdrop(false);\r\n    // }\r\n\r\n    const parseJwt = (token) => {\r\n        try {\r\n          return JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n    };\r\n\r\n    const checkJWTExpire = () => {\r\n        let result = false;\r\n        let getJWT = localStorage.getItem('jwt');\r\n        if(getJWT){\r\n            let decodeJWT = parseJwt(getJWT);\r\n            let currentDate = new Date();\r\n            if(decodeJWT.exp * 1000 < currentDate.getTime()) {\r\n                //console.log('Token đã hết hạn hoặc không tồn tại')\r\n                localStorage.removeItem('jwt'); //xóa localStorage\r\n                localStorage.removeItem('userLogin');\r\n                sessionStorage.clear();\r\n                return result \r\n            }\r\n            else{\r\n                //console.log('token còn hạn');\r\n                result = true;\r\n                return result\r\n            }\r\n        }\r\n        else{\r\n            localStorage.removeItem('userLogin');\r\n            return result\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n        setUser(getUserLogin);\r\n        // const getToken = localStorage.getItem('jwt')\r\n        // if(getUserLogin && getToken){\r\n        //     const result = checkJWTExpire();\r\n        //     if(result){\r\n        //         setUser(getUserLogin);\r\n        //     }\r\n        //     else if(result === false){\r\n        //         setUser(userDefault);\r\n        //     }\r\n        // }else{\r\n        //     localStorage.removeItem('jwt'); //xóa localStorage\r\n        //     localStorage.removeItem('userLogin');\r\n        //     setUser(userDefault);\r\n        // }\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <UserContext.Provider \r\n                value={{ user, loading, loadingContext, loginContext, \r\n                    logoutContext, alertVisible, triggerAlert, confirmAlert, resetAlert, isLogOutClick,\r\n                    isDialogChangePasswordOpen, setIsDialogChangePasswordOpen,\r\n                    isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard\r\n                }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop}\r\n                alertTitle={'Đang tải thông tin người dùng'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import * as signalR from '@microsoft/signalr';\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nlet connection = null; // Biến toàn cục lưu trữ kết nối SignalR\r\n\r\n// Hàm khởi tạo và kết nối SignalR\r\nconst startSignalRConnection = async (token) => {\r\n    if (connection) {\r\n        //console.log('SignalR connection already established.');\r\n        return connection;\r\n    }\r\n\r\n    connection = new signalR.HubConnectionBuilder()\r\n        .withUrl(`${backendURL}/notificationHub`, {\r\n            accessTokenFactory: () => token,\r\n            transport: signalR.HttpTransportType.WebSockets |\r\n                        signalR.HttpTransportType.ServerSentEvents |\r\n                        signalR.HttpTransportType.LongPolling\r\n        })\r\n        .withAutomaticReconnect([0, 2000, 10000, 30000])\r\n        .configureLogging(signalR.LogLevel.Information)\r\n        .build();\r\n\r\n    // Khởi tạo kết nối, trả về promise để xử lý sau\r\n    try {\r\n        await connection.start(); // Bắt đầu kết nối\r\n        //console.log(\"Connected to SignalR hub.\");\r\n\r\n        // Đăng ký sự kiện nhận tin nhắn, gọi callback khi nhận được tin nhắn\r\n        connection.on(\"ReceiveMessage\", (message) => {\r\n            //console.log(\"Received message:\", message);\r\n            if (onReceiveMessage) {\r\n                onReceiveMessage(message); // Gọi callback được truyền vào\r\n            }\r\n        });\r\n\r\n    } catch (error) {\r\n        //console.error(\"Error connecting to SignalR hub:\", error);\r\n        setTimeout(() => startSignalRConnection(token, onReceiveMessage), 5000); // Thử kết nối lại sau 5 giây nếu gặp lỗi\r\n    }\r\n};\r\n\r\n// Hàm đăng ký sự kiện ReceiveMessage\r\nconst onReceiveMessage = (callback) => {\r\n    if (connection) {\r\n        connection.on(\"ReceiveMessage\", callback);\r\n    } else {\r\n        //console.error(\"Connection has not been established yet.\");\r\n    }\r\n};\r\n\r\n// Hàm dừng kết nối SignalR\r\nconst stopSignalRConnection = async () => {\r\n    if (connection) {\r\n        try {\r\n            await connection.stop();\r\n            //console.log(\"Disconnected from SignalR hub.\");\r\n            connection = null;\r\n        } catch (error) {\r\n            //console.error(\"Error disconnecting from SignalR hub:\", error);\r\n        }\r\n    }\r\n};\r\n\r\nconst removeFromGroup = async () => {\r\n    if (connection) {\r\n        try {\r\n            await connection.invoke('RemoveFromGroup');\r\n            //console.log(\"User đã logout SignalR.\");\r\n        } catch (error) {\r\n            //console.error(`Failed to remove user from group: ${error}`);\r\n        }\r\n    } else {\r\n        //console.error(\"Connection has not been established yet.\");\r\n    }\r\n};\r\n\r\n// Hàm kiểm tra nếu đã kết nối\r\nconst isConnected = () => {\r\n    return connection !== null;\r\n};\r\n\r\nexport {\r\n    startSignalRConnection , stopSignalRConnection, onReceiveMessage, removeFromGroup, isConnected\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n//modal\r\n//import UserManual from '../ManageUserManual/UserManual';\r\nimport ChangePassword from '../ManageChangePassword/ChangePassword';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//icon\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport SettingsSuggestIcon from '@mui/icons-material/SettingsSuggest';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//real-time\r\nimport {removeFromGroup} from '../../Service/SignalService';\r\n\r\nfunction Header(props) {\r\n\r\n  const { user, logoutContext, triggerAlert, isDialogChangePasswordOpen, setIsDialogChangePasswordOpen, isOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  // const [openModalUserManual, setOpenModalUserManual] = useState(false);\r\n  const [openModalChangePassword, setOpenModalChangePassword] = useState(false);\r\n\r\n  //mui state menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [anchorElManageMenuIcon, setAnchorElManageMenuIcon] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  \r\n  const open = Boolean(anchorEl);\r\n  const openManageMenuIcon = Boolean(anchorElManageMenuIcon)\r\n  \r\n  const handleClick = (event) => {\r\n    if(isOldDiseaseWithNullCodeWard === true){\r\n      event.preventDefault();\r\n    }else{\r\n      setAnchorEl(event.currentTarget)\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOpenManageMenuIcon = (event, key) => {\r\n    if(key === 'manage'){\r\n      setAnchorElManageMenuIcon(event.currentTarget);\r\n    }\r\n  }\r\n\r\n  const handleCloseManageMenuIcon = () => {\r\n    setAnchorElManageMenuIcon(null)\r\n  }\r\n\r\n  const handleMenuItemClick = (path) => {\r\n    history.push(path); // Điều hướng tới đường dẫn mới\r\n    handleCloseManageMenuIcon(); // Đóng Menu\r\n  };\r\n\r\n  const actionNursing = [\r\n    { key: 'medicalRegister', maxWidth: '114px', label: 'Đăng ký khám', icon: <LocalHospitalIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/medicalregister\" },\r\n    { key: 'remind-examining', maxWidth: '95px', label: 'Nhắc khám', icon: <LocalPhoneIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/remind-examining\" },\r\n  ]\r\n\r\n  const actionDoctor = [\r\n    { key: 'examining', maxWidth: '100px', label: 'Khám bệnh', icon: <MedicationLiquidIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/doctor-examining\" },\r\n  ]\r\n\r\n  const actionAdmin = [\r\n    { key: 'statistical', maxWidth: '83px', label: 'Thống kê', icon: <BarChartIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/dashboard\" },\r\n    { key: 'manage', maxWidth: '83px', label: 'Quản lý', icon: <SettingsSuggestIcon sx={{fontSize: 30}}/> },\r\n  ]\r\n\r\n  const [userAction, setUserAction] = useState([]);\r\n\r\n  const handleChangeURL = (pathname) => {\r\n    const actionIndex = userAction.findIndex(action => action.to === pathname);\r\n    return actionIndex;\r\n  }\r\n\r\n  const value = handleChangeURL(props.location.pathname);\r\n\r\n  const handleLogout = () => {\r\n    const pathname = props.location.pathname;\r\n    if(user.positionName === 'Doctor' && pathname === 'doctor-examining'){\r\n      triggerAlert(async () => {\r\n        await removeFromGroup();\r\n        localStorage.removeItem('jwt');\r\n        localStorage.removeItem('userLogin');\r\n        logoutContext();\r\n        setAnchorEl(null);\r\n        history.push('/login');\r\n      });\r\n    }\r\n    \r\n    else{\r\n      localStorage.removeItem('jwt'); //xóa localStorage\r\n      localStorage.removeItem('userLogin');\r\n      logoutContext();\r\n      setAnchorEl(null);\r\n      history.push('/login');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isOldDiseaseWithNullCodeWard])\r\n  \r\n  useEffect(() => {\r\n    if(user){\r\n      if(user.positionName === 'Nursing'){        \r\n        setUserAction(actionNursing);\r\n      }\r\n      else if(user.positionName === 'Doctor'){\r\n        setUserAction(actionDoctor);\r\n      }\r\n      else if(user.positionName === 'Admin'){\r\n        setUserAction(actionAdmin);\r\n      }\r\n    }  \r\n  }, [user])\r\n  \r\n  if(location.pathname !== '/login'){\r\n    return (\r\n      <>\r\n        <Box sx={{ width: '100%'}} >\r\n          <AppBar sx={{position: 'unset'}}>\r\n            <Toolbar sx={{backgroundColor: '#cfe8fc', height: '78px'}}>\r\n              <Link to=\"/\">\r\n                <Avatar src={Logo} sx={{ width: 62, height: 62, mt: 'auto', mb: 'auto', mr: 4 }} />\r\n              </Link>\r\n              {user && token ? \r\n                <>\r\n                  <BottomNavigation showLabels value={value}\r\n                    sx={{display: 'flex', justifyContent: 'flex-start', backgroundColor: '#cfe8fc', flexGrow: 1}}>\r\n                    {userAction.map(actionItem => (\r\n                      <BottomNavigationAction\r\n                        key={actionItem.key}\r\n                        label={actionItem.label}\r\n                        icon={actionItem.icon}\r\n                        LinkComponent={actionItem.LinkComponent || 'div'}\r\n                        to={actionItem.to || undefined}\r\n                        onClick={(event) => handleOpenManageMenuIcon(event, actionItem.key)}\r\n                        sx={{color: '#000', maxWidth: actionItem.maxWidth}}\r\n                      />\r\n                    ))}  \r\n                  </BottomNavigation>\r\n\r\n                  <Menu anchorEl={anchorElManageMenuIcon} open={Boolean(openManageMenuIcon)} onClose={() => handleCloseManageMenuIcon()} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }} transformOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n                    <MenuItem onClick={() => handleMenuItemClick('/manage-user')}>Người dùng</MenuItem>\r\n                  </Menu>\r\n\r\n                  <Button onClick={(e) => handleClick(e)} sx={{color: '#000', textTransform: 'none'}}>{user.userFullName}</Button>\r\n                  <Menu anchorEl={anchorEl} open={open} onClose={() => handleClose()}>\r\n                    <MenuItem onClick={() => [setOpenModalChangePassword(true), setIsDialogChangePasswordOpen(true), setAnchorEl(null)]}>Đổi mật khẩu</MenuItem>\r\n                    <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                  </Menu>\r\n\r\n                  {/* <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} /> */}\r\n                </>\r\n              :\r\n                <>\r\n                  <Box sx={{position: 'absolute', right: 22}}>\r\n                    <NavLink exact to=\"/login\"><Button sx={{textTransform: 'none', color: '#000'}}>Đăng nhập</Button></NavLink>\r\n                    {/* <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} /> */}\r\n                  </Box>\r\n                </>\r\n              }            \r\n            </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n  \r\n        {/* <UserManual openModalUserManual={openModalUserManual} setOpenModalUserManual={setOpenModalUserManual}/> */}\r\n        <ChangePassword openModalChangePassword={openModalChangePassword} setOpenModalChangePassword={setOpenModalChangePassword} setIsDialogChangePasswordOpen={setIsDialogChangePasswordOpen}/>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, Redirect } from \"react-router-dom\";\n\nconst PrivateRoutes = (props) => {\n\n  const parseJwt = (token) => {\n    try {\n      return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n      return null;\n    }\n  };\n\n  const checkJWTExpire = () => {\n    let result = false;\n    const getJWT = localStorage.getItem('jwt');\n    if (getJWT) {\n      let decodeJWT = parseJwt(getJWT);\n      let currentDate = new Date();\n      console.log(decodeJWT.exp * 1000);\n      if (decodeJWT.exp * 1000 < currentDate.getTime()) {\n        //console.log('Token đã hết hạn hoặc không tồn tại')\n        localStorage.removeItem('jwt'); //xóa localStorage\n        localStorage.removeItem('userLogin');\n        sessionStorage.clear();\n        return result\n      }\n      else {\n        //console.log('token còn hạn');\n        result = true;\n        return result\n      }\n    }\n    else {\n      localStorage.removeItem('jwt'); //xóa localStorage\n      localStorage.removeItem('userLogin');\n      return result\n    }\n  }\n\n  const getToken = localStorage.getItem('jwt');\n  const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\n\n  if (getUserLogin && getToken) {\n    const result = checkJWTExpire();\n    if (result === false) {\n      return (\n        <>\n          <Redirect to='/login'></Redirect>\n        </>\n      )\n    }\n    else {\n      return (\n        <>\n          <Route path={props.path} component={props.component}></Route>\n        </>\n      );\n    }\n  }\n  else {\n    localStorage.removeItem('jwt'); //xóa localStorage\n    localStorage.removeItem('userLogin');\n    return (\n      <>\n        <Redirect to='/login'></Redirect>\n      </>\n    )\n  }\n};\nexport default PrivateRoutes;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../ErrorPage/Page500.scss\";\n\nconst Page404 = () => {\n\n  let history = useHistory();\n\n  return (\n    <div>\n      <div className=\"section\">\n        <h1 className=\"error\">404</h1>\n        <div className=\"page\">Trang mà bạn đang truy cập không tồn tại.</div>\n      </div>\n    </div>\n  );\n};\nexport default Page404;\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nfunction Home() {\r\n\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    return (\r\n        <Container> \r\n            <Box sx={{mt: 1}}>\r\n                {loading === false && user && user.isLogin ?\r\n                    user.positionName === 'Nursing' ? \r\n                        <>\r\n                            <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>Nếu bạn thấy dòng chữ này hãy nhấn vào <span style={{fontWeight: 'bolder', color: 'blue'}}>\"Đăng ký khám\"</span> ở thanh menu có logo của bệnh viện để chuyển về trang đăng ký khám</Typography>\r\n                        </>\r\n                    :\r\n                        user.positionName === 'Doctor' ? \r\n                            <>\r\n                                <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>{`Kiểm tra thanh menu (có logo của bệnh viện) bên góc phải có hiện tên người dùng`}</Typography> \r\n                                <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>Nếu đúng tên bác sĩ đang khám hãy nhấn vào <span style={{fontWeight: 'bolder', color: 'blue'}}>\"Khám bệnh\"</span> để chuyển về trang khám bệnh</Typography>\r\n                                <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>Nếu sai tên bác sĩ đang khám hãy nhấn vào tên người dùng đó sẽ hiện ra menu nhỏ, nhấn đăng xuất</Typography>       \r\n                            </>\r\n                        :\r\n                            null\r\n                :\r\n                    <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>Nhấn vào <span style={{fontWeight: 'bolder', color: 'blue'}}>\"Đăng nhập\"</span> trên thanh menu (có logo của bệnh viện) bên góc phải</Typography> \r\n                }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState, useContext, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CreateAccount = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleCloseModalRegister = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalRegister(false);\r\n      }\r\n    }\r\n\r\n    const position = [\r\n      {id: '1', positionName: 'Điều dưỡng'},\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n          <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalRegister} onClose={(event, reason) => handleCloseModalRegister(event, reason)} disableEscapeKeyDown={true}  >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n            <IconButton onClick={() => handleCloseModalRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n              <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} />\r\n              <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }}/>\r\n              <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '46ch', mb: 2.5 }} \r\n                InputProps={{ // <-- This is where the toggle button is added.\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <Autocomplete options={position.map((option) => option.positionName)} renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} sx={{ width: '45.95ch', mb: 2.5 }}/>\r\n              <Stack spacing={2} direction=\"column\">\r\n                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleCloseModalRegister()}>Tạo tài khoản</Button>\r\n              </Stack>\r\n            \r\n            </DialogContent>\r\n          </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAccount","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst createMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/Register`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createMedicalBackRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/BackRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createCurrentDoctorExamining = async (userIdDoctor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/SetDoctorExaming/${userIdDoctor}`, \r\n        {}, // Body của request, có thể là {} hoặc object\r\n        {\r\n            headers: {\r\n                \"content-type\": \"text/plain; charset=utf-8\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddPredecessor = async (dataPredecessor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddPredecessor`, dataPredecessor,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddMedicalBook = async (dataMedicalBook) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddMedicalBook`, dataMedicalBook,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createNotificationForMedicalRegister = async () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const medicalRegisterMessage = true\r\n    return await axios.post(`${backendURL}/api/Notification/SendSignalRGroup?groupId=doctor`, medicalRegisterMessage,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getRegistersByDateNow = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetRegistersByDateNow`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveRegister = async (dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveOldRegister = async (dayOfBirth, patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}&patientId=${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListOldDisease = async (patientCode, phone, fullName, dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/SearchPatients?patientCode=${patientCode}&phone=${phone}&fullName=${fullName}&dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getVaccinationByPatientId = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetVaccinationByPatientId/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getCurrentDoctorExamining = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetDoctorExamining`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalDetailPatient = async (id) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/DetailPatient/${id}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalBook = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetMediacalBook?medicalRegisterId=${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdatePredecessor = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdatePredecessor/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdateMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdateMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentDate = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentDate/${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentsNextWeek = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsNextWeek`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getAppointmentsToday = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsToday`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst updateMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/EditRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateMedicalState = async (id, state) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateState?id=${id}&state=${state}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateStateAppointment = async (dataAppointment, stateAppointment) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateStateAppointment/${dataAppointment.medicalBookId}?appointmentDate=${dataAppointment.appointmentDate}&stateAppointment=${stateAppointment}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst deleteMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.delete(`${backendURL}/api/Medical/DeleteMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    createMedicalRegister, createMedicalBackRegister, createCurrentDoctorExamining, createAddPredecessor, createAddMedicalBook, createNotificationForMedicalRegister,\r\n    getRegistersByDateNow, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister, getListOldDisease, getVaccinationByPatientId, getCurrentDoctorExamining, getMedicalDetailPatient, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook, getAppointmentDate, getAppointmentsNextWeek, getAppointmentsToday,\r\n    updateMedicalRegister, updateMedicalState, updateStateAppointment,\r\n    deleteMedicalBook\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Register from '../ManageRegister/Register';\r\nimport { toast } from 'react-toastify';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//api\r\nimport { userLogin } from '../../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n//signal\r\nimport { startSignalRConnection } from '../../Service/SignalService';\r\n\r\nconst Login = () => {\r\n    const { user, loginContext } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [userAccount, setUserAccount] = useState({userName: '', password: ''})\r\n    const [openModalRegister, setOpenModalRegister] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const onChangeUserName = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                userName: value\r\n            }\r\n        }) \r\n    }\r\n\r\n    const onChangeUserPassword = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                password: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if(userAccount.userName === ''){\r\n            toast.error('Bạn chưa nhập tài khoản!')\r\n        }\r\n        else if(userAccount.password === ''){\r\n            toast.error('Bạn chưa nhập mật khẩu!');\r\n        }\r\n        else{\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const response = await userLogin(userAccount.userName, userAccount.password);\r\n            if(response.status !== 200){\r\n                toast.error(response.data);\r\n                setOpenAlertProcessingBackdrop(false);\r\n            }\r\n            else{\r\n                if(response.data.positionName === 'Doctor'){\r\n                    await startSignalRConnection(response.data.tokenDTO.token);\r\n                }\r\n\r\n                localStorage.setItem('jwt', response.data.tokenDTO.token)\r\n                const userLogin = {\r\n                    isAuthenticated: true, \r\n                    isLogin: true, \r\n                    userId: response.data.userId,\r\n                    userName: response.data.userName, \r\n                    userFullName: response.data.userFullName, \r\n                    positionName: response.data.positionName\r\n                }\r\n\r\n                localStorage.setItem('userLogin', JSON.stringify(userLogin))\r\n                loginContext(userLogin);\r\n                   \r\n                if(response.data.positionName === 'Nursing'){\r\n                    history.push('/medicalregister');\r\n                }\r\n                else if(response.data.positionName === 'Doctor'){\r\n                    history.push('/doctor-examining');\r\n                }\r\n                else if(response.data.positionName === 'Admin'){\r\n                    history.push('/dashboard');\r\n                }\r\n                setOpenAlertProcessingBackdrop(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleLogin();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAuthenticated === true) {\r\n            history.push('/');\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        const userLogin = localStorage.getItem('userLogin');\r\n        if (token && userLogin) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(openAlertProcessingBackdrop){\r\n                event.preventDefault();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [openAlertProcessingBackdrop])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box sx={{ mt: 3, borderRadius: '25px' }} >\r\n                    <Box sx={{ p: 7.6 }}>\r\n                        <Avatar src={Logo} sx={{ width: 120, height: 120, ml: 'auto', mr: 'auto', mb: 2 }} />\r\n                        <Typography sx={{ textAlign: 'center', textTransform: 'uppercase', fontWeight: 'bolder', fontSize: '1.15rem', mb: 2, color: '#4caf50' }} variant=\"h5\">Chương trình khám nhi khoa phát triển</Typography>\r\n                        <Box component=\"form\" autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                            <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                            <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 3 }} \r\n                            onChange={(e) => onChangeUserPassword(e.target.value)} onKeyDown={(e) => handlePressEnter(e)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6.5vh', width: '28ch' }} variant=\"contained\" style={{ margin: 'auto' }} onClick={(e) => handleLogin()}>Đăng nhập</Button>\r\n                                {/* <Typography sx={{textAlign: 'center', color: 'red', fontSize: '18px'}} variant=\"subtitle1\"><strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Quên mật khẩu</strong></Typography> */}\r\n                                {/* <Typography sx={{textAlign: 'center', mt: '10px !important'}} variant=\"subtitle1\">Chưa có tài khoản? <strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Đăng ký</strong></Typography> */}\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Register\r\n                openModalRegister={openModalRegister} setOpenModalRegister={setOpenModalRegister}\r\n            />\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang đăng nhập'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessing(props) {\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={props.openAlertProcessing} disableEscapeKeyDown={true}>\r\n                <DialogContent>\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <CircularProgress/>\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang xử lý...</Typography>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertProcessing","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getListProvince = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/ListProvince`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListDistrict = async (provinceId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListDistrictByIdProvince/${provinceId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListWard = async (districtId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListWardByIdDistrict/${districtId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getFullAddressByIdWard = async (codeWard) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetFullAddressByIdWard/${codeWard}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getListProvince, getListDistrict, getListWard, getFullAddressByIdWard\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport { Autocomplete } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//lodash\r\nimport _ from 'lodash';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { updateMedicalRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalService';\r\n\r\nfunction ManageInfoPantients(props) {\r\n  const dataPatientInfoDefault = {\r\n    examinationId: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    headCircumference: \"\",\r\n    reason: \"\",\r\n    vaccination: false,\r\n    id: \"\",\r\n    patient: {\r\n      identifier: \"\",\r\n      address: \"\",\r\n      fullName: \"\",\r\n      dayOfBirth: null,\r\n      codeWard: \"\",\r\n      gender: true,\r\n      fullNameMother: \"\",\r\n      phoneMother: \"\",\r\n      fullNameFather: \"\",\r\n      phoneFather: \"\",\r\n      patientId: \"\"\r\n    }\r\n  }\r\n\r\n  const dataPatientInfoErrorDefault = {\r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    examiningSession: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n  } \r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const selectedAutoCompleteDefault = { \r\n    gender: { value: null, openOption: false }, \r\n    examiningSession: {value: null, openOption: false, loading: false},\r\n    province: { value: null, openOption: false }, \r\n    district: { value: null, openOption: false }, \r\n    ward: { value: null, openOption: false },\r\n  }\r\n\r\n  const typingRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  const [dataPatientInfoNotEdit, setDataPatientInfoNotEdit] = useState();\r\n  const [dataPatientInfo, setDataPatientInfo] = useState(dataPatientInfoDefault);\r\n  const [dataPatientInfoError, setDataPatientInfoError] = useState(dataPatientInfoErrorDefault);\r\n    \r\n  const [selectedAutoComplete, setSelectedAutoComplete] = useState(selectedAutoCompleteDefault);\r\n\r\n  const [listExaminingSession, setListExaminingSession] = useState([]);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f',\r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -8],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.gender.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'ExaminingSession'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.examiningSession.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else{\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      //const _dataPatientInfoError = {...dataPatientInfoError};\r\n      // if(fieldName === 'patientId'){\r\n      //   _dataPatientInfoError.patientId.title = '';\r\n      //   _dataPatientInfoError.patientId.openTooltip = false;\r\n      //   setDataPatientInfoError(_dataPatientInfoError);\r\n      // }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.dayOfBirth.title = '';\r\n      //     _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientInfoError.dayOfBirth.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneMother.title = '';\r\n      //     _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneMother.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneFather'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneFather.title = '';\r\n      //     _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneFather.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'Gender'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.gender.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'ExaminingSession'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n      //     prevSelectedAutoComplete.examiningSession.openOption = false\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Province'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.province.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'District'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.district.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Ward'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.ward.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.gender.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'ExaminingSession'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n          prevSelectedAutoComplete.examiningSession.openOption = false\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.district.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.ward.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n  \r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n  \r\n      return (lowercasedFullName.includes(lowercasedInput) || initials.includes(lowercasedInput));\r\n    });\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientInfoError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientInfoError.identifier.openTooltip = true;\r\n          _dataPatientInfoError.identifier.isError = true;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n        else{\r\n          setDataPatientInfo(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientInfoError.identifier.title = '';\r\n          _dataPatientInfoError.identifier.openTooltip = false;\r\n          _dataPatientInfoError.identifier.isError = false;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.identifier.title = '';\r\n      _dataPatientInfoError.identifier.openTooltip = false;\r\n      _dataPatientInfoError.identifier.isError = false;\r\n      _dataPatientInfoError.identifier.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n    \r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.fullName = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n    \r\n      if(dataPatientInfoError.fullName.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullName.title = '';\r\n        _dataPatientInfoError.fullName.openTooltip = false;\r\n        _dataPatientInfoError.fullName.isError = false;\r\n        _dataPatientInfoError.fullName.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = async (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n    \r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n            \r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n    \r\n        if(today < takenValue || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientInfoError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n          _dataPatientInfoError.dayOfBirth.isError = true;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n    \r\n        else{\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.dayOfBirth = formattedDate\r\n            return {...prevDataPatientInfo}\r\n          })\r\n    \r\n          _dataPatientInfoError.dayOfBirth.title = '';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n          _dataPatientInfoError.dayOfBirth.isError = false;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n\r\n          onChangeDOBToGetExaminingSession(formattedDate);\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onChangeDOBToGetExaminingSession = async (formattedDate) => {\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.value = null\r\n      return {...prevSelectedAutoComplete}\r\n    })\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = true\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(formattedDate);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = false\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.patient.gender = value.genderValue\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n    \r\n    if(dataPatientInfoError.gender.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.gender.isError = false;\r\n      _dataPatientInfoError.gender.title = '';\r\n      _dataPatientInfoError.gender.openTooltip = false;\r\n      _dataPatientInfoError.gender.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectExaminingSession = (e, value) => {\r\n    if(focusField === 'examiningSession'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.examinationId = value.id\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.examiningSession.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(dataPatientInfoError.examiningSession.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.examiningSession.isError = false;\r\n      _dataPatientInfoError.examiningSession.title = '';\r\n      _dataPatientInfoError.examiningSession.openTooltip = false;\r\n      _dataPatientInfoError.examiningSession.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.province.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(selectedAutoComplete.district.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.province.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.province.isError = false;\r\n      _dataPatientInfoError.province.title = '';\r\n      _dataPatientInfoError.province.openTooltip = false;\r\n      _dataPatientInfoError.province.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.district.value = value;\r\n      return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.district.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.district.isError = false;\r\n      _dataPatientInfoError.district.title = '';\r\n      _dataPatientInfoError.district.openTooltip = false;\r\n      _dataPatientInfoError.district.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n\r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.codeWard = value.code\r\n      return { ...prevDataPatientInfo }\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.ward.value = value;\r\n        return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(dataPatientInfoError.ward.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.ward.isError = false;\r\n      _dataPatientInfoError.ward.title = '';\r\n      _dataPatientInfoError.ward.openTooltip = false;\r\n      _dataPatientInfoError.ward.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    if(focusField === 'address'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.address = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.address.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.address.isError = false;\r\n        _dataPatientInfoError.address.title = '';\r\n        _dataPatientInfoError.address.openTooltip = false;\r\n        _dataPatientInfoError.address.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    if(focusField === 'fullNameMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameMother = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(focusField === 'phoneMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneMother.openTooltip = true;\r\n          _dataPatientInfoError.phoneMother.isError = true;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n          \r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneMother = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n      \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n      \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 10)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneMother.title = '';\r\n      _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      _dataPatientInfoError.phoneMother.isError = false;\r\n      _dataPatientInfoError.phoneMother.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameFather = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneFather.openTooltip = true;\r\n          _dataPatientInfoError.phoneFather.isError = true;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n\r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneFather = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n                \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n                \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneFather.title = '';\r\n      _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      _dataPatientInfoError.phoneFather.isError = false;\r\n      _dataPatientInfoError.phoneFather.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    if(focusField === 'height'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.height = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.height.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.height.title = '';\r\n        _dataPatientInfoError.height.openTooltip = false;\r\n        _dataPatientInfoError.height.isError = false;\r\n        _dataPatientInfoError.height.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    if(focusField === 'weight'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.weight = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.weight.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.weight.title = '';\r\n        _dataPatientInfoError.weight.openTooltip = false;\r\n        _dataPatientInfoError.weight.isError = false;\r\n        _dataPatientInfoError.weight.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    if(focusField === 'headCircumference'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.headCircumference = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.headCircumference.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.headCircumference.title = '';\r\n        _dataPatientInfoError.headCircumference.openTooltip = false;\r\n        _dataPatientInfoError.headCircumference.isError = false;\r\n        _dataPatientInfoError.headCircumference.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.vaccination = bool\r\n      return {...prevDataPatientInfo}\r\n    })\r\n  }\r\n\r\n  const handleCloseModalInfoPantients = (event, reason) => {\r\n    if(reason && reason === \"backdropClick\"){\r\n      return;\r\n    }\r\n    else{\r\n      setListDistrict(prevListDistrict => {\r\n        prevListDistrict.loading = false\r\n        prevListDistrict.list = []\r\n        return {...prevListDistrict}\r\n      })\r\n      setListWard(prevListWard => {\r\n        prevListWard.loading = false\r\n        prevListWard.list = []\r\n        return {...prevListWard}\r\n      })\r\n      setListExaminingSession([]);\r\n      setSelectedAutoComplete(selectedAutoCompleteDefault);\r\n      setDataPatientInfo(dataPatientInfoDefault);\r\n      setDataPatientInfoNotEdit('');\r\n      setDataPatientInfoError(dataPatientInfoErrorDefault);\r\n      setLoading(true);\r\n      props.setSelectedPantientInfo();\r\n      props.setOpenModalInfoPantients(false);\r\n    }\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const responseListProvince = await getListProvince();\r\n    setListProvince(responseListProvince);\r\n  }\r\n\r\n  const handleApplyPantientDataToField = async () => {\r\n    setOpenAlertProcessing(true);   \r\n      \r\n    const editPropsDataPatientInfo = {...dataPatientInfo};\r\n    editPropsDataPatientInfo.examinationId = props.selectedPantientInfo.examinationId\r\n    editPropsDataPatientInfo.height = props.selectedPantientInfo.height\r\n    editPropsDataPatientInfo.weight = props.selectedPantientInfo.weight\r\n    editPropsDataPatientInfo.headCircumference = props.selectedPantientInfo.headCircumference\r\n    editPropsDataPatientInfo.reason = props.selectedPantientInfo.reason\r\n    editPropsDataPatientInfo.vaccination = props.selectedPantientInfo.vaccination\r\n    editPropsDataPatientInfo.id = props.selectedPantientInfo.id\r\n    editPropsDataPatientInfo.patient.identifier = props.selectedPantientInfo.patient.identifier\r\n    editPropsDataPatientInfo.patient.address = props.selectedPantientInfo.patient.address\r\n    editPropsDataPatientInfo.patient.fullName = props.selectedPantientInfo.patient.fullName\r\n    editPropsDataPatientInfo.patient.dayOfBirth = props.selectedPantientInfo.patient.dayOfBirth\r\n    editPropsDataPatientInfo.patient.codeWard = props.selectedPantientInfo.patient.codeWard\r\n    editPropsDataPatientInfo.patient.gender = props.selectedPantientInfo.patient.gender\r\n    editPropsDataPatientInfo.patient.fullNameMother = props.selectedPantientInfo.patient.fullNameMother\r\n    editPropsDataPatientInfo.patient.phoneMother = props.selectedPantientInfo.patient.phoneMother\r\n    editPropsDataPatientInfo.patient.fullNameFather = props.selectedPantientInfo.patient.fullNameFather\r\n    editPropsDataPatientInfo.patient.phoneFather = props.selectedPantientInfo.patient.phoneFather\r\n    editPropsDataPatientInfo.patient.patientId = props.selectedPantientInfo.patient.patientId\r\n\r\n    setDataPatientInfo(_.cloneDeep(editPropsDataPatientInfo));\r\n    setDataPatientInfoNotEdit(_.cloneDeep(editPropsDataPatientInfo));\r\n        \r\n    const response = await getFullAddressByIdWard(props.selectedPantientInfo.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.list = responseListDistrict;\r\n      return {...prevListDistrict}\r\n    });\r\n    const responseListWard = await getListWard(response.districtCode);\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = responseListWard;\r\n      return {...prevListWard}\r\n    });\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(props.selectedPantientInfo.patient.dayOfBirth);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n     \r\n    const selectedGender = listGender.find(gender => gender.genderValue === props.selectedPantientInfo.patient.gender);\r\n    const indexListExamining = responseListMedicalExaminationsGiveRegister.exams.findIndex(examiningSession => examiningSession.id === props.selectedPantientInfo.examinationId)\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = selectedGender\r\n      prevSelectedAutoComplete.examiningSession.value = responseListMedicalExaminationsGiveRegister.exams[indexListExamining];\r\n      prevSelectedAutoComplete.province.value = listProvince[indexListProvince];\r\n      prevSelectedAutoComplete.district.value = responseListDistrict[indexListDistrict];\r\n      prevSelectedAutoComplete.ward.value = responseListWard[indexListWard];\r\n      return prevSelectedAutoComplete\r\n    })\r\n\r\n    setLoading(false);\r\n    setOpenAlertProcessing(false);   \r\n  }\r\n\r\n  const checkValidate = () => {\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      let isValid = true;\r\n\r\n      if(dataPatientInfoError.identifier.title !== ''){\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.identifier.focus = true;\r\n          setFocusField('identifier');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullName === ''){\r\n        _dataPatientInfoError.fullName.title = 'Bạn chưa nhập họ tên';\r\n        _dataPatientInfoError.fullName.openTooltip = true;\r\n        _dataPatientInfoError.fullName.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullName.focus = true;\r\n          setFocusField('fullName');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(dataPatientInfo.patient.gender === ''){\r\n        _dataPatientInfoError.gender.title = 'Bạn chưa chọn giới tính';\r\n        _dataPatientInfoError.gender.isError = true;\r\n        _dataPatientInfoError.gender.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.gender.focus = true;\r\n          setFocusField('gender');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.dayOfBirth === ''){\r\n        _dataPatientInfoError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfoError.dayOfBirth.title !== ''){\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.examiningSession.value === null){\r\n        _dataPatientInfoError.examiningSession.title = 'Bạn chưa chọn lại kỳ khám';\r\n        _dataPatientInfoError.examiningSession.isError = true;\r\n        _dataPatientInfoError.examiningSession.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.examiningSession.focus = true;\r\n          setFocusField('examiningSession');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.province.value === null){\r\n        _dataPatientInfoError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n        _dataPatientInfoError.province.isError = true;\r\n        _dataPatientInfoError.province.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.province.focus = true;\r\n          setFocusField('province');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.district.value === null){\r\n        _dataPatientInfoError.district.title = 'Bạn chưa chọn quận huyện';\r\n        _dataPatientInfoError.district.isError = true;\r\n        _dataPatientInfoError.district.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.district.focus = true;\r\n          setFocusField('district');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.ward.value === null){\r\n        _dataPatientInfoError.ward.title = 'Bạn chưa chọn phường xã';\r\n        _dataPatientInfoError.ward.isError = true;\r\n        _dataPatientInfoError.ward.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.ward.focus = true;\r\n          setFocusField('ward');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.address === ''){\r\n        _dataPatientInfoError.address.title = 'Bạn chưa nhập địa chỉ';\r\n        _dataPatientInfoError.address.isError = true;\r\n        _dataPatientInfoError.address.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.address.focus = true;\r\n          setFocusField('address');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullNameMother === '' && dataPatientInfo.patient.fullNameFather === ''){\r\n        _dataPatientInfoError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n        _dataPatientInfoError.fullNameMother.isError = true;\r\n        _dataPatientInfoError.fullNameMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullNameMother.focus = true;\r\n          setFocusField('fullNameMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.phoneMother === '' && dataPatientInfo.patient.phoneFather === ''){\r\n        _dataPatientInfoError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        _dataPatientInfoError.phoneMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneMother.title !== ''){\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneFather.title !== ''){\r\n        _dataPatientInfoError.phoneFather.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneFather.focus = true;\r\n          setFocusField('phoneFather');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.height === ''){\r\n        _dataPatientInfoError.height.title = 'Bạn chưa nhập chiều cao';\r\n        _dataPatientInfoError.height.isError = true;\r\n        _dataPatientInfoError.height.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.height.focus = true;\r\n          setFocusField('height');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.weight === ''){\r\n        _dataPatientInfoError.weight.title = 'Bạn chưa nhập cân nặng';\r\n        _dataPatientInfoError.weight.isError = true;\r\n        _dataPatientInfoError.weight.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.weight.focus = true;\r\n          setFocusField('weight');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.headCircumference === ''){\r\n        _dataPatientInfoError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n        _dataPatientInfoError.headCircumference.isError = true;\r\n        _dataPatientInfoError.headCircumference.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.headCircumference.focus = true;\r\n          setFocusField('headCircumference');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      // if(dataPatientInfo.reason === ''){\r\n      //   _dataPatientInfoError.reason.isError = true;\r\n      //   isValid = false;\r\n      // }\r\n\r\n      if(_.isEqual(dataPatientInfo, dataPatientInfoNotEdit) === true){\r\n        toast.warning('Hiện không có gì để cập nhật', {toastId: 'warning1'});\r\n        isValid = false;\r\n      }\r\n\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n      return isValid;\r\n  }\r\n\r\n  const handleUpdateMedicalRegister = async () => {\r\n    if(checkValidate()){\r\n      setOpenAlertProcessing(true);\r\n      const response = await updateMedicalRegister(dataPatientInfo);\r\n      if(response.status === 200){\r\n        toast.success(response.data, {toastId: 'success1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        props.setIsEditedInfo(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      else{\r\n        toast.error(response.data, {toastId: 'error1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      setOpenAlertProcessing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(listProvince.length === 0){\r\n      handleGetListProvince();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.selectedPantientInfo){\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n      handleApplyPantientDataToField();\r\n    }\r\n  }, [props.selectedPantientInfo])\r\n\r\n  useEffect(() => {\r\n    if(props.openModalInfoPantients && props.isContinueUpdateMedicalRegister && loading === false){\r\n      handleUpdateMedicalRegister();\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n    }\r\n  }, [props.isContinueUpdateMedicalRegister, loading])\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth={true} maxWidth='md' open={props.openModalInfoPantients} onClose={(event, reason) => handleCloseModalInfoPantients(event, reason)} >\r\n        <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center', color: 'blue' }}>Thông tin bệnh nhân</DialogTitle>\r\n        <IconButton onClick={() => handleCloseModalInfoPantients()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n          <CloseIcon fontSize='medium'/>\r\n        </IconButton>\r\n        <DialogContent dividers sx={{pt: 1.5, pb: 1.5}}>\r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', pl: 4.2, pr: 4.2, mb: 0.8}}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.identifier.title}</h6>} open={dataPatientInfoError.identifier.openTooltip} placement='left'> \r\n              <TextField error={true ? dataPatientInfoError.identifier.isError === true : false}\r\n                label=\"Mã định danh\" variant=\"outlined\" \r\n                sx={{width: '18%', '&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                inputProps={{ maxLength: 12 }}\r\n                inputRef={(input) => input && focusField === 'identifier' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.identifier}\r\n                onChange={(e) => onChangeIdentifier(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n                      \r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullName.title}</h6>} open={dataPatientInfoError.fullName.openTooltip} placement='top'\r\n              slotProps={{\r\n                popper: {\r\n                  modifiers: [\r\n                    {\r\n                      name: 'offset',\r\n                      options: { offset: [-10, -6], },\r\n                    },\r\n                  ],\r\n                },\r\n              }} \r\n            > \r\n              <TextField error={true ? dataPatientInfoError.fullName.isError === true : false}\r\n                label=\"Họ tên\" variant=\"outlined\" \r\n                sx={{width: '32%', '&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.fullName}\r\n                onChange={(e) => onChangeFullName(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.gender.title}</h6>} open={dataPatientInfoError.gender.openTooltip} placement='top'>\r\n              <Autocomplete \r\n                sx={{width: '12%', marginTop: '7.5px'}}\r\n                options={listGender} \r\n                getOptionLabel={(option) => option.genderName}\r\n                value={selectedAutoComplete.gender.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.genderName}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectGender(e, value)}\r\n                open={selectedAutoComplete.gender.openOption}\r\n                onFocus={() => handleFocus('Gender')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Giới tính\" \r\n                    inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                    error={true ? dataPatientInfoError.gender.isError === true : false}                     \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <DemoContainer components={['DatePicker']}>  \r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.dayOfBirth.title}</h6>} open={dataPatientInfoError.dayOfBirth.openTooltip}>    \r\n                  <Box sx={{width: 110}}>\r\n                    <DatePicker label=\"Ngày sinh\" \r\n                      format='DD/MM/YYYY' defaultValue={moment(dataPatientInfo.patient.dayOfBirth)}\r\n                      disableFuture={true} disableOpenPicker \r\n                      slotProps={{ \r\n                        textField: \r\n                          { \r\n                            inputRef: dateFieldRef,\r\n                            error: true ? dataPatientInfoError.dayOfBirth.isError === true : false,\r\n                            onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                          }\r\n                        }}\r\n                      onChange={(value) => onChangeDOB(value)}\r\n                    />\r\n                  </Box>\r\n                </Tooltip>\r\n              </DemoContainer>\r\n            </ThemeProvider>\r\n          </LocalizationProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.examiningSession.title}</h6>} open={dataPatientInfoError.examiningSession.openTooltip} placement='right'>\r\n              <Autocomplete \r\n                sx={{width: '18%', mt: '7.5px'}}\r\n                options={listExaminingSession} \r\n                noOptionsText={selectedAutoComplete.examiningSession.loading ? 'Đang tải...' : ''}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.examiningSession.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectExaminingSession(e, value)}\r\n                open={selectedAutoComplete.examiningSession.openOption}\r\n                onFocus={() => handleFocus('ExaminingSession')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'ExaminingSession')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Kỳ khám\" \r\n                    inputRef={(input) => input && focusField === 'examiningSession' && input.focus()}\r\n                    error={true ? dataPatientInfoError.examiningSession.isError === true : false} \r\n                    sx={{'& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot': {pl: '6px', pr: '6px'}}}\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      endAdornment: (\r\n                        <>\r\n                          {selectedAutoComplete.examiningSession.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </>\r\n                      ),\r\n                    }} \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.province.title}</h6>} open={dataPatientInfoError.province.openTooltip} placement='left'>\r\n              <Autocomplete \r\n                sx={{width: '20%', mt: 2}}\r\n                options={listProvince} \r\n                filterOptions={filterOptions}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.province.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectProvine(e, value)}\r\n                open={selectedAutoComplete.province.openOption}\r\n                onFocus={() => handleFocus('Province')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Thành phố\"\r\n                    inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                    error={true ? dataPatientInfoError.province.isError === true : false}  \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.district.title}</h6>} open={dataPatientInfoError.district.openTooltip} placement='top'>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listDistrict.list} \r\n                  noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.district.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectDistrict(e, value)}\r\n                  open={selectedAutoComplete.district.openOption}\r\n                  onFocus={() => handleFocus('District')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Quận/huyện\" \r\n                      inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                      error={true ? dataPatientInfoError.district.isError === true : false} \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.ward.title}</h6>} open={dataPatientInfoError.ward.openTooltip}>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listWard.list}\r\n                  noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.ward.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectWard(e, value)}\r\n                  open={selectedAutoComplete.ward.openOption}\r\n                  onFocus={() => handleFocus('Ward')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Phường/Xã\" \r\n                      inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                      error={true ? dataPatientInfoError.ward.isError === true : false}  \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.address.title}</h6>} open={dataPatientInfoError.address.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.address.isError === true : false}\r\n                  label=\"Địa chỉ\" variant=\"outlined\" \r\n                  sx={{width: '36%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.address}\r\n                  onChange={(e) => onChangeAddress(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullNameMother.title}</h6>} open={dataPatientInfoError.fullNameMother.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.fullNameMother.isError === true : false}\r\n                  label=\"Họ tên mẹ\" variant=\"outlined\" \r\n                  sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.fullNameMother}\r\n                  onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                />    \r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneMother.title}</h6>} open={dataPatientInfoError.phoneMother.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.phoneMother.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneMother}\r\n                  onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <TextField \r\n              label=\"Họ tên cha\" variant=\"outlined\" sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n              defaultValue={dataPatientInfo.patient.fullNameFather}\r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n            />\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneFather.title}</h6>} open={dataPatientInfoError.phoneFather.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.phoneFather.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneFather}\r\n                  onChange={(e) => onChangePhoneFather(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.height.title}</h6>} open={dataPatientInfoError.height.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.height.isError === true : false}\r\n                  label='Chiều cao' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.height}\r\n                  onChange={(e) => onChangeHeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.weight.title}</h6>} open={dataPatientInfoError.weight.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.weight.isError === true : false}\r\n                  label='Cân nặng' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(kg)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.weight}\r\n                  onChange={(e) => onChangeWeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.headCircumference.title}</h6>} open={dataPatientInfoError.headCircumference.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.headCircumference.isError === true : false}\r\n                  label='Vòng đầu' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.headCircumference}\r\n                  onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <FormControlLabel sx={{width: '30%', mt: 2}} control={<Checkbox checked={dataPatientInfo.vaccination}/>} \r\n              label=\"Có tham gia tiêm ngừa\"\r\n              onChange={(e) => onChangeVaccination(e.target.checked)}\r\n            />  \r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{justifyContent: 'center'}}>\r\n          <Button variant=\"contained\" onClick={() => handleUpdateMedicalRegister()}>Sửa (F1)</Button>\r\n          <Button variant=\"contained\" color='secondary' onClick={(event, reason) => handleCloseModalInfoPantients(event, reason)}>Đóng (ESC)</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <AlertProcessing openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageInfoPantients","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//info pantients modal\r\nimport ManageInfoPantients from '../ManageInfoPantients/ManageInfoPantients';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//mui theme\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CachedIcon from '@mui/icons-material/Cached';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getRegistersByDateNow, getAppointmentsToday, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction ListPatientsRegister(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n  const [listPantientChipState, setListPantientChipState] = useState(\r\n    [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n    ]\r\n  )\r\n\r\n  const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n  \r\n  const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n  const [listDataPatientsAppointmentsToday, setListDataPatientsAppointmentsToday] = useState([]); \r\n  \r\n  const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n  const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n  const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n  const [selectedPantientInfo, setSelectedPantientInfo] = useState();\r\n  const [openModalInfoPantients, setOpenModalInfoPantients] = useState(false);\r\n  const [isContinueUpdateMedicalRegister, setIsContinueUpdateMedicalRegister] = useState();\r\n\r\n  const [isEditedInfo, setIsEditedInfo] = useState(false);\r\n\r\n  const renderPatientsStatus = (state) => {\r\n    if(state === 0 || state === 3){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterWaiting' />\r\n        </>\r\n      )\r\n    }\r\n    else if(state === 1){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterExamining' />\r\n        </>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterDone' />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSelectedChip = (chipIndex, chipLabel) => {\r\n    setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n    if(chipIndex === 0){\r\n      const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n      setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n    }\r\n    else if(chipIndex === 1){\r\n      const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n      setListDataPatientsRegisterState(listPantientRegisterDone);\r\n    }\r\n    else if(chipIndex === 2){\r\n      setListDataPatientsRegisterSort(listDataPatientsAppointmentsToday);\r\n      setListDataPatientsRegisterState(listDataPatientsAppointmentsToday);\r\n    }\r\n  };\r\n\r\n  const handleSearchPantient = (value) => {\r\n    const takenValue = value;\r\n    setSearchPatientsQuery(takenValue);\r\n\r\n    if(value === ''){\r\n      setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n    }else{\r\n      setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n    }\r\n  }\r\n\r\n  const searchPatients = (patients, searchTerm) => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return patients.filter(patientObj => {\r\n      const { patientCode, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n      return patientCode.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n    });\r\n  }\r\n\r\n  const handleSelectedPantientInfo = (patientsRegisterSortItem) => {\r\n    setSelectedPantientInfo(patientsRegisterSortItem);\r\n    setIsContinueUpdateMedicalRegister(true);\r\n    setOpenModalInfoPantients(true);\r\n  }\r\n\r\n  const handleSelectedPantientAppointmentsToday = async (patientsRegisterSortItem) => {\r\n    setOpenAlertProcessingBackdrop(true);\r\n    const responseVaccinationByPatientId = await getVaccinationByPatientId(patientsRegisterSortItem.patient.patientId);\r\n    const dataPantientOldOldDiseaseRegister = {\r\n      examinationId: patientsRegisterSortItem.patient.nextExamId,\r\n      oldDisease: true,\r\n      height: '', \r\n      weight: '',\r\n      headCircumference: '',\r\n      reason: '',\r\n      vaccination: responseVaccinationByPatientId.vaccination,\r\n      medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n      userIdDoctor: '',\r\n      patient: patientsRegisterSortItem.patient\r\n    }\r\n    props.setDataPantientAppointmentsToday(dataPantientOldOldDiseaseRegister)\r\n    setOpenAlertProcessingBackdrop(false);\r\n  }\r\n\r\n  const handleGetRegistersByDateNow = async () => {\r\n    setLoading(true);\r\n\r\n    const response = await getRegistersByDateNow();\r\n    const responseGetAppointmentsToday = await getAppointmentsToday();\r\n\r\n    let updatedList = [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: responseGetAppointmentsToday.length }\r\n    ]\r\n\r\n    let _listDataPatientsAppointmentsToday\r\n    if(responseGetAppointmentsToday.length > 0){\r\n      _listDataPatientsAppointmentsToday = responseGetAppointmentsToday.map((item) => {\r\n        const result = {\r\n          patient : {\r\n            identifier: item.identifier,\r\n            patientId: item.patientId,\r\n            patientCode: item.patientCode,\r\n            fullName: item.patientFullName,\r\n            gender: item.gender,\r\n            dayOfBirth: item.dateOfBirth,\r\n            fullNameMother: item.fullNameMother,\r\n            phoneMother: item.phoneMother,\r\n            fullNameFather: item.fullNameFather,\r\n            phoneFather: item.phoneFather,\r\n            address: item.address,\r\n            fullAddress: item.fullAddress,\r\n            codeWard: item.codeWard,\r\n            nextExamId: item.nextExamId\r\n          }\r\n        }\r\n        return result;\r\n      })\r\n      setListDataPatientsAppointmentsToday(_listDataPatientsAppointmentsToday);\r\n    }\r\n    else{\r\n      setListDataPatientsAppointmentsToday(responseGetAppointmentsToday)\r\n    }\r\n\r\n    if(response !== 400){\r\n      if(response.list.length !== 0){\r\n        setListDataPatientsRegister(response.list);\r\n        if(activeChip.chipOrder === 0){\r\n          const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám và tái khám\r\n          setListDataPatientsRegisterSort(_.cloneDeep(listPantientRegisterWaiting));\r\n          setListDataPatientsRegisterState(_.cloneDeep(listPantientRegisterWaiting));\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(_.cloneDeep(listPantientRegisterDone));\r\n          setListDataPatientsRegisterState(_.cloneDeep(listPantientRegisterDone));\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 2){\r\n          setListDataPatientsRegisterSort(_.cloneDeep(_listDataPatientsAppointmentsToday));\r\n          setListDataPatientsRegisterState(_.cloneDeep(_listDataPatientsAppointmentsToday));\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n      }\r\n    }\r\n    setListPantientChipState(updatedList);\r\n\r\n    if(isEditedInfo){\r\n      setIsEditedInfo(false);\r\n    }\r\n\r\n    props.setComponent1Loading(false);\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleReloadGetRegistersByDateNow = async () => {\r\n    props.setComponent1Loading(true);\r\n    await handleGetRegistersByDateNow();\r\n    props.setComponent1Loading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetRegistersByDateNow();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(openModalInfoPantients){\r\n      const handleKeyDown = (event) => {\r\n        if(event.keyCode === 112){\r\n          event.preventDefault()\r\n          setIsContinueUpdateMedicalRegister(true);\r\n          //nhấn F1 để sửa thông tin đăng ký khám\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [openModalInfoPantients, isContinueUpdateMedicalRegister]);\r\n\r\n  useEffect(() => {\r\n    if(isEditedInfo){\r\n      handleGetRegistersByDateNow();\r\n    }\r\n  }, [isEditedInfo, listDataPatientsRegister, listDataPatientsRegisterSort])\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true && isEditedInfo === false){\r\n      setListDataPatientsRegister([]);\r\n      setListDataPatientsRegisterSort([]);\r\n      setListDataPatientsRegisterState([]);\r\n      handleGetRegistersByDateNow();\r\n      props.setCompleteMedicalRegister(false);\r\n    }\r\n  }, [props.completeMedicalRegister, listDataPatientsRegister, listDataPatientsRegisterSort])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{p: 0}}>\r\n        {/* <Typography variant='h6' sx={{color: 'red', mb: 0, fontWeight: 'bolder', fontSize: '1.16rem', marginBottom: '5px'}}>\r\n          {loading ? \r\n            <Skeleton /> \r\n          : \r\n            <div style={{display: 'flex', height: '30px'}}>\r\n              {props.currentDoctorExamining.userIdDoctor !== '' ?\r\n              <>\r\n                <Typography variant='subbtitle1'>{`Bác sĩ khám hôm nay: ${props.currentDoctorExamining.userFullName}`}</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Sửa'/>\r\n              </>\r\n              :\r\n              <>\r\n                <Typography variant='subbtitle1'>Chưa chọn bác sĩ khám hôm nay</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Thêm'/>\r\n              </>}\r\n            </div>\r\n          }\r\n        </Typography> */}\r\n\r\n        <div className='container' style={{border: '1px solid #fff', borderRadius: '10px', height: '590px', padding: 0, boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)'}}>\r\n          {loading ? \r\n             <>\r\n              <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                <CircularProgress/>\r\n                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n              </Box>        \r\n            </>\r\n          :\r\n            <>\r\n              <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                  <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                    <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                      onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                  </Badge>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Box sx={{mt: 0.2, position: 'relative', display: 'flex', justifyContent: 'center', flexDirection: 'column'}}> \r\n                <Typography variant=\"subtitle2\" sx={{textAlign: 'center', mt: 0.2, fontSize: '1rem'}}>Nếu không tìm thấy bệnh nhân, hãy nhấn nút tải lại phía dưới</Typography>\r\n                <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                <CachedIcon sx={{color: 'brown', fontWeight: 'bolder', position: 'absolute', right: 75, top: 30, fontSize: '2.5rem', cursor: 'pointer'}} titleAccess='Tải lại' onClick={() => handleReloadGetRegistersByDateNow()}/>\r\n              </Box>\r\n            \r\n              <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                <TextField sx={{mt: 0.2, mb: 1, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                  variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc SĐT' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    startAdornment: (\r\n                      <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                    ),\r\n                    endAdornment: (\r\n                      <InputAdornment position='end'>\r\n                        {searchPatientsQuery !== '' ? \r\n                          <CloseIcon sx={{cursor: 'pointer'}} \r\n                            titleAccess='Xóa'\r\n                            onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                          /> \r\n                        : \r\n                          null\r\n                        }\r\n                      </InputAdornment>  \r\n                    )\r\n                  }}>\r\n                </TextField>\r\n              </Box>\r\n\r\n              <TableContainer component={Paper} sx={{ height: '440px', overflowX: 'scroll', borderBottomLeftRadius: '10px', borderBottomRightRadius: '10px' }}>\r\n                <Table stickyHeader sx={{ minWidth: 1200 }}>\r\n                  <TableHead>\r\n                    <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                      {activeChip.chipOrder === 2 ? \r\n                        null\r\n                      :\r\n                        <>\r\n                          <TableCell align=\"left\" sx={{fontSize: '0.95rem', p: '10px'}}>Trạng thái</TableCell>\r\n                          <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                        </>\r\n                      }\r\n                      <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {listDataPatientsRegisterSort.length !== 0 ?\r\n                      <>\r\n                        {listDataPatientsRegisterSort.map((patientsRegisterSortItem, patientsRegisterSortIndex) => (\r\n                          <TableRow hover role=\"checkbox\" key={patientsRegisterSortIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => activeChip.chipOrder === 2 ? handleSelectedPantientAppointmentsToday(patientsRegisterSortItem) : handleSelectedPantientInfo(patientsRegisterSortItem)}>\r\n                            {activeChip.chipOrder === 2 ? \r\n                              null\r\n                            :\r\n                              <>\r\n                                <TableCell align='center' sx={{width: '90px'}}>\r\n                                  <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.state === 0 || patientsRegisterSortItem.state === 3 ? 'Chờ khám' : patientsRegisterSortItem.state === 2 ? 'Đã khám' : 'Đang khám'}</Typography>} >\r\n                                    <span>{renderPatientsStatus(patientsRegisterSortItem.state)}</span>\r\n                                  </Tooltip>\r\n                                </TableCell>\r\n                                <TableCell align='left' sx={{width: '20px'}}>{patientsRegisterSortItem.order}</TableCell>\r\n                              </>\r\n                            }\r\n                            <TableCell align='left' sx={{width: '150px'}}>{patientsRegisterSortItem.patient.patientCode}</TableCell>\r\n                            <TableCell align='left' sx={{width: '200px'}}>{patientsRegisterSortItem.patient.fullName}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{patientsRegisterSortItem.patient.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{moment(patientsRegisterSortItem.patient.dayOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                            <TableCell align='left' sx={{width: '140px'}}>{patientsRegisterSortItem.patient.phoneMother !== '' ? patientsRegisterSortItem.patient.phoneMother : patientsRegisterSortItem.patient.phoneFather}</TableCell>\r\n                            <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 120}}>\r\n                              <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.patient.fullAddress}</Typography>} >\r\n                                <span>{patientsRegisterSortItem.patient.fullAddress}</span>\r\n                              </Tooltip>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))} \r\n                      </>\r\n                    :\r\n                      null\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </>\r\n          }\r\n        </div>\r\n      </Box>\r\n      \r\n      <AlertProcessingBackdrop openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n      />\r\n\r\n      <ManageInfoPantients \r\n        openModalInfoPantients={openModalInfoPantients} setOpenModalInfoPantients={setOpenModalInfoPantients}\r\n        selectedPantientInfo={selectedPantientInfo} setSelectedPantientInfo={setSelectedPantientInfo}\r\n        isContinueUpdateMedicalRegister={isContinueUpdateMedicalRegister} setIsContinueUpdateMedicalRegister={setIsContinueUpdateMedicalRegister}\r\n        setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        setIsEditedInfo={setIsEditedInfo}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListPatientsRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//modal\r\n// import AlertConfirmModal from '../ManageAlertConfirm/AlertConfirm';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//api\r\nimport { createMedicalRegister, createMedicalBackRegister, createNotificationForMedicalRegister, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister } from '../../Service/MedicalService';\r\n\r\nfunction ExaminingSession(props) {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [listExaminingSession, setListExaminingSession] = useState(null);\r\n\r\n    const { isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n    const onChangeRadioSelect = (value) => {\r\n        props.dataPatientsRegister.examinationId = value;\r\n    }\r\n\r\n    const handleListMedicalExaminationsGiveRegister = async () =>  {\r\n        if(props.dataPatientsRegister.oldDisease){\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveOldRegister(props.dataPatientsRegister.patient.dayOfBirth, props.dataPatientsRegister.patient.patientId);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n        else{\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveRegister(props.dataPatientsRegister.patient.dayOfBirth);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    const handleMedicalRegister = async () => {\r\n        // //bệnh cũ\r\n        if(props.dataPatientsRegister.oldDisease === true && props.dataPatientsRegister.examinationId !== ''){\r\n            //là bênh mới đã đăng ký nhưng chưa từng khám bao giờ\r\n            if(listExaminingSession.isAppointment === false && listExaminingSession.oldExams.length === 0){\r\n                //setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                if(response.status === 200){\r\n                    await createNotificationForMedicalRegister();\r\n                    if(isOldDiseaseWithNullCodeWard){\r\n                        setIsOldDiseaseWithNullCodeWard(false);\r\n                    }\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n                setOpenAlertProcessing(false);\r\n            }\r\n            //có hẹn khám nhưng không nhắc khám hoặc đến trễ ngày hẹn khám\r\n            else{\r\n                //setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                if(response.status === 200){\r\n                    await createNotificationForMedicalRegister();\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n                setOpenAlertProcessing(false);\r\n            }\r\n        }\r\n        //bệnh mới\r\n        else{\r\n            //setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalRegister(props.dataPatientsRegister);\r\n\r\n            if(response.status === 200){\r\n                await createNotificationForMedicalRegister();\r\n                toast.success(response.data);\r\n                setListExaminingSession(null);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    const handleCloseConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n      };\r\n\r\n    const handleOpenConfirm = () => {\r\n        if(props.dataPatientsRegister.examinationId === ''){\r\n            // setIsConfirmOpen(false);\r\n            toast.error('Bạn chưa chọn kỳ khám', {toastId: 'error1'});\r\n        }\r\n        else{\r\n            //setIsConfirmOpen(true);\r\n            handleMedicalRegister();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.dataPatientsRegister.patient.dayOfBirth !== '' && props.openModalExaminingSession === true){\r\n            handleListMedicalExaminationsGiveRegister();\r\n        }\r\n    }, [props.openModalExaminingSession])\r\n\r\n    useEffect(() => {\r\n        if(props.isContinueSelectedExaminingSession === true){\r\n            //nhấn F2 để hoàn tất đăng ký khám\r\n            handleOpenConfirm();\r\n            props.setIsContinueSelectedExaminingSession(false);\r\n        }\r\n    }, [props.isContinueSelectedExaminingSession])\r\n\r\n    return (\r\n        <>\r\n            {listExaminingSession ? \r\n                <>\r\n                    <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalExaminingSession} disableEscapeKeyDown={true}>\r\n                        <DialogTitle \r\n                            sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'green', textTransform: 'uppercase' }}>\r\n                            {`${props.dataPatientsRegister.patient.fullName}, \r\n                            ${props.dataPatientsRegister.patient.gender === true ? 'Nam' : 'Nữ'}, \r\n                            ${listExaminingSession.monthsOfAge}`}\r\n                        </DialogTitle>\r\n\r\n                        <IconButton onClick={() => [props.setOpenModalExaminingSession(false), props.dataPatientsRegister.examinationId = '', setListExaminingSession(null)]} \r\n                            sx={{position: 'absolute', right: 5, top: 7}}>\r\n                                <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n\r\n                        <DialogContent dividers sx={{pl: '0px', pr: '0px'}}>\r\n                            <Grid container rowSpacing={0}>\r\n                                <Grid item xs={0.5}/>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid black', p: 1, height: '50vh', overflow: 'auto'}}>\r\n                                        <Typography variant='h6' sx={{fontWeight: 'bolder'}}>Lịch sử khám</Typography>\r\n                                        {listExaminingSession.oldExams ?\r\n                                            listExaminingSession.oldExams.map((oldExamItem, oldExamIndex) => (\r\n                                                <Typography key={oldExamIndex} variant='subtitle1'>{oldExamItem.name}</Typography>\r\n                                            ))\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </Box>  \r\n                                </Grid>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid red', p: 1, height: '50vh'}}>\r\n                                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', color: 'red'}}>Chọn kỳ khám</Typography>\r\n                                            <RadioGroup key={`${props.dataPatientsRegister.patient.patientCode}`} defaultValue={listExaminingSession.exams[0].id} onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                {listExaminingSession.exams.map((examItem, examIndex) => (\r\n                                                    <FormControlLabel key={`${examIndex}`} value={examItem.id} control={<Radio />} label={examItem.name} />\r\n                                                ))}\r\n                                            </RadioGroup>\r\n                                            <Button variant='contained' sx={{mt: 0.5}} onClick={() => handleOpenConfirm()}>Tiếp tục (F2)</Button> \r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </>\r\n            :\r\n                null\r\n            }\r\n\r\n            {/* <AlertConfirmModal \r\n                openAlertConfirmModal={isConfirmOpen} onCloseAlertConfirmModal={handleCloseConfirm} \r\n                onConfirmAlertConfirmModal={handleMedicalRegister} \r\n                titleConfirm=\"Đăng ký khám cho bệnh nhân?\"\r\n            /> */}\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExaminingSession","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListOldDisease, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDisease(props) {\r\n\r\n    const dataPatientsForSearchOldDiseaseDefault = {patientCode: '', phone: '', fullName: '', dayOfBirth: ''}\r\n    const dataPatientsForSearchOldDiseaseErrorDefault = {\r\n        patientCode: { title: '', isError: false, openTooltip: false, focus: false},\r\n        phone: { title: '', isError: false, openTooltip: false, focus: false },\r\n        fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n        dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n    \r\n    const [listFoundOldDisease, setListFoundOldDisease] = useState(null);\r\n    const [dataPatientsForSearchOldDisease, setDataPatientsForSearchOldDisease] = useState(dataPatientsForSearchOldDiseaseDefault);\r\n    const [dataPatientsForSearchOldDiseaseError, setDataPatientsForSearchOldDiseaseError] = useState(dataPatientsForSearchOldDiseaseErrorDefault);\r\n    const [focusField, setFocusField] = useState(null);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n\r\n    const dateFieldRef = useRef(null);\r\n    const formRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n    const tooltipTheme = createTheme({\r\n        components: {\r\n          MuiTooltip: {\r\n            defaultProps: {\r\n              placement: 'bottom',\r\n              arrow: true,\r\n              componentsProps: {\r\n                tooltip: {\r\n                  sx: {\r\n                    bgcolor: '#d32f2f',\r\n                  },\r\n                },\r\n                arrow: {\r\n                  sx: {\r\n                    color: '#d32f2f',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n    });\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key !== 'Enter') \r\n        {\r\n            event.preventDefault();\r\n        }\r\n        else if(event.key === 'Enter'){\r\n            handleEnterPress(event);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (value, fieldName) => {\r\n        if(value === '' || value === 'DD/MM/YYYY'){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(fieldName === 'patientCode'){\r\n                if(typingRef.current){\r\n                    clearInterval(typingRef.current);\r\n                }\r\n                \r\n                typingRef.current = setTimeout(() => {  \r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }, 10)\r\n                \r\n                if(focusField === 'patientCode'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'dayOfBirth'){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'dayOfBirth'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'phone'){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const onChangePatientId = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 8){\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.title = 'Mã bệnh nhân phải từ 8 đến 14 số';\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'patientCode'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.patientCode = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n    }\r\n\r\n    const onChangeFullName = (value) => {\r\n        if(focusField === 'fullName'){\r\n            setFocusField(null);\r\n        }\r\n\r\n        setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n            prevDataPatientsForSearchOldDisease.fullName = value;\r\n            return {...prevDataPatientsForSearchOldDisease}\r\n        })\r\n\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);      \r\n    }\r\n\r\n    const onChangeDayOfBirth = (value) => {\r\n        if(value){            \r\n            const date = value._d;\r\n            const today = new Date();\r\n            const yearsDifference = today.getFullYear() - date.getFullYear();\r\n            const monthsDifference = today.getMonth() - date.getMonth();\r\n            const daysDifference = today.getDate() - date.getDate();\r\n            const age = today.getFullYear() - date.getFullYear();\r\n\r\n            let totalMonths = yearsDifference * 12 + monthsDifference;\r\n            let totalDays = daysDifference;\r\n\r\n            if (daysDifference < 0) {\r\n                totalMonths -= 1;\r\n                totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n            }\r\n\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n\r\n            if(today < date || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = true;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n              }\r\n              else{\r\n                const formattedDate = moment(date).format('YYYY-MM-DD');\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.dayOfBirth = formattedDate;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangePhone = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 10){\r\n                    _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'phone'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.phone = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n\r\n\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 10){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.phone = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        }\r\n    }\r\n\r\n    const handleCloseModalOldDisease = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n          else{\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            setListFoundOldDisease(null);\r\n            setSelectedRowIndex(0);\r\n            props.setOpenModalOldDisease(false);\r\n        }\r\n    }\r\n\r\n    const handleResetField = () => {\r\n        formRef.current.reset();\r\n        const inputs = formRef.current.querySelectorAll('input, textarea');\r\n        inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n        setFocusField(null);\r\n    }\r\n\r\n    const validate = () => {\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        let isValid = true;\r\n\r\n        if(dataPatientsForSearchOldDisease.patientCode === '' && dataPatientsForSearchOldDisease.fullName === '' && \r\n            dataPatientsForSearchOldDisease.dayOfBirth === '' && dataPatientsForSearchOldDisease.phone === '')\r\n        {\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.fullName.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.patientCode.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.focus = true;\r\n                setFocusField('patientCode');\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.dayOfBirth.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                if (dateFieldRef.current) {\r\n                    dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n                }\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.phone.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.phone.focus = true;\r\n                setFocusField('phone');\r\n            }\r\n            isValid = false;\r\n        }\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        return isValid;\r\n    }\r\n\r\n    const handleFindOldDisease = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        setOpenAlertProcessing(true);\r\n        const response = await getListOldDisease(dataPatientsForSearchOldDisease.patientCode, dataPatientsForSearchOldDisease.phone, dataPatientsForSearchOldDisease.fullName, dataPatientsForSearchOldDisease.dayOfBirth, '');\r\n        setOpenAlertProcessing(false);\r\n        setListFoundOldDisease(response);\r\n        setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n        setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n        handleResetField();\r\n        if(response.length > 0){\r\n            tableRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleClickFindOldDisease = () => {\r\n        if(validate()){\r\n            handleFindOldDisease()\r\n        }\r\n    }\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleClickFindOldDisease();\r\n        }\r\n    }\r\n\r\n    const handleTableKeyDown = (event) => {\r\n        if (event.key === 'ArrowDown') {\r\n            setSelectedRowIndex((prevIndex) => (Math.min(prevIndex + 1, listFoundOldDisease.length - 1)));\r\n        } else if (event.key === 'ArrowUp') {\r\n            setSelectedRowIndex((prevIndex) => (Math.max(prevIndex - 1, 0)));\r\n        } else if (event.key === 'Enter' && selectedRowIndex !== null){\r\n            handleApplyDataPatientOldDisease(listFoundOldDisease[selectedRowIndex])\r\n        }\r\n    };\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            oldDiseaseWithNullCodeWard: foundOldDiseaseItem.codeWard ? false : true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientId: foundOldDiseaseItem.patientId,\r\n                patientCode: foundOldDiseaseItem.patientCode,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseModalOldDisease();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalOldDisease} onClose={(event, reason) => handleCloseModalOldDisease(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Tìm bệnh cũ</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalOldDisease()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{p: '10px 24px'}}>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around'}} component=\"form\" ref={formRef}>\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.patientCode.title}</h6>} open={dataPatientsForSearchOldDiseaseError.patientCode.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.patientCode.isError === true : false}\r\n                                    label=\"Mã BN\" variant=\"outlined\" size='small'\r\n                                    autoFocus\r\n                                    inputRef={(input) => input && focusField === 'patientCode' && input.focus()}\r\n                                    inputProps={{ maxLength: 14 }}\r\n                                    onChange={(e) => onChangePatientId(e.target.value)}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'patientCode')}\r\n                                    onKeyDown={handleKeyDown} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.fullName.title}</h6>} open={dataPatientsForSearchOldDiseaseError.fullName.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.fullName.isError === true : false}\r\n                                    label=\"Họ tên\" variant=\"outlined\" size='small'\r\n                                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                                    onKeyDown={(e) => handleEnterPress(e)} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                            <ThemeProvider theme={tooltipTheme}>\r\n                                <DemoContainer components={['DatePicker']}>\r\n                                    <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.dayOfBirth.title}</h6>} open={dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip}>    \r\n                                        <Box sx={{width: 222}}>\r\n                                            <DatePicker label=\"Ngày sinh\" format='DD/MM/YYYY' \r\n                                                disableFuture={true} disableOpenPicker \r\n                                                renderInput={(params) => <TextField {...params} size='small' />}\r\n                                                slotProps={{  \r\n                                                    textField: \r\n                                                    { \r\n                                                        inputRef: dateFieldRef,\r\n                                                        error: true ? dataPatientsForSearchOldDiseaseError.dayOfBirth.isError === true : false, \r\n                                                        size: 'small', \r\n                                                        onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                                        onKeyDown: (e) => handleEnterPress(e)\r\n                                                    }, \r\n                                                }}\r\n                                                onChange={(value) => onChangeDayOfBirth(value)}\r\n                                            />\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                </DemoContainer>\r\n                            </ThemeProvider>      \r\n                        </LocalizationProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.phone.title}</h6>} open={dataPatientsForSearchOldDiseaseError.phone.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                                    inputRef={(input) => input && focusField === 'phone' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.phone.isError === true : false}\r\n                                    label=\"Điện thoại cha/mẹ\" variant=\"outlined\" size='small'\r\n                                    inputProps={{ maxLength: 10 }}\r\n                                    onChange={(e) => onChangePhone(e.target.value)}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'phone')}\r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 1.6}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleClickFindOldDisease()}>Tìm (Enter)</Button>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        {\r\n                            listFoundOldDisease ? \r\n                                listFoundOldDisease.length !== 0 ? \r\n                                <>\r\n                                    <TableContainer component={Paper} sx={{boxShadow: 4, mt: 1.4}} tabIndex={0} onKeyDown={(event) => handleTableKeyDown(event)} ref={tableRef}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Điện thoại</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listFoundOldDisease ? \r\n                                                    listFoundOldDisease.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                        <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} \r\n                                                            selected={selectedRowIndex === foundOldDiseaseIndex} \r\n                                                            onDoubleClick={() => handleApplyDataPatientOldDisease(foundOldDiseaseItem)}\r\n                                                        >\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.patientCode}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                            <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.phoneMother || foundOldDiseaseItem.phoneFather}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'green'}}>Tìm thấy {listFoundOldDisease.length} bệnh nhân</Typography>\r\n                                </>\r\n                                : \r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'red'}}>Không tìm thấy bệnh nhân</Typography>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Box>  \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDisease","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDiseaseForRegister(props) {\r\n\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const handleCloseOldDiseaseRegister = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            props.setOpenOldDiseaseRegister(false);\r\n        }\r\n    }\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            oldDiseaseWithNullCodeWard: foundOldDiseaseItem.codeWard ? false : true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientId: foundOldDiseaseItem.patientId,\r\n                patientCode: foundOldDiseaseItem.patientCode,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseOldDiseaseRegister();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openOldDiseaseRegister} onClose={(event, reason) => handleCloseOldDiseaseRegister(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{padding: '10px 0px 10px 0px', fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Bệnh nhân đã tham gia khám định kỳ thuộc danh sách dưới đây?</DialogTitle>\r\n                <IconButton onClick={() => handleCloseOldDiseaseRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent sx={{padding: '0px 18px 0px 18px', mt: 0, mb: 3}}>\r\n                    {props.listOldDiseaseRegister.length !== 0 ?\r\n                        <>\r\n                            <TableContainer component={Paper} sx={{boxShadow: 4}}>\r\n                                <Table stickyHeader>\r\n                                    <TableHead>\r\n                                        <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                            <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Điện thoại</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            props.listOldDiseaseRegister.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => handleApplyDataPatientOldDisease(foundOldDiseaseItem)}>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.patientCode}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                    <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.phoneMother || foundOldDiseaseItem.phoneFather}</TableCell>\r\n                                                </TableRow>\r\n                                            ))\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </>\r\n                    :\r\n                        null\r\n                    }\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDiseaseForRegister","import React, { useContext, useState, useEffect, useRef } from 'react';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//ExaminingSessios modal\r\nimport ExaminingSession from '../ManageExaminingSession/ExaminingSession';\r\n//old disease modal\r\nimport OldDisease from '../ManageOldDisease/OldDisease';\r\nimport OldDiseaseForRegister from '../ManageOldDisease/OldDiseaseForRegister';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateField } from '@mui/x-date-pickers/DateField';\r\n//lodash\r\nimport _ from 'lodash';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { createMedicalBackRegister, getListOldDisease } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction BookMedical(props) {\r\n\r\n  const dataPatientsRegisterDefault = {\r\n    examinationId: '',\r\n    oldDisease: false,\r\n    height: '',\r\n    weight: '',\r\n    headCircumference: '',\r\n    reason: '',\r\n    vaccination: false,\r\n    medicalTypeId: '',\r\n    userIdDoctor: '',\r\n    patient: {\r\n      patientCode: '',\r\n      identifier: '',\r\n      address: '',\r\n      fullName: '',\r\n      dayOfBirth: '',\r\n      codeWard: '',\r\n      gender: '',\r\n      fullNameMother: '',\r\n      phoneMother: '',\r\n      fullNameFather: '',\r\n      phoneFather: ''\r\n    }\r\n  }\r\n\r\n  const autocompleteValueDefault = { \r\n    dayOfBirth: null, \r\n    gender: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    province: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    district: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    ward: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    medicalType: {\r\n      value: null,\r\n      openOption: false\r\n    },\r\n    vaccination: false \r\n  }\r\n\r\n  const dataPatientsRegisterErrorDefault = { \r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    patientCode: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n    medicalType: { title: '', isError: false, openTooltip: false, focus: false },\r\n    reason: { title: '', isError: false, openTooltip: false, focus: false }\r\n  }\r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const listMedicalType = [\r\n    {medicalTypeOrder: 1, medicalTypeName: 'Khám Nhi khoa phát triển', medicalTypeId: 1},\r\n    {medicalTypeOrder: 2, medicalTypeName: 'Khám trẻ nguy cơ cao', medicalTypeId: 2},\r\n  ]\r\n\r\n  const { isDialogChangePasswordOpen, isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n  const [openModalExaminingSession, setOpenModalExaminingSession] = useState(false);\r\n  const [isContinueSelectedExaminingSession, setIsContinueSelectedExaminingSession] = useState(false);\r\n\r\n  const [openModalOldDisease, setOpenModalOldDisease] = useState(false);\r\n\r\n  const [openOldDiseaseRegister, setOpenOldDiseaseRegister] = useState(false);\r\n  const [listOldDiseaseRegister, setListOldDiseaseRegister] = useState([]);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const [dataPatientsRegister, setDataPatientsRegister] = useState(dataPatientsRegisterDefault);\r\n  const [dataPatientsRegisterError, setDataPatientsRegisterError] = useState(dataPatientsRegisterErrorDefault);\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [autocompleteValue, setAutocompleteValue] = useState(autocompleteValueDefault);\r\n\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const formRef = useRef(null);\r\n  const firstFocusRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n  const typingRef = useRef(null);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f', \r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -7],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleKeyDown = (event, nextFieldId) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key === 'Enter') \r\n    {\r\n      if(event.key === 'Enter'){\r\n        event.preventDefault();\r\n        let nextField = null;\r\n        if(dataPatientsRegister.oldDiseaseWithNullCodeWard && nextFieldId === 'patientFullName'){\r\n          nextField = document.getElementById('patientProvince');\r\n        }\r\n        else if(dataPatientsRegister.oldDiseaseWithNullCodeWard && nextFieldId === 'patientAddress'){\r\n          nextField = document.getElementById('patientWeight');\r\n        }\r\n        else{\r\n          nextField = document.getElementById(nextFieldId);\r\n        }\r\n        if(nextField) {\r\n          nextField.focus();\r\n          nextField.select(); // Đảm bảo con trỏ chuột xuất hiện\r\n        }\r\n      }\r\n      else{\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  \r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n\r\n    // Xử lý đặc biệt cho \"d\" và \"đ\"\r\n    const replaceSpecialCharacters = str => str.replace(/đ/g, 'd');\r\n\r\n    return options.filter(option => {\r\n        const lowercasedFullName = replaceSpecialCharacters(option.fullName.toLowerCase());\r\n        const initials = replaceSpecialCharacters(option.fullName.split(' ').map(word => word[0]).join('').toLowerCase());\r\n\r\n        const normalizedInput = replaceSpecialCharacters(lowercasedInput);\r\n\r\n        return (\r\n            lowercasedFullName.includes(normalizedInput) ||\r\n            initials.includes(normalizedInput)\r\n        );\r\n    });\r\n  };\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.gender.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.province.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Ward'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'MedicalType'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.medicalType.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n      if(fieldName === 'Identifier'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n        _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.dayOfBirth.title = '';\r\n      //     _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n      //   _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PatientId'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.patientCode.title = '';\r\n      //     _dataPatientsRegisterError.patientCode.openTooltip = false;\r\n      //     _dataPatientsRegisterError.patientCode.isError = false;\r\n      //     _dataPatientsRegisterError.patientCode.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.phoneMother.title = '';\r\n      //     _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      //     _dataPatientsRegisterError.phoneMother.isError = false;\r\n      //     _dataPatientsRegisterError.phoneFather.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      if(fieldName === 'PhoneFather'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.patientCode.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      else if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientsRegisterError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientsRegisterError.identifier.openTooltip = true;\r\n          _dataPatientsRegisterError.identifier.isError = true;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.identifier.title = '';\r\n      _dataPatientsRegisterError.identifier.openTooltip = false;\r\n      _dataPatientsRegisterError.identifier.isError = false;\r\n      _dataPatientsRegisterError.identifier.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangePatientId = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 8){\r\n          _dataPatientsRegisterError.patientCode.title = 'Mã BN phải từ 8 đến 14 số';\r\n          _dataPatientsRegisterError.patientCode.openTooltip = true;\r\n          _dataPatientsRegisterError.patientCode.isError = true;\r\n          _dataPatientsRegisterError.patientCode.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          if(focusField === 'patientCode'){\r\n            setFocusField(null);\r\n          }\r\n          \r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.patientCode = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.patientCode.title = '';\r\n          _dataPatientsRegisterError.patientCode.openTooltip = false;\r\n          _dataPatientsRegisterError.patientCode.isError = false;\r\n          _dataPatientsRegisterError.patientCode.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        \r\n        if(dataPatientsRegister.patient.patientCode.length === 14){\r\n          handleFindOldDisease()\r\n        }\r\n      }, 100)\r\n    }\r\n    // else{\r\n    //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n    //   _dataPatientsRegisterError.patientCode.title = '';\r\n    //   _dataPatientsRegisterError.patientCode.openTooltip = false;\r\n    //   _dataPatientsRegisterError.patientCode.isError = false;\r\n    //   _dataPatientsRegisterError.patientCode.focus = false;\r\n    //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    // }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullName = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      if(dataPatientsRegisterError.fullName.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullName.title = '';\r\n        _dataPatientsRegisterError.fullName.openTooltip = false;\r\n        _dataPatientsRegisterError.fullName.isError = false;\r\n        _dataPatientsRegisterError.fullName.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n\r\n    // setTimeout(() => {\r\n    //   if(dataPatientsRegister.patient.fullName !== ''){\r\n    //     handleFindOldDisease()\r\n    //   }\r\n    // }, 500)\r\n  }\r\n\r\n  const onChangeDOB = (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n\r\n        if(today < takenValue || age > 2 || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientsRegisterError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n        }\r\n\r\n        else{\r\n          if(focusField === 'dayOfBirth'){\r\n            setFocusField(null);\r\n          }\r\n\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n          prevDataPatientsRegister.patient.dayOfBirth = formattedDate\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.dayOfBirth.title = '';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n\r\n      // if(dataPatientsRegister.patient.dayOfBirth !== ''){\r\n      //   handleFindOldDisease()\r\n      // }\r\n    }  \r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.gender = value.genderValue\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.gender.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.gender.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.gender.title = '';\r\n      _dataPatientsRegisterError.gender.openTooltip = false;\r\n      _dataPatientsRegisterError.gender.isError = false;\r\n      _dataPatientsRegisterError.gender.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n    //   handleFindOldDisease();\r\n    // }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.province.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.district.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.province.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.province.title = '';\r\n      _dataPatientsRegisterError.province.openTooltip = false;\r\n      _dataPatientsRegisterError.province.isError = false;\r\n      _dataPatientsRegisterError.province.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.district.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.district.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.district.title = '';\r\n      _dataPatientsRegisterError.district.openTooltip = false;\r\n      _dataPatientsRegisterError.district.isError = false;\r\n      _dataPatientsRegisterError.district.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n    \r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.codeWard = value.code\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.ward.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.ward.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.ward.title = '';\r\n      _dataPatientsRegisterError.ward.openTooltip = false;\r\n      _dataPatientsRegisterError.ward.isError = false;\r\n      _dataPatientsRegisterError.ward.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeFolk = (value) => {\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'address'){\r\n        setFocusField(null);\r\n      }\r\n      \r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.address = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.address.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.address.title = '';\r\n        _dataPatientsRegisterError.address.openTooltip = false;\r\n        _dataPatientsRegisterError.address.isError = false;\r\n        _dataPatientsRegisterError.address.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'fullNameMother'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameMother = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        if(focusField === 'phoneMother'){\r\n          setFocusField(null);\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneMother.isError = true;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneMother = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneMother.title = '';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneMother.isError = false;\r\n      _dataPatientsRegisterError.phoneMother.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    } \r\n    // if(dataPatientsRegister.patient.phoneMother.length === 10){\r\n    //   handleFindOldDisease()\r\n    // }\r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    if(focusField === 'fullNameFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameFather = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (e, value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneFather.isError = true;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneFather = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'phoneFather'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneFather.title = '';\r\n      _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneFather.isError = false;\r\n      _dataPatientsRegisterError.phoneFather.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.phoneFather.length === 10){\r\n    //   handleFindOldDisease()\r\n    // }\r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'height'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.height = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.height.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.height.title = '';\r\n        _dataPatientsRegisterError.height.openTooltip = false;\r\n        _dataPatientsRegisterError.height.isError = false;\r\n        _dataPatientsRegisterError.height.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'weight'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.weight = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.weight.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.weight.title = '';\r\n        _dataPatientsRegisterError.weight.openTooltip = false;\r\n        _dataPatientsRegisterError.weight.isError = false;\r\n        _dataPatientsRegisterError.weight.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'headCircumference'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.headCircumference = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.headCircumference.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.headCircumference.title = '';\r\n        _dataPatientsRegisterError.headCircumference.openTooltip = false;\r\n        _dataPatientsRegisterError.headCircumference.isError = false;\r\n        _dataPatientsRegisterError.headCircumference.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onSelectMedicalType = (e, value) => {\r\n    if(focusField === 'medicalType'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.medicalTypeId = value.medicalTypeId\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.medicalType.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.medicalType.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.medicalType.title = '';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = false;\r\n      _dataPatientsRegisterError.medicalType.isError = false;\r\n      _dataPatientsRegisterError.medicalType.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeReason = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.reason = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      // if(dataPatientsRegisterError.reason.isError){\r\n      //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      //   _dataPatientsRegisterError.reason.isError = false;\r\n      //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.vaccination = bool\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.vaccination = bool\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkValidate = () => {\r\n    let isValid = true;\r\n    const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n\r\n    if(dataPatientsRegisterError.identifier.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.identifier.focus = true;\r\n        setFocusField('identifier');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.patientCode === ''){\r\n      _dataPatientsRegisterError.patientCode.title = 'Bạn chưa nhập mã bệnh nhân';\r\n      _dataPatientsRegisterError.patientCode.openTooltip = true;\r\n      _dataPatientsRegisterError.patientCode.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientCode.focus = true;\r\n        setFocusField('patientCode');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.patientCode.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientCode.focus = true;\r\n        setFocusField('patientCode');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullName === ''){\r\n      _dataPatientsRegisterError.fullName.title = 'Bạn chưa nhập họ tên';\r\n      _dataPatientsRegisterError.fullName.openTooltip = true;\r\n      _dataPatientsRegisterError.fullName.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullName.focus = true;\r\n        setFocusField('fullName');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.dayOfBirth === ''){\r\n      _dataPatientsRegisterError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n      _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n      _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.dayOfBirth.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.gender === ''){\r\n      _dataPatientsRegisterError.gender.title = 'Bạn chưa chọn giới tính';\r\n      _dataPatientsRegisterError.gender.openTooltip = true;\r\n      _dataPatientsRegisterError.gender.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.gender.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n      setFocusField('gender');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.province.value === null){\r\n      _dataPatientsRegisterError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n      _dataPatientsRegisterError.province.openTooltip = true;\r\n      _dataPatientsRegisterError.province.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.province.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('province');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.district.value === null){\r\n      _dataPatientsRegisterError.district.title = 'Bạn chưa chọn quận huyện';\r\n      _dataPatientsRegisterError.district.openTooltip = true;\r\n      _dataPatientsRegisterError.district.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.district.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('district');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.ward.value === null){\r\n      _dataPatientsRegisterError.ward.title = 'Bạn chưa chọn phường xã';\r\n      _dataPatientsRegisterError.ward.openTooltip = true;\r\n      _dataPatientsRegisterError.ward.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.ward.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('ward');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.address === ''){\r\n      _dataPatientsRegisterError.address.title = 'Bạn chưa nhập địa chỉ';\r\n      _dataPatientsRegisterError.address.openTooltip = true;\r\n      _dataPatientsRegisterError.address.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.address.focus = true;\r\n        setFocusField('address');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullNameMother === '' && dataPatientsRegister.patient.fullNameFather === ''){\r\n      _dataPatientsRegisterError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n      _dataPatientsRegisterError.fullNameMother.openTooltip = true;\r\n      _dataPatientsRegisterError.fullNameMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullNameMother.focus = true;\r\n        setFocusField('fullNameMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.phoneMother === '' && dataPatientsRegister.patient.phoneFather === ''){\r\n      _dataPatientsRegisterError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n      _dataPatientsRegisterError.phoneMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneMother.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneFather.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneFather.focus = true;\r\n        setFocusField('phoneFather');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.weight === ''){\r\n      _dataPatientsRegisterError.weight.title = 'Bạn chưa nhập cân nặng';\r\n      _dataPatientsRegisterError.weight.openTooltip = true;\r\n      _dataPatientsRegisterError.weight.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.weight.focus = true;\r\n        setFocusField('weight');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.height === ''){\r\n      _dataPatientsRegisterError.height.title = 'Bạn chưa nhập chiều cao';\r\n      _dataPatientsRegisterError.height.openTooltip = true;\r\n      _dataPatientsRegisterError.height.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.height.focus = true;\r\n        setFocusField('height');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.headCircumference === ''){\r\n      _dataPatientsRegisterError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n      _dataPatientsRegisterError.headCircumference.openTooltip = true;\r\n      _dataPatientsRegisterError.headCircumference.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.headCircumference.focus = true;\r\n        setFocusField('headCircumference');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.medicalTypeId === ''){\r\n      _dataPatientsRegisterError.medicalType.title = 'Bạn chưa chọn loại hình khám';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = true;\r\n      _dataPatientsRegisterError.medicalType.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.medicalType.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('medicalType');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    // if(dataPatientsRegister.reason === ''){\r\n    //   _dataPatientsRegisterError.reason.isError = true;\r\n    //   isValid = false;\r\n    // }\r\n\r\n    setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    return isValid;\r\n  }\r\n\r\n  const handleMedicalRegister = () => {\r\n    setTimeout(() => {\r\n      if(checkValidate()){\r\n        firstFocusRef.current.focus();\r\n        if(props.dataPantientAppointmentsToday){\r\n          handleMedicalBackRegister();\r\n        }\r\n        else{\r\n          setOpenModalExaminingSession(true);\r\n        }\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const handleMedicalBackRegister = async () => {\r\n    setOpenAlertProcessing(true);\r\n    const responseCreateMedicalBackRegister = await createMedicalBackRegister(dataPatientsRegister);\r\n    if(responseCreateMedicalBackRegister.status === 200){\r\n      toast.success(responseCreateMedicalBackRegister.data, {toastId: 'success5'})\r\n      props.setCompleteMedicalRegister(true);\r\n      handleResetField();\r\n    }\r\n    else{\r\n      toast.error(responseCreateMedicalBackRegister.data, {toastId: 'error5'})\r\n    }\r\n    setOpenAlertProcessing(false);\r\n  }\r\n\r\n  const handleApplyPantientOldDiseaseData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = dataPatientsRegister.patient.identifier;\r\n    document.getElementById('patientCode').value = dataPatientsRegister.patient.patientCode;\r\n    document.getElementById('patientFullName').value = dataPatientsRegister.patient.fullName;\r\n\r\n    let _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(dataPatientsRegister.patient.dayOfBirth);\r\n\r\n    if(dataPatientsRegister.patient.codeWard){\r\n      const response = await getFullAddressByIdWard(dataPatientsRegister.patient.codeWard);\r\n      const responseListDistrict = await getListDistrict(response.provinceCode);\r\n      const responseListWard = await getListWard(response.districtCode);\r\n  \r\n      const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n      const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n      const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n      \r\n      _autocompleteValue.province.value = listProvince[indexListProvince];\r\n      _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n      _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n      _autocompleteValue.vaccination = dataPatientsRegister.vaccination;\r\n    }\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === dataPatientsRegister.patient.gender);\r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === dataPatientsRegister.medicalTypeId);\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    setIsOldDiseaseWithNullCodeWard(true);\r\n    \r\n    document.getElementById('patientAddress').value = dataPatientsRegister.patient.address;\r\n    document.getElementById('patientFullNameMother').value = dataPatientsRegister.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = dataPatientsRegister.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = dataPatientsRegister.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = dataPatientsRegister.patient.phoneFather;\r\n\r\n    if(dataPatientsRegister.oldDiseaseWithNullCodeWard){\r\n      setTimeout(() => {\r\n        setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n        setOpenAlertProcessing(false);\r\n\r\n        setFocusField('patientCode');\r\n      }, 300)\r\n    }\r\n    else{\r\n      setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n      setOpenAlertProcessing(false);\r\n      \r\n      setFocusField('weight');\r\n    }\r\n  }\r\n\r\n  const handleApplyPantientAppointmentsTodayData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = props.dataPantientAppointmentsToday.patient.identifier;\r\n    document.getElementById('patientCode').value = props.dataPantientAppointmentsToday.patient.patientCode;\r\n    document.getElementById('patientFullName').value = props.dataPantientAppointmentsToday.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(props.dataPantientAppointmentsToday.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(props.dataPantientAppointmentsToday.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === props.dataPantientAppointmentsToday.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === props.dataPantientAppointmentsToday.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = props.dataPantientAppointmentsToday.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = props.dataPantientAppointmentsToday.patient.address;\r\n    document.getElementById('patientFullNameMother').value = props.dataPantientAppointmentsToday.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = props.dataPantientAppointmentsToday.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = props.dataPantientAppointmentsToday.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = props.dataPantientAppointmentsToday.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('weight');\r\n  }\r\n\r\n  const handleResetField = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n    const oldDisease = dataPatientsRegister.oldDisease ? true : false\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n\r\n    if(isOldDiseaseWithNullCodeWard){\r\n      setIsOldDiseaseWithNullCodeWard(false);\r\n    }\r\n\r\n    if(oldDisease){\r\n      setTimeout(() => {\r\n        firstFocusRef.current.focus();\r\n      }, 100)\r\n    }\r\n    else{\r\n      firstFocusRef.current.focus();\r\n    }\r\n  }\r\n\r\n  const handleOpenModalOldDisease = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n    firstFocusRef.current.focus();\r\n\r\n    if(isOldDiseaseWithNullCodeWard){\r\n      setIsOldDiseaseWithNullCodeWard(false);\r\n    }\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const response = await getListProvince();\r\n    if(response !== 400){\r\n      setListProvince(response);\r\n    }\r\n  }\r\n\r\n  const handleFindOldDisease = async () => {\r\n    const response = await getListOldDisease(dataPatientsRegister.patient.patientCode, dataPatientsRegister.patient.phoneMother ? dataPatientsRegister.patient.phoneMother : dataPatientsRegister.patient.phoneFather, dataPatientsRegister.patient.fullName, dataPatientsRegister.patient.dayOfBirth);\r\n    if(response.length !== 0){\r\n      setListOldDiseaseRegister(response);\r\n      setOpenOldDiseaseRegister(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetListProvince();\r\n    firstFocusRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(dataPatientsRegister.oldDisease === true){\r\n      handleApplyPantientOldDiseaseData();\r\n    }\r\n  }, [dataPatientsRegister.oldDisease])\r\n\r\n  useEffect(() => {\r\n    if(props.dataPantientAppointmentsToday){\r\n      setDataPatientsRegister(props.dataPantientAppointmentsToday);\r\n      handleApplyPantientAppointmentsTodayData();\r\n    }\r\n  }, [props.dataPantientAppointmentsToday]) \r\n\r\n  useEffect(() => {\r\n    if(isDialogChangePasswordOpen === false){\r\n      if(props.onF2Press){\r\n        if(openModalExaminingSession === true && openModalOldDisease === false){\r\n          setIsContinueSelectedExaminingSession(true);\r\n          props.setOnF2Press(false);\r\n        }\r\n        else{\r\n          handleMedicalRegister();\r\n          props.setOnF2Press(false);\r\n        }\r\n      }\r\n      \r\n      if(props.onF4Press){\r\n        if(openModalExaminingSession === true || openModalOldDisease === true){\r\n          props.setOnF4Press(false);\r\n        }\r\n        else{\r\n          handleResetField();\r\n          props.setOnF4Press(false);\r\n        }\r\n      }\r\n\r\n      if(props.onF8Press){\r\n        if(openModalExaminingSession === true || openModalOldDisease === true){\r\n          props.setOnF8Press(false);\r\n        }\r\n        else{\r\n          handleOpenModalOldDisease();\r\n          props.setOnF8Press(false);\r\n        }\r\n      }\r\n    }\r\n  }, [props.onF2Press, props.onF4Press, props.onF8Press, isDialogChangePasswordOpen])\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{'&.MuiContainer-maxWidthLg': {pr: 0}, height: '100%',}}>\r\n        <Box sx={{ minHeight: '36.8rem', borderRadius: '20px', boxShadow: 5, pt: 1.2, pb: 1.2, pl: 1.8, pr: 1.8, }}>\r\n          <Typography variant='h6' sx={{textAlign: 'center', fontWeight: 'bolder', color: 'blue'}}>Thông tin đăng ký khám</Typography> \r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}} component=\"form\" ref={formRef}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.identifier.title}</h6>} open={dataPatientsRegisterError.identifier.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.identifier.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã định danh\" variant=\"outlined\" id='patientIdentifier' autoComplete='off'\r\n                  inputRef={focusField === 'identifier' ? (input) => input && focusField === 'identifier' && input.focus() : firstFocusRef}\r\n                  onChange={(e) => onChangeIdentifier(e.target.value)}\r\n                  onKeyDown={(e) => handleKeyDown(e, 'patientCode')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Identifier')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.patientCode.title}</h6>} open={dataPatientsRegisterError.patientCode.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '19%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.patientCode.isError === true : false} disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                  label=\"Mã BN\" variant=\"outlined\" id='patientCode' autoComplete='off'\r\n                  inputRef={(input) => input && focusField === 'patientCode' && input.focus()}\r\n                  onChange={(e) => onChangePatientId(e.target.value)}\r\n                  onKeyDown={(e) => handleKeyDown(e, 'patientFullName')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'PatientId')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 14 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullName.title}</h6>} open={dataPatientsRegisterError.fullName.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }} \r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [37, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              > \r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullName.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên\" variant=\"outlined\" id=\"patientFullName\" autoComplete='off'                \r\n                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientDayOfBirth')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  /> \r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n      \r\n            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n              <ThemeProvider theme={tooltipTheme}>\r\n                <DemoContainer components={['DatePicker']} >\r\n                  <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.dayOfBirth.title}</h6>} open={dataPatientsRegisterError.dayOfBirth.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>    \r\n                    <Box sx={{width: 142, mt: '12px !important'}}>\r\n                      <div style={{width: '100%', }}>\r\n                        <DateField label=\"Ngày sinh\" \r\n                          format='DD/MM/YYYY' value={autocompleteValue.dayOfBirth}\r\n                          disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                          slotProps={{ \r\n                            textField: \r\n                              { \r\n                                inputRef: dateFieldRef,\r\n                                id: 'patientDayOfBirth',\r\n                                error: true ? dataPatientsRegisterError.dayOfBirth.isError === true : false,\r\n                                onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                sx: {'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } },\r\n                              }\r\n                          }}\r\n                          onChange={(value) => onChangeDOB(value)}\r\n                          onKeyDown={(e) => handleKeyDown(e, 'patientGender')}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  </Tooltip>\r\n                </DemoContainer>\r\n              </ThemeProvider>      \r\n            </LocalizationProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.gender.title}</h6>} open={dataPatientsRegisterError.gender.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '12%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientGender' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.gender.value}\r\n                    options={listGender} \r\n                    getOptionLabel={(option) => option.genderName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.genderName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectGender(e, value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientProvince')}\r\n                    open={autocompleteValue.gender.openOption}\r\n                    onFocus={() => handleFocus('Gender')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Giới tính\" \r\n                        inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.gender.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n             \r\n            {/* <TextField label=\"Dân tộc\" variant=\"outlined\" sx={{width: '12%', '&.MuiTextField-root' : {marginTop: '15px'}}}/> */}\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.province.title}</h6>} open={dataPatientsRegisterError.province.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '19.2%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientProvince' disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                    value={autocompleteValue.province.value}\r\n                    options={listProvince} \r\n                    noOptionsText={'Đang tải...'}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectProvine(e, value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientDistrict')}\r\n                    open={autocompleteValue.province.openOption}\r\n                    onFocus={() => handleFocus('Province')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Thành phố\" \r\n                        inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.province.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.district.title}</h6>} open={dataPatientsRegisterError.district.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '24%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientDistrict' disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                    value={autocompleteValue.district.value}\r\n                    options={listDistrict.list} \r\n                    noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                    open={autocompleteValue.district.openOption}\r\n                    onFocus={() => handleFocus('District')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.fullName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectDistrict(e, value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientWard')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Quận/Huyện\" \r\n                        inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.district.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <>\r\n                              {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <>\r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.ward.title}</h6>} open={dataPatientsRegisterError.ward.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                  <div style={{width: '23.5%', marginTop: '20px'}}>\r\n                    <Autocomplete disablePortal id='patientWard' disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                      value={autocompleteValue.ward.value}\r\n                      options={listWard.list} \r\n                      noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                      filterOptions={filterOptions}\r\n                      getOptionLabel={(option) => option.name}\r\n                      autoComplete={false}\r\n                      renderOption={(props, option) => (\r\n                        <li {...props}>\r\n                          {option.fullName}\r\n                        </li>\r\n                      )}\r\n                      onChange={(e, value) => onSelectWard(e, value)}\r\n                      onKeyDown={(e) => handleKeyDown(e, 'patientAddress')}\r\n                      open={autocompleteValue.ward.openOption}\r\n                      onFocus={() => handleFocus('Ward')}\r\n                      onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} \r\n                          label=\"Phường/Xã\" \r\n                          inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                          error={true ? dataPatientsRegisterError.ward.isError === true : false} \r\n                          sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                              <>\r\n                                {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                              </>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      disableClearable // Bỏ icon xóa\r\n                      popupIcon={null} // Bỏ icon dropdown\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.address.title}</h6>} open={dataPatientsRegisterError.address.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.address.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Địa chỉ\" variant=\"outlined\" id='patientAddress' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                    onChange={(e) => onChangeAddress(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientFullNameMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullNameMother.title}</h6>} open={dataPatientsRegisterError.fullNameMother.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullNameMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên mẹ\" variant=\"outlined\" id='patientFullNameMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                    autoFocus={dataPatientsRegisterError.fullNameMother.focus}\r\n                    onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientPhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneMother.title}</h6>} open={dataPatientsRegisterError.phoneMother.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.phoneMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Điện thoại\" variant=\"outlined\" id='patientPhoneMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                    onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientFullNameFather')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n\r\n            <TextField label=\"Họ tên cha\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n              variant=\"outlined\" id='patientFullNameFather' autoComplete='off'\r\n              sx={{width: '30.4%', '&.MuiTextField-root' : {marginTop: '20px'}}} \r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n              onKeyDown={(e) => handleKeyDown(e, 'patientPhoneFather')}\r\n              inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n              InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n            />\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneFather.title}</h6>} open={dataPatientsRegisterError.phoneFather.openTooltip}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField label=\"Điện thoại\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                    variant=\"outlined\" id='patientPhoneFather' autoComplete='off'\r\n                    onChange={(e) => onChangePhoneFather(e, e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientWeight')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneFather')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.weight.title}</h6>} open={dataPatientsRegisterError.weight.openTooltip} PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Cân nặng bé\" variant=\"outlined\" id='patientWeight' autoComplete='off' error={true ? dataPatientsRegisterError.weight.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(kg)</InputAdornment>}}\r\n                    onChange={(e) => onChangeWeight(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientHeight')}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.height.title}</h6>} open={dataPatientsRegisterError.height.openTooltip} placement='left' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Chiều cao bé\" variant=\"outlined\" id='patientHeight' autoComplete='off' error={true ? dataPatientsRegisterError.height.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeight(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientHeadCircumference')}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.headCircumference.title}</h6>} open={dataPatientsRegisterError.headCircumference.openTooltip} placement='top-start' PopperProps={{sx: { zIndex: 2 } }}\r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [70, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              >\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Vòng đầu bé\" variant=\"outlined\" id='patientHeadCircumference' autoComplete='off' error={true ? dataPatientsRegisterError.headCircumference.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientMedicalType')}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.medicalType.title}</h6>} open={dataPatientsRegisterError.medicalType.openTooltip} placement='bottom' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30.5%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientMedicalType' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.medicalType.value}\r\n                    options={listMedicalType} \r\n                    getOptionLabel={(option) => option.medicalTypeName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.medicalTypeName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectMedicalType(e, value)}\r\n                    open={autocompleteValue.medicalType.openOption}\r\n                    onFocus={() => handleFocus('MedicalType')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'MedicalType')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Loại hình khám\" \r\n                        inputRef={(input) => input && focusField === 'medicalType' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.medicalType.isError === true : false} \r\n                        sx={{\r\n                          '& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } ,\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.Mui-disabled.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'},\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'}\r\n                        }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.reason.title}</h6>} open={dataPatientsRegisterError.reason.openTooltip} >\r\n                <div style={{width: '100%' }}>\r\n                  <TextField fullWidth label=\"Lý do khám\" multiline rows={3} variant=\"outlined\" id='patientReason' autoComplete='off' error={true ? dataPatientsRegisterError.reason.isError === true : false}\r\n                    sx={{'&.MuiTextField-root' : {marginTop: '20px'}}} \r\n                    onChange={(e) => onChangeReason(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <FormControlLabel control={<Checkbox checked={autocompleteValue.vaccination}/>} sx={{width: '100%'}}\r\n              label=\"Bệnh nhân có tham gia tiêm ngừa\" onChange={(e) => onChangeVaccination(e.target.checked)}/>  \r\n\r\n            <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n              <Button variant=\"contained\" color=\"primary\" sx={{mr: 1}} onClick={() => handleMedicalRegister()}>Đăng ký (f2)</Button>\r\n              <Button variant=\"contained\" color=\"warning\" onClick={() => handleResetField()}>Làm mới (f4)</Button>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => handleOpenModalOldDisease()}>Bệnh cũ (f8)</Button>\r\n            </Box>\r\n          </Box>         \r\n        </Box>\r\n      </Container>\r\n\r\n      <ExaminingSession \r\n        openModalExaminingSession={openModalExaminingSession} setOpenModalExaminingSession={setOpenModalExaminingSession} \r\n        handleResetField={handleResetField} setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        isContinueSelectedExaminingSession={isContinueSelectedExaminingSession} setIsContinueSelectedExaminingSession={setIsContinueSelectedExaminingSession}\r\n        dataPatientsRegister={dataPatientsRegister} \r\n      />\r\n\r\n      <OldDisease \r\n        openModalOldDisease={openModalOldDisease} setOpenModalOldDisease={setOpenModalOldDisease}\r\n        dataPatientsRegister={dataPatientsRegister} setDataPatientsRegister={setDataPatientsRegister}\r\n      />\r\n\r\n      <OldDiseaseForRegister\r\n        openOldDiseaseRegister={openOldDiseaseRegister} setOpenOldDiseaseRegister={setOpenOldDiseaseRegister}\r\n        setDataPatientsRegister={setDataPatientsRegister}\r\n        listOldDiseaseRegister={listOldDiseaseRegister} setListOldDiseaseRegister={setListOldDiseaseRegister}\r\n      />\r\n\r\n      <AlertProcessing\r\n        openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookMedical","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//modal\r\nimport SelectedDoctorExamining from '../ManageSelectedDoctorExamining/SelectedDoctorExamining';\r\n//components\r\nimport ListPatientsRegister from './ListPatientsRegister';\r\nimport BookMedical from './BookMedical';\r\n//api\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nfunction MainMedicalRegister() {\r\n\r\n  const { user, loading } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [component1Loading, setComponent1Loading] = useState(true);\r\n\r\n  const [completeMedicalRegister, setCompleteMedicalRegister] = useState(false);\r\n  const [dataPantientAppointmentsToday, setDataPantientAppointmentsToday] = useState();\r\n\r\n  const [handleResetField, setHandleResetField] = useState(false); //F2\r\n  const [handleOpenModalExaminingSession, setHandleOpenModalExaminingSession] = useState(false); //F4\r\n  const [handleOpenModalOldDisease, setHandleOpenModalOldDisease] = useState(false); //F8\r\n\r\n  const handleF2Press = () => {\r\n    setHandleOpenModalExaminingSession(true);\r\n  }\r\n\r\n  const handleF4Press = () => {\r\n    setHandleResetField(true);\r\n  }\r\n\r\n  const handleF8Press = () => {\r\n    setHandleOpenModalOldDisease(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(loading === false && user.isLogin){\r\n      if(user.positionName !== 'Nursing'){\r\n        history.push('/404');\r\n      }\r\n    }\r\n  }, [loading, user])\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if(event.keyCode === 113){\r\n        event.preventDefault()\r\n        //nhấn F2 để đăng ký khám\r\n        handleF2Press();\r\n      }\r\n      else if(event.keyCode === 115){\r\n        event.preventDefault()\r\n        //nhấn F4 để reset các input field \r\n        handleF4Press();\r\n      }\r\n      else if(event.keyCode === 119){\r\n        event.preventDefault()\r\n        //nhấn F8 để tìm bệnh cũ\r\n        handleF8Press();\r\n      }\r\n      else{\r\n\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n              <Grid container spacing={0} sx={{marginLeft: 0}}>\r\n                <Grid item xs={5}>  \r\n                  <ListPatientsRegister \r\n                    completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                    component1Loading={component1Loading} setComponent1Loading={setComponent1Loading}\r\n                    dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                  />\r\n                </Grid>\r\n            \r\n                <Grid item xs={7} >\r\n                  {component1Loading ?\r\n                    <div style={{marginLeft: '18px'}}>\r\n                      <Skeleton variant='rectangular' width=\"100%\" height={590} />\r\n                    </div>\r\n                  :\r\n                    <BookMedical \r\n                      onF2Press={handleOpenModalExaminingSession} setOnF2Press={setHandleOpenModalExaminingSession}\r\n                      onF4Press={handleResetField} setOnF4Press={setHandleResetField}\r\n                      onF8Press={handleOpenModalOldDisease} setOnF8Press={setHandleOpenModalOldDisease}\r\n                      completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                      dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                    />\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n         {/* <SelectedDoctorExamining \r\n          openSelectedDoctorExaminingModal={openSelectedDoctorExaminingModal} setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n          currentDoctorExamining={currentDoctorExamining} setCurrentDoctorExamining={setCurrentDoctorExamining}\r\n         /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainMedicalRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//user context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getAppointmentsNextWeek, updateStateAppointment } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainAppointmentExamining() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chưa nhắc hẹn khám'});\r\n    const [listPantientAppointmentChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [listAppointment, setListAppointment] = useState();\r\n    \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n    const [listDataPatientsAppointmentPaginate, setListDataPatientsAppointmentPaginate] = useState([]);\r\n    const [listDataPatientsAppointmentState, setListDataPatientsAppointmentState] = useState();\r\n    const [listDataPatientsAppointmentSort, setListDataPatientsAppointmentSort] = useState([]);\r\n    \r\n    const [loadingComponent, setLoadingComponent] = useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [pageCount, setPageCount] = useState();\r\n\r\n    const [dataAppointment, setDataAppointment] = useState();\r\n\r\n    const handlePaginate = (data) => {\r\n        const itemsPerPage = 5;\r\n        if(data){\r\n            const calculatedPageCount = Math.ceil(data.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = data.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n        else{\r\n            const calculatedPageCount = Math.ceil(listDataPatientsAppointmentPaginate.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = listDataPatientsAppointmentPaginate.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    }\r\n\r\n    const handleGetAppointmentsNextWeek = async () => {\r\n        setLoadingComponent(true);\r\n        const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n        setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n        const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n        const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n        const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n        const updateListPantientAppointmentChipState = [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n        ]\r\n\r\n        setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n        if(activeChip.chipOrder === 0){\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind)\r\n        }\r\n\r\n        else if(activeChip.chipOrder === 1){\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n            handlePaginate(_listAppointmentAcceptReExamining)\r\n        }\r\n\r\n        else{\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n            handlePaginate(_listAppointmentRejectReExamining)\r\n        }\r\n\r\n        setLoadingComponent(false);\r\n    }\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n            const _listAppointmentNotRemind = listAppointment.filter(item => item.stateAppointment === 0);\r\n\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const _listAppointmentAcceptReExamining = listAppointment.filter(item => item.stateAppointment === 1);\r\n\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining);\r\n            handlePaginate(_listAppointmentAcceptReExamining);\r\n        }\r\n        else{\r\n            const _listAppointmentRejectReExamining = listAppointment.filter(item => item.stateAppointment === 2);\r\n\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining);\r\n            handlePaginate(_listAppointmentRejectReExamining);\r\n        }\r\n    }\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsAppointmentSort(listDataPatientsAppointmentState);\r\n        }else{\r\n          setListDataPatientsAppointmentSort(searchPatients(listDataPatientsAppointmentState, takenValue));\r\n        }\r\n    }\r\n\r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, patientFullName, phoneMother, phoneFather } = patientObj;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || patientFullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const onChangeAppointmentDate = (medicalBookId, appointmentDate) => {\r\n        if(appointmentDate){\r\n            const takenValue = appointmentDate._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const today = new Date();\r\n                const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n                const convertAppointmentDateFindDataAppointment = new Date(findDataAppointment.appointmentDate)\r\n\r\n                if(today <= takenValue || takenValue >= convertAppointmentDateFindDataAppointment){\r\n                    findDataAppointment.appointmentDate = moment(takenValue).format('YYYY-MM-DD');\r\n                }\r\n            }, 100) \r\n        }\r\n        \r\n    }\r\n\r\n    const handleAcceptReExamining = async (medicalBookId) => {\r\n        setLoadingComponent(true);\r\n\r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 1);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            \r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoadingComponent(false);\r\n    }\r\n\r\n    const handleRejectReExamining = async (medicalBookId) => {\r\n        setLoadingComponent(true);\r\n        \r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 2);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoadingComponent(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetAppointmentsNextWeek();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n          if(user.positionName !== 'Nursing'){\r\n            history.push('/404');\r\n          }\r\n        }\r\n      }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        handlePaginate();\r\n    }, [page]);\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1, p: 0 }}>\r\n            <TableContainer component={Paper} sx={{height: loadingComponent ? '40rem' : 'auto', position: 'relative'}}>\r\n                {loadingComponent ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>        \r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Box>\r\n                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                {listPantientAppointmentChipState.map((pantientAppointmentChipStateItem, pantientAppointmentChipStateIndex) => (\r\n                                    <Badge badgeContent={pantientAppointmentChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientAppointmentChipStateIndex}`}> \r\n                                        <Chip label={pantientAppointmentChipStateItem.chipLabel} color={pantientAppointmentChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                            onClick={() => handleSelectedChip(pantientAppointmentChipStateIndex, pantientAppointmentChipStateItem.chipLabel)} />  \r\n                                    </Badge>\r\n                                ))}\r\n                            </Stack>\r\n\r\n                            <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.15rem', fontWeight: 'bolder'}}>Danh sách {activeChip.chipLabel} trong 6 ngày tới</Typography>\r\n\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', mb: 1}}>\r\n                                <TextField sx={{width: 500, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc Số điện thoại' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                        startAdornment: (\r\n                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                        ),\r\n                                        endAdornment: (\r\n                                            <InputAdornment position='end'>\r\n                                                {searchPatientsQuery !== '' ? \r\n                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsAppointmentSort(listDataPatientsAppointmentState)]}\r\n                                                    /> \r\n                                                : \r\n                                                    null\r\n                                                }\r\n                                            </InputAdornment>  \r\n                                        )\r\n                                    }}>\r\n                                </TextField>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Table stickyHeader >\r\n                            <TableHead>\r\n                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                    <TableCell align='left' >Mã bệnh nhân</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày sinh</TableCell>\r\n                                    {/* <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Giới tính</TableCell> */}\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Địa chỉ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên Cha/Mẹ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Số điện thoại</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám cũ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám tiếp theo</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày hẹn khám</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Nhấn</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {listDataPatientsAppointmentSort.map((dataPantientAppointmentItem, dataPantientAppointmentIndex) => (\r\n                                    <TableRow hover role=\"checkbox\" key={dataPantientAppointmentIndex} sx={{':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1) !important'}}}>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientId}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientFullName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{moment(dataPantientAppointmentItem.dateOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                        {/* <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.gender === true ? 'Nam' : 'Nữ'}</TableCell> */}\r\n                                        <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 240, fontSize: '0.9rem'}}>\r\n                                            <Tooltip title={<Typography variant='subtitle2'>{dataPantientAppointmentItem.fullAddress}</Typography>} >\r\n                                                <span>{dataPantientAppointmentItem.fullAddress}</span>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.fullNameFather !== '' ? dataPantientAppointmentItem.fullNameFather : dataPantientAppointmentItem.fullNameMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.phoneFather !== '' ? dataPantientAppointmentItem.phoneFather : dataPantientAppointmentItem.phoneMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.examNameOld}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.nextExamName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto'}}>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                                <DemoContainer components={['DatePicker']}> \r\n                                                    <Box sx={{width: 145}}>\r\n                                                        <div style={{width: '100%'}}>\r\n                                                            <DatePicker label=\"Ngày khám dự kiến\" disablePast minDate={moment()}\r\n                                                                format='DD/MM/YYYY' value={moment(dataPantientAppointmentItem.appointmentDate)}\r\n                                                                onChange={(value) => onChangeAppointmentDate(dataPantientAppointmentItem.medicalBookId, value)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Box> \r\n                                                </DemoContainer>\r\n                                            </LocalizationProvider>\r\n                                        </TableCell>                                                                                                \r\n                                        <TableCell align={dataPantientAppointmentItem.stateAppointment === 0 ? 'left' : 'center'} sx={{width: 'auto', fontSize: '0.9rem'}}>\r\n                                            {dataPantientAppointmentItem.stateAppointment === 0 ?\r\n                                                <>   \r\n                                                    <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {dataPantientAppointmentItem.stateAppointment === 1 ?\r\n                                                        <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    :\r\n                                                        <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </>\r\n                }\r\n            </TableContainer>\r\n\r\n            {listDataPatientsAppointmentSort.length !== 0 && loadingComponent === false ?\r\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n                    <Pagination count={pageCount} page={page} onChange={handlePageChange} color=\"secondary\" />\r\n                </Box>\r\n            :\r\n                null\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainAppointmentExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport _ from 'lodash'\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DialogActions } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//other\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n//css\r\nimport './SCSS/CompleteExamining.scss';\r\n//api\r\nimport { createAddPredecessor, createAddMedicalBook, getAppointmentDate } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CompleteExamining(props) {\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState();\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n\r\n    const typingRef = useRef(null);\r\n    const textareaRef = useRef(null);\r\n    const dateFieldRef = useRef(null);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleCloseModalCompleteExamining = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n          return;\r\n        }\r\n        else{\r\n            setMainDataExaminingForConclusion();\r\n            props.setOpenModalCompleteExamining(false);\r\n        }\r\n      }\r\n\r\n    const onChangeExaminingConclusion = (value) => {\r\n        typingRef.current = setTimeout(() => {\r\n            setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                prevMainDataExaminingForConclusion.conclusion = value;\r\n                return {...prevMainDataExaminingForConclusion}\r\n            })\r\n        }, 300)\r\n    }\r\n\r\n    const onChangeAppointmentDate = (value) => {\r\n        if(value){\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n            typingRef.current = setTimeout(() => {\r\n                const takenValue = value._d;\r\n                const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n                if(formattedDate !== 'Invalid date'){\r\n                    setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                        prevMainDataExaminingForConclusion.appointmentDate = formattedDate;\r\n                        return {...prevMainDataExaminingForConclusion}\r\n                    })\r\n                }\r\n            }, 200)   \r\n        }\r\n    }\r\n\r\n    const handleSetDataCompleteExamining = async () => {\r\n        setOpenAlertProcessing(true);\r\n\r\n        const editDataExaminingForConclusion = _.clone(props.dataExaminingForConclusion);\r\n        editDataExaminingForConclusion.categories = editDataExaminingForConclusion.categories.map(categoriesItem => ({\r\n            ...categoriesItem,\r\n            // Lọc các categoryContents để giữ lại những phần tử có categoryContentQuestions không rỗng\r\n            categoryContents: categoriesItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length > 0)\r\n\r\n            // Loại bỏ các categories nếu tất cả categoryContents của nó đều bị loại bỏ\r\n        })).filter(categoriesItem => categoriesItem.categoryContents.length > 0);\r\n\r\n        const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        if(responseAppointmentDate.status === 200){\r\n            editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n            editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n            editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n            if(editDataExaminingForConclusion.isVaccination){\r\n                editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n                editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n                editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n            }\r\n\r\n        }else{\r\n            toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        }\r\n \r\n        setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        setOpenAlertProcessing(false);\r\n        if(props.dataExaminingForConclusion.conclusion !== ''){\r\n            const length = textareaRef.current.value.length;\r\n            textareaRef.current.setSelectionRange(length, length);\r\n            textareaRef.current.focus();\r\n        }\r\n        else{\r\n            textareaRef.current.focus();\r\n        }\r\n\r\n        // if(editDataExaminingForConclusion.categories.length !== 0){\r\n            \r\n        //     const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        //     if(responseAppointmentDate.status === 200){\r\n        //         editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n        //         editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n        //         editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n        //         if(editDataExaminingForConclusion.isVaccination){\r\n        //             editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n        //             editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n        //             editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n        //         }\r\n\r\n        //     }else{\r\n        //         toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        //     }\r\n \r\n        //     setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        //     setOpenAlertProcessing(false);\r\n        //     if(props.dataExaminingForConclusion.conclusion !== ''){\r\n        //         const length = textareaRef.current.value.length;\r\n        //         textareaRef.current.setSelectionRange(length, length);\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        //     else{\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    const handleAddMedicalBook = async () => {\r\n        if(checkValidate()){\r\n            setOpenAlertProcessing(true);\r\n    \r\n                if(mainDataExaminingForConclusion.categories.some(categoriesItem => categoriesItem.isPredecessor === true)){\r\n                    const categoryPres = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isPredecessor === true)\r\n                    const dataPredecessor = { patientId: mainDataExaminingForConclusion.patientId, categoryPres: categoryPres }\r\n                    await createAddPredecessor(dataPredecessor);\r\n                }\r\n\r\n                const categoriesHealthRecordExamining = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isHealthRecord === true)\r\n                mainDataExaminingForConclusion.categories = categoriesHealthRecordExamining\r\n                const responseAddMedicalBook = await createAddMedicalBook(mainDataExaminingForConclusion);\r\n                if(responseAddMedicalBook.status === 200){\r\n                    toast.success(responseAddMedicalBook.data, {toastId: 'success3'});\r\n                    props.handleCompleteExaminingForPantient();\r\n                    setMainDataExaminingForConclusion();\r\n                    props.setOpenModalCompleteExamining(false);\r\n                }\r\n                else{\r\n                    toast.error(responseAddMedicalBook.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            setOpenAlertProcessing(false);\r\n    }\r\n\r\n    const checkValidate = () => {\r\n        let isValid = true;\r\n        if(mainDataExaminingForConclusion.conclusion === null){\r\n            textareaRef.current.focus();\r\n            toast.error('Bạn chưa nhập kết luận khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === 'Invalid date'){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Ngày tái khám không hợp lệ', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === ''){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Bạn chưa chọn ngày tái khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalCompleteExamining){\r\n            handleSetDataCompleteExamining();\r\n        }\r\n    }, [props.openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalCompleteExamining} onClose={(event, reason) => handleCloseModalCompleteExamining(event, reason)} disableEscapeKeyDown={true}>\r\n                <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Tóm tắt quá trình khám</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalCompleteExamining()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='large'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                    <Box sx={{pl: 6, pr: 6}}>\r\n                        <List sx={{p: 0}}>\r\n                            <Box>\r\n                                {mainDataExaminingForConclusion ? \r\n                                    mainDataExaminingForConclusion.categories.length !== 0 ? \r\n                                        <div className='category-complete-examining'>\r\n                                            {mainDataExaminingForConclusion.categories.map((categoriesItem, categoriesIndex) => (\r\n                                                <div key={`categoriesItem ${categoriesIndex}`}>\r\n                                                    <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                        {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                            <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                                \r\n                                                                {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                    <div key={`questionItem ${questionIndex}`}>\r\n                                                                        <Grid container rowSpacing={0}>\r\n                                                                            {questionIndex === 0 ?\r\n                                                                                <>\r\n                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                    </Grid> \r\n\r\n                                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                        <>\r\n                                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                            </Grid>\r\n                                                                        \r\n                                                                                            <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                        </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    }   \r\n                                                                                </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n                                                                \r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                                classes={{ root: classes.root }}\r\n                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                            />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={5.5} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                :   \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={8} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                }                                                                                                                                                                          \r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    :\r\n                                        <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                :\r\n                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                }\r\n                            </Box>\r\n                        </List>\r\n                    </Box>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{borderTop: '1px solid black'}}>\r\n                    {mainDataExaminingForConclusion ? \r\n                        <div style={{width: '100%', padding: '8px 50px 8px 50px'}}>\r\n                            <TextareaAutosize key={`pantientId ${mainDataExaminingForConclusion.patientId}`} placeholder='Kết luận của bác sĩ' style={{width: '100%', padding: '15px', fontSize: '17px'}} onChange={(e) => onChangeExaminingConclusion(e.target.value)} ref={textareaRef} defaultValue={mainDataExaminingForConclusion.conclusion} /> \r\n                            \r\n                                {mainDataExaminingForConclusion.isVaccination ? \r\n                                    <>\r\n                                        <Box sx={{mb: 0.4}}>\r\n                                            {mainDataExaminingForConclusion.vaccination === '' || mainDataExaminingForConclusion.vaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.vaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.nextVaccination === '' || mainDataExaminingForConclusion.nextVaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.nextVaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.reminder === '' ||  mainDataExaminingForConclusion.reminder === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.reminder}`}</Typography>\r\n                                                </>\r\n                                            }\r\n                                        </Box>\r\n                                            \r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n\r\n                                {mainDataExaminingForConclusion.appointmentDate ? \r\n                                <>\r\n                                    <Box sx={{display: 'flex', justifyContent: 'center', mb: 2}}>\r\n                                        <Typography variant='h6' sx={{mt: 'auto', mb: 'auto', mr: 2}}>Kỳ khám tiếp theo: <span style={{fontWeight: 'bolder', color: '#ff1744'}}>{mainDataExaminingForConclusion.nextExamName}</span></Typography>\r\n                                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                            <DemoContainer components={['DatePicker']}>  \r\n                                                <DatePicker label=\"Ngày khám dự kiến\" disablePast\r\n                                                    format='DD/MM/YYYY' defaultValue={moment(mainDataExaminingForConclusion.appointmentDate)}\r\n                                                    onChange={(value) => onChangeAppointmentDate(value)}\r\n                                                    slotProps={{ \r\n                                                        textField: { inputRef: dateFieldRef, }\r\n                                                    }}\r\n                                                />\r\n                                            </DemoContainer>\r\n                                        </LocalizationProvider>\r\n                                    </Box>\r\n                                </>\r\n                                :\r\n                                    null\r\n                                }\r\n                        \r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <Stack spacing={1} direction=\"row\">\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' onClick={() => handleAddMedicalBook()}>Lưu</Button>\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' color={'error'} onClick={() => handleCloseModalCompleteExamining()}>Đóng</Button>\r\n                                </Stack>\r\n                            </div>\r\n                        </div>   \r\n                    :\r\n                        null            \r\n                    }             \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//scss\r\nimport './SCSS/PreviewLastExamining.scss'; \r\n//api\r\nimport { getMedicalBook } from '../../Service/MedicalService';\r\n//moment\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi'; \r\nmoment.locale('vi');\r\n\r\nfunction PreviewLastExamining(props) {\r\n    const previewDataExaminingDefault = {\r\n        categoryPres: [],\r\n        healthRecords: { examinationName: '', timeUpdateState: '', conclusion: '', medicakBook: [] },\r\n        nutritionals: [],\r\n        vaccinationBook: [] \r\n    }\r\n\r\n    const [previewDataExamining, setPreviewDataExamining] = useState(previewDataExaminingDefault);\r\n    // const [fullDataPredecessor, setFullDataPredecessor] = useState();\r\n    // const [fullDataHealthRecord, setFullDataHealthRecord] = useState();\r\n    \r\n    const [loadingMedicalBook, setLoadingMedicalBook] = useState(false);\r\n\r\n    const [openCollapsePredecessorItem, setOpenCollapsePredecessorItem] = useState([]);\r\n    const [openCollapseMedicakBookItem, setOpenCollapseMedicakBookItem] = useState([]);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpenPredecessorItem = (predecessorIndex) => {\r\n        setOpenCollapsePredecessorItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[predecessorIndex] = !newOpen[predecessorIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleOpenMedicakBookItem = (medicakBookIndex) => {\r\n        setOpenCollapseMedicakBookItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[medicakBookIndex] = !newOpen[medicakBookIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    // const handeOnChangePagePredecessor = (e, page, indexPredecessor) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].categoryContents = fullDataPredecessor[indexPredecessor].categoryContents[page - 1];\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    // const handeOnChangePageHealthRecords = (e, page, indexMedicakbook) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].categoryContents = fullDataHealthRecord[indexMedicakbook].categoryContents[page - 1];\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    const handleEditPrevDataExamining = async () => {\r\n        setLoadingMedicalBook(true);\r\n        const responseMedicalBook = await getMedicalBook(props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0].medicalRegisterId);\r\n        if(props.prevDataExamining.newPredecessor){\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n             \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: [],\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n\r\n        else{\r\n            if(props.prevDataExamining.categoryPres.length > 1){\r\n                props.prevDataExamining.categoryPres = props.prevDataExamining.categoryPres.sort((a, b) => a.categoryOrder - b.categoryOrder);\r\n            }\r\n\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n            \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: props.prevDataExamining.categoryPres,\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n        setLoadingMedicalBook(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.prevDataExamining){\r\n            handleEditPrevDataExamining();\r\n        }\r\n    }, [props.prevDataExamining])\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{height: '100%', position: 'relative'}}>\r\n                {loadingMedicalBook ? \r\n                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                        <CircularProgress />\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh gần nhất, hãy chờ một chút...</Typography>\r\n                    </Box>\r\n                :\r\n                    <>\r\n                        <div className='preview-last-examining-contents' >\r\n\r\n                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem'}}>\r\n                                Thông tin tóm tắt <span style={{color: 'red'}}>{previewDataExamining.healthRecords.examinationName}</span>\r\n                            </Typography>\r\n\r\n                            <List sx={{p: 0}}>\r\n                                {previewDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                    <div key={`predecessorItem ${predecessorIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenPredecessorItem(predecessorIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapsePredecessorItem[predecessorIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapsePredecessorItem[predecessorIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {predecessorItem.categoryContents.map((predecessorItemCategoryContentsItem, predecessorItemCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`predecessorItemCategoryContentsIndex ${predecessorItemCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: predecessorItemCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{predecessorItemCategoryContentsItem.categoryContentTitle}</Typography>\r\n                                                    \r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {predecessorItemCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{predecessorItemCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={6.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                                    \r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={6.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))} \r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                {previewDataExamining.healthRecords.medicakBook.map((medicakBookItems, medicakBookIndex) => (\r\n                                    <div key={`medicakBookItems ${medicakBookIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenMedicakBookItem(medicakBookIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseMedicakBookItem[medicakBookIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={medicakBookItems.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapseMedicakBookItem[medicakBookIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {medicakBookItems.categoryContents.map((medicakBookCategoryContentsItem, medicakBookCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`medicakBookCategoryContentsIndex ${medicakBookCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: medicakBookCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{medicakBookCategoryContentsItem.categoryContentTitle}</Typography>\r\n\r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {medicakBookCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{medicakBookCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={5.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))}\r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}             \r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n                            </List>\r\n\r\n                            <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận: ${previewDataExamining.healthRecords.conclusion}`}</Typography>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='time-examining' style={{marginLeft: '16px', marginTop: '4px', width: '99%'}}>\r\n                            <Typography variant='subtitle1' sx={{color: '#009688', fontWeight: 'bolder', fontSize: '1.08rem'}}>{`${previewDataExamining.healthRecords.doctorFullName}, ${moment(previewDataExamining.healthRecords.timeUpdateState).format('LLLL')}`}</Typography>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Box>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default PreviewLastExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//lodash\r\nimport _, { constant } from \"lodash\";\r\n//modal\r\nimport CompleteExamining from '../ManageCompleteExamining/CompleteExamining';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//components\r\nimport PreviewLastExamining from './PreviewLastExamining';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { GiWeightScale } from \"react-icons/gi\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport { TbRulerMeasure } from \"react-icons/tb\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport BeenhereIcon from '@mui/icons-material/Beenhere';\r\nimport VaccinesIcon from '@mui/icons-material/Vaccines';\r\nimport CachedIcon from '@mui/icons-material/Cached';\r\n//moment\r\nimport moment from 'moment';\r\n//scss\r\nimport './SCSS/DoctorExamining.scss';\r\n//real-time\r\nimport {startSignalRConnection, onReceiveMessage} from '../../Service/SignalService';\r\n//api\r\nimport { \r\n    createAddPredecessor,\r\n    getMedicalDetailPatient,\r\n    getRegistersByDateNow, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook,\r\n    updateMedicalState,\r\n    deleteMedicalBook\r\n} from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainDoctorExamining() {\r\n    const dataPantientsReadyExaminingDefault = {\r\n        stt: '',\r\n        id: '',\r\n        patientsId: '',\r\n        patientCode: '',\r\n        patientsName: '',\r\n        patientsDOB: '',\r\n        patientsMonthsOld: '',\r\n        patientsGender: '',\r\n        patientsHeight: '',\r\n        patientsWeight: '',\r\n        patientsHeadCircumference: '',\r\n        patientsPhone: '',\r\n        patientsAddress: ''\r\n    }\r\n\r\n    const { user, loading, alertVisible, confirmAlert, resetAlert, isLogOutClick, isDialogChangePasswordOpen } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isFormDirty, setIsFormDirty] = useState(false);\r\n\r\n    //state thông tin bệnh nhân ban đầu \r\n    const [dataPantientsReadyExamining, setDataPantientsReadyExamining] = useState(dataPantientsReadyExaminingDefault);\r\n\r\n    //state các category gồm tiêu đề nội dung khám và câu hỏi khám ban đầu\r\n    const [mainDataExamining, setMainDataExamining] = useState([]);\r\n\r\n    //state lưu tạm data các kỳ khám \r\n    const [prevDataExamining, setPrevDataExamining] = useState();\r\n\r\n    //state đóng mở cây thư mục khám của sổ khám bệnh\r\n    const [openCollapseHealthRecords, setOpenCollapseHealthRecords] = useState(false);\r\n\r\n    //state đóng mở chi tiết nội dung của sổ khám bệnh\r\n    const [openCollapseHealthRecordsItem, setOpenCollapseHealthRecordsItem] = useState([]);\r\n\r\n    //state chọn danh mục khám ban đầu\r\n    const [categorySelectedExamining, setCategorySelectedExamining] = useState({});\r\n\r\n    //state chọn danh mục bao gồm nội dung bên trong ban đầu\r\n    const [contentCategorySelectedExamining, setContentCategorySelectedExamining] = useState([]);\r\n\r\n    //state lưu tạm nội dung chi tiết của sổ khám bệnh\r\n    const [healthRecordsContents, setHealthRecordsContents] = useState([]);\r\n    const [currentHealthRecordExamining, setCurrentHealthRecordExamining] = useState();\r\n\r\n    //tiền căn show ở thông tin bệnh nhân\r\n    const [previewPredecessor, setPreviewPredecessor] = useState();\r\n    const [oldPreviewPredecessor, setOldPreviewPredecessor] = useState();\r\n\r\n    //state các câu hỏi được bác sĩ khám tích hoặc gõ vào\r\n    const [dataExaminingForConclusion , setDataExaminingForConclusion ] = useState({});\r\n\r\n    //state lưu tạm các data tiền căn của getUpdatePredecessor (bao gồm những data tiền căn đã chọn và chưa chọn)\r\n    const [oldDataPredecessor, setOldDataPredecessor] = useState();\r\n\r\n    //dùng khi tái khám hoặc mở khám lại cho bệnh nhân có tiền căn đã đụng\r\n    const [newDataPredecessor, setNewDataPredecessor] = useState();\r\n\r\n    //state lưu data tiền căn cũ (những data tiền căn đã chọn)  \r\n    const [prevDataPredecessor, setPrevDataPredecessor] = useState();\r\n\r\n    //state quản lý modal kết thúc khám\r\n    const [openModalCompleteExamining, setOpenModalCompleteExamining] = useState(false);\r\n\r\n    const [loadingPrevDataExamining, setLoadingPrevDataExamining] = useState(false);\r\n    const [loadingPatient, setLoadingPatient] = useState(true);\r\n    const [loadingInfoPatient, setLoadingInfoPatient] = useState(true);\r\n    const [loadingCategoryExamining, setLoadingCategoryExamining] = useState(false);\r\n    const [loadingContentsExamining, setLoadingContentsExamining] = useState(false);\r\n\r\n    const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n  \r\n    const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n    const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n    const [listPantientChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n            { chipLabel: 'BN đã khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n          const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n            setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n            setListDataPatientsRegisterState(listPantientRegisterDone);\r\n        }\r\n    };\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n        }else{\r\n          setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n        }\r\n      }\r\n    \r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n        const { patientCode, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n            return patientCode.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const handleCompleteExaminingForPantient = () => {\r\n        setLoadingPatient(true);\r\n        toast.success(`Đã kết thúc khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        setPreviewPredecessor();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleCancelExamining = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingCategoryExamining(true);\r\n        setLoadingContentsExamining(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, [dataPantientsReadyExamining.editExamining === true ? 2 : 0 || dataPantientsReadyExamining.backRegister === true ? 3 : 0]);\r\n        if(response.status === 200){\r\n            toast.success(`Đã hủy khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success2'});    \r\n            setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n            setMainDataExamining([]);\r\n            setOpenCollapseHealthRecords(false);\r\n            setOpenCollapseHealthRecordsItem([]);\r\n            setCategorySelectedExamining({});\r\n            setContentCategorySelectedExamining([]);\r\n            setHealthRecordsContents([]);\r\n            setCurrentHealthRecordExamining();\r\n            setDataExaminingForConclusion({});\r\n            setPrevDataPredecessor();\r\n            setCurrentHealthRecordExamining();\r\n            setOldDataPredecessor();\r\n            setPreviewPredecessor();\r\n            handleGetRegistersByDateNow();\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    const handleDeleteExamining = async () => {\r\n        const confirmLeave = window.confirm(\r\n            'Chức năng này sẽ xóa tất cả dữ liệu của kỳ khám hiện tại và đặt bệnh nhân về trạng thái chưa khám. Bạn có muốn xóa không?'\r\n        );\r\n        if (confirmLeave) {\r\n            setLoadingPatient(true);\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const responseDeleteMedicalBook = await deleteMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n            if(responseDeleteMedicalBook.status === 200){\r\n                toast.success(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingSuccess'});\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    await updateMedicalState(dataPantientsReadyExamining.id, 3);\r\n                }\r\n                setPrevDataExamining();\r\n                if(previewPredecessor && previewPredecessor.length !== 0){\r\n                    setPreviewPredecessor();\r\n                }\r\n                setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n                setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n                handleGetRegistersByDateNow();\r\n            }\r\n            else{\r\n                toast.error(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingError'});\r\n            }\r\n            setOpenAlertProcessingBackdrop(false);\r\n        } else {\r\n            return false; // Ngăn điều hướng\r\n        }\r\n    }\r\n\r\n    const handleStartExaminingButtonClick = () => {\r\n        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n            handleBeginExaminingForPantient();\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 1){\r\n            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n            handleBeginEditExaminingForPantient();\r\n        }\r\n    }\r\n\r\n    const handleCompleteExaminingButtonClick = () => {\r\n        setOpenAlertProcessingBackdrop(true)\r\n        if(dataPantientsReadyExamining.status === 1){\r\n            setTimeout(() => {\r\n                setOpenAlertProcessingBackdrop(false)\r\n                setOpenModalCompleteExamining(true);\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    //hàm này dùng khi user đang khám mà bị ngáo lỡ nhấn f5\r\n    const handleReloadUIWhenExamining = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        const reDataPatientsRegisterSort = JSON.parse(sessionStorage.dataPatientsRegisterSort)\r\n        const reDataPantientsReadyExamining = JSON.parse(sessionStorage.dataPantientsReadyExamining);\r\n        const reMainDataExamining = JSON.parse(sessionStorage.mainDataExamining);\r\n        const reDataExaminingForConclusion = JSON.parse(sessionStorage.dataExaminingForConclusion);\r\n\r\n        setListDataPatientsRegisterSort(reDataPatientsRegisterSort);\r\n        \r\n        reDataPantientsReadyExamining.isContinueExam = true;\r\n        \r\n        setDataPantientsReadyExamining(_.cloneDeep(reDataPantientsReadyExamining));\r\n        setMainDataExamining(_.cloneDeep(reMainDataExamining));\r\n        setDataExaminingForConclusion(_.cloneDeep(reDataExaminingForConclusion));\r\n\r\n        if(sessionStorage.currentHealthRecordExamining){\r\n            const reCurrentHealthRecordExamining = JSON.parse(sessionStorage.currentHealthRecordExamining);\r\n            setHealthRecordsContents(_.cloneDeep(reCurrentHealthRecordExamining));\r\n            setCurrentHealthRecordExamining(_.cloneDeep(reCurrentHealthRecordExamining));\r\n        }\r\n\r\n        if(sessionStorage.prevDataPredecessor){\r\n            const rePrevDataPredecessor = JSON.parse(sessionStorage.prevDataPredecessor);\r\n            setPrevDataPredecessor(_.cloneDeep(rePrevDataPredecessor));\r\n        }\r\n\r\n        if(sessionStorage.oldDataPredecessor){\r\n            const reOldDataPredecessor = JSON.parse(sessionStorage.oldDataPredecessor);\r\n            setOldDataPredecessor(_.cloneDeep(reOldDataPredecessor));\r\n        }\r\n        \r\n        setNewDataPredecessor({\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            categoryPres: []\r\n        })\r\n        \r\n        sessionStorage.clear();\r\n\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //lấy danh sách đăng ký khám trong ngày\r\n    const handleGetRegistersByDateNow = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1 * 1000));\r\n        const response = await getRegistersByDateNow();\r\n        if(response !== 400){\r\n            let responseListPantient = response.list;\r\n            const findPantientIsExam = responseListPantient.find(item => item.state === 1 && item.userIdDoctor === user.userId);\r\n            if(findPantientIsExam){\r\n                const responseDataExamining = await getMedicalDetailPatient(findPantientIsExam.id);\r\n                if(responseDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n                    await updateMedicalState(findPantientIsExam.id, responseDataExamining.healthRecords.length === 1 ? 0 : 3);    \r\n                    const indexPantient = responseListPantient.findIndex(item => item.id === findPantientIsExam.id)\r\n                    responseListPantient[indexPantient].state = responseDataExamining.healthRecords.length === 1 ? 0 : 3\r\n                }\r\n                else{\r\n                    await updateMedicalState(findPantientIsExam.id, 2);  \r\n                    const indexPantient = responseListPantient.findIndex(item => item.id === findPantientIsExam.id)\r\n                    responseListPantient[indexPantient].state = 2        \r\n                }\r\n            }\r\n\r\n            const findListPantientNotExam = responseListPantient.filter(item => item.state !== 1)\r\n\r\n            setListDataPatientsRegister(findListPantientNotExam);\r\n\r\n            const listPantientRegisterWaiting = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state !== 2) //chờ khám và đang khám\r\n            const listPantientRegisterDone = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n \r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const updatedList = [\r\n                { chipLabel: 'BN chờ khám', chipContent: listPantientRegisterWaiting.length },\r\n                { chipLabel: 'BN đã khám', chipContent: listPantientRegisterDone.length }\r\n            ]\r\n            setListPantientChipState(updatedList);\r\n        }\r\n\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n    }\r\n\r\n    const handleReloadGetRegistersByDateNow = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setCurrentHealthRecordExamining();\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        setPreviewPredecessor();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleAppyPantientData = async (dataPantientItem) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingPrevDataExamining(true);\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            setPreviewPredecessor();\r\n        }\r\n        await handleGetMedicalDetailPatient(dataPantientItem.id);\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.stt = dataPantientItem.order;\r\n        _dataPantientsReadyExamining.id = dataPantientItem.id;\r\n        _dataPantientsReadyExamining.status = 0;\r\n        _dataPantientsReadyExamining.patientsId = dataPantientItem.patient.patientId;\r\n        _dataPantientsReadyExamining.patientCode = dataPantientItem.patient.patientCode;\r\n        _dataPantientsReadyExamining.patientsName = dataPantientItem.patient.fullName;\r\n        _dataPantientsReadyExamining.patientsDOB = dataPantientItem.patient.dayOfBirth;\r\n        _dataPantientsReadyExamining.patientsMonthsOld = dataPantientItem.patient.monthsOfAge;\r\n        _dataPantientsReadyExamining.patientsGender = dataPantientItem.patient.gender;\r\n        _dataPantientsReadyExamining.patientsHeight = dataPantientItem.height;\r\n        _dataPantientsReadyExamining.patientsWeight = dataPantientItem.weight;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsPhone = dataPantientItem.patient.phoneMother ? dataPantientItem.patient.phoneMother : dataPantientItem.patient.phoneFather;\r\n        _dataPantientsReadyExamining.patientsAddress = dataPantientItem.patient.fullAddress;\r\n        _dataPantientsReadyExamining.vaccination = dataPantientItem.vaccination === true ? true : false;\r\n        _dataPantientsReadyExamining.editExamining = dataPantientItem.state === 2 ? true : false;\r\n        _dataPantientsReadyExamining.backRegister = dataPantientItem.state === 3 ? true : false;\r\n        _dataPantientsReadyExamining.isContinueExam = false;\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n        setLoadingInfoPatient(false);\r\n        setLoadingPrevDataExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //nhấn chọn bệnh nhân để load vào ô thông tin bn\r\n    const handleSelectPantientExamining = async (dataPantientItem) => {\r\n        if(dataPantientItem.state === 0 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName || dataPantientItem.state === 3 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId === '' || dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 0){\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n            else{\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n        }\r\n        \r\n        else if(dataPantientItem.state === 2 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 1){\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n            else{\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    //bắt đầu khám bệnh cho bệnh nhân\r\n    const handleBeginExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            if(prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                    //backup prevDataPredecessor để khi cần dùng\r\n                    setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n                    setOldPreviewPredecessor(_.cloneDeep(previewPredecessor));\r\n                }\r\n\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleSetMainDataExamining();\r\n                toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n            }\r\n            else{\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleGetCategoryReExamining();\r\n            }\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error(response.data, {toastId: 'error1'});\r\n        }\r\n        setLoadingPatient(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu khám cho bệnh nhân khám mới\r\n    const handleSetMainDataExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        prevDataExamining.healthRecords.forEach((healthRecordsItem) => {\r\n            if(healthRecordsItem.medicalBookId === null){\r\n                healthRecordsItem.state = 1\r\n            }\r\n        })\r\n        \r\n        //tái khám và có tiền căn đã đụng\r\n        if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === false){\r\n            const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //tái khám và có tiền căn chưa đụng\r\n        else if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === true){\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n\r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //khám mới hoàn toàn\r\n        else{\r\n            const editDataCategoryPresForConclusion = prevDataExamining.categoryPres.map((predecessorItem) => {\r\n                const mainCategoryContentsExamining = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentOrder: categoryContentsItem.categoryContentOrder,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n    \r\n                const mainCategoryExamining = {\r\n                    categoryName: predecessorItem.categoryName,\r\n                    isPredecessor: true,\r\n                    categoryOrder: predecessorItem.categoryOrder,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n    \r\n                return mainCategoryExamining\r\n            })\r\n    \r\n            const editDataHealthRecordsForConclusion = prevDataExamining.healthRecords.find((healthRecordsItem) => healthRecordsItem.patientId === dataPantientsReadyExamining.patientsId)\r\n    \r\n            setDataExaminingForConclusion({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n                conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n                categories: editDataCategoryPresForConclusion,\r\n            });\r\n    \r\n            prevDataExamining.categoryPres.forEach((categoryPresItem, categoryPresIndex) => {\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.map((categoryContentsItem) => {\r\n                    return {\r\n                        ...categoryContentsItem,\r\n                        categoryPresOrder: categoryPresIndex\r\n                    }\r\n                })\r\n                return {\r\n                    ...categoryPresItem,\r\n                }\r\n            })\r\n            \r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //bắt đầu sửa dữ liệu khám bệnh\r\n    const handleBeginEditExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n            const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n            _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n            setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n            const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            await handleGetCategoryReExamining();\r\n            setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n            setLoadingPatient(false);\r\n        }\r\n    }\r\n\r\n    //lấy dữ liệu cây thư mục khám lại\r\n    const handleGetCategoryReExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        const responseGetUpdateMedicalBook = await getUpdateMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n\r\n        if(responseGetUpdateMedicalBook.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n\r\n            if(prevDataExamining.newPredecessor === false){\r\n                setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                //backup prevDataPredecessor để khi cần dùng\r\n                setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                setOldPreviewPredecessor(_.cloneDeep(previewPredecessor));\r\n            }\r\n            \r\n            await handleSetMainDataReExamining(responseGetUpdateMedicalBook.data);\r\n            toast.success(`Đang mở khám lại cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        }\r\n        else if(responseGetUpdateMedicalBook.status === 400){\r\n            toast.error(responseGetUpdateMedicalBook.data, {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu cây thư mục khám của chức năng mở khám lại\r\n    const handleSetMainDataReExamining = async (responseGetUpdateMedicalBookData) => {\r\n        prevDataExamining.healthRecords[0].state = 1\r\n        prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBookData.categories\r\n\r\n        const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n            categoryName: category.categoryName,\r\n            isHealthRecord: true,\r\n            categoryContents: category.categoryContents.map(content => ({\r\n              ...content,\r\n              categoryContentQuestions: []\r\n            })) \r\n        }))\r\n\r\n        //demo truớc data kết luận\r\n        const demoDataExaminingForConclusion = {\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            isVaccination: prevDataExamining.vaccination,\r\n            medicalRegisterId: dataPantientsReadyExamining.id !== prevDataExamining.healthRecords[0].medicalRegisterId ? dataPantientsReadyExamining.id : prevDataExamining.healthRecords[0].medicalRegisterId,\r\n            conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n            categories: updateHealthRecordsCategoriesForConclusion\r\n        }\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        //sửa categories của conclusion phần sổ khám bệnh\r\n        let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.healthRecords[0].categories);\r\n\r\n        updateCategoriesForConclusion = updateCategoriesForConclusion.map(category => {\r\n            category.categoryContents = category.categoryContents.map(content => {\r\n                const questions = content.categoryContentQuestions;\r\n    \r\n                // Check if all questions have both categoryContentAnswer and categoryContentNote as null\r\n                const allNull = questions.every(q => q.categoryContentAnswer === null && q.categoryContentNote === null);\r\n                    \r\n                if (allNull) {\r\n                  // Set categoryContentQuestions to an empty array\r\n                  content.categoryContentQuestions = [];                    \r\n                } else {\r\n                  // Filter out questions with both categoryContentAnswer and categoryContentNote as null\r\n                  content.categoryContentQuestions = questions.filter(q => q.categoryContentAnswer !== null || q.categoryContentNote !== null);\r\n                }\r\n                    \r\n                return content;\r\n            });\r\n                  \r\n            category.isHealthRecord = true\r\n            return category;\r\n        })\r\n\r\n        demoDataExaminingForConclusion.categories = updateCategoriesForConclusion\r\n\r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        //tiền căn đợt trước đã đụng (newPredecessor = false)\r\n        if(responseGetUpdatePredecessor.status === 200)\r\n        {   \r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        \r\n        //tiền căn đợt trước chưa đụng (newPredecessor = true) \r\n        else{\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n        \r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n    }\r\n\r\n    //sửa dữ liệu tiền căn cho mở khám lại hoặc tái khám\r\n    const handleEditDataPredecessor = async (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        \r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        const findUpdatePredecessor = responseGetUpdatePredecessor.data.find(responseGetUpdatePredecessorItem => responseGetUpdatePredecessorItem.categoryOrder === categoryOrder);\r\n\r\n        mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n            if(categoryPresItem.categoryOrder === findUpdatePredecessor.categoryOrder){\r\n                categoryPresItem.categoryContents = findUpdatePredecessor.categoryContents\r\n                categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                    categoryContentsItem.isLock = false\r\n                })\r\n                categoryPresItem.isLock = false\r\n            }\r\n        })\r\n\r\n        const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n        \r\n        if(!newDataPredecessor.categoryPres.some(categoryPresItem => categoryPresItem.categoryName === categoryName)){\r\n            newDataPredecessor.categoryPres = prevDataPredecessor\r\n        }\r\n\r\n        handleSelectCategoryClick(selectCategoryReExamining);\r\n\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //huỷ không sửa dữ liệu tiền căn nữa\r\n    const handleCancelEditDataPredecessor = (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        setTimeout(() => {\r\n            const findPrevDataPredecessorByCategoryName = oldDataPredecessor.find(prevDataPredecessorItem => prevDataPredecessorItem.categoryOrder === categoryOrder);\r\n\r\n            if(findPrevDataPredecessorByCategoryName){\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        categoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                        categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                            categoryContentsItem.isLock = true\r\n                        })\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                newDataPredecessor.categoryPres.forEach((newDataPredecessorCategoryPresItem) => {\r\n                    if(newDataPredecessorCategoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        newDataPredecessorCategoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === categoryOrder){\r\n                        categoryPresItem.categoryContents = [];\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                const _newDataPredecessor = {...newDataPredecessor};\r\n                const removeCategoryPredecessor = _newDataPredecessor.categoryPres.filter(categoryPresItem => categoryPresItem.categoryOrder !== categoryOrder);\r\n                newDataPredecessor.categoryPres = removeCategoryPredecessor\r\n            }\r\n\r\n            setPrevDataPredecessor(_.cloneDeep(oldDataPredecessor));\r\n\r\n            const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n            handleSelectCategoryClick(selectCategoryReExamining)\r\n\r\n            const findOldDataPredecessorByCategoryOrder = oldPreviewPredecessor.filter(item => item.categoryOrder === categoryOrder);\r\n            const findPreviewPredecessorNotByCategoryOrder = previewPredecessor.filter(item => item.categoryOrder !== categoryOrder);\r\n\r\n            const newPreviewPredecessor = findOldDataPredecessorByCategoryOrder.concat(findPreviewPredecessorNotByCategoryOrder);\r\n            setPreviewPredecessor(newPreviewPredecessor);\r\n   \r\n            setOpenAlertProcessingBackdrop(false);\r\n        }, 300)       \r\n    }\r\n\r\n    //tạo data tiền căn để lưu lại khi tái khám hoặc mở khám lại\r\n    //câu trả lời dạng check chọn true false\r\n    const handleAnswerCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n    }\r\n\r\n    //câu trả lời dạng check chọn sửa lại note\r\n    const handleNoteCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n        const isEditNote = true;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], takenValue, isEditNote)\r\n        }, 0)\r\n    }\r\n\r\n    //câu trả lời dạng giá trị, sửa lại note\r\n    const handleNoteValueQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsValuePredecessorForReExamOrBackExam(\r\n                categoryContentsIndex,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, \r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], \r\n                takenValue\r\n            )\r\n        }, 0)\r\n    }\r\n\r\n    const createSelectedQuestionsValuePredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue) => {\r\n        const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n        if(findNewDataPredecessorCategoryOrder){\r\n            // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n            const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n            if(findNewDataPredecessorCategoryContents){\r\n                // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue !== '');\r\n                const questionIndexRemove = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue === '');\r\n\r\n                if(questionIndex !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value khác rỗng => gán note cũ bằng note mới\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n                }\r\n\r\n                else if(questionIndexRemove !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value bằng rỗng => bỏ note đó\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexRemove, 1);\r\n                }\r\n\r\n                else{\r\n                    //nếu không tìm thấy, đẩy note mới vào\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                }\r\n            }\r\n\r\n            else{\r\n                // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                const newDataPredecessorCategoryContents = {\r\n                    categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                    categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                    categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                    categoryContentQuestions: [categoryContentQuestion],\r\n                    categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                    categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                }\r\n                findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n            }\r\n        }\r\n\r\n        else{\r\n            // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n            const newDataPredecessorCategoryContents = {\r\n                categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                categoryContentQuestions: [categoryContentQuestion],\r\n                categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n            }\r\n\r\n            const newDataPredecessorCategoryPres = {\r\n                categoryOrder: categorySelectedExamining.categoryOrder,\r\n                categoryName: categorySelectedExamining.categoryName,\r\n                newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                categoryContents: [newDataPredecessorCategoryContents]\r\n            }\r\n\r\n            newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n        }   \r\n        \r\n        createPreviewDataPredecessor(categoryContentQuestion);\r\n    }\r\n\r\n    const createSelectedQuestionsPredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue, isEditNote) => {\r\n        if(isEditNote){\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){       \r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng rỗng\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n         \r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                        else{\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndex, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else{\r\n            //câu hỏi là dạng check câu trả lời là true\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote !== '');\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n                        }\r\n                        else{\r\n                            // Nếu tìm thấy categoryContentOrder, thêm câu hỏi mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }       \r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents)\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check câu trả lời là false\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndexNoteDontExit = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote === null);\r\n                        if(questionIndexNoteDontExit !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexNoteDontExit, 1);\r\n                        }\r\n                        else{\r\n                            const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n    }\r\n\r\n    //lưu dữ liệu tiền căn khi sửa xong\r\n    const handleEditDataPredecessorForSaving = (categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setTimeout(() => {\r\n            const findNewDataPredecessor = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPres => newDataPredecessorCategoryPres.categoryOrder === categoryOrder)\r\n\r\n            const findOldDataPredecessorCategoryOrder = oldDataPredecessor.find(oldDataPredecessorItem => oldDataPredecessorItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n\r\n            if(findOldDataPredecessorCategoryOrder){\r\n                // Nếu tìm thấy categoryOrder, duyệt qua categoryContents của findNewDataPredecessor\r\n                findNewDataPredecessor.categoryContents.forEach(findNewDataPredecessorCategoryContentsItem => {\r\n\r\n                    let content = findOldDataPredecessorCategoryOrder.categoryContents.find(findOldDataPredecessorCategoryContentsItem => findOldDataPredecessorCategoryContentsItem.categoryContentOrder === findNewDataPredecessorCategoryContentsItem.categoryContentOrder);\r\n\r\n                    if(content){\r\n                        // Loại bỏ các categoryContentQuestions trong content nếu không tồn tại trong findNewDataPredecessorCategoryContentsItem\r\n                        content.categoryContentQuestions = content.categoryContentQuestions.filter(q =>\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.some(newQ => newQ.categoryContentQuestionOrder === q.categoryContentQuestionOrder)\r\n                        );\r\n\r\n                        // Nếu tìm thấy categoryContentOrder, duyệt qua categoryContentQuestions\r\n                        if(findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.length !== 0){\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.forEach(findNewDataPredecessorQuestionItem => {\r\n                                if(findNewDataPredecessorQuestionItem.categoryContentAnswer === null && findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'check'){\r\n                                    // Nếu categoryContentAnswer là false và categoryContentNote là null, loại bỏ question đó\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else if(findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'string'){\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else{\r\n                                    const questionIndex = content.categoryContentQuestions.findIndex(q => q.categoryContentQuestionOrder === findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n\r\n                                    if (questionIndex !== -1) {\r\n                                        // Thay thế question nếu trùng khớp\r\n                                        content.categoryContentQuestions[questionIndex] = findNewDataPredecessorQuestionItem;\r\n                                    }\r\n\r\n                                    else {\r\n                                        // Thêm question mới nếu không trùng khớp\r\n                                        content.categoryContentQuestions.push(findNewDataPredecessorQuestionItem);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        }else{\r\n                            findOldDataPredecessorCategoryOrder.categoryContents = findOldDataPredecessorCategoryOrder.categoryContents.filter(contentCategoryContentsItem => contentCategoryContentsItem.categoryContentOrder !== findNewDataPredecessorCategoryContentsItem.categoryContentOrder)\r\n                        }\r\n                        \r\n                    }else{\r\n                        findOldDataPredecessorCategoryOrder.categoryContents.push(findNewDataPredecessorCategoryContentsItem);\r\n                    }\r\n\r\n                })\r\n            }else{\r\n                // Thêm toàn bộ object2 nếu không tìm thấy findNewDataPredecessor\r\n                oldDataPredecessor.push(findNewDataPredecessor)\r\n            }\r\n\r\n            oldDataPredecessor.forEach((oldDataPredecessorItem) => {\r\n                oldDataPredecessorItem.categoryContents = oldDataPredecessorItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length !== 0)\r\n            }) \r\n\r\n            const removeOldDataPredecessorCategoryPres = oldDataPredecessor.findIndex(item => item.categoryContents.length === 0);\r\n            if(removeOldDataPredecessorCategoryPres !== -1){\r\n                oldDataPredecessor.splice(removeOldDataPredecessorCategoryPres, 1);\r\n            }\r\n\r\n            const saveNewDataPredecessor = {\r\n                patientId: newDataPredecessor.patientId,\r\n                categoryPres: oldDataPredecessor\r\n            }\r\n\r\n            handleSaveNewDataPredecessor(saveNewDataPredecessor, findNewDataPredecessor)            \r\n        }, 500)\r\n    }\r\n\r\n    const handleSaveNewDataPredecessor = async (saveNewDataPredecessor, findNewDataPredecessor) => {\r\n        const responseCreateAddPredecessor = await createAddPredecessor(saveNewDataPredecessor);\r\n        if(responseCreateAddPredecessor.status === 200){\r\n\r\n            const _mainDataExamining = {...mainDataExamining};\r\n\r\n            _mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                if(categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder){\r\n                    categoryPresItem.categoryContents = findNewDataPredecessor.categoryContents\r\n                    categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                        categoryContentsItem.isLock = true\r\n                    })\r\n                    if(findNewDataPredecessor.categoryContents.length === 0){\r\n                        categoryPresItem.newCategoryPre = true\r\n                    }else{\r\n                        categoryPresItem.newCategoryPre = false\r\n                    }\r\n                    categoryPresItem.isLock = true\r\n                }\r\n\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.filter(item => item.categoryContentQuestions.length !== 0);\r\n            })\r\n\r\n            setMainDataExamining(_mainDataExamining);\r\n\r\n            const selectCategoryReExamining = _mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n\r\n            setPreviewPredecessor(previewPredecessor);\r\n            setOldPreviewPredecessor(previewPredecessor);\r\n            \r\n            toast.success('Đã cập nhật lại tiền căn', {toastId: 'handleSaveNewDataPredecessorSuccess'});\r\n            \r\n            handleSelectCategoryClick(selectCategoryReExamining);\r\n        }\r\n        else{\r\n            toast.error(responseCreateAddPredecessor.data, {toastId: 'handleSaveNewDataPredecessorError'});\r\n        }\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //tìm danh mục khám gồm tiền căn, sổ sức khỏe, dinh dưỡng...\r\n    const handleGetMedicalDetailPatient = async (id) => {\r\n        const responseDataExamining = await getMedicalDetailPatient(id);\r\n        setPrevDataExamining(responseDataExamining);\r\n\r\n        const findNewCategoryPreIsFalse = responseDataExamining.categoryPres.filter(item => item.newCategoryPre === false);\r\n        const previewDataPredecessor = findNewCategoryPreIsFalse.flatMap(item => \r\n            item.categoryContents.flatMap(content => \r\n                content.categoryContentQuestions.map(question => ({\r\n                    categoryContentQuestionOrder: question.categoryContentQuestionOrder,\r\n                    categoryContentQuestionName: question.categoryContentQuestionName,\r\n                    categoryContentQuestionType: question.categoryContentQuestionType,\r\n                    categoryContentAnswer: question.categoryContentAnswer,\r\n                    categoryContentNote: question.categoryContentNote,\r\n                    categoryContentDefauls: question.categoryContentDefauls,\r\n                    categoryOrder: item.categoryOrder // Thêm categoryOrder từ cấp trên\r\n                }))\r\n            )\r\n        )\r\n        setPreviewPredecessor(previewDataPredecessor);\r\n    }\r\n\r\n    //chọn mục lục để khám\r\n    const handleSelectCategoryClick = async (categoryIncludeCotent) => {\r\n        if(openCollapseHealthRecords === true){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }\r\n\r\n        if(contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length !== 0){\r\n            setContentCategorySelectedExamining([]);\r\n        }\r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                ...categoryIncludeCotent,\r\n                //contentQuantity: categoryIncludeCotent.categoryContents.length\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining([]);\r\n    }\r\n\r\n    //chọn cây thư mục khám sổ sức khỏe\r\n    const handleSelectHealthRecords = (healthRecords) => {\r\n        if(openCollapseHealthRecords === false){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }        \r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                categoryName: 'Sổ sức khỏe',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(\r\n            {\r\n                healthRecordsContentsType: 'tree',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n    }\r\n\r\n    //chọn chỉ định một sổ khám bệnh (tìm chi tiết một sổ khám bệnh)\r\n    const handleSelectHealthRecordsItem = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingContentsExamining(true);\r\n\r\n        //dùng cho tái khám (có tiền căn đã đụng), mở khám lại\r\n        if(currentHealthRecordExamining){\r\n            if(healthRecordsContents.healthRecordsName !== examinationName){\r\n                if(healthRecordsState === 2){\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n                else if(healthRecordsState === 1 && dataPantientsReadyExamining.editExamining || healthRecordsState === 1 && dataPantientsReadyExamining.backRegister){\r\n                    setHealthRecordsContents({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    })\r\n\r\n                    setCurrentHealthRecordExamining({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    });\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && dataPantientsReadyExamining.isContinueExam){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else{\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n            }\r\n        }\r\n        //dùng cho tái khám (tiền căn chưa đụng), khám mới hoàn toàn\r\n        else{\r\n            await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n        }\r\n\r\n        setLoadingContentsExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const findHealthRecord = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        const responseMedicalBook = await getMedicalBook(medicalRegisterId);\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        });\r\n\r\n        if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && mainDataExamining.healthRecords[0].medicalBookId === null){\r\n            const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n                \r\n                const mainCategoryExamining = {\r\n                    categoryName: categoriesItem.categoryName,\r\n                    isHealthRecord: true,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n\r\n                return mainCategoryExamining\r\n            })\r\n\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    //chọn loại mục khám của một sổ khám bệnh\r\n    const handleOpenHealthRecordsItem = (categoryPatientsIndex) => {\r\n        setOpenCollapseHealthRecordsItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryPatientsIndex] = !newOpen[categoryPatientsIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleAnswerCheckQuestion = (categoryContentsIndex, questionIndex, answer) => {\r\n        //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng check\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else{\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }   \r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const handleNoteCheckQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            )\r\n        }, 0)\r\n    }\r\n\r\n    const handleAnswerValueQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }, 0)\r\n    }\r\n\r\n    const handleAnswerCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else if(answer === true){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else{\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n    }\r\n    \r\n    //trả lời câu hỏi của mục sổ khám bệnh\r\n    const handleNoteCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            );\r\n        }, 0)\r\n    }\r\n\r\n    const createSelectedQuestionsExaminingForConclusion = (categoryName, isPredecessor, categoryContentQuestion, questionOrder, categoryContentTitle, isEditNote) => {\r\n        if(categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            if(isEditNote){\r\n                if(categoryContentQuestion.categoryContentNote !== ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n\r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n\r\n                else if(categoryContentQuestion.categoryContentNote === ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentAnswer === null || categoryContentQuestionsItem.categoryContentAnswer === false){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n            }\r\n            else{\r\n                //question dạng check nhưng answer là true\r\n                if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n    \r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n    \r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n    \r\n                //question dạng check nhưng answer là false\r\n                else if(categoryContentQuestion.categoryContentAnswer === false && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentNote === null || categoryContentQuestionsItem.categoryContentNote === ''){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion)\r\n                }\r\n            }\r\n        }\r\n\r\n        else{\r\n            //question dạng giá trị nhưng khác rỗng\r\n            if(categoryContentQuestion.categoryContentNote !== '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                // Duyệt qua từng categoriesItem trong categories\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                    // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                    const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                        question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                    );\r\n                    \r\n                                    if (existingQuestion) {\r\n                                        // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                        existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                    } else {\r\n                                        // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                        categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                    }\r\n\r\n                                } else {\r\n                                // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                    categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                }\r\n                            }\r\n                        });        \r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n            //question dạng giá trị nhưng là rỗng\r\n            else if(categoryContentQuestion.categoryContentNote === '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n        }\r\n\r\n        if(isPredecessor === true){\r\n            createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n        }\r\n            \r\n    }\r\n\r\n    const createPreviewDataPredecessor = (categoryContentQuestion, isEditNote) => {\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            let _previewPredecessor = [...previewPredecessor];\r\n\r\n            const findQuestion = _previewPredecessor.find(item => item.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n            if(findQuestion){\r\n                if(findQuestion.categoryContentQuestionType === 'string'){\r\n                    if(categoryContentQuestion.categoryContentNote === ''){\r\n                        _previewPredecessor = previewPredecessor.filter(item => item.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName);\r\n                    }\r\n                    else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                        const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                        if(existingQuestion){\r\n                            existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                        }\r\n                        else{\r\n                            categoryContentQuestion.categoryOrder = categorySelectedExamining.categoryOrder\r\n                            _previewPredecessor.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                }\r\n                else if(findQuestion.categoryContentQuestionType === 'check'){\r\n                    if(isEditNote){\r\n                        if(categoryContentQuestion.categoryContentNote === ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName && question.categoryContentAnswer === true);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                if(categoryContentQuestion.categoryContentAnswer === null || categoryContentQuestion.categoryContentAnswer === false){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                categoryContentQuestion.categoryOrder = categorySelectedExamining.categoryOrder\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    else{\r\n                        if(categoryContentQuestion.categoryContentAnswer === false || categoryContentQuestion.categoryContentAnswer === null){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                if(existingQuestion.categoryContentNote === '' || existingQuestion.categoryContentNote === null){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                                else if(existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                    existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                }               \r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentAnswer === true){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion || existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                            }\r\n                            else{\r\n                                categoryContentQuestion.categoryOrder = categorySelectedExamining.categoryOrder\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }        \r\n                    }\r\n                }\r\n            }\r\n\r\n            else{\r\n                categoryContentQuestion.categoryOrder = categorySelectedExamining.categoryOrder\r\n                _previewPredecessor.push(categoryContentQuestion);\r\n            }\r\n            setPreviewPredecessor(_previewPredecessor)\r\n        }\r\n\r\n        else{\r\n            setPreviewPredecessor([categoryContentQuestion])\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        // Đăng ký sự kiện nhận thông báo bn đăng ký khám khi component được mount\r\n        const handleReceiveMessage = (medicalRegisterMessage) => {\r\n            if(medicalRegisterMessage === true && dataPantientsReadyExamining.id === ''){\r\n                setLoadingPatient(true);\r\n                handleGetRegistersByDateNow();\r\n            }\r\n        };\r\n\r\n        startSignalRConnection(localStorage.getItem('jwt', handleReceiveMessage))\r\n\r\n        onReceiveMessage(handleReceiveMessage);\r\n\r\n        return () => {\r\n            // Dừng lắng nghe sự kiện nếu cần khi component Chat unmount\r\n        };\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(dataPantientsReadyExamining.status === 1 && alertVisible){\r\n                const userConfirmed = window.confirm(`Bạn đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, có chắc là muốn đăng xuất không?`);\r\n                if(userConfirmed){\r\n                    sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                    sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                    sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n\r\n                    if(currentHealthRecordExamining){\r\n                        sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                    }\r\n\r\n                    if(prevDataPredecessor){\r\n                        sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                    }\r\n\r\n                    if(oldDataPredecessor){\r\n                        sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                    }\r\n                    confirmAlert();\r\n                }\r\n                else{\r\n                    resetAlert();\r\n                }\r\n        }\r\n\r\n        else if(dataPantientsReadyExamining.status){\r\n            setIsFormDirty(true)\r\n\r\n            const handleBeforeUnload = (e) => {\r\n                const confirmationMessage = 'Bạn có chắc chắn muốn rời khỏi trang này?';\r\n                e.returnValue = confirmationMessage; // Hiển thị thông báo cảnh báo\r\n                return confirmationMessage;\r\n            };\r\n\r\n            const unblock = history.block((location, action) => {\r\n                if (isFormDirty) {\r\n                    const confirmLeave = window.confirm(\r\n                        'Bạn có chắc chắn muốn rời khỏi trang này? Những thay đổi sẽ không được lưu....'\r\n                    );\r\n                    if (confirmLeave) {\r\n                        const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                        sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                        sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                        sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                        sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                        if(currentHealthRecordExamining){\r\n                            sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                        }\r\n    \r\n                        if(prevDataPredecessor){\r\n                            sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                        }\r\n    \r\n                        if(oldDataPredecessor){\r\n                            sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                        }\r\n\r\n                        unblock(); // Hủy chặn để điều hướng\r\n                        history.push(location.pathname); // Điều hướng đến trang mới\r\n                        \r\n                    } else {\r\n                        return false; // Ngăn điều hướng\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n    \r\n            const handleUnload = () => {                \r\n                const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                \r\n                sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                if(currentHealthRecordExamining){\r\n                    sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                }\r\n    \r\n                if(prevDataPredecessor){\r\n                    sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                }\r\n    \r\n                if(oldDataPredecessor){\r\n                    sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                }\r\n            };\r\n            \r\n            window.addEventListener('beforeunload', handleBeforeUnload);\r\n            window.addEventListener('unload', handleUnload);\r\n            \r\n            return () => {\r\n                window.removeEventListener('beforeunload', handleBeforeUnload);\r\n                unblock();\r\n                window.removeEventListener('unload', handleUnload);                \r\n            };\r\n        }\r\n\r\n        else if(alertVisible){\r\n            confirmAlert();\r\n        }\r\n    }, [dataPantientsReadyExamining, mainDataExamining, currentHealthRecordExamining, dataExaminingForConclusion, alertVisible, confirmAlert, resetAlert, isLogOutClick, history, isFormDirty])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Doctor'){\r\n                history.push('/404');\r\n            }\r\n            else{\r\n                if(sessionStorage.dataPantientsReadyExamining){\r\n                    handleReloadUIWhenExamining();\r\n                }\r\n                else{\r\n                    handleGetRegistersByDateNow();\r\n                }\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(isDialogChangePasswordOpen === false){\r\n            const handleKeyDown = (event) => {\r\n                if(event.keyCode === 112){\r\n                    event.preventDefault();\r\n                }\r\n\r\n                if(dataPantientsReadyExamining.patientsId !== '' && openAlertProcessingBackdrop === false && openModalCompleteExamining === false && event.keyCode !== 116){\r\n                    if(event.keyCode === 112 && dataPantientsReadyExamining.status === 1){\r\n                        event.preventDefault();\r\n                        handleCancelExamining();\r\n                    }\r\n\r\n                    else if(event.keyCode === 113 && prevDataExamining){\r\n                        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n                            handleBeginExaminingForPantient();\r\n                        }\r\n                        else if(dataPantientsReadyExamining.status === 1){\r\n                            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n                        }\r\n                        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n                            handleBeginEditExaminingForPantient();\r\n                        }\r\n                    }\r\n\r\n                    else if(event.keyCode === 115){\r\n                    setOpenAlertProcessingBackdrop(true)\r\n                        if(dataPantientsReadyExamining.status === 1){\r\n                            setTimeout(() => {\r\n                                setOpenAlertProcessingBackdrop(false)\r\n                                setOpenModalCompleteExamining(true);\r\n                            }, 1000)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            document.addEventListener('keydown', handleKeyDown);\r\n\r\n            return () => {\r\n                document.removeEventListener('keydown', handleKeyDown);\r\n            };\r\n        }\r\n        \r\n    }, [dataPantientsReadyExamining, openModalCompleteExamining, openAlertProcessingBackdrop, openModalCompleteExamining, isDialogChangePasswordOpen])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n                <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                    <Grid container spacing={2} sx={{pl: 0.6, pr: 0.6}}>\r\n\r\n                        <Grid item xs={5}>\r\n                            {/* <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{`${moment().format('dddd')}, ${moment().format('LL')}`}</Typography> */}\r\n                            <TableContainer component={Paper} sx={{ height: '330px', boxShadow: 5, borderRadius: '10px' }}>\r\n                                {loadingPatient ?\r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                                            <CircularProgress />\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                                        </Box>        \r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Box>\r\n                                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                                                    <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                                                        <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                                        onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                                                    </Badge>\r\n                                                ))}\r\n                                            </Stack>\r\n\r\n                                            <Box sx={{mt: 0.2, position: 'relative', display: 'flex', justifyContent: 'center', flexDirection: 'column'}}>\r\n                                                {dataPantientsReadyExamining.status !== 1 ?\r\n                                                    <>\r\n                                                        <Typography variant=\"subtitle2\" sx={{textAlign: 'center', mt: 0.2, fontSize: '1rem'}}>Nếu không tìm thấy bệnh nhân, hãy nhấn nút tải lại phía dưới</Typography>\r\n                                                        <CachedIcon sx={{color: 'brown', fontWeight: 'bolder', position: 'absolute', right: 55, top: 30, fontSize: '2.5rem', cursor: 'pointer'}} titleAccess='Tải lại' onClick={() => handleReloadGetRegistersByDateNow()}/>\r\n                                                    </>\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                                <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                                            </Box>\r\n                                            \r\n                                            <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                                                <TextField sx={{mb: 0.6, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                                        startAdornment: (\r\n                                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                                        ),\r\n                                                        endAdornment: (\r\n                                                            <InputAdornment position='end'>\r\n                                                                {searchPatientsQuery !== '' ? \r\n                                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                                                                    /> \r\n                                                                : \r\n                                                                    null\r\n                                                                }\r\n                                                            </InputAdornment>  \r\n                                                        )\r\n                                                    }}>\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Box>\r\n                                \r\n                                        <Table stickyHeader >\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listDataPatientsRegisterSort.map((dataPantientItem, dataPantientIndex) => (\r\n                                                    <TableRow hover role=\"checkbox\" key={dataPantientItem.order}\r\n                                                        sx={{ cursor: 'pointer', backgroundColor: dataPantientItem.state === 1 ? '#26c6da' : '#fff', \r\n                                                        ':hover': {backgroundColor: dataPantientItem.state === 1 ? '#00bcd4 !important' : 'rgba(0, 0, 0, 0.1) !important'} }} \r\n                                                        onClick={() => handleSelectPantientExamining(dataPantientItem)}\r\n                                                    >\r\n                                                        <TableCell align='left' sx={{width: '20px'}}>{dataPantientItem.order}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '150px'}}>{dataPantientItem.patient.patientCode}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '240px'}}>{dataPantientItem.patient.fullName}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </>\r\n                                }\r\n                            </TableContainer>\r\n\r\n                            {/* cây thư mục khám */}\r\n                            <Box style={{width: '100%', marginTop: '10px', borderRadius: '10px', border: '2px solid red', height: '300px', overflow: 'auto'}} >\r\n                                {\r\n                                    mainDataExamining.length === 0 && loadingCategoryExamining === false || prevDataExamining === false ?\r\n                                        null\r\n                                    :\r\n                                    <>\r\n                                        {loadingCategoryExamining ?\r\n                                            <Box sx={{backgroundColor: '#e0e0e0', borderRadius: '10px', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu cây thư mục khám, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <>\r\n                                                <div className='category-scrollbar'>\r\n                                                    <List sx={{p: 0, display: 'inline-grid'}}>\r\n                                                        {mainDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                                            <Box sx={{display: 'inline-flex'}} key={`category ${predecessorIndex}`}>\r\n                                                                <ListItemButton\r\n                                                                    sx={{\r\n                                                                    width: 'fitContent', pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'},\r\n                                                                    backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffd54f' : ''}} \r\n                                                                    onClick={() => handleSelectCategoryClick(predecessorItem)}\r\n                                                                >\r\n                                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                        <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </Box>\r\n                                                                </ListItemButton>\r\n\r\n                                                                {predecessorItem.newCategoryPre === true && predecessorItem.newPredecessor === true ? \r\n                                                                    null\r\n                                                                :\r\n                                                                    <>\r\n                                                                        {predecessorItem.newCategoryPre === false  ?\r\n                                                                            <>  \r\n                                                                                <CheckCircleIcon sx={{color: 'green', fontSize: '1.4rem', margin: 'auto'}} titleAccess='đã theo dõi'/>\r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        {mainDataExamining.newPredecessor ? \r\n                                                                            null\r\n                                                                        :\r\n                                                                            predecessorItem.isLock === true ?\r\n                                                                                <>  \r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <EditIcon sx={{color: 'blue', fontSize: '1.6rem'}} titleAccess='Sửa'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>\r\n                                                                            \r\n                                                                            :\r\n                                                                                <>\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessorForSaving(predecessorItem.categoryOrder)}>\r\n                                                                                        <BeenhereIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Lưu'/>\r\n                                                                                    </IconButton>\r\n\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleCancelEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <CancelIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Hủy'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>   \r\n                                                                        }                                  \r\n                                                                    </>\r\n                                                                }\r\n                                                            </Box>\r\n                                                        ))}\r\n\r\n                                                        <ListItemButton \r\n                                                            sx={{pt: '4px', pb: '4px', borderRadius: '8px', backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffd54f' : '',\r\n                                                                ':hover': {backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                            onClick={() => handleSelectHealthRecords(mainDataExamining.healthRecords)}\r\n                                                        >\r\n                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}>\r\n                                                                <SendIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                            </ListItemIcon>\r\n\r\n                                                            <ListItemText primary={'Sổ sức khỏe'} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>                                                    \r\n                                                        </ListItemButton>\r\n\r\n                                                        <Collapse in={openCollapseHealthRecords} timeout=\"auto\" unmountOnExit>\r\n                                                            <div style={{ paddingLeft: '24px' }}>\r\n                                                                {mainDataExamining.healthRecords.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                    <ListItemButton key={`healthRecords ${healthRecordsIndex}`} sx={{pt: '0px', pb: '0px', width: 'auto', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                                        onClick={() => handleSelectHealthRecordsItem(healthRecordsItem.medicalRegisterId, healthRecordsItem.examinationName, healthRecordsItem.state)}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: healthRecordsItem.state === 1 ? 'red' : '#009688'}}}>\r\n                                                                            <FiberManualRecordIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={healthRecordsItem.examinationName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </ListItemButton>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </Collapse>\r\n                                                    </List>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </Box>\r\n                            {activeChip.chipOrder === 0 && dataPantientsReadyExamining.editExamining === false ?\r\n                                <div className='instruction' style={{display: 'flex', justifyContent: 'space-between', marginTop: '4.5px'}}>\r\n                                    <Button variant=\"contained\" color=\"error\" onClick={() => handleCancelExamining()}>Hủy khám (f1)</Button>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Bắt đầu khám (f2)</Button>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                </div>\r\n                            :\r\n                                dataPantientsReadyExamining.id === '' ?\r\n                                    null\r\n                                :\r\n                                    dataPantientsReadyExamining.id !== '' && dataPantientsReadyExamining.status === 0 ? \r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            {/* <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleDeleteExamining()}>Xóa khám (f1)</Button> */}\r\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Sửa đổi (f2)</Button>\r\n                                        </div>\r\n                                    :\r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleCancelExamining()}>Hủy thay đổi (f1)</Button>\r\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                        </div>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            {/* thông tin bệnh nhân */}\r\n                            <Box sx={{boxShadow: 4, borderRadius: '20px', border: '2px solid blue', height: '230px', mb: '8px', overflow: 'auto'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', mt: 0.6, mb: 0.6, fontWeight: 'bolder', fontSize: '1.2rem', textAlign: 'center'}}>Thông tin bệnh nhân</Typography>\r\n                                <Box sx={{pl: 2.8, pr: 2.8, mt: 1}}>\r\n                                    {loadingInfoPatient ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', mt: 4}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải thông tin bệnh nhân, hãy chờ một chút...</Typography>\r\n                                        </Box>\r\n                                    :\r\n                                        <>\r\n                                            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Mã BN: ${dataPantientsReadyExamining.patientCode || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Họ tên: ${dataPantientsReadyExamining.patientsName || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    {dataPantientsReadyExamining.patientsGender === true ? <MaleIcon sx={{color: 'coral', fontSize: '27px'}}/> : <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/>}\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Giới tính: ${dataPantientsReadyExamining.patientsGender !== '' ? dataPantientsReadyExamining.patientsGender === true ? 'Nam' : 'Nữ' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: {dataPantientsReadyExamining.patientsDOB ? moment(dataPantientsReadyExamining.patientsDOB).format(\"DD/MM/YYYY\") : ''}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Tháng tuổi: ${dataPantientsReadyExamining.patientsMonthsOld || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Sdt: ${dataPantientsReadyExamining.patientsPhone || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiBodyHeight style={{color: 'tomato', fontSize: '1.42rem', marginLeft: '2px'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 0.8}}>\r\n                                                        {`Chiều cao: ${dataPantientsReadyExamining.patientsHeight ? dataPantientsReadyExamining.patientsHeight + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Cân nặng: ${dataPantientsReadyExamining.patientsWeight ? dataPantientsReadyExamining.patientsWeight + ' kg' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <TbRulerMeasure style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Vòng đầu: ${dataPantientsReadyExamining.patientsHeadCircumference ? dataPantientsReadyExamining.patientsHeadCircumference + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={12} sx={{display: 'inline-flex'}}>\r\n                                                    <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Địa chỉ: ${dataPantientsReadyExamining.patientsAddress || ''}`}</Typography>\r\n                                                </Grid> \r\n\r\n                                                {previewPredecessor ? \r\n                                                    <>\r\n                                                        <Grid item xs={12} >\r\n                                                            <Box sx={{display: 'flex', flexWrap: 'wrap'}}>\r\n                                                                {previewPredecessor.map((item, index) => (\r\n                                                                    <Typography variant='subtitle1' sx={{ml: 0.5, fontSize: '1.1rem', color: 'mediumblue', fontWeight: 'bolder'}} key={index} >{`${item.categoryContentQuestionName}: ${item.categoryContentAnswer ? 'có' : ''} ${item.categoryContentNote !== null ? `${item.categoryContentNote}` : ''}, `}</Typography>\r\n                                                                ))}\r\n                                                            </Box>\r\n                                                            \r\n                                                        </Grid> \r\n                                                    </>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </Grid>\r\n                                        </>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {/* nội dung khám */}\r\n                            <div className='container-content-examining'>\r\n                                {\r\n                                    loadingPrevDataExamining ? \r\n                                        <>\r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu kỳ khám gần nhất, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    :\r\n                                    prevDataExamining ? \r\n                                        prevDataExamining.healthRecords.length === 1 && prevDataExamining.healthRecords[0].medicalBookId === null ? \r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <Typography variant='h6'>Bệnh nhân không có kỳ khám trước</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <div className='content-examining'><PreviewLastExamining prevDataExamining={prevDataExamining} /></div>\r\n                                    :\r\n                                        null\r\n                                }\r\n                                \r\n                                {categorySelectedExamining.categoryContents ? \r\n                                    <>\r\n                                        <div className='content-examining'>\r\n                                            {loadingContentsExamining ? \r\n                                                <>\r\n                                                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                        <CircularProgress />\r\n                                                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh, hãy chờ một chút...</Typography>\r\n                                                    </Box>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {categorySelectedExamining.newCategoryPre === true && categorySelectedExamining.isLock === true ? \r\n                                                        <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                            <Typography variant='h6'>Bệnh nhân không có tiền căn đang được theo dõi ở mục này</Typography>\r\n                                                        </Box>\r\n                                                    :\r\n                                                        contentCategorySelectedExamining.healthRecordsContentsType !== 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                            categorySelectedExamining.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                                <Box key={categoryContentsIndex} sx={categoryContentsItem.categoryContentTitle === null ? {marginTop: '30px'} : {}}>\r\n\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>{categoryContentsItem.categoryContentTitle || ''}</Typography>\r\n                                                                    {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                        <Box key={`categoryContentQuestionName ${questionIndex}`}>\r\n                                                                            <Grid container rowSpacing={0}>\r\n                                                                                {questionIndex === 0 ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                        </Grid>\r\n\r\n                                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                    <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                </Grid>\r\n\r\n                                                                                                <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            : \r\n                                                                                                <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                        }                                                                             \r\n                                                                                    </> \r\n                                                                                    : \r\n                                                                                    null\r\n                                                                                }\r\n                                                                                \r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1.2rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled={categorySelectedExamining.isLock === true ? true : false} \r\n                                                                                            checked={questionItem.categoryContentAnswer === true ? true : false } \r\n                                                                                            classes={{ root: classes.root }} color='error' \r\n                                                                                            sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} \r\n                                                                                            onClick={() => \r\n                                                                                                dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleAnswerCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer) : handleAnswerCheckQuestion(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer)} />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={7} >\r\n                                                                                            <div className='textfield-for-answer'>\r\n                                                                                                <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                        onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleNoteCheckQuestion(categoryContentsIndex, questionIndex, e.target.value)}\r\n                                                                                                        defaultValue={questionItem.categoryContentNote}\r\n                                                                                                    />\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>   \r\n                                                                                    :\r\n                                                                                    <>\r\n                                                                                        {categorySelectedExamining.categoryOrder === 4 ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8} >\r\n                                                                                                    <div className='textfield-for-answer'>\r\n                                                                                                        <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                                onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                                defaultValue={questionItem.categoryContentNote}\r\n                                                                                                            />\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            :\r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8}>\r\n                                                                                                    <div className='textfield-for-answer' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >\r\n                                                                                                        <input type='text' disabled={categorySelectedExamining.isLock === true ? true : false}\r\n                                                                                                            className='value-for-answer' \r\n                                                                                                            onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                            defaultValue={questionItem.categoryContentNote} \r\n                                                                                                        />\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                        }\r\n                                                                                    </>\r\n                                                                                }\r\n                                                                                \r\n                                                                            </Grid>\r\n                                                                        </Box>\r\n                                                                    ))}\r\n                                                                </Box>\r\n                                                            ))\r\n                                                        :\r\n                                                            contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n                                                                    <TableContainer component={Paper}>\r\n                                                                        <Table stickyHeader>\r\n                                                                            <TableHead>\r\n                                                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                                                    <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n                                                                                </TableRow>\r\n                                                                            </TableHead>\r\n                                                                            <TableBody sx={{borderRadius: '0px'}}>\r\n                                                                                {contentCategorySelectedExamining.categoryContents.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                                    <TableRow hover role=\"checkbox\" key={healthRecordsIndex}>\r\n                                                                                        <TableCell align='left' sx={{width: '158px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{healthRecordsItem.examinationName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '144px'}}>{handleRenderExamsStatus(healthRecordsItem.state)}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '108px'}}>{moment(healthRecordsItem.timeRegister).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '115px'}}>{healthRecordsItem.doctorFullName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: 'auto'}}>{healthRecordsItem.conclusion}</TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                ))}\r\n                                                                            </TableBody>\r\n                                                                        </Table>\r\n                                                                    </TableContainer>\r\n                                                                </>\r\n                                                            :\r\n                                                                \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', lineHeight: 1, mt: 1}}>{currentHealthRecordExamining ? currentHealthRecordExamining.healthRecordsName : ''}</Typography>\r\n                                                                    <div className='health-record-content'>\r\n                                                                        {currentHealthRecordExamining ? \r\n                                                                            <List sx={{p: 0}}>\r\n                                                                                {currentHealthRecordExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => (\r\n                                                                                    <div key={`categoryPatients ${categoryPatientsIndex}`}>\r\n                                                                                        <ListItemButton     \r\n                                                                                            sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                                                                            onClick={() => handleOpenHealthRecordsItem(categoryPatientsIndex)}\r\n                                                                                        >\r\n                                                                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseHealthRecordsItem[categoryPatientsIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                                                                <ListItemText primary={categoryPatientsItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                                            </Box>\r\n                                                                                        </ListItemButton>\r\n\r\n                                                                                        <Collapse in={openCollapseHealthRecordsItem[categoryPatientsIndex]} timeout=\"auto\" unmountOnExit>\r\n                                                                                            {categoryPatientsItem.categoryContents.map((categoryPatientsContentsItem, categoryPatientsContentsIndex) => (\r\n                                                                                                <div className='header-health-record' key={categoryPatientsContentsIndex} style={{marginTop: '15px', marginBottom: '15px', border: '2px solid #00bcd4', borderRadius: '20px'}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{fontWeight: 'bolder', textAlign: 'center'}}>{categoryPatientsContentsItem.categoryContentTitle}</Typography>\r\n                                                                                                \r\n                                                                                                    <div className='content-health-record' style={{padding: '10px'}} >  \r\n                                                                                                        <Grid container rowSpacing={0}>\r\n                                                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryPatientsContentsItem.categoryContentName}</Typography>\r\n                                                                                                            </Grid>\r\n\r\n                                                                                                            <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryPatientsContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                            </Grid>\r\n                                                                                                        \r\n                                                                                                            <Grid item xs={5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryPatientsContentsItem.categoryContentText}</Typography>\r\n                                                                                                            </Grid> \r\n\r\n                                                                                                            {categoryPatientsContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                                                                <Box key={`questionItem ${questionIndex} healthRecordsName ${contentCategorySelectedExamining.healthRecordsName}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                                                        <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                                                    </Grid>    \r\n\r\n                                                                                                                    {questionItem.categoryContentQuestionType === 'check' ?\r\n                                                                                                                        <>\r\n                                                                                                                            <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                                                                <Checkbox classes={{ root: classes.root }} checked={questionItem.categoryContentAnswer === true ? true : false }\r\n                                                                                                                                    disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                    sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                                                                    onClick={(e) => handleAnswerCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, questionItem.categoryContentAnswer)} \r\n                                                                                                                                />\r\n                                                                                                                            </Grid>\r\n                                                                                                                    \r\n                                                                                                                            <Grid item xs={5} >\r\n                                                                                                                                <div className='note-for-answer'>\r\n                                                                                                                                    <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                            disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                            onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                        />\r\n                                                                                                                                    </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </Grid>\r\n                                                                                                                        </>\r\n                                                                                                                    :\r\n                                                                                                                        <>\r\n                                                                                                                            <Grid item xs={8} >\r\n                                                                                                                                <div className='note-for-answer'>\r\n                                                                                                                                    <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                            disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                            onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                        />\r\n                                                                                                                                    </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </Grid>\r\n                                                                                                                        </>\r\n                                                                                                                    }\r\n                                                                                                                </Box>\r\n                                                                                                            ))}\r\n                                                                                                        </Grid>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        ))}\r\n                                                                                    </Collapse>\r\n                                                                                </div>\r\n                                                                            ))}\r\n                                                                            </List>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                        \r\n\r\n                                                                        {currentHealthRecordExamining ?\r\n                                                                            currentHealthRecordExamining.conclusion !== null ?\r\n                                                                            <>  \r\n                                                                                <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                                                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận của bác sĩ: ${currentHealthRecordExamining.conclusion}`}</Typography>\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                        \r\n                                                                    </div>\r\n\r\n                                                                </>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n\r\n            <CompleteExamining openModalCompleteExamining={openModalCompleteExamining} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n                handleCompleteExaminingForPantient={handleCompleteExaminingForPantient} dataExaminingForConclusion={dataExaminingForConclusion}\r\n            />\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n            />\r\n            {/* <AlertConfirm openAlertConfirmModal={openAlertConfirmModal.open} onCloseAlertConfirmModal={setOpenAlertConfirmModal} \r\n                titleConfirm={openAlertConfirmModal.title} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDoctorExamining","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getReportPatient = async (dateSelectedReport) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Admin/GetReportPatient?dateStart=${dateSelectedReport.dateStart}&dateEnd=${dateSelectedReport.dateEnd}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListUser = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/UserAccount/GetUserAccounts`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getReportPatient, getListUser\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridToolbarExport, GridToolbarColumnsButton, GridToolbarDensitySelector, GridToolbarFilterButton, GridToolbarContainer, viVN } from '@mui/x-data-grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//icon\r\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\r\n//moment\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\n//api\r\nimport { getReportPatient } from '../../Service/StatisticsService';\r\n\r\nfunction MainDashboard() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [dateSelectedReport, setDateSelectedReport] = useState({dateStart: '', dateEnd: ''})\r\n    const [mainDataDashboard, setMainDataDashboard] = useState([]);\r\n    const [loadingDataDashboard, setLoadingDataDashboard] = useState(false);\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'STT', width: 120, align: 'left', headerAlign: 'left', },\r\n        { field: 'fullName', headerName: 'Họ tên', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'dayExam', headerName: 'Ngày khám', width: 180, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'gender', headerName: 'Giới tính', width: 140, align: 'left', headerAlign: 'left' },\r\n        { field: 'dayOfBirth', headerName: 'Ngày sinh', width: 165, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'examName', headerName: 'Kỳ khám', width: 170, align: 'left', headerAlign: 'left' },\r\n        { field: 'phone', headerName: 'Điện thoại', width: 170, type: 'number', align: 'left', headerAlign: 'left'},\r\n        { field: 'district', headerName: 'Quận/Huyện', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'province', headerName: 'Tỉnh/Thành phố', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'address', headerName: 'Địa chỉ', width: 700, align: 'left', headerAlign: 'left' },\r\n    ];\r\n\r\n    // Hàm xử lý xuất file Excel\r\n    const handleExportExcel = () => {\r\n        // Tạo lại dữ liệu với các tiêu đề cột tùy chỉnh\r\n        const formattedRows = mainDataDashboard.map((row, index) => ({\r\n            'STT': index + 1,\r\n            'Họ tên': row.fullName, \r\n            'Ngày khám': row.dayExam,\r\n            'Giới tính': row.gender,\r\n            'Ngày sinh': row.dayOfBirth,\r\n            'Kỳ khám': row.examName,\r\n            'Điện thoại': row.phone,\r\n            'Quận/Huyện': row.district,\r\n            'Tỉnh/Thành phố': row.province,\r\n            'Địa chỉ': row.address\r\n          }));\r\n\r\n        // Tạo worksheet từ dữ liệu đã định dạng\r\n        const ws = XLSX.utils.json_to_sheet(formattedRows);\r\n\r\n        // Tạo workbook và thêm worksheet vào đó\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n\r\n        // Xuất file Excel\r\n        XLSX.writeFile(wb, `Danh sách bệnh nhân khám bệnh từ ${moment(dateSelectedReport.dateStart).format('DD-MM-YYYY')} đến ${moment(dateSelectedReport.dateEnd).format('DD-MM-YYYY')}.xlsx`);\r\n    };\r\n\r\n    // Custom toolbar bao gồm nút xuất Excel\r\n    const CustomToolbar = ({ handleExportExcel }) => {\r\n        return (\r\n            <GridToolbarContainer >\r\n                {/* Các chức năng của GridToolbar mặc định */}\r\n                <GridToolbarColumnsButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarFilterButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarDensitySelector sx={{fontSize: '16px'}}/>\r\n                <Button variant=\"text\" startIcon={< RiFileExcel2Fill/>} onClick={handleExportExcel} sx={{fontSize: '16px'}}>Xuất Excel</Button>\r\n            </GridToolbarContainer>\r\n        );\r\n    };\r\n\r\n    const onChangeDateStart = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateStart = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const onChangeDateEnd = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateEnd = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const handleGetReportPatient = async () => {\r\n        setLoadingDataDashboard(true);\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        const responseGetReportPatient = await getReportPatient(dateSelectedReport);\r\n        const editMainDataDashboard = responseGetReportPatient.map((item) => {\r\n            const dataReportPatient = {\r\n                patientId: item.patientId,\r\n                fullName: item.fullName,\r\n                dayExam: moment(item.dayExam).format('DD/MM/YYYY'),\r\n                gender: item.gender ? 'Nam' : 'Nữ',\r\n                dayOfBirth: moment(item.dayOfBirth).format('DD/MM/YYYY'),\r\n                examName: item.examName,\r\n                phone: item.phone,\r\n                district: item.district,\r\n                province: item.province,\r\n                address: item.address\r\n            }\r\n            return dataReportPatient\r\n        })\r\n        setMainDataDashboard(editMainDataDashboard);\r\n        setLoadingDataDashboard(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Admin'){\r\n                history.push('/404');\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(dateSelectedReport.dateStart !== '' && dateSelectedReport.dateEnd !== ''){\r\n            handleGetReportPatient();\r\n        }\r\n    }, [dateSelectedReport])\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1}}>\r\n            <Box sx={{display: 'flex', justifyContent: 'center'}}>\r\n                <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                    <DemoContainer components={['DatePicker']}> \r\n                        <DatePicker label=\"Từ ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateStart(value)}/> \r\n                        <DatePicker label=\"Đến ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateEnd(value)} minDate={moment(dateSelectedReport.dateStart)}/>                                   \r\n                    </DemoContainer>\r\n                </LocalizationProvider>\r\n            </Box>\r\n\r\n            <Box sx={{ height: 600, width: '100%', mt: 1.2 }}>\r\n                {loadingDataDashboard ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '80%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>  \r\n                    </>\r\n                    :\r\n                        mainDataDashboard.length !== 0 ?\r\n                            <>       \r\n                                <DataGrid \r\n                                    style={{ fontSize: '18px' }}\r\n                                    localeText={viVN.components.MuiDataGrid.defaultProps.localeText}\r\n                                    rows={mainDataDashboard.map((row, index) => ({\r\n                                        ...row,\r\n                                        id: index + 1,\r\n                                    }))}\r\n                                    columns={columns}\r\n                                    pageSizeOptions={[1]}\r\n                                    components={{\r\n                                        Toolbar: CustomToolbar, // Chèn toolbar vào đây\r\n                                      }}\r\n                                    componentsProps={{\r\n                                        toolbar: { handleExportExcel }, // Truyền hàm export vào props của toolbar\r\n                                    }}\r\n                                    disableRowSelectionOnClick\r\n                                    sx={{\r\n                                        '.MuiTablePagination-selectLabel': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                        '.MuiTablePagination-displayedRows': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        :\r\n                           <h5 style={{textAlign: 'center', color: 'blue'}}>Hãy chọn khoảng ngày khám để lấy dữ liệu thống kê</h5>\r\n                }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainDashboard","import React, { useState, useContext, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//api\r\nimport { addUser } from '../../Service/UserService';\r\n\r\nfunction AddUser(props) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n    const [dataAddUser, setDataAddUser] = useState( \r\n      {\r\n        userName: \"\",\r\n        userFullName: \"\",\r\n        userPassword: \"123456\",\r\n        userEmail: \"\",\r\n        userPosition: \"\"\r\n      }\r\n    )\r\n\r\n    const handleCloseModalAddUser = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalAddUser(false);\r\n      }\r\n    }\r\n\r\n    const listPosition = [\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n      {id: '3', positionName: 'Tiếp nhận'},\r\n    ]\r\n\r\n    const onChangeUserFullName = (value) => {\r\n      setDataAddUser(prevDataAddUser => {\r\n        return {\r\n          ...prevDataAddUser,\r\n          userFullName: value\r\n        }\r\n      })\r\n    }\r\n\r\n    const onSelectPosition = (e, value) => {\r\n      setDataAddUser(prevDataAddUser => {\r\n        return {\r\n          ...prevDataAddUser,\r\n          userPosition: value.id\r\n        }\r\n      })\r\n    }\r\n\r\n    const onChangeUserName = (value) => {\r\n      setDataAddUser(prevDataAddUser => {\r\n        return {\r\n          ...prevDataAddUser,\r\n          userName: value\r\n        }\r\n      })\r\n    }\r\n\r\n    const handleAddUser = async () => {\r\n      setLoading(true);\r\n      const responseAddUser = await addUser(dataAddUser);\r\n      if(responseAddUser.status === 200){\r\n        toast.success(responseAddUser.data, {toastId: 'AddUserSuccess'})\r\n        props.setReloadComponent(true);\r\n      }\r\n      else{\r\n        toast.error(responseAddUser.data, {toastId: 'AddUserError'})\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalAddUser} onClose={(event, reason) => handleCloseModalAddUser(event, reason)} disableEscapeKeyDown={true} >\r\n          {loading ? \r\n            <>\r\n              <div style={{display: 'flex', justifyContent: 'center', height: '100px', alignItems: 'center'}}>\r\n                <CircularProgress />\r\n              </div>\r\n            </>\r\n          :\r\n            <>     \r\n              <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n              <IconButton onClick={() => handleCloseModalAddUser()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                <CloseIcon fontSize='medium'/>\r\n              </IconButton>\r\n\r\n              <DialogContent dividers>\r\n                <TextField label=\"Họ tên\" variant=\"outlined\" autoFocus sx={{ width: '46ch', mb: 2.5 }} onChange={(e) => onChangeUserFullName(e.target.value)}/>\r\n                <Autocomplete \r\n                  options={listPosition} \r\n                  getOptionLabel={(option) => option.positionName}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.positionName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectPosition(e, value)}\r\n                  renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} \r\n                  sx={{ width: '45.95ch', mb: 2.5 }}\r\n                />\r\n                <TextField label=\"Tên tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                <Stack spacing={2} direction=\"column\">\r\n                  <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleAddUser()}>Tạo tài khoản</Button>\r\n                </Stack>\r\n              \r\n              </DialogContent>\r\n            </>\r\n          }\r\n        </Dialog>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default AddUser","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport _ from \"lodash\";\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//modal add user\r\nimport AddUser from '../ManageAddUser/AddUser';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridToolbarExport, GridToolbarColumnsButton, GridToolbarDensitySelector, GridToolbarFilterButton, GridToolbarContainer, viVN } from '@mui/x-data-grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Switch from '@mui/material/Switch';\r\n//icon\r\nimport { HiUserAdd } from \"react-icons/hi\";\r\n//api\r\nimport { getListUser } from '../../Service/StatisticsService';\r\nimport { updateActiveUser } from '../../Service/UserService';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nfunction MainListUser() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const [reloadComponent, setReloadComponent] = useState(false);\r\n    const [loadingListUser, setLoadingListUser] = useState(false);\r\n    const [listUser, setListUser] = useState([]);\r\n\r\n    const [openModalAddUser, setOpenModalAddUser] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const onChangeActiveUser = async (event, data) => {\r\n        setLoadingListUser(true);\r\n        const responseUpdateActiveUser = await updateActiveUser(data.userId, event.target.checked);\r\n        if(responseUpdateActiveUser.status === 200){\r\n            const responseGetListUser = await getListUser();\r\n            const editMainDataListUser = responseGetListUser.map((item) => {\r\n                const dataReportUser = {\r\n                    userId: item.userId,\r\n                    userName: item.userName,\r\n                    userFullName: item.userFullName,\r\n                    userEmail: item.userEmail,\r\n                    positionName: item.positionName,\r\n                    userIsActive: item.userIsActive\r\n                }\r\n\r\n                if(item.positionName === 'Doctor'){\r\n                    dataReportUser.positionName = 'Bác sĩ'\r\n                }\r\n                else if(item.positionName === 'Nursing'){\r\n                    dataReportUser.positionName = 'Tiếp nhận'\r\n                }\r\n\r\n                return dataReportUser\r\n            })\r\n            setListUser(editMainDataListUser);\r\n            \r\n            toast.success(event.target.checked === true ? `Đã vô hiệu hóa người dùng ${data.userFullName}` : `Đã kích hoạt lại người dùng ${data.userFullName}`)\r\n        }\r\n        setLoadingListUser(false);\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'userName', headerName: 'Tên đăng nhập', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'userFullName', headerName: 'Họ tên', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'userEmail', headerName: 'Email', width: 340, align: 'left', headerAlign: 'left', },\r\n        { field: 'positionName', headerName: 'Vị trí', width: 200, align: 'left', headerAlign: 'left' },\r\n        { field: 'userIsActive', headerName: 'Trạng thái', width: 165, align: 'left', headerAlign: 'left', renderCell: (params) => params.row.userIsActive ? <Switch checked={true} onChange={(e) => onChangeActiveUser(e, params.row)} /> : <Switch checked={false} onChange={(e) => onChangeActiveUser(e, params.row)}/> },\r\n    ];\r\n\r\n    // Custom toolbar bao gồm nút thêm user\r\n    const CustomToolbar = ({ handleOpenModalAddUser }) => {\r\n        return (\r\n            <GridToolbarContainer >\r\n                {/* Các chức năng của GridToolbar mặc định */}\r\n                <GridToolbarColumnsButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarFilterButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarDensitySelector sx={{fontSize: '16px'}}/>\r\n                <Button variant=\"text\" startIcon={<HiUserAdd/>} onClick={handleOpenModalAddUser} sx={{fontSize: '16px'}}>Thêm người dùng</Button>\r\n            </GridToolbarContainer>\r\n        );\r\n    };\r\n\r\n    const handleOpenModalAddUser = () => {\r\n        setOpenModalAddUser(true);\r\n    }\r\n\r\n    const handleGetListUser = async () => {\r\n        setLoadingListUser(true);\r\n        const responseGetListUser = await getListUser();\r\n        const editMainDataListUser = responseGetListUser.map((item) => {\r\n            const dataReportUser = {\r\n                userId: item.userId,\r\n                userName: item.userName,\r\n                userFullName: item.userFullName,\r\n                userEmail: item.userEmail,\r\n                positionName: item.positionName,\r\n                userIsActive: item.userIsActive\r\n            }\r\n\r\n            if(item.positionName === 'Doctor'){\r\n                dataReportUser.positionName = 'Bác sĩ'\r\n            }\r\n            else if(item.positionName === 'Nursing'){\r\n                dataReportUser.positionName = 'Tiếp nhận'\r\n            }\r\n\r\n            return dataReportUser\r\n        })\r\n        setListUser(editMainDataListUser);\r\n        setLoadingListUser(false);\r\n\r\n        if(reloadComponent){\r\n            setReloadComponent(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetListUser();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(reloadComponent){\r\n            handleGetListUser();\r\n        }\r\n    }, [reloadComponent])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Admin'){\r\n                history.push('/404');\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 1}}>\r\n                <Box sx={{ height: 600, width: '100%', mt: 1.2 }}>\r\n                    {loadingListUser ? \r\n                        <>\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                                <CircularProgress />\r\n                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                            </Box>  \r\n                        </>\r\n                    :\r\n                        <>  \r\n                            <Typography variant='h5' sx={{textAlign: 'center', mb: 1, fontWeight: 'bolder', color: 'red'}}>Danh sách người dùng</Typography>     \r\n                            <DataGrid \r\n                                style={{ fontSize: '18px', marginLeft: '50px', marginRight: '50px' }}\r\n                                localeText={viVN.components.MuiDataGrid.defaultProps.localeText}\r\n                                rows={listUser.map((row, index) => ({\r\n                                    ...row,\r\n                                    id: index + 1,\r\n                                }))}\r\n                                columns={columns}\r\n                                pageSizeOptions={[1]}\r\n                                components={{\r\n                                    Toolbar: CustomToolbar, // Chèn toolbar vào đây\r\n                                  }}\r\n                                componentsProps={{\r\n                                    toolbar: { handleOpenModalAddUser },\r\n                                }}\r\n                                disableRowSelectionOnClick\r\n                                sx={{ \r\n                                    '.MuiTablePagination-selectLabel': { marginBottom: '3px', }, \r\n                                    '.MuiTablePagination-displayedRows': { marginBottom: '3px', },\r\n                                }}\r\n                            />\r\n                        </>\r\n                    }\r\n                </Box>\r\n            </Container>\r\n            \r\n            <AddUser openModalAddUser={openModalAddUser} setOpenModalAddUser={setOpenModalAddUser} setReloadComponent={setReloadComponent}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainListUser","import { BrowserRouter, Route, Link, Switch, NavLink, HashRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport Header from \"../components/Nav/Header.jsx\";\nimport Page404 from \"../components/ErrorPage/Page404\";\nimport Home from \"../components/Home/Home.jsx\";\nimport Login from \"../components/LoginAccount/Log-in\";\nimport MainMedicalRegister from \"../components/MedicalRegister/MainMedicalRegister.jsx\";\nimport MainAppointmentExamining from \"../components/MedicalAppointment/MainAppointmentExamining.jsx\";\nimport MainDoctorExamining from \"../components/DoctorExamining/MainDoctorExamining.jsx\";\nimport MainDashboard from \"../components/Dashboard/MainDashboard.jsx\";\nimport MainListUser from \"../components/Dashboard/MainListUser.jsx\";\n\nconst AppRoutes = (props) => {\n  return (\n    <>\n      <HashRouter>\n        {/* <Header />{\" \"} */}\n        <Switch>\n          <Route exact path=\"/\"><Home /></Route>\n          <Route path=\"/login\"><Login /></Route>\n          <PrivateRoutes path=\"/medicalregister\" component={MainMedicalRegister}></PrivateRoutes>\n          <PrivateRoutes path=\"/doctor-examining\" component={MainDoctorExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/remind-examining\" component={MainAppointmentExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/dashboard\" component={MainDashboard}></PrivateRoutes>\n          <PrivateRoutes path=\"/manage-user\" component={MainListUser}></PrivateRoutes>\n          <Route path=\"*\"><Page404 />{\" \"}</Route>\n          {/* <PrivateRoutes path=\"/users\" component={Users} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\nexport default AppRoutes;\n","import \"./App.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Nav/Header\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <div className=\"header-container\">\n          <Header />\n        </div>\n\n        <div className=\"app-container\">\n          <AppRoutes />\n        </div>\n      </HashRouter>\n\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}