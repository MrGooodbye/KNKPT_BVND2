{"version":3,"sources":["components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop.jsx","Service/UserService.jsx","context/UserContext.jsx","routes/PrivateRoutes.js","components/ManageUserManual/UserManual.jsx","assets/image/logo.png","components/Nav/Header.jsx","components/ErrorPage/Page404.js","components/ManageRegister/Register.jsx","components/LoginAccount/Log-in.jsx","Service/MedicalRegisterService.jsx","components/ManageSelectedDoctorExamining/SelectedDoctorExamining.jsx","components/ManageAlertProcessing/AlertProcessing.jsx","Service/PlaceService.jsx","components/ManageInfoPantients/ManageInfoPantients.jsx","components/MedicalRegister/ListPatientsRegister.jsx","components/ManageExaminingSession/ExaminingSession.jsx","components/ManageOldDisease/OldDisease.jsx","components/MedicalRegister/BookMedical.jsx","components/MedicalRegister/MainMedicalRegister.jsx","components/ManageCompleteExamining/CompleteExamining.jsx","components/DoctorExamining/PreviewLastExamining.jsx","assets/image/headCircumferenceIcon.jpg","components/DoctorExamining/MainDoctorExamining.jsx","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["AlertProcessingBackdrop","props","_jsx","Backdrop","sx","color","zIndex","theme","drawer","backgroundColor","changeBackground","open","openAlertProcessingBackdrop","children","_jsxs","Box","display","flexDirection","alignItems","CircularProgress","Typography","mt","variant","alertTitle","backendURL","createConfig","token","localStorage","getItem","headers","Authorization","concat","UserContext","React","createContext","UserProvider","_ref","userDefault","isAuthenticated","isLogin","user","setUser","useState","setOpenAlertProcessingBackdrop","fetchUser","async","response","config","axios","get","then","data","catch","error","status","getUserLogin","userId","userFullName","positionName","checkJWTExpire","result","getJWT","decodeJWT","JSON","parse","atob","split","e","parseJwt","currentDate","Date","exp","getTime","removeItem","useEffect","_Fragment","Provider","value","loginContext","userContextLogin","logoutContext","PrivateRoutes","Route","path","component","Redirect","to","UserManual","Dialog","fullWidth","maxWidth","openModalUserManual","disableEscapeKeyDown","DialogTitle","fontWeight","fontSize","textAlign","textTransform","IconButton","onClick","setOpenModalUserManual","position","right","top","CloseIcon","DialogContent","dividers","pl","pr","withRouter","useContext","location","useLocation","history","useHistory","anchorEl","setAnchorEl","Boolean","handleClick","event","currentTarget","handleClose","actionNursing","key","label","icon","LocalHospitalIcon","LinkComponent","NavLink","LocalPhoneIcon","actionDoctor","MedicationLiquidIcon","actionAdmin","BarChartIcon","userAction","setUserAction","pathname","findIndex","action","handleLogout","push","width","AppBar","Toolbar","height","Link","Avatar","src","Logo","mb","mr","BottomNavigation","showLabels","justifyContent","flexGrow","map","actionItem","BottomNavigationAction","Button","Menu","onClose","MenuItem","HelpIcon","titleAccess","cursor","exact","Page404","className","CreateAccount","showPassword","setShowPassword","handleCloseModalRegister","reason","setOpenModalRegister","openModalRegister","m","p","TextField","type","InputProps","endAdornment","InputAdornment","handleClickShowPassword","padding","VisibilityIcon","VisibilityOffIcon","Autocomplete","options","id","option","renderInput","params","Stack","spacing","direction","style","margin","Login","userAccount","setUserAccount","password","handleLogin","userName","toast","post","userLogin","setItem","tokenDTO","Container","borderRadius","ml","autoComplete","onChange","onChangeUserName","target","prevUserAccount","onChangeUserPassword","onKeyDown","which","code","handlePressEnter","Register","getRegistersByDateNow","getListMedicalExaminationsGiveRegister","dayOfBirth","getMedicalBook","medicalBookId","updateMedicalState","state","put","SelectedDoctorExamining","loading","setLoading","listDoctor","setListDoctor","selectedDoctor","setSelectedDoctor","handleCreateCurrentDoctorExamining","toastId","_","isEqual","currentDoctorExamining","warning","userIdDoctor","createCurrentDoctorExamining","success","setCurrentDoctorExamining","setOpenSelectedDoctorExaminingModal","handleGetGetListDoctor","getGetListDoctor","indexResponseListDoctor","openSelectedDoctorExaminingModal","length","handleCloseSelectedDoctorExaminingModal","marginBottom","PopperComponent","Popper","clientWidth","undefined","placement","getOptionLabel","renderOption","onSelectDoctor","disableClearable","popupIcon","AlertProcessing","openAlertProcessing","getListProvince","getListDistrict","provinceId","getListWard","districtId","getFullAddressByIdWard","codeWard","ManageInfoPantients","dataPatientInfoDefault","examinationId","weight","headCircumference","vaccination","patient","identifier","address","fullName","gender","fullNameMother","phoneMother","fullNameFather","phoneFather","patientId","dataPatientInfoErrorDefault","title","isError","openTooltip","focus","examiningSession","province","district","ward","listGender","genderOrder","genderName","genderValue","selectedAutoCompleteDefault","openOption","typingRef","useRef","dateFieldRef","dataPatientInfoNotEdit","setDataPatientInfoNotEdit","dataPatientInfo","setDataPatientInfo","dataPatientInfoError","setDataPatientInfoError","selectedAutoComplete","setSelectedAutoComplete","listExaminingSession","setListExaminingSession","listProvince","setListProvince","listDistrict","setListDistrict","list","listWard","setListWard","focusField","setFocusField","setOpenAlertProcessing","tooltipTheme","createTheme","components","MuiTooltip","defaultProps","arrow","componentsProps","tooltip","bgcolor","slotProps","popper","modifiers","name","offset","handleFocus","fieldName","prevSelectedAutoComplete","handleBlur","handleKeyDown","test","preventDefault","filterOptions","inputValue","lowercasedInput","toLowerCase","filter","lowercasedFullName","initials","word","join","includes","onChangeDOBToGetExaminingSession","responseListMedicalExaminationsGiveRegister","formattedDate","exams","handleCloseModalInfoPantients","prevListDistrict","prevListWard","setSelectedPantientInfo","setOpenModalInfoPantients","handleUpdateMedicalRegister","checkValidate","_dataPatientInfoError","isValid","Object","values","every","item","current","dataPatientsRegister","updateMedicalRegister","setCompleteMedicalRegister","responseListProvince","handleGetListProvince","selectedPantientInfo","setIsContinueUpdateMedicalRegister","editPropsDataPatientInfo","cloneDeep","responseListDistrict","provinceCode","responseListWard","districtCode","selectedGender","find","indexListExamining","indexListProvince","indexListDistrict","indexListWard","wardCode","handleApplyPantientDataToField","openModalInfoPantients","isContinueUpdateMedicalRegister","pt","pb","flexWrap","ThemeProvider","Tooltip","marginTop","inputProps","maxLength","inputRef","input","defaultValue","takenValue","clearInterval","setTimeout","prevDataPatientsRegister","onChangeIdentifier","prevDataPatientInfo","onChangeFullName","onSelectGender","onFocus","onBlur","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DemoContainer","DatePicker","format","moment","disableFuture","disableOpenPicker","textField","_d","today","yearsDifference","getFullYear","monthsDifference","getMonth","daysDifference","getDate","age","totalMonths","totalDays","isNaN","onChangeDOB","noOptionsText","onSelectExaminingSession","size","onSelectProvine","onSelectDistrict","onSelectWard","onChangeAddress","onChangeFullNameMother","onChangePhoneMother","onChangeFullNameFather","onChangePhoneFather","onChangeHeight","onChangeWeight","onChangeHeadCircumference","FormControlLabel","control","Checkbox","checked","onChangeVaccination","bool","DialogActions","ListPatientsRegister","activeChip","setActiveChip","chipOrder","chipLabel","listPantientChipState","setListPantientChipState","chipContent","listDataPatientsRegister","setListDataPatientsRegister","searchPatientsQuery","setSearchPatientsQuery","listDataPatientsRegisterState","setListDataPatientsRegisterState","listDataPatientsRegisterSort","setListDataPatientsRegisterSort","searchPatients","patients","searchTerm","lowerCaseSearchTerm","patientObj","handleGetRegistersByDateNow","listPantientRegisterWaiting","patientsRegisterItem","updatedList","index","listCountState","listPantientRegisterExamining","listPantientRegisterDone","setComponent1Loading","keyCode","document","addEventListener","removeEventListener","completeMedicalRegister","Skeleton","EditIcon","TableContainer","Paper","boxShadow","overflowX","pantientChipStateItem","pantientChipStateIndex","Badge","badgeContent","Chip","handleSelectedChip","chipIndex","placeholder","handleSearchPantient","startAdornment","SearchIcon","Table","stickyHeader","minWidth","TableHead","TableRow","TableCell","align","TableBody","patientsRegisterSortItem","patientsRegisterSortIndex","hover","role","onDoubleClick","handleSelectedPantientInfo","order","whiteSpace","overflow","textOverflow","fullAddress","ExaminingSession","isConfirmOpen","setIsConfirmOpen","handleMedicalRegister","oldDisease","createMedicalBackRegister","setIsContinueSelectedExaminingSession","setOpenModalExaminingSession","handleResetField","createMedicalRegister","handleOpenConfirm","openModalExaminingSession","handleListMedicalExaminationsGiveRegister","isContinueSelectedExaminingSession","monthsOfAge","Grid","container","rowSpacing","xs","border","oldExams","oldExamItem","oldExamIndex","RadioGroup","onChangeRadioSelect","examItem","examIndex","Radio","OldDisease","dataPatientsForSearchOldDiseaseDefault","phone","dataPatientsForSearchOldDiseaseErrorDefault","listFoundOldDisease","setListFoundOldDisease","dataPatientsForSearchOldDisease","setDataPatientsForSearchOldDisease","dataPatientsForSearchOldDiseaseError","setDataPatientsForSearchOldDiseaseError","selectedRowIndex","setSelectedRowIndex","formRef","tableRef","handleEnterPress","_dataPatientsForSearchOldDiseaseError","handleCloseModalOldDisease","setOpenModalOldDisease","handleFindOldDisease","validate","getListOldDisease","reset","querySelectorAll","forEach","dispatchEvent","Event","bubbles","handleApplyDataPatientOldDisease","responseVaccinationByPatientId","getVaccinationByPatientId","foundOldDiseaseItem","dataPantientOldOldDiseaseRegister","medicalTypeId","setDataPatientsRegister","openModalOldDisease","ref","autoFocus","prevDataPatientsForSearchOldDisease","onChangePatientId","date","onChangeDayOfBirth","onChangePhone","tabIndex","prevIndex","Math","min","max","handleTableKeyDown","foundOldDiseaseIndex","selected","BookMedical","dataPatientsRegisterDefault","autocompleteValueDefault","medicalType","dataPatientsRegisterErrorDefault","listMedicalType","medicalTypeOrder","medicalTypeName","dataPatientsRegisterError","setDataPatientsRegisterError","autocompleteValue","setAutocompleteValue","firstFocusRef","prevAutocompleteValue","_dataPatientsRegisterError","handleOpenModalOldDisease","console","log","getElementById","_autocompleteValue","indexListGender","indexListMedicalType","handleApplyPantientOldDiseaseData","onF2Press","setOnF2Press","onF4Press","setOnF4Press","onF8Press","setOnF8Press","minHeight","PopperProps","disabled","WebkitTextFillColor","InputLabelProps","shrink","DateField","disablePortal","onSelectMedicalType","paddingLeft","paddingRight","multiline","rows","onChangeReason","MainMedicalRegister","component1Loading","currentDoctorExaminingDefault","setHandleResetField","handleOpenModalExaminingSession","setHandleOpenModalExaminingSession","setHandleOpenModalOldDisease","handleGetCurrentDoctorExamining","getCurrentDoctorExamining","marginLeft","CompleteExamining","mainDataExaminingForConclusion","setMainDataExaminingForConclusion","textareaRef","classes","makeStyles","root","useStyles","handleCloseModalCompleteExamining","setOpenModalCompleteExamining","handleSetDataCompleteExamining","editDataExaminingForConclusion","clone","dataExaminingForConclusion","categories","categoriesItem","categoryContents","categoryContentsItem","categoryContentQuestions","responseAppointmentDate","medicalRegisterId","getAppointmentDate","appointmentDate","nextExamId","nextExamName","handleAddMedicalBook","some","isPredecessor","categoryPres","dataPredecessor","createAddPredecessor","categoriesHealthRecordExamining","isHealthRecord","responseAddMedicalBook","dataMedicalBook","createAddMedicalBook","handleCompleteExaminingForPantient","conclusion","openModalCompleteExamining","List","categoriesIndex","categoryName","categoryContentsIndex","categoryContentTitle","questionItem","questionIndex","borderRight","categoryContentName","categoryContentQuestionType","CheckBoxIcon","lineHeight","categoryContentCheck","categoryContentText","borderTop","categoryContentQuestionName","categoryContentAnswer","TextareaAutosize","categoryContentNote","onChangeExaminingConclusion","prevMainDataExaminingForConclusion","onChangeAppointmentDate","locale","PreviewLastExamining","previewDataExamining","setPreviewDataExamining","healthRecords","examinationName","timeUpdateState","medicakBook","nutritionals","vaccinationBook","fullDataPredecessor","setFullDataPredecessor","fullDataHealthRecord","setFullDataHealthRecord","loadingMedicalBook","setLoadingMedicalBook","openCollapsePredecessorItem","setOpenCollapsePredecessorItem","openCollapseMedicakBookItem","setOpenCollapseMedicakBookItem","prevDataExamining","responseMedicalBook","categoryPresUpdatePagination","categoryPresItem","contentLength","currentContent","healthRecordUpdatePagination","categoriesHealthRecordItem","healthRecordsUpdate","newMedicalBook","medicalBookIdRecently","handleEditPrevDataExamining","predecessorItem","predecessorIndex","ListItemButton","prevOpen","newOpen","handleOpenPredecessorItem","ListItemIcon","SendIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","Pagination","count","page","handeOnChangePagePredecessor","indexPredecessor","_previewDataExamining","medicakBookItems","medicakBookIndex","handleOpenMedicakBookItem","handeOnChangePageHealthRecords","indexMedicakbook","doctorFullName","MainDoctorExamining","dataPantientsReadyExaminingDefault","stt","patientsId","patientsName","patientsDOB","patientsMonthsOld","patientsGender","patientsHeight","patientsWeight","patientsHeadCircumference","patientsPhone","patientsAddress","dataPantientsReadyExamining","setDataPantientsReadyExamining","mainDataExamining","setMainDataExamining","setPrevDataExamining","openCollapseHealthRecords","setOpenCollapseHealthRecords","openCollapseHealthRecordsItem","setOpenCollapseHealthRecordsItem","categorySelectedExamining","setCategorySelectedExamining","contentCategorySelectedExamining","setContentCategorySelectedExamining","healthRecordsContents","setHealthRecordsContents","currentHealthRecordExamining","setCurrentHealthRecordExamining","currentContentExamining","setCurrentContentExamining","setDataExaminingForConclusion","loadingPrevDataExamining","setLoadingPrevDataExamining","loadingPatient","setLoadingPatient","loadingInfoPatient","setLoadingInfoPatient","loadingCategoryExamining","setLoadingCategoryExamining","loadingContentsExamining","setLoadingContentsExamining","handleGetMedicalDetailPatient","responseDataExamining","getMedicalDetailPatient","handleSetMainDataExamining","healthRecordsItem","editDataCategoryPresForConclusion","mainCategoryContentsExamining","editDataHealthRecordsForConclusion","categoryPresIndex","categoryPresOrder","findHealthRecord","healthRecordsState","healthRecordsName","categoryPatients","editHealthRecordsContent","categoryPatientsItem","categoryPatientsIndex","currentHealthRecordsContent","contentQuantity","updateHealthRecordsContent","editDataHealthRecordsItemForConclusion","_dataExaminingForConclusion","dataHealthRecordsItemForConclusionItem","createSelectedQuestionsExaminingForConclusion","currentCategory","categoryContentQuestion","questionOrder","removeSelectedQuestion","categoryContentQuestionOrder","existingQuestion","question","categoryContentQuestionsItem","findPantientExamining","_dataPantientsReadyExamining","handleReloadUIWhenExamining","handleCancelExamining","handleBeginExaminingForPantient","alert","dataPantientItem","dataPantientIndex","handleSelectPantientExamining","handleSelectCategoryClick","categoryIncludeCotent","newCategoryPre","edge","CheckCircleIcon","handleSelectHealthRecords","healthRecordsContentsType","transform","healthRecordsIndex","handleSelectHealthRecordsItem","FiberManualRecordIcon","columnSpacing","sm","md","PinIcon","PersonIcon","MaleIcon","FemaleIcon","CalendarMonthIcon","InfoIcon","PhoneIcon","GiBodyHeight","GiWeightScale","Home","handleAnswerCheckQuestion","answer","_categorySelectedExamining","handleNoteCheckQuestion","categoryContentOrder","handleAnswerValueQuestion","DescriptionIcon","timeRegister","handleOpenHealthRecordsItem","handleAnswerCheckQuestionHealthRecords","_healthRecordsContents","handleNoteCheckQuestionHealthRecords","categoryIndex","_contentCategorySelectedExamining","handleOnChangePage","AppRoutes","HashRouter","Header","Switch","App","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.88fd1100.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessingBackdrop(props) {\r\n    return (\r\n        <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: props.changeBackground ? 'rgba(0, 0, 0, 0.25)' : 'rgba(0, 0, 0, 0.6)' }} open={props.openAlertProcessingBackdrop}>\r\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <CircularProgress color='inherit' />\r\n                <Typography sx={{mt: 1.4,}} variant='subtitle1'>{props.alertTitle}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n\r\nexport default AlertProcessingBackdrop\r\n","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\nconst userLogin = async (userId, password) => {\r\n  return await axios.post(`${backendURL}/api/UserAccount/Login`, { userId, password })\r\n  .then(function (response) {\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n};\r\n\r\nconst getUserLogin = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetUserLogin`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst getGetListDoctor = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetDoctors`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nexport {\r\n    userLogin, \r\n    getUserLogin, getGetListDoctor\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n//modal\r\nimport AlertProcessingBackdrop from '../components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//api\r\nimport { getUserLogin } from '../Service/UserService';\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n\r\n    const userDefault = {\r\n        isAuthenticated: false,\r\n        isLogin: false,\r\n        token: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(userDefault);\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const loginContext = (userContextLogin) => {\r\n        setUser({ ...userContextLogin });\r\n    };\r\n\r\n    const logoutContext = () => {\r\n        setUser({ ...userDefault });\r\n    }\r\n\r\n    const fetchUser = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        const response = await getUserLogin();\r\n        setUser({\r\n            isAuthenticated: true, \r\n            isLogin: true,\r\n            userId: response.userId,\r\n            userFullName: response.userFullName,\r\n            positionName: response.positionName\r\n        })\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const parseJwt = (token) => {\r\n        try {\r\n          return JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n    };\r\n\r\n    const checkJWTExpire = () => {\r\n        let result = false;\r\n        let getJWT = localStorage.getItem('jwt');\r\n        if(getJWT){\r\n            let decodeJWT = parseJwt(getJWT);\r\n            let currentDate  = new Date();\r\n\r\n            if(decodeJWT.exp * 1000 < currentDate.getTime()) {\r\n                //console.log('Token đã hết hạn hoặc không tồn tại')\r\n                localStorage.removeItem('jwt'); //xóa localStorage\r\n                return result \r\n            }\r\n            else{\r\n                //console.log('token còn hạn');\r\n                result = true;\r\n                return result\r\n            }\r\n        }\r\n        else{\r\n            return result\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const result = checkJWTExpire();\r\n        if(result){\r\n            fetchUser();\r\n        }else{\r\n            //không có token\r\n            setUser(userDefault);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <UserContext.Provider value={{ user, loginContext, logoutContext }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop}\r\n                alertTitle={'Đang tải thông tin người dùng'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst PrivateRoutes = (props) => {\n  const token = localStorage.getItem('jwt');\n\n  if (token) {\n    return (\n      <>\n        <Route path={props.path} component={props.component}></Route>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <Redirect to='/login'></Redirect>\n      </>\n    )\n  }\n};\nexport default PrivateRoutes;\n","import React from 'react'\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nfunction UserManual(props) {\r\n\r\n    return (\r\n        <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalUserManual} disableEscapeKeyDown={true}>\r\n            <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Hướng dẫn sử dụng</DialogTitle>\r\n            <IconButton onClick={() => props.setOpenModalUserManual(false)} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Điều dưỡng</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F2 hoặc nút Đăng ký trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Làm mới form thông tin đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F4 hoặc nút Làm mới trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Tìm bệnh cũ</Typography>\r\n                        <Typography>Nhấn phím F8 hoặc nút Bệnh cũ trên màn hình, sau khi nhập thông tin và tìm được bệnh nhân, click đúp thông tin bệnh nhân để form thông tin đăng ký khám nhận dữ liệu</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin bệnh nhân</Typography>\r\n                        <Typography>Trong bảng danh sách đăng ký khám trong ngày, nhấn vào bệnh nhân để mở form sửa thông tin</Typography>\r\n                    </Box>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Bác sĩ</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Khám bệnh</Typography>\r\n                        <Typography>Bước 1: Nhấn chọn bệnh nhân để khám</Typography>\r\n                        <Typography>Bước 2: Nhấn F2 để bắt đầu khám</Typography>\r\n                        <Typography>Bước 3: Nhấn F4 để kết thúc khám</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin hỏi bệnh khi đã kết thúc khám</Typography>\r\n\r\n                    </Box>\r\n                \r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Admin</Typography>\r\n                {/* <Typography variant='subtitle1' sx={{color: 'red'}}>Nếu có sự cố liên hệ zalo: 0987654321 (chỉ phục vụ giờ hành chính)</Typography> */}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default UserManual","export default __webpack_public_path__ + \"static/media/logo.e5a4a234.png\";","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\nimport UserManual from '../ManageUserManual/UserManual';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nfunction Header(props) {\r\n\r\n  const { user, logoutContext } = useContext(UserContext);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [openModalUserManual, setOpenModalUserManual] = useState(false);\r\n\r\n  //mui state menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  \r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const actionNursing = [\r\n    { key: 'medicalRegister', maxWidth: '114px', label: 'Đăng ký khám', icon: <LocalHospitalIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/medicalregister\" },\r\n    { key: 're-examining', maxWidth: '95px', label: 'Nhắc khám', icon: <LocalPhoneIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/re-examination\" },\r\n  ]\r\n\r\n  const actionDoctor = [\r\n    { key: 'examining', maxWidth: '100px', label: 'Khám bệnh', icon: <MedicationLiquidIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/doctor-examining\" },\r\n  ]\r\n\r\n  const actionAdmin = [\r\n    { key: 'statistical', maxWidth: '83px', label: 'Thống kê', icon: <BarChartIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/dashboard\" },\r\n  ]\r\n\r\n  const [userAction, setUserAction] = useState([]);\r\n\r\n  const handleChangeURL = (pathname) => {\r\n    const actionIndex = userAction.findIndex(action => action.to === pathname);\r\n    return actionIndex;\r\n  }\r\n\r\n  const value = handleChangeURL(props.location.pathname);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('jwt'); //xóa localStorage\r\n    logoutContext();\r\n    setAnchorEl(null);\r\n    history.push('/login');\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(user.positionName === 'Nursing'){        \r\n      setUserAction(actionNursing);\r\n    }\r\n    else if(user.positionName === 'Doctor'){\r\n      setUserAction(actionDoctor);\r\n    }\r\n    else if(user.positionName === 'Admin'){\r\n      setUserAction(actionAdmin);\r\n    }\r\n  }, [user])\r\n  \r\n  if(location.pathname !== '/login'){\r\n    return (\r\n      <>\r\n        <Box sx={{ width: '100%', position: 'fixed', top: 0}} >\r\n          <AppBar>\r\n            <Toolbar sx={{backgroundColor: '#cfe8fc', height: '78px'}}>\r\n              <Link to=\"/\">\r\n                <Avatar src={Logo} sx={{ width: 62, height: 62, mt: 'auto', mb: 'auto', mr: 4 }} />\r\n              </Link>\r\n                {user.isAuthenticated === true || token ? \r\n                  <>\r\n                    <BottomNavigation showLabels value={value}\r\n                      sx={{display: 'flex', justifyContent: 'flex-start', backgroundColor: '#cfe8fc', flexGrow: 1}}>\r\n                      {userAction.map(actionItem => (\r\n                        <BottomNavigationAction\r\n                          key={actionItem.key}\r\n                          label={actionItem.label}\r\n                          icon={actionItem.icon}\r\n                          LinkComponent={actionItem.LinkComponent}\r\n                          to={actionItem.to}\r\n                          sx={{color: '#000', maxWidth: actionItem.maxWidth}}\r\n                        />\r\n                      ))}  \r\n                    </BottomNavigation>\r\n\r\n                    <Button onClick={handleClick} sx={{color: '#000', textTransform: 'none'}}>{user.userFullName}</Button>\r\n                    <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\r\n                      <MenuItem>Đổi mật khẩu</MenuItem>\r\n                      <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                    </Menu>\r\n                    <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                  </>\r\n                  :\r\n                    <>\r\n                      <Box sx={{position: 'absolute', right: 22}}>\r\n                        <NavLink exact to=\"/login\"><Button sx={{textTransform: 'none', color: '#000'}}>Đăng nhập</Button></NavLink>\r\n                        <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                      </Box>\r\n                    </>\r\n                  }            \r\n                </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n  \r\n        <UserManual openModalUserManual={openModalUserManual} setOpenModalUserManual={setOpenModalUserManual}/>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../ErrorPage/Page500.scss\";\nconst Page404 = () => {\n  let history = useHistory();\n  const handleBack = () => {\n    history.push(\"/\");\n  };\n  return (\n    <div>\n      <div className=\"section\">\n        <h1 className=\"error\">404</h1>\n        <div className=\"page\">\n          Oh snap!!! The page you are looking for is not found.\n        </div>\n        <div>\n          <a className=\"back-home\" onClick={() => handleBack()}>\n            Back to home\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Page404;\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CreateAccount = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleCloseModalRegister = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalRegister(false);\r\n      }\r\n    }\r\n\r\n    const position = [\r\n      {id: '1', positionName: 'Điều dưỡng'},\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n          <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalRegister} onClose={(event, reason) => handleCloseModalRegister(event, reason)} disableEscapeKeyDown={true}  >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n            <IconButton onClick={() => handleCloseModalRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n              <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} />\r\n              <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }}/>\r\n              <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '46ch', mb: 2.5 }} \r\n                InputProps={{ // <-- This is where the toggle button is added.\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <Autocomplete options={position.map((option) => option.positionName)} renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} sx={{ width: '45.95ch', mb: 2.5 }}/>\r\n              <Stack spacing={2} direction=\"column\">\r\n                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleCloseModalRegister()}>Tạo tài khoản</Button>\r\n              </Stack>\r\n            \r\n            </DialogContent>\r\n          </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAccount","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Register from '../ManageRegister/Register';\r\nimport { toast } from 'react-toastify';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//api\r\nimport { userLogin } from '../../Service/UserService';\r\n\r\nconst Login = () => {\r\n    const { user, loginContext } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [userAccount, setUserAccount] = useState({userId: '', password: ''})\r\n    const [openModalRegister, setOpenModalRegister] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const onChangeUserName = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                userId: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const onChangeUserPassword = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                password: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if(userAccount.userName === ''){\r\n            toast.error('Bạn chưa nhập tài khoản!')\r\n        }\r\n        else if(userAccount.password === ''){\r\n            toast.error('Bạn chưa nhập mật khẩu!');\r\n        }\r\n        else{\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const response = await userLogin(userAccount.userId, userAccount.password);\r\n            setOpenAlertProcessingBackdrop(false);\r\n            if(response.status !== 200){\r\n                toast.error(response.data);\r\n            }\r\n            else{\r\n                loginContext(\r\n                    {\r\n                        isAuthenticated: true, \r\n                        isLogin: true,\r\n                        userId: response.data.userId,\r\n                        userFullName: response.data.userFullName,\r\n                        positionName: response.data.positionName\r\n                    }\r\n                )\r\n\r\n                localStorage.setItem('jwt', response.data.tokenDTO.token)\r\n\r\n                if(response.data.positionName === 'Nursing'){\r\n                    history.push('/medicalregister');\r\n                }\r\n                else if(response.data.positionName === 'Doctor'){\r\n                    history.push('/doctor-examining');\r\n                }\r\n                else{\r\n                    history.push('/');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleLogin();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAuthenticated === true) {\r\n            history.push('/');\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        if (token) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box sx={{ mt: 3, borderRadius: '25px' }} >\r\n                    <Box sx={{ p: 7.6 }}>\r\n                        <Avatar src={Logo} sx={{ width: 120, height: 120, ml: 'auto', mr: 'auto', mb: 2 }} />\r\n                        <Typography sx={{ textAlign: 'center', textTransform: 'uppercase', fontWeight: 'bolder', fontSize: '1.15rem', mb: 2, color: '#4caf50' }} variant=\"h5\">Chương trình khám nhi khoa phát triển</Typography>\r\n                        <Box component=\"form\" autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                            <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                            <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 3 }} \r\n                            onChange={(e) => onChangeUserPassword(e.target.value)} onKeyDown={(e) => handlePressEnter(e)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6.5vh', width: '28ch' }} variant=\"contained\" style={{ margin: 'auto' }} onClick={(e) => handleLogin()}>Đăng nhập</Button>\r\n                                <Typography sx={{textAlign: 'center'}} variant=\"subtitle1\">Chưa có tài khoản? <strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Đăng ký</strong></Typography>\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Register\r\n                openModalRegister={openModalRegister} setOpenModalRegister={setOpenModalRegister}\r\n            />\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang đăng nhập'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst createMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/Register`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createMedicalBackRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/BackRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createCurrentDoctorExamining = async (userIdDoctor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/SetDoctorExaming/${userIdDoctor}`, \r\n        {}, // Body của request, có thể là {} hoặc object\r\n        {\r\n            headers: {\r\n                \"content-type\": \"text/plain; charset=utf-8\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddPredecessor = async (dataPredecessor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddPredecessor`, dataPredecessor,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddMedicalBook = async (dataMedicalBook) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddMedicalBook`, dataMedicalBook,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getRegistersByDateNow = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetRegistersByDateNow`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveRegister = async (dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListOldDisease = async (patientId, phone, fullName, dayOfBirth, gender) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/SearchPatients?patientId=${patientId}&phone=${phone}&fullName=${fullName}&dayOfBirth=${dayOfBirth}&gender=${gender}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getVaccinationByPatientId = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetVaccinationByPatientId/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getCurrentDoctorExamining = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetDoctorExamining`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalDetailPatient = async (id) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/DetailPatient/${id}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetMediacalBook?medicalBookId=${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentDate = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentDate/${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/EditRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateMedicalState = async (id, state) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateState?id=${id}&state=${state}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    createMedicalRegister, createMedicalBackRegister, createCurrentDoctorExamining, createAddPredecessor, createAddMedicalBook,\r\n    getRegistersByDateNow, getListMedicalExaminationsGiveRegister, getListOldDisease, getVaccinationByPatientId, getCurrentDoctorExamining, getMedicalDetailPatient, getMedicalBook, getAppointmentDate,\r\n    updateMedicalRegister, updateMedicalState\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\n//lodash\r\nimport _ from 'lodash';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Popper from '@mui/material/Popper';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//toast\r\nimport { toast } from 'react-toastify';\r\n//api\r\nimport { getGetListDoctor } from '../../Service/UserService';\r\nimport { createCurrentDoctorExamining } from '../../Service/MedicalRegisterService';\r\nimport { Box } from '@mui/material';\r\n\r\nfunction SelectedDoctorExamining(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [listDoctor, setListDoctor] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n\r\n    const CustomPopper = (props) => {\r\n        return <Popper {...props} style={{ width: props.anchorEl ? props.anchorEl.clientWidth : undefined }} placement=\"bottom-start\" />;\r\n      };\r\n\r\n    const onSelectDoctor = (e, value) => {\r\n        setSelectedDoctor( { userFullName: value.userFullName, userIdDoctor: value.userId } );\r\n    }\r\n\r\n    const handleCloseSelectedDoctorExaminingModal = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            props.setOpenSelectedDoctorExaminingModal(false);\r\n            setSelectedDoctor(null)\r\n        }\r\n    }\r\n\r\n    const handleCreateCurrentDoctorExamining = async () => {\r\n        if(selectedDoctor === null){\r\n            toast.error('Bạn chưa chọn bác sĩ khám!', {toastId: 'error1'})\r\n        }\r\n        else{\r\n            if(_.isEqual(props.currentDoctorExamining, selectedDoctor)){\r\n                toast.warning('Hiện không có gì để lưu', {toastId: 'warning1'})\r\n            }\r\n            else{\r\n                const response = await createCurrentDoctorExamining(selectedDoctor.userIdDoctor);\r\n                toast.success(response.data, {toastId: 'success1'});\r\n                props.setCurrentDoctorExamining(selectedDoctor);\r\n                props.setOpenSelectedDoctorExaminingModal(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleGetGetListDoctor = async () => {\r\n        const response = await getGetListDoctor();\r\n        setListDoctor(response);\r\n        if(props.currentDoctorExamining.userIdDoctor !== ''){\r\n            const indexResponseListDoctor = response.findIndex(listDoctor => listDoctor.userId === props.currentDoctorExamining.userIdDoctor);\r\n            setSelectedDoctor(response[indexResponseListDoctor]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        if(props.openSelectedDoctorExaminingModal){\r\n            if(listDoctor.length === 0){\r\n                handleGetGetListDoctor();\r\n            }\r\n            else{\r\n                const indexResponseListDoctor = listDoctor.findIndex(listDoctor => listDoctor.userId === props.currentDoctorExamining.userIdDoctor);\r\n                setSelectedDoctor(listDoctor[indexResponseListDoctor]);\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }, [props.currentDoctorExamining, props.openSelectedDoctorExaminingModal])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth='xs' open={props.openSelectedDoctorExaminingModal} onClose={(event, reason) => handleCloseSelectedDoctorExaminingModal(event, reason)} disableEscapeKeyDown={true} >\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>{props.currentDoctorExamining ? 'Thay đổi bác sĩ khám' : 'Chọn bác sĩ khám'}</DialogTitle>\r\n                <IconButton onClick={() => props.setOpenSelectedDoctorExaminingModal(false)}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers >\r\n                    {loading ? \r\n                        <CircularProgress/>\r\n                    :\r\n                        <>\r\n                            <Box sx={{height: 'auto'}}>\r\n                                <Autocomplete \r\n                                    value={selectedDoctor}\r\n                                    sx={{marginBottom: '10px'}}\r\n                                    options={listDoctor}\r\n                                    PopperComponent={CustomPopper}\r\n                                    getOptionLabel={(option) => option.userFullName}\r\n                                    renderOption={(props, option) => (\r\n                                        <li {...props}>\r\n                                            {option.userFullName}\r\n                                        </li>\r\n                                    )}\r\n                                    onChange={(e, value) => onSelectDoctor(e, value)}\r\n                                    renderInput={(params) => (\r\n                                        <TextField {...params} \r\n                                            label={'Chọn một bác sĩ'} \r\n                                        />\r\n                                    )}\r\n                                    disableClearable // Bỏ icon xóa\r\n                                    popupIcon={null} // Bỏ icon dropdown\r\n                                />\r\n\r\n                                <Stack spacing={2} direction=\"column\">\r\n                                    <Button sx={{ width: '12ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} \r\n                                        onClick={() => handleCreateCurrentDoctorExamining()}>Lưu\r\n                                    </Button>\r\n                                </Stack>\r\n                            </Box>\r\n                        </>\r\n                    }\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectedDoctorExamining","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessing(props) {\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={props.openAlertProcessing} disableEscapeKeyDown={true}>\r\n                <DialogContent>\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <CircularProgress/>\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang xử lý...</Typography>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertProcessing","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getListProvince = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/ListProvince`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListDistrict = async (provinceId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListDistrictByIdProvince/${provinceId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListWard = async (districtId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListWardByIdDistrict/${districtId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getFullAddressByIdWard = async (codeWard) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetFullAddressByIdWard/${codeWard}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getListProvince, getListDistrict, getListWard, getFullAddressByIdWard\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport { Autocomplete } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//lodash\r\nimport _ from 'lodash';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { updateMedicalRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalRegisterService';\r\n\r\nfunction ManageInfoPantients(props) {\r\n  const dataPatientInfoDefault = {\r\n    examinationId: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    headCircumference: \"\",\r\n    reason: \"\",\r\n    vaccination: false,\r\n    id: \"\",\r\n    patient: {\r\n      identifier: \"\",\r\n      address: \"\",\r\n      fullName: \"\",\r\n      dayOfBirth: null,\r\n      codeWard: \"\",\r\n      gender: true,\r\n      fullNameMother: \"\",\r\n      phoneMother: \"\",\r\n      fullNameFather: \"\",\r\n      phoneFather: \"\",\r\n      patientId: \"\"\r\n    }\r\n  }\r\n\r\n  const dataPatientInfoErrorDefault = {\r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    examiningSession: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n  } \r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const selectedAutoCompleteDefault = { \r\n    gender: { value: null, openOption: false }, \r\n    examiningSession: {value: null, openOption: false, loading: false},\r\n    province: { value: null, openOption: false }, \r\n    district: { value: null, openOption: false }, \r\n    ward: { value: null, openOption: false },\r\n  }\r\n\r\n  const typingRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  const [dataPatientInfoNotEdit, setDataPatientInfoNotEdit] = useState();\r\n  const [dataPatientInfo, setDataPatientInfo] = useState(dataPatientInfoDefault);\r\n  const [dataPatientInfoError, setDataPatientInfoError] = useState(dataPatientInfoErrorDefault);\r\n    \r\n  const [selectedAutoComplete, setSelectedAutoComplete] = useState(selectedAutoCompleteDefault);\r\n\r\n  const [listExaminingSession, setListExaminingSession] = useState([]);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f',\r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -8],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.gender.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'ExaminingSession'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.examiningSession.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else{\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      //const _dataPatientInfoError = {...dataPatientInfoError};\r\n      // if(fieldName === 'patientId'){\r\n      //   _dataPatientInfoError.patientId.title = '';\r\n      //   _dataPatientInfoError.patientId.openTooltip = false;\r\n      //   setDataPatientInfoError(_dataPatientInfoError);\r\n      // }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.dayOfBirth.title = '';\r\n      //     _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientInfoError.dayOfBirth.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneMother.title = '';\r\n      //     _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneMother.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneFather'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneFather.title = '';\r\n      //     _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneFather.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'Gender'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.gender.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'ExaminingSession'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n      //     prevSelectedAutoComplete.examiningSession.openOption = false\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Province'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.province.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'District'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.district.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Ward'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.ward.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.gender.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'ExaminingSession'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n          prevSelectedAutoComplete.examiningSession.openOption = false\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.district.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.ward.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n  \r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n  \r\n      return (lowercasedFullName.includes(lowercasedInput) || initials.includes(lowercasedInput));\r\n    });\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientInfoError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientInfoError.identifier.openTooltip = true;\r\n          _dataPatientInfoError.identifier.isError = true;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n        else{\r\n          setDataPatientInfo(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientInfoError.identifier.title = '';\r\n          _dataPatientInfoError.identifier.openTooltip = false;\r\n          _dataPatientInfoError.identifier.isError = false;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.identifier.title = '';\r\n      _dataPatientInfoError.identifier.openTooltip = false;\r\n      _dataPatientInfoError.identifier.isError = false;\r\n      _dataPatientInfoError.identifier.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n    \r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.fullName = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n    \r\n      if(dataPatientInfoError.fullName.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullName.title = '';\r\n        _dataPatientInfoError.fullName.openTooltip = false;\r\n        _dataPatientInfoError.fullName.isError = false;\r\n        _dataPatientInfoError.fullName.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = async (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n    \r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n            \r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n    \r\n        if(today < takenValue || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientInfoError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n          _dataPatientInfoError.dayOfBirth.isError = true;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n    \r\n        else{\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.dayOfBirth = formattedDate\r\n            return {...prevDataPatientInfo}\r\n          })\r\n    \r\n          _dataPatientInfoError.dayOfBirth.title = '';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n          _dataPatientInfoError.dayOfBirth.isError = false;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n\r\n          onChangeDOBToGetExaminingSession(formattedDate);\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onChangeDOBToGetExaminingSession = async (formattedDate) => {\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.value = null\r\n      return {...prevSelectedAutoComplete}\r\n    })\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = true\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(formattedDate);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = false\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.patient.gender = value.genderValue\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n    \r\n    if(dataPatientInfoError.gender.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.gender.isError = false;\r\n      _dataPatientInfoError.gender.title = '';\r\n      _dataPatientInfoError.gender.openTooltip = false;\r\n      _dataPatientInfoError.gender.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectExaminingSession = (e, value) => {\r\n    if(focusField === 'examiningSession'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.examinationId = value.id\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.examiningSession.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(dataPatientInfoError.examiningSession.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.examiningSession.isError = false;\r\n      _dataPatientInfoError.examiningSession.title = '';\r\n      _dataPatientInfoError.examiningSession.openTooltip = false;\r\n      _dataPatientInfoError.examiningSession.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.province.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(selectedAutoComplete.district.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.province.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.province.isError = false;\r\n      _dataPatientInfoError.province.title = '';\r\n      _dataPatientInfoError.province.openTooltip = false;\r\n      _dataPatientInfoError.province.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.district.value = value;\r\n      return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.district.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.district.isError = false;\r\n      _dataPatientInfoError.district.title = '';\r\n      _dataPatientInfoError.district.openTooltip = false;\r\n      _dataPatientInfoError.district.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n\r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.codeWard = value.code\r\n      return { ...prevDataPatientInfo }\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.ward.value = value;\r\n        return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(dataPatientInfoError.ward.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.ward.isError = false;\r\n      _dataPatientInfoError.ward.title = '';\r\n      _dataPatientInfoError.ward.openTooltip = false;\r\n      _dataPatientInfoError.ward.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    if(focusField === 'address'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.address = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.address.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.address.isError = false;\r\n        _dataPatientInfoError.address.title = '';\r\n        _dataPatientInfoError.address.openTooltip = false;\r\n        _dataPatientInfoError.address.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    if(focusField === 'fullNameMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameMother = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(focusField === 'phoneMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneMother.openTooltip = true;\r\n          _dataPatientInfoError.phoneMother.isError = true;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n          \r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneMother = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n      \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n      \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 10)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneMother.title = '';\r\n      _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      _dataPatientInfoError.phoneMother.isError = false;\r\n      _dataPatientInfoError.phoneMother.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameFather = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneFather.openTooltip = true;\r\n          _dataPatientInfoError.phoneFather.isError = true;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n\r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneFather = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n                \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n                \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneFather.title = '';\r\n      _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      _dataPatientInfoError.phoneFather.isError = false;\r\n      _dataPatientInfoError.phoneFather.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    if(focusField === 'height'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.height = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.height.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.height.title = '';\r\n        _dataPatientInfoError.height.openTooltip = false;\r\n        _dataPatientInfoError.height.isError = false;\r\n        _dataPatientInfoError.height.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    if(focusField === 'weight'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.weight = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.weight.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.weight.title = '';\r\n        _dataPatientInfoError.weight.openTooltip = false;\r\n        _dataPatientInfoError.weight.isError = false;\r\n        _dataPatientInfoError.weight.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    if(focusField === 'headCircumference'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.headCircumference = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.headCircumference.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.headCircumference.title = '';\r\n        _dataPatientInfoError.headCircumference.openTooltip = false;\r\n        _dataPatientInfoError.headCircumference.isError = false;\r\n        _dataPatientInfoError.headCircumference.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.vaccination = bool\r\n      return {...prevDataPatientInfo}\r\n    })\r\n  }\r\n\r\n  const handleCloseModalInfoPantients = (event, reason) => {\r\n    if(reason && reason === \"backdropClick\"){\r\n      return;\r\n    }\r\n    else{\r\n      setListDistrict(prevListDistrict => {\r\n        prevListDistrict.loading = false\r\n        prevListDistrict.list = []\r\n        return {...prevListDistrict}\r\n      })\r\n      setListWard(prevListWard => {\r\n        prevListWard.loading = false\r\n        prevListWard.list = []\r\n        return {...prevListWard}\r\n      })\r\n      setListExaminingSession([]);\r\n      setSelectedAutoComplete(selectedAutoCompleteDefault);\r\n      setDataPatientInfo(dataPatientInfoDefault);\r\n      setDataPatientInfoNotEdit('');\r\n      setDataPatientInfoError(dataPatientInfoErrorDefault);\r\n      setLoading(true);\r\n      props.setSelectedPantientInfo();\r\n      props.setOpenModalInfoPantients(false);\r\n    }\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const responseListProvince = await getListProvince();\r\n    setListProvince(responseListProvince);\r\n  }\r\n\r\n  const handleApplyPantientDataToField = async () => {\r\n    setOpenAlertProcessing(true);   \r\n      \r\n    const editPropsDataPatientInfo = {...dataPatientInfo};\r\n    editPropsDataPatientInfo.examinationId = props.selectedPantientInfo.examinationId\r\n    editPropsDataPatientInfo.height = props.selectedPantientInfo.height\r\n    editPropsDataPatientInfo.weight = props.selectedPantientInfo.weight\r\n    editPropsDataPatientInfo.headCircumference = props.selectedPantientInfo.headCircumference\r\n    editPropsDataPatientInfo.reason = props.selectedPantientInfo.reason\r\n    editPropsDataPatientInfo.vaccination = props.selectedPantientInfo.vaccination\r\n    editPropsDataPatientInfo.id = props.selectedPantientInfo.id\r\n    editPropsDataPatientInfo.patient.identifier = props.selectedPantientInfo.patient.identifier\r\n    editPropsDataPatientInfo.patient.address = props.selectedPantientInfo.patient.address\r\n    editPropsDataPatientInfo.patient.fullName = props.selectedPantientInfo.patient.fullName\r\n    editPropsDataPatientInfo.patient.dayOfBirth = props.selectedPantientInfo.patient.dayOfBirth\r\n    editPropsDataPatientInfo.patient.codeWard = props.selectedPantientInfo.patient.codeWard\r\n    editPropsDataPatientInfo.patient.gender = props.selectedPantientInfo.patient.gender\r\n    editPropsDataPatientInfo.patient.fullNameMother = props.selectedPantientInfo.patient.fullNameMother\r\n    editPropsDataPatientInfo.patient.phoneMother = props.selectedPantientInfo.patient.phoneMother\r\n    editPropsDataPatientInfo.patient.fullNameFather = props.selectedPantientInfo.patient.fullNameFather\r\n    editPropsDataPatientInfo.patient.phoneFather = props.selectedPantientInfo.patient.phoneFather\r\n    editPropsDataPatientInfo.patient.patientId = props.selectedPantientInfo.patient.patientId\r\n\r\n    setDataPatientInfo(_.cloneDeep(editPropsDataPatientInfo));\r\n    setDataPatientInfoNotEdit(_.cloneDeep(editPropsDataPatientInfo));\r\n        \r\n    const response = await getFullAddressByIdWard(props.selectedPantientInfo.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.list = responseListDistrict;\r\n      return {...prevListDistrict}\r\n    });\r\n    const responseListWard = await getListWard(response.districtCode);\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = responseListWard;\r\n      return {...prevListWard}\r\n    });\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(props.selectedPantientInfo.patient.dayOfBirth);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n     \r\n    const selectedGender = listGender.find(gender => gender.genderValue === props.selectedPantientInfo.patient.gender);\r\n    const indexListExamining = responseListMedicalExaminationsGiveRegister.exams.findIndex(examiningSession => examiningSession.id === props.selectedPantientInfo.examinationId)\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = selectedGender\r\n      prevSelectedAutoComplete.examiningSession.value = responseListMedicalExaminationsGiveRegister.exams[indexListExamining];\r\n      prevSelectedAutoComplete.province.value = listProvince[indexListProvince];\r\n      prevSelectedAutoComplete.district.value = responseListDistrict[indexListDistrict];\r\n      prevSelectedAutoComplete.ward.value = responseListWard[indexListWard];\r\n      return prevSelectedAutoComplete\r\n    })\r\n\r\n    setLoading(false);\r\n    setOpenAlertProcessing(false);   \r\n  }\r\n\r\n  const checkValidate = () => {\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      let isValid = true;\r\n\r\n      if(dataPatientInfoError.identifier.title !== ''){\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.identifier.focus = true;\r\n          setFocusField('identifier');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullName === ''){\r\n        _dataPatientInfoError.fullName.title = 'Bạn chưa nhập họ tên';\r\n        _dataPatientInfoError.fullName.openTooltip = true;\r\n        _dataPatientInfoError.fullName.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullName.focus = true;\r\n          setFocusField('fullName');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(dataPatientInfo.patient.gender === ''){\r\n        _dataPatientInfoError.gender.title = 'Bạn chưa chọn giới tính';\r\n        _dataPatientInfoError.gender.isError = true;\r\n        _dataPatientInfoError.gender.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.gender.focus = true;\r\n          setFocusField('gender');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.dayOfBirth === ''){\r\n        _dataPatientInfoError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfoError.dayOfBirth.title !== ''){\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.examiningSession.value === null){\r\n        _dataPatientInfoError.examiningSession.title = 'Bạn chưa chọn lại kỳ khám';\r\n        _dataPatientInfoError.examiningSession.isError = true;\r\n        _dataPatientInfoError.examiningSession.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.examiningSession.focus = true;\r\n          setFocusField('examiningSession');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.province.value === null){\r\n        _dataPatientInfoError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n        _dataPatientInfoError.province.isError = true;\r\n        _dataPatientInfoError.province.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.province.focus = true;\r\n          setFocusField('province');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.district.value === null){\r\n        _dataPatientInfoError.district.title = 'Bạn chưa chọn quận huyện';\r\n        _dataPatientInfoError.district.isError = true;\r\n        _dataPatientInfoError.district.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.district.focus = true;\r\n          setFocusField('district');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.ward.value === null){\r\n        _dataPatientInfoError.ward.title = 'Bạn chưa chọn phường xã';\r\n        _dataPatientInfoError.ward.isError = true;\r\n        _dataPatientInfoError.ward.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.ward.focus = true;\r\n          setFocusField('ward');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.address === ''){\r\n        _dataPatientInfoError.address.title = 'Bạn chưa nhập địa chỉ';\r\n        _dataPatientInfoError.address.isError = true;\r\n        _dataPatientInfoError.address.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.address.focus = true;\r\n          setFocusField('address');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullNameMother === '' && dataPatientInfo.patient.fullNameFather === ''){\r\n        _dataPatientInfoError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n        _dataPatientInfoError.fullNameMother.isError = true;\r\n        _dataPatientInfoError.fullNameMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullNameMother.focus = true;\r\n          setFocusField('fullNameMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.phoneMother === '' && dataPatientInfo.patient.phoneFather === ''){\r\n        _dataPatientInfoError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        _dataPatientInfoError.phoneMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneMother.title !== ''){\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneFather.title !== ''){\r\n        _dataPatientInfoError.phoneFather.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneFather.focus = true;\r\n          setFocusField('phoneFather');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.height === ''){\r\n        _dataPatientInfoError.height.title = 'Bạn chưa nhập chiều cao';\r\n        _dataPatientInfoError.height.isError = true;\r\n        _dataPatientInfoError.height.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.height.focus = true;\r\n          setFocusField('height');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.weight === ''){\r\n        _dataPatientInfoError.weight.title = 'Bạn chưa nhập cân nặng';\r\n        _dataPatientInfoError.weight.isError = true;\r\n        _dataPatientInfoError.weight.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.weight.focus = true;\r\n          setFocusField('weight');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.headCircumference === ''){\r\n        _dataPatientInfoError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n        _dataPatientInfoError.headCircumference.isError = true;\r\n        _dataPatientInfoError.headCircumference.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.headCircumference.focus = true;\r\n          setFocusField('headCircumference');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      // if(dataPatientInfo.reason === ''){\r\n      //   _dataPatientInfoError.reason.isError = true;\r\n      //   isValid = false;\r\n      // }\r\n\r\n      if(_.isEqual(dataPatientInfo, dataPatientInfoNotEdit) === true){\r\n        toast.warning('Hiện không có gì để cập nhật', {toastId: 'warning1'});\r\n        isValid = false;\r\n      }\r\n\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n      return isValid;\r\n  }\r\n\r\n  const handleUpdateMedicalRegister = async () => {\r\n    if(checkValidate()){\r\n      setOpenAlertProcessing(true);\r\n      const response = await updateMedicalRegister(dataPatientInfo);\r\n      if(response.status === 200){\r\n        toast.success(response.data, {toastId: 'success1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      else{\r\n        toast.error(response.data, {toastId: 'error1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      setOpenAlertProcessing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(listProvince.length === 0){\r\n      handleGetListProvince();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.selectedPantientInfo){\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n      handleApplyPantientDataToField();\r\n    }\r\n  }, [props.selectedPantientInfo])\r\n\r\n  useEffect(() => {\r\n    if(props.openModalInfoPantients && props.isContinueUpdateMedicalRegister && loading === false){\r\n      handleUpdateMedicalRegister();\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n    }\r\n  }, [props.isContinueUpdateMedicalRegister, loading])\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth={true} maxWidth='md' open={props.openModalInfoPantients} onClose={(event, reason) => handleCloseModalInfoPantients(event, reason)} >\r\n        <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center', color: 'blue' }}>Thông tin bệnh nhân</DialogTitle>\r\n        <IconButton onClick={() => handleCloseModalInfoPantients()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n          <CloseIcon fontSize='medium'/>\r\n        </IconButton>\r\n        <DialogContent dividers sx={{pt: 1.5, pb: 1.5}}>\r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', pl: 4.2, pr: 4.2, mb: 0.8}}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.identifier.title}</h6>} open={dataPatientInfoError.identifier.openTooltip} placement='left'> \r\n              <TextField error={true ? dataPatientInfoError.identifier.isError === true : false}\r\n                label=\"Mã định danh\" variant=\"outlined\" \r\n                sx={{width: '18%', '&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                inputProps={{ maxLength: 12 }}\r\n                inputRef={(input) => input && focusField === 'identifier' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.identifier}\r\n                onChange={(e) => onChangeIdentifier(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n                      \r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullName.title}</h6>} open={dataPatientInfoError.fullName.openTooltip} placement='top'\r\n              slotProps={{\r\n                popper: {\r\n                  modifiers: [\r\n                    {\r\n                      name: 'offset',\r\n                      options: { offset: [-10, -6], },\r\n                    },\r\n                  ],\r\n                },\r\n              }} \r\n            > \r\n              <TextField error={true ? dataPatientInfoError.fullName.isError === true : false}\r\n                label=\"Họ tên\" variant=\"outlined\" \r\n                sx={{width: '32%', '&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.fullName}\r\n                onChange={(e) => onChangeFullName(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.gender.title}</h6>} open={dataPatientInfoError.gender.openTooltip} placement='top'>\r\n              <Autocomplete \r\n                sx={{width: '12%', marginTop: '7.5px'}}\r\n                options={listGender} \r\n                getOptionLabel={(option) => option.genderName}\r\n                value={selectedAutoComplete.gender.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.genderName}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectGender(e, value)}\r\n                open={selectedAutoComplete.gender.openOption}\r\n                onFocus={() => handleFocus('Gender')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Giới tính\" \r\n                    inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                    error={true ? dataPatientInfoError.gender.isError === true : false}                     \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <DemoContainer components={['DatePicker']}>  \r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.dayOfBirth.title}</h6>} open={dataPatientInfoError.dayOfBirth.openTooltip}>    \r\n                  <Box sx={{width: 110}}>\r\n                    <DatePicker label=\"Ngày sinh\" \r\n                      format='DD/MM/YYYY' defaultValue={moment(dataPatientInfo.patient.dayOfBirth)}\r\n                      disableFuture={true} disableOpenPicker \r\n                      slotProps={{ \r\n                        textField: \r\n                          { \r\n                            inputRef: dateFieldRef,\r\n                            error: true ? dataPatientInfoError.dayOfBirth.isError === true : false,\r\n                            onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                          }\r\n                        }}\r\n                      onChange={(value) => onChangeDOB(value)}\r\n                    />\r\n                  </Box>\r\n                </Tooltip>\r\n              </DemoContainer>\r\n            </ThemeProvider>\r\n          </LocalizationProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.examiningSession.title}</h6>} open={dataPatientInfoError.examiningSession.openTooltip} placement='right'>\r\n              <Autocomplete \r\n                sx={{width: '18%', mt: '7.5px'}}\r\n                options={listExaminingSession} \r\n                noOptionsText={selectedAutoComplete.examiningSession.loading ? 'Đang tải...' : ''}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.examiningSession.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectExaminingSession(e, value)}\r\n                open={selectedAutoComplete.examiningSession.openOption}\r\n                onFocus={() => handleFocus('ExaminingSession')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'ExaminingSession')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Kỳ khám\" \r\n                    inputRef={(input) => input && focusField === 'examiningSession' && input.focus()}\r\n                    error={true ? dataPatientInfoError.examiningSession.isError === true : false} \r\n                    sx={{'& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot': {pl: '6px', pr: '6px'}}}\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      endAdornment: (\r\n                        <>\r\n                          {selectedAutoComplete.examiningSession.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </>\r\n                      ),\r\n                    }} \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.province.title}</h6>} open={dataPatientInfoError.province.openTooltip} placement='left'>\r\n              <Autocomplete \r\n                sx={{width: '20%', mt: 2}}\r\n                options={listProvince} \r\n                filterOptions={filterOptions}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.province.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectProvine(e, value)}\r\n                open={selectedAutoComplete.province.openOption}\r\n                onFocus={() => handleFocus('Province')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Thành phố\"\r\n                    inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                    error={true ? dataPatientInfoError.province.isError === true : false}  \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.district.title}</h6>} open={dataPatientInfoError.district.openTooltip} placement='top'>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listDistrict.list} \r\n                  noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.district.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectDistrict(e, value)}\r\n                  open={selectedAutoComplete.district.openOption}\r\n                  onFocus={() => handleFocus('District')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Quận/huyện\" \r\n                      inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                      error={true ? dataPatientInfoError.district.isError === true : false} \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.ward.title}</h6>} open={dataPatientInfoError.ward.openTooltip}>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listWard.list}\r\n                  noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.ward.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectWard(e, value)}\r\n                  open={selectedAutoComplete.ward.openOption}\r\n                  onFocus={() => handleFocus('Ward')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Phường/Xã\" \r\n                      inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                      error={true ? dataPatientInfoError.ward.isError === true : false}  \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.address.title}</h6>} open={dataPatientInfoError.address.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.address.isError === true : false}\r\n                  label=\"Địa chỉ\" variant=\"outlined\" \r\n                  sx={{width: '36%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.address}\r\n                  onChange={(e) => onChangeAddress(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullNameMother.title}</h6>} open={dataPatientInfoError.fullNameMother.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.fullNameMother.isError === true : false}\r\n                  label=\"Họ tên mẹ\" variant=\"outlined\" \r\n                  sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.fullNameMother}\r\n                  onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                />    \r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneMother.title}</h6>} open={dataPatientInfoError.phoneMother.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.phoneMother.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneMother}\r\n                  onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <TextField \r\n              label=\"Họ tên cha\" variant=\"outlined\" sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n              defaultValue={dataPatientInfo.patient.fullNameFather}\r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n            />\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneFather.title}</h6>} open={dataPatientInfoError.phoneFather.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.phoneFather.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneFather}\r\n                  onChange={(e) => onChangePhoneFather(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.height.title}</h6>} open={dataPatientInfoError.height.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.height.isError === true : false}\r\n                  label='Chiều cao' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.height}\r\n                  onChange={(e) => onChangeHeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.weight.title}</h6>} open={dataPatientInfoError.weight.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.weight.isError === true : false}\r\n                  label='Cân nặng' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(kg)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.weight}\r\n                  onChange={(e) => onChangeWeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.headCircumference.title}</h6>} open={dataPatientInfoError.headCircumference.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.headCircumference.isError === true : false}\r\n                  label='Vòng đầu' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.headCircumference}\r\n                  onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <FormControlLabel sx={{width: '30%', mt: 2}} control={<Checkbox checked={dataPatientInfo.vaccination}/>} \r\n              label=\"Có tham gia tiêm ngừa\"\r\n              onChange={(e) => onChangeVaccination(e.target.checked)}\r\n            />  \r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{justifyContent: 'center'}}>\r\n          <Button variant=\"contained\" onClick={() => handleUpdateMedicalRegister()}>Sửa (F1)</Button>\r\n          <Button variant=\"contained\" color='secondary' onClick={(event, reason) => handleCloseModalInfoPantients(event, reason)}>Đóng (ESC)</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <AlertProcessing openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageInfoPantients","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//info pantients modal\r\nimport ManageInfoPantients from '../ManageInfoPantients/ManageInfoPantients';\r\n//mui theme\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getRegistersByDateNow } from '../../Service/MedicalRegisterService';\r\n\r\nfunction ListPatientsRegister(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n  const [listPantientChipState, setListPantientChipState] = useState(\r\n    [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 }\r\n    ]\r\n  )\r\n  \r\n  const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n  const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n  const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n  const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n  const [selectedPantientInfo, setSelectedPantientInfo] = useState();\r\n  const [openModalInfoPantients, setOpenModalInfoPantients] = useState(false);\r\n  const [isContinueUpdateMedicalRegister, setIsContinueUpdateMedicalRegister] = useState();\r\n\r\n  const renderPatientsStatus = (state) => {\r\n    if(state === 0 || state === 3){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterWaiting' />\r\n        </>\r\n      )\r\n    }\r\n    else if(state === 1){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterExamining' />\r\n        </>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterDone' />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSelectedChip = (chipIndex, chipLabel) => {\r\n    setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n    if(chipIndex === 0){\r\n      const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1) //chờ khám và đang khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n      setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n    }\r\n    else if(chipIndex === 1){\r\n      const listPantientRegisterExamining = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 3) //hẹn khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterExamining);\r\n      setListDataPatientsRegisterState(listPantientRegisterExamining);\r\n    }\r\n    else{\r\n      const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n      setListDataPatientsRegisterState(listPantientRegisterDone);\r\n    }\r\n  };\r\n\r\n  const handleSearchPantient = (value) => {\r\n    const takenValue = value;\r\n    setSearchPatientsQuery(takenValue);\r\n\r\n    if(value === ''){\r\n      setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n    }else{\r\n      setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n    }\r\n  }\r\n\r\n  const searchPatients = (patients, searchTerm) => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return patients.filter(patientObj => {\r\n      const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n      return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n    });\r\n  }\r\n\r\n  const handleSelectedPantientInfo = (patientsRegisterSortItem) => {\r\n    setSelectedPantientInfo(patientsRegisterSortItem);\r\n    setIsContinueUpdateMedicalRegister(true);\r\n    setOpenModalInfoPantients(true);\r\n  }\r\n\r\n  const handleGetRegistersByDateNow = async () => {\r\n    setLoading(true);\r\n    const response = await getRegistersByDateNow();\r\n    if(response !== 400){\r\n      if(response.list.length !== 0){\r\n        setListDataPatientsRegister(response.list);\r\n        if(activeChip.chipOrder === 0){\r\n          const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n          const updatedList = listPantientChipState.map((item, index) => ({\r\n            ...item,\r\n            chipContent: response.listCountState[index]\r\n          }));\r\n          setListPantientChipState(updatedList);\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n          const listPantientRegisterExamining = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 3) //hẹn khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterExamining);\r\n          setListDataPatientsRegisterState(listPantientRegisterExamining);\r\n          const updatedList = listPantientChipState.map((item, index) => ({\r\n            ...item,\r\n            chipContent: response.listCountState[index]\r\n          }));\r\n          setListPantientChipState(updatedList);\r\n        }\r\n        else{\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n          setListDataPatientsRegisterState(listPantientRegisterDone);\r\n          const updatedList = listPantientChipState.map((item, index) => ({\r\n            ...item,\r\n            chipContent: response.listCountState[index]\r\n          }));\r\n          setListPantientChipState(updatedList);\r\n        }\r\n      }\r\n    }\r\n    props.setComponent1Loading(false);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetRegistersByDateNow();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(openModalInfoPantients){\r\n      const handleKeyDown = (event) => {\r\n        if(event.keyCode === 112){\r\n          event.preventDefault()\r\n          setIsContinueUpdateMedicalRegister(true);\r\n          //nhấn F1 để sửa thông tin đăng ký khám\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [openModalInfoPantients, isContinueUpdateMedicalRegister]);\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true){\r\n      handleGetRegistersByDateNow();\r\n      props.setCompleteMedicalRegister(false);\r\n    }\r\n  }, [props.completeMedicalRegister])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{p: 0}}>\r\n        <Typography variant='h6' sx={{color: 'red', mb: 0, fontWeight: 'bolder', fontSize: '1.16rem'}}>\r\n          {loading ? \r\n            <Skeleton /> \r\n          : \r\n            props.currentDoctorExamining.userIdDoctor !== '' ?\r\n              <>\r\n                {`Bác sĩ khám hôm nay: ${props.currentDoctorExamining.userFullName}`} <IconButton onClick={() => props.setOpenSelectedDoctorExaminingModal(true)}> <EditIcon sx={{color: '#2e7d32', fontSize: '30px'}}/></IconButton>\r\n              </>\r\n            :\r\n              <>\r\n                {`Chưa chọn bác sĩ khám hôm nay `} <IconButton onClick={() => props.setOpenSelectedDoctorExaminingModal(true)}> <EditIcon sx={{color: '#2e7d32', fontSize: '30px'}}/></IconButton>\r\n              </>\r\n          }\r\n        </Typography>\r\n          <TableContainer component={Paper} sx={{ height: '548px', borderRadius: '10px', boxShadow: 5, overflowX: 'scroll' }}>\r\n          {loading ? \r\n            <>\r\n              <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                <CircularProgress/>\r\n                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n              </Box>        \r\n            </>\r\n          :\r\n            <>\r\n              <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                  <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                    <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                      onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                  </Badge>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n        \r\n              <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                <TextField sx={{mt: 0.2, mb: 1, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                  variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc SĐT' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                      startAdornment: (\r\n                        <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                      ),\r\n                      endAdornment: (\r\n                        <InputAdornment position='end'>\r\n                          {searchPatientsQuery !== '' ? \r\n                            <CloseIcon sx={{cursor: 'pointer'}} \r\n                              titleAccess='Xóa'\r\n                              onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                            /> \r\n                          : \r\n                            null\r\n                          }\r\n                        </InputAdornment>  \r\n                      )\r\n                  }}>\r\n                </TextField>\r\n              </Box>\r\n\r\n              <Table stickyHeader sx={{ minWidth: 1200 }}>\r\n                <TableHead>\r\n                  <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem', p: '10px'}}>Trạng thái</TableCell>\r\n                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {listDataPatientsRegisterSort.length !== 0 ?\r\n                    <>\r\n                      {listDataPatientsRegisterSort.map((patientsRegisterSortItem, patientsRegisterSortIndex) => (\r\n                        <TableRow hover role=\"checkbox\" key={patientsRegisterSortIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => handleSelectedPantientInfo(patientsRegisterSortItem)}>\r\n                          <TableCell align='center' sx={{width: '90px'}}>{renderPatientsStatus(patientsRegisterSortItem.state)}</TableCell>\r\n                          <TableCell align='left' sx={{width: '20px'}}>{patientsRegisterSortItem.order}</TableCell>\r\n                          <TableCell align='left' sx={{width: '150px'}}>{patientsRegisterSortItem.patient.patientId}</TableCell>\r\n                          <TableCell align='left' sx={{width: '200px'}}>{patientsRegisterSortItem.patient.fullName}</TableCell>\r\n                          <TableCell align='left' sx={{width: '110px'}}>{patientsRegisterSortItem.patient.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                          <TableCell align='left' sx={{width: '110px'}}>{moment(patientsRegisterSortItem.patient.dayOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                          <TableCell align='left' sx={{width: '140px'}}>{patientsRegisterSortItem.patient.phoneMother !== '' ? patientsRegisterSortItem.patient.phoneMother : patientsRegisterSortItem.patient.phoneFather}</TableCell>\r\n                          <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 120}}>\r\n                            <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.patient.fullAddress}</Typography>} >\r\n                              <span>{patientsRegisterSortItem.patient.fullAddress}</span>\r\n                            </Tooltip>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))} \r\n                    </>\r\n                    :\r\n                      null\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n            </>\r\n          }\r\n          </TableContainer>\r\n      </Box>\r\n      \r\n\r\n      <ManageInfoPantients \r\n        openModalInfoPantients={openModalInfoPantients} setOpenModalInfoPantients={setOpenModalInfoPantients}\r\n        selectedPantientInfo={selectedPantientInfo} setSelectedPantientInfo={setSelectedPantientInfo}\r\n        isContinueUpdateMedicalRegister={isContinueUpdateMedicalRegister} setIsContinueUpdateMedicalRegister={setIsContinueUpdateMedicalRegister}\r\n        setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListPatientsRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//modal\r\n// import AlertConfirmModal from '../ManageAlertConfirm/AlertConfirm';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//api\r\nimport { createMedicalRegister, createMedicalBackRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalRegisterService';\r\n\r\nfunction ExaminingSession(props) {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [listExaminingSession, setListExaminingSession] = useState(null);\r\n\r\n    const onChangeRadioSelect = (value) => {\r\n        props.dataPatientsRegister.examinationId = value;\r\n        // if(props.isContinueSelectedExaminingSession === false){\r\n        //     props.setIsContinueSelectedExaminingSession(true);\r\n        // }\r\n    }\r\n\r\n    const handleListMedicalExaminationsGiveRegister = async () =>  {\r\n        setOpenAlertProcessing(true);\r\n        const response = await getListMedicalExaminationsGiveRegister(props.dataPatientsRegister.patient.dayOfBirth);\r\n        setOpenAlertProcessing(false);\r\n        setListExaminingSession(response);\r\n    }\r\n\r\n    const handleMedicalRegister = async () => {\r\n        if(props.dataPatientsRegister.oldDisease === true){\r\n            setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n            setOpenAlertProcessing(false);\r\n            if(response.status === 200){\r\n                toast.success(response.data);\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n                props.handleResetField();\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n        }else{\r\n            setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalRegister(props.dataPatientsRegister);\r\n            setOpenAlertProcessing(false);\r\n\r\n            if(response.status === 200){\r\n                toast.success(response.data);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCloseConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n      };\r\n\r\n    const handleOpenConfirm = () => {\r\n        if(props.dataPatientsRegister.examinationId === ''){\r\n            // setIsConfirmOpen(false);\r\n            toast.error('Bạn chưa chọn kỳ khám', {toastId: 'error1'});\r\n        }\r\n        else{\r\n            //setIsConfirmOpen(true);\r\n            handleMedicalRegister();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.dataPatientsRegister.patient.dayOfBirth !== '' && props.openModalExaminingSession === true){\r\n            handleListMedicalExaminationsGiveRegister();\r\n        }\r\n    }, [props.openModalExaminingSession])\r\n\r\n    useEffect(() => {\r\n        if(props.isContinueSelectedExaminingSession === true){\r\n            //nhấn F2 để hoàn tất đăng ký khám\r\n            handleOpenConfirm();\r\n            props.setIsContinueSelectedExaminingSession(false);\r\n        }\r\n    }, [props.isContinueSelectedExaminingSession])\r\n\r\n    return (\r\n        <>\r\n            {listExaminingSession ? \r\n                <>\r\n                    <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalExaminingSession} disableEscapeKeyDown={true}>\r\n                        <DialogTitle \r\n                            sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'green', textTransform: 'uppercase' }}>\r\n                            {`${props.dataPatientsRegister.patient.fullName}, \r\n                            ${props.dataPatientsRegister.patient.gender === true ? 'Nam' : 'Nữ'}, \r\n                            ${listExaminingSession.monthsOfAge}`}\r\n                        </DialogTitle>\r\n\r\n                        <IconButton onClick={() => [props.setOpenModalExaminingSession(false), props.dataPatientsRegister.examinationId = '']} \r\n                            sx={{position: 'absolute', right: 5, top: 7}}>\r\n                                <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n\r\n                        <DialogContent dividers sx={{pl: '0px', pr: '0px'}}>\r\n                            <Grid container rowSpacing={0}>\r\n                                <Grid item xs={0.5}/>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid black', p: 1, height: '50vh', overflow: 'auto'}}>\r\n                                        <Typography variant='h6' sx={{fontWeight: 'bolder'}}>Lịch sử khám</Typography>\r\n                                        {listExaminingSession.oldExams ?\r\n                                            listExaminingSession.oldExams.map((oldExamItem, oldExamIndex) => (\r\n                                                <Typography key={oldExamIndex} variant='subtitle1'>{oldExamItem}</Typography>\r\n                                            ))\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </Box>  \r\n                                </Grid>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid red', p: 1, height: '50vh'}}>\r\n                                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', color: 'red'}}>Chọn kỳ khám</Typography>\r\n                                            {listExaminingSession.exams ? \r\n                                                <RadioGroup onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                    {listExaminingSession.exams.map((examItem, examIndex) => (\r\n                                                        <FormControlLabel key={examIndex} value={examItem.id} control={<Radio />} label={examItem.name} />\r\n                                                    ))}\r\n                                                </RadioGroup>\r\n                                            :\r\n                                                null\r\n                                            }\r\n                                            <Button variant='contained' sx={{mt: 0.5}} onClick={() => handleOpenConfirm()}>Tiếp tục (F2)</Button> \r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </>\r\n            :\r\n                null\r\n            }\r\n\r\n            {/* <AlertConfirmModal \r\n                openAlertConfirmModal={isConfirmOpen} onCloseAlertConfirmModal={handleCloseConfirm} \r\n                onConfirmAlertConfirmModal={handleMedicalRegister} \r\n                titleConfirm=\"Đăng ký khám cho bệnh nhân?\"\r\n            /> */}\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExaminingSession","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListOldDisease, getVaccinationByPatientId } from '../../Service/MedicalRegisterService';\r\n\r\nfunction OldDisease(props) {\r\n\r\n    const dataPatientsForSearchOldDiseaseDefault = {patientId: '', phone: '', fullName: '', dayOfBirth: ''}\r\n    const dataPatientsForSearchOldDiseaseErrorDefault = {\r\n        patientId: { title: '', isError: false, openTooltip: false, focus: false},\r\n        phone: { title: '', isError: false, openTooltip: false, focus: false },\r\n        fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n        dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    }\r\n    \r\n    const [listFoundOldDisease, setListFoundOldDisease] = useState(null);\r\n    const [dataPatientsForSearchOldDisease, setDataPatientsForSearchOldDisease] = useState(dataPatientsForSearchOldDiseaseDefault);\r\n    const [dataPatientsForSearchOldDiseaseError, setDataPatientsForSearchOldDiseaseError] = useState(dataPatientsForSearchOldDiseaseErrorDefault);\r\n    const [focusField, setFocusField] = useState(null);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n\r\n    const dateFieldRef = useRef(null);\r\n    const formRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n    const tooltipTheme = createTheme({\r\n        components: {\r\n          MuiTooltip: {\r\n            defaultProps: {\r\n              placement: 'bottom',\r\n              arrow: true,\r\n              componentsProps: {\r\n                tooltip: {\r\n                  sx: {\r\n                    bgcolor: '#d32f2f',\r\n                  },\r\n                },\r\n                arrow: {\r\n                  sx: {\r\n                    color: '#d32f2f',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n    });\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key !== 'Enter') \r\n        {\r\n            event.preventDefault();\r\n        }\r\n        else if(event.key === 'Enter'){\r\n            handleEnterPress(event);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (value, fieldName) => {\r\n        if(value === '' || value === 'DD/MM/YYYY'){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(fieldName === 'patientId'){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'patientId'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'dayOfBirth'){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'dayOfBirth'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'phone'){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const onChangePatientId = (value) => {\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 8){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.title = 'Mã bệnh nhân phải từ 8 đến 12 số';\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.patientId = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'patientId'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n    }\r\n\r\n    const onChangeFullName = (value) => {\r\n        if(focusField === 'fullName'){\r\n            setFocusField(null);\r\n        }\r\n\r\n        setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n            prevDataPatientsForSearchOldDisease.fullName = value;\r\n            return {...prevDataPatientsForSearchOldDisease}\r\n        })\r\n\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);      \r\n    }\r\n\r\n    const onChangeDayOfBirth = (value) => {\r\n        if(value){            \r\n            const date = value._d;\r\n            const today = new Date();\r\n            const yearsDifference = today.getFullYear() - date.getFullYear();\r\n            const monthsDifference = today.getMonth() - date.getMonth();\r\n            const daysDifference = today.getDate() - date.getDate();\r\n            const age = today.getFullYear() - date.getFullYear();\r\n\r\n            let totalMonths = yearsDifference * 12 + monthsDifference;\r\n            let totalDays = daysDifference;\r\n\r\n            if (daysDifference < 0) {\r\n                totalMonths -= 1;\r\n                totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n            }\r\n\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n\r\n            if(today < date || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = true;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n              }\r\n              else{\r\n                const formattedDate = moment(date).format('YYYY-MM-DD');\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.dayOfBirth = formattedDate;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangePhone = (value) => {\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 10){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.phone = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        }\r\n    }\r\n\r\n    const handleCloseModalOldDisease = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n          else{\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            setListFoundOldDisease(null);\r\n            setSelectedRowIndex(0);\r\n            props.setOpenModalOldDisease(false);\r\n        }\r\n    }\r\n\r\n    const handleResetField = () => {\r\n        formRef.current.reset();\r\n        const inputs = formRef.current.querySelectorAll('input, textarea');\r\n        inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n        setFocusField(null);\r\n    }\r\n\r\n    const validate = () => {\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        let isValid = true;\r\n\r\n        if(dataPatientsForSearchOldDisease.patientId === '' && dataPatientsForSearchOldDisease.fullName === '' && \r\n            dataPatientsForSearchOldDisease.dayOfBirth === '' && dataPatientsForSearchOldDisease.phone === '')\r\n        {\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.fullName.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.patientId.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.focus = true;\r\n                setFocusField('patientId');\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.dayOfBirth.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                if (dateFieldRef.current) {\r\n                    dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n                }\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.phone.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.phone.focus = true;\r\n                setFocusField('phone');\r\n            }\r\n            isValid = false;\r\n        }\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        return isValid;\r\n    }\r\n\r\n    const handleFindOldDisease = async () => {\r\n        if(validate()){\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListOldDisease(dataPatientsForSearchOldDisease.patientId, dataPatientsForSearchOldDisease.phone, dataPatientsForSearchOldDisease.fullName, dataPatientsForSearchOldDisease.dayOfBirth, '');\r\n            setOpenAlertProcessing(false);\r\n            setListFoundOldDisease(response);\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            handleResetField();\r\n            if(response.length > 0){\r\n                tableRef.current.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleFindOldDisease();\r\n        }\r\n    }\r\n\r\n    const handleTableKeyDown = (event) => {\r\n        if (event.key === 'ArrowDown') {\r\n            setSelectedRowIndex((prevIndex) => (Math.min(prevIndex + 1, listFoundOldDisease.length - 1)));\r\n        } else if (event.key === 'ArrowUp') {\r\n            setSelectedRowIndex((prevIndex) => (Math.max(prevIndex - 1, 0)));\r\n        } else if (event.key === 'Enter' && selectedRowIndex !== null){\r\n            handleApplyDataPatientOldDisease(listFoundOldDisease[selectedRowIndex])\r\n        }\r\n    };\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientId: foundOldDiseaseItem.patientId,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseModalOldDisease();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalOldDisease} onClose={(event, reason) => handleCloseModalOldDisease(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Tìm bệnh cũ</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalOldDisease()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{p: '10px 24px'}}>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around'}} component=\"form\" ref={formRef}>\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.patientId.title}</h6>} open={dataPatientsForSearchOldDiseaseError.patientId.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.patientId.isError === true : false}\r\n                                    label=\"Mã BN\" variant=\"outlined\" size='small'\r\n                                    autoFocus\r\n                                    inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                                    inputProps={{ maxLength: 12 }}\r\n                                    onChange={(e) => onChangePatientId(e.target.value)}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'patientId')}\r\n                                    onKeyDown={handleKeyDown} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.fullName.title}</h6>} open={dataPatientsForSearchOldDiseaseError.fullName.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.fullName.isError === true : false}\r\n                                    label=\"Họ tên\" variant=\"outlined\" size='small'\r\n                                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                                    onKeyDown={(e) => handleEnterPress(e)} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                            <ThemeProvider theme={tooltipTheme}>\r\n                                <DemoContainer components={['DatePicker']}>\r\n                                    <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.dayOfBirth.title}</h6>} open={dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip}>    \r\n                                        <Box sx={{width: 222}}>\r\n                                            <DatePicker label=\"Ngày sinh\" format='DD/MM/YYYY' \r\n                                                disableFuture={true} disableOpenPicker \r\n                                                renderInput={(params) => <TextField {...params} size='small' />}\r\n                                                slotProps={{  \r\n                                                    textField: \r\n                                                    { \r\n                                                        inputRef: dateFieldRef,\r\n                                                        error: true ? dataPatientsForSearchOldDiseaseError.dayOfBirth.isError === true : false, \r\n                                                        size: 'small', \r\n                                                        onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                                        onKeyDown: (e) => handleEnterPress(e)\r\n                                                    }, \r\n                                                }}\r\n                                                onChange={(value) => onChangeDayOfBirth(value)}\r\n                                            />\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                </DemoContainer>\r\n                            </ThemeProvider>      \r\n                        </LocalizationProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.phone.title}</h6>} open={dataPatientsForSearchOldDiseaseError.phone.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                                    inputRef={(input) => input && focusField === 'phone' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.phone.isError === true : false}\r\n                                    label=\"Điện thoại cha/mẹ\" variant=\"outlined\" size='small'\r\n                                    inputProps={{ maxLength: 10 }}\r\n                                    onChange={(e) => onChangePhone(e.target.value)}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'phone')}\r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 1.6}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleFindOldDisease()}>Tìm (Enter)</Button>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        {\r\n                            listFoundOldDisease ? \r\n                                listFoundOldDisease.length !== 0 ? \r\n                                <>\r\n                                    <TableContainer component={Paper} sx={{boxShadow: 4, mt: 1.4}} tabIndex={0} onKeyDown={(event) => handleTableKeyDown(event)} ref={tableRef}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listFoundOldDisease ? \r\n                                                    listFoundOldDisease.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                        <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} \r\n                                                            selected={selectedRowIndex === foundOldDiseaseIndex} >\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.patientId}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                            <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'green'}}>Tìm thấy {listFoundOldDisease.length} bệnh nhân</Typography>\r\n                                </>\r\n                                : \r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'red'}}>Không tìm thấy bệnh nhân</Typography>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Box>  \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDisease","import React, { useState, useEffect, useRef } from 'react';\r\n//ExaminingSessios modal\r\nimport ExaminingSession from '../ManageExaminingSession/ExaminingSession';\r\n//old disease modal\r\nimport OldDisease from '../ManageOldDisease/OldDisease';\r\n// import OldDiseaseForRegister from '../ManageOldDisease/OldDiseaseForRegister';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateField } from '@mui/x-date-pickers/DateField';\r\n//lodash\r\nimport _ from 'lodash';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction BookMedical(props) {\r\n\r\n  const dataPatientsRegisterDefault = {\r\n    examinationId: '',\r\n    oldDisease: false,\r\n    height: '',\r\n    weight: '',\r\n    headCircumference: '',\r\n    reason: '',\r\n    vaccination: false,\r\n    medicalTypeId: '',\r\n    userIdDoctor: '',\r\n    patient: {\r\n      patientId: '',\r\n      identifier: '',\r\n      address: '',\r\n      fullName: '',\r\n      dayOfBirth: '',\r\n      codeWard: '',\r\n      gender: '',\r\n      fullNameMother: '',\r\n      phoneMother: '',\r\n      fullNameFather: '',\r\n      phoneFather: ''\r\n    }\r\n  }\r\n\r\n  const autocompleteValueDefault = { \r\n    dayOfBirth: null, \r\n    gender: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    province: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    district: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    ward: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    medicalType: {\r\n      value: null,\r\n      openOption: false\r\n    },\r\n    vaccination: false \r\n  }\r\n\r\n  const dataPatientsRegisterErrorDefault = { \r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    patientId: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n    medicalType: { title: '', isError: false, openTooltip: false, focus: false },\r\n    reason: { title: '', isError: false, openTooltip: false, focus: false }\r\n  }\r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const listMedicalType = [\r\n    {medicalTypeOrder: 1, medicalTypeName: 'Khám Nhi khoa phát triển', medicalTypeId: 1},\r\n    {medicalTypeOrder: 2, medicalTypeName: 'Khám trẻ nguy cơ cao', medicalTypeId: 2},\r\n  ]\r\n\r\n  const [openModalExaminingSession, setOpenModalExaminingSession] = useState(false);\r\n  const [isContinueSelectedExaminingSession, setIsContinueSelectedExaminingSession] = useState(false);\r\n\r\n  const [openModalOldDisease, setOpenModalOldDisease] = useState(false);\r\n\r\n  // const [openOldDiseaseRegister, setOpenOldDiseaseRegister] = useState(false);\r\n  // const [listOldDiseaseRegister, setListOldDiseaseRegister] = useState([]);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const [dataPatientsRegister, setDataPatientsRegister] = useState(dataPatientsRegisterDefault);\r\n  const [dataPatientsRegisterError, setDataPatientsRegisterError] = useState(dataPatientsRegisterErrorDefault);\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [autocompleteValue, setAutocompleteValue] = useState(autocompleteValueDefault);\r\n\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const formRef = useRef(null);\r\n  const firstFocusRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n  const typingRef = useRef(null);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f', \r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -7],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n        event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n\r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n\r\n      return (\r\n        lowercasedFullName.includes(lowercasedInput) ||\r\n        initials.includes(lowercasedInput)\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.gender.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.province.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Ward'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'MedicalType'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.medicalType.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n      if(fieldName === 'Identifier'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n        _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.dayOfBirth.title = '';\r\n      //     _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n      //   _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PatientId'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.patientId.title = '';\r\n      //     _dataPatientsRegisterError.patientId.openTooltip = false;\r\n      //     _dataPatientsRegisterError.patientId.isError = false;\r\n      //     _dataPatientsRegisterError.patientId.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.phoneMother.title = '';\r\n      //     _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      //     _dataPatientsRegisterError.phoneMother.isError = false;\r\n      //     _dataPatientsRegisterError.phoneFather.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      if(fieldName === 'PhoneFather'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      else if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientsRegisterError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientsRegisterError.identifier.openTooltip = true;\r\n          _dataPatientsRegisterError.identifier.isError = true;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.identifier.title = '';\r\n      _dataPatientsRegisterError.identifier.openTooltip = false;\r\n      _dataPatientsRegisterError.identifier.isError = false;\r\n      _dataPatientsRegisterError.identifier.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangePatientId = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 8){\r\n          _dataPatientsRegisterError.patientId.title = 'Mã BN phải từ 8 đến 12 số';\r\n          _dataPatientsRegisterError.patientId.openTooltip = true;\r\n          _dataPatientsRegisterError.patientId.isError = true;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          if(focusField === 'patientId'){\r\n            setFocusField(null);\r\n          }\r\n          \r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.patientId = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.patientId.title = '';\r\n          _dataPatientsRegisterError.patientId.openTooltip = false;\r\n          _dataPatientsRegisterError.patientId.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    // else{\r\n    //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n    //   _dataPatientsRegisterError.patientId.title = '';\r\n    //   _dataPatientsRegisterError.patientId.openTooltip = false;\r\n    //   _dataPatientsRegisterError.patientId.isError = false;\r\n    //   _dataPatientsRegisterError.patientId.focus = false;\r\n    //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    // }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullName = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      if(dataPatientsRegisterError.fullName.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullName.title = '';\r\n        _dataPatientsRegisterError.fullName.openTooltip = false;\r\n        _dataPatientsRegisterError.fullName.isError = false;\r\n        _dataPatientsRegisterError.fullName.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n\r\n      // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n      //   handleFindOldDisease();\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n\r\n        if(today < takenValue || age > 2 || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientsRegisterError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n        }\r\n\r\n        else{\r\n          if(focusField === 'dayOfBirth'){\r\n            setFocusField(null);\r\n          }\r\n\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n          prevDataPatientsRegister.patient.dayOfBirth = formattedDate\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.dayOfBirth.title = '';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n          //   handleFindOldDisease();\r\n          // }\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.gender = value.genderValue\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.gender.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.gender.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.gender.title = '';\r\n      _dataPatientsRegisterError.gender.openTooltip = false;\r\n      _dataPatientsRegisterError.gender.isError = false;\r\n      _dataPatientsRegisterError.gender.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n    //   handleFindOldDisease();\r\n    // }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.province.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.district.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.province.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.province.title = '';\r\n      _dataPatientsRegisterError.province.openTooltip = false;\r\n      _dataPatientsRegisterError.province.isError = false;\r\n      _dataPatientsRegisterError.province.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.district.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.district.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.district.title = '';\r\n      _dataPatientsRegisterError.district.openTooltip = false;\r\n      _dataPatientsRegisterError.district.isError = false;\r\n      _dataPatientsRegisterError.district.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n    \r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.codeWard = value.code\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.ward.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.ward.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.ward.title = '';\r\n      _dataPatientsRegisterError.ward.openTooltip = false;\r\n      _dataPatientsRegisterError.ward.isError = false;\r\n      _dataPatientsRegisterError.ward.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeFolk = (value) => {\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'address'){\r\n        setFocusField(null);\r\n      }\r\n      \r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.address = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.address.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.address.title = '';\r\n        _dataPatientsRegisterError.address.openTooltip = false;\r\n        _dataPatientsRegisterError.address.isError = false;\r\n        _dataPatientsRegisterError.address.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'fullNameMother'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameMother = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        if(focusField === 'phoneMother'){\r\n          setFocusField(null);\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneMother.isError = true;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneMother = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneMother.title = '';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneMother.isError = false;\r\n      _dataPatientsRegisterError.phoneMother.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    if(focusField === 'fullNameFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameFather = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (e, value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneFather.isError = true;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneFather = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'phoneFather'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneFather.title = '';\r\n      _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneFather.isError = false;\r\n      _dataPatientsRegisterError.phoneFather.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'height'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.height = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.height.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.height.title = '';\r\n        _dataPatientsRegisterError.height.openTooltip = false;\r\n        _dataPatientsRegisterError.height.isError = false;\r\n        _dataPatientsRegisterError.height.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'weight'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.weight = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.weight.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.weight.title = '';\r\n        _dataPatientsRegisterError.weight.openTooltip = false;\r\n        _dataPatientsRegisterError.weight.isError = false;\r\n        _dataPatientsRegisterError.weight.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'headCircumference'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.headCircumference = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.headCircumference.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.headCircumference.title = '';\r\n        _dataPatientsRegisterError.headCircumference.openTooltip = false;\r\n        _dataPatientsRegisterError.headCircumference.isError = false;\r\n        _dataPatientsRegisterError.headCircumference.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onSelectMedicalType = (e, value) => {\r\n    if(focusField === 'medicalType'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.medicalTypeId = value.medicalTypeId\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.medicalType.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.medicalType.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.medicalType.title = '';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = false;\r\n      _dataPatientsRegisterError.medicalType.isError = false;\r\n      _dataPatientsRegisterError.medicalType.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeReason = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.reason = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      // if(dataPatientsRegisterError.reason.isError){\r\n      //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      //   _dataPatientsRegisterError.reason.isError = false;\r\n      //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.vaccination = bool\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.vaccination = bool\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkValidate = () => {\r\n    let isValid = true;\r\n    const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n\r\n    if(dataPatientsRegisterError.identifier.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.identifier.focus = true;\r\n        setFocusField('identifier');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.patientId === ''){\r\n      _dataPatientsRegisterError.patientId.title = 'Bạn chưa nhập mã bệnh nhân';\r\n      _dataPatientsRegisterError.patientId.openTooltip = true;\r\n      _dataPatientsRegisterError.patientId.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.patientId.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullName === ''){\r\n      _dataPatientsRegisterError.fullName.title = 'Bạn chưa nhập họ tên';\r\n      _dataPatientsRegisterError.fullName.openTooltip = true;\r\n      _dataPatientsRegisterError.fullName.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullName.focus = true;\r\n        setFocusField('fullName');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.dayOfBirth === ''){\r\n      _dataPatientsRegisterError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n      _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n      _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.dayOfBirth.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.gender === ''){\r\n      _dataPatientsRegisterError.gender.title = 'Bạn chưa chọn giới tính';\r\n      _dataPatientsRegisterError.gender.openTooltip = true;\r\n      _dataPatientsRegisterError.gender.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.gender.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n      setFocusField('gender');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.province.value === null){\r\n      _dataPatientsRegisterError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n      _dataPatientsRegisterError.province.openTooltip = true;\r\n      _dataPatientsRegisterError.province.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.province.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('province');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.district.value === null){\r\n      _dataPatientsRegisterError.district.title = 'Bạn chưa chọn quận huyện';\r\n      _dataPatientsRegisterError.district.openTooltip = true;\r\n      _dataPatientsRegisterError.district.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.district.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('district');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.ward.value === null){\r\n      _dataPatientsRegisterError.ward.title = 'Bạn chưa chọn phường xã';\r\n      _dataPatientsRegisterError.ward.openTooltip = true;\r\n      _dataPatientsRegisterError.ward.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.ward.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('ward');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.address === ''){\r\n      _dataPatientsRegisterError.address.title = 'Bạn chưa nhập địa chỉ';\r\n      _dataPatientsRegisterError.address.openTooltip = true;\r\n      _dataPatientsRegisterError.address.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.address.focus = true;\r\n        setFocusField('address');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullNameMother === '' && dataPatientsRegister.patient.fullNameFather === ''){\r\n      _dataPatientsRegisterError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n      _dataPatientsRegisterError.fullNameMother.openTooltip = true;\r\n      _dataPatientsRegisterError.fullNameMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullNameMother.focus = true;\r\n        setFocusField('fullNameMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.phoneMother === '' && dataPatientsRegister.patient.phoneFather === ''){\r\n      _dataPatientsRegisterError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n      _dataPatientsRegisterError.phoneMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneMother.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneFather.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneFather.focus = true;\r\n        setFocusField('phoneFather');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.height === ''){\r\n      _dataPatientsRegisterError.height.title = 'Bạn chưa nhập chiều cao';\r\n      _dataPatientsRegisterError.height.openTooltip = true;\r\n      _dataPatientsRegisterError.height.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.height.focus = true;\r\n        setFocusField('height');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.weight === ''){\r\n      _dataPatientsRegisterError.weight.title = 'Bạn chưa nhập cân nặng';\r\n      _dataPatientsRegisterError.weight.openTooltip = true;\r\n      _dataPatientsRegisterError.weight.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.weight.focus = true;\r\n        setFocusField('weight');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.headCircumference === ''){\r\n      _dataPatientsRegisterError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n      _dataPatientsRegisterError.headCircumference.openTooltip = true;\r\n      _dataPatientsRegisterError.headCircumference.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.headCircumference.focus = true;\r\n        setFocusField('headCircumference');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.medicalTypeId === ''){\r\n      _dataPatientsRegisterError.medicalType.title = 'Bạn chưa chọn loại hình khám';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = true;\r\n      _dataPatientsRegisterError.medicalType.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.medicalType.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('medicalType');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    // if(dataPatientsRegister.reason === ''){\r\n    //   _dataPatientsRegisterError.reason.isError = true;\r\n    //   isValid = false;\r\n    // }\r\n\r\n    if(dataPatientsRegister.userIdDoctor === ''){\r\n      if(props.currentDoctorExamining.userIdDoctor === '') {\r\n        toast.error('Bạn chưa chọn bác sĩ khám cho ngày hôm nay!', {toastId: 'error1'});\r\n        isValid = false;\r\n      }\r\n\r\n    else if(props.currentDoctorExamining.userIdDoctor !== ''){\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.userIdDoctor = props.currentDoctorExamining.userIdDoctor\r\n          return prevDataPatientsRegister\r\n        })\r\n      }\r\n    }\r\n\r\n    setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    return isValid;\r\n  }\r\n\r\n  const handleMedicalRegister = () => {\r\n    setTimeout(() => {\r\n      if(checkValidate()){\r\n        setOpenModalExaminingSession(true);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const handleApplyPantientOldDiseaseData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = dataPatientsRegister.patient.identifier;\r\n    document.getElementById('patientId').value = dataPatientsRegister.patient.patientId;\r\n    document.getElementById('patientFullName').value = dataPatientsRegister.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(dataPatientsRegister.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(dataPatientsRegister.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === dataPatientsRegister.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === dataPatientsRegister.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = dataPatientsRegister.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = dataPatientsRegister.patient.address;\r\n    document.getElementById('patientFullNameMother').value = dataPatientsRegister.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = dataPatientsRegister.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = dataPatientsRegister.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = dataPatientsRegister.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('height');\r\n  }\r\n\r\n  const handleResetField = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    setFocusField(null);\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n\r\n    firstFocusRef.current.focus();\r\n  }\r\n\r\n  const handleOpenModalOldDisease = () => {\r\n    handleResetField();\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const response = await getListProvince();\r\n    if(response !== 400){\r\n      setListProvince(response);\r\n    }\r\n  }\r\n\r\n  // const handleFindOldDisease = async () => {\r\n  //   const response = await getListOldDisease('', '', dataPatientsRegister.patient.fullName, dataPatientsRegister.patient.dayOfBirth, dataPatientsRegister.patient.gender);\r\n  //   if(response.length !== 0){\r\n  //     setListOldDiseaseRegister(response);\r\n  //     setOpenOldDiseaseRegister(true);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleGetListProvince();\r\n    firstFocusRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true){\r\n      firstFocusRef.current.focus();\r\n      console.log('vao day');\r\n    }\r\n  }, [props.completeMedicalRegister])\r\n\r\n  useEffect(() => {\r\n    if(dataPatientsRegister.oldDisease === true){\r\n      handleApplyPantientOldDiseaseData();\r\n    }\r\n  }, [dataPatientsRegister.oldDisease])\r\n\r\n  useEffect(() => {\r\n    if(props.onF2Press){\r\n      if(openModalExaminingSession === true && openModalOldDisease === false){\r\n        setIsContinueSelectedExaminingSession(true);\r\n        props.setOnF2Press(false);\r\n      }\r\n      else{\r\n        handleMedicalRegister();\r\n        props.setOnF2Press(false);\r\n      }\r\n    }\r\n    \r\n    if(props.onF4Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF4Press(false);\r\n      }\r\n      else{\r\n        handleResetField();\r\n        props.setOnF4Press(false);\r\n      }\r\n    }\r\n\r\n    if(props.onF8Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF8Press(false);\r\n      }\r\n      else{\r\n        handleOpenModalOldDisease();\r\n        props.setOnF8Press(false);\r\n      }\r\n    }\r\n  }, [props.onF2Press, props.onF4Press, props.onF8Press])\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{'&.MuiContainer-maxWidthLg': {pr: 0}}}>\r\n        <Box sx={{ minHeight: '36.4rem', borderRadius: '20px', boxShadow: 5, pt: 1.2, pb: 1.2, pl: 2.4, pr: 2.4, mt: 1.5}}>\r\n          <Typography variant='h6' sx={{textAlign: 'center', fontWeight: 'bolder', color: 'blue'}}>Thông tin đăng ký khám</Typography> \r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}} component=\"form\" ref={formRef}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.identifier.title}</h6>} open={dataPatientsRegisterError.identifier.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.identifier.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã định danh\" variant=\"outlined\" id='patientIdentifier'\r\n                  inputRef={focusField === 'identifier' ? (input) => input && focusField === 'identifier' && input.focus() : firstFocusRef}\r\n                  onChange={(e) => onChangeIdentifier(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Identifier')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.patientId.title}</h6>} open={dataPatientsRegisterError.patientId.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.patientId.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã BN\" variant=\"outlined\" id='patientId'\r\n                  inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                  onChange={(e) => onChangePatientId(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'PatientId')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullName.title}</h6>} open={dataPatientsRegisterError.fullName.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }} \r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [37, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              > \r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullName.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên\" variant=\"outlined\" id=\"patientFullName\"                   \r\n                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  /> \r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n      \r\n            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n              <ThemeProvider theme={tooltipTheme}>\r\n                <DemoContainer components={['DatePicker']} >\r\n                  <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.dayOfBirth.title}</h6>} open={dataPatientsRegisterError.dayOfBirth.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>    \r\n                    <Box sx={{width: 142, mt: '12px !important'}}>\r\n                      <div style={{width: '100%', }}>\r\n                        <DateField label=\"Ngày sinh\" \r\n                          format='DD/MM/YYYY' value={autocompleteValue.dayOfBirth}\r\n                          disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                          slotProps={{ \r\n                            textField: \r\n                              { \r\n                                inputRef: dateFieldRef,\r\n                                error: true ? dataPatientsRegisterError.dayOfBirth.isError === true : false,\r\n                                onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                sx: {'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } },\r\n                              }\r\n                          }}\r\n                          onChange={(value) => onChangeDOB(value)}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  </Tooltip>\r\n                </DemoContainer>\r\n              </ThemeProvider>      \r\n            </LocalizationProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.gender.title}</h6>} open={dataPatientsRegisterError.gender.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '12%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientGender' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.gender.value}\r\n                    options={listGender} \r\n                    getOptionLabel={(option) => option.genderName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.genderName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectGender(e, value)}\r\n                    open={autocompleteValue.gender.openOption}\r\n                    onFocus={() => handleFocus('Gender')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Giới tính\" \r\n                        inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.gender.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n             \r\n            {/* <TextField label=\"Dân tộc\" variant=\"outlined\" sx={{width: '12%', '&.MuiTextField-root' : {marginTop: '15px'}}}/> */}\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.province.title}</h6>} open={dataPatientsRegisterError.province.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '19.2%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.province.value}\r\n                    options={listProvince} \r\n                    noOptionsText={'Đang tải...'}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectProvine(e, value)}\r\n                    open={autocompleteValue.province.openOption}\r\n                    onFocus={() => handleFocus('Province')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Thành phố\" \r\n                        inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.province.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.district.title}</h6>} open={dataPatientsRegisterError.district.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '24%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.district.value}\r\n                    options={listDistrict.list} \r\n                    noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                    open={autocompleteValue.district.openOption}\r\n                    onFocus={() => handleFocus('District')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.fullName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectDistrict(e, value)}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Quận/Huyện\" \r\n                        inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.district.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <>\r\n                              {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <>\r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.ward.title}</h6>} open={dataPatientsRegisterError.ward.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                  <div style={{width: '23.5%', marginTop: '20px'}}>\r\n                    <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                      value={autocompleteValue.ward.value}\r\n                      options={listWard.list} \r\n                      noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                      filterOptions={filterOptions}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderOption={(props, option) => (\r\n                        <li {...props}>\r\n                          {option.fullName}\r\n                        </li>\r\n                      )}\r\n                      onChange={(e, value) => onSelectWard(e, value)}\r\n                      open={autocompleteValue.ward.openOption}\r\n                      onFocus={() => handleFocus('Ward')}\r\n                      onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} \r\n                          label=\"Phường/Xã\" \r\n                          inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                          error={true ? dataPatientsRegisterError.ward.isError === true : false} \r\n                          sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                              <>\r\n                                {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                              </>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      disableClearable // Bỏ icon xóa\r\n                      popupIcon={null} // Bỏ icon dropdown\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.address.title}</h6>} open={dataPatientsRegisterError.address.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.address.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Địa chỉ\" variant=\"outlined\" id='patientAddress'\r\n                    inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                    onChange={(e) => onChangeAddress(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullNameMother.title}</h6>} open={dataPatientsRegisterError.fullNameMother.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullNameMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên mẹ\" variant=\"outlined\" id='patientFullNameMother'\r\n                    inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                    autoFocus={dataPatientsRegisterError.fullNameMother.focus}\r\n                    onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneMother.title}</h6>} open={dataPatientsRegisterError.phoneMother.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.phoneMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Điện thoại\" variant=\"outlined\" id='patientPhoneMother' \r\n                    inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                    onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n\r\n            <TextField label=\"Họ tên cha\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n              variant=\"outlined\" id='patientFullNameFather' \r\n              sx={{width: '30.4%', '&.MuiTextField-root' : {marginTop: '20px'}}} \r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n              inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n              InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n            />\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneFather.title}</h6>} open={dataPatientsRegisterError.phoneFather.openTooltip}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField label=\"Điện thoại\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                    variant=\"outlined\" id='patientPhoneFather'\r\n                    onChange={(e) => onChangePhoneFather(e, e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneFather')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.height.title}</h6>} open={dataPatientsRegisterError.height.openTooltip} placement='left' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Chiều cao bé\" variant=\"outlined\" id='patientHeight' error={true ? dataPatientsRegisterError.height.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.weight.title}</h6>} open={dataPatientsRegisterError.weight.openTooltip} PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Cân nặng bé\" variant=\"outlined\" id='patientWeight' error={true ? dataPatientsRegisterError.weight.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(kg)</InputAdornment>}}\r\n                    onChange={(e) => onChangeWeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>  \r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.headCircumference.title}</h6>} open={dataPatientsRegisterError.headCircumference.openTooltip} placement='top-start' PopperProps={{sx: { zIndex: 2 } }}\r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [70, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              >\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Vòng đầu bé\" variant=\"outlined\" id='patientHeadCircumference' error={true ? dataPatientsRegisterError.headCircumference.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.medicalType.title}</h6>} open={dataPatientsRegisterError.medicalType.openTooltip} placement='bottom' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30.5%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientMedicalType' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.medicalType.value}\r\n                    options={listMedicalType} \r\n                    getOptionLabel={(option) => option.medicalTypeName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.medicalTypeName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectMedicalType(e, value)}\r\n                    open={autocompleteValue.medicalType.openOption}\r\n                    onFocus={() => handleFocus('MedicalType')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'MedicalType')}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Loại hình khám\" \r\n                        inputRef={(input) => input && focusField === 'medicalType' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.medicalType.isError === true : false} \r\n                        sx={{\r\n                          '& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } ,\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.Mui-disabled.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'},\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'}\r\n                        }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.reason.title}</h6>} open={dataPatientsRegisterError.reason.openTooltip} >\r\n                <div style={{width: '100%' }}>\r\n                  <TextField fullWidth label=\"Lý do khám\" multiline rows={3} variant=\"outlined\" id='patientReason' error={true ? dataPatientsRegisterError.reason.isError === true : false}\r\n                    sx={{'&.MuiTextField-root' : {marginTop: '20px'}}} \r\n                    onChange={(e) => onChangeReason(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <FormControlLabel control={<Checkbox checked={autocompleteValue.vaccination}/>} sx={{width: '100%'}}\r\n              label=\"Bệnh nhân có tham gia tiêm ngừa\" onChange={(e) => onChangeVaccination(e.target.checked)}/>  \r\n\r\n            <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n              <Button variant=\"contained\" color=\"primary\" sx={{mr: 1}} onClick={() => handleMedicalRegister()}>Đăng ký (f2)</Button>\r\n              <Button variant=\"contained\" color=\"warning\" onClick={() => handleResetField()}>Làm mới (f4)</Button>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => handleOpenModalOldDisease()}>Bệnh cũ (f8)</Button>\r\n            </Box>\r\n          </Box>         \r\n        </Box>\r\n      </Container>\r\n\r\n      <ExaminingSession \r\n        openModalExaminingSession={openModalExaminingSession} setOpenModalExaminingSession={setOpenModalExaminingSession} \r\n        handleResetField={handleResetField} setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        isContinueSelectedExaminingSession={isContinueSelectedExaminingSession} setIsContinueSelectedExaminingSession={setIsContinueSelectedExaminingSession}\r\n        dataPatientsRegister={dataPatientsRegister} \r\n      />\r\n\r\n      <OldDisease \r\n        openModalOldDisease={openModalOldDisease} setOpenModalOldDisease={setOpenModalOldDisease}\r\n        dataPatientsRegister={dataPatientsRegister} setDataPatientsRegister={setDataPatientsRegister}\r\n      />\r\n\r\n      {/* <OldDiseaseForRegister\r\n        openOldDiseaseRegister={openOldDiseaseRegister} setOpenOldDiseaseRegister={setOpenOldDiseaseRegister}\r\n        setDataPatientsRegister={setDataPatientsRegister}\r\n        listOldDiseaseRegister={listOldDiseaseRegister} setListOldDiseaseRegister={setListOldDiseaseRegister}\r\n      /> */}\r\n\r\n      <AlertProcessing\r\n        openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookMedical","import React, { useState, useContext, useEffect } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//modal\r\nimport SelectedDoctorExamining from '../ManageSelectedDoctorExamining/SelectedDoctorExamining';\r\n//components\r\nimport ListPatientsRegister from './ListPatientsRegister';\r\nimport BookMedical from './BookMedical';\r\n//api\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalRegisterService';\r\n\r\nfunction MainMedicalRegister() {\r\n\r\n  const [component1Loading, setComponent1Loading] = useState(true);\r\n\r\n  const currentDoctorExaminingDefault = {userFullName: '', userIdDoctor: ''};\r\n\r\n  const [completeMedicalRegister, setCompleteMedicalRegister] = useState(false);\r\n\r\n  const [handleResetField, setHandleResetField] = useState(false); //F2\r\n  const [handleOpenModalExaminingSession, setHandleOpenModalExaminingSession] = useState(false); //F4\r\n  const [handleOpenModalOldDisease, setHandleOpenModalOldDisease] = useState(false); //F8\r\n\r\n  const [currentDoctorExamining, setCurrentDoctorExamining] = useState();\r\n  const [openSelectedDoctorExaminingModal, setOpenSelectedDoctorExaminingModal] = useState(false);\r\n\r\n  const handleF2Press = () => {\r\n    setHandleOpenModalExaminingSession(true);\r\n  }\r\n\r\n  const handleF4Press = () => {\r\n    setHandleResetField(true);\r\n  }\r\n\r\n  const handleF8Press = () => {\r\n    setHandleOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetCurrentDoctorExamining = async () => {\r\n    const response = await getCurrentDoctorExamining();\r\n    if(response.status === 200){\r\n      setCurrentDoctorExamining( {userIdDoctor: response.data.userIdDoctor, userFullName: response.data.userFullName} );\r\n    }\r\n    else{\r\n      setCurrentDoctorExamining(currentDoctorExaminingDefault);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetCurrentDoctorExamining();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if(event.keyCode === 113){\r\n        event.preventDefault()\r\n        //nhấn F2 để đăng ký khám\r\n        handleF2Press();\r\n      }\r\n      else if(event.keyCode === 115){\r\n        event.preventDefault()\r\n        //nhấn F4 để reset các input field \r\n        handleF4Press();\r\n      }\r\n      else if(event.keyCode === 119){\r\n        event.preventDefault()\r\n        //nhấn F8 để tìm bệnh cũ\r\n        handleF8Press();\r\n      }\r\n      else{\r\n\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 11}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                <Grid container spacing={0} sx={{marginLeft: 0}}>\r\n                  {currentDoctorExamining ? \r\n                    <>\r\n                      <Grid item xs={5}>  \r\n                        <ListPatientsRegister \r\n                          completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                          currentDoctorExamining={currentDoctorExamining}\r\n                          setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n                          component1Loading={component1Loading} setComponent1Loading={setComponent1Loading}\r\n                        />\r\n                      </Grid>\r\n            \r\n                      <Grid item xs={7} >\r\n                        {component1Loading ?\r\n                          <div style={{marginTop: '20px', marginLeft: '18px'}}>\r\n                            <Skeleton variant='rectangular' width=\"100%\" height={576} />\r\n                          </div>\r\n                          :\r\n                          <BookMedical \r\n                            onF2Press={handleOpenModalExaminingSession} setOnF2Press={setHandleOpenModalExaminingSession}\r\n                            onF4Press={handleResetField} setOnF4Press={setHandleResetField}\r\n                            onF8Press={handleOpenModalOldDisease} setOnF8Press={setHandleOpenModalOldDisease}\r\n                            completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                            currentDoctorExamining={currentDoctorExamining}\r\n                          />\r\n                        }\r\n                      </Grid>\r\n                    </>\r\n                  :\r\n                      null\r\n                  }\r\n                </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n         <SelectedDoctorExamining \r\n          openSelectedDoctorExaminingModal={openSelectedDoctorExaminingModal} setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n          currentDoctorExamining={currentDoctorExamining} setCurrentDoctorExamining={setCurrentDoctorExamining}\r\n         />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainMedicalRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport _ from 'lodash'\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DialogActions } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//other\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n//css\r\nimport './SCSS/CompleteExamining.scss';\r\n//api\r\nimport { createAddPredecessor, createAddMedicalBook, getAppointmentDate } from '../../Service/MedicalRegisterService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CompleteExamining(props) {\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState();\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n\r\n    const typingRef = useRef(null);\r\n    const textareaRef = useRef(null);\r\n    const dateFieldRef = useRef(null);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleCloseModalCompleteExamining = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n          return;\r\n        }\r\n        else{\r\n            props.setOpenModalCompleteExamining(false);\r\n        }\r\n      }\r\n\r\n    const onChangeExaminingConclusion = (value) => {\r\n        typingRef.current = setTimeout(() => {\r\n            setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                prevMainDataExaminingForConclusion.conclusion = value;\r\n                return {...prevMainDataExaminingForConclusion}\r\n            })\r\n        }, 300)\r\n    }\r\n\r\n    const onChangeAppointmentDate = (value) => {\r\n        if(value){\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n            typingRef.current = setTimeout(() => {\r\n                const takenValue = value._d;\r\n                const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n                if(formattedDate !== 'Invalid date'){\r\n                    setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                        prevMainDataExaminingForConclusion.appointmentDate = formattedDate;\r\n                        return {...prevMainDataExaminingForConclusion}\r\n                    })\r\n                }\r\n            }, 200)   \r\n        }\r\n    }\r\n\r\n    const handleSetDataCompleteExamining = async () => {\r\n        const editDataExaminingForConclusion = _.clone(props.dataExaminingForConclusion);\r\n\r\n        editDataExaminingForConclusion.categories = editDataExaminingForConclusion.categories.map(categoriesItem => ({\r\n            ...categoriesItem,\r\n            // Lọc các categoryContents để giữ lại những phần tử có categoryContentQuestions không rỗng\r\n            categoryContents: categoriesItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length > 0)\r\n\r\n            // Loại bỏ các categories nếu tất cả categoryContents của nó đều bị loại bỏ\r\n        })).filter(categoriesItem => categoriesItem.categoryContents.length > 0);\r\n\r\n        if(editDataExaminingForConclusion.categories.length !== 0){\r\n            setOpenAlertProcessing(true);\r\n            const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n            if(responseAppointmentDate.status === 200){\r\n                editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n                editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n                editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n            }else{\r\n                toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n            }\r\n\r\n            setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n            setOpenAlertProcessing(false);\r\n            textareaRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleAddMedicalBook = async () => {\r\n        if(checkValidate()){\r\n            setOpenAlertProcessing(true);\r\n            if(mainDataExaminingForConclusion.categories.some(categoriesItem => categoriesItem.isPredecessor === true)){\r\n                const categoryPres = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isPredecessor === true)\r\n                const dataPredecessor = { patientId: mainDataExaminingForConclusion.patientId, categoryPres: categoryPres }\r\n                await createAddPredecessor(dataPredecessor);\r\n            }\r\n            const categoriesHealthRecordExamining = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isHealthRecord === true)\r\n            mainDataExaminingForConclusion.categories = categoriesHealthRecordExamining\r\n            const responseAddMedicalBook = await createAddMedicalBook(mainDataExaminingForConclusion);\r\n            if(responseAddMedicalBook.status === 200){\r\n                toast.success(responseAddMedicalBook.data, {toastId: 'success3'});\r\n                props.handleCompleteExaminingForPantient();\r\n                setMainDataExaminingForConclusion();\r\n                props.setOpenModalCompleteExamining(false);\r\n            }\r\n            else{\r\n                toast.error(responseAddMedicalBook.data, {toastId: 'error1'});\r\n            }\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    \r\n    const checkValidate = () => {\r\n        let isValid = true;\r\n        if(mainDataExaminingForConclusion.conclusion === null){\r\n            textareaRef.current.focus();\r\n            toast.error('Bạn chưa nhập kết luận khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === 'Invalid date'){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Ngày tái khám không hợp lệ', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === ''){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Bạn chưa chọn ngày tái khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalCompleteExamining){\r\n            handleSetDataCompleteExamining();\r\n        }\r\n    }, [props.openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalCompleteExamining} onClose={(event, reason) => handleCloseModalCompleteExamining(event, reason)}>\r\n                <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Tóm tắt quá trình khám</DialogTitle>\r\n                <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                    <Box sx={{pl: 6, pr: 6}}>\r\n                        <List sx={{p: 0}}>\r\n                            <Box>\r\n                                {mainDataExaminingForConclusion ? \r\n                                    mainDataExaminingForConclusion.categories.length !== 0 ? \r\n                                        <div className='category-complete-examining'>\r\n                                            {mainDataExaminingForConclusion.categories.map((categoriesItem, categoriesIndex) => (\r\n                                                <div key={`categoriesItem ${categoriesIndex}`}>\r\n                                                    <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                        {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                            <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                                \r\n                                                                {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                    <div key={`questionItem ${questionIndex}`}>\r\n                                                                        <Grid container rowSpacing={0}>\r\n                                                                            {questionIndex === 0 ?\r\n                                                                                <>\r\n                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                    </Grid> \r\n\r\n                                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                        <>\r\n                                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                            </Grid>\r\n                                                                        \r\n                                                                                            <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                        </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    }   \r\n                                                                                </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n                                                                \r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                                classes={{ root: classes.root }}\r\n                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                            />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={5.5} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                :   \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={8} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                }                                                                                                                                                                          \r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    :\r\n                                        <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không có nội dung nào được khám.</Typography>\r\n                                :\r\n                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không có nội dung nào được khám.</Typography>\r\n                                }\r\n                            </Box>\r\n                        </List>\r\n                    </Box>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    {mainDataExaminingForConclusion ? \r\n                        mainDataExaminingForConclusion.categories.length !== 0 ?\r\n                            <div style={{width: '100%', padding: '8px 50px 8px 50px'}}>\r\n                                <TextareaAutosize placeholder='Kết luận của bác sĩ' style={{width: '100%', padding: '15px', fontSize: '17px'}} onChange={(e) => onChangeExaminingConclusion(e.target.value)} ref={textareaRef} />\r\n                            \r\n                                    {mainDataExaminingForConclusion.appointmentDate ? \r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', mb: 2}}>\r\n                                            <Typography variant='h6' sx={{mt: 'auto', mb: 'auto', mr: 2}}>Kỳ khám tiếp theo: <span style={{fontWeight: 'bolder', color: '#ff1744'}}>{mainDataExaminingForConclusion.nextExamName}</span></Typography>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                                <DemoContainer components={['DatePicker']}>  \r\n                                                    <DatePicker label=\"Ngày khám dự kiến\" \r\n                                                        format='DD/MM/YYYY' defaultValue={moment(mainDataExaminingForConclusion.appointmentDate)}\r\n                                                        onChange={(value) => onChangeAppointmentDate(value)}\r\n                                                        slotProps={{ \r\n                                                            textField: { inputRef: dateFieldRef, }\r\n                                                        }}\r\n                                                    />\r\n                                                </DemoContainer>\r\n                                            </LocalizationProvider>\r\n                                        </Box>\r\n                                    </>\r\n                                    :\r\n                                        null\r\n                                    }\r\n                        \r\n                                <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                    <Stack spacing={1} direction=\"row\">\r\n                                        <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' onClick={() => handleAddMedicalBook()}\r\n                                            >Lưu (F4)</Button>\r\n                                        <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' color={'error'}\r\n                                            onClick={() => handleCloseModalCompleteExamining()}>Đóng (ESC)</Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </div>   \r\n                        :\r\n                            null\r\n                    :\r\n                        null                \r\n                    }             \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//scss\r\nimport './SCSS/PreviewLastExamining.scss'; \r\n//api\r\nimport { getMedicalBook } from '../../Service/MedicalRegisterService';\r\n//moment\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi'; \r\nmoment.locale('vi');\r\n\r\nfunction PreviewLastExamining(props) {\r\n    const previewDataExaminingDefault = {\r\n        categoryPres: [],\r\n        healthRecords: { examinationName: '', timeUpdateState: '', conclusion: '', medicakBook: [] },\r\n        nutritionals: [],\r\n        vaccinationBook: [] \r\n    }\r\n\r\n    const [previewDataExamining, setPreviewDataExamining] = useState(previewDataExaminingDefault);\r\n    const [fullDataPredecessor, setFullDataPredecessor] = useState();\r\n    const [fullDataHealthRecord, setFullDataHealthRecord] = useState();\r\n    \r\n    const [loadingMedicalBook, setLoadingMedicalBook] = useState(false);\r\n\r\n    const [openCollapsePredecessorItem, setOpenCollapsePredecessorItem] = useState([]);\r\n    const [openCollapseMedicakBookItem, setOpenCollapseMedicakBookItem] = useState([]);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpenPredecessorItem = (predecessorIndex) => {\r\n        setOpenCollapsePredecessorItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[predecessorIndex] = !newOpen[predecessorIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleOpenMedicakBookItem = (medicakBookIndex) => {\r\n        setOpenCollapseMedicakBookItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[medicakBookIndex] = !newOpen[medicakBookIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handeOnChangePagePredecessor = (e, page, indexPredecessor) => {\r\n        const _previewDataExamining = {...previewDataExamining}\r\n        _previewDataExamining.categoryPres[indexPredecessor].categoryContents = fullDataPredecessor[indexPredecessor].categoryContents[page - 1];\r\n        _previewDataExamining.categoryPres[indexPredecessor].currentContent = page\r\n        setPreviewDataExamining(_previewDataExamining)\r\n    }\r\n\r\n    const handeOnChangePageHealthRecords = (e, page, indexMedicakbook) => {\r\n        const _previewDataExamining = {...previewDataExamining}\r\n        _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].categoryContents = fullDataHealthRecord[indexMedicakbook].categoryContents[page - 1];\r\n        _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].currentContent = page\r\n        setPreviewDataExamining(_previewDataExamining)\r\n    }\r\n\r\n    const handleEditPrevDataExamining = async () => {\r\n        setLoadingMedicalBook(true);\r\n\r\n        const responseMedicalBook = await getMedicalBook(props.prevDataExamining.healthRecords[0].medicalBookId);\r\n\r\n        //lấy phần tử thứ 0 của câu trả lời loại tiền căn\r\n        const categoryPresUpdatePagination = props.prevDataExamining.categoryPres.map((categoryPresItem) => ({...categoryPresItem, categoryContents: categoryPresItem.categoryContents[0], contentLength: categoryPresItem.categoryContents.length, currentContent: 1})) \r\n        //lấy phần tử thứ 0 của câu trả lời loại sổ khám bệnh\r\n        const healthRecordUpdatePagination = responseMedicalBook.medicakBook.categories.map((categoriesHealthRecordItem) => ({...categoriesHealthRecordItem, categoryContents: categoriesHealthRecordItem.categoryContents[0], contentLength: categoriesHealthRecordItem.categoryContents.length, currentContent: 1})) \r\n\r\n        //set full data tiền căn rồi set vào fullDataPredecessor để quản lý với kiểu pagination\r\n        setFullDataPredecessor(props.prevDataExamining.categoryPres.map((categoryPresItem) => ({...categoryPresItem, contentLength: categoryPresItem.categoryContents.length, currentContent: 1})))\r\n        //set full data sổ khám bệnh rồi set vào fullDataHealthRecord để lặp với kiểu pagination\r\n        setFullDataHealthRecord(responseMedicalBook.medicakBook.categories.map((categoriesHealthRecordItem) => ({...categoriesHealthRecordItem, contentLength: categoriesHealthRecordItem.categoryContents.length, currentContent: 1})));\r\n\r\n        const healthRecordsUpdate = {\r\n            ...props.prevDataExamining.healthRecords[0],\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n            nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n            medicakBook: healthRecordUpdatePagination\r\n        }\r\n        \r\n        setPreviewDataExamining(\r\n            {\r\n                categoryPres: categoryPresUpdatePagination,\r\n                healthRecords: healthRecordsUpdate,\r\n                medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                nutritionals: props.prevDataExamining.nutritionals,\r\n                vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n            }\r\n        )\r\n        setLoadingMedicalBook(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.prevDataExamining){\r\n            handleEditPrevDataExamining();\r\n        }\r\n    }, [props.prevDataExamining])\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{height: '100%', position: 'relative'}}>\r\n                {loadingMedicalBook ? \r\n                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                        <CircularProgress />\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh gần nhất, hãy chờ một chút...</Typography>\r\n                    </Box>\r\n                :\r\n                    <>\r\n                        <div className='preview-last-examining-contents' >\r\n\r\n                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem'}}>\r\n                                Thông tin tóm tắt <span style={{color: 'red'}}>{previewDataExamining.healthRecords.examinationName}</span>\r\n                            </Typography>\r\n\r\n                            <List sx={{p: 0}}>\r\n                                {previewDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                    <div key={`predecessorItem ${predecessorIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenPredecessorItem(predecessorIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapsePredecessorItem[predecessorIndex]} timeout=\"auto\" unmountOnExit>\r\n\r\n                                            <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', border: '2px solid #00bcd4', borderRadius: '20px' }}>\r\n                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: predecessorItem.categoryContents.categoryContentTitle ? 0 : 2 }}>{predecessorItem.categoryContents.categoryContentTitle}</Typography>\r\n                                                \r\n                                                <Box sx={{mb: 2}}>\r\n                                                    {predecessorItem.categoryContents.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                        <Box key={`questionItem ${questionIndex}`} >\r\n                                                            <Grid container rowSpacing={0} >\r\n                                                                {questionIndex === 0 ?\r\n                                                                    <>\r\n                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItem.categoryContents.categoryContentName}</Typography>\r\n                                                                        </Grid> \r\n\r\n                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                            <>\r\n                                                                                <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                    <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{predecessorItem.categoryContents.categoryContentCheck}</Typography>\r\n                                                                                </Grid>\r\n                                                                                            \r\n                                                                                <Grid item xs={6.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{predecessorItem.categoryContents.categoryContentText}</Typography>\r\n                                                                                </Grid>\r\n                                                                            </>\r\n                                                                        : \r\n                                                                            <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItem.categoryContents.categoryContentText}</Typography>\r\n                                                                            </Grid>\r\n                                                                        }   \r\n                                                                    </>\r\n                                                                :\r\n                                                                    null\r\n                                                                }\r\n                                                                            \r\n                                                                <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                        <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                    </Grid>\r\n                                                                                    \r\n                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                        <>\r\n                                                                            <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                            </Grid>\r\n\r\n                                                                            <Grid item xs={6.5} >\r\n                                                                                <div className='note-for-answer'>\r\n                                                                                    <div className='suggest-note'>                                                                          \r\n                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </Grid>\r\n                                                                        </>\r\n                                                                    :   \r\n                                                                        <>\r\n                                                                            <Grid item xs={8} >\r\n                                                                                <div className='note-for-answer'>\r\n                                                                                    <div className='suggest-note'>                                                                          \r\n                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </Grid>\r\n                                                                        </>\r\n                                                                    }  \r\n                                                                </Box>\r\n                                                            </Grid>\r\n                                                        </Box>\r\n                                                    ))} \r\n\r\n                                                    {predecessorItem.contentLength > 1 ? \r\n                                                        <>\r\n                                                            <div className='pagination-table-preview-last-examining'>\r\n                                                                <Pagination count={predecessorItem.contentLength} page={predecessorItem.currentContent} color=\"error\" sx={{m: 'auto'}} onChange={(e, page) => handeOnChangePagePredecessor(e, page, predecessorIndex)}/>\r\n                                                            </div>                                 \r\n                                                        </>\r\n                                                    :\r\n                                                        null\r\n                                                    }\r\n                                                </Box>\r\n\r\n                                            </div>\r\n\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                {previewDataExamining.healthRecords.medicakBook.map((medicakBookItems, medicakBookIndex) => (\r\n                                    <div key={`medicakBookItems ${medicakBookIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenMedicakBookItem(medicakBookIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={medicakBookItems.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapseMedicakBookItem[medicakBookIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', border: '2px solid #00bcd4', borderRadius: '20px' }}>\r\n                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: medicakBookItems.categoryContents.categoryContentTitle ? 0 : 2 }}>{medicakBookItems.categoryContents.categoryContentTitle}</Typography>\r\n                                                \r\n                                                <Box sx={{mb: 2}}>\r\n                                                    {medicakBookItems.categoryContents.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                        <Box key={`questionItem ${questionIndex}`} >\r\n                                                            <Grid container rowSpacing={0} >\r\n                                                                {questionIndex === 0 ?\r\n                                                                    <>\r\n                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookItems.categoryContents.categoryContentName}</Typography>\r\n                                                                        </Grid> \r\n\r\n                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                            <>\r\n                                                                                <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                    <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{medicakBookItems.categoryContents.categoryContentCheck}</Typography>\r\n                                                                                </Grid>\r\n                                                                                            \r\n                                                                                <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{medicakBookItems.categoryContents.categoryContentText}</Typography>\r\n                                                                                </Grid>\r\n                                                                            </>\r\n                                                                        : \r\n                                                                            <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookItems.categoryContents.categoryContentText}</Typography>\r\n                                                                            </Grid>\r\n                                                                        }   \r\n                                                                    </>\r\n                                                                :\r\n                                                                    null\r\n                                                                }\r\n                                                                            \r\n                                                                <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                        <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                    </Grid>\r\n                                                                                    \r\n                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                        <>\r\n                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                            </Grid>\r\n\r\n                                                                            <Grid item xs={5.5} >\r\n                                                                                <div className='note-for-answer'>\r\n                                                                                    <div className='suggest-note'>                                                                          \r\n                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </Grid>\r\n                                                                        </>\r\n                                                                    :   \r\n                                                                        <>\r\n                                                                            <Grid item xs={8} >\r\n                                                                                <div className='note-for-answer'>\r\n                                                                                    <div className='suggest-note'>                                                                          \r\n                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </Grid>\r\n                                                                        </>\r\n                                                                    }  \r\n                                                                </Box>\r\n                                                            </Grid>\r\n                                                        </Box>\r\n                                                    ))} \r\n\r\n                                                    {medicakBookItems.contentLength > 1 ? \r\n                                                        <>\r\n                                                            <div className='pagination-table-preview-last-examining'>\r\n                                                                <Pagination count={medicakBookItems.contentLength} page={medicakBookItems.currentContent} color=\"error\" sx={{m: 'auto'}} onChange={(e, page) => handeOnChangePageHealthRecords(e, page, medicakBookIndex)}/>\r\n                                                            </div>                                 \r\n                                                        </>\r\n                                                    :\r\n                                                        null\r\n                                                    }\r\n                                                </Box>\r\n                                                \r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n                            </List>\r\n\r\n                            <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận: ${previewDataExamining.healthRecords.conclusion}`}</Typography>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='time-examining' style={{marginLeft: '16px', marginTop: '4px', width: '99%'}}>\r\n                            <Typography variant='subtitle1' sx={{color: '#009688', fontWeight: 'bolder', fontSize: '1.08rem'}}>{`${previewDataExamining.healthRecords.doctorFullName}, ${moment(previewDataExamining.healthRecords.timeUpdateState).format('LLLL')}`}</Typography>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Box>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default PreviewLastExamining","export default __webpack_public_path__ + \"static/media/headCircumferenceIcon.fac4615c.jpg\";","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport CompleteExamining from '../ManageCompleteExamining/CompleteExamining';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//components\r\nimport PreviewLastExamining from './PreviewLastExamining';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { GiWeightScale } from \"react-icons/gi\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport headCircumferenceIcon from '../../assets/image/headCircumferenceIcon.jpg';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//moment\r\nimport moment from 'moment';\r\n//scss\r\nimport './SCSS/DoctorExamining.scss';\r\n//api\r\nimport { \r\n    getMedicalDetailPatient,\r\n    getRegistersByDateNow, getMedicalBook,\r\n    updateMedicalState\r\n} from '../../Service/MedicalRegisterService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainDoctorExamining() {\r\n    const dataPantientsReadyExaminingDefault = {\r\n        stt: '',\r\n        id: '',\r\n        patientsId: '',\r\n        patientsName: '',\r\n        patientsDOB: '',\r\n        patientsMonthsOld: '',\r\n        patientsGender: '',\r\n        patientsHeight: '',\r\n        patientsWeight: '',\r\n        patientsHeadCircumference: '',\r\n        patientsPhone: '',\r\n        patientsAddress: ''\r\n    }\r\n\r\n    //state thông tin bệnh nhân ban đầu \r\n    const [dataPantientsReadyExamining, setDataPantientsReadyExamining] = useState(dataPantientsReadyExaminingDefault);\r\n\r\n    //state các category gồm tiêu đề nội dung khám và câu hỏi khám ban đầu\r\n    const [mainDataExamining, setMainDataExamining] = useState([]);\r\n\r\n    //state lưu tạm data các kỳ khám \r\n    const [prevDataExamining, setPrevDataExamining] = useState();\r\n\r\n    //state đóng mở cây thư mục khám của sổ khám bệnh\r\n    const [openCollapseHealthRecords, setOpenCollapseHealthRecords] = useState(false);\r\n\r\n    //state đóng mở chi tiết nội dung của sổ khám bệnh\r\n    const [openCollapseHealthRecordsItem, setOpenCollapseHealthRecordsItem] = useState([]);\r\n\r\n    //state chọn danh mục khám ban đầu\r\n    const [categorySelectedExamining, setCategorySelectedExamining] = useState({});\r\n\r\n    //state chọn danh mục bao gồm nội dung bên trong ban đầu\r\n    const [contentCategorySelectedExamining, setContentCategorySelectedExamining] = useState([]);\r\n\r\n    //state lưu tạm nội dung chi tiết của sổ khám bệnh\r\n    const [healthRecordsContents, setHealthRecordsContents] = useState([]);\r\n    const [currentHealthRecordExamining, setCurrentHealthRecordExamining] = useState();\r\n\r\n    //state vị trí nội dung hiện tại\r\n    const [currentContentExamining, setCurrentContentExamining] = useState(1);\r\n\r\n    //state các câu hỏi được bác sĩ khám tích hoặc gõ vào\r\n    const [dataExaminingForConclusion , setDataExaminingForConclusion ] = useState({});\r\n\r\n    //state quản lý modal kết thúc khám\r\n    const [openModalCompleteExamining, setOpenModalCompleteExamining] = useState(false);\r\n\r\n    const [loadingPrevDataExamining, setLoadingPrevDataExamining] = useState(false);\r\n    const [loadingPatient, setLoadingPatient] = useState(true);\r\n    const [loadingInfoPatient, setLoadingInfoPatient] = useState(true);\r\n    const [loadingCategoryExamining, setLoadingCategoryExamining] = useState(false);\r\n    const [loadingContentsExamining, setLoadingContentsExamining] = useState(false);\r\n\r\n    const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n  \r\n    const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n    const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n    const [listPantientChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n            { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN đã khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n          const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n        }\r\n        else if(chipIndex === 1){\r\n          const listPantientRegisterExamining = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 3) //hẹn khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterExamining);\r\n          setListDataPatientsRegisterState(listPantientRegisterExamining);\r\n        }\r\n        else{\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n          setListDataPatientsRegisterState(listPantientRegisterDone);\r\n        }\r\n    };\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n        }else{\r\n          setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n        }\r\n      }\r\n    \r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const handleCompleteExaminingForPantient = () => {\r\n        toast.success(`Đã kết thúc khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setCurrentHealthRecordExamining();\r\n        setCurrentContentExamining(1);\r\n        setDataExaminingForConclusion({});\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleCancelExamining = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingCategoryExamining(true);\r\n        setLoadingContentsExamining(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 0);\r\n        if(response.status === 200){\r\n            toast.success(`Đã hủy khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success2'});    \r\n            setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n            setMainDataExamining([]);\r\n            setOpenCollapseHealthRecords(false);\r\n            setOpenCollapseHealthRecordsItem([]);\r\n            setCategorySelectedExamining({});\r\n            setContentCategorySelectedExamining([]);\r\n            setHealthRecordsContents([]);\r\n            setCurrentHealthRecordExamining();\r\n            setCurrentContentExamining(1);\r\n            setDataExaminingForConclusion({});\r\n            handleGetRegistersByDateNow();\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay nên không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    //hàm này dùng khi user đang khám mà bị ngáo lỡ nhấn f5\r\n    const handleReloadUIWhenExamining = (findPantientExamining) => {\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.stt = findPantientExamining.order;\r\n        _dataPantientsReadyExamining.id = findPantientExamining.id;\r\n        _dataPantientsReadyExamining.status = 1;\r\n        _dataPantientsReadyExamining.patientsId = findPantientExamining.patient.patientId;\r\n        _dataPantientsReadyExamining.patientsName = findPantientExamining.patient.fullName;\r\n        _dataPantientsReadyExamining.patientsDOB = findPantientExamining.patient.dayOfBirth;\r\n        _dataPantientsReadyExamining.patientsMonthsOld = findPantientExamining.patient.monthsOfAge;\r\n        _dataPantientsReadyExamining.patientsGender = findPantientExamining.patient.gender;\r\n        _dataPantientsReadyExamining.patientsHeight = findPantientExamining.height;\r\n        _dataPantientsReadyExamining.patientsWeight = findPantientExamining.weight;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = findPantientExamining.headCircumference;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = findPantientExamining.headCircumference;\r\n        _dataPantientsReadyExamining.patientsPhone = findPantientExamining.patient.phoneMother ? findPantientExamining.patient.phoneMother : findPantientExamining.patient.phoneFather;\r\n        _dataPantientsReadyExamining.patientsAddress = findPantientExamining.patient.fullAddress;\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n    }\r\n\r\n    //bắt đầu khám bệnh cho bệnh nhân\r\n    const handleBeginExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n            \r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            await handleGetRegistersByDateNow();\r\n            await handleSetMainDataExamining();\r\n            toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay nên không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingPatient(false);\r\n    }\r\n\r\n    //nhấn chọn bệnh nhân để load vào ô thông tin bn\r\n    const handleSelectPantientExamining = async (dataPantientItem) => {\r\n        if(dataPantientsReadyExamining.patientsId === '' || dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 0){\r\n            setOpenAlertProcessingBackdrop(true);\r\n            setLoadingInfoPatient(true);\r\n            setLoadingPrevDataExamining(true);\r\n            await handleGetMedicalDetailPatient(dataPantientItem.id);\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.stt = dataPantientItem.order;\r\n            _dataPantientsReadyExamining.id = dataPantientItem.id;\r\n            _dataPantientsReadyExamining.status = 0;\r\n            _dataPantientsReadyExamining.patientsId = dataPantientItem.patient.patientId;\r\n            _dataPantientsReadyExamining.patientsName = dataPantientItem.patient.fullName;\r\n            _dataPantientsReadyExamining.patientsDOB = dataPantientItem.patient.dayOfBirth;\r\n            _dataPantientsReadyExamining.patientsMonthsOld = dataPantientItem.patient.monthsOfAge;\r\n            _dataPantientsReadyExamining.patientsGender = dataPantientItem.patient.gender;\r\n            _dataPantientsReadyExamining.patientsHeight = dataPantientItem.height;\r\n            _dataPantientsReadyExamining.patientsWeight = dataPantientItem.weight;\r\n            _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n            _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n            _dataPantientsReadyExamining.patientsPhone = dataPantientItem.patient.phoneMother ? dataPantientItem.patient.phoneMother : dataPantientItem.patient.phoneFather;\r\n            _dataPantientsReadyExamining.patientsAddress = dataPantientItem.patient.fullAddress;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            setLoadingInfoPatient(false);\r\n            setLoadingPrevDataExamining(false);\r\n            setOpenAlertProcessingBackdrop(false);\r\n        }\r\n        else{\r\n            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n        }\r\n    }\r\n\r\n    //tìm danh mục khám gồm tiền căn, sổ sức khỏe, dinh dưỡng...\r\n    const handleGetMedicalDetailPatient = async (id) => {\r\n        const responseDataExamining = await getMedicalDetailPatient(id);\r\n        setPrevDataExamining(responseDataExamining);\r\n    }\r\n\r\n    const handleSetMainDataExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        prevDataExamining.healthRecords.forEach((healthRecordsItem) => {\r\n            if(healthRecordsItem.medicalBookId === null){\r\n                healthRecordsItem.state = 1\r\n            }\r\n        })\r\n\r\n        const editDataCategoryPresForConclusion = prevDataExamining.categoryPres.map((predecessorItem) => {\r\n            const mainCategoryContentsExamining = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                const categoryContents = {\r\n                    categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                    categoryContentName: categoryContentsItem.categoryContentName,\r\n                    categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                    categoryContentText: categoryContentsItem.categoryContentText,\r\n                    categoryContentQuestions: []\r\n                }\r\n                return categoryContents\r\n            })\r\n\r\n            const mainCategoryExamining = {\r\n                categoryName: predecessorItem.categoryName,\r\n                isPredecessor: true,\r\n                categoryContents: mainCategoryContentsExamining\r\n            }\r\n\r\n            return mainCategoryExamining\r\n        })\r\n\r\n        const editDataHealthRecordsForConclusion = prevDataExamining.healthRecords.find((healthRecordsItem) => healthRecordsItem.patientId === dataPantientsReadyExamining.patientsId)\r\n\r\n        setDataExaminingForConclusion({\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n            conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n            categories: editDataCategoryPresForConclusion,\r\n        });\r\n\r\n        prevDataExamining.categoryPres.forEach((categoryPresItem, categoryPresIndex) => {\r\n            categoryPresItem.categoryContents = categoryPresItem.categoryContents.map((categoryContentsItem) => {\r\n                return {\r\n                    ...categoryContentsItem,\r\n                    categoryPresOrder: categoryPresIndex\r\n                }\r\n            })\r\n            return {\r\n                ...categoryPresItem,\r\n            }\r\n        })\r\n\r\n        setMainDataExamining(prevDataExamining);\r\n        setPrevDataExamining();\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //chọn mục lục để khám\r\n    const handleSelectCategoryClick = (categoryIncludeCotent) => {\r\n        if(openCollapseHealthRecords === true){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }\r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                ...categoryIncludeCotent,\r\n                contentQuantity: categoryIncludeCotent.categoryContents.length\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(categoryIncludeCotent.categoryContents[0]);\r\n\r\n        setCurrentContentExamining(1);\r\n    }\r\n\r\n    //chọn cây thư mục khám sổ sức khỏe\r\n    const handleSelectHealthRecords = (healthRecords) => {\r\n        if(openCollapseHealthRecords === false){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }        \r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                categoryName: 'Sổ sức khỏe',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(\r\n            {\r\n                healthRecordsContentsType: 'tree',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n    }\r\n\r\n    //chọn chỉ định một sổ khám bệnh (tìm chi tiết một sổ khám bệnh)\r\n    const handleSelectHealthRecordsItem = async (medicalBookId, examinationName, healthRecordsState) => {\r\n        setLoadingContentsExamining(true);\r\n        if(currentHealthRecordExamining){\r\n            if(healthRecordsState === 2){\r\n                await findHealthRecord(medicalBookId, examinationName, healthRecordsState);\r\n            }\r\n            else{\r\n                setHealthRecordsContents({\r\n                    healthRecordsName: examinationName,\r\n                    newMedicalBook: currentHealthRecordExamining.newMedicalBook,\r\n                    categoryPatients: currentHealthRecordExamining.categoryPatients\r\n                })\r\n\r\n                const editHealthRecordsContent = currentHealthRecordExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => {\r\n                    const categoryName = categoryPatientsItem.categoryName;\r\n                    const firstContent = categoryPatientsItem.categoryContents[0];\r\n            \r\n                    return{\r\n                        categoryName: categoryName,\r\n                        categoryContents: firstContent,\r\n                        currentHealthRecordsContent: 1,\r\n                        contentQuantity: categoryPatientsItem.categoryContents.length\r\n                    }\r\n                })\r\n            \r\n                const updateHealthRecordsContent = {\r\n                    healthRecordsName: examinationName,\r\n                    newMedicalBook: currentHealthRecordExamining.newMedicalBook,\r\n                    conclusion: dataExaminingForConclusion.conclusion,\r\n                    categoryPatients: editHealthRecordsContent\r\n                }\r\n            \r\n                setContentCategorySelectedExamining(updateHealthRecordsContent);\r\n            }\r\n        }\r\n        else{\r\n            await findHealthRecord(medicalBookId, examinationName, healthRecordsState);\r\n        }\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    const findHealthRecord = async (medicalBookId, examinationName, healthRecordsState) => {\r\n        const responseMedicalBook = await getMedicalBook(medicalBookId ? medicalBookId : 0);\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        });\r\n    \r\n        const editHealthRecordsContent = responseMedicalBook.medicakBook.categories.map((categoryPatientsItem, categoryPatientsIndex) => {\r\n            const categoryName = categoryPatientsItem.categoryName;\r\n            const firstContent = categoryPatientsItem.categoryContents[0];\r\n    \r\n            return{\r\n                categoryName: categoryName,\r\n                categoryContents: firstContent,\r\n                currentHealthRecordsContent: 1,\r\n                contentQuantity: categoryPatientsItem.categoryContents.length\r\n            }\r\n        })\r\n    \r\n        const updateHealthRecordsContent = {\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: editHealthRecordsContent\r\n        }\r\n    \r\n        setContentCategorySelectedExamining(updateHealthRecordsContent);\r\n\r\n        if(healthRecordsState === 1){\r\n    \r\n            const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n                \r\n                const mainCategoryExamining = {\r\n                    categoryName: categoriesItem.categoryName,\r\n                    isHealthRecord: true,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n\r\n                return mainCategoryExamining\r\n            })\r\n\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    //chọn loại mục khám của một sổ khám bệnh\r\n    const handleOpenHealthRecordsItem = (categoryPatientsIndex) => {\r\n        setOpenCollapseHealthRecordsItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryPatientsIndex] = !newOpen[categoryPatientsIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleOnChangePage = (event, value) => {\r\n         setContentCategorySelectedExamining(categorySelectedExamining.categoryContents[value - 1]);\r\n         setCurrentContentExamining(value);\r\n    }\r\n\r\n    const handeOnChangePageHealthRecords = (event, page, categoryIndex) => {\r\n        const _contentCategorySelectedExamining = {...contentCategorySelectedExamining};\r\n        _contentCategorySelectedExamining.categoryPatients[categoryIndex].categoryContents = healthRecordsContents.categoryPatients[categoryIndex].categoryContents[page - 1];\r\n        _contentCategorySelectedExamining.categoryPatients[categoryIndex].currentHealthRecordsContent = page;\r\n        setContentCategorySelectedExamining(_contentCategorySelectedExamining);\r\n    }\r\n\r\n    const handleAnswerCheckQuestion = (questionIndex, answer) => {\r\n        //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng check\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            )\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = false\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            )\r\n        }\r\n        else{\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion();\r\n        }   \r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const handleNoteCheckQuestion = (questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            //createSelectedQuestionsExaminingForConclusion();\r\n        }, 0)\r\n    }\r\n\r\n    const handleAnswerValueQuestion = (questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentTitle,\r\n            )\r\n        }, 0)\r\n    }\r\n\r\n    const handleAnswerCheckQuestionHealthRecords = (categoryPatientsIndex, currentHealthRecordsContent, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                currentHealthRecordsContent - 1,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            );\r\n        }\r\n\r\n        else if(answer === true){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = false;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                currentHealthRecordsContent - 1,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            );\r\n        }\r\n\r\n        else{\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                currentHealthRecordsContent - 1,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            );\r\n        }\r\n    }\r\n    \r\n    const handleNoteCheckQuestionHealthRecords = (categoryPatientsIndex, currentHealthRecordsContent, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n        }, 0)\r\n    }\r\n\r\n    const createSelectedQuestionsExaminingForConclusion = (categoryName, currentCategory, categoryContentQuestion, questionOrder, categoryContentTitle) => {\r\n        //question dạng check nhưng answer là true\r\n        if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    categoriesItem.categoryContents[currentCategory].categoryContentQuestions.push(categoryContentQuestion)\r\n                }\r\n            })\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n\r\n        //question dạng check nhưng answer là false\r\n        else if(categoryContentQuestion.categoryContentAnswer === false && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    const removeSelectedQuestion = categoriesItem.categoryContents[currentCategory].categoryContentQuestions.filter((questionItem) => questionItem.categoryContentQuestionOrder !== questionOrder)\r\n                    categoriesItem.categoryContents[currentCategory].categoryContentQuestions = removeSelectedQuestion\r\n                }\r\n            })\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion)\r\n        }\r\n        //question dạng giá trị nhưng khác rỗng\r\n        else if(categoryContentQuestion.categoryContentNote !== '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            // Duyệt qua từng categoriesItem trong categories\r\n            _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                    categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                        if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                            // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                            if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                    question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                );\r\n                \r\n                                if (existingQuestion) {\r\n                                    // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                    existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                } else {\r\n                                    // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                    categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                }\r\n\r\n                            } else {\r\n                            // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                            }\r\n                        }\r\n                    });        \r\n                }\r\n            });\r\n\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n        //question dạng giá trị nhưng là rỗng\r\n        else if(categoryContentQuestion.categoryContentNote === '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                        if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleGetRegistersByDateNow = async () => {\r\n        const response = await getRegistersByDateNow();\r\n        if(response !== 400){\r\n            if(response.list.length !== 0){\r\n                setListDataPatientsRegister(response.list);\r\n                if(activeChip.chipOrder === 0){\r\n                    const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1) //chờ khám và đang khám\r\n                    setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                    setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n                    const updatedList = listPantientChipState.map((item, index) => ({\r\n                        ...item,\r\n                        chipContent: response.listCountState[index]\r\n                    }));\r\n                    setListPantientChipState(updatedList);\r\n                    const findPantientExamining = response.list.find(patientsRegisterItem => patientsRegisterItem.state === 1)\r\n                    if(findPantientExamining){\r\n                        handleReloadUIWhenExamining(findPantientExamining);\r\n                    }\r\n                }\r\n                else if(activeChip.chipOrder === 1){\r\n                    const listPantientRegisterExamining = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 3) //hẹn khám\r\n                    setListDataPatientsRegisterSort(listPantientRegisterExamining);\r\n                    setListDataPatientsRegisterState(listPantientRegisterExamining);\r\n                    const updatedList = listPantientChipState.map((item, index) => ({\r\n                        ...item,\r\n                        chipContent: response.listCountState[index]\r\n                    }));\r\n                    setListPantientChipState(updatedList);\r\n                }\r\n                else{\r\n                    const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n                    setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n                    setListDataPatientsRegisterState(listPantientRegisterDone);\r\n                    const updatedList = listPantientChipState.map((item, index) => ({\r\n                        ...item,\r\n                        chipContent: response.listCountState[index]\r\n                    }));\r\n                    setListPantientChipState(updatedList);\r\n                }\r\n            }\r\n        }\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetRegistersByDateNow();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(dataPantientsReadyExamining.patientsId !== ''){\r\n                if(event.keyCode === 112 && dataPantientsReadyExamining.status === 1){\r\n                    event.preventDefault();\r\n                    handleCancelExamining();\r\n                }\r\n\r\n                else if(event.keyCode === 113 && prevDataExamining){\r\n                    if(dataPantientsReadyExamining.status === 0){\r\n                        handleBeginExaminingForPantient();\r\n                    }\r\n                    else if(dataPantientsReadyExamining.status === 1){\r\n                        alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n                    }\r\n                }\r\n\r\n                else if(event.keyCode === 115){\r\n                    if(dataPantientsReadyExamining.status === 1){\r\n                        setOpenModalCompleteExamining(true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n\r\n    }, [dataPantientsReadyExamining, openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 10.6}}>\r\n                <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                    <Grid container spacing={2} sx={{pl: 0.6, pr: 0.6}}>\r\n\r\n                        <Grid item xs={5}>\r\n                            {/* <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{`${moment().format('dddd')}, ${moment().format('LL')}`}</Typography> */}\r\n                            <TableContainer component={Paper} sx={{ height: '332px', boxShadow: 5, borderRadius: '10px' }}>\r\n                                {loadingPatient ?\r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                                            <CircularProgress />\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                                        </Box>        \r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Box>\r\n                                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                                                    <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                                                        <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                                        onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                                                    </Badge>\r\n                                                ))}\r\n                                            </Stack>\r\n                                            <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                                            <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                                                <TextField sx={{mb: 0.6, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                                        startAdornment: (\r\n                                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                                        ),\r\n                                                        endAdornment: (\r\n                                                            <InputAdornment position='end'>\r\n                                                                {searchPatientsQuery !== '' ? \r\n                                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                                                                    /> \r\n                                                                : \r\n                                                                    null\r\n                                                                }\r\n                                                            </InputAdornment>  \r\n                                                        )\r\n                                                    }}>\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Box>\r\n                                \r\n                                        <Table stickyHeader >\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listDataPatientsRegisterSort.map((dataPantientItem, dataPantientIndex) => (\r\n                                                    <TableRow hover role=\"checkbox\" key={dataPantientItem.order}\r\n                                                        sx={{ cursor: 'pointer', backgroundColor: dataPantientItem.state === 1 ? '#26c6da' : '#fff', \r\n                                                        ':hover': {backgroundColor: dataPantientItem.state === 1 ? '#00bcd4 !important' : 'rgba(0, 0, 0, 0.1) !important'} }} \r\n                                                        onClick={() => handleSelectPantientExamining(dataPantientItem)}\r\n                                                    >\r\n                                                        <TableCell align='left' sx={{width: '20px'}}>{dataPantientItem.order}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '150px'}}>{dataPantientItem.patient.patientId}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '240px'}}>{dataPantientItem.patient.fullName}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </>\r\n                                }\r\n                            </TableContainer>\r\n\r\n                            {/* cây thư mục khám */}\r\n                            <Box style={{width: '100%', marginTop: '8px', borderRadius: '10px', border: '2px solid red', height: '250px'}} >\r\n                                {\r\n                                    mainDataExamining.length === 0 && loadingCategoryExamining === false || prevDataExamining === false ?\r\n                                        null\r\n                                    :\r\n                                    <>\r\n                                        {loadingCategoryExamining ?\r\n                                            <Box sx={{backgroundColor: '#e0e0e0', borderRadius: '10px', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu cây thư mục khám, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <>\r\n                                                <div className='category-scrollbar'>\r\n                                                    <List sx={{p: 0}}>\r\n                                                        {mainDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                                            <ListItemButton key={`category ${predecessorIndex}`} \r\n                                                                sx={{\r\n                                                                pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'},\r\n                                                                backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffd54f' : ''}} \r\n                                                                onClick={() => handleSelectCategoryClick(predecessorItem)}\r\n                                                            >\r\n                                                                <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                    <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                    <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                        {predecessorItem.newCategoryPre === true ? \r\n                                                                            null\r\n                                                                        :\r\n                                                                            <IconButton edge=\"end\">\r\n                                                                                <CheckCircleIcon sx={{color: 'green', fontSize: '1.4rem'}} titleAccess='đã theo dõi'/>\r\n                                                                            </IconButton>\r\n                                                                        }\r\n                                                                </Box>\r\n                                                            </ListItemButton>\r\n                                                        ))}\r\n\r\n                                                        <ListItemButton \r\n                                                            sx={{pt: '4px', pb: '4px', borderRadius: '8px', backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffd54f' : '',\r\n                                                                ':hover': {backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                            onClick={() => handleSelectHealthRecords(mainDataExamining.healthRecords)}\r\n                                                        >\r\n                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}>\r\n                                                                <SendIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                            </ListItemIcon>\r\n\r\n                                                            <ListItemText primary={'Sổ sức khỏe'} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>                                                    \r\n                                                        </ListItemButton>\r\n\r\n                                                        <Collapse in={openCollapseHealthRecords} timeout=\"auto\" unmountOnExit>\r\n                                                            <div style={{ paddingLeft: '24px' }}>\r\n                                                                {mainDataExamining.healthRecords.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                    <ListItemButton key={`healthRecords ${healthRecordsIndex}`} sx={{pt: '0px', pb: '0px', width: 'auto', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                                        onClick={() => handleSelectHealthRecordsItem(healthRecordsItem.medicalBookId, healthRecordsItem.examinationName, healthRecordsItem.state)}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#009688'}}}>\r\n                                                                            <FiberManualRecordIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={healthRecordsItem.examinationName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </ListItemButton>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </Collapse>\r\n                                                    </List>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </Box>\r\n                            <div className='instruction' style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                                <Typography variant='h6'><span style={{fontWeight: 'bolder', color: 'red'}}>F1</span> huỷ khám</Typography>\r\n                                <Typography variant='h6'><span style={{fontWeight: 'bolder', color: 'deeppink'}}>F2</span> bắt đầu khám</Typography>\r\n                                <Typography variant='h6'><span style={{fontWeight: 'bolder', color: 'blue'}}>F4</span> kết thúc khám</Typography>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            {/* thông tin bệnh nhân */}\r\n                            <Box sx={{boxShadow: 4, borderRadius: '20px', border: '2px solid blue', height: '220px', mb: '4px', overflow: 'auto'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', mt: 0.6, mb: 0.6, fontWeight: 'bolder', fontSize: '1.2rem', textAlign: 'center'}}>Thông tin bệnh nhân</Typography>\r\n                                <Box sx={{pl: 4, pr: 4, mt: 1}}>\r\n                                    {loadingInfoPatient ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', mt: 4}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải thông tin bệnh nhân, hãy chờ một chút...</Typography>\r\n                                        </Box>\r\n                                    :\r\n                                        <>\r\n                                            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Mã BN: ${dataPantientsReadyExamining.patientsId || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Họ tên: ${dataPantientsReadyExamining.patientsName || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    {dataPantientsReadyExamining.patientsGender === true ? <MaleIcon sx={{color: 'coral', fontSize: '27px'}}/> : <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/>}\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Giới tính: ${dataPantientsReadyExamining.patientsGender !== '' ? dataPantientsReadyExamining.patientsGender === true ? 'Nam' : 'Nữ' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: {dataPantientsReadyExamining.patientsDOB ? moment(dataPantientsReadyExamining.patientsDOB).format(\"DD/MM/YYYY\") : ''}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Tháng tuổi: ${dataPantientsReadyExamining.patientsMonthsOld || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Sdt: ${dataPantientsReadyExamining.patientsPhone || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                \r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiBodyHeight style={{color: 'tomato', fontSize: '1.42rem', marginLeft: '2px'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 0.8}}>\r\n                                                        {`Chiều cao: ${dataPantientsReadyExamining.patientsHeight ? dataPantientsReadyExamining.patientsHeight + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Cân nặng: ${dataPantientsReadyExamining.patientsWeight ? dataPantientsReadyExamining.patientsWeight + ' kg' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Vòng đầu: ${dataPantientsReadyExamining.patientsHeadCircumference ? dataPantientsReadyExamining.patientsHeadCircumference + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={12} sx={{display: 'inline-flex'}}>\r\n                                                    <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Địa chỉ: ${dataPantientsReadyExamining.patientsAddress || ''}`}</Typography>\r\n                                                </Grid> \r\n\r\n                                            </Grid>\r\n                                        </>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {/* nội dung khám */}\r\n                            <div className='container-content-examining'>\r\n                                {\r\n                                    loadingPrevDataExamining ? \r\n                                        <>\r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu kỳ khám gần nhất, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    :\r\n                                    prevDataExamining ? \r\n                                        prevDataExamining.healthRecords.length === 1 && prevDataExamining.healthRecords[0].medicalBookId === null ? \r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <Typography variant='h6'>Bệnh nhân không có kỳ khám trước</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <div className='content-examining'><PreviewLastExamining prevDataExamining={prevDataExamining} /></div>\r\n                                    :\r\n                                        null\r\n                                }\r\n                                \r\n                                {contentCategorySelectedExamining.length !== 0 ? \r\n                                    <>\r\n                                        <div className='content-examining' style={{height: healthRecordsContents.length === 0 ? '47.4vh' : '50vh'}}>\r\n                                            {loadingContentsExamining ? \r\n                                                <>\r\n                                                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                        <CircularProgress />\r\n                                                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh, hãy chờ một chút...</Typography>\r\n                                                    </Box>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    <Box sx={contentCategorySelectedExamining.categoryContentTitle === null ? {marginTop: '30px'} : {}}>\r\n                                                        <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>{contentCategorySelectedExamining.categoryContentTitle || ''}</Typography>\r\n                                                        {contentCategorySelectedExamining.categoryContentQuestions ? \r\n                                                            contentCategorySelectedExamining.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`categoryContentQuestionName ${questionIndex}`}>\r\n                                                                    <Grid container rowSpacing={0}>\r\n\r\n                                                                        {questionIndex === 0 ? \r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{contentCategorySelectedExamining.categoryContentName}</Typography>\r\n                                                                                </Grid>\r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>{contentCategorySelectedExamining.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{contentCategorySelectedExamining.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{contentCategorySelectedExamining.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                }                                                                             \r\n                                                                            </> \r\n                                                                            : \r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                            <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                        </Grid>\r\n                                                                \r\n                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                            <>\r\n                                                                                <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                    <Checkbox checked={questionItem.categoryContentAnswer === true ? true : false } color='error' sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} onClick={(e) => handleAnswerCheckQuestion(questionIndex, questionItem.categoryContentAnswer)}></Checkbox>\r\n                                                                                </Grid>\r\n\r\n                                                                                <Grid item xs={7} >\r\n                                                                                    <div className='textfield-for-answer'>\r\n                                                                                        <div className='suggest-note' key={`current ${currentContentExamining} - question ${questionIndex} - category ${contentCategorySelectedExamining.categoryContentOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder}`} >                                                                          \r\n                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} \r\n                                                                                                onChange={(e) => handleNoteCheckQuestion(questionIndex, e.target.value)}\r\n                                                                                                defaultValue={questionItem.categoryContentNote}\r\n                                                                                            />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </Grid>\r\n                                                                            </>   \r\n                                                                            :\r\n                                                                            <>\r\n                                                                                <Grid item xs={8}>\r\n                                                                                    <div className='textfield-for-answer' key={`current ${currentContentExamining} - question ${questionIndex} - category ${contentCategorySelectedExamining.categoryContentOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder}`} >\r\n                                                                                        <input type='text' className='value-for-answer' onChange={(e) => handleAnswerValueQuestion(questionIndex, e.target.value)} \r\n                                                                                            defaultValue={questionItem.categoryContentNote} \r\n                                                                                        />\r\n                                                                                    </div>\r\n                                                                                </Grid>\r\n                                                                            </>\r\n                                                                        }\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))\r\n                                                            :\r\n                                                            contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length === 0 ? \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n                                                                    <TableContainer component={Paper}>\r\n                                                                        <Table stickyHeader>\r\n                                                                            <TableHead>\r\n                                                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                                                    <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n                                                                                </TableRow>\r\n                                                                            </TableHead>\r\n                                                                            <TableBody sx={{borderRadius: '0px'}}>\r\n                                                                                {contentCategorySelectedExamining.categoryContents.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                                    <TableRow hover role=\"checkbox\" key={healthRecordsIndex}>\r\n                                                                                        <TableCell align='left' sx={{width: '158px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{healthRecordsItem.examinationName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '144px'}}>{handleRenderExamsStatus(healthRecordsItem.state)}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '108px'}}>{moment(healthRecordsItem.timeRegister).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '115px'}}>{healthRecordsItem.doctorFullName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: 'auto'}}>{healthRecordsItem.conclusion}</TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                ))}\r\n                                                                            </TableBody>\r\n                                                                        </Table>\r\n                                                                    </TableContainer>\r\n                                                                </>\r\n                                                            :\r\n                                                            <>\r\n                                                                <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', lineHeight: 1, mt: 1}}>{contentCategorySelectedExamining.healthRecordsName}</Typography>\r\n                                                                <div className='health-record-content'>\r\n                                                                    <List sx={{p: 0}}>\r\n                                                                        {contentCategorySelectedExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => (\r\n                                                                            <div key={`categoryPatients ${categoryPatientsIndex}`}>\r\n                                                                                <ListItemButton  \r\n                                                                                    sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                                                                    onClick={() => handleOpenHealthRecordsItem(categoryPatientsIndex)}\r\n                                                                                >\r\n                                                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                                        <ListItemText primary={categoryPatientsItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                                    </Box>\r\n                                                                                </ListItemButton>\r\n\r\n                                                                                <Collapse in={openCollapseHealthRecordsItem[categoryPatientsIndex]} timeout=\"auto\" unmountOnExit>\r\n                                                                                    <div className='header-health-record' style={{marginTop: '0.4x', marginBottom: '0.4px', border: '2px solid #00bcd4', borderRadius: '20px'}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', textAlign: 'center'}}>{categoryPatientsItem.categoryContents.categoryContentTitle}</Typography>\r\n\r\n                                                                                        <div className='content-health-record' style={{padding: '10px'}}>                                                                                                                                                                \r\n                                                                                            <Grid container rowSpacing={0}>\r\n                                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryPatientsItem.categoryContents.categoryContentName}</Typography>\r\n                                                                                                </Grid>\r\n\r\n                                                                                                <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                    <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryPatientsItem.categoryContents.categoryContentCheck}</Typography>\r\n                                                                                                </Grid>\r\n\r\n                                                                                                <Grid item xs={5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryPatientsItem.categoryContents.categoryContentText}</Typography>\r\n                                                                                                </Grid> \r\n\r\n                                                                                                {categoryPatientsItem.categoryContents.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                                                    <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                                            <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                                        </Grid>\r\n                                                                                                \r\n                                                                                                        <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                                            <Checkbox disabled={contentCategorySelectedExamining.newMedicalBook === true ? false : true} \r\n                                                                                                                classes={{ root: classes.root }}\r\n                                                                                                                checked={questionItem.categoryContentAnswer === true ? true : false }\r\n                                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                                                onClick={(e) => handleAnswerCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsItem.currentHealthRecordsContent, questionIndex, questionItem.categoryContentAnswer)} \r\n                                                                                                            />\r\n                                                                                                        </Grid>\r\n                                                                                                            \r\n                                                                                                        <Grid item xs={5} >\r\n                                                                                                            <div className='note-for-answer'>\r\n                                                                                                                <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex}`}>                                                                          \r\n                                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} \r\n                                                                                                                        disabled={contentCategorySelectedExamining.newMedicalBook === true ? false : true}\r\n                                                                                                                        onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsItem.currentHealthRecordsContent, questionIndex, e.target.value)}\r\n                                                                                                                        defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                    />\r\n                                                                                                                </div>\r\n                                                                                                            </div>\r\n                                                                                                        </Grid>\r\n                                                                                                    </Box>\r\n                                                                                                ))}\r\n                                                                                            </Grid>\r\n                                                                                        </div>\r\n\r\n                                                                                        <div className='footer-content-examining' style={{backgroundColor: '#00bcd4'}}>\r\n                                                                                            <Pagination count={categoryPatientsItem.contentQuantity} page={categoryPatientsItem.currentHealthRecordsContent} \r\n                                                                                                color=\"error\" sx={{m: 'auto'}} onChange={(e, value) => handeOnChangePageHealthRecords(e, value, categoryPatientsIndex)}>\r\n                                                                                            </Pagination>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </Collapse>\r\n                                                                            </div>\r\n                                                                        ))}\r\n\r\n                                                                        {contentCategorySelectedExamining.newMedicalBook === false ?\r\n                                                                            <>\r\n                                                                                <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                                                                    <Typography variant='h6' sx={{color: 'blueviolet', fontWeight: 'bolder'}}>{`Kết luận của bác sĩ: ${contentCategorySelectedExamining.conclusion}`}</Typography>\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                        }\r\n\r\n                                                                    </List>\r\n                                                                </div>\r\n                                                            </>\r\n                                                        }\r\n                                                    </Box>\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n\r\n                                        {contentCategorySelectedExamining.categoryContentQuestions ? \r\n                                            <>\r\n                                                <div className='footer-content-examining'>\r\n                                                    <Pagination count={categorySelectedExamining.contentQuantity} page={currentContentExamining} color=\"success\" sx={{m: 'auto'}} onChange={(event, value) => handleOnChangePage(event, value)}/>\r\n                                                </div>\r\n                                            </>\r\n                                            :\r\n                                            <></>\r\n                                        }\r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n\r\n            <CompleteExamining openModalCompleteExamining={openModalCompleteExamining} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n                handleCompleteExaminingForPantient={handleCompleteExaminingForPantient} dataExaminingForConclusion={dataExaminingForConclusion}\r\n            />\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n            />\r\n            {/* <AlertConfirm openAlertConfirmModal={openAlertConfirmModal.open} onCloseAlertConfirmModal={setOpenAlertConfirmModal} \r\n                titleConfirm={openAlertConfirmModal.title} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDoctorExamining","import { BrowserRouter, Route, Link, Switch, NavLink, HashRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport Header from \"../components/Nav/Header.jsx\";\nimport Page404 from \"../components/ErrorPage/Page404\";\nimport Login from \"../components/LoginAccount/Log-in\";\nimport MainMedicalRegister from \"../components/MedicalRegister/MainMedicalRegister.jsx\";\nimport MainDoctorExamining from \"../components/DoctorExamining/MainDoctorExamining.jsx\";\n\nconst AppRoutes = (props) => {\n  return (\n    <>\n      <HashRouter>\n        <Header />{\" \"}\n        <Switch>\n          {/* <Route exact path=\"/KNKPT_BVND2\">\n            home{\" \"}\n          </Route> */}\n          <Route exact path=\"/\">home{\" \"}</Route>\n          <Route path=\"/login\"><Login /></Route>\n          <PrivateRoutes path=\"/medicalregister\" component={MainMedicalRegister}></PrivateRoutes>\n          <PrivateRoutes path=\"/doctor-examining\" component={MainDoctorExamining}></PrivateRoutes>\n          <Route path=\"*\"><Page404 />{\" \"}</Route>\n          {/* <PrivateRoutes path=\"/users\" component={Users} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\nexport default AppRoutes;\n","import \"./App.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <div className=\"app-container\">\n          <AppRoutes />\n        </div>\n      </HashRouter>\n\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}