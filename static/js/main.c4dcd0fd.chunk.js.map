{"version":3,"sources":["components/ManageUserManual/UserManual.jsx","assets/image/logo.png","components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop.jsx","Service/UserService.jsx","Service/MedicalService.jsx","context/UserContext.jsx","components/Nav/Header.jsx","routes/PrivateRoutes.js","components/ErrorPage/Page404.js","components/ManageRegister/Register.jsx","components/LoginAccount/Log-in.jsx","components/ManageSelectedDoctorExamining/SelectedDoctorExamining.jsx","components/ManageAlertProcessing/AlertProcessing.jsx","Service/PlaceService.jsx","components/ManageInfoPantients/ManageInfoPantients.jsx","components/MedicalRegister/ListPatientsRegister.jsx","components/ManageExaminingSession/ExaminingSession.jsx","components/ManageOldDisease/OldDisease.jsx","components/MedicalRegister/BookMedical.jsx","components/MedicalRegister/MainMedicalRegister.jsx","components/MedicalAppointment/MainAppointmentExamining.jsx","components/ManageCompleteExamining/CompleteExamining.jsx","components/DoctorExamining/PreviewLastExamining.jsx","components/DoctorExamining/MainDoctorExamining.jsx","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["UserManual","props","_jsxs","Dialog","fullWidth","maxWidth","open","openModalUserManual","disableEscapeKeyDown","children","_jsx","DialogTitle","sx","fontWeight","fontSize","textAlign","color","textTransform","IconButton","onClick","setOpenModalUserManual","position","right","top","CloseIcon","DialogContent","dividers","pl","pr","Typography","variant","Box","AlertProcessingBackdrop","Backdrop","zIndex","theme","drawer","backgroundColor","changeBackground","openAlertProcessingBackdrop","display","flexDirection","alignItems","CircularProgress","mt","alertTitle","backendURL","createConfig","token","localStorage","getItem","headers","Authorization","concat","createMedicalRegister","async","axios","post","dataPatientsRegister","then","response","catch","error","createMedicalBackRegister","createAddPredecessor","dataPredecessor","getRegistersByDateNow","config","get","data","status","getListMedicalExaminationsGiveRegister","dayOfBirth","getVaccinationByPatientId","patientId","getCurrentDoctorExamining","getMedicalBook","medicalBookId","getUpdatePredecessor","getAppointmentsNextWeek","updateMedicalState","id","state","put","updateStateAppointment","appointmentDate","stateAppointment","UserContext","React","createContext","UserProvider","_ref","userDefault","isAuthenticated","isLogin","user","setUser","useState","loading","setLoading","alertVisible","setAlertVisible","isLogOutClick","setIsLogOutClick","onConfirm","setOnConfirm","setOpenAlertProcessingBackdrop","resetAlert","fetchUser","getUserLogin","positionName","responseCurrentDoctorExamining","userId","userFullName","isCurrentDoctorExamining","userIdDoctor","checkJWTExpire","result","getJWT","decodeJWT","JSON","parse","atob","split","e","parseJwt","currentDate","Date","exp","getTime","removeItem","useEffect","_Fragment","Provider","value","loadingContext","loginContext","userContextLogin","logoutContext","triggerAlert","confirmCallback","confirmAlert","withRouter","useContext","location","useLocation","history","useHistory","anchorEl","setAnchorEl","Boolean","handleClick","event","currentTarget","handleClose","actionNursing","key","label","icon","LocalHospitalIcon","LinkComponent","NavLink","to","LocalPhoneIcon","actionDoctor","MedicationLiquidIcon","actionAdmin","BarChartIcon","userAction","setUserAction","pathname","findIndex","action","handleLogout","push","width","AppBar","Toolbar","height","Link","Avatar","src","Logo","mb","mr","BottomNavigation","showLabels","justifyContent","flexGrow","map","actionItem","BottomNavigationAction","Button","Menu","onClose","MenuItem","HelpIcon","titleAccess","cursor","exact","PrivateRoutes","Route","path","component","Redirect","Page404","className","CreateAccount","showPassword","setShowPassword","handleCloseModalRegister","reason","setOpenModalRegister","openModalRegister","m","p","TextField","type","InputProps","endAdornment","InputAdornment","handleClickShowPassword","padding","VisibilityIcon","VisibilityOffIcon","Autocomplete","options","option","renderInput","params","Stack","spacing","direction","style","margin","Login","userAccount","setUserAccount","password","handleLogin","userName","toast","userLogin","setItem","tokenDTO","Container","borderRadius","ml","autoComplete","onChange","onChangeUserName","target","prevUserAccount","onChangeUserPassword","onKeyDown","which","code","handlePressEnter","Register","SelectedDoctorExamining","listDoctor","setListDoctor","selectedDoctor","setSelectedDoctor","handleCreateCurrentDoctorExamining","toastId","currentDoctorExamining","warning","createCurrentDoctorExamining","success","setCurrentDoctorExamining","setOpenSelectedDoctorExaminingModal","handleGetGetListDoctor","length","getGetListDoctor","indexResponseListDoctor","setTimeout","openSelectedDoctorExaminingModal","handleCloseSelectedDoctorExaminingModal","marginBottom","PopperComponent","Popper","clientWidth","undefined","placement","getOptionLabel","renderOption","onSelectDoctor","disableClearable","popupIcon","AlertProcessing","openAlertProcessing","getListProvince","getListDistrict","provinceId","getListWard","districtId","getFullAddressByIdWard","codeWard","ManageInfoPantients","dataPatientInfoDefault","examinationId","weight","headCircumference","vaccination","patient","identifier","address","fullName","gender","fullNameMother","phoneMother","fullNameFather","phoneFather","dataPatientInfoErrorDefault","title","isError","openTooltip","focus","examiningSession","province","district","ward","listGender","genderOrder","genderName","genderValue","selectedAutoCompleteDefault","openOption","typingRef","useRef","dateFieldRef","dataPatientInfoNotEdit","setDataPatientInfoNotEdit","dataPatientInfo","setDataPatientInfo","dataPatientInfoError","setDataPatientInfoError","selectedAutoComplete","setSelectedAutoComplete","listExaminingSession","setListExaminingSession","listProvince","setListProvince","listDistrict","setListDistrict","list","listWard","setListWard","focusField","setFocusField","setOpenAlertProcessing","tooltipTheme","createTheme","components","MuiTooltip","defaultProps","arrow","componentsProps","tooltip","bgcolor","slotProps","popper","modifiers","name","offset","handleFocus","fieldName","prevSelectedAutoComplete","handleBlur","handleKeyDown","test","preventDefault","filterOptions","inputValue","lowercasedInput","toLowerCase","filter","lowercasedFullName","initials","word","join","includes","onChangeDOBToGetExaminingSession","responseListMedicalExaminationsGiveRegister","formattedDate","exams","handleCloseModalInfoPantients","prevListDistrict","prevListWard","setSelectedPantientInfo","setOpenModalInfoPantients","handleUpdateMedicalRegister","checkValidate","_dataPatientInfoError","isValid","Object","values","every","item","current","_","isEqual","updateMedicalRegister","setCompleteMedicalRegister","responseListProvince","handleGetListProvince","selectedPantientInfo","setIsContinueUpdateMedicalRegister","editPropsDataPatientInfo","cloneDeep","responseListDistrict","provinceCode","responseListWard","districtCode","selectedGender","find","indexListExamining","indexListProvince","indexListDistrict","indexListWard","wardCode","handleApplyPantientDataToField","openModalInfoPantients","isContinueUpdateMedicalRegister","pt","pb","flexWrap","ThemeProvider","Tooltip","marginTop","inputProps","maxLength","inputRef","input","defaultValue","takenValue","clearInterval","prevDataPatientsRegister","onChangeIdentifier","prevDataPatientInfo","onChangeFullName","onSelectGender","onFocus","onBlur","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DemoContainer","DatePicker","format","moment","disableFuture","disableOpenPicker","textField","_d","today","yearsDifference","getFullYear","monthsDifference","getMonth","daysDifference","getDate","age","totalMonths","totalDays","isNaN","onChangeDOB","noOptionsText","onSelectExaminingSession","size","onSelectProvine","onSelectDistrict","onSelectWard","onChangeAddress","onChangeFullNameMother","onChangePhoneMother","onChangeFullNameFather","onChangePhoneFather","onChangeHeight","onChangeWeight","onChangeHeadCircumference","FormControlLabel","control","Checkbox","checked","onChangeVaccination","bool","DialogActions","ListPatientsRegister","activeChip","setActiveChip","chipOrder","chipLabel","listPantientChipState","setListPantientChipState","chipContent","listDataPatientsRegister","setListDataPatientsRegister","listDataPatientsAppointmentsToday","setListDataPatientsAppointmentsToday","searchPatientsQuery","setSearchPatientsQuery","listDataPatientsRegisterState","setListDataPatientsRegisterState","listDataPatientsRegisterSort","setListDataPatientsRegisterSort","searchPatients","patients","searchTerm","lowerCaseSearchTerm","patientObj","handleGetRegistersByDateNow","responseGetAppointmentsToday","getAppointmentsToday","_listDataPatientsAppointmentsToday","updatedList","patientFullName","dateOfBirth","fullAddress","nextExamId","listPantientRegisterWaiting","patientsRegisterItem","listCountState","listPantientRegisterDone","setComponent1Loading","keyCode","document","addEventListener","removeEventListener","completeMedicalRegister","Skeleton","EditIcon","border","boxShadow","pantientChipStateItem","pantientChipStateIndex","Badge","badgeContent","Chip","handleSelectedChip","chipIndex","placeholder","handleSearchPantient","startAdornment","SearchIcon","TableContainer","Paper","overflowX","borderBottomLeftRadius","borderBottomRightRadius","Table","stickyHeader","minWidth","TableHead","TableRow","TableCell","align","TableBody","patientsRegisterSortItem","patientsRegisterSortIndex","hover","role","onDoubleClick","responseVaccinationByPatientId","dataPantientOldOldDiseaseRegister","oldDisease","medicalTypeId","setDataPantientAppointmentsToday","handleSelectedPantientAppointmentsToday","handleSelectedPantientInfo","order","whiteSpace","overflow","textOverflow","ExaminingSession","isConfirmOpen","setIsConfirmOpen","onChangeRadioSelect","handleOpenConfirm","isAppointment","setIsContinueSelectedExaminingSession","setOpenModalExaminingSession","handleResetField","handleMedicalRegister","openModalExaminingSession","handleListMedicalExaminationsGiveRegister","isContinueSelectedExaminingSession","monthsOfAge","Grid","container","rowSpacing","xs","oldExams","oldExamItem","oldExamIndex","RadioGroup","examItem","examIndex","Radio","disabled","OldDisease","dataPatientsForSearchOldDiseaseDefault","phone","dataPatientsForSearchOldDiseaseErrorDefault","listFoundOldDisease","setListFoundOldDisease","dataPatientsForSearchOldDisease","setDataPatientsForSearchOldDisease","dataPatientsForSearchOldDiseaseError","setDataPatientsForSearchOldDiseaseError","selectedRowIndex","setSelectedRowIndex","formRef","tableRef","handleEnterPress","_dataPatientsForSearchOldDiseaseError","handleCloseModalOldDisease","setOpenModalOldDisease","handleFindOldDisease","validate","getListOldDisease","reset","querySelectorAll","forEach","dispatchEvent","Event","bubbles","handleApplyDataPatientOldDisease","foundOldDiseaseItem","setDataPatientsRegister","openModalOldDisease","ref","autoFocus","prevDataPatientsForSearchOldDisease","onChangePatientId","date","onChangeDayOfBirth","onChangePhone","tabIndex","prevIndex","Math","min","max","handleTableKeyDown","foundOldDiseaseIndex","selected","BookMedical","dataPatientsRegisterDefault","autocompleteValueDefault","medicalType","dataPatientsRegisterErrorDefault","listMedicalType","medicalTypeOrder","medicalTypeName","dataPatientsRegisterError","setDataPatientsRegisterError","autocompleteValue","setAutocompleteValue","firstFocusRef","replaceSpecialCharacters","str","replace","normalizedInput","prevAutocompleteValue","_dataPatientsRegisterError","dataPantientAppointmentsToday","handleMedicalBackRegister","responseCreateMedicalBackRegister","handleOpenModalOldDisease","getElementById","_autocompleteValue","indexListGender","indexListMedicalType","handleApplyPantientOldDiseaseData","handleApplyPantientAppointmentsTodayData","onF2Press","setOnF2Press","onF4Press","setOnF4Press","onF8Press","setOnF8Press","minHeight","PopperProps","WebkitTextFillColor","InputLabelProps","shrink","DateField","disablePortal","onSelectMedicalType","paddingLeft","paddingRight","multiline","rows","onChangeReason","MainMedicalRegister","component1Loading","currentDoctorExaminingDefault","setHandleResetField","handleOpenModalExaminingSession","setHandleOpenModalExaminingSession","setHandleOpenModalOldDisease","handleGetCurrentDoctorExamining","marginLeft","MainAppointmentExamining","listPantientAppointmentChipState","listAppointment","setListAppointment","listDataPatientsAppointmentPaginate","setListDataPatientsAppointmentPaginate","listDataPatientsAppointmentState","setListDataPatientsAppointmentState","listDataPatientsAppointmentSort","setListDataPatientsAppointmentSort","page","setPage","pageCount","setPageCount","handlePaginate","calculatedPageCount","ceil","startIndex","newCurrentItems","slice","handleAcceptReExamining","responseUpdateStateAppointment","responseGetAppointmentsNextWeek","_listAppointmentNotRemind","_listAppointmentAcceptReExamining","_listAppointmentRejectReExamining","updateListPantientAppointmentChipState","handleRejectReExamining","handleGetAppointmentsNextWeek","pantientAppointmentChipStateItem","pantientAppointmentChipStateIndex","dataPantientAppointmentItem","dataPantientAppointmentIndex","examNameOld","nextExamName","CheckIcon","CancelIcon","bottom","Pagination","count","handlePageChange","CompleteExamining","mainDataExaminingForConclusion","setMainDataExaminingForConclusion","textareaRef","classes","makeStyles","root","useStyles","handleCloseModalCompleteExamining","setOpenModalCompleteExamining","handleSetDataCompleteExamining","editDataExaminingForConclusion","clone","dataExaminingForConclusion","categories","categoriesItem","categoryContents","categoryContentsItem","categoryContentQuestions","responseAppointmentDate","medicalRegisterId","getAppointmentDate","isVaccination","nextVaccination","reminder","conclusion","setSelectionRange","handleAddMedicalBook","some","isPredecessor","categoryPres","categoriesHealthRecordExamining","isHealthRecord","responseAddMedicalBook","dataMedicalBook","createAddMedicalBook","handleCompleteExaminingForPantient","openModalCompleteExamining","List","categoriesIndex","categoryName","categoryContentsIndex","categoryContentTitle","questionItem","questionIndex","borderRight","categoryContentName","categoryContentQuestionType","CheckBoxIcon","lineHeight","categoryContentCheck","categoryContentText","borderTop","categoryContentQuestionName","categoryContentAnswer","TextareaAutosize","categoryContentNote","onChangeExaminingConclusion","prevMainDataExaminingForConclusion","disablePast","onChangeAppointmentDate","locale","PreviewLastExamining","previewDataExamining","setPreviewDataExamining","healthRecords","examinationName","timeUpdateState","medicakBook","nutritionals","vaccinationBook","loadingMedicalBook","setLoadingMedicalBook","openCollapsePredecessorItem","setOpenCollapsePredecessorItem","openCollapseMedicakBookItem","setOpenCollapseMedicakBookItem","prevDataExamining","responseMedicalBook","healthRecordsItem","newPredecessor","healthRecordsUpdate","newMedicalBook","medicalBookIdRecently","sort","a","b","categoryOrder","handleEditPrevDataExamining","predecessorItem","predecessorIndex","ListItemButton","prevOpen","newOpen","handleOpenPredecessorItem","ListItemIcon","transform","SendIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","predecessorItemCategoryContentsItem","predecessorItemCategoryContentsIndex","medicakBookItems","medicakBookIndex","handleOpenMedicakBookItem","medicakBookCategoryContentsItem","medicakBookCategoryContentsIndex","doctorFullName","MainDoctorExamining","dataPantientsReadyExaminingDefault","stt","patientsId","patientsName","patientsDOB","patientsMonthsOld","patientsGender","patientsHeight","patientsWeight","patientsHeadCircumference","patientsPhone","patientsAddress","isFormDirty","setIsFormDirty","dataPantientsReadyExamining","setDataPantientsReadyExamining","mainDataExamining","setMainDataExamining","setPrevDataExamining","openCollapseHealthRecords","setOpenCollapseHealthRecords","openCollapseHealthRecordsItem","setOpenCollapseHealthRecordsItem","categorySelectedExamining","setCategorySelectedExamining","contentCategorySelectedExamining","setContentCategorySelectedExamining","healthRecordsContents","setHealthRecordsContents","currentHealthRecordExamining","setCurrentHealthRecordExamining","currentContentExamining","setCurrentContentExamining","setDataExaminingForConclusion","oldDataPredecessor","setOldDataPredecessor","newDataPredecessor","setNewDataPredecessor","prevDataPredecessor","setPrevDataPredecessor","loadingPrevDataExamining","setLoadingPrevDataExamining","loadingPatient","setLoadingPatient","loadingInfoPatient","setLoadingInfoPatient","loadingCategoryExamining","setLoadingCategoryExamining","loadingContentsExamining","setLoadingContentsExamining","editExamining","index","sessionStorage","reDataPantientsReadyExamining","reMainDataExamining","reDataExaminingForConclusion","reCurrentHealthRecordExamining","rePrevDataPredecessor","reOldDataPredecessor","clear","handleReloadUIWhenExamining","handleAppyPantientData","handleGetMedicalDetailPatient","dataPantientItem","_dataPantientsReadyExamining","backRegister","handleSetMainDataExamining","editPrevDataExaminingCategoryPres","responseGetUpdatePredecessorItem","matchingPrevDataExamining","prevDataExaminingCategoryPresItem","isLock","content2","content1","categoryContentOrder","matchingContent1","isNullCategoryPres","responseGetUpdateMedicalBook","updateHealthRecordsCategoriesForConclusion","category","content","demoDataExaminingForConclusion","healthRecordsName","categoryPatients","editDataCategoryPresForConclusion","mainCategoryContentsExamining","editDataHealthRecordsForConclusion","categoryPresItem","categoryPresIndex","categoryPresOrder","handleGetCategoryReExamining","getUpdateMedicalBook","handleSetMainDataReExamining","responseGetUpdateMedicalBookData","updateCategoriesForConclusion","questions","allNull","q","responseGetUpdatePredecessor","editCategoryContents","itemCategoryContents","newCategoriesDemoDataExaminingForConclusion","createSelectedQuestionsValuePredecessorForReExamOrBackExam","categoryContentQuestion","findNewDataPredecessorCategoryOrder","newDataPredecessorCategoryPresItem","findNewDataPredecessorCategoryContents","newDataPredecessorCategoryContentsItem","newDataPredecessorcategoryContentQuestionsItem","categoryContentQuestionOrder","questionIndexRemove","splice","newDataPredecessorCategoryContents","newDataPredecessorCategoryPres","newCategoryPre","createSelectedQuestionsPredecessorForReExamOrBackExam","handleSaveNewDataPredecessor","saveNewDataPredecessor","findNewDataPredecessor","responseCreateAddPredecessor","_mainDataExamining","selectCategoryReExamining","handleSelectCategoryClick","responseDataExamining","getMedicalDetailPatient","categoryIncludeCotent","contentQuantity","editNewCategoryPreForContentCategorySelectedExamining","findHealthRecord","healthRecordsState","editHealthRecordsContent","categoryPatientsItem","categoryPatientsIndex","currentHealthRecordsContent","updateHealthRecordsContent","editDataHealthRecordsItemForConclusion","_dataExaminingForConclusion","dataHealthRecordsItemForConclusionItem","handleNoteCheckQuestionHealthRecords","_healthRecordsContents","createSelectedQuestionsExaminingForConclusion","currentCategory","questionOrder","isEditNote","removeSelectedQuestion","existingQuestion","question","categoryContentQuestionsItem","window","confirm","stringify","handleBeforeUnload","confirmationMessage","returnValue","unblock","block","handleUnload","handleCancelExamining","handleBeginExaminingForPantient","alert","handleBeginEditExaminingForPantient","dataPantientIndex","handleSelectPantientExamining","CheckCircleIcon","edge","findUpdatePredecessor","handleEditDataPredecessor","handleEditDataPredecessorForSaving","findOldDataPredecessorCategoryOrder","oldDataPredecessorItem","findNewDataPredecessorCategoryContentsItem","findOldDataPredecessorCategoryContentsItem","newQ","findNewDataPredecessorQuestionItem","contentCategoryContentsItem","removeOldDataPredecessorCategoryPres","BeenhereIcon","handleCancelEditDataPredecessor","findPrevDataPredecessorByCategoryName","prevDataPredecessorItem","removeCategoryPredecessor","handleSelectHealthRecords","healthRecordsContentsType","healthRecordsIndex","editCurrentHealthRecordExamining","handleSelectHealthRecordsItem","FiberManualRecordIcon","columnSpacing","sm","md","PinIcon","PersonIcon","MaleIcon","FemaleIcon","CalendarMonthIcon","InfoIcon","PhoneIcon","GiBodyHeight","GiWeightScale","TbRulerMeasure","VaccinesIcon","Home","handleAnswerCheckQuestionPredecessorForReExamOrBackExam","answer","_categorySelectedExamining","handleAnswerCheckQuestion","handleNoteCheckQuestionPredecessorForReExamOrBackExam","handleNoteCheckQuestion","handleNoteValueQuestionPredecessorForReExamOrBackExam","handleAnswerValueQuestion","DescriptionIcon","timeRegister","handleOpenHealthRecordsItem","handleAnswerCheckQuestionHealthRecords","handeOnChangePageHealthRecords","categoryIndex","_contentCategorySelectedExamining","handleOnChangePage","AppRoutes","HashRouter","Switch","App","Header","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2aAgDeA,MArCf,SAAoBC,GAEhB,OACIC,eAACC,IAAM,CAACC,WAAW,EAAMC,SAAU,KAAMC,KAAML,EAAMM,oBAAqBC,sBAAsB,EAAKC,SAAA,CACjGC,cAACC,IAAW,CAACC,GAAI,CAAEC,WAAY,SAAUC,SAAU,OAAQC,UAAW,SAAUC,MAAO,MAAOC,cAAe,aAAcR,SAAC,+CAC5HC,cAACQ,IAAU,CAACC,QAASA,IAAMlB,EAAMmB,wBAAuB,GAAQR,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACzGC,cAACc,IAAS,CAACV,SAAS,aAExBZ,eAACuB,IAAa,CAACC,UAAQ,EAACd,GAAI,CAACe,GAAI,OAAQC,GAAI,QAAQnB,SAAA,CACjDC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAC,mCAChEP,eAAC6B,IAAG,CAACnB,GAAI,CAACe,GAAI,MAAOC,GAAI,OAAOnB,SAAA,CAC5BC,cAACmB,IAAU,CAACjB,GAAI,CAACI,MAAO,QAASH,WAAY,UAAUJ,SAAC,iCACxDC,cAACmB,IAAU,CAAApB,SAAC,sFACZC,cAACmB,IAAU,CAACjB,GAAI,CAACI,MAAO,QAASH,WAAY,UAAUJ,SAAC,mEACxDC,cAACmB,IAAU,CAAApB,SAAC,iFACZC,cAACmB,IAAU,CAACjB,GAAI,CAACI,MAAO,QAASH,WAAY,UAAUJ,SAAC,6BACxDC,cAACmB,IAAU,CAAApB,SAAC,gTACZC,cAACmB,IAAU,CAACjB,GAAI,CAACI,MAAO,QAASH,WAAY,UAAUJ,SAAC,4CACxDC,cAACmB,IAAU,CAAApB,SAAC,mKAEpBC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAC,mBAChEP,eAAC6B,IAAG,CAACnB,GAAI,CAACe,GAAI,MAAOC,GAAI,OAAOnB,SAAA,CAC5BC,cAACmB,IAAU,CAACjB,GAAI,CAACI,MAAO,QAASH,WAAY,UAAUJ,SAAC,sBACxDC,cAACmB,IAAU,CAAApB,SAAC,iFACZC,cAACmB,IAAU,CAAApB,SAAC,+EACZC,cAACmB,IAAU,CAAApB,SAAC,yEACZC,cAACmB,IAAU,CAACjB,GAAI,CAACI,MAAO,QAASH,WAAY,UAAUJ,SAAC,wFAIhEC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAC,eAKpF,E,6CC9Ce,MAA0B,iC,uICiB1BuB,MAXf,SAAiC/B,GAC7B,OACIS,cAACuB,IAAQ,CAACrB,GAAI,CAAEI,MAAO,OAAQkB,OAASC,GAAUA,EAAMD,OAAOE,OAAS,EAAGC,gBAAiBpC,EAAMqC,iBAAmB,qBAAuB,sBAAwBhC,KAAML,EAAMsC,4BAA4B9B,SACxMP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAUjC,SAAA,CACtEC,cAACiC,IAAgB,CAAC3B,MAAM,YACxBN,cAACmB,IAAU,CAACjB,GAAI,CAACgC,GAAI,KAAOd,QAAQ,YAAWrB,SAAER,EAAM4C,iBAIvE,E,iBCbA,MAAMC,EAAa,gCAEbC,EAAeA,KACnB,MAAMC,EAAQC,aAAaC,QAAQ,OAOnC,MALe,CACbC,QAAS,CACPC,cAAc,UAADC,OAAYL,IAGhB,ECVTF,EAAa,gCAEbC,EAAeA,KACjB,MAAMC,EAAQC,aAAaC,QAAQ,OAOnC,MALe,CACbC,QAAS,CACPC,cAAc,UAADC,OAAYL,IAGhB,EAGXM,EAAwBC,UAC1B,MAAMP,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAMC,KAAK,GAADJ,OAAIP,EAAU,yBAAyBY,EAAsB,CAChFP,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAGhCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGAG,EAA4BR,UAC9B,MAAMP,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAMC,KAAK,GAADJ,OAAIP,EAAU,6BAA6BY,EAAsB,CACpFP,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAGhCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAsBAI,EAAuBT,UACzB,MAAMP,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAMC,KAAK,GAADJ,OAAIP,EAAU,+BAA+BmB,EAChE,CACId,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAIpCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAqBAM,EAAwBX,UAC1B,MAAMY,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,sCAAsCqB,GACzER,MAAK,SAAUC,GACZ,OAAOA,EAASS,IACpB,IACCR,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASU,MAC1B,GAAE,EAGAC,EAAyChB,UAC3C,MAAMY,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,wDAAAO,OAAuDmB,GAAcL,GACxGR,MAAK,SAAUC,GACZ,OAAOA,EAASS,IACpB,IACCR,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASU,MAC1B,GAAE,EAcAG,GAA4BlB,UAC9B,MAAMY,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,2CAAAO,OAA0CqB,GAAaP,GAC1FR,MAAK,SAAUC,GACZ,OAAOA,EAASS,IACpB,IACCR,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASU,MAC1B,GAAE,EAGAK,GAA4BpB,UAC9B,MAAMY,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,mCAAmCqB,GACtER,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASU,MAC1B,GAAE,EAcAM,GAAiBrB,UACnB,MAAMY,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,+CAAAO,OAA8CwB,GAAiBV,GAClGR,MAAK,SAAUC,GACZ,OAAOA,EAASS,IACpB,IACCR,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGAkB,GAAuBvB,UACzB,MAAMY,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,sCAAAO,OAAqCqB,GAAaP,GACrFR,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAyBAmB,GAA0BxB,UAC5B,MAAMY,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,wCAAwCqB,GAC3ER,MAAK,SAAUC,GACZ,OAAOA,EAASS,IACpB,IACCR,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASU,MAC1B,GAAE,EA8BAU,GAAqBzB,MAAO0B,EAAIC,KAClC,MAAMlC,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAM2B,IAAI,GAAD9B,OAAIP,EAAU,gCAAAO,OAA+B4B,EAAE,WAAA5B,OAAU6B,GAAS,CAAC,EAAG,CACxF/B,QAAS,CACL,eAAgB,4BAChBC,cAAc,UAADC,OAAYL,MAGhCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGAwB,GAAyB7B,MAAOsB,EAAeQ,EAAiBC,KAClE,MAAMtC,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAM2B,IAAI,GAAD9B,OAAIP,EAAU,wCAAAO,OAAuCwB,EAAa,qBAAAxB,OAAoBgC,EAAe,sBAAAhC,OAAqBiC,GAAoB,CAAC,EAAG,CACpKnC,QAAS,CACL,eAAgB,4BAChBC,cAAc,UAADC,OAAYL,MAGhCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EChRA2B,GAAcC,IAAMC,cAAc,MAElCC,GAAeC,IAAmB,IAAlB,SAAElF,GAAUkF,EAE9B,MAAMC,EAAc,CAChBC,iBAAiB,EACjBC,SAAS,EACT9C,MAAO,KAGJ+C,EAAMC,GAAWC,mBAASL,IAE1BM,EAASC,GAAcF,oBAAS,IAEhCG,EAAcC,GAAmBJ,oBAAS,IAC1CK,EAAeC,GAAoBN,oBAAS,IAC5CO,EAAWC,GAAgBR,mBAAS,OAEpC1D,EAA6BmE,GAAkCT,oBAAS,GAmBzEU,EAAaA,KACfN,GAAgB,GAChBE,GAAiB,GACjBE,EAAa,KAAK,EAWhBG,EAAYrD,UACdmD,GAA+B,GAC/B,MAAM9C,OFnCOL,WACnB,MAAMY,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,iCAAiCqB,GACpER,MAAK,SAAUC,GACd,OAAOA,EAASS,IAClB,IACCR,OAAM,SAAUC,GACf,OAAOA,EAAMF,SAASU,MACxB,GAAE,EE2B2BuC,GACvB,GAA6B,WAA1BjD,EAASkD,aAA0B,CAClC,MAAMC,QAAuCpC,KACA,MAA1CoC,EAA+BzC,OAC9B0B,EAAQ,CACJH,iBAAiB,EACjBC,SAAS,EACTkB,OAAQpD,EAASoD,OACjBC,aAAcrD,EAASqD,aACvBH,aAAclD,EAASkD,aACvBI,yBAA0BtD,EAASoD,SAAWD,EAA+B1C,KAAK8C,eAItFnB,EAAQ,CACJH,iBAAiB,EACjBC,SAAS,EACTkB,OAAQpD,EAASoD,OACjBC,aAAcrD,EAASqD,aACvBH,aAAclD,EAASkD,aACvBI,0BAA0B,GAGtC,MAEIlB,EAAQ,CACJH,iBAAiB,EACjBC,SAAS,EACTkB,OAAQpD,EAASoD,OACjBC,aAAcrD,EAASqD,aACvBH,aAAclD,EAASkD,eAG/BX,GAAW,GACXO,GAA+B,EAAM,EAWnCU,EAAiBA,KACnB,IAAIC,GAAS,EACTC,EAASrE,aAAaC,QAAQ,OAClC,GAAGoE,EAAO,CACN,IAAIC,EAZMvE,KACd,IACE,OAAOwE,KAAKC,MAAMC,KAAK1E,EAAM2E,MAAM,KAAK,IAC1C,CAAE,MAAOC,GACP,OAAO,IACT,GAOoBC,CAASP,GACrBQ,EAAe,IAAIC,KAEvB,OAAmB,IAAhBR,EAAUS,IAAaF,EAAYG,WAElChF,aAAaiF,WAAW,OACjBb,IAIPA,GAAS,EACFA,EAEf,CAEI,OAAOA,CACX,EAaJ,OAVAc,qBAAU,KACSf,IAEXR,IAGAZ,EAAQJ,EACZ,GACD,IAGC1F,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAAC6E,GAAY8C,SAAQ,CACjBC,MAAO,CAAEvC,OAAMG,UAASqC,eAvFZrC,IACpBC,KAAcD,EAAQ,EAsF0BsC,aAlH9BC,IAClBzC,EAAQ,IAAKyC,IACbtC,GAAW,EAAM,EAiHLuC,cA5FMA,KAClB1C,EAAQ,IAAKJ,GAAc,EA2FAQ,eAAcuC,aA9GvBC,IAClBvC,GAAgB,GAChBE,GAAiB,GACjBE,GAAa,IAAMmC,GAAgB,EA2GoBC,aAxGtCA,KACbrC,GAAWA,IACfD,GAAiB,GACjBI,GAAY,EAqGyDA,aAAYL,iBACvE7F,SACDA,IAGLC,cAACsB,EAAuB,CACpBO,4BAA6BA,EAC7BM,WAAY,8DAEjB,ECEIiG,6BAhIf,SAAgB7I,GAEd,MAAM,KAAE8F,EAAI,cAAE2C,EAAa,aAAEC,GAAiBI,qBAAWxD,IAEnDyD,EAAWC,wBACXC,EAAUC,wBAET5I,EAAqBa,GAA0B6E,oBAAS,IAGxDmD,EAAUC,GAAepD,mBAAS,MAEnCjD,EAAQC,aAAaC,QAAQ,OAE7B5C,EAAOgJ,QAAQF,GACfG,EAAeC,IACnBH,EAAYG,EAAMC,cAAc,EAG5BC,EAAcA,KAClBL,EAAY,KAAK,EAGbM,EAAgB,CACpB,CAAEC,IAAK,kBAAmBvJ,SAAU,QAASwJ,MAAO,+BAAgBC,KAAMpJ,cAACqJ,IAAiB,CAACnJ,GAAI,CAACE,SAAU,MAAQkJ,cAAeC,IAASC,GAAI,oBAChJ,CAAEN,IAAK,mBAAoBvJ,SAAU,OAAQwJ,MAAO,oBAAaC,KAAMpJ,cAACyJ,IAAc,CAACvJ,GAAI,CAACE,SAAU,MAAQkJ,cAAeC,IAASC,GAAI,sBAGtIE,EAAe,CACnB,CAAER,IAAK,YAAavJ,SAAU,QAASwJ,MAAO,oBAAaC,KAAMpJ,cAAC2J,IAAoB,CAACzJ,GAAI,CAACE,SAAU,MAAQkJ,cAAeC,IAASC,GAAI,sBAGtII,EAAc,CAClB,CAAEV,IAAK,cAAevJ,SAAU,OAAQwJ,MAAO,mBAAYC,KAAMpJ,cAAC6J,IAAY,CAAC3J,GAAI,CAACE,SAAU,MAAQkJ,cAAeC,IAASC,GAAI,gBAG7HM,EAAYC,GAAiBxE,mBAAS,IAOvCqC,GALmBoC,EAKKzK,EAAM+I,SAAS0B,SAJvBF,EAAWG,WAAUC,GAAUA,EAAOV,KAAOQ,KAD1CA,MAOzB,MAAMG,EAAeA,KACM,WAAtB9E,EAAKe,aACN6B,GAAa,KACX1F,aAAaiF,WAAW,OACxBQ,IACAW,EAAY,MACZH,EAAQ4B,KAAK,SAAS,KAKxB7H,aAAaiF,WAAW,OACxBQ,IACAW,EAAY,MACZH,EAAQ4B,KAAK,UACf,EAeF,OAZA3C,qBAAU,KACiB,YAAtBpC,EAAKe,aACN2D,EAAcd,GAEc,WAAtB5D,EAAKe,aACX2D,EAAcL,GAEc,UAAtBrE,EAAKe,cACX2D,EAAcH,EAChB,GACC,CAACvE,IAEqB,WAAtBiD,EAAS0B,SAERxK,eAAAkI,WAAA,CAAA3H,SAAA,CACEC,cAACqB,IAAG,CAACnB,GAAI,CAAEmK,MAAO,OAAQ1J,SAAU,QAASE,IAAK,GAAGd,SACnDC,cAACsK,IAAM,CAAAvK,SACLP,eAAC+K,IAAO,CAACrK,GAAI,CAACyB,gBAAiB,UAAW6I,OAAQ,QAAQzK,SAAA,CACxDC,cAACyK,IAAI,CAACjB,GAAG,IAAGzJ,SACVC,cAAC0K,IAAM,CAACC,IAAKC,EAAM1K,GAAI,CAAEmK,MAAO,GAAIG,OAAQ,GAAItI,GAAI,OAAQ2I,GAAI,OAAQC,GAAI,QAElD,IAAzBzF,EAAKF,iBAA4B7C,EAChC9C,eAAAkI,WAAA,CAAA3H,SAAA,CACEC,cAAC+K,IAAgB,CAACC,YAAU,EAACpD,MAAOA,EAClC1H,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,aAActJ,gBAAiB,UAAWuJ,SAAU,GAAGnL,SAC5F+J,EAAWqB,KAAIC,GACdpL,cAACqL,IAAsB,CAErBlC,MAAOiC,EAAWjC,MAClBC,KAAMgC,EAAWhC,KACjBE,cAAe8B,EAAW9B,cAC1BE,GAAI4B,EAAW5B,GACftJ,GAAI,CAACI,MAAO,OAAQX,SAAUyL,EAAWzL,WALpCyL,EAAWlC,SAUtBlJ,cAACsL,IAAM,CAAC7K,QAASoI,EAAa3I,GAAI,CAACI,MAAO,OAAQC,cAAe,QAAQR,SAAEsF,EAAKkB,eAChF/G,eAAC+L,IAAI,CAAC7C,SAAUA,EAAU9I,KAAMA,EAAM4L,QAASxC,EAAYjJ,SAAA,CACzDC,cAACyL,IAAQ,CAAA1L,SAAC,qCACVC,cAACyL,IAAQ,CAAChL,QAAS0J,EAAapK,SAAC,gCAEnCC,cAAC0L,IAAQ,CAACC,YAAY,2BAAYzL,GAAI,CAACI,MAAO,QAASF,SAAU,OAAQwL,OAAQ,WAAYnL,QAASA,IAAMC,GAAuB,QAGnIV,cAAA0H,WAAA,CAAA3H,SACEP,eAAC6B,IAAG,CAACnB,GAAI,CAACS,SAAU,WAAYC,MAAO,IAAIb,SAAA,CACzCC,cAACuJ,IAAO,CAACsC,OAAK,EAACrC,GAAG,SAAQzJ,SAACC,cAACsL,IAAM,CAACpL,GAAI,CAACK,cAAe,OAAQD,MAAO,QAAQP,SAAC,+BAC/EC,cAAC0L,IAAQ,CAACC,YAAY,2BAAYzL,GAAI,CAACI,MAAO,QAASF,SAAU,OAAQwL,OAAQ,WAAYnL,QAASA,IAAMC,GAAuB,iBAQnJV,cAACV,EAAU,CAACO,oBAAqBA,EAAqBa,uBAAwBA,OAK3EV,cAAA0H,WAAA,GAEX,ICjIeoE,OAlBQvM,GACPgD,aAAaC,QAAQ,OAI/BxC,cAAA0H,WAAA,CAAA3H,SACEC,cAAC+L,QAAK,CAACC,KAAMzM,EAAMyM,KAAMC,UAAW1M,EAAM0M,cAM5CjM,cAAA0H,WAAA,CAAA3H,SACEC,cAACkM,WAAQ,CAAC1C,GAAG,a,OCON2C,OArBCA,KACd,IAAI3D,EAAUC,uBAId,OACEzI,cAAA,OAAAD,SACEP,eAAA,OAAK4M,UAAU,UAASrM,SAAA,CACtBC,cAAA,MAAIoM,UAAU,QAAOrM,SAAC,QACtBC,cAAA,OAAKoM,UAAU,OAAMrM,SAAC,0DAGtBC,cAAA,OAAAD,SACEC,cAAA,KAAGoM,UAAU,YAAY3L,QAASA,KAVxC+H,EAAQ4B,KAAK,IAU8C,EAAArK,SAAC,uBAKtD,E,4FC0CKsM,OAjDQ9M,IACnB,MAAO+M,EAAcC,GAAmBhH,oBAAS,GAI3CiH,EAA2BA,CAAC1D,EAAO2D,KACpCA,GAAqB,kBAAXA,GAIXlN,EAAMmN,sBAAqB,EAC7B,EAQF,OACI1M,cAAA0H,WAAA,CAAA3H,SACEP,eAACC,IAAM,CAACE,SAAU,KAAMD,WAAW,EAAME,KAAML,EAAMoN,kBAAmBnB,QAASA,CAAC1C,EAAO2D,IAAWD,EAAyB1D,EAAO2D,GAAS3M,sBAAsB,EAAKC,SAAA,CACtKC,cAACC,IAAW,CAACC,GAAI,CAAE0M,EAAG,EAAGC,EAAG,IAAK1M,WAAY,SAAUC,SAAU,QAASL,SAAC,+BAC3EC,cAACQ,IAAU,CAACC,QAASA,IAAM+L,IAA2BtM,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACjGC,cAACc,IAAS,CAACV,SAAS,aAEtBZ,eAACuB,IAAa,CAACC,UAAQ,EAAAjB,SAAA,CACrBC,cAAC8M,KAAS,CAAC3D,MAAM,iBAAS/H,QAAQ,WAAWlB,GAAI,CAAEmK,MAAO,OAAQQ,GAAI,OACtE7K,cAAC8M,KAAS,CAAC3D,MAAM,oBAAY/H,QAAQ,WAAWlB,GAAI,CAAEmK,MAAO,OAAQQ,GAAI,OACzE7K,cAAC8M,KAAS,CAAC3D,MAAM,qBAAW/H,QAAQ,WAAW2L,KAAMT,EAAe,OAAS,WAAYpM,GAAI,CAAEmK,MAAO,OAAQQ,GAAI,KAChHmC,WAAY,CACVC,aACEjN,cAACkN,KAAc,CAACvM,SAAS,MAAKZ,SAC5BP,eAACgB,IAAU,CAACC,QA9BE0M,IAAMZ,GAAiBD,GA8BSpM,GAAI,CAACkN,QAAS,OAAOrN,SAAA,CAAC,IAAEuM,EAAetM,cAACqN,KAAc,IAAMrN,cAACsN,KAAiB,YAKpItN,cAACuN,KAAY,CAACC,QAxBP,CACf,CAACjJ,GAAI,IAAK6B,aAAc,kCACxB,CAAC7B,GAAI,IAAK6B,aAAc,mBAsBgB+E,KAAKsC,GAAWA,EAAOrH,eAAesH,YAAcC,GAAW3N,cAAC8M,KAAS,IAAKa,EAAQxE,MAAM,mBAAajJ,GAAI,CAAEmK,MAAO,UAAWQ,GAAI,OACrK7K,cAAC4N,KAAK,CAACC,QAAS,EAAGC,UAAU,SAAQ/N,SACnCC,cAACsL,IAAM,CAACpL,GAAI,CAAEsK,OAAQ,MAAOH,MAAO,QAAUjJ,QAAQ,YAAYd,MAAM,UAAUyN,MAAO,CAAEC,OAAQ,QAAUvN,QAASA,IAAM+L,IAA2BzM,SAAC,wCAK7J,EC6GIkO,OA9IDA,KACV,MAAM,KAAE5I,EAAI,eAAEwC,EAAc,aAAEC,GAAiBO,qBAAWxD,IACpD2D,EAAUC,wBAET5G,EAA6BmE,GAAkCT,oBAAS,IAExE2I,EAAaC,GAAkB5I,mBAAS,CAACe,OAAQ,GAAI8H,SAAU,MAC/DzB,EAAmBD,GAAwBnH,oBAAS,IACpD+G,EAAcC,GAAmBhH,oBAAS,GAsB3C8I,EAAcxL,UAChB,GAA4B,KAAzBqL,EAAYI,SACXC,IAAMnL,MAAM,wDAEX,GAA4B,KAAzB8K,EAAYE,SAChBG,IAAMnL,MAAM,wDAEZ,CACA4C,GAA+B,GAC/B,MAAM9C,OPlDAL,OAAOyD,EAAQ8H,UAClBtL,IAAMC,KAAK,GAADJ,OAAIP,EAAU,0BAA0B,CAAEkE,SAAQ8H,aACxEnL,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACf,OAAOA,EAAMF,QACf,IO2CiCsL,CAAUN,EAAY5H,OAAQ4H,EAAYE,UAEjE,GADApI,GAA+B,GACR,MAApB9C,EAASU,OACR2K,IAAMnL,MAAMF,EAASS,UAErB,CAEA,GADApB,aAAakM,QAAQ,MAAOvL,EAASS,KAAK+K,SAASpM,OACjB,WAA/BY,EAASS,KAAKyC,aAA0B,CACvC,MAAMC,QAAuCpC,KACA,MAA1CoC,EAA+BzC,OAC9BkE,EACI,CACI3C,iBAAiB,EACjBC,SAAS,EACTkB,OAAQpD,EAASS,KAAK2C,OACtBC,aAAcrD,EAASS,KAAK4C,aAC5BH,aAAclD,EAASS,KAAKyC,aAC5BI,yBAA0BtD,EAASS,KAAK2C,SAAWD,EAA+B1C,KAAK8C,eAK/FqB,EACI,CAAE3C,iBAAiB,EAAMC,SAAS,EAAMkB,OAAQpD,EAASS,KAAK2C,OAAQC,aAAcrD,EAASS,KAAK4C,aAAcH,aAAclD,EAASS,KAAKyC,aAAcI,0BAA0B,GAGhM,MAEIsB,EACI,CAAE3C,iBAAiB,EAAMC,SAAS,EAAMkB,OAAQpD,EAASS,KAAK2C,OAAQC,aAAcrD,EAASS,KAAK4C,aAAcH,aAAclD,EAASS,KAAKyC,eAIlH,YAA/BlD,EAASS,KAAKyC,aACboC,EAAQ4B,KAAK,oBAEsB,WAA/BlH,EAASS,KAAKyC,aAClBoC,EAAQ4B,KAAK,qBAGb5B,EAAQ4B,KAAK,IAErB,CACJ,GAoBJ,OAXA3C,qBAAU,KACFpC,IAAiC,IAAzBA,EAAKF,iBACbqD,EAAQ4B,KAAK,KAGH7H,aAAaC,QAAQ,QAE/BgG,EAAQ4B,KAAK,IACjB,GACD,IAGC5K,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAAC2O,KAAS,CAAChP,SAAS,KAAII,SACpBC,cAACqB,IAAG,CAACnB,GAAI,CAAEgC,GAAI,EAAG0M,aAAc,QAAS7O,SACrCP,eAAC6B,IAAG,CAACnB,GAAI,CAAE2M,EAAG,KAAM9M,SAAA,CAChBC,cAAC0K,IAAM,CAACC,IAAKC,EAAM1K,GAAI,CAAEmK,MAAO,IAAKG,OAAQ,IAAKqE,GAAI,OAAQ/D,GAAI,OAAQD,GAAI,KAC9E7K,cAACmB,IAAU,CAACjB,GAAI,CAAEG,UAAW,SAAUE,cAAe,YAAaJ,WAAY,SAAUC,SAAU,UAAWyK,GAAI,EAAGvK,MAAO,WAAac,QAAQ,KAAIrB,SAAC,kEACtJP,eAAC6B,IAAG,CAAC4K,UAAU,OAAO6C,aAAa,MAAMf,MAAO,CAAE1N,UAAW,UAAWN,SAAA,CACpEC,cAAC8M,KAAS,CAAC3D,MAAM,oBAAY/H,QAAQ,WAAWlB,GAAI,CAAEmK,MAAO,OAAQQ,GAAI,KAAOkE,SAAW7H,IAAM8H,OAlG/FpH,EAkGgHV,EAAE+H,OAAOrH,WAjG/IuG,GAAee,IACJ,IACAA,EACH5I,OAAQsB,MAJMA,KAkGgI,IAClI5H,cAAC8M,KAAS,CAAC3D,MAAM,qBAAW/H,QAAQ,WAAW2L,KAAMT,EAAe,OAAS,WAAYpM,GAAI,CAAEmK,MAAO,OAAQQ,GAAI,GAClHkE,SAAW7H,IAAMiI,OA3FXvH,EA2FgCV,EAAE+H,OAAOrH,WA1FnEuG,GAAee,IACJ,IACAA,EACHd,SAAUxG,MAJQA,KA2FgD,EAACwH,UAAYlI,GA3BjEA,KACN,KAAZA,EAAEmI,OAA2B,UAAXnI,EAAEoI,MACpBjB,GACJ,EAwB6FkB,CAAiBrI,GACtF8F,WAAY,CACRC,aACIjN,cAACkN,KAAc,CAACvM,SAAS,MAAKZ,SAC9BP,eAACgB,IAAU,CAACC,QA1GhB0M,IAAMZ,GAAiBD,GA0G2BpM,GAAI,CAACkN,QAAS,OAAOrN,SAAA,CAAC,IAAEuM,EAAetM,cAACqN,KAAc,IAAMrN,cAACsN,KAAiB,YAKxI9N,eAACoO,KAAK,CAACC,QAAS,EAAGC,UAAU,SAAQ/N,SAAA,CACjCC,cAACsL,IAAM,CAACpL,GAAI,CAAEsK,OAAQ,QAASH,MAAO,QAAUjJ,QAAQ,YAAY2M,MAAO,CAAEC,OAAQ,QAAUvN,QAAUyG,GAAMmH,IAActO,SAAC,6BAC9HP,eAAC2B,IAAU,CAACjB,GAAI,CAACG,UAAW,UAAWe,QAAQ,YAAWrB,SAAA,CAAC,sCAAmBC,cAAA,UAAQ+N,MAAO,CAACnC,OAAQ,WAAYnL,QAASA,IAAMiM,GAAqB,GAAM3M,SAAC,yCAOjLC,cAACwP,GAAQ,CACL7C,kBAAmBA,EAAmBD,qBAAsBA,IAGhE1M,cAACsB,EAAuB,CACpBO,4BAA6BA,EAA6BmE,+BAAgCA,EAC1F7D,WAAY,yCAEjB,E,kDC1BIsN,OAnHf,SAAiClQ,GAC7B,MAAOiG,EAASC,GAAcF,oBAAS,IAChCmK,EAAYC,GAAiBpK,mBAAS,KACtCqK,EAAgBC,GAAqBtK,mBAAS,MAoB/CuK,EAAqCjN,UACvC,GAAsB,OAAnB+M,EACCrB,IAAMnL,MAAM,uDAA8B,CAAC2M,QAAS,gBAGpD,GAAGxQ,EAAMyQ,uBAAuBvJ,eAAiBmJ,EAAetJ,OAC5DiI,IAAM0B,QAAQ,gGAAiD,CAACF,QAAS,iBAEzE,CACA,MAAM7M,OPReL,WACjC,MAAMP,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAMC,KAAK,GAADJ,OAAIP,EAAU,kCAAAO,OAAiC8D,GAClE,CAAC,EACD,CACIhE,QAAS,CACL,eAAgB,4BAChBC,cAAc,UAADC,OAAYL,MAIpCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EORiCgN,CAA6BN,EAAenJ,cACnE8H,IAAM4B,QAAQjN,EAASS,KAAM,CAACoM,QAAS,aACvCxQ,EAAM6Q,0BAA0BR,GAChCrQ,EAAM8Q,qCAAoC,EAC9C,CACJ,EAGEC,EAAyBzN,UAE3B,GADA4C,GAAW,GACc,IAAtBiK,EAAWa,OAAa,CACvB,MAAMrN,OR9BOL,WACvB,MAAMY,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,+BAA+BqB,GAClER,MAAK,SAAUC,GACd,OAAOA,EAASS,IAClB,IACCR,OAAM,SAAUC,GACf,OAAOA,EAAMF,SAASU,MACxB,GAAE,EQsB+B4M,GAEvB,GADAb,EAAczM,GACmC,KAA9C3D,EAAMyQ,uBAAuBvJ,aAAoB,CAChD,MAAMgK,EAA0BvN,EAAS+G,WAAUyF,GAAcA,EAAWpJ,SAAW/G,EAAMyQ,uBAAuBvJ,eACpHoJ,EAAkB3M,EAASuN,GAC/B,CACJ,KACI,CACA,MAAMA,EAA0Bf,EAAWzF,WAAUyF,GAAcA,EAAWpJ,SAAW/G,EAAMyQ,uBAAuBvJ,eACtHoJ,EAAkBH,EAAWe,GACjC,CACAC,YAAW,KACPjL,GAAW,EAAM,GAClB,IAAI,EASX,OANAgC,qBAAU,KACHlI,EAAMoR,kCACLL,GACJ,GACD,CAAC/Q,EAAMyQ,uBAAwBzQ,EAAMoR,mCAGpC3Q,cAAA0H,WAAA,CAAA3H,SACIP,eAACC,IAAM,CAACC,WAAW,EAAMC,SAAS,KAAKC,KAAML,EAAMoR,iCAAkCnF,QAASA,CAAC1C,EAAO2D,IAtD9DmE,EAAC9H,EAAO2D,KACjDA,GAAqB,kBAAXA,IAIToD,EAAkB,MAClBtQ,EAAM8Q,qCAAoC,GAC9C,EA+CqHO,CAAwC9H,EAAO2D,GAAS3M,sBAAsB,EAAKC,SAAA,CAChMC,cAACC,IAAW,CAACC,GAAI,CAAE0M,EAAG,EAAGC,EAAG,IAAK1M,WAAY,SAAUC,SAAU,QAASL,SAAER,EAAMyQ,uBAAuE,KAA9CzQ,EAAMyQ,uBAAuBvJ,aAAsB,4CAAyB,mCAAqB,OAC5MzG,cAACQ,IAAU,CAACC,QAASA,IAAMlB,EAAM8Q,qCAAoC,GAAOnQ,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACrHC,cAACc,IAAS,CAACV,SAAS,aAExBJ,cAACe,IAAa,CAACC,UAAQ,EAAAjB,SAClByF,EACGxF,cAAA,OAAK+N,MAAO,CAACjM,QAAS,OAAQmJ,eAAgB,UAAUlL,SACpDC,cAACiC,IAAgB,MAGrBjC,cAAA0H,WAAA,CAAA3H,SACIP,eAAC6B,IAAG,CAACnB,GAAI,CAACsK,OAAQ,QAAQzK,SAAA,CACtBC,cAACuN,KAAY,CACT3F,MAAOgI,EACP1P,GAAI,CAAC2Q,aAAc,QACnBrD,QAASkC,EACToB,gBA/EVvR,GACXS,cAAC+Q,KAAM,IAAKxR,EAAOwO,MAAO,CAAE1D,MAAO9K,EAAMmJ,SAAWnJ,EAAMmJ,SAASsI,iBAAcC,GAAaC,UAAU,iBA+EnFC,eAAiB1D,GAAWA,EAAOlH,aACnC6K,aAAcA,CAAC7R,EAAOkO,IAClBzN,cAAA,SAAQT,EAAKQ,SACR0N,EAAOlH,eAGhBwI,SAAUA,CAAC7H,EAAGU,IAlFvByJ,EAACnK,EAAGU,KACvBiI,EAAmB,CAAEtJ,aAAcqB,EAAMrB,aAAcE,aAAcmB,EAAMtB,QAAU,EAiFjC+K,CAAenK,EAAGU,GAC1C8F,YAAcC,GACV3N,cAAC8M,KAAS,IAAKa,EACXxE,MAAO,sCAGfmI,kBAAgB,EAChBC,UAAW,OAGfvR,cAAC4N,KAAK,CAACC,QAAS,EAAGC,UAAU,SAAQ/N,SACjCC,cAACsL,IAAM,CAACpL,GAAI,CAAEmK,MAAO,QAAUjJ,QAAQ,YAAYd,MAAM,UAAUyN,MAAO,CAAEC,OAAQ,QAChFvN,QAASA,IAAMqP,IAAqC/P,SAAC,0BAU7F,EClHeyR,OAff,SAAyBjS,GACrB,OACIS,cAAA0H,WAAA,CAAA3H,SACIC,cAACP,IAAM,CAACC,WAAW,EAAMC,SAAU,KAAMC,KAAML,EAAMkS,oBAAqB3R,sBAAsB,EAAKC,SACjGC,cAACe,IAAa,CAAAhB,SACVP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,SAAUlJ,cAAe,SAAUC,WAAY,UAAUjC,SAAA,CAChGC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,uCAMrE,E,wHClBA,MAAMqC,GAAa,gCAEbC,GAAeA,KACjB,MAAMC,EAAQC,aAAaC,QAAQ,OAOnC,MALe,CACbC,QAAS,CACPC,cAAc,UAADC,OAAYL,IAGhB,EAGXoP,GAAkB7O,UACpB,MAAMY,EAASpB,KACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,GAAU,oCAAoCqB,GACvER,MAAK,SAAUC,GACZ,OAAOA,EAASS,IACpB,IACCR,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASU,MAC1B,GAAE,EAGA+N,GAAkB9O,UACpB,MAAMY,EAASpB,KACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,GAAU,oDAAAO,OAAmDiP,GAAcnO,GACpGR,MAAK,SAAUC,GACZ,OAAOA,EAASS,IACpB,IACCR,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASU,MAC1B,GAAE,EAGAiO,GAAchP,UAChB,MAAMY,EAASpB,KACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,GAAU,gDAAAO,OAA+CmP,GAAcrO,GAChGR,MAAK,SAAUC,GACZ,OAAOA,EAASS,IACpB,IACCR,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASU,MAC1B,GAAE,EAGAmO,GAAyBlP,UAC3B,MAAMY,EAASpB,KACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,GAAU,+CAAAO,OAA8CqP,GAAYvO,GAC7FR,MAAK,SAAUC,GACZ,OAAOA,EAASS,IACpB,IACCR,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASU,MAC1B,GAAE,EC6+CSqO,OAlgDf,SAA6B1S,GAC3B,MAAM2S,EAAyB,CAC7BC,cAAe,GACf3H,OAAQ,GACR4H,OAAQ,GACRC,kBAAmB,GACnB5F,OAAQ,GACR6F,aAAa,EACb/N,GAAI,GACJgO,QAAS,CACPC,WAAY,GACZC,QAAS,GACTC,SAAU,GACV5O,WAAY,KACZkO,SAAU,GACVW,QAAQ,EACRC,eAAgB,GAChBC,YAAa,GACbC,eAAgB,GAChBC,YAAa,GACb/O,UAAW,KAITgP,EAA8B,CAClCR,WAAY,CAAES,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpEV,SAAU,CAAEO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClET,OAAQ,CAAEM,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEtP,WAAY,CAAEmP,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpEC,iBAAkB,CAAEJ,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC1EE,SAAU,CAAEL,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEG,SAAU,CAAEN,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEI,KAAM,CAAEP,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC9DX,QAAS,CAAEQ,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACjER,eAAgB,CAAEK,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACxEP,YAAa,CAAEI,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrEL,YAAa,CAAEE,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrE5I,OAAQ,CAAEyI,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEhB,OAAQ,CAAEa,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEf,kBAAmB,CAAEY,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,IAGvEK,EAAa,CACjB,CAACC,YAAa,EAAGC,WAAY,MAAOC,aAAa,GACjD,CAACF,YAAa,EAAGC,WAAY,UAAMC,aAAa,IAG5CC,EAA8B,CAClClB,OAAQ,CAAE/K,MAAO,KAAMkM,YAAY,GACnCT,iBAAkB,CAACzL,MAAO,KAAMkM,YAAY,EAAOtO,SAAS,GAC5D8N,SAAU,CAAE1L,MAAO,KAAMkM,YAAY,GACrCP,SAAU,CAAE3L,MAAO,KAAMkM,YAAY,GACrCN,KAAM,CAAE5L,MAAO,KAAMkM,YAAY,IAG7BC,EAAYC,iBAAO,MACnBC,EAAeD,iBAAO,OAErBxO,EAASC,GAAcF,sBAEvB2O,EAAwBC,GAA6B5O,sBACrD6O,EAAiBC,GAAsB9O,mBAAS2M,IAChDoC,EAAsBC,GAA2BhP,mBAASyN,IAE1DwB,EAAsBC,GAA2BlP,mBAASsO,IAE1Da,EAAsBC,GAA2BpP,mBAAS,KAC1DqP,EAAcC,GAAmBtP,mBAAS,KAC1CuP,EAAcC,GAAmBxP,mBAAS,CAACyP,KAAM,GAAIxP,SAAS,KAC9DyP,EAAUC,GAAe3P,mBAAS,CAACyP,KAAM,GAAIxP,SAAS,KAEtD2P,EAAYC,GAAiB7P,mBAAS,OAEtCkM,EAAqB4D,GAA0B9P,oBAAS,GAEzD+P,EAAeC,aAAY,CAC/BC,WAAY,CACVC,WAAY,CACVC,aAAc,CACZxE,UAAW,SACXyE,OAAO,EACPC,gBAAiB,CACfC,QAAS,CACP3V,GAAI,CACF4V,QAAS,YAGbH,MAAO,CACLzV,GAAI,CACFI,MAAO,aAIbyV,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN1I,QAAS,CACP2I,OAAQ,CAAC,GAAI,aAWzBC,EAAeC,IAEjB5B,EADe,WAAd4B,EACuBC,IACtBA,EAAyB3D,OAAOmB,YAAa,EACtC,IAAIwC,IAGO,qBAAdD,EACkBC,IACtBA,EAAyBjD,iBAAiBS,YAAa,EAChD,IAAIwC,IAGO,aAAdD,EACkBC,IACtBA,EAAyBhD,SAASQ,YAAa,EACxC,IAAIwC,IAGQ,aAAdD,EACiBC,IACtBA,EAAyB/C,SAASO,YAAa,EACxC,IAAIwC,IAIWA,IACtBA,EAAyB9C,KAAKM,YAAa,EACpC,IAAIwC,IAEf,EAGIC,EAAaA,CAAC3O,EAAOyO,KACZ,KAAVzO,GAA0B,eAAVA,GAuED,KAAVA,IACW,WAAdyO,EACD5B,GAAwB6B,IACtBA,EAAyB3D,OAAOmB,YAAa,EACtC,IAAIwC,MAGO,qBAAdD,EACN5B,GAAwB6B,IACtBA,EAAyBjD,iBAAiBS,YAAa,EAChD,IAAIwC,MAGO,aAAdD,EACN5B,GAAwB6B,IACxBA,EAAyBhD,SAASQ,YAAa,EACtC,IAAIwC,MAGO,aAAdD,EACN5B,GAAwB6B,IACtBA,EAAyB/C,SAASO,YAAa,EACxC,IAAIwC,MAGO,SAAdD,GACN5B,GAAwB6B,IACtBA,EAAyB9C,KAAKM,YAAa,EACpC,IAAIwC,MAGjB,EAGIE,EAAiB1N,IAChB,QAAQ2N,KAAK3N,EAAMI,MAAsB,cAAdJ,EAAMI,KAAqC,WAAdJ,EAAMI,KAAkC,cAAdJ,EAAMI,KAAqC,eAAdJ,EAAMI,KAAsC,QAAdJ,EAAMI,KAEtJJ,EAAM4N,gBACR,EAGIC,EAAgBA,CAACnJ,EAAOvI,KAAsB,IAApB,WAAE2R,GAAY3R,EAC5C,MAAM4R,EAAkBD,EAAWE,cAEnC,OAAOtJ,EAAQuJ,QAAOtJ,IACpB,MAAMuJ,EAAqBvJ,EAAOiF,SAASoE,cACrCG,EAAWxJ,EAAOiF,SAASzL,MAAM,KAAKkE,KAAI+L,GAAQA,EAAK,KAAIC,KAAK,IAAIL,cAE1E,OAAQE,EAAmBI,SAASP,IAAoBI,EAASG,SAASP,EAAgB,GAC1F,EAkIEQ,EAAmCxU,UACvC4R,GAAwB6B,IACtBA,EAAyBjD,iBAAiBzL,MAAQ,KAC3C,IAAI0O,MAGb7B,GAAwB6B,IACtBA,EAAyBjD,iBAAiB7N,SAAU,EAC7C,IAAI8Q,MAGb,MAAMgB,QAAoDzT,EAAuC0T,GACjG5C,EAAwB2C,EAA4CE,OAEpE/C,GAAwB6B,IACtBA,EAAyBjD,iBAAiB7N,SAAU,EAC7C,IAAI8Q,KACX,EAobEmB,EAAgCA,CAAC3O,EAAO2D,KACzCA,GAAqB,kBAAXA,IAIXsI,GAAgB2C,IACdA,EAAiBlS,SAAU,EAC3BkS,EAAiB1C,KAAO,GACjB,IAAI0C,MAEbxC,GAAYyC,IACVA,EAAanS,SAAU,EACvBmS,EAAa3C,KAAO,GACb,IAAI2C,MAEbhD,EAAwB,IACxBF,EAAwBZ,GACxBQ,EAAmBnC,GACnBiC,EAA0B,IAC1BI,EAAwBvB,GACxBvN,GAAW,GACXlG,EAAMqY,0BACNrY,EAAMsY,2BAA0B,GAClC,EA2QIC,EAA8BjV,UAClC,GAzMoBkV,MAClB,MAAMC,EAAwB,IAAI1D,GAClC,IAAI2D,GAAU,EAmMd,MAjM6C,KAA1C3D,EAAqB9B,WAAWS,QAC9BiF,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBxF,WAAWY,OAAQ,EACzCgC,EAAc,eAEhB6C,GAAU,GAG4B,KAArC7D,EAAgB7B,QAAQG,WACzBsF,EAAsBtF,SAASO,MAAQ,8CACvC+E,EAAsBtF,SAASS,aAAc,EAC7C6E,EAAsBtF,SAASQ,SAAU,EACtCgF,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBtF,SAASU,OAAQ,EACvCgC,EAAc,aAEhB6C,GAAU,GAG0B,KAAnC7D,EAAgB7B,QAAQI,SACzBqF,EAAsBrF,OAAOM,MAAQ,iDACrC+E,EAAsBrF,OAAOO,SAAU,EACvC8E,EAAsBrF,OAAOQ,aAAc,EACxC+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBrF,OAAOS,OAAQ,EACrCgC,EAAc,WAEhB6C,GAAU,GAG8B,KAAvC7D,EAAgB7B,QAAQzO,aACzBkU,EAAsBlU,WAAWmP,MAAQ,4CACzC+E,EAAsBlU,WAAWoP,SAAU,EAC3C8E,EAAsBlU,WAAWqP,aAAc,EAC5C+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBlU,WAAWsP,OAAQ,EACrCa,EAAaqE,SACfrE,EAAaqE,QAAQlF,SAGzB6E,GAAU,GAGiC,KAA1C3D,EAAqBxQ,WAAWmP,QACjC+E,EAAsBlU,WAAWoP,SAAU,EACxCgF,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBlU,WAAWsP,OAAQ,EACrCa,EAAaqE,SACfrE,EAAaqE,QAAQlF,SAGzB6E,GAAU,GAGuC,OAAhDzD,EAAqBnB,iBAAiBzL,QACvCoQ,EAAsB3E,iBAAiBJ,MAAQ,wDAC/C+E,EAAsB3E,iBAAiBH,SAAU,EACjD8E,EAAsB3E,iBAAiBF,aAAc,EAClD+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsB3E,iBAAiBD,OAAQ,EAC/CgC,EAAc,qBAEhB6C,GAAU,GAG+B,OAAxCzD,EAAqBlB,SAAS1L,QAC/BoQ,EAAsB1E,SAASL,MAAQ,kDACvC+E,EAAsB1E,SAASJ,SAAU,EACzC8E,EAAsB1E,SAASH,aAAc,EAC1C+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsB1E,SAASF,OAAQ,EACvCgC,EAAc,aAEhB6C,GAAU,GAG+B,OAAxCzD,EAAqBjB,SAAS3L,QAC/BoQ,EAAsBzE,SAASN,MAAQ,oDACvC+E,EAAsBzE,SAASL,SAAU,EACzC8E,EAAsBzE,SAASJ,aAAc,EAC1C+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBzE,SAASH,OAAQ,EACvCgC,EAAc,aAEhB6C,GAAU,GAG2B,OAApCzD,EAAqBhB,KAAK5L,QAC3BoQ,EAAsBxE,KAAKP,MAAQ,sDACnC+E,EAAsBxE,KAAKN,SAAU,EACrC8E,EAAsBxE,KAAKL,aAAc,EACtC+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBxE,KAAKJ,OAAQ,EACnCgC,EAAc,SAEhB6C,GAAU,GAG2B,KAApC7D,EAAgB7B,QAAQE,UACzBuF,EAAsBvF,QAAQQ,MAAQ,sDACtC+E,EAAsBvF,QAAQS,SAAU,EACxC8E,EAAsBvF,QAAQU,aAAc,EACzC+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBvF,QAAQW,OAAQ,EACtCgC,EAAc,YAEhB6C,GAAU,GAGkC,KAA3C7D,EAAgB7B,QAAQK,gBAAoE,KAA3CwB,EAAgB7B,QAAQO,iBAC1EkF,EAAsBpF,eAAeK,MAAQ,qDAC7C+E,EAAsBpF,eAAeM,SAAU,EAC/C8E,EAAsBpF,eAAeO,aAAc,EAChD+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBpF,eAAeQ,OAAQ,EAC7CgC,EAAc,mBAEhB6C,GAAU,GAG+B,KAAxC7D,EAAgB7B,QAAQM,aAA8D,KAAxCuB,EAAgB7B,QAAQQ,cACvEiF,EAAsBnF,YAAYI,MAAQ,iEAC1C+E,EAAsBnF,YAAYK,SAAU,EAC5C8E,EAAsBnF,YAAYM,aAAc,EAC7C+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBnF,YAAYO,OAAQ,EAC1CgC,EAAc,gBAEhB6C,GAAU,GAGmC,KAA5CD,EAAsBnF,YAAYI,QACnC+E,EAAsBnF,YAAYK,SAAU,EACzCgF,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBnF,YAAYO,OAAQ,EAC1CgC,EAAc,gBAEhB6C,GAAU,GAGmC,KAA5CD,EAAsBjF,YAAYE,QACnC+E,EAAsBjF,YAAYG,SAAU,EACzCgF,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBjF,YAAYK,OAAQ,EAC1CgC,EAAc,gBAEhB6C,GAAU,GAGkB,KAA3B7D,EAAgB5J,SACjBwN,EAAsBxN,OAAOyI,MAAQ,8CACrC+E,EAAsBxN,OAAO0I,SAAU,EACvC8E,EAAsBxN,OAAO2I,aAAc,EACxC+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBxN,OAAO4I,OAAQ,EACrCgC,EAAc,WAEhB6C,GAAU,GAGkB,KAA3B7D,EAAgBhC,SACjB4F,EAAsB5F,OAAOa,MAAQ,gDACrC+E,EAAsB5F,OAAOc,SAAU,EACvC8E,EAAsB5F,OAAOe,aAAc,EACxC+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsB5F,OAAOgB,OAAQ,EACrCgC,EAAc,WAEhB6C,GAAU,GAG6B,KAAtC7D,EAAgB/B,oBACjB2F,EAAsB3F,kBAAkBY,MAAQ,6DAChD+E,EAAsB3F,kBAAkBa,SAAU,EAClD8E,EAAsB3F,kBAAkBc,aAAc,EACnD+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsB3F,kBAAkBe,OAAQ,EAChDgC,EAAc,sBAEhB6C,GAAU,IAQ8C,IAAvDM,KAAEC,QAAQpE,EAAiBF,KAC5B3F,IAAM0B,QAAQ,iEAAgC,CAACF,QAAS,aACxDkI,GAAU,GAGZ1D,EAAwByD,GACjBC,CAAO,EAIbF,GAAgB,CACjB1C,GAAuB,GACvB,MAAMnS,OV76BkBL,WAC1B,MAAMP,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAM2B,IAAI,GAAD9B,OAAIP,EAAU,6BAA6BY,EAAsB,CACnFP,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAGhCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EUg6BuBuV,CAAsBrE,GACtB,MAApBlR,EAASU,QACV2K,IAAM4B,QAAQjN,EAASS,KAAM,CAACoM,QAAS,aACvCxQ,EAAMmZ,4BAA2B,GACjCjB,MAGAlJ,IAAMnL,MAAMF,EAASS,KAAM,CAACoM,QAAS,WACrCxQ,EAAMmZ,4BAA2B,GACjCjB,KAEFpC,GAAuB,EACzB,GAuBF,OApBA5N,qBAAU,KACmB,IAAxBmN,EAAarE,QA3RY1N,WAC5B,MAAM8V,QAA6BjH,KACnCmD,EAAgB8D,EAAqB,EA0RnCC,EACF,GACC,IAEHnR,qBAAU,KACLlI,EAAMsZ,uBACPtZ,EAAMuZ,oCAAmC,GA7RNjW,WACrCwS,GAAuB,GAEvB,MAAM0D,EAA2B,IAAI3E,GACrC2E,EAAyB5G,cAAgB5S,EAAMsZ,qBAAqB1G,cACpE4G,EAAyBvO,OAASjL,EAAMsZ,qBAAqBrO,OAC7DuO,EAAyB3G,OAAS7S,EAAMsZ,qBAAqBzG,OAC7D2G,EAAyB1G,kBAAoB9S,EAAMsZ,qBAAqBxG,kBACxE0G,EAAyBtM,OAASlN,EAAMsZ,qBAAqBpM,OAC7DsM,EAAyBzG,YAAc/S,EAAMsZ,qBAAqBvG,YAClEyG,EAAyBxU,GAAKhF,EAAMsZ,qBAAqBtU,GACzDwU,EAAyBxG,QAAQC,WAAajT,EAAMsZ,qBAAqBtG,QAAQC,WACjFuG,EAAyBxG,QAAQE,QAAUlT,EAAMsZ,qBAAqBtG,QAAQE,QAC9EsG,EAAyBxG,QAAQG,SAAWnT,EAAMsZ,qBAAqBtG,QAAQG,SAC/EqG,EAAyBxG,QAAQzO,WAAavE,EAAMsZ,qBAAqBtG,QAAQzO,WACjFiV,EAAyBxG,QAAQP,SAAWzS,EAAMsZ,qBAAqBtG,QAAQP,SAC/E+G,EAAyBxG,QAAQI,OAASpT,EAAMsZ,qBAAqBtG,QAAQI,OAC7EoG,EAAyBxG,QAAQK,eAAiBrT,EAAMsZ,qBAAqBtG,QAAQK,eACrFmG,EAAyBxG,QAAQM,YAActT,EAAMsZ,qBAAqBtG,QAAQM,YAClFkG,EAAyBxG,QAAQO,eAAiBvT,EAAMsZ,qBAAqBtG,QAAQO,eACrFiG,EAAyBxG,QAAQQ,YAAcxT,EAAMsZ,qBAAqBtG,QAAQQ,YAClFgG,EAAyBxG,QAAQvO,UAAYzE,EAAMsZ,qBAAqBtG,QAAQvO,UAEhFqQ,EAAmBkE,KAAES,UAAUD,IAC/B5E,EAA0BoE,KAAES,UAAUD,IAEtC,MAAM7V,QAAiB6O,GAAuBxS,EAAMsZ,qBAAqBtG,QAAQP,UAC3EiH,QAA6BtH,GAAgBzO,EAASgW,cAC5DnE,GAAgB2C,IACdA,EAAiB1C,KAAOiE,EACjB,IAAIvB,MAEb,MAAMyB,QAAyBtH,GAAY3O,EAASkW,cACpDlE,GAAYyC,IACVA,EAAa3C,KAAOmE,EACb,IAAIxB,MAEb,MAAML,QAAoDzT,EAAuCtE,EAAMsZ,qBAAqBtG,QAAQzO,YACpI6Q,EAAwB2C,EAA4CE,OAEpE,MAAM6B,EAAiB5F,EAAW6F,MAAK3G,GAAUA,EAAOiB,cAAgBrU,EAAMsZ,qBAAqBtG,QAAQI,SACrG4G,EAAqBjC,EAA4CE,MAAMvN,WAAUoJ,GAAoBA,EAAiB9O,KAAOhF,EAAMsZ,qBAAqB1G,gBACxJqH,EAAoB5E,EAAa3K,WAAUqJ,GAAYA,EAAShE,OAASpM,EAASgW,eAClFO,EAAoBR,EAAqBhP,WAAUsJ,GAAYA,EAASjE,OAASpM,EAASkW,eAC1FM,EAAgBP,EAAiBlP,WAAUuJ,GAAQA,EAAKlE,OAASpM,EAASyW,WAEhFlF,GAAyB6B,IACvBA,EAAyB3D,OAAO/K,MAAQyR,EACxC/C,EAAyBjD,iBAAiBzL,MAAQ0P,EAA4CE,MAAM+B,GACpGjD,EAAyBhD,SAAS1L,MAAQgN,EAAa4E,GACvDlD,EAAyB/C,SAAS3L,MAAQqR,EAAqBQ,GAC/DnD,EAAyB9C,KAAK5L,MAAQuR,EAAiBO,GAChDpD,KAGT7Q,GAAW,GACX4P,GAAuB,EAAM,EAsO3BuE,GACF,GACC,CAACra,EAAMsZ,uBAEVpR,qBAAU,KACLlI,EAAMsa,wBAA0Bta,EAAMua,kCAA+C,IAAZtU,IAC1EsS,IACAvY,EAAMuZ,oCAAmC,GAC3C,GACC,CAACvZ,EAAMua,gCAAiCtU,IAGzChG,eAAAkI,WAAA,CAAA3H,SAAA,CACEP,eAACC,IAAM,CAACC,WAAW,EAAMC,SAAS,KAAKC,KAAML,EAAMsa,uBAAwBrO,QAASA,CAAC1C,EAAO2D,IAAWgL,EAA8B3O,EAAO2D,GAAQ1M,SAAA,CAClJC,cAACC,IAAW,CAACC,GAAI,CAAE2M,EAAG,EAAG1M,WAAY,SAAUC,SAAU,OAAQC,UAAW,SAAUC,MAAO,QAASP,SAAC,mCACvGC,cAACQ,IAAU,CAACC,QAASA,IAAMgX,IAAiCvX,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACvGC,cAACc,IAAS,CAACV,SAAS,aAEtBJ,cAACe,IAAa,CAACC,UAAQ,EAACd,GAAI,CAAC6Z,GAAI,IAAKC,GAAI,KAAKja,SAC7CP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,gBAAiBgP,SAAU,OAAQhZ,GAAI,IAAKC,GAAI,IAAK2J,GAAI,IAAK9K,SAAA,CAEzGC,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqB9B,WAAWS,QAAarT,KAAM0U,EAAqB9B,WAAWW,YAAajC,UAAU,OAAMnR,SAC7JC,cAAC8M,KAAS,CAAC1J,OAA0D,IAA5CkR,EAAqB9B,WAAWU,QACvD/J,MAAM,4BAAe/H,QAAQ,WAC7BlB,GAAI,CAACmK,MAAO,MAAO,sBAAwB,CAAC+P,UAAW,UACvDC,WAAY,CAAEC,UAAW,IACzBC,SAAWC,GAAUA,GAAwB,eAAfrF,GAA+BqF,EAAMpH,QACnEqH,aAAcrG,EAAgB7B,QAAQC,WACtCzD,SAAW7H,GA95BGU,KAC1B,GAAa,KAAVA,EAAa,CACI,eAAfuN,GACDC,EAAc,MAGhB,MAAMsF,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAC7B,MAAMsH,EAAwB,IAAI1D,GAC/BoG,EAAWnK,OAAS,IACrByH,EAAsBxF,WAAWS,MAAQ,8DACzC+E,EAAsBxF,WAAWW,aAAc,EAC/C6E,EAAsBxF,WAAWU,SAAU,EAC3C8E,EAAsBxF,WAAWY,OAAQ,EACzCmB,EAAwByD,KAGxB3D,GAAmBuG,IACjBA,EAAyBrI,QAAQC,WAAakI,EACvC,IAAKE,MAGd5C,EAAsBxF,WAAWS,MAAQ,GACzC+E,EAAsBxF,WAAWW,aAAc,EAC/C6E,EAAsBxF,WAAWU,SAAU,EAC3C8E,EAAsBxF,WAAWY,OAAQ,EACzCmB,EAAwByD,GAC1B,GACC,IACL,KACI,CACgB,eAAf7C,GACDC,EAAc,MAGhB,MAAM4C,EAAwB,IAAI1D,GAClC0D,EAAsBxF,WAAWS,MAAQ,GACzC+E,EAAsBxF,WAAWW,aAAc,EAC/C6E,EAAsBxF,WAAWU,SAAU,EAC3C8E,EAAsBxF,WAAWY,OAAQ,EACzCmB,EAAwByD,EAC1B,GAi3B6B6C,CAAmB3T,EAAE+H,OAAOrH,aAKnD5H,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqB5B,SAASO,QAAarT,KAAM0U,EAAqB5B,SAASS,YAAajC,UAAU,MACnJ6E,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN1I,QAAS,CAAE2I,OAAQ,EAAE,IAAK,QAIhCpW,SAEFC,cAAC8M,KAAS,CAAC1J,OAAwD,IAA1CkR,EAAqB5B,SAASQ,QACrD/J,MAAM,iBAAS/H,QAAQ,WACvBlB,GAAI,CAACmK,MAAO,MAAO,sBAAwB,CAAC+P,UAAW,UACvDG,SAAWC,GAAUA,GAAwB,aAAfrF,GAA6BqF,EAAMpH,QACjEqH,aAAcrG,EAAgB7B,QAAQG,SACtC3D,SAAW7H,GAr4BCU,KACxB,MAAM8S,EAAa9S,EAEhBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAU7B,GATA2D,GAAmByG,IACnBA,EAAoBvI,QAAQG,SAAWgI,EAC9B,IAAII,MAGK,aAAf3F,GACDC,EAAc,MAGbd,EAAqB5B,SAASQ,QAAQ,CACvC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBtF,SAASO,MAAQ,GACvC+E,EAAsBtF,SAASS,aAAc,EAC7C6E,EAAsBtF,SAASQ,SAAU,EACzC8E,EAAsBtF,SAASU,OAAQ,EACvCmB,EAAwByD,EAC1B,IACC,IAAI,EA42BsB+C,CAAiB7T,EAAE+H,OAAOrH,aAKjD5H,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqB3B,OAAOM,QAAarT,KAAM0U,EAAqB3B,OAAOQ,YAAajC,UAAU,MAAKnR,SACpJC,cAACuN,KAAY,CACXrN,GAAI,CAACmK,MAAO,MAAO+P,UAAW,SAC9B5M,QAASiG,EACTtC,eAAiB1D,GAAWA,EAAOkG,WACnC/L,MAAO4M,EAAqB7B,OAAO/K,MACnCwJ,aAAcA,CAAC7R,EAAOkO,IACpBzN,cAAA,SAAQT,EAAKQ,SACV0N,EAAOkG,aAGZ5E,SAAUA,CAAC7H,EAAGU,IAnzBLoT,EAAC9T,EAAGU,KAezB,GAdkB,WAAfuN,GACDC,EAAc,MAGhBf,GAAmByG,IACjBA,EAAoBvI,QAAQI,OAAS/K,EAAMgM,YACpC,IAAIkH,MAGbrG,GAAyB6B,IACvBA,EAAyB3D,OAAO/K,MAAQA,EAClC,IAAI0O,MAGThC,EAAqB3B,OAAOO,QAAQ,CACrC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBrF,OAAOO,SAAU,EACvC8E,EAAsBrF,OAAOM,MAAQ,GACrC+E,EAAsBrF,OAAOQ,aAAc,EAC3C6E,EAAsBrF,OAAOS,OAAQ,EACrCmB,EAAwByD,EAC1B,GA6xBoCgD,CAAe9T,EAAGU,GAC1ChI,KAAM4U,EAAqB7B,OAAOmB,WAClCmH,QAASA,IAAM7E,EAAY,UAC3B8E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,UAC1C8F,YAAcC,GACZ3N,cAAC8M,KAAS,IAAKa,EACbxE,MAAM,oBACNoR,SAAWC,GAAUA,GAAwB,WAAfrF,GAA2BqF,EAAMpH,QAC/DhQ,OAAsD,IAAxCkR,EAAqB3B,OAAOO,UAG9C5B,kBAAgB,EAChBC,UAAW,WAKjBvR,cAACmb,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAIvb,SAClEC,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACub,KAAa,CAAC/F,WAAY,CAAC,cAAczV,SACxCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqBxQ,WAAWmP,QAAarT,KAAM0U,EAAqBxQ,WAAWqP,YAAYpT,SAC5IC,cAACqB,IAAG,CAACnB,GAAI,CAACmK,MAAO,KAAKtK,SACpBC,cAACwb,KAAU,CAACrS,MAAM,eAChBsS,OAAO,aAAahB,aAAciB,KAAOtH,EAAgB7B,QAAQzO,YACjE6X,eAAe,EAAMC,mBAAiB,EACtC7F,UAAW,CACT8F,UACE,CACEtB,SAAUtG,EACV7Q,OAA0D,IAA5CkR,EAAqBxQ,WAAWoP,QAC9CgI,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,gBAGhDmH,SAAWnH,GA35BX/E,WAClB,GAAG+E,EAAM,CACP,MAAM8S,EAAa9S,EAAMkU,GACtB/H,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAC7B,MAAMqL,EAAQ,IAAI1U,KACZ2U,EAAkBD,EAAME,cAAgBvB,EAAWuB,cACnDC,EAAmBH,EAAMI,WAAazB,EAAWyB,WACjDC,EAAiBL,EAAMM,UAAY3B,EAAW2B,UAC9CC,EAAMP,EAAME,cAAgBvB,EAAWuB,cAE7C,IAAIM,EAAgC,GAAlBP,EAAuBE,EACrCM,EAAYJ,EAEZA,EAAiB,IACnBG,GAAe,EACfC,GAAa,IAGf,MAAMxE,EAAwB,IAAI1D,GAElC,GAAGyH,EAAQrB,GAAc+B,MAAMH,IAAQC,EAAc,IAAuB,KAAhBA,GAAsBC,EAAY,GAC5FxE,EAAsBlU,WAAWmP,MAAQ,sFACzC+E,EAAsBlU,WAAWqP,aAAc,EAC/C6E,EAAsBlU,WAAWoP,SAAU,EAC3C8E,EAAsBlU,WAAWsP,OAAQ,EACzCmB,EAAwByD,OAGtB,CACF,MAAMT,EAAgBmE,KAAOhB,GAAYe,OAAO,cAChDpH,GAAmByG,IACjBA,EAAoBvI,QAAQzO,WAAayT,EAClC,IAAIuD,MAGb9C,EAAsBlU,WAAWmP,MAAQ,GACzC+E,EAAsBlU,WAAWqP,aAAc,EAC/C6E,EAAsBlU,WAAWoP,SAAU,EAC3C8E,EAAsBlU,WAAWsP,OAAQ,EACzCmB,EAAwByD,GAExBX,EAAiCE,EACnC,IACC,IACL,GA22BuCmF,CAAY9U,eAQ7C5H,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqBjB,iBAAiBJ,QAAarT,KAAM0U,EAAqBjB,iBAAiBF,YAAajC,UAAU,QAAOnR,SAC1KC,cAACuN,KAAY,CACXrN,GAAI,CAACmK,MAAO,MAAOnI,GAAI,SACvBsL,QAASkH,EACTiI,cAAenI,EAAqBnB,iBAAiB7N,QAAU,wBAAgB,GAC/E2L,eAAiB1D,GAAWA,EAAOyI,KACnCtO,MAAO4M,EAAqBnB,iBAAiBzL,MAC7CwJ,aAAcA,CAAC7R,EAAOkO,IACpBzN,cAAA,SAAQT,EAAKQ,SACV0N,EAAOyI,OAGZnH,SAAUA,CAAC7H,EAAGU,IAh1BKgV,EAAC1V,EAAGU,KAenC,GAdkB,qBAAfuN,GACDC,EAAc,MAGhBf,GAAmByG,IACjBA,EAAoB3I,cAAgBvK,EAAMrD,GACnC,IAAIuW,MAGbrG,GAAyB6B,IACvBA,EAAyBjD,iBAAiBzL,MAAQA,EAC5C,IAAI0O,MAGThC,EAAqBjB,iBAAiBH,QAAQ,CAC/C,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsB3E,iBAAiBH,SAAU,EACjD8E,EAAsB3E,iBAAiBJ,MAAQ,GAC/C+E,EAAsB3E,iBAAiBF,aAAc,EACrD6E,EAAsB3E,iBAAiBD,OAAQ,EAC/CmB,EAAwByD,EAC1B,GA0zBoC4E,CAAyB1V,EAAGU,GACpDhI,KAAM4U,EAAqBnB,iBAAiBS,WAC5CmH,QAASA,IAAM7E,EAAY,oBAC3B8E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,oBAC1C8F,YAAcC,GACZ3N,cAAC8M,KAAS,IAAKa,EACbxE,MAAM,kBACNoR,SAAWC,GAAUA,GAAwB,qBAAfrF,GAAqCqF,EAAMpH,QACzEhQ,OAAgE,IAAlDkR,EAAqBjB,iBAAiBH,QACpDhT,GAAI,CAAC,yKAA0K,CAACe,GAAI,MAAOC,GAAI,QAC/L8L,WAAY,IACPW,EAAOX,WACVC,aACEzN,eAAAkI,WAAA,CAAA3H,SAAA,CACGyU,EAAqBnB,iBAAiB7N,QAAUxF,cAACiC,IAAgB,CAAC3B,MAAM,UAAUuc,KAAM,KAAS,KACjGlP,EAAOX,WAAWC,mBAM7BqE,kBAAgB,EAChBC,UAAW,WAKjBvR,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqBhB,SAASL,QAAarT,KAAM0U,EAAqBhB,SAASH,YAAajC,UAAU,OAAMnR,SACzJC,cAACuN,KAAY,CACXrN,GAAI,CAACmK,MAAO,MAAOnI,GAAI,GACvBsL,QAASoH,EACT+B,cAAeA,EACfxF,eAAiB1D,GAAWA,EAAOyI,KACnCtO,MAAO4M,EAAqBlB,SAAS1L,MACrCwJ,aAAcA,CAAC7R,EAAOkO,IACpBzN,cAAA,SAAQT,EAAKQ,SACV0N,EAAOyI,OAGZnH,SAAUA,CAAC7H,EAAGU,IA/1BJ/E,OAAOqE,EAAGU,KAwBhC,GAvBkB,aAAfuN,GACDC,EAAc,MAGhBX,GAAyB6B,IACvBA,EAAyBhD,SAAS1L,MAAQA,EACpC,IAAI0O,MAG+B,OAAxC9B,EAAqBjB,SAAS3L,OAC/B6M,GAAwB6B,IACtBA,EAAyB/C,SAAS3L,MAAQ,KACnC,IAAI0O,MAIwB,OAApC9B,EAAqBhB,KAAK5L,OAC3B6M,GAAwB6B,IACtBA,EAAyB9C,KAAK5L,MAAQ,KAC/B,IAAI0O,MAIZhC,EAAqBhB,SAASJ,QAAQ,CACvC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsB1E,SAASJ,SAAU,EACzC8E,EAAsB1E,SAASL,MAAQ,GACvC+E,EAAsB1E,SAASH,aAAc,EAC7C6E,EAAsB1E,SAASF,OAAQ,EACvCmB,EAAwByD,EAC1B,CAEA9C,GAAYyC,IACVA,EAAa3C,KAAO,GACb,IAAI2C,MAGb5C,GAAgB2C,IACdA,EAAiBlS,SAAU,EACpB,IAAIkS,MAGb,MAAMuB,QAA6BtH,GAAgB/J,EAAM0H,MACzDyF,GAAgB2C,IACdA,EAAiBlS,SAAU,EAC3BkS,EAAiB1C,KAAOiE,EACjB,IAAIvB,KACX,EA+yBkCoF,CAAgB5V,EAAGU,GAC3ChI,KAAM4U,EAAqBlB,SAASQ,WACpCmH,QAASA,IAAM7E,EAAY,YAC3B8E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,YAC1C8F,YAAcC,GACZ3N,cAAC8M,KAAS,IAAKa,EACbxE,MAAM,oBACNoR,SAAWC,GAAUA,GAAwB,aAAfrF,GAA6BqF,EAAMpH,QACjEhQ,OAAwD,IAA1CkR,EAAqBhB,SAASJ,UAGhD5B,kBAAgB,EAChBC,UAAW,WAKfvR,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqBf,SAASN,QAAarT,KAAM0U,EAAqBf,SAASJ,YAAajC,UAAU,MAAKnR,SACxJC,cAACuN,KAAY,CACXrN,GAAI,CAACmK,MAAO,MAAOnI,GAAI,GACvBsL,QAASsH,EAAaE,KACtB2H,cAAe7H,EAAatP,QAAU,wBAAgB,GACtDmR,cAAeA,EACfxF,eAAiB1D,GAAWA,EAAOyI,KACnCtO,MAAO4M,EAAqBjB,SAAS3L,MACrCwJ,aAAcA,CAAC7R,EAAOkO,IACpBzN,cAAA,SAAQT,EAAKQ,SACV0N,EAAOiF,WAGZ3D,SAAUA,CAAC7H,EAAGU,IA30BL/E,OAAOqE,EAAGU,KAiBjC,GAhBkB,aAAfuN,GACDC,EAAc,MAGhBX,GAAyB6B,IACvBA,EAAyB/C,SAAS3L,MAAQA,EACpC,IAAK0O,MAG0B,OAApC9B,EAAqBhB,KAAK5L,OAC3B6M,GAAwB6B,IACtBA,EAAyB9C,KAAK5L,MAAQ,KAC/B,IAAI0O,MAIZhC,EAAqBf,SAASL,QAAQ,CACvC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBzE,SAASL,SAAU,EACzC8E,EAAsBzE,SAASN,MAAQ,GACvC+E,EAAsBzE,SAASJ,aAAc,EAC7C6E,EAAsBzE,SAASH,OAAQ,EACvCmB,EAAwByD,EAC1B,CAEA9C,GAAYyC,IACVA,EAAanS,SAAU,EAChB,IAAImS,MAGb,MAAMwB,QAAyBtH,GAAYjK,EAAM0H,MACjD4F,GAAYyC,IACVA,EAAanS,SAAU,EACvBmS,EAAa3C,KAAOmE,EACb,IAAIxB,KACX,EAuyBoCoF,CAAiB7V,EAAGU,GAC5ChI,KAAM4U,EAAqBjB,SAASO,WACpCmH,QAASA,IAAM7E,EAAY,YAC3B8E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,YAC1C8F,YAAcC,GACZ3N,cAAC8M,KAAS,IAAKa,EACbxE,MAAM,uBACNoR,SAAWC,GAAUA,GAAwB,aAAfrF,GAA6BqF,EAAMpH,QACjEhQ,OAAwD,IAA1CkR,EAAqBf,SAASL,QAC5ClG,WAAY,IACPW,EAAOX,WACVC,aACEzN,eAAAkI,WAAA,CAAA3H,SAAA,CACG+U,EAAatP,QAAUxF,cAACiC,IAAgB,CAAC3B,MAAM,UAAUuc,KAAM,KAAS,KACxElP,EAAOX,WAAWC,mBAM7BqE,kBAAgB,EAChBC,UAAW,WAKjBvR,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqBd,KAAKP,QAAarT,KAAM0U,EAAqBd,KAAKL,YAAYpT,SAChIC,cAACuN,KAAY,CACXrN,GAAI,CAACmK,MAAO,MAAOnI,GAAI,GACvBsL,QAASyH,EAASD,KAClB2H,cAAe1H,EAASzP,QAAU,wBAAgB,GAClDmR,cAAeA,EACfxF,eAAiB1D,GAAWA,EAAOyI,KACnCtO,MAAO4M,EAAqBhB,KAAK5L,MACjCwJ,aAAcA,CAAC7R,EAAOkO,IACpBzN,cAAA,SAAQT,EAAKQ,SACV0N,EAAOiF,WAGZ3D,SAAUA,CAAC7H,EAAGU,IA50BToV,EAAC9V,EAAGU,KAevB,GAdkB,SAAfuN,GACDC,EAAc,MAGhBf,GAAmByG,IACjBA,EAAoBvI,QAAQP,SAAWpK,EAAM0H,KACtC,IAAKwL,MAGdrG,GAAyB6B,IACvBA,EAAyB9C,KAAK5L,MAAQA,EAC9B,IAAK0O,MAGZhC,EAAqBd,KAAKN,QAAQ,CACnC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBxE,KAAKN,SAAU,EACrC8E,EAAsBxE,KAAKP,MAAQ,GACnC+E,EAAsBxE,KAAKL,aAAc,EACzC6E,EAAsBxE,KAAKJ,OAAQ,EACnCmB,EAAwByD,EAC1B,GAszBsCgF,CAAa9V,EAAGU,GACxChI,KAAM4U,EAAqBhB,KAAKM,WAChCmH,QAASA,IAAM7E,EAAY,QAC3B8E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,QAC1C8F,YAAcC,GACZ3N,cAAC8M,KAAS,IAAKa,EACbxE,MAAM,yBACNoR,SAAWC,GAAUA,GAAwB,SAAfrF,GAAyBqF,EAAMpH,QAC7DhQ,OAAoD,IAAtCkR,EAAqBd,KAAKN,QACxClG,WAAY,IACPW,EAAOX,WACVC,aACEzN,eAAAkI,WAAA,CAAA3H,SAAA,CACGkV,EAASzP,QAAUxF,cAACiC,IAAgB,CAAC3B,MAAM,UAAUuc,KAAM,KAAS,KACpElP,EAAOX,WAAWC,mBAM7BqE,kBAAgB,EAChBC,UAAW,WAKjBvR,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqB7B,QAAQQ,QAAarT,KAAM0U,EAAqB7B,QAAQU,YAAajC,UAAU,QAAOnR,SACxJC,cAAC8M,KAAS,CAAC1J,OAAuD,IAAzCkR,EAAqB7B,QAAQS,QACpD/J,MAAM,yBAAU/H,QAAQ,WACxBlB,GAAI,CAACmK,MAAO,MAAO,sBAAwB,CAACnI,GAAI,IAChDqY,SAAWC,GAAUA,GAAwB,YAAfrF,GAA4BqF,EAAMpH,QAChEqH,aAAcrG,EAAgB7B,QAAQE,QACtC1D,SAAW7H,GAp1BFU,KACL,YAAfuN,GACDC,EAAc,MAGhB,MAAMsF,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAM7B,GALA2D,GAAmByG,IACjBA,EAAoBvI,QAAQE,QAAUiI,EAC/B,IAAKI,MAGXxG,EAAqB7B,QAAQS,QAAQ,CACtC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBvF,QAAQS,SAAU,EACxC8E,EAAsBvF,QAAQQ,MAAQ,GACtC+E,EAAsBvF,QAAQU,aAAc,EAC5C6E,EAAsBvF,QAAQW,OAAQ,EACtCmB,EAAwByD,EAC1B,IACC,IAAI,EA4zBwBiF,CAAgB/V,EAAE+H,OAAOrH,aAKhD5H,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqB1B,eAAeK,QAAarT,KAAM0U,EAAqB1B,eAAeO,YAAajC,UAAU,OAAMnR,SACrKC,cAAC8M,KAAS,CAAC1J,OAA8D,IAAhDkR,EAAqB1B,eAAeM,QAC3D/J,MAAM,yBAAY/H,QAAQ,WAC1BlB,GAAI,CAACmK,MAAO,MAAO,sBAAwB,CAACnI,GAAI,IAChDqY,SAAWC,GAAUA,GAAwB,mBAAfrF,GAAmCqF,EAAMpH,QACvEqH,aAAcrG,EAAgB7B,QAAQK,eACtC7D,SAAW7H,GAr0BKU,KACZ,mBAAfuN,GACDC,EAAc,MAGhB,MAAMsF,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAM7B,GALA2D,GAAmByG,IACjBA,EAAoBvI,QAAQK,eAAiB8H,EACtC,IAAKI,MAGXxG,EAAqB1B,eAAeM,QAAQ,CAC7C,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBpF,eAAeM,SAAU,EAC/C8E,EAAsBpF,eAAeK,MAAQ,GAC7C+E,EAAsBpF,eAAeO,aAAc,EACnD6E,EAAsBpF,eAAeQ,OAAQ,EAC7CmB,EAAwByD,EAC1B,IACC,IAAI,EA6yBwBkF,CAAuBhW,EAAE+H,OAAOrH,aAKvD5H,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqBzB,YAAYI,QAAarT,KAAM0U,EAAqBzB,YAAYM,YAAYpT,SAC9IC,cAAC8M,KAAS,CAAC1J,OAA2D,IAA7CkR,EAAqBzB,YAAYK,QACxD/J,MAAM,oCAAgB/H,QAAQ,WAC9BlB,GAAI,CAACmK,MAAO,MAAO,sBAAwB,CAACnI,GAAI,IAChDmY,WAAY,CAAEC,UAAW,IACzBC,SAAWC,GAAUA,GAAwB,gBAAfrF,GAAgCqF,EAAMpH,QACpEqH,aAAcrG,EAAgB7B,QAAQM,YACtC9D,SAAW7H,GAvzBEU,KAK3B,GAJkB,gBAAfuN,GACDC,EAAc,MAGH,KAAVxN,EAAa,CACd,MAAM8S,EAAa9S,EAEhBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAC7B,MAAMsH,EAAwB,IAAI1D,GAC/BoG,EAAWnK,OAAS,IACrByH,EAAsBnF,YAAYI,MAAQ,sEAC1C+E,EAAsBnF,YAAYM,aAAc,EAChD6E,EAAsBnF,YAAYK,SAAU,EAC5C8E,EAAsBnF,YAAYO,OAAQ,EAC1CmB,EAAwByD,KAIxB3D,GAAmByG,IACjBA,EAAoBvI,QAAQM,YAAc6H,EACnC,IAAII,MAGb9C,EAAsBnF,YAAYI,MAAQ,GAC1C+E,EAAsBnF,YAAYM,aAAc,EAChD6E,EAAsBnF,YAAYK,SAAU,EAC5C8E,EAAsBnF,YAAYO,OAAQ,EAE1C4E,EAAsBjF,YAAYE,MAAQ,GAC1C+E,EAAsBjF,YAAYI,aAAc,EAChD6E,EAAsBjF,YAAYG,SAAU,EAC5C8E,EAAsBjF,YAAYK,OAAQ,EAC1CmB,EAAwByD,GAC1B,GACC,GACL,KAEI,CACF,MAAMA,EAAwB,IAAI1D,GAClC0D,EAAsBnF,YAAYI,MAAQ,GAC1C+E,EAAsBnF,YAAYM,aAAc,EAChD6E,EAAsBnF,YAAYK,SAAU,EAC5C8E,EAAsBnF,YAAYO,OAAQ,EAC1CmB,EAAwByD,EAC1B,GAswB+BmF,CAAoBjW,EAAE+H,OAAOrH,OAC9CwH,UAAWoH,QAKjBxW,cAAC8M,KAAS,CACR3D,MAAM,qBAAa/H,QAAQ,WAAWlB,GAAI,CAACmK,MAAO,MAAO,sBAAwB,CAACnI,GAAI,IACtFuY,aAAcrG,EAAgB7B,QAAQO,eACtC/D,SAAW7H,GA5wBSU,KAC9B,MAAM8S,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAM7B,GALA2D,GAAmByG,IACjBA,EAAoBvI,QAAQO,eAAiB4H,EACtC,IAAII,MAGVxG,EAAqB1B,eAAeM,QAAQ,CAC7C,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBpF,eAAeM,SAAU,EAC/C8E,EAAsBpF,eAAeK,MAAQ,GAC7C+E,EAAsBpF,eAAeO,aAAc,EACnD6E,EAAsBpF,eAAeQ,OAAQ,EAC7CmB,EAAwByD,EAC1B,IACC,IAAI,EAwvBoBoF,CAAuBlW,EAAE+H,OAAOrH,SAGnD5H,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqBvB,YAAYE,QAAarT,KAAM0U,EAAqBvB,YAAYI,YAAajC,UAAU,QAAOnR,SAChKC,cAAC8M,KAAS,CAAC1J,OAA2D,IAA7CkR,EAAqBvB,YAAYG,QACxD/J,MAAM,oCAAgB/H,QAAQ,WAC9BlB,GAAI,CAACmK,MAAO,MAAO,sBAAwB,CAACnI,GAAI,IAChDmY,WAAY,CAAEC,UAAW,IACzBC,SAAWC,GAAUA,GAAwB,gBAAfrF,GAAgCqF,EAAMpH,QACpEqH,aAAcrG,EAAgB7B,QAAQQ,YACtChE,SAAW7H,GAhwBEU,KAK3B,GAJkB,gBAAfuN,GACDC,EAAc,MAGH,KAAVxN,EAAa,CACd,MAAM8S,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAC7B,MAAMsH,EAAwB,IAAI1D,GAC/BoG,EAAWnK,OAAS,IACrByH,EAAsBjF,YAAYE,MAAQ,sEAC1C+E,EAAsBjF,YAAYI,aAAc,EAChD6E,EAAsBjF,YAAYG,SAAU,EAC5C8E,EAAsBjF,YAAYK,OAAQ,EAC1CmB,EAAwByD,KAIxB3D,GAAmByG,IACjBA,EAAoBvI,QAAQQ,YAAc2H,EACnC,IAAII,MAGb9C,EAAsBjF,YAAYE,MAAQ,GAC1C+E,EAAsBjF,YAAYI,aAAc,EAChD6E,EAAsBjF,YAAYG,SAAU,EAC5C8E,EAAsBjF,YAAYK,OAAQ,EAE1C4E,EAAsBnF,YAAYI,MAAQ,GAC1C+E,EAAsBnF,YAAYM,aAAc,EAChD6E,EAAsBnF,YAAYK,SAAU,EAC5C8E,EAAsBnF,YAAYO,OAAQ,EAC1CmB,EAAwByD,GAC1B,GACC,IACL,KAEI,CACF,MAAMA,EAAwB,IAAI1D,GAClC0D,EAAsBjF,YAAYE,MAAQ,GAC1C+E,EAAsBjF,YAAYI,aAAc,EAChD6E,EAAsBjF,YAAYG,SAAU,EAC5C8E,EAAsBjF,YAAYK,OAAQ,EAC1CmB,EAAwByD,EAC1B,GAgtB+BqF,CAAoBnW,EAAE+H,OAAOrH,OAC9CwH,UAAWoH,QAKjBxW,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqB9J,OAAOyI,QAAarT,KAAM0U,EAAqB9J,OAAO2I,YAAajC,UAAU,OAAMnR,SACrJC,cAAC8M,KAAS,CAAC1J,OAAsD,IAAxCkR,EAAqB9J,OAAO0I,QACnD/J,MAAM,iBACNjJ,GAAI,CAACmK,MAAO,MAAO,sBAAwB,CAACnI,GAAI,IAChDqY,SAAWC,GAAUA,GAAwB,WAAfrF,GAA2BqF,EAAMpH,QAC/DpG,WAAY,CAACC,aAAcjN,cAACkN,KAAc,CAACvM,SAAS,MAAKZ,SAAE,UAC3D0a,aAAcrG,EAAgB5J,OAC9BuE,SAAW7H,GA3tBHU,KACJ,WAAfuN,GACDC,EAAc,MAGhB,MAAMsF,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAM7B,GALA2D,GAAmByG,IACjBA,EAAoBtQ,OAASkQ,EACtB,IAAII,MAGVxG,EAAqB9J,OAAO0I,QAAQ,CACrC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBxN,OAAOyI,MAAQ,GACrC+E,EAAsBxN,OAAO2I,aAAc,EAC3C6E,EAAsBxN,OAAO0I,SAAU,EACvC8E,EAAsBxN,OAAO4I,OAAQ,EACrCmB,EAAwByD,EAC1B,IACC,IAAI,EAmsBwBsF,CAAepW,EAAE+H,OAAOrH,aAK/C5H,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqBlC,OAAOa,QAAarT,KAAM0U,EAAqBlC,OAAOe,YAAYpT,SACpIC,cAAC8M,KAAS,CAAC1J,OAAsD,IAAxCkR,EAAqBlC,OAAOc,QACnD/J,MAAM,mBACNjJ,GAAI,CAACmK,MAAO,MAAO,sBAAwB,CAACnI,GAAI,IAChDqY,SAAWC,GAAUA,GAAwB,WAAfrF,GAA2BqF,EAAMpH,QAC/DpG,WAAY,CAACC,aAAcjN,cAACkN,KAAc,CAACvM,SAAS,MAAKZ,SAAE,UAC3D0a,aAAcrG,EAAgBhC,OAC9BrD,SAAW7H,GA7sBHU,KACJ,WAAfuN,GACDC,EAAc,MAGhB,MAAMsF,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAM7B,GALA2D,GAAmByG,IACjBA,EAAoB1I,OAASsI,EACtB,IAAII,MAGVxG,EAAqBlC,OAAOc,QAAQ,CACrC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsB5F,OAAOa,MAAQ,GACrC+E,EAAsB5F,OAAOe,aAAc,EAC3C6E,EAAsB5F,OAAOc,SAAU,EACvC8E,EAAsB5F,OAAOgB,OAAQ,EACrCmB,EAAwByD,EAC1B,IACC,IAAI,EAqrBwBuF,CAAerW,EAAE+H,OAAOrH,aAK/C5H,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuU,EAAqBjC,kBAAkBY,QAAarT,KAAM0U,EAAqBjC,kBAAkBc,YAAajC,UAAU,QAAOnR,SAC5KC,cAAC8M,KAAS,CAAC1J,OAAiE,IAAnDkR,EAAqBjC,kBAAkBa,QAC9D/J,MAAM,wBACNjJ,GAAI,CAACmK,MAAO,MAAO,sBAAwB,CAACnI,GAAI,IAChDqY,SAAWC,GAAUA,GAAwB,sBAAfrF,GAAsCqF,EAAMpH,QAC1EpG,WAAY,CAACC,aAAcjN,cAACkN,KAAc,CAACvM,SAAS,MAAKZ,SAAE,UAC3D0a,aAAcrG,EAAgB/B,kBAC9BtD,SAAW7H,GA/rBQU,KACf,sBAAfuN,GACDC,EAAc,MAGhB,MAAMsF,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAM7B,GALA2D,GAAmByG,IACjBA,EAAoBzI,kBAAoBqI,EACjC,IAAII,MAGVxG,EAAqBjC,kBAAkBa,QAAQ,CAChD,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsB3F,kBAAkBY,MAAQ,GAChD+E,EAAsB3F,kBAAkBc,aAAc,EACtD6E,EAAsB3F,kBAAkBa,SAAU,EAClD8E,EAAsB3F,kBAAkBe,OAAQ,EAChDmB,EAAwByD,EAC1B,IACC,IAAI,EAuqBwBwF,CAA0BtW,EAAE+H,OAAOrH,aAK1D5H,cAACyd,KAAgB,CAACvd,GAAI,CAACmK,MAAO,MAAOnI,GAAI,GAAIwb,QAAS1d,cAAC2d,KAAQ,CAACC,QAASxJ,EAAgB9B,cACvFnJ,MAAM,mCACN4F,SAAW7H,IAAM2W,OA3qBAC,EA2qBoB5W,EAAE+H,OAAO2O,aA1qBxDvJ,GAAmByG,IACjBA,EAAoBxI,YAAcwL,EAC3B,IAAIhD,MAHcgD,KA2qBsC,SAI7Dte,eAACue,KAAa,CAAC7d,GAAI,CAAC+K,eAAgB,UAAUlL,SAAA,CAC5CC,cAACsL,IAAM,CAAClK,QAAQ,YAAYX,QAASA,IAAMqX,IAA8B/X,SAAC,kBAC1EC,cAACsL,IAAM,CAAClK,QAAQ,YAAYd,MAAM,YAAYG,QAASA,CAACqI,EAAO2D,IAAWgL,EAA8B3O,EAAO2D,GAAQ1M,SAAC,6BAI5HC,cAACwR,GAAe,CAACC,oBAAqBA,EAAqB4D,uBAAwBA,MAGzF,E,2IClqCe2I,OA/Vf,SAA8Bze,GAE5B,MAAOiG,EAASC,GAAcF,oBAAS,IAEhC0Y,EAAYC,GAAiB3Y,mBAAS,CAAC4Y,UAAW,EAAGC,UAAW,yBAChEC,EAAuBC,GAA4B/Y,mBACxD,CACE,CAAE6Y,UAAW,sBAAeG,YAAa,GACzC,CAAEH,UAAW,wBAAcG,YAAa,GACxC,CAAEH,UAAW,sBAAeG,YAAa,MAItC1c,EAA6BmE,GAAkCT,oBAAS,IAExEiZ,EAA0BC,GAA+BlZ,mBAAS,KAClEmZ,EAAmCC,GAAwCpZ,mBAAS,KAEpFqZ,EAAqBC,GAA0BtZ,mBAAS,KAExDuZ,EAA+BC,GAAoCxZ,mBAAS,KAC5EyZ,EAA8BC,GAAmC1Z,mBAAS,KAE1EsT,EAAsBjB,GAA2BrS,sBACjDsU,EAAwBhC,GAA6BtS,oBAAS,IAC9DuU,EAAiChB,GAAsCvT,qBAuDxE2Z,EAAiBA,CAACC,EAAUC,KAChC,MAAMC,EAAsBD,EAAWtI,cACvC,OAAOqI,EAASpI,QAAOuI,IACrB,MAAM,UAAEtb,EAAS,SAAE0O,EAAQ,YAAEG,EAAW,YAAEE,GAAgBuM,EAAW/M,QACrE,OAAOvO,EAAU8S,cAAcM,SAASiI,IAAwB3M,EAASoE,cAAcM,SAASiI,IAAwBxM,EAAYiE,cAAcM,SAASiI,IAAwBtM,EAAY+D,cAAcM,SAASiI,EAAoB,GAC1O,EA4BEE,EAA8B1c,UAClC4C,GAAW,GAEX,MAAMvC,QAAiBM,IACjBgc,OXwEmB3c,WACzB,MAAMY,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,qCAAqCqB,GACxER,MAAK,SAAUC,GACZ,OAAOA,EAASS,IACpB,IACCR,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASU,MAC1B,GAAE,EWhFyC6b,GAE3C,IAMIC,EANAC,EAAc,CAChB,CAAEvB,UAAW,sBAAeG,YAAa,GACzC,CAAEH,UAAW,wBAAcG,YAAa,GACxC,CAAEH,UAAW,sBAAeG,YAAaiB,EAA6BjP,SA+BxE,GA3BGiP,EAA6BjP,OAAS,GACvCmP,EAAqCF,EAA6BrU,KAAKkN,IACtD,CACb9F,QAAU,CACRC,WAAY6F,EAAK7F,WACjBxO,UAAWqU,EAAKrU,UAChB0O,SAAU2F,EAAKuH,gBACfjN,OAAQ0F,EAAK1F,OACb7O,WAAYuU,EAAKwH,YACjBjN,eAAgByF,EAAKzF,eACrBC,YAAawF,EAAKxF,YAClBC,eAAgBuF,EAAKvF,eACrBC,YAAasF,EAAKtF,YAClBN,QAAS4F,EAAK5F,QACdqN,YAAazH,EAAKyH,YAClB9N,SAAUqG,EAAKrG,SACf+N,WAAY1H,EAAK0H,gBAKvBpB,EAAqCe,IAGrCf,EAAqCa,GAGvB,MAAbtc,GAC2B,IAAzBA,EAAS8R,KAAKzE,OAEf,GADAkO,EAA4Bvb,EAAS8R,MACT,IAAzBiJ,EAAWE,UAAgB,CAC5B,MAAM6B,EAA8B9c,EAAS8R,KAAK+B,QAAOkJ,GAAuD,IAA/BA,EAAqBzb,OAA8C,IAA/Byb,EAAqBzb,OAA8C,IAA/Byb,EAAqBzb,QAC9Kya,EAAgCe,GAChCjB,EAAiCiB,GACjCL,EAAY,GAAGpB,YAAcrb,EAASgd,eAAe,GACrDP,EAAY,GAAGpB,YAAcrb,EAASgd,eAAe,EACvD,MACK,GAA4B,IAAzBjC,EAAWE,UAAgB,CACjC,MAAMgC,EAA2B3B,EAAyBzH,QAAOkJ,GAAuD,IAA/BA,EAAqBzb,QAC9Gya,EAAgCkB,GAChCpB,EAAiCoB,GACjCR,EAAY,GAAGpB,YAAcrb,EAASgd,eAAe,GACrDP,EAAY,GAAGpB,YAAcrb,EAASgd,eAAe,EACvD,MACiC,IAAzBjC,EAAWE,YACjBc,EAAgCS,GAChCX,EAAiCW,GACjCC,EAAY,GAAGpB,YAAcrb,EAASgd,eAAe,GACrDP,EAAY,GAAGpB,YAAcrb,EAASgd,eAAe,IAI3D5B,EAAyBqB,GACzBpgB,EAAM6gB,sBAAqB,GAC3B3a,GAAW,EAAM,EAgCnB,OA7BAgC,qBAAU,KACR8X,GAA6B,GAC5B,IAEH9X,qBAAU,KACR,GAAGoS,EAAuB,CACxB,MAAMrD,EAAiB1N,IACA,MAAlBA,EAAMuX,UACPvX,EAAM4N,iBACNoC,GAAmC,GAErC,EAKF,OAFAwH,SAASC,iBAAiB,UAAW/J,GAE9B,KACL8J,SAASE,oBAAoB,UAAWhK,EAAc,CAE1D,IACC,CAACqD,EAAwBC,IAE5BrS,qBAAU,MAC6B,IAAlClI,EAAMkhB,0BACPlB,IACAhgB,EAAMmZ,4BAA2B,GACnC,GACC,CAACnZ,EAAMkhB,0BAGRjhB,eAAAkI,WAAA,CAAA3H,SAAA,CACEP,eAAC6B,IAAG,CAACnB,GAAI,CAAC2M,EAAG,GAAG9M,SAAA,CACdC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,MAAOuK,GAAI,EAAG1K,WAAY,SAAUC,SAAU,UAAWyQ,aAAc,OAAO9Q,SAChHyF,EACCxF,cAAC0gB,KAAQ,IAET1gB,cAAA,OAAK+N,MAAO,CAACjM,QAAS,OAAQ0I,OAAQ,QAAQzK,SACG,KAA9CR,EAAMyQ,uBAAuBvJ,aAC9BjH,eAAAkI,WAAA,CAAA3H,SAAA,CACEC,cAACmB,IAAU,CAACC,QAAQ,aAAYrB,SAAA,sCAAA4C,OAA0BpD,EAAMyQ,uBAAuBzJ,gBAA4B,IAACvG,cAAC2gB,KAAQ,CAACzgB,GAAI,CAACI,MAAO,UAAWF,SAAU,OAAQyO,GAAI,EAAGjD,OAAQ,WAAYnL,QAASA,IAAMlB,EAAM8Q,qCAAoC,GAAO1E,YAAY,gBAGhRnM,eAAAkI,WAAA,CAAA3H,SAAA,CACEC,cAACmB,IAAU,CAACC,QAAQ,aAAYrB,SAAC,0DAA0C,IAACC,cAAC2gB,KAAQ,CAACzgB,GAAI,CAACI,MAAO,UAAWF,SAAU,OAAQyO,GAAI,EAAGjD,OAAQ,WAAYnL,QAASA,IAAMlB,EAAM8Q,qCAAoC,GAAO1E,YAAY,mBAM9O3L,cAAA,OAAKoM,UAAU,YAAY2B,MAAO,CAAC6S,OAAQ,iBAAkBhS,aAAc,OAAQpE,OAAQ,QAAS4C,QAAS,EAAGyT,UAAW,uGAAuG9gB,SAC/NyF,EACExF,cAAA0H,WAAA,CAAA3H,SACCP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,SAAUD,cAAe,SAAUyI,OAAQ,QAAQzK,SAAA,CAClHC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,mFAIjDP,eAAAkI,WAAA,CAAA3H,SAAA,CACEC,cAAC4N,KAAK,CAACE,UAAU,MAAMD,QAAS,EAAG3N,GAAI,CAAC+K,eAAgB,SAAU/I,GAAI,KAAKnC,SACxEse,EAAsBlT,KAAI,CAAC2V,EAAuBC,IACjD/gB,cAACghB,KAAK,CAACC,aAAcH,EAAsBvC,YAAaje,MAAM,QAAOP,SACnEC,cAACkhB,KAAI,CAAC/X,MAAO2X,EAAsB1C,UAAW9d,MAAOygB,IAA2B9C,EAAWE,UAAY,UAAY,UACjH1d,QAASA,IAnMF0gB,EAACC,EAAWhD,KAErC,GADAF,EAAc,CAACC,UAAWiD,EAAWhD,UAAWA,IAC/B,IAAdgD,EAAgB,CACjB,MAAMpB,EAA8BxB,EAAyBzH,QAAOkJ,GAAuD,IAA/BA,EAAqBzb,OAA8C,IAA/Byb,EAAqBzb,OAA8C,IAA/Byb,EAAqBzb,QACzLya,EAAgCe,GAChCjB,EAAiCiB,EACnC,MACK,GAAiB,IAAdoB,EAAgB,CACtB,MAAMjB,EAA2B3B,EAAyBzH,QAAOkJ,GAAuD,IAA/BA,EAAqBzb,QAC9Gya,EAAgCkB,GAChCpB,EAAiCoB,EACnC,MACsB,IAAdiB,IACNnC,EAAgCP,GAChCK,EAAiCL,GACnC,EAoLiCyC,CAAmBJ,EAAwBD,EAAsB1C,cAAc,qBAAAzb,OAFFoe,QAOpGvhB,eAAC2B,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACgC,GAAI,GAAK7B,UAAW,SAAUD,SAAU,WAAWL,SAAA,CAAC,gBAAWke,EAAWG,UAAU,YAAO1C,OAASD,OAAO,iBAEzIzb,cAACqB,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,SAAUtK,SAAU,YAAYZ,SACzEC,cAAC8M,KAAS,CAAC5M,GAAI,CAACgC,GAAI,GAAK2I,GAAI,EAAGR,MAAO,IAAK,iCAAkC,CAAChK,UAAW,WAAYwc,KAAK,QACzGzb,QAAQ,WAAWigB,YAAY,kEAAqCzZ,MAAOgX,EAAqB7P,SAAW7H,GA1L7FU,KAC5B,MAAM8S,EAAa9S,EACnBiX,EAAuBnE,GAGrBuE,EADW,KAAVrX,EAC+BkX,EAEAI,EAAeJ,EAA+BpE,GAChF,EAkL+H4G,CAAqBpa,EAAE+H,OAAOrH,OAC/IoF,WAAY,CACVuU,eACEvhB,cAACkN,KAAc,CAACvM,SAAS,QAAOZ,SAACC,cAACwhB,KAAU,MAE9CvU,aACEjN,cAACkN,KAAc,CAACvM,SAAS,MAAKZ,SACH,KAAxB6e,EACC5e,cAACc,IAAS,CAACZ,GAAI,CAAC0L,OAAQ,WACtBD,YAAY,SACZlL,QAASA,IAAM,CAACoe,EAAuB,IAAKI,EAAgCH,MAG9E,YAQZ9e,cAACyhB,KAAc,CAACxV,UAAWyV,KAAOxhB,GAAI,CAAEsK,OAAQ,QAASmX,UAAW,SAAUC,uBAAwB,OAAQC,wBAAyB,QAAS9hB,SAC9IP,eAACsiB,KAAK,CAACC,cAAY,EAAC7hB,GAAI,CAAE8hB,SAAU,MAAOjiB,SAAA,CACzCC,cAACiiB,KAAS,CAAAliB,SACRP,eAAC0iB,KAAQ,CAAChiB,GAAI,CAAC,OAAQ,CAACI,MAAO,mBAAoBqB,gBAAiB,SAAS5B,SAAA,CACjD,IAAzBke,EAAWE,UACV,KAEA3e,eAAAkI,WAAA,CAAA3H,SAAA,CACEC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,UAAWyM,EAAG,QAAQ9M,SAAC,uBAC9DC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,WAGvDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,4BACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,mBACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,sBACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,iBACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,sCACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,gCAIvDC,cAACqiB,KAAS,CAAAtiB,SACiC,IAAxCif,EAA6BzO,OAC5BvQ,cAAA0H,WAAA,CAAA3H,SACGif,EAA6B7T,KAAI,CAACmX,EAA0BC,KAC3D/iB,sBAAC0iB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAA2CviB,GAAI,CAAC0L,OAAQ,WAAY8W,cAAeA,IAA+B,IAAzBzE,EAAWE,UA/MjGtb,WAC9CmD,GAA+B,GAC/B,MAAM2c,QAAuC5e,GAA0Bue,EAAyB/P,QAAQvO,WAClG4e,EAAoC,CACxCzQ,cAAemQ,EAAyB/P,QAAQwN,WAChD8C,YAAY,EACZrY,OAAQ,GACR4H,OAAQ,GACRC,kBAAmB,GACnB5F,OAAQ,GACR6F,YAAaqQ,EAA+BrQ,YAC5CwQ,cAAeH,EAA+BG,cAC9Crc,aAAc,GACd8L,QAAS+P,EAAyB/P,SAEpChT,EAAMwjB,iCAAiCH,GACvC5c,GAA+B,EAAM,EA+L4Hgd,CAAwCV,GArNvKA,KAClC1K,EAAwB0K,GACxBxJ,GAAmC,GACnCjB,GAA0B,EAAK,EAkNsMoL,CAA2BX,GAA0BviB,SAAA,CACxO,IAAzBke,EAAWE,UACV,KAEA3e,eAAAkI,WAAA,CAAA3H,SAAA,CACEC,cAACmiB,KAAS,CAACC,MAAM,SAASliB,GAAI,CAACmK,MAAO,QAAQtK,SAC5CC,cAACma,KAAO,CAAClH,MAAOjT,cAACmB,IAAU,CAACC,QAAQ,YAAWrB,SAAqC,IAAnCuiB,EAAyB9d,OAAkD,IAAnC8d,EAAyB9d,MAAc,mBAAgD,IAAnC8d,EAAyB9d,MAAc,oBAAa,uBAAwBzE,SACvNC,cAAA,QAAAD,UAzRJyE,EAyRgC8d,EAAyB9d,MAxRxE,IAAVA,GAAyB,IAAVA,EAEdxE,cAAA0H,WAAA,CAAA3H,SACEC,cAAA,QAAMoM,UAAU,iCAIJ,IAAV5H,EAEJxE,cAAA0H,WAAA,CAAA3H,SACEC,cAAA,QAAMoM,UAAU,mCAMlBpM,cAAA0H,WAAA,CAAA3H,SACEC,cAAA,QAAMoM,UAAU,qCA0QMpM,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,QAAQtK,SAAEuiB,EAAyBY,WAG3EljB,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,SAAStK,SAAEuiB,EAAyB/P,QAAQvO,YAChFhE,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,SAAStK,SAAEuiB,EAAyB/P,QAAQG,WAChF1S,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,SAAStK,UAA8C,IAA5CuiB,EAAyB/P,QAAQI,OAAkB,MAAQ,YAC1G3S,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,SAAStK,SAAE2b,KAAO4G,EAAyB/P,QAAQzO,YAAY2X,OAAO,gBAC1Gzb,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,SAAStK,SAAmD,KAAjDuiB,EAAyB/P,QAAQM,YAAqByP,EAAyB/P,QAAQM,YAAcyP,EAAyB/P,QAAQQ,cACrL/S,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACijB,WAAY,SAAUC,SAAU,SAAUC,aAAc,WAAY1jB,SAAU,KAAKI,SAC9GC,cAACma,KAAO,CAAClH,MAAOjT,cAACmB,IAAU,CAACC,QAAQ,YAAWrB,SAAEuiB,EAAyB/P,QAAQuN,cAA0B/f,SAC1GC,cAAA,QAAAD,SAAOuiB,EAAyB/P,QAAQuN,oBApBTyC,GAlR/B/d,KA0SP,MAGH,oBAUhBxE,cAACsB,EAAuB,CAACO,4BAA6BA,EAA6BD,kBAAkB,IAGrG5B,cAACiS,GAAmB,CAClB4H,uBAAwBA,EAAwBhC,0BAA2BA,EAC3EgB,qBAAsBA,EAAsBjB,wBAAyBA,EACrEkC,gCAAiCA,EAAiChB,mCAAoCA,EACtGJ,2BAA4BnZ,EAAMmZ,+BAI1C,E,oBClLe4K,OArLf,SAA0B/jB,GACtB,MAAOgkB,EAAeC,GAAoBje,oBAAS,IAC5CkM,EAAqB4D,GAA0B9P,oBAAS,IAExDmP,EAAsBC,GAA2BpP,mBAAS,MAE3Dke,EAAuB7b,IACzBrI,EAAMyD,qBAAqBmP,cAAgBvK,CAAK,EAyE9C8b,EAAoBA,KAC0B,KAA7CnkB,EAAMyD,qBAAqBmP,cAE1B5D,IAAMnL,MAAM,+CAAyB,CAAC2M,QAAS,WAjEzBlN,WAE1B,IAA6C,IAA1CtD,EAAMyD,qBAAqB6f,WAE1B,IAA0C,IAAvCnO,EAAqBiP,cAAwB,CAE5CtO,GAAuB,GACvB,MAAMnS,QAAiBN,EAAsBrD,EAAMyD,sBACnDqS,GAAuB,GACA,MAApBnS,EAASU,QACR2K,IAAM4B,QAAQjN,EAASS,MACvBpE,EAAMqkB,uCAAsC,GAC5CrkB,EAAMmZ,4BAA2B,GACjCnZ,EAAMskB,8BAA6B,GACnCtkB,EAAMukB,oBAGNvV,IAAMnL,MAAMF,EAASS,KAAM,CAACoM,QAAS,UAE7C,KAEI,CAEAsF,GAAuB,GACvB,MAAMnS,QAAiBG,EAA0B9D,EAAMyD,sBACvDqS,GAAuB,GACA,MAApBnS,EAASU,QACR2K,IAAM4B,QAAQjN,EAASS,MACvBpE,EAAMqkB,uCAAsC,GAC5CrkB,EAAMmZ,4BAA2B,GACjCnZ,EAAMskB,8BAA6B,GACnCtkB,EAAMukB,oBAGNvV,IAAMnL,MAAMF,EAASS,KAAM,CAACoM,QAAS,UAE7C,KAGA,CAEAsF,GAAuB,GACvB,MAAMnS,QAAiBN,EAAsBrD,EAAMyD,sBACnDqS,GAAuB,GAEA,MAApBnS,EAASU,QACR2K,IAAM4B,QAAQjN,EAASS,MACvBpE,EAAMukB,mBACNvkB,EAAMqkB,uCAAsC,GAC5CrkB,EAAMmZ,4BAA2B,GACjCnZ,EAAMskB,8BAA6B,IAGnCtV,IAAMnL,MAAMF,EAASS,KAAM,CAACoM,QAAS,UAE7C,GAcIgU,EACJ,EAiBJ,OAdAtc,qBAAU,KAC+C,KAAlDlI,EAAMyD,qBAAqBuP,QAAQzO,aAAyD,IAApCvE,EAAMykB,2BAlFnBnhB,WAC9CwS,GAAuB,GACvB,MAAMnS,QAAiBW,EAAuCtE,EAAMyD,qBAAqBuP,QAAQzO,YACjG6Q,EAAwBzR,GACxB3D,EAAMyD,qBAAqBmP,cAAgBjP,EAASsU,MAAM,GAAGjT,GAC7D8Q,GAAuB,EAAM,EA8EzB4O,EACJ,GACD,CAAC1kB,EAAMykB,4BAEVvc,qBAAU,MAC0C,IAA7ClI,EAAM2kB,qCAELR,IACAnkB,EAAMqkB,uCAAsC,GAChD,GACD,CAACrkB,EAAM2kB,qCAGN1kB,eAAAkI,WAAA,CAAA3H,SAAA,CACK2U,EACG1U,cAAA0H,WAAA,CAAA3H,SACIP,eAACC,IAAM,CAACC,WAAW,EAAMC,SAAU,KAAMC,KAAML,EAAMykB,0BAA2BlkB,sBAAsB,EAAKC,SAAA,CACvGC,cAACC,IAAW,CACRC,GAAI,CAAEC,WAAY,SAAUC,SAAU,OAAQC,UAAW,SAAUC,MAAO,QAASC,cAAe,aAAcR,SAAA,GAAA4C,OAC5GpD,EAAMyD,qBAAqBuP,QAAQG,SAAQ,oCAAA/P,QACC,IAA9CpD,EAAMyD,qBAAqBuP,QAAQI,OAAkB,MAAQ,UAAI,oCAAAhQ,OACjE+R,EAAqByP,eAG3BnkB,cAACQ,IAAU,CAACC,QAASA,IAAM,CAAClB,EAAMskB,8BAA6B,GAAQtkB,EAAMyD,qBAAqBmP,cAAgB,IAC9GjS,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACzCC,cAACc,IAAS,CAACV,SAAS,aAG5BJ,cAACe,IAAa,CAACC,UAAQ,EAACd,GAAI,CAACe,GAAI,MAAOC,GAAI,OAAOnB,SAC/CP,eAAC4kB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAEvkB,SAAA,CAC1BC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,KAEfvkB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAIxkB,SACfP,eAAC6B,IAAG,CAACnB,GAAI,CAAC0gB,OAAQ,kBAAmB/T,EAAG,EAAGrC,OAAQ,OAAQ4Y,SAAU,QAAQrjB,SAAA,CACzEC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACC,WAAY,UAAUJ,SAAC,8BACpD2U,EAAqB8P,SAClB9P,EAAqB8P,SAASrZ,KAAI,CAACsZ,EAAaC,IAC5C1kB,cAACmB,IAAU,CAAoBC,QAAQ,YAAWrB,SAAE0kB,EAAYvO,MAA/CwO,KAGrB,UAKZ1kB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAIxkB,SACfC,cAACqB,IAAG,CAACnB,GAAI,CAAC0gB,OAAQ,gBAAiB/T,EAAG,EAAGrC,OAAQ,QAAQzK,SACrDP,eAAA,OAAKuO,MAAO,CAACjM,QAAS,OAAQmY,SAAU,OAAQhP,eAAgB,UAAUlL,SAAA,CACtEC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACC,WAAY,SAAUG,MAAO,OAAOP,SAAC,8BAClE2U,EAAqB8C,QAAgD,IAAvC9C,EAAqBiP,cAChD3jB,cAAC2kB,KAAU,CAAClK,aAAc/F,EAAqB8C,MAAM,GAAGjT,GAAIwK,SAAW7H,GAAMuc,EAAoBvc,EAAE+H,OAAOrH,OAAO7H,SAC5G2U,EAAqB8C,MAAMrM,KAAI,CAACyZ,EAAUC,IACvC7kB,cAACyd,KAAgB,CAAiB7V,MAAOgd,EAASrgB,GAAImZ,QAAS1d,cAAC8kB,KAAK,IAAK3b,MAAOyb,EAAS1O,MAAnE2O,OAI/B7kB,cAAC2kB,KAAU,CAAClK,aAAc/F,EAAqB8C,MAAM,GAAGjT,GAAIwK,SAAW7H,GAAMuc,EAAoBvc,EAAE+H,OAAOrH,OAAO7H,SAC5G2U,EAAqB8P,SAASrZ,KAAI,CAACyZ,EAAUC,IAC1C7kB,cAACyd,KAAgB,CAAiB7V,MAAOgd,EAASrgB,GAAImZ,QAAS1d,cAAC8kB,KAAK,IAAK3b,MAAOyb,EAAS1O,KAAM6O,SAAwB,IAAdF,GAAnFA,OAInC7kB,cAACsL,IAAM,CAAClK,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,IAAMzB,QAASA,IAAMijB,IAAoB3jB,SAAC,6CAS3G,KASJC,cAACwR,GAAe,CACZC,oBAAqBA,EAAqB4D,uBAAwBA,MAIlF,EC0Te2P,OAref,SAAoBzlB,GAEhB,MAAM0lB,EAAyC,CAACjhB,UAAW,GAAIkhB,MAAO,GAAIxS,SAAU,GAAI5O,WAAY,IAC9FqhB,EAA8C,CAChDnhB,UAAW,CAAEiP,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACnE8R,MAAO,CAAEjS,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC/DV,SAAU,CAAEO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEtP,WAAY,CAAEmP,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,KAGjEgS,EAAqBC,GAA0B9f,mBAAS,OACxD+f,EAAiCC,GAAsChgB,mBAAS0f,IAChFO,EAAsCC,GAA2ClgB,mBAAS4f,IAC1FhQ,EAAYC,GAAiB7P,mBAAS,OACtCkM,EAAqB4D,GAA0B9P,oBAAS,IACxDmgB,EAAkBC,GAAuBpgB,mBAAS,GAEnD0O,EAAeD,iBAAO,MACtB4R,EAAU5R,iBAAO,MACjB6R,EAAW7R,iBAAO,MAElBsB,EAAeC,aAAY,CAC7BC,WAAY,CACVC,WAAY,CACVC,aAAc,CACZxE,UAAW,SACXyE,OAAO,EACPC,gBAAiB,CACfC,QAAS,CACP3V,GAAI,CACF4V,QAAS,YAGbH,MAAO,CACLzV,GAAI,CACFI,MAAO,kBASjBkW,EAAiB1N,IACd,QAAQ2N,KAAK3N,EAAMI,MAAsB,cAAdJ,EAAMI,KAAqC,WAAdJ,EAAMI,KAAkC,cAAdJ,EAAMI,KAAqC,eAAdJ,EAAMI,KAAsC,QAAdJ,EAAMI,KAA+B,UAAdJ,EAAMI,IAIzJ,UAAdJ,EAAMI,KACV4c,EAAiBhd,GAHjBA,EAAM4N,gBAIV,EAGEH,EAAaA,CAAC3O,EAAOyO,KACvB,GAAa,KAAVzO,GAA0B,eAAVA,EAAuB,CACtC,MAAMme,EAAwC,IAAIP,GACjC,cAAdnP,GACC0P,EAAsC/hB,UAAUiP,MAAQ,GACxD8S,EAAsC/hB,UAAUmP,aAAc,EAC9DsS,EAAwCM,GACtB,cAAf5Q,GACCC,EAAc,OAGA,eAAdiB,GACJ0P,EAAsCjiB,WAAWmP,MAAQ,GACzD8S,EAAsCjiB,WAAWqP,aAAc,EAC/DsS,EAAwCM,GACtB,eAAf5Q,GACCC,EAAc,OAGA,UAAdiB,IACJ0P,EAAsCb,MAAMjS,MAAQ,GACpD8S,EAAsCb,MAAM/R,aAAc,EAC1DsS,EAAwCM,GACtB,UAAf5Q,GACCC,EAAc,MAG1B,GAuIE4Q,EAA6BA,CAACld,EAAO2D,KACpCA,GAAqB,kBAAXA,IAIT8Y,EAAmCN,GACnCQ,EAAwCN,GACxCE,EAAuB,MACvBM,EAAoB,GACpBpmB,EAAM0mB,wBAAuB,GACjC,EAuDEC,EAAuBrjB,UACzB,GA9CasjB,MACb,MAAMJ,EAAwC,IAAIP,GAClD,IAAIvN,GAAU,EAwCd,MAtCiD,KAA9CqN,EAAgCthB,WAAiE,KAA7CshB,EAAgC5S,UACpC,KAA/C4S,EAAgCxhB,YAA+D,KAA1CwhB,EAAgCJ,QAErFa,EAAsC/hB,UAAUkP,SAAU,EAC1D6S,EAAsCrT,SAASQ,SAAU,EACzD6S,EAAsCjiB,WAAWoP,SAAU,EAC3D6S,EAAsCb,MAAMhS,SAAU,EACtD+E,GAAU,GAG8C,KAAzDuN,EAAqCxhB,UAAUiP,QAC3CiF,OAAOC,OAAOqN,GAAsCpN,OAAMC,IAAuB,IAAfA,EAAKjF,UACtE2S,EAAsC/hB,UAAUkP,SAAU,EAC1D6S,EAAsC/hB,UAAUoP,OAAQ,EACxDgC,EAAc,cAElB6C,GAAU,GAG+C,KAA1DuN,EAAqC1hB,WAAWmP,QAC5CiF,OAAOC,OAAOqN,GAAsCpN,OAAMC,IAAuB,IAAfA,EAAKjF,UACtE2S,EAAsCjiB,WAAWoP,SAAU,EACvDe,EAAaqE,SACbrE,EAAaqE,QAAQlF,SAG7B6E,GAAU,GAG0C,KAArDuN,EAAqCN,MAAMjS,QACvCiF,OAAOC,OAAOqN,GAAsCpN,OAAMC,IAAuB,IAAfA,EAAKjF,UACtE2S,EAAsCb,MAAMhS,SAAU,EACtD6S,EAAsCb,MAAM9R,OAAQ,EACpDgC,EAAc,UAElB6C,GAAU,GAEdwN,EAAwCM,GACjC9N,CAAO,EAIXkO,GAAW,CACV9Q,GAAuB,GACvB,MAAMnS,ObhMQL,OAAOmB,EAAWkhB,EAAOxS,EAAU5O,EAAY6O,KACrE,MAAMlP,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,0CAAAO,OAAyCqB,EAAS,WAAArB,OAAUuiB,EAAK,cAAAviB,OAAa+P,EAAQ,gBAAA/P,OAAemB,EAAU,YAAAnB,OAAWgQ,GAAUlP,GACvKR,MAAK,SAAUC,GACZ,OAAOA,EAASS,IACpB,IACCR,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASU,MAC1B,GAAE,EawL6BwiB,CAAkBd,EAAgCthB,UAAWshB,EAAgCJ,MAAOI,EAAgC5S,SAAU4S,EAAgCxhB,WAAY,IACjNuR,GAAuB,GACvBgQ,EAAuBniB,GACvBqiB,EAAmCN,GACnCQ,EAAwCN,GA1D5CS,EAAQtN,QAAQ+N,QACDT,EAAQtN,QAAQgO,iBAAiB,mBACzCC,SAAQ/L,GAASA,EAAMgM,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,OAC1EtR,EAAc,MAyDPlS,EAASqN,OAAS,GACjBsV,EAASvN,QAAQlF,OAEzB,GAGE0S,EAAoB5e,IACN,KAAZA,EAAEmI,OAA2B,UAAXnI,EAAEoI,MACpB4W,GACJ,EAaES,EAAmC9jB,UACrCwS,GAAuB,GACvB,MAAMsN,QAAuC5e,GAA0B6iB,EAAoB5iB,WACrF4e,EAAoC,CACtCzQ,cAAe,GACf0Q,YAAY,EACZrY,OAAQ,GACR4H,OAAQ,GACRC,kBAAmB,GACnB5F,OAAQ,GACR6F,YAAaqQ,EAA+BrQ,YAC5CwQ,cAAeH,EAA+BG,cAC9Crc,aAAc,GACd8L,QAAS,CACLvO,UAAW4iB,EAAoB5iB,UAC/BwO,WAAYoU,EAAoBpU,WAChCC,QAASmU,EAAoBnU,QAC7BC,SAAUkU,EAAoBlU,SAC9B5O,WAAY8iB,EAAoB9iB,WAChCkO,SAAU4U,EAAoB5U,SAC9BW,OAAQiU,EAAoBjU,OAC5BC,eAAgBgU,EAAoBhU,eACpCC,YAAa+T,EAAoB/T,YACjCC,eAAgB8T,EAAoB9T,eACpCC,YAAa6T,EAAoB7T,cAGzCxT,EAAMsnB,wBAAwBjE,GAC9BvN,GAAuB,GACvB2Q,GAA4B,EAGhC,OACIxmB,eAAAkI,WAAA,CAAA3H,SAAA,CACIP,eAACC,IAAM,CAACC,WAAW,EAAMC,SAAU,KAAMC,KAAML,EAAMunB,oBAAqBtb,QAASA,CAAC1C,EAAO2D,IAAWuZ,EAA2Bld,EAAO2D,GAAS3M,sBAAsB,EAAMI,GAAI,CAAC,0BAA2B,CAACP,SAAU,UAAUI,SAAA,CAC9NC,cAACC,IAAW,CAACC,GAAI,CAAE0M,EAAG,EAAGC,EAAG,IAAK1M,WAAY,SAAUC,SAAU,OAAQC,UAAW,UAAWN,SAAC,6BAChGC,cAACQ,IAAU,CAACC,QAASA,IAAMulB,IAA6B9lB,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACjGC,cAACc,IAAS,CAACV,SAAS,aAExBZ,eAACuB,IAAa,CAACC,UAAQ,EAACd,GAAI,CAAC2M,EAAG,aAAa9M,SAAA,CACzCP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,gBAAiBgB,UAAU,OAAO8a,IAAKnB,EAAQ7lB,SAAA,CACtFC,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SAC/BC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEylB,EAAqCxhB,UAAUiP,QAAarT,KAAM4lB,EAAqCxhB,UAAUmP,YAAYpT,SACxKC,cAAC8M,KAAS,CACN5M,GAAI,CAAC,sBAAwB,CAACka,UAAW,UACzChX,OAAyE,IAA3DoiB,EAAqCxhB,UAAUkP,QAC7D/J,MAAM,WAAQ/H,QAAQ,WAAWyb,KAAK,QACtCmK,WAAS,EACTzM,SAAWC,GAAUA,GAAwB,cAAfrF,GAA8BqF,EAAMpH,QAClEiH,WAAY,CAAEC,UAAW,IACzBvL,SAAW7H,GAtRhBU,KACvB,GAAa,KAAVA,EAAa,CACZ,MAAMme,EAAwC,IAAIP,GAC/C5d,EAAM2I,OAAS,GACdwV,EAAsC/hB,UAAUiP,MAAQ,uEACxD8S,EAAsC/hB,UAAUkP,SAAU,EAC1D6S,EAAsC/hB,UAAUmP,aAAc,EAC9DsS,EAAwCM,GACxCR,GAAoC0B,IAChCA,EAAoCjjB,UAAY4D,EACzC,IAAIqf,QAIG,cAAf9R,GACCC,EAAc,MAElB2Q,EAAsC/hB,UAAUiP,MAAQ,GACxD8S,EAAsC/hB,UAAUkP,SAAU,EAC1D6S,EAAsC/hB,UAAUmP,aAAc,EAC9D4S,EAAsC/hB,UAAUkP,SAAU,EAC1D6S,EAAsCrT,SAASQ,SAAU,EACzD6S,EAAsCjiB,WAAWoP,SAAU,EAC3D6S,EAAsCb,MAAMhS,SAAU,EACtDuS,EAAwCM,GAEhD,KACI,CACA,MAAMA,EAAwC,IAAIP,GAClDO,EAAsC/hB,UAAUiP,MAAQ,GACxD8S,EAAsC/hB,UAAUmP,aAAc,EAC9D4S,EAAsC/hB,UAAUkP,SAAU,EAC1DuS,EAAwCM,EAC5C,GAqP6CmB,CAAkBhgB,EAAE+H,OAAOrH,OAC5CsT,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,aAC1CwH,UAAWoH,QAKvBxW,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SAC/BC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEylB,EAAqC9S,SAASO,QAAarT,KAAM4lB,EAAqC9S,SAASS,YAAYpT,SACtKC,cAAC8M,KAAS,CACN5M,GAAI,CAAC,sBAAwB,CAACka,UAAW,UACzCG,SAAWC,GAAUA,GAAwB,aAAfrF,GAA6BqF,EAAMpH,QACjEhQ,OAAwE,IAA1DoiB,EAAqC9S,SAASQ,QAC5D/J,MAAM,iBAAS/H,QAAQ,WAAWyb,KAAK,QACvC9N,SAAW7H,GAhQjBU,KACJ,aAAfuN,GACCC,EAAc,MAGlBmQ,GAAoC0B,IAChCA,EAAoCvU,SAAW9K,EACxC,IAAIqf,MAGf,MAAMlB,EAAwC,IAAIP,GAClDO,EAAsC/hB,UAAUkP,SAAU,EAC1D6S,EAAsCrT,SAASQ,SAAU,EACzD6S,EAAsCjiB,WAAWoP,SAAU,EAC3D6S,EAAsCb,MAAMhS,SAAU,EACtDuS,EAAwCM,EAAsC,EAiPjChL,CAAiB7T,EAAE+H,OAAOrH,OAC3CwH,UAAYlI,GAAM4e,EAAiB5e,SAK/ClH,cAACmb,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAIvb,SAChEC,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SAC/BC,cAACub,KAAa,CAAC/F,WAAY,CAAC,cAAczV,SACtCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEylB,EAAqC1hB,WAAWmP,QAAarT,KAAM4lB,EAAqC1hB,WAAWqP,YAAYpT,SAC1KC,cAACqB,IAAG,CAACnB,GAAI,CAACmK,MAAO,KAAKtK,SAClBC,cAACwb,KAAU,CAACrS,MAAM,eAAYsS,OAAO,aACjCE,eAAe,EAAMC,mBAAiB,EACtClO,YAAcC,GAAW3N,cAAC8M,KAAS,IAAKa,EAAQkP,KAAK,UACrD9G,UAAW,CACP8F,UACA,CACItB,SAAUtG,EACV7Q,OAA0E,IAA5DoiB,EAAqC1hB,WAAWoP,QAC9D2J,KAAM,QACN3B,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,cAC1CwH,UAAYlI,GAAM4e,EAAiB5e,KAG3C6H,SAAWnH,GAtQ3BA,KACxB,GAAGA,EAAM,CACL,MAAMuf,EAAOvf,EAAMkU,GACbC,EAAQ,IAAI1U,KACZ2U,EAAkBD,EAAME,cAAgBkL,EAAKlL,cAC7CC,EAAmBH,EAAMI,WAAagL,EAAKhL,WAC3CC,EAAiBL,EAAMM,UAAY8K,EAAK9K,UACxCC,EAAMP,EAAME,cAAgBkL,EAAKlL,cAEvC,IAAIM,EAAgC,GAAlBP,EAAuBE,EACrCM,EAAYJ,EAEZA,EAAiB,IACjBG,GAAe,EACfC,GAAa,IAGjB,MAAMuJ,EAAwC,IAAIP,GAElD,GAAGzJ,EAAQoL,GAAQ1K,MAAMH,IAAQC,EAAc,IAAuB,KAAhBA,GAAsBC,EAAY,GACpFuJ,EAAsCjiB,WAAWmP,MAAQ,sFACzD8S,EAAsCjiB,WAAWqP,aAAc,EAC/D4S,EAAsCjiB,WAAWoP,SAAU,EAC3DuS,EAAwCM,OAEtC,CACF,MAAMxO,EAAgBmE,KAAOyL,GAAM1L,OAAO,cAC1C8J,GAAoC0B,IAChCA,EAAoCnjB,WAAayT,EAC1C,IAAI0P,MAGflB,EAAsCjiB,WAAWmP,MAAQ,GACzD8S,EAAsCjiB,WAAWqP,aAAc,EAC/D4S,EAAsC/hB,UAAUkP,SAAU,EAC1D6S,EAAsCrT,SAASQ,SAAU,EACzD6S,EAAsCjiB,WAAWoP,SAAU,EAC3D6S,EAAsCb,MAAMhS,SAAU,EACtDuS,EAAwCM,EAC5C,CACJ,GA8N6DqB,CAAmBxf,eAQhE5H,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SAC/BC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEylB,EAAqCN,MAAMjS,QAAarT,KAAM4lB,EAAqCN,MAAM/R,YAAYpT,SAChKC,cAAC8M,KAAS,CACN5M,GAAI,CAAC,sBAAwB,CAACka,UAAW,UACzCG,SAAWC,GAAUA,GAAwB,UAAfrF,GAA0BqF,EAAMpH,QAC9DhQ,OAAqE,IAAvDoiB,EAAqCN,MAAMhS,QACzD/J,MAAM,wCAAoB/H,QAAQ,WAAWyb,KAAK,QAClDxC,WAAY,CAAEC,UAAW,IACzBvL,SAAW7H,GA3OpBU,KACnB,GAAa,KAAVA,EAAa,CACZ,MAAMme,EAAwC,IAAIP,GAC/C5d,EAAM2I,OAAS,IACdwV,EAAsCb,MAAMjS,MAAQ,sEACpD8S,EAAsCb,MAAM/R,aAAc,EAC1DsS,EAAwCM,GAExCR,GAAoC0B,IAChCA,EAAoC/B,MAAQtd,EACrC,IAAIqf,QAIG,UAAf9R,GACCC,EAAc,MAElB2Q,EAAsCb,MAAMjS,MAAQ,GACpD8S,EAAsCb,MAAM/R,aAAc,EAC1D4S,EAAsCb,MAAMhS,SAAU,EACtD6S,EAAsC/hB,UAAUkP,SAAU,EAC1D6S,EAAsCrT,SAASQ,SAAU,EACzD6S,EAAsCjiB,WAAWoP,SAAU,EAC3DuS,EAAwCM,GAEhD,KACI,CACA,MAAMA,EAAwC,IAAIP,GAClDO,EAAsCb,MAAMjS,MAAQ,GACpD8S,EAAsCb,MAAM/R,aAAc,EAC1D4S,EAAsCb,MAAMhS,SAAU,EACtDuS,EAAwCM,EAC5C,GA2M6CsB,CAAcngB,EAAE+H,OAAOrH,OACxCwH,UAAWoH,EACX0E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,kBAO1D5H,cAACqB,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,SAAU/I,GAAI,KAAKnC,SAC1DC,cAACsL,IAAM,CAAClK,QAAQ,YAAYd,MAAM,UAAUG,QAASA,IAAMylB,IAAuBnmB,SAAC,qBAGvFC,cAACqB,IAAG,CAAAtB,SAEIqlB,EACmC,IAA/BA,EAAoB7U,OACpB/Q,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAACyhB,KAAc,CAACxV,UAAWyV,KAAOxhB,GAAI,CAAC2gB,UAAW,EAAG3e,GAAI,KAAMolB,SAAU,EAAGlY,UAAYtG,GApI5FA,KACN,cAAdA,EAAMI,IACNyc,GAAqB4B,GAAeC,KAAKC,IAAIF,EAAY,EAAGnC,EAAoB7U,OAAS,KACpE,YAAdzH,EAAMI,IACbyc,GAAqB4B,GAAeC,KAAKE,IAAIH,EAAY,EAAG,KACvC,UAAdze,EAAMI,KAAwC,OAArBwc,GAChCiB,EAAiCvB,EAAoBM,GACzD,EA6H8HiC,CAAmB7e,GAAQie,IAAKlB,EAAS9lB,SACvIP,eAACsiB,KAAK,CAACC,cAAY,EAAAhiB,SAAA,CACfC,cAACiiB,KAAS,CAAAliB,SACNP,eAAC0iB,KAAQ,CAAChiB,GAAI,CAAC,OAAQ,CAACI,MAAO,mBAAoBqB,gBAAiB,SAAS5B,SAAA,CACzEC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,QAAQL,SAAC,aAChDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,QAAQL,SAAC,mBAChDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,QAAQL,SAAC,iBAChDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,QAAQL,SAAC,sBAChDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,QAAQL,SAAC,2BAChDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,QAAQL,SAAC,qBAGxDC,cAACqiB,KAAS,CAAAtiB,SACLqlB,EACGA,EAAoBja,KAAI,CAACyb,EAAqBgB,IAC1CpoB,eAAC0iB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAAsCviB,GAAI,CAAC0L,OAAQ,WACpEic,SAAUnC,IAAqBkC,EAC/BlF,cAAeA,IAAMiE,EAAiCC,GAAqB7mB,SAAA,CAE3EC,cAACmiB,KAAS,CAACC,MAAM,OAAMriB,SAAG6mB,EAAoB5iB,YAC9ChE,cAACmiB,KAAS,CAACC,MAAM,OAAMriB,SAAG6mB,EAAoBlU,WAC9C1S,cAACmiB,KAAS,CAACC,MAAM,OAAMriB,SAAG2b,KAAOkL,EAAoB9iB,YAAY2X,OAAO,gBACxEzb,cAACmiB,KAAS,CAACC,MAAM,OAAMriB,UAAkC,IAA/B6mB,EAAoBjU,OAAkB,MAAQ,YACxE3S,cAACmiB,KAAS,CAACC,MAAM,OAAMriB,SAAG6mB,EAAoB9G,cAC9C9f,cAACmiB,KAAS,CAACC,MAAM,OAAMriB,SAAG6mB,EAAoBhU,gBAAkBgU,EAAoB9T,mBATnD8U,KAazC,YAKhBpoB,eAAC2B,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACG,UAAW,SAAU6B,GAAI,IAAK/B,WAAY,SAAUG,MAAO,SAASP,SAAA,CAAC,oBAAUqlB,EAAoB7U,OAAO,2BAG/IvQ,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACG,UAAW,SAAU6B,GAAI,IAAK/B,WAAY,SAAUG,MAAO,OAAOP,SAAC,gDAEhH,aAMhBC,cAACwR,GAAe,CACZC,oBAAqBA,EAAqB4D,uBAAwBA,MAIlF,E,UC87CeyS,OA75Df,SAAqBvoB,GAEnB,MAAMwoB,EAA8B,CAClC5V,cAAe,GACf0Q,YAAY,EACZrY,OAAQ,GACR4H,OAAQ,GACRC,kBAAmB,GACnB5F,OAAQ,GACR6F,aAAa,EACbwQ,cAAe,GACfrc,aAAc,GACd8L,QAAS,CACPvO,UAAW,GACXwO,WAAY,GACZC,QAAS,GACTC,SAAU,GACV5O,WAAY,GACZkO,SAAU,GACVW,OAAQ,GACRC,eAAgB,GAChBC,YAAa,GACbC,eAAgB,GAChBC,YAAa,KAIXiV,EAA2B,CAC/BlkB,WAAY,KACZ6O,OAAQ,CACN/K,MAAO,KACPkM,YAAY,GAEdR,SAAU,CACR1L,MAAO,KACPkM,YAAY,GAEdP,SAAU,CACR3L,MAAO,KACPkM,YAAY,GAEdN,KAAM,CACJ5L,MAAO,KACPkM,YAAY,GAEdmU,YAAa,CACXrgB,MAAO,KACPkM,YAAY,GAEdxB,aAAa,GAGT4V,EAAmC,CACvC1V,WAAY,CAAES,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpEpP,UAAW,CAAEiP,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACnEV,SAAU,CAAEO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEtP,WAAY,CAAEmP,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpET,OAAQ,CAAEM,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEE,SAAU,CAAEL,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEG,SAAU,CAAEN,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEI,KAAM,CAAEP,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC9DX,QAAS,CAAEQ,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACjER,eAAgB,CAAEK,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACxEP,YAAa,CAAEI,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrEL,YAAa,CAAEE,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrE5I,OAAQ,CAAEyI,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEhB,OAAQ,CAAEa,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEf,kBAAmB,CAAEY,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC3E6U,YAAa,CAAEhV,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrE3G,OAAQ,CAAEwG,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,IAG5DK,EAAa,CACjB,CAACC,YAAa,EAAGC,WAAY,MAAOC,aAAa,GACjD,CAACF,YAAa,EAAGC,WAAY,UAAMC,aAAa,IAG5CuU,EAAkB,CACtB,CAACC,iBAAkB,EAAGC,gBAAiB,sCAA4BvF,cAAe,GAClF,CAACsF,iBAAkB,EAAGC,gBAAiB,oCAAwBvF,cAAe,KAGzEkB,EAA2BH,GAAgCte,oBAAS,IACpE2e,EAAoCN,GAAyCre,oBAAS,IAEtFuhB,EAAqBb,GAA0B1gB,oBAAS,IAKxDkM,EAAqB4D,GAA0B9P,oBAAS,IAExDvC,EAAsB6jB,GAA2BthB,mBAASwiB,IAC1DO,EAA2BC,GAAgChjB,mBAAS2iB,IACpE/S,EAAYC,GAAiB7P,mBAAS,OAEtCijB,EAAmBC,GAAwBljB,mBAASyiB,IAEpDpT,EAAcC,GAAmBtP,mBAAS,KAC1CuP,EAAcC,GAAmBxP,mBAAS,CAACyP,KAAM,GAAIxP,SAAS,KAC9DyP,EAAUC,GAAe3P,mBAAS,CAACyP,KAAM,GAAIxP,SAAS,IAEvDogB,EAAU5R,iBAAO,MACjB0U,EAAgB1U,iBAAO,MACvBC,EAAeD,iBAAO,MACtBD,EAAYC,iBAAO,MAEnBsB,EAAeC,aAAY,CAC/BC,WAAY,CACVC,WAAY,CACVC,aAAc,CACZxE,UAAW,SACXyE,OAAO,EACPC,gBAAiB,CACfC,QAAS,CACP3V,GAAI,CACF4V,QAAS,YAGbH,MAAO,CACLzV,GAAI,CACFI,MAAO,aAIbyV,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN1I,QAAS,CACP2I,OAAQ,CAAC,GAAI,aAWzBK,EAAiB1N,IAChB,QAAQ2N,KAAK3N,EAAMI,MAAsB,cAAdJ,EAAMI,KAAqC,WAAdJ,EAAMI,KAAkC,cAAdJ,EAAMI,KAAqC,eAAdJ,EAAMI,KAAsC,QAAdJ,EAAMI,KAEpJJ,EAAM4N,gBACV,EAGIC,EAAgBA,CAACnJ,EAAOvI,KAAsB,IAApB,WAAE2R,GAAY3R,EAC5C,MAAM4R,EAAkBD,EAAWE,cAG7B6R,EAA2BC,GAAOA,EAAIC,QAAQ,UAAM,KAE1D,OAAOrb,EAAQuJ,QAAOtJ,IAClB,MAAMuJ,EAAqB2R,EAAyBlb,EAAOiF,SAASoE,eAC9DG,EAAW0R,EAAyBlb,EAAOiF,SAASzL,MAAM,KAAKkE,KAAI+L,GAAQA,EAAK,KAAIC,KAAK,IAAIL,eAE7FgS,EAAkBH,EAAyB9R,GAEjD,OACIG,EAAmBI,SAAS0R,IAC5B7R,EAASG,SAAS0R,EAAgB,GAExC,EAGE1S,EAAeC,IACF,WAAdA,EACDoS,GAAqBM,IACnBA,EAAsBpW,OAAOmB,YAAa,EACnC,IACFiV,MAIa,aAAd1S,EACNoS,GAAqBM,IACnBA,EAAsBzV,SAASQ,YAAa,EACrC,IACFiV,MAIc,aAAd1S,EACPoS,GAAqBM,IACnBA,EAAsBxV,SAASO,YAAa,EACrC,IACFiV,MAIa,SAAd1S,EACNoS,GAAqBM,IACnBA,EAAsBvV,KAAKM,YAAa,EACjC,IACFiV,MAIa,gBAAd1S,GACNoS,GAAqBM,IACnBA,EAAsBd,YAAYnU,YAAa,EACxC,IACFiV,KAGT,EAGIxS,EAAaA,CAAC3O,EAAOyO,KACzB,GAAa,KAAVzO,GAA0B,eAAVA,EAAuB,CACxC,MAAMohB,EAA6B,IAAIV,GACtB,eAAdjS,IACEtC,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAE1BvE,EAAUuE,QAAU5H,YAAW,KAC7BsY,EAA2BxW,WAAWS,MAAQ,GAC9C+V,EAA2BxW,WAAWW,aAAc,EACpD6V,EAA2BxW,WAAWU,SAAU,EAClD8V,EAA2BxW,WAAWY,OAAQ,EAC5CmV,EAA6BS,EAA2B,GACvD,KAsCY,gBAAd3S,GACEtC,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAE1BvE,EAAUuE,QAAU5H,YAAW,KAC7BsY,EAA2BjW,YAAYE,MAAQ,GAC/C+V,EAA2BjW,YAAYI,aAAc,EACrD6V,EAA2BjW,YAAYG,SAAU,EACjD8V,EAA2BhlB,UAAUoP,OAAQ,EAC7CmV,EAA6BS,EAA2B,GACvD,KAEiB,WAAd3S,EACNoS,GAAqBM,IACnBA,EAAsBpW,OAAOmB,YAAa,EACnC,IAAKiV,MAGM,aAAd1S,EACNoS,GAAqBM,IACnBA,EAAsBzV,SAASQ,YAAa,EACrC,IAAKiV,MAGM,aAAd1S,EACNoS,GAAqBM,IACnBA,EAAsBxV,SAASO,YAAa,EACrC,IAAKiV,MAGM,SAAd1S,EACNoS,GAAqBM,IACnBA,EAAsBvV,KAAKM,YAAa,EACjC,IAAKiV,MAGM,gBAAd1S,GACNoS,GAAqBM,IACnBA,EAAsBd,YAAYnU,YAAa,EACxC,IAAKiV,KAGlB,KACkB,KAAVnhB,IACW,WAAdyO,EACDoS,GAAqBM,IACnBA,EAAsBpW,OAAOmB,YAAa,EACnC,IAAKiV,MAGM,aAAd1S,EACNoS,GAAqBM,IACnBA,EAAsBzV,SAASQ,YAAa,EACrC,IAAKiV,MAGM,aAAd1S,EACNoS,GAAqBM,IACnBA,EAAsBxV,SAASO,YAAa,EACrC,IAAKiV,MAGM,SAAd1S,EACNoS,GAAqBM,IACnBA,EAAsBvV,KAAKM,YAAa,EACjC,IAAKiV,MAGM,gBAAd1S,GACNoS,GAAqBM,IACnBA,EAAsBd,YAAYnU,YAAa,EACxC,IAAKiV,MAGlB,EAk8BIhF,EAAwBA,KAC5BrT,YAAW,KAtPSqH,MACpB,IAAIE,GAAU,EACd,MAAM+Q,EAA6B,IAAIV,GAgPvC,MA9OkD,KAA/CA,EAA0B9V,WAAWS,QACnCiF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2BxW,WAAWY,OAAQ,EAC9CgC,EAAc,eAEhB6C,GAAU,GAGkC,KAA3CjV,EAAqBuP,QAAQvO,YAC9BglB,EAA2BhlB,UAAUiP,MAAQ,uDAC7C+V,EAA2BhlB,UAAUmP,aAAc,EACnD6V,EAA2BhlB,UAAUkP,SAAU,EAC5CgF,OAAOC,OAAOmQ,GAA2BlQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC7D4V,EAA2BhlB,UAAUoP,OAAQ,EAC7CgC,EAAc,cAEhB6C,GAAU,GAGqC,KAA9CqQ,EAA0BtkB,UAAUiP,QAClCiF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2BhlB,UAAUoP,OAAQ,EAC7CgC,EAAc,cAEhB6C,GAAU,GAGiC,KAA1CjV,EAAqBuP,QAAQG,WAC9BsW,EAA2BtW,SAASO,MAAQ,8CAC5C+V,EAA2BtW,SAASS,aAAc,EAClD6V,EAA2BtW,SAASQ,SAAU,EAC3CgF,OAAOC,OAAOmQ,GAA2BlQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC7D4V,EAA2BtW,SAASU,OAAQ,EAC5CgC,EAAc,aAEhB6C,GAAU,GAGmC,KAA5CjV,EAAqBuP,QAAQzO,aAC9BklB,EAA2BllB,WAAWmP,MAAQ,4CAC9C+V,EAA2BllB,WAAWqP,aAAc,EACpD6V,EAA2BllB,WAAWoP,SAAU,EAC7CgF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2BllB,WAAWsP,OAAQ,EAC1Ca,EAAaqE,SACfrE,EAAaqE,QAAQlF,SAGzB6E,GAAU,GAGsC,KAA/CqQ,EAA0BxkB,WAAWmP,QACnCiF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2BllB,WAAWsP,OAAQ,EAC1Ca,EAAaqE,SACfrE,EAAaqE,QAAQlF,SAGzB6E,GAAU,GAG+B,KAAxCjV,EAAqBuP,QAAQI,SAC9BqW,EAA2BrW,OAAOM,MAAQ,iDAC1C+V,EAA2BrW,OAAOQ,aAAc,EAChD6V,EAA2BrW,OAAOO,SAAU,EACzCgF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2BrW,OAAOS,OAAQ,EAC1CqV,GAAqBM,IACnBA,EAAsBpW,OAAOmB,YAAa,EACnC,IAAIiV,MAEf3T,EAAc,WAEd6C,GAAU,GAG4B,OAArCuQ,EAAkBlV,SAAS1L,QAC5BohB,EAA2B1V,SAASL,MAAQ,kDAC5C+V,EAA2B1V,SAASH,aAAc,EAClD6V,EAA2B1V,SAASJ,SAAU,EAC3CgF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2B1V,SAASF,OAAQ,EAC5CqV,GAAqBM,IACnBA,EAAsBzV,SAASQ,YAAa,EACrC,IAAIiV,MAEb3T,EAAc,aAEhB6C,GAAU,GAG4B,OAArCuQ,EAAkBjV,SAAS3L,QAC5BohB,EAA2BzV,SAASN,MAAQ,oDAC5C+V,EAA2BzV,SAASJ,aAAc,EAClD6V,EAA2BzV,SAASL,SAAU,EAC3CgF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2BzV,SAASH,OAAQ,EAC5CqV,GAAqBM,IACnBA,EAAsBxV,SAASO,YAAa,EACrC,IAAIiV,MAEb3T,EAAc,aAEhB6C,GAAU,GAGwB,OAAjCuQ,EAAkBhV,KAAK5L,QACxBohB,EAA2BxV,KAAKP,MAAQ,sDACxC+V,EAA2BxV,KAAKL,aAAc,EAC9C6V,EAA2BxV,KAAKN,SAAU,EACvCgF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2BxV,KAAKJ,OAAQ,EACxCqV,GAAqBM,IACnBA,EAAsBvV,KAAKM,YAAa,EACjC,IAAIiV,MAEb3T,EAAc,SAEhB6C,GAAU,GAGgC,KAAzCjV,EAAqBuP,QAAQE,UAC9BuW,EAA2BvW,QAAQQ,MAAQ,sDAC3C+V,EAA2BvW,QAAQU,aAAc,EACjD6V,EAA2BvW,QAAQS,SAAU,EAC1CgF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2BvW,QAAQW,OAAQ,EAC3CgC,EAAc,YAEhB6C,GAAU,GAGuC,KAAhDjV,EAAqBuP,QAAQK,gBAAyE,KAAhD5P,EAAqBuP,QAAQO,iBACpFkW,EAA2BpW,eAAeK,MAAQ,qDAClD+V,EAA2BpW,eAAeO,aAAc,EACxD6V,EAA2BpW,eAAeM,SAAU,EACjDgF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2BpW,eAAeQ,OAAQ,EAClDgC,EAAc,mBAEhB6C,GAAU,GAGoC,KAA7CjV,EAAqBuP,QAAQM,aAAmE,KAA7C7P,EAAqBuP,QAAQQ,cACjFiW,EAA2BnW,YAAYI,MAAQ,iEAC/C+V,EAA2BnW,YAAYM,aAAc,EACrD6V,EAA2BnW,YAAYK,SAAU,EAC9CgF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2BnW,YAAYO,OAAQ,EAC/CgC,EAAc,gBAEhB6C,GAAU,GAGuC,KAAhDqQ,EAA0BzV,YAAYI,QACpCiF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2BnW,YAAYO,OAAQ,EAC/CgC,EAAc,gBAEhB6C,GAAU,GAGuC,KAAhDqQ,EAA0BvV,YAAYE,QACpCiF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2BjW,YAAYK,OAAQ,EAC/CgC,EAAc,gBAEhB6C,GAAU,GAGuB,KAAhCjV,EAAqBwH,SACtBwe,EAA2Bxe,OAAOyI,MAAQ,8CAC1C+V,EAA2Bxe,OAAO2I,aAAc,EAChD6V,EAA2Bxe,OAAO0I,SAAU,EACzCgF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2Bxe,OAAO4I,OAAQ,EAC1CgC,EAAc,WAEhB6C,GAAU,GAGuB,KAAhCjV,EAAqBoP,SACtB4W,EAA2B5W,OAAOa,MAAQ,gDAC1C+V,EAA2B5W,OAAOe,aAAc,EAChD6V,EAA2B5W,OAAOc,SAAU,EACzCgF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2B5W,OAAOgB,OAAQ,EAC1CgC,EAAc,WAEhB6C,GAAU,GAGkC,KAA3CjV,EAAqBqP,oBACtB2W,EAA2B3W,kBAAkBY,MAAQ,6DACrD+V,EAA2B3W,kBAAkBc,aAAc,EAC3D6V,EAA2B3W,kBAAkBa,SAAU,EACpDgF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2B3W,kBAAkBe,OAAQ,EACrDgC,EAAc,sBAEhB6C,GAAU,GAG8B,KAAvCjV,EAAqB8f,gBACtBkG,EAA2Bf,YAAYhV,MAAQ,yDAC/C+V,EAA2Bf,YAAY9U,aAAc,EACrD6V,EAA2Bf,YAAY/U,SAAU,EAC9CgF,OAAOC,OAAO6Q,GAA4B5Q,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9D4V,EAA2Bf,YAAY7U,OAAQ,EAC/CqV,GAAqBM,IACnBA,EAAsBd,YAAYnU,YAAa,EACxC,IAAIiV,MAEb3T,EAAc,gBAEhB6C,GAAU,GAQ6B,KAAtCjV,EAAqByD,eAC2B,KAA9ClH,EAAMyQ,uBAAuBvJ,cAC9B8H,IAAMnL,MAAM,8EAA+C,CAAC2M,QAAS,WACrEkI,GAAU,GAGwC,KAA9C1Y,EAAMyQ,uBAAuBvJ,cACnCogB,GAAwBjM,IACtBA,EAAyBnU,aAAelH,EAAMyQ,uBAAuBvJ,aAC5DmU,MAKb2N,EAA6BS,GACtB/Q,CAAO,EAKTF,KACD2Q,EAAcpQ,QAAQlF,QACnB7T,EAAM0pB,8BACPC,IAGArF,GAA6B,GAEjC,GACC,IAAI,EAGHqF,EAA4BrmB,UAChCwS,GAAuB,GACvB,MAAM8T,QAA0C9lB,EAA0BL,GAC1B,MAA7CmmB,EAAkCvlB,QACnC2K,IAAM4B,QAAQgZ,EAAkCxlB,KAAM,CAACoM,QAAS,aAChExQ,EAAMmZ,4BAA2B,GACjCoL,KAGAvV,IAAMnL,MAAM+lB,EAAkCxlB,KAAM,CAACoM,QAAS,WAEhEsF,GAAuB,EAAM,EA+EzByO,EAAmBA,KACvB8B,EAAQtN,QAAQ+N,QACDT,EAAQtN,QAAQgO,iBAAiB,mBACzCC,SAAQ/L,GAASA,EAAMgM,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,OAE1E+B,EAAqBT,GAErBjT,GAAgB2C,IACdA,EAAiBlS,SAAU,EAC3BkS,EAAiB1C,KAAO,GACjB,IAAI0C,MAEbxC,GAAYyC,IACVA,EAAanS,SAAU,EACvBmS,EAAa3C,KAAO,GACb,IAAI2C,MAGVpY,EAAM0pB,+BACP1pB,EAAMwjB,mCAGR3N,EAAc,MAEdyR,EAAwBkB,GACxBQ,EAA6BL,GAE7BQ,EAAcpQ,QAAQlF,OAAO,EAGzBgW,EAA4BA,KAChCtF,IACA+C,EAAwBkB,GACxBU,EAAqBT,GACrBO,EAA6BL,GAC7BjC,GAAuB,EAAK,EAqE9B,OAnDAxe,qBAAU,KAfoB5E,WAC5B,MAAMK,QAAiBwO,KACP,MAAbxO,GACD2R,EAAgB3R,EAClB,EAYA0V,GACA8P,EAAcpQ,QAAQlF,OAAO,GAC5B,IAEH3L,qBAAU,MAC+B,IAApCzE,EAAqB6f,YAvIgBhgB,WACxCwS,GAAuB,GACvBiL,SAAS+I,eAAe,qBAAqBzhB,MAAQ5E,EAAqBuP,QAAQC,WAClF8N,SAAS+I,eAAe,aAAazhB,MAAQ5E,EAAqBuP,QAAQvO,UAC1Esc,SAAS+I,eAAe,mBAAmBzhB,MAAQ5E,EAAqBuP,QAAQG,SAEhF,MAAM4W,EAAqB,IAAId,GAC/Bc,EAAmBxlB,WAAa4X,KAAO1Y,EAAqBuP,QAAQzO,YAEpE,MAAMZ,QAAiB6O,GAAuB/O,EAAqBuP,QAAQP,UACrEiH,QAA6BtH,GAAgBzO,EAASgW,cACtDC,QAAyBtH,GAAY3O,EAASkW,cAE9CmQ,EAAkB9V,EAAWxJ,WAAU0I,GAAUA,EAAOiB,cAAgB5Q,EAAqBuP,QAAQI,SACrG6G,EAAoB5E,EAAa3K,WAAUqJ,GAAYA,EAAShE,OAASpM,EAASgW,eAClFO,EAAoBR,EAAqBhP,WAAUsJ,GAAYA,EAASjE,OAASpM,EAASkW,eAC1FM,EAAgBP,EAAiBlP,WAAUuJ,GAAQA,EAAKlE,OAASpM,EAASyW,WAC1E6P,EAAuBrB,EAAgBle,WAAUge,GAAeA,EAAYnF,gBAAkB9f,EAAqB8f,gBAEzHwG,EAAmB3W,OAAO/K,MAAQ6L,EAAW8V,GAC7CD,EAAmBhW,SAAS1L,MAAQgN,EAAa4E,GACjD8P,EAAmB/V,SAAS3L,MAAQqR,EAAqBQ,GACzD6P,EAAmB9V,KAAK5L,MAAQuR,EAAiBO,GACjD4P,EAAmBrB,YAAYrgB,MAAQugB,EAAgBqB,GACvDF,EAAmBhX,YAActP,EAAqBsP,YACtDmW,EAAqBa,GAErBhJ,SAAS+I,eAAe,kBAAkBzhB,MAAQ5E,EAAqBuP,QAAQE,QAC/E6N,SAAS+I,eAAe,yBAAyBzhB,MAAQ5E,EAAqBuP,QAAQK,eACtF0N,SAAS+I,eAAe,sBAAsBzhB,MAAQ5E,EAAqBuP,QAAQM,YACnFyN,SAAS+I,eAAe,yBAAyBzhB,MAAQ5E,EAAqBuP,QAAQO,eACtFwN,SAAS+I,eAAe,sBAAsBzhB,MAAQ5E,EAAqBuP,QAAQQ,YAEnFwV,EAA6BL,GAC7B7S,GAAuB,GACvBD,EAAc,SAAS,EAqGrBqU,EACF,GACC,CAACzmB,EAAqB6f,aAEzBpb,qBAAU,KACLlI,EAAM0pB,gCACPpC,EAAwBtnB,EAAM0pB,+BAxGepmB,WAC/CwS,GAAuB,GACvBiL,SAAS+I,eAAe,qBAAqBzhB,MAAQrI,EAAM0pB,8BAA8B1W,QAAQC,WACjG8N,SAAS+I,eAAe,aAAazhB,MAAQrI,EAAM0pB,8BAA8B1W,QAAQvO,UACzFsc,SAAS+I,eAAe,mBAAmBzhB,MAAQrI,EAAM0pB,8BAA8B1W,QAAQG,SAE/F,MAAM4W,EAAqB,IAAId,GAC/Bc,EAAmBxlB,WAAa4X,KAAOnc,EAAM0pB,8BAA8B1W,QAAQzO,YAEnF,MAAMZ,QAAiB6O,GAAuBxS,EAAM0pB,8BAA8B1W,QAAQP,UACpFiH,QAA6BtH,GAAgBzO,EAASgW,cACtDC,QAAyBtH,GAAY3O,EAASkW,cAE9CmQ,EAAkB9V,EAAWxJ,WAAU0I,GAAUA,EAAOiB,cAAgBrU,EAAM0pB,8BAA8B1W,QAAQI,SACpH6G,EAAoB5E,EAAa3K,WAAUqJ,GAAYA,EAAShE,OAASpM,EAASgW,eAClFO,EAAoBR,EAAqBhP,WAAUsJ,GAAYA,EAASjE,OAASpM,EAASkW,eAC1FM,EAAgBP,EAAiBlP,WAAUuJ,GAAQA,EAAKlE,OAASpM,EAASyW,WAC1E6P,EAAuBrB,EAAgBle,WAAUge,GAAeA,EAAYnF,gBAAkBvjB,EAAM0pB,8BAA8BnG,gBAExIwG,EAAmB3W,OAAO/K,MAAQ6L,EAAW8V,GAC7CD,EAAmBhW,SAAS1L,MAAQgN,EAAa4E,GACjD8P,EAAmB/V,SAAS3L,MAAQqR,EAAqBQ,GACzD6P,EAAmB9V,KAAK5L,MAAQuR,EAAiBO,GACjD4P,EAAmBrB,YAAYrgB,MAAQugB,EAAgBqB,GACvDF,EAAmBhX,YAAc/S,EAAM0pB,8BAA8B3W,YACrEmW,EAAqBa,GAErBhJ,SAAS+I,eAAe,kBAAkBzhB,MAAQrI,EAAM0pB,8BAA8B1W,QAAQE,QAC9F6N,SAAS+I,eAAe,yBAAyBzhB,MAAQrI,EAAM0pB,8BAA8B1W,QAAQK,eACrG0N,SAAS+I,eAAe,sBAAsBzhB,MAAQrI,EAAM0pB,8BAA8B1W,QAAQM,YAClGyN,SAAS+I,eAAe,yBAAyBzhB,MAAQrI,EAAM0pB,8BAA8B1W,QAAQO,eACrGwN,SAAS+I,eAAe,sBAAsBzhB,MAAQrI,EAAM0pB,8BAA8B1W,QAAQQ,YAElGwV,EAA6BL,GAC7B7S,GAAuB,GACvBD,EAAc,SAAS,EAsErBsU,GACF,GACC,CAACnqB,EAAM0pB,gCAEVxhB,qBAAU,KACLlI,EAAMoqB,aAC0B,IAA9B3F,IAA8D,IAAxB8C,GACvClD,GAAsC,GACtCrkB,EAAMqqB,cAAa,KAGnB7F,IACAxkB,EAAMqqB,cAAa,KAIpBrqB,EAAMsqB,aAC0B,IAA9B7F,IAA8D,IAAxB8C,GAIvChD,IAHAvkB,EAAMuqB,cAAa,IAQpBvqB,EAAMwqB,aAC0B,IAA9B/F,IAA8D,IAAxB8C,GAIvCsC,IAHA7pB,EAAMyqB,cAAa,GAMvB,GACC,CAACzqB,EAAMoqB,UAAWpqB,EAAMsqB,UAAWtqB,EAAMwqB,YAG1CvqB,eAAAkI,WAAA,CAAA3H,SAAA,CACEC,cAAC2O,KAAS,CAACzO,GAAI,CAAC,4BAA6B,CAACgB,GAAI,IAAInB,SACpDP,eAAC6B,IAAG,CAACnB,GAAI,CAAE+pB,UAAW,UAAWrb,aAAc,OAAQiS,UAAW,EAAG9G,GAAI,IAAKC,GAAI,IAAK/Y,GAAI,IAAKC,GAAI,IAAKgB,GAAI,KAAKnC,SAAA,CAChHC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACG,UAAW,SAAUF,WAAY,SAAUG,MAAO,QAAQP,SAAC,8CACzFP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,gBAAiBgP,SAAU,QAAShO,UAAU,OAAO8a,IAAKnB,EAAQ7lB,SAAA,CAE7GC,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0B9V,WAAWS,QAAarT,KAAM0oB,EAA0B9V,WAAWW,YAAajC,UAAU,OAAOgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAAMzB,SAC1MC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,MAAO+P,UAAW,QAAQra,SAC5CC,cAAC8M,KAAS,CAAC1J,OAA+D,IAAjDklB,EAA0B9V,WAAWU,QAA0B6R,UAA8C,IAApC/hB,EAAqB6f,WACrH1Z,MAAM,4BAAe/H,QAAQ,WAAWmD,GAAG,oBAC3CgW,SAAyB,eAAfpF,EAA+BqF,GAAUA,GAAwB,eAAfrF,GAA+BqF,EAAMpH,QAAUsV,EAC3G3Z,SAAW7H,GA5pCCU,KAC1B,GAAa,KAAVA,EAAa,CACI,eAAfuN,GACDC,EAAc,MAGhB,MAAMsF,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAC7B,MAAMsY,EAA6B,IAAIV,GACpC5N,EAAWnK,OAAS,IACrByY,EAA2BxW,WAAWS,MAAQ,8DAC9C+V,EAA2BxW,WAAWW,aAAc,EACpD6V,EAA2BxW,WAAWU,SAAU,EAChD8V,EAA2BxW,WAAWY,OAAQ,EAC9CmV,EAA6BS,KAG7BnC,GAAwBjM,IACtBA,EAAyBrI,QAAQC,WAAakI,EACvC,IAAKE,MAGdoO,EAA2BxW,WAAWS,MAAQ,GAC9C+V,EAA2BxW,WAAWW,aAAc,EACpD6V,EAA2BxW,WAAWU,SAAU,EAChD8V,EAA2BxW,WAAWY,OAAQ,EAC9CmV,EAA6BS,GAC/B,GACC,IACL,KACI,CACgB,eAAf7T,GACDC,EAAc,MAGhB,MAAM4T,EAA6B,IAAIV,GACvCU,EAA2BxW,WAAWS,MAAQ,GAC9C+V,EAA2BxW,WAAWW,aAAc,EACpD6V,EAA2BxW,WAAWU,SAAU,EAChD8V,EAA2BxW,WAAWY,OAAQ,EAC9CmV,EAA6BS,EAC/B,GA+mC+BnO,CAAmB3T,EAAE+H,OAAOrH,OAC7CwH,UAAWoH,EACX0E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,cAC1CyS,WAAY,CAAEtM,MAAO,CAAEoc,oBAAqBnnB,EAAqB6f,WAAa,UAAa,SAAUvI,UAAW,IAChH8P,iBAAqD,IAApCpnB,EAAqB6f,WAAsB,CAACwH,OAAQzhB,SAAQ,IAAU,aAM/F5I,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0BtkB,UAAUiP,QAAarT,KAAM0oB,EAA0BtkB,UAAUmP,YAAajC,UAAU,MAAMgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAAMzB,SACvMC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,MAAO+P,UAAW,QAAQra,SAC5CC,cAAC8M,KAAS,CAAC1J,OAA8D,IAAhDklB,EAA0BtkB,UAAUkP,QAA0B6R,UAA8C,IAApC/hB,EAAqB6f,WACpH1Z,MAAM,WAAQ/H,QAAQ,WAAWmD,GAAG,YACpCgW,SAAWC,GAAUA,GAAwB,cAAfrF,GAA8BqF,EAAMpH,QAClErE,SAAW7H,GA5nCAU,KACzB,GAAa,KAAVA,EAAa,CACd,MAAM8S,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAC7B,MAAMsY,EAA6B,IAAIV,GACpC5N,EAAWnK,OAAS,GACrByY,EAA2BhlB,UAAUiP,MAAQ,wDAC7C+V,EAA2BhlB,UAAUmP,aAAc,EACnD6V,EAA2BhlB,UAAUkP,SAAU,EAC/C8V,EAA2BhlB,UAAUoP,OAAQ,EAC7CmV,EAA6BS,KAGX,cAAf7T,GACDC,EAAc,MAGhByR,GAAwBjM,IACtBA,EAAyBrI,QAAQvO,UAAY0W,EACtC,IAAKE,MAGdoO,EAA2BhlB,UAAUiP,MAAQ,GAC7C+V,EAA2BhlB,UAAUmP,aAAc,EACnD6V,EAA2BhlB,UAAUkP,SAAU,EAC/C8V,EAA2BhlB,UAAUoP,OAAQ,EAC7CmV,EAA6BS,GAC/B,GACC,IACL,GA2lC+B9B,CAAkBhgB,EAAE+H,OAAOrH,OAC5CwH,UAAWoH,EACX0E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,aAC1CyS,WAAY,CAAEtM,MAAO,CAAEoc,oBAAqBnnB,EAAqB6f,WAAa,UAAa,SAAUvI,UAAW,IAChH8P,iBAAqD,IAApCpnB,EAAqB6f,WAAsB,CAACwH,OAAQzhB,SAAQ,IAAU,aAM7F5I,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0B5V,SAASO,QAAarT,KAAM0oB,EAA0B5V,SAASS,YAAajC,UAAU,MAAMgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAC/LuU,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN1I,QAAS,CAAE2I,OAAQ,CAAC,IAAK,QAI/BpW,SAEFC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,MAAOvI,QAAS,cAAesY,UAAW,QAAQra,SACpEC,cAAC8M,KAAS,CAAC1J,OAA6D,IAA/CklB,EAA0B5V,SAASQ,QAA0B6R,UAA8C,IAApC/hB,EAAqB6f,WACnH1Z,MAAM,iBAAS/H,QAAQ,WAAWmD,GAAG,kBACrCgW,SAAWC,GAAUA,GAAwB,aAAfrF,GAA6BqF,EAAMpH,QACjErE,SAAW7H,GA3mCHU,KACxB,MAAM8S,EAAa9S,EAEhBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAY7B,GAXAmW,GAAwBjM,IACtBA,EAAyBrI,QAAQG,SAAWgI,EACrC,IACFE,MAIW,aAAfzF,GACDC,EAAc,MAGbkT,EAA0B5V,SAASQ,QAAQ,CAC5C,MAAM8V,EAA6B,IAAIV,GACvCU,EAA2BtW,SAASO,MAAQ,GAC5C+V,EAA2BtW,SAASS,aAAc,EAClD6V,EAA2BtW,SAASQ,SAAU,EAC9C8V,EAA2BtW,SAASU,OAAQ,EAC5CmV,EAA6BS,EAC/B,IAKC,IAAI,EA4kC0BjO,CAAiB7T,EAAE+H,OAAOrH,OAC3CyS,WAAY,CAAEtM,MAAO,CAAEoc,oBAAqBnnB,EAAqB6f,WAAa,UAAa,UAC3FuH,iBAAqD,IAApCpnB,EAAqB6f,WAAsB,CAACwH,OAAQzhB,SAAQ,IAAU,aAM/F5I,cAACmb,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAIvb,SAClEC,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACub,KAAa,CAAC/F,WAAY,CAAC,cAAczV,SACxCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0BxkB,WAAWmP,QAAarT,KAAM0oB,EAA0BxkB,WAAWqP,YAAajC,UAAU,SAASgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAAMzB,SAC5MC,cAACqB,IAAG,CAACnB,GAAI,CAACmK,MAAO,IAAKnI,GAAI,mBAAmBnC,SAC3CC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,QAAUtK,SAC5BC,cAACsqB,KAAS,CAACnhB,MAAM,eACfsS,OAAO,aAAa7T,MAAO4gB,EAAkB1kB,WAC7CihB,UAA8C,IAApC/hB,EAAqB6f,WAC/B9M,UAAW,CACT8F,UACE,CACEtB,SAAUtG,EACV7Q,OAA+D,IAAjDklB,EAA0BxkB,WAAWoP,QACnDgI,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,cAC1C1H,GAAI,CAAC,wBAAyB,CAAEiqB,qBAAyD,IAApCnnB,EAAqB6f,WAAsB,UAAY,OAGlH9T,SAAWnH,GAnmCdA,KACnB,GAAGA,EAAM,CACP,MAAM8S,EAAa9S,EAAMkU,GACtB/H,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAC7B,MAAMqL,EAAQ,IAAI1U,KACZ2U,EAAkBD,EAAME,cAAgBvB,EAAWuB,cACnDC,EAAmBH,EAAMI,WAAazB,EAAWyB,WACjDC,EAAiBL,EAAMM,UAAY3B,EAAW2B,UAC9CC,EAAMP,EAAME,cAAgBvB,EAAWuB,cAE7C,IAAIM,EAAgC,GAAlBP,EAAuBE,EACrCM,EAAYJ,EAEZA,EAAiB,IACnBG,GAAe,EACfC,GAAa,IAGf,MAAMwM,EAA6B,IAAIV,GAEvC,GAAGvM,EAAQrB,GAAc4B,EAAM,GAAKG,MAAMH,IAAQC,EAAc,IAAuB,KAAhBA,GAAsBC,EAAY,GACvGwM,EAA2BllB,WAAWmP,MAAQ,sFAC9C+V,EAA2BllB,WAAWqP,aAAc,EACpD6V,EAA2BllB,WAAWoP,SAAU,EAChD8V,EAA2BllB,WAAWsP,OAAQ,EAC9CmV,EAA6BS,GAE7BP,GAAqBM,IACnBA,EAAsBjlB,WAAa8D,EAC5B,IACFmhB,UAKL,CACgB,eAAf5T,GACDC,EAAc,MAGhB,MAAMmC,EAAgBmE,KAAOhB,GAAYe,OAAO,cAChDoL,GAAwBjM,IACxBA,EAAyBrI,QAAQzO,WAAayT,EACrC,IACFqD,MAIP6N,GAAqBM,IACnBA,EAAsBjlB,WAAa8D,EAC5B,IACFmhB,MAIPC,EAA2BllB,WAAWmP,MAAQ,GAC9C+V,EAA2BllB,WAAWqP,aAAc,EACpD6V,EAA2BllB,WAAWoP,SAAU,EAChD8V,EAA2BllB,WAAWsP,OAAQ,EAC9CmV,EAA6BS,EAK/B,IACC,IACL,GA6hC2CtM,CAAY9U,iBAS/C5H,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0B3V,OAAOM,QAAarT,KAAM0oB,EAA0B3V,OAAOQ,YAAajC,UAAU,MAAMgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAAMzB,SACjMC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,MAAO+P,UAAW,QAAQra,SAC5CC,cAACuN,KAAY,CAACgd,eAAa,EAAChmB,GAAG,gBAAgBwgB,UAA8C,IAApC/hB,EAAqB6f,WAC5Ejb,MAAO4gB,EAAkB7V,OAAO/K,MAChC4F,QAASiG,EACTtC,eAAiB1D,GAAWA,EAAOkG,WACnCvC,aAAcA,CAAC7R,EAAOkO,IACpBzN,cAAA,SAAQT,EAAKQ,SACV0N,EAAOkG,aAGZ5E,SAAUA,CAAC7H,EAAGU,IA/iCToT,EAAC9T,EAAGU,KAmBzB,GAlBkB,WAAfuN,GACDC,EAAc,MAGhByR,GAAwBjM,IACtBA,EAAyBrI,QAAQI,OAAS/K,EAAMgM,YACzC,IACFgH,MAIP6N,GAAqBM,IACnBA,EAAsBpW,OAAO/K,MAAQA,EAC9B,IACFmhB,MAIJT,EAA0B3V,OAAOO,QAAQ,CAC1C,MAAM8V,EAA6B,IAAIV,GACvCU,EAA2BrW,OAAOM,MAAQ,GAC1C+V,EAA2BrW,OAAOQ,aAAc,EAChD6V,EAA2BrW,OAAOO,SAAU,EAC5C8V,EAA2BrW,OAAOS,OAAQ,EAC1CmV,EAA6BS,EAC/B,GAqhCwChO,CAAe9T,EAAGU,GAC1ChI,KAAM4oB,EAAkB7V,OAAOmB,WAC/BmH,QAASA,IAAM7E,EAAY,UAC3B8E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,UAC1C8F,YAAcC,GACZ3N,cAAC8M,KAAS,IAAKa,EACbxE,MAAM,oBACNoR,SAAWC,GAAUA,GAAwB,WAAfrF,GAA2BqF,EAAMpH,QAC/DhQ,OAA2D,IAA7CklB,EAA0B3V,OAAOO,QAC/ChT,GAAI,CAAC,wBAAyB,CAAEiqB,qBAAyD,IAApCnnB,EAAqB6f,WAAsB,UAAY,OAGhHvR,kBAAgB,EAChBC,UAAW,aAQnBvR,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0BhV,SAASL,QAAarT,KAAM0oB,EAA0BhV,SAASH,YAAajC,UAAU,OAAOgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAAMzB,SACtMC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,QAAS+P,UAAW,QAAQra,SAC9CC,cAACuN,KAAY,CAACgd,eAAa,EAACxF,UAA8C,IAApC/hB,EAAqB6f,WACzDjb,MAAO4gB,EAAkBlV,SAAS1L,MAClC4F,QAASoH,EACT+H,cAAe,wBACfhG,cAAeA,EACfxF,eAAiB1D,GAAWA,EAAOyI,KACnC9E,aAAcA,CAAC7R,EAAOkO,IACpBzN,cAAA,SAAQT,EAAKQ,SACV0N,EAAOyI,OAGZnH,SAAUA,CAAC7H,EAAGU,IAjjCR/E,OAAOqE,EAAGU,KA8BhC,GA7BkB,aAAfuN,GACDC,EAAc,MAGhBqT,GAAqBM,IACnBA,EAAsBzV,SAAS1L,MAAQA,EAChC,IACFmhB,MAIiC,OAArCP,EAAkBjV,SAAS3L,OAC5B6gB,GAAqBM,IACnBA,EAAsBxV,SAAS3L,MAAQ,KAChC,IACFmhB,MAK2B,OAAjCP,EAAkBhV,KAAK5L,OACxB6gB,GAAqBM,IACnBA,EAAsBvV,KAAK5L,MAAQ,KAC5B,IACFmhB,MAKNT,EAA0BhV,SAASJ,QAAQ,CAC5C,MAAM8V,EAA6B,IAAIV,GACvCU,EAA2B1V,SAASL,MAAQ,GAC5C+V,EAA2B1V,SAASH,aAAc,EAClD6V,EAA2B1V,SAASJ,SAAU,EAC9C8V,EAA2B1V,SAASF,OAAQ,EAC5CmV,EAA6BS,EAC/B,CAEA9T,GAAYyC,IACVA,EAAa3C,KAAO,GACb,IAAI2C,MAGb5C,GAAgB2C,IACdA,EAAiBlS,SAAU,EACpB,IAAIkS,MAGb,MAAMuB,QAA6BtH,GAAgB/J,EAAM0H,MACzDyF,GAAgB2C,IACdA,EAAiBlS,SAAU,EAC3BkS,EAAiB1C,KAAOiE,EACjB,IAAIvB,KACX,EA2/BsCoF,CAAgB5V,EAAGU,GAC3ChI,KAAM4oB,EAAkBlV,SAASQ,WACjCmH,QAASA,IAAM7E,EAAY,YAC3B8E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,YAC1C8F,YAAcC,GACZ3N,cAAC8M,KAAS,IAAKa,EACbxE,MAAM,oBACNoR,SAAWC,GAAUA,GAAwB,aAAfrF,GAA6BqF,EAAMpH,QACjEhQ,OAA6D,IAA/CklB,EAA0BhV,SAASJ,QACjDhT,GAAI,CAAC,wBAAyB,CAAEiqB,qBAAyD,IAApCnnB,EAAqB6f,WAAsB,UAAY,OAGhHvR,kBAAgB,EAChBC,UAAW,aAMnBvR,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0B/U,SAASN,QAAarT,KAAM0oB,EAA0B/U,SAASJ,YAAajC,UAAU,MAAMgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAAMzB,SACrMC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,MAAO+P,UAAW,QAAQra,SAC5CC,cAACuN,KAAY,CAACgd,eAAa,EAACxF,UAA8C,IAApC/hB,EAAqB6f,WACzDjb,MAAO4gB,EAAkBjV,SAAS3L,MAClC4F,QAASsH,EAAaE,KACtB2H,cAAe7H,EAAatP,QAAU,wBAAgB,GACtD5F,KAAM4oB,EAAkBjV,SAASO,WACjCmH,QAASA,IAAM7E,EAAY,YAC3B8E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,YAC1C+O,cAAeA,EACfxF,eAAiB1D,GAAWA,EAAOyI,KACnC9E,aAAcA,CAAC7R,EAAOkO,IACpBzN,cAAA,SAAQT,EAAKQ,SACV0N,EAAOiF,WAGZ3D,SAAUA,CAAC7H,EAAGU,IA5hCP/E,OAAOqE,EAAGU,KAqBjC,GApBkB,aAAfuN,GACDC,EAAc,MAGhBqT,GAAqBM,IACnBA,EAAsBxV,SAAS3L,MAAQA,EAChC,IACFmhB,MAI6B,OAAjCP,EAAkBhV,KAAK5L,OACxB6gB,GAAqBM,IACnBA,EAAsBvV,KAAK5L,MAAQ,KAC5B,IACFmhB,MAKNT,EAA0B/U,SAASL,QAAQ,CAC5C,MAAM8V,EAA6B,IAAIV,GACvCU,EAA2BzV,SAASN,MAAQ,GAC5C+V,EAA2BzV,SAASJ,aAAc,EAClD6V,EAA2BzV,SAASL,SAAU,EAC9C8V,EAA2BzV,SAASH,OAAQ,EAC5CmV,EAA6BS,EAC/B,CAEA9T,GAAYyC,IACVA,EAAanS,SAAU,EAChB,IAAImS,MAGb,MAAMwB,QAAyBtH,GAAYjK,EAAM0H,MACjD4F,GAAYyC,IACVA,EAAanS,SAAU,EACvBmS,EAAa3C,KAAOmE,EACb,IAAIxB,KACX,EAo/BsCoF,CAAiB7V,EAAGU,GAC5C8F,YAAcC,GACZ3N,cAAC8M,KAAS,IAAKa,EACbxE,MAAM,uBACNoR,SAAWC,GAAUA,GAAwB,aAAfrF,GAA6BqF,EAAMpH,QACjEhQ,OAA6D,IAA/CklB,EAA0B/U,SAASL,QACjDhT,GAAI,CAAC,wBAAyB,CAAEiqB,qBAAyD,IAApCnnB,EAAqB6f,WAAsB,UAAY,KAC5G7V,WAAY,IACPW,EAAOX,WACVC,aACEzN,eAAAkI,WAAA,CAAA3H,SAAA,CACG+U,EAAatP,QAAUxF,cAACiC,IAAgB,CAAC3B,MAAM,UAAUuc,KAAM,KAAS,KACxElP,EAAOX,WAAWC,mBAM7BqE,kBAAgB,EAChBC,UAAW,aAMnBvR,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAAA0H,WAAA,CAAA3H,SACEC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0B9U,KAAKP,QAAarT,KAAM0oB,EAA0B9U,KAAKL,YAAajC,UAAU,SAASgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAAMzB,SAChMC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,QAAS+P,UAAW,QAAQra,SAC9CC,cAACuN,KAAY,CAACgd,eAAa,EAACxF,UAA8C,IAApC/hB,EAAqB6f,WACzDjb,MAAO4gB,EAAkBhV,KAAK5L,MAC9B4F,QAASyH,EAASD,KAClB2H,cAAe1H,EAASzP,QAAU,wBAAgB,GAClDmR,cAAeA,EACfxF,eAAiB1D,GAAWA,EAAOyI,KACnC9E,aAAcA,CAAC7R,EAAOkO,IACpBzN,cAAA,SAAQT,EAAKQ,SACV0N,EAAOiF,WAGZ3D,SAAUA,CAAC7H,EAAGU,IAzhCboV,EAAC9V,EAAGU,KAmBvB,GAlBkB,SAAfuN,GACDC,EAAc,MAGhByR,GAAwBjM,IACtBA,EAAyBrI,QAAQP,SAAWpK,EAAM0H,KAC3C,IACFsL,MAIP6N,GAAqBM,IACnBA,EAAsBvV,KAAK5L,MAAQA,EAC5B,IACFmhB,MAIJT,EAA0B9U,KAAKN,QAAQ,CACxC,MAAM8V,EAA6B,IAAIV,GACvCU,EAA2BxV,KAAKP,MAAQ,GACxC+V,EAA2BxV,KAAKL,aAAc,EAC9C6V,EAA2BxV,KAAKN,SAAU,EAC1C8V,EAA2BxV,KAAKJ,OAAQ,EACxCmV,EAA6BS,EAC/B,GA+/B0ChM,CAAa9V,EAAGU,GACxChI,KAAM4oB,EAAkBhV,KAAKM,WAC7BmH,QAASA,IAAM7E,EAAY,QAC3B8E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,QAC1C8F,YAAcC,GACZ3N,cAAC8M,KAAS,IAAKa,EACbxE,MAAM,yBACNoR,SAAWC,GAAUA,GAAwB,SAAfrF,GAAyBqF,EAAMpH,QAC7DhQ,OAAyD,IAA3CklB,EAA0B9U,KAAKN,QAC7ChT,GAAI,CAAC,wBAAyB,CAAEiqB,qBAAyD,IAApCnnB,EAAqB6f,WAAsB,UAAY,KAC5G7V,WAAY,IACPW,EAAOX,WACVC,aACEzN,eAAAkI,WAAA,CAAA3H,SAAA,CACGkV,EAASzP,QAAUxF,cAACiC,IAAgB,CAAC3B,MAAM,UAAUuc,KAAM,KAAS,KACpElP,EAAOX,WAAWC,mBAM7BqE,kBAAgB,EAChBC,UAAW,eAOrBvR,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0B7V,QAAQQ,QAAarT,KAAM0oB,EAA0B7V,QAAQU,YAAajC,UAAU,SAASgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAAMzB,SACtMC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,MAAOvI,QAAS,cAAesY,UAAW,QAAQra,SACpEC,cAAC8M,KAAS,CAAC1J,OAA4D,IAA9CklB,EAA0B7V,QAAQS,QAA0B6R,UAA8C,IAApC/hB,EAAqB6f,WAClH1Z,MAAM,yBAAU/H,QAAQ,WAAWmD,GAAG,iBACtCgW,SAAWC,GAAUA,GAAwB,YAAfrF,GAA4BqF,EAAMpH,QAChErE,SAAW7H,GA5hCJU,KACvB,MAAM8S,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAY7B,GAXkB,YAAfyE,GACDC,EAAc,MAGhByR,GAAwBjM,IACtBA,EAAyBrI,QAAQE,QAAUiI,EACpC,IACFE,MAIJ0N,EAA0B7V,QAAQS,QAAQ,CAC3C,MAAM8V,EAA6B,IAAIV,GACvCU,EAA2BvW,QAAQQ,MAAQ,GAC3C+V,EAA2BvW,QAAQU,aAAc,EACjD6V,EAA2BvW,QAAQS,SAAU,EAC7C8V,EAA2BvW,QAAQW,OAAQ,EAC3CmV,EAA6BS,EAC/B,IACC,IAAI,EAkgC0B/L,CAAgB/V,EAAE+H,OAAOrH,OAC1CyS,WAAY,CAAEtM,MAAO,CAAEoc,oBAAqBnnB,EAAqB6f,WAAa,UAAa,UAC3FuH,iBAAqD,IAApCpnB,EAAqB6f,WAAsB,CAACwH,OAAQzhB,SAAQ,IAAU,aAM/F5I,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0B1V,eAAeK,QAAarT,KAAM0oB,EAA0B1V,eAAeO,YAAajC,UAAU,OAAOgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAAMzB,SAClNC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,MAAOvI,QAAS,cAAesY,UAAW,QAAQra,SACpEC,cAAC8M,KAAS,CAAC1J,OAAmE,IAArDklB,EAA0B1V,eAAeM,QAA0B6R,UAA8C,IAApC/hB,EAAqB6f,WACzH1Z,MAAM,yBAAY/H,QAAQ,WAAWmD,GAAG,wBACxCgW,SAAWC,GAAUA,GAAwB,mBAAfrF,GAAmCqF,EAAMpH,QACvE4T,UAAWsB,EAA0B1V,eAAeQ,MACpDrE,SAAW7H,GA9gCGU,KAC9B,MAAM8S,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAY7B,GAXkB,mBAAfyE,GACDC,EAAc,MAGhByR,GAAwBjM,IACtBA,EAAyBrI,QAAQK,eAAiB8H,EAC3C,IACFE,MAIJ0N,EAA0B1V,eAAeM,QAAQ,CAClD,MAAM8V,EAA6B,IAAIV,GACvCU,EAA2BpW,eAAeK,MAAQ,GAClD+V,EAA2BpW,eAAeO,aAAc,EACxD6V,EAA2BpW,eAAeM,SAAU,EACpD8V,EAA2BpW,eAAeQ,OAAQ,EAClDmV,EAA6BS,EAC/B,IACC,IAAI,EAo/B0B9L,CAAuBhW,EAAE+H,OAAOrH,OACjDyS,WAAY,CAAEtM,MAAO,CAAEoc,oBAAqBnnB,EAAqB6f,WAAa,UAAa,UAC3FuH,iBAAqD,IAApCpnB,EAAqB6f,WAAsB,CAACwH,OAAQzhB,SAAQ,IAAU,aAM/F5I,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0BzV,YAAYI,QAAarT,KAAM0oB,EAA0BzV,YAAYM,YAAajC,UAAU,SAASgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAAMzB,SAC9MC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,MAAO+P,UAAW,QAAQra,SAC5CC,cAAC8M,KAAS,CAAC1J,OAAgE,IAAlDklB,EAA0BzV,YAAYK,QAA0B6R,UAA8C,IAApC/hB,EAAqB6f,WACtH1Z,MAAM,4BAAa/H,QAAQ,WAAWmD,GAAG,qBACzCgW,SAAWC,GAAUA,GAAwB,gBAAfrF,GAAgCqF,EAAMpH,QACpErE,SAAW7H,GA//BAU,KAC3B,GAAa,KAAVA,EAAa,CACd,MAAM8S,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KACX,gBAAfyE,GACDC,EAAc,MAGhB,MAAM4T,EAA6B,IAAIV,GACpC5N,EAAWnK,OAAS,IACrByY,EAA2BnW,YAAYI,MAAQ,sEAC/C+V,EAA2BnW,YAAYM,aAAc,EACrD6V,EAA2BnW,YAAYK,SAAU,EACjD8V,EAA2BnW,YAAYO,OAAQ,EAC/CmV,EAA6BS,KAG7BnC,GAAwBjM,IACtBA,EAAyBrI,QAAQM,YAAc6H,EACxC,IACFE,MAIPoO,EAA2BnW,YAAYI,MAAQ,GAC/C+V,EAA2BnW,YAAYM,aAAc,EACrD6V,EAA2BnW,YAAYK,SAAU,EACjD8V,EAA2BnW,YAAYO,OAAQ,EAE/C4V,EAA2BjW,YAAYE,MAAQ,GAC/C+V,EAA2BjW,YAAYI,aAAc,EACrD6V,EAA2BjW,YAAYG,SAAU,EACjD8V,EAA2BjW,YAAYK,OAAQ,EAC/CmV,EAA6BS,GAC/B,GACC,IACL,KACI,CACF,MAAMA,EAA6B,IAAIV,GACvCU,EAA2BnW,YAAYI,MAAQ,GAC/C+V,EAA2BnW,YAAYM,aAAc,EACrD6V,EAA2BnW,YAAYK,SAAU,EACjD8V,EAA2BnW,YAAYO,OAAQ,EAC/CmV,EAA6BS,EAC/B,GA+8BiC7L,CAAoBjW,EAAE+H,OAAOrH,OAC9CwH,UAAWoH,EACX0E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,eAC1CyS,WAAY,CAAEtM,MAAO,CAAEoc,oBAAqBnnB,EAAqB6f,WAAa,UAAa,SAAUvI,UAAW,IAChH8P,iBAAqD,IAApCpnB,EAAqB6f,WAAsB,CAACwH,OAAQzhB,SAAQ,IAAU,aAO/F5I,cAAC8M,KAAS,CAAC3D,MAAM,qBAAa4b,UAA8C,IAApC/hB,EAAqB6f,WAC3DzhB,QAAQ,WAAWmD,GAAG,wBACtBrE,GAAI,CAACmK,MAAO,QAAS,sBAAwB,CAAC+P,UAAW,SACzDrL,SAAW7H,GA19BSU,KACZ,mBAAfuN,GACDC,EAAc,MAGhB,MAAMsF,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAQ7B,GAPAmW,GAAwBjM,IACtBA,EAAyBrI,QAAQO,eAAiB4H,EAC3C,IACFE,MAIJ0N,EAA0B1V,eAAeM,QAAQ,CAClD,MAAM8V,EAA6B,IAAIV,GACvCU,EAA2BpW,eAAeK,MAAQ,GAClD+V,EAA2BpW,eAAeO,aAAc,EACxD6V,EAA2BpW,eAAeM,SAAU,EACpD8V,EAA2BpW,eAAeQ,OAAQ,EAClDmV,EAA6BS,EAC/B,IACC,IAAI,EAg8BoB5L,CAAuBlW,EAAE+H,OAAOrH,OACjDyS,WAAY,CAAEtM,MAAO,CAAEoc,oBAAqBnnB,EAAqB6f,WAAa,UAAa,UAC3FuH,iBAAqD,IAApCpnB,EAAqB6f,WAAsB,CAACwH,OAAQzhB,SAAQ,IAAU,OAGzF5I,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0BvV,YAAYE,QAAarT,KAAM0oB,EAA0BvV,YAAYI,YAAYpT,SACxJC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,MAAO+P,UAAW,QAAQra,SAC5CC,cAAC8M,KAAS,CAAC3D,MAAM,4BAAa4b,UAA8C,IAApC/hB,EAAqB6f,WAC3DtI,SAAWC,GAAUA,GAAwB,gBAAfrF,GAAgCqF,EAAMpH,QACpEhS,QAAQ,WAAWmD,GAAG,qBACtBwK,SAAW7H,GAx8BDmW,EAACnW,EAAGU,KAK9B,GAJkB,gBAAfuN,GACDC,EAAc,MAGH,KAAVxN,EAAa,CACd,MAAM8S,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAC7B,MAAMsY,EAA6B,IAAIV,GACpC5N,EAAWnK,OAAS,IACrByY,EAA2BjW,YAAYE,MAAQ,sEAC/C+V,EAA2BjW,YAAYI,aAAc,EACrD6V,EAA2BjW,YAAYG,SAAU,EACjD8V,EAA2BjW,YAAYK,OAAQ,EAC/CmV,EAA6BS,KAG7BnC,GAAwBjM,IACtBA,EAAyBrI,QAAQQ,YAAc2H,EACxC,IACFE,MAIPoO,EAA2BjW,YAAYE,MAAQ,GAC/C+V,EAA2BjW,YAAYI,aAAc,EACrD6V,EAA2BjW,YAAYG,SAAU,EACjD8V,EAA2BjW,YAAYK,OAAQ,EAE/C4V,EAA2BnW,YAAYI,MAAQ,GAC/C+V,EAA2BnW,YAAYM,aAAc,EACrD6V,EAA2BnW,YAAYK,SAAU,EACjD8V,EAA2BnW,YAAYO,OAAQ,EAC/CmV,EAA6BS,GAC/B,GACC,IACL,KACI,CACgB,gBAAf7T,GACDC,EAAc,MAGhB,MAAM4T,EAA6B,IAAIV,GACvCU,EAA2BjW,YAAYE,MAAQ,GAC/C+V,EAA2BjW,YAAYI,aAAc,EACrD6V,EAA2BjW,YAAYG,SAAU,EACjD8V,EAA2BjW,YAAYK,OAAQ,EAC/CmV,EAA6BS,EAC/B,GAo5BiC3L,CAAoBnW,EAAGA,EAAE+H,OAAOrH,OACjDwH,UAAWoH,EACX0E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,eAC1CyS,WAAY,CAAEtM,MAAO,CAAEoc,oBAAqBnnB,EAAqB6f,WAAa,UAAa,SAAUvI,UAAW,IAChH8P,iBAAqD,IAApCpnB,EAAqB6f,WAAsB,CAACwH,OAAQzhB,SAAQ,IAAU,aAM/F5I,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0B9d,OAAOyI,QAAarT,KAAM0oB,EAA0B9d,OAAO2I,YAAajC,UAAU,OAAOgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAAMzB,SAClMC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,MAAO+P,UAAW,QAAQra,SAC5CC,cAAC8M,KAAS,CAAC3D,MAAM,uBAAe/H,QAAQ,WAAWmD,GAAG,gBAAgBnB,OAA2D,IAA7CklB,EAA0B9d,OAAO0I,QACnHqH,SAAWC,GAAUA,GAAwB,WAAfrF,GAA2BqF,EAAMpH,QAC/DpG,WAAY,CAACC,aAAcjN,cAACkN,KAAc,CAACvM,SAAS,MAAKZ,SAAC,UAC1DgP,SAAW7H,GAj6BLU,KACtB,MAAM8S,EAAa9S,EAChBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAY7B,GAXkB,WAAfyE,GACDC,EAAc,MAGhByR,GAAwBjM,IACtBA,EAAyBpQ,OAASkQ,EAC3B,IACFE,MAIJ0N,EAA0B9d,OAAO0I,QAAQ,CAC1C,MAAM8V,EAA6B,IAAIV,GACvCU,EAA2Bxe,OAAOyI,MAAQ,GAC1C+V,EAA2Bxe,OAAO2I,aAAc,EAChD6V,EAA2Bxe,OAAO0I,SAAU,EAC5C8V,EAA2Bxe,OAAO4I,OAAQ,EAC1CmV,EAA6BS,EAC/B,IACC,IAAI,EAu4B0B1L,CAAepW,EAAE+H,OAAOrH,eAMjD5H,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0BlW,OAAOa,QAAarT,KAAM0oB,EAA0BlW,OAAOe,YAAa+W,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAAMzB,SACjLC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,MAAO+P,UAAW,QAAQra,SAC5CC,cAAC8M,KAAS,CAAC3D,MAAM,yBAAc/H,QAAQ,WAAWmD,GAAG,gBAAgBnB,OAA2D,IAA7CklB,EAA0BlW,OAAOc,QAClHqH,SAAWC,GAAUA,GAAwB,WAAfrF,GAA2BqF,EAAMpH,QAC/DpG,WAAY,CAACC,aAAcjN,cAACkN,KAAc,CAACvM,SAAS,MAAKZ,SAAC,UAC1DgP,SAAW7H,GAh5BLU,KACtB,MAAM8S,EAAa9S,EAEhBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAY7B,GAXkB,WAAfyE,GACDC,EAAc,MAGhByR,GAAwBjM,IACtBA,EAAyBxI,OAASsI,EAC3B,IACFE,MAIJ0N,EAA0BlW,OAAOc,QAAQ,CAC1C,MAAM8V,EAA6B,IAAIV,GACvCU,EAA2B5W,OAAOa,MAAQ,GAC1C+V,EAA2B5W,OAAOe,aAAc,EAChD6V,EAA2B5W,OAAOc,SAAU,EAC5C8V,EAA2B5W,OAAOgB,OAAQ,EAC1CmV,EAA6BS,EAC/B,IACC,IAAI,EAq3B0BzL,CAAerW,EAAE+H,OAAOrH,eAMjD5H,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0BjW,kBAAkBY,QAAarT,KAAM0oB,EAA0BjW,kBAAkBc,YAAajC,UAAU,YAAYgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IACvNuU,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN1I,QAAS,CAAE2I,OAAQ,CAAC,IAAK,QAI/BpW,SAEFC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,MAAO+P,UAAW,QAAQra,SAC5CC,cAAC8M,KAAS,CAAC3D,MAAM,8BAAc/H,QAAQ,WAAWmD,GAAG,2BAA2BnB,OAAsE,IAAxDklB,EAA0BjW,kBAAkBa,QACxIqH,SAAWC,GAAUA,GAAwB,sBAAfrF,GAAsCqF,EAAMpH,QAC1EpG,WAAY,CAACC,aAAcjN,cAACkN,KAAc,CAACvM,SAAS,MAAKZ,SAAC,UAC1DgP,SAAW7H,GAz4BMU,KACjC,MAAM8S,EAAa9S,EAEhBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAY7B,GAXkB,sBAAfyE,GACDC,EAAc,MAGhByR,GAAwBjM,IACtBA,EAAyBvI,kBAAoBqI,EACtC,IACFE,MAIJ0N,EAA0BjW,kBAAkBa,QAAQ,CACrD,MAAM8V,EAA6B,IAAIV,GACvCU,EAA2B3W,kBAAkBY,MAAQ,GACrD+V,EAA2B3W,kBAAkBc,aAAc,EAC3D6V,EAA2B3W,kBAAkBa,SAAU,EACvD8V,EAA2B3W,kBAAkBe,OAAQ,EACrDmV,EAA6BS,EAC/B,IACC,IAAI,EA82B0BxL,CAA0BtW,EAAE+H,OAAOrH,eAM5D5H,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0BL,YAAYhV,QAAarT,KAAM0oB,EAA0BL,YAAY9U,YAAajC,UAAU,SAASgZ,YAAa,CAAChqB,GAAI,CAAEsB,OAAQ,IAAMzB,SAC9MC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,QAAS+P,UAAW,QAAQra,SAC9CC,cAACuN,KAAY,CAACgd,eAAa,EAAChmB,GAAG,qBAAqBwgB,UAA8C,IAApC/hB,EAAqB6f,WACjFjb,MAAO4gB,EAAkBP,YAAYrgB,MACrC4F,QAAS2a,EACThX,eAAiB1D,GAAWA,EAAO4a,gBACnCjX,aAAcA,CAAC7R,EAAOkO,IACpBzN,cAAA,SAAQT,EAAKQ,SACV0N,EAAO4a,kBAGZtZ,SAAUA,CAAC7H,EAAGU,IA73BJ4iB,EAACtjB,EAAGU,KAmB9B,GAlBkB,gBAAfuN,GACDC,EAAc,MAGhByR,GAAwBjM,IACtBA,EAAyBkI,cAAgBlb,EAAMkb,cACxC,IACFlI,MAIP6N,GAAqBM,IACnBA,EAAsBd,YAAYrgB,MAAQA,EACnC,IACFmhB,MAIJT,EAA0BL,YAAY/U,QAAQ,CAC/C,MAAM8V,EAA6B,IAAIV,GACvCU,EAA2Bf,YAAYhV,MAAQ,GAC/C+V,EAA2Bf,YAAY9U,aAAc,EACrD6V,EAA2Bf,YAAY/U,SAAU,EACjD8V,EAA2Bf,YAAY7U,OAAQ,EAC/CmV,EAA6BS,EAC/B,GAm2BwCwB,CAAoBtjB,EAAGU,GAC/ChI,KAAM4oB,EAAkBP,YAAYnU,WACpCmH,QAASA,IAAM7E,EAAY,eAC3B8E,OAAShU,GAAMqP,EAAWrP,EAAE+H,OAAOrH,MAAO,eAC1C8F,YAAcC,GACZ3N,cAAC8M,KAAS,IAAKa,EACbxE,MAAM,4BACNoR,SAAWC,GAAUA,GAAwB,gBAAfrF,GAAgCqF,EAAMpH,QACpEhQ,OAAgE,IAAlDklB,EAA0BL,YAAY/U,QACpDhT,GAAI,CACF,wBAAyB,CAAEiqB,qBAAyD,IAApCnnB,EAAqB6f,WAAsB,UAAY,IACvG,0OAA2O,CAAC4H,YAAa,MAAOC,aAAc,OAC9Q,6NAA8N,CAACD,YAAa,MAAOC,aAAc,UAIvQpZ,kBAAgB,EAChBC,UAAW,aAMnBvR,cAACka,KAAa,CAACzY,MAAO6T,EAAavV,SACjCC,cAACma,KAAO,CAAClH,MAAOjT,cAAA,MAAI+N,MAAO,CAAEC,OAAQ,OAAQjO,SAAEuoB,EAA0B7b,OAAOwG,QAAarT,KAAM0oB,EAA0B7b,OAAO0G,YAAYpT,SAC9IC,cAAA,OAAK+N,MAAO,CAAC1D,MAAO,QAAStK,SAC3BC,cAAC8M,KAAS,CAACpN,WAAS,EAACyJ,MAAM,mBAAawhB,WAAS,EAACC,KAAM,EAAGxpB,QAAQ,WAAWmD,GAAG,gBAAgBnB,OAA2D,IAA7CklB,EAA0B7b,OAAOyG,QAC9IhT,GAAI,CAAC,sBAAwB,CAACka,UAAW,SACzCrL,SAAW7H,GA53BLU,KACtB,MAAM8S,EAAa9S,EAEhBmM,EAAUuE,SACXqC,cAAc5G,EAAUuE,SAG1BvE,EAAUuE,QAAU5H,YAAW,KAC7BmW,GAAwBjM,IACtBA,EAAyBnO,OAASiO,EAC3B,IACFE,KAEL,GAOD,IAAI,EAw2B0BiQ,CAAe3jB,EAAE+H,OAAOrH,eAMjD5H,cAACyd,KAAgB,CAACC,QAAS1d,cAAC2d,KAAQ,CAACC,QAAS4K,EAAkBlW,cAAgBpS,GAAI,CAACmK,MAAO,QAC1FlB,MAAM,qDAAkC4F,SAAW7H,IAAM2W,OA52BxCC,EA42B4D5W,EAAE+H,OAAO2O,QA32BhGiJ,GAAwBjM,IACtBA,EAAyBtI,YAAcwL,EAChC,IACFlD,WAIP6N,GAAqBM,IACnBA,EAAsBzW,YAAcwL,EAC7B,IACFiL,MAXoBjL,KA42B8E,IAEjGte,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,SAAU/I,GAAI,EAAGmI,MAAO,QAAQtK,SAAA,CACzEC,cAACsL,IAAM,CAAClK,QAAQ,YAAYd,MAAM,UAAUJ,GAAI,CAAC4K,GAAI,GAAIrK,QAASA,IAAMsjB,IAAwBhkB,SAAC,8BACjGC,cAACsL,IAAM,CAAClK,QAAQ,YAAYd,MAAM,UAAUG,QAASA,IAAMqjB,IAAmB/jB,SAAC,yBAC/EC,cAACsL,IAAM,CAAClK,QAAQ,YAAYd,MAAM,QAAQJ,GAAI,CAAC2O,GAAI,GAAIpO,QAASA,IAAM2oB,IAA4BrpB,SAAC,sCAM3GC,cAACsjB,GAAgB,CACfU,0BAA2BA,EAA2BH,6BAA8BA,EACpFC,iBAAkBA,EAAkBpL,2BAA4BnZ,EAAMmZ,2BACtEwL,mCAAoCA,EAAoCN,sCAAuCA,EAC/G5gB,qBAAsBA,IAGxBhD,cAACglB,GAAU,CACT8B,oBAAqBA,EAAqBb,uBAAwBA,EAClEjjB,qBAAsBA,EAAsB6jB,wBAAyBA,IASvE7mB,cAACwR,GAAe,CACdC,oBAAqBA,EAAqB4D,uBAAwBA,MAI1E,ECzzDeyV,OAxHf,WAEE,MAAOC,EAAmB3K,GAAwB7a,oBAAS,GAErDylB,EAAgC,CAACzkB,aAAc,GAAIE,aAAc,KAEhEga,EAAyB/H,GAA8BnT,oBAAS,IAChE0jB,EAA+BlG,GAAoCxd,sBAEnEue,EAAkBmH,GAAuB1lB,oBAAS,IAClD2lB,EAAiCC,GAAsC5lB,oBAAS,IAChF6jB,EAA2BgC,GAAgC7lB,oBAAS,IAEpEyK,EAAwBI,GAA6B7K,sBACrDoL,EAAkCN,GAAuC9K,oBAAS,GAyDzF,OAjCAkC,qBAAU,KAV8B5E,WACtC,MAAMK,QAAiBe,KACA,MAApBf,EAASU,OACVwM,EAA2B,CAAC3J,aAAcvD,EAASS,KAAK8C,aAAcF,aAAcrD,EAASS,KAAK4C,eAGlG6J,EAA0B4a,EAC5B,EAIAK,EAAiC,GAChC,IAEH5jB,qBAAU,KACR,MAAM+O,EAAiB1N,IACA,MAAlBA,EAAMuX,SACPvX,EAAM4N,iBA5BVyU,GAAmC,IAgCP,MAAlBriB,EAAMuX,SACZvX,EAAM4N,iBA7BVuU,GAAoB,IAiCQ,MAAlBniB,EAAMuX,UACZvX,EAAM4N,iBA9BV0U,GAA6B,GAoC3B,EAKF,OAFA9K,SAASC,iBAAiB,UAAW/J,GAE9B,KACL8J,SAASE,oBAAoB,UAAWhK,EAAc,CACvD,GACA,IAGDhX,eAAAkI,WAAA,CAAA3H,SAAA,CACKC,cAAC2O,KAAS,CAAChP,SAAS,KAAKO,GAAI,CAACgC,GAAI,IAAInC,SACnCC,cAACqB,IAAG,CAACnB,GAAI,CAAE4V,QAAS,OAAQtL,OAAQ,QAAQzK,SACxCC,cAACokB,KAAI,CAACC,WAAS,EAACxW,QAAS,EAAG3N,GAAI,CAACorB,WAAY,GAAGvrB,SAC7CiQ,EACCxQ,eAAAkI,WAAA,CAAA3H,SAAA,CACEC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAExkB,SACfC,cAACge,GAAoB,CACnByC,wBAAyBA,EAAyB/H,2BAA4BA,EAC9E1I,uBAAwBA,EACxBK,oCAAqCA,EACrC0a,kBAAmBA,EAAmB3K,qBAAsBA,EAC5D6I,8BAA+BA,EAA+BlG,iCAAkCA,MAIpG/iB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAExkB,SACdgrB,EACC/qB,cAAA,OAAK+N,MAAO,CAACqM,UAAW,OAAQkR,WAAY,QAAQvrB,SAClDC,cAAC0gB,KAAQ,CAACtf,QAAQ,cAAciJ,MAAM,OAAOG,OAAQ,QAGvDxK,cAAC8nB,GAAW,CACV6B,UAAWuB,EAAiCtB,aAAcuB,EAC1DtB,UAAW/F,EAAkBgG,aAAcmB,EAC3ClB,UAAWX,EAA2BY,aAAcoB,EACpD3K,wBAAyBA,EAAyB/H,2BAA4BA,EAC9E1I,uBAAwBA,EACxBiZ,8BAA+BA,EAA+BlG,iCAAkCA,SAMtG,WAMb/iB,cAACyP,GAAuB,CACvBkB,iCAAkCA,EAAkCN,oCAAqCA,EACzGL,uBAAwBA,EAAwBI,0BAA2BA,MAIrF,E,oDCyOemb,OA5Uf,WAEI,MAAOtN,EAAYC,GAAiB3Y,mBAAS,CAAC4Y,UAAW,EAAGC,UAAW,6CAChEoN,EAAkClN,GAA4B/Y,mBACjE,CACI,CAAE6Y,UAAW,0CAAyBG,YAAa,GACnD,CAAEH,UAAW,uCAAwBG,YAAa,GAClD,CAAEH,UAAW,wCAAuBG,YAAa,MAIlDkN,EAAiBC,GAAsBnmB,sBAEvCqZ,EAAqBC,GAA0BtZ,mBAAS,KAExDomB,EAAqCC,GAA0CrmB,mBAAS,KACxFsmB,EAAkCC,GAAuCvmB,sBACzEwmB,EAAiCC,GAAsCzmB,mBAAS,KAEhFC,EAASC,GAAcF,oBAAS,IAEhC0mB,EAAMC,GAAW3mB,mBAAS,IAC1B4mB,EAAWC,GAAgB7mB,qBAE5B8mB,EAAkB1oB,IAEpB,GAAGA,EAAK,CACJ,MAAM2oB,EAAsB9E,KAAK+E,KAAK5oB,EAAK4M,OAF1B,GAGXic,EAHW,GAGGP,EAAO,GACrBQ,EAAkB9oB,EAAK+oB,MAAMF,EAAYA,EAJ9B,GAMjBV,EAAoCW,GACpCT,EAAmCS,GAEnCL,EAAaE,EACjB,KACI,CACA,MAAMA,EAAsB9E,KAAK+E,KAAKZ,EAAoCpb,OAZzD,GAaXic,EAbW,GAaGP,EAAO,GACrBQ,EAAkBd,EAAoCe,MAAMF,EAAYA,EAd7D,GAgBjBV,EAAoCW,GACpCT,EAAmCS,GAEnCL,EAAaE,EACjB,GAuEEpN,EAAiBA,CAACC,EAAUC,KAC9B,MAAMC,EAAsBD,EAAWtI,cACvC,OAAOqI,EAASpI,QAAOuI,IACrB,MAAM,UAAEtb,EAAS,gBAAE4b,EAAe,YAAE/M,EAAW,YAAEE,GAAgBuM,EACjE,OAAOtb,EAAU8S,cAAcM,SAASiI,IAAwBO,EAAgB9I,cAAcM,SAASiI,IAAwBxM,EAAYiE,cAAcM,SAASiI,IAAwBtM,EAAY+D,cAAcM,SAASiI,EAAoB,GACjP,EAGAsN,EAA0B9pB,MAAOsB,EAAeQ,KAClDc,GAAW,GACX,MAAMmnB,QAAuCloB,GAAuBP,EAAeQ,EAAiB,GACpG,GAA6C,MAA1CioB,EAA+BhpB,OAAe,CAE7C,MAAMipB,QAAwCxoB,KAE9CqnB,EAAmBmB,GAEnB,MAAMC,EAA4BD,EAAgC9V,QAAOsB,GAAkC,IAA1BA,EAAKzT,mBAC/EmoB,EAAoCF,EAAgC9V,QAAOsB,GAAkC,IAA1BA,EAAKzT,mBACzFooB,EAAoCH,EAAgC9V,QAAOsB,GAAkC,IAA1BA,EAAKzT,mBAExFqoB,EAAyC,CAC3C,CAAE7O,UAAW,0CAAyBG,YAAauO,EAA0Bvc,QAC7E,CAAE6N,UAAW,uCAAwBG,YAAawO,EAAkCxc,QACpF,CAAE6N,UAAW,wCAAuBG,YAAayO,EAAkCzc,SAGvF+N,EAAyB2O,GAEG,IAAzBhP,EAAWE,WACVyN,EAAuCkB,GACvCT,EAAeS,IAEc,IAAzB7O,EAAWE,WACfyN,EAAuCmB,GACvCV,EAAeU,KAGfnB,EAAuCoB,GACvCX,EAAeW,IAGnBze,IAAM4B,QAAQyc,EAA+BjpB,KAAM,CAACoM,QAAS,kCACjE,MAEIxB,IAAMnL,MAAMwpB,EAA+BjpB,KAAM,CAACoM,QAAS,iCAE/DtK,GAAW,EAAM,EAGfynB,EAA0BrqB,MAAOsB,EAAeQ,KAClDc,GAAW,GACX,MAAMmnB,QAAuCloB,GAAuBP,EAAeQ,EAAiB,GACpG,GAA6C,MAA1CioB,EAA+BhpB,OAAe,CAC7C,MAAMipB,QAAwCxoB,KAE9CqnB,EAAmBmB,GAEnB,MAAMC,EAA4BD,EAAgC9V,QAAOsB,GAAkC,IAA1BA,EAAKzT,mBAC/EmoB,EAAoCF,EAAgC9V,QAAOsB,GAAkC,IAA1BA,EAAKzT,mBACzFooB,EAAoCH,EAAgC9V,QAAOsB,GAAkC,IAA1BA,EAAKzT,mBAExFqoB,EAAyC,CAC3C,CAAE7O,UAAW,0CAAyBG,YAAauO,EAA0Bvc,QAC7E,CAAE6N,UAAW,uCAAwBG,YAAawO,EAAkCxc,QACpF,CAAE6N,UAAW,wCAAuBG,YAAayO,EAAkCzc,SAGvF+N,EAAyB2O,GAEG,IAAzBhP,EAAWE,WACVyN,EAAuCkB,GACvCT,EAAeS,IAEc,IAAzB7O,EAAWE,WACfyN,EAAuCmB,GACvCV,EAAeU,KAGfnB,EAAuCoB,GACvCX,EAAeW,IAGnBze,IAAM4B,QAAQyc,EAA+BjpB,KAAM,CAACoM,QAAS,kCACjE,MAEIxB,IAAMnL,MAAMwpB,EAA+BjpB,KAAM,CAACoM,QAAS,iCAE/DtK,GAAW,EAAM,EAWrB,OARAgC,qBAAU,KA3J4B5E,WAClC4C,GAAW,GACX,MAAMonB,QAAwCxoB,KAE9CqnB,EAAmBmB,GAEnB,MAAMC,EAA4BD,EAAgC9V,QAAOsB,GAAkC,IAA1BA,EAAKzT,mBAC/EmoB,EAAoCF,EAAgC9V,QAAOsB,GAAkC,IAA1BA,EAAKzT,mBACzFooB,EAAoCH,EAAgC9V,QAAOsB,GAAkC,IAA1BA,EAAKzT,mBAExFqoB,EAAyC,CAC3C,CAAE7O,UAAW,0CAAyBG,YAAauO,EAA0Bvc,QAC7E,CAAE6N,UAAW,uCAAwBG,YAAawO,EAAkCxc,QACpF,CAAE6N,UAAW,wCAAuBG,YAAayO,EAAkCzc,SAGvF+N,EAAyB2O,GAEG,IAAzBhP,EAAWE,WACVyN,EAAuCkB,GACvCT,EAAeS,IAEc,IAAzB7O,EAAWE,WACfyN,EAAuCmB,GACvCV,EAAeU,KAGfnB,EAAuCoB,GACvCX,EAAeW,IAGnBvnB,GAAW,EAAM,EA6HjB0nB,EAA+B,GAChC,IAEH1lB,qBAAU,KACN4kB,GAAgB,GACjB,CAACJ,IAGAjsB,cAAC2O,KAAS,CAAChP,SAAS,KAAKO,GAAI,CAACgC,GAAI,GAAI2K,EAAG,GAAI9M,SACzCC,cAACyhB,KAAc,CAACxV,UAAWyV,KAAOxhB,GAAI,CAAC2gB,UAAW,EAAGrW,OAAQ,QAAS7J,SAAU,YAAYZ,SACvFyF,EACGxF,cAAA0H,WAAA,CAAA3H,SACIP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,SAAUD,cAAe,SAAUJ,gBAAiB,UAAW6I,OAAQ,QAAQzK,SAAA,CAC5IC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,mFAIrDP,eAAAkI,WAAA,CAAA3H,SAAA,CACIP,eAAC6B,IAAG,CAAAtB,SAAA,CACAC,cAAC4N,KAAK,CAACE,UAAU,MAAMD,QAAS,EAAG3N,GAAI,CAAC+K,eAAgB,SAAU/I,GAAI,KAAKnC,SACtEyrB,EAAiCrgB,KAAI,CAACiiB,EAAkCC,IACrErtB,cAACghB,KAAK,CAACC,aAAcmM,EAAiC7O,YAAaje,MAAM,QAAOP,SAC5EC,cAACkhB,KAAI,CAAC/X,MAAOikB,EAAiChP,UAAW9d,MAAO+sB,IAAsCpP,EAAWE,UAAY,UAAY,UACrI1d,QAASA,IAlJtB0gB,EAACC,EAAWhD,KAEnC,GADAF,EAAc,CAACC,UAAWiD,EAAWhD,UAAWA,IAC/B,IAAdgD,EAAgB,CACf,MAAM0L,EAA4BrB,EAAgB1U,QAAOsB,GAAkC,IAA1BA,EAAKzT,mBACtEgnB,EAAuCkB,GACvCT,EAAeS,EACnB,MACK,GAAiB,IAAd1L,EAAgB,CACpB,MAAM2L,EAAoCtB,EAAgB1U,QAAOsB,GAAkC,IAA1BA,EAAKzT,mBAC9EgnB,EAAuCmB,GACvCV,EAAeU,EACnB,KACI,CACA,MAAMC,EAAoCvB,EAAgB1U,QAAOsB,GAAkC,IAA1BA,EAAKzT,mBAC9EgnB,EAAuCoB,GACvCX,EAAeW,EACnB,GAkImD7L,CAAmBkM,EAAmCD,EAAiChP,cAAc,qBAAAzb,OAFjB0qB,QAOnH7tB,eAAC2B,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACG,UAAW,SAAUD,SAAU,UAAWD,WAAY,UAAUJ,SAAA,CAAC,gBAAWke,EAAWG,UAAU,+BAE/Hpe,cAACqB,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,SAAUJ,GAAI,GAAG9K,SACxDC,cAAC8M,KAAS,CAAC5M,GAAI,CAACmK,MAAO,IAAK,iCAAkC,CAAChK,UAAW,WAAYwc,KAAK,QACvFzb,QAAQ,WAAWigB,YAAY,2FAA+CzZ,MAAOgX,EAAqB7P,SAAW7H,GAxIvHU,KAC1B,MAAM8S,EAAa9S,EACnBiX,EAAuBnE,GAGrBsR,EADW,KAAVpkB,EACkCikB,EAEA3M,EAAe2M,EAAkCnR,GACtF,EAgIuJ4G,CAAqBpa,EAAE+H,OAAOrH,OACzJoF,WAAY,CACRuU,eACIvhB,cAACkN,KAAc,CAACvM,SAAS,QAAOZ,SAACC,cAACwhB,KAAU,MAEhDvU,aACIjN,cAACkN,KAAc,CAACvM,SAAS,MAAKZ,SACD,KAAxB6e,EACG5e,cAACc,IAAS,CAACZ,GAAI,CAAC0L,OAAQ,WAAYD,YAAY,SAC5ClL,QAASA,IAAM,CAACoe,EAAuB,IAAKmN,EAAmCH,MAGnF,eAS5BrsB,eAACsiB,KAAK,CAACC,cAAY,EAAAhiB,SAAA,CACfC,cAACiiB,KAAS,CAAAliB,SACNP,eAAC0iB,KAAQ,CAAChiB,GAAI,CAAC,OAAQ,CAACI,MAAO,mBAAoBqB,gBAAiB,SAAS5B,SAAA,CACzEC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,4BACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,mBACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,iBACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,sBACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,2BACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,+BACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,sCACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,4BACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,mCACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,6BACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,qBAI3DC,cAACqiB,KAAS,CAAAtiB,SACLgsB,EAAgC5gB,KAAI,CAACmiB,EAA6BC,IAC/D/tB,eAAC0iB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAA8CviB,GAAI,CAAC,SAAU,CAACyB,gBAAiB,kCAAkC5B,SAAA,CAClIC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,OAAQjK,SAAU,WAAWL,SAAEutB,EAA4BtpB,YAC/FhE,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,OAAQjK,SAAU,WAAWL,SAAEutB,EAA4B1N,kBAC/F5f,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,OAAQjK,SAAU,WAAWL,SAAE2b,KAAO4R,EAA4BzN,aAAapE,OAAO,gBAC1Hzb,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,OAAQjK,SAAU,WAAWL,UAAyC,IAAvCutB,EAA4B3a,OAAkB,MAAQ,YACzH3S,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACijB,WAAY,SAAUC,SAAU,SAAUC,aAAc,WAAY1jB,SAAU,IAAKS,SAAU,UAAUL,SAChIC,cAACma,KAAO,CAAClH,MAAOjT,cAACmB,IAAU,CAACC,QAAQ,YAAWrB,SAAEutB,EAA4BxN,cAA0B/f,SACnGC,cAAA,QAAAD,SAAOutB,EAA4BxN,kBAG3C9f,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,OAAQjK,SAAU,WAAWL,SAAiD,KAA/CutB,EAA4Bxa,eAAwBwa,EAA4Bxa,eAAiBwa,EAA4B1a,iBAChM5S,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,OAAQjK,SAAU,WAAWL,SAA8C,KAA5CutB,EAA4Bva,YAAqBua,EAA4Bva,YAAcua,EAA4Bza,cAC1L7S,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,OAAQjK,SAAU,WAAWL,SAAEutB,EAA4BE,cAC/FxtB,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,OAAQjK,SAAU,WAAWL,SAAEutB,EAA4BG,eAC/FztB,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,OAAQjK,SAAU,WAAWL,SAAE2b,KAAO4R,EAA4B3oB,iBAAiB8W,OAAO,gBAC9Hzb,cAACmiB,KAAS,CAACC,MAAwD,IAAjDkL,EAA4B1oB,iBAAyB,OAAS,SAAU1E,GAAI,CAACmK,MAAO,OAAQjK,SAAU,UAAUL,SAC5E,IAAjDutB,EAA4B1oB,iBACzBpF,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAAC0tB,KAAS,CAAC/hB,YAAY,uCAAkBzL,GAAI,CAACI,MAAO,QAASsL,OAAQ,UAAWd,GAAI,IAAMrK,QAASA,IAAMksB,EAAwBW,EAA4BnpB,cAAempB,EAA4B3oB,mBACzM3E,cAAC2tB,KAAU,CAAChiB,YAAY,qCAAmBzL,GAAI,CAACI,MAAO,MAAOsL,OAAQ,WAAYnL,QAASA,IAAMysB,EAAwBI,EAA4BnpB,cAAempB,EAA4B3oB,sBAGpM3E,cAAA0H,WAAA,CAAA3H,SACsD,IAAjDutB,EAA4B1oB,iBACzB5E,cAAC2tB,KAAU,CAAChiB,YAAY,qCAAmBzL,GAAI,CAACI,MAAO,MAAOsL,OAAQ,WAAYnL,QAASA,IAAMysB,EAAwBI,EAA4BnpB,cAAempB,EAA4B3oB,mBAEhM3E,cAAC0tB,KAAS,CAAC/hB,YAAY,uCAAkBzL,GAAI,CAACI,MAAO,QAASsL,OAAQ,UAAWd,GAAI,IAAMrK,QAASA,IAAMksB,EAAwBW,EAA4BnpB,cAAempB,EAA4B3oB,yBA1BxL4oB,UAoCL,IAA3CxB,EAAgCxb,OACzBvQ,cAACqB,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,SAAUtK,SAAU,WAAYitB,OAAQ,EAAGvjB,MAAO,QAAQtK,SACjGC,cAAC6tB,KAAU,CAACC,MAAO3B,EAAWF,KAAMA,EAAMld,SA/QjDgf,CAACjlB,EAAOlB,KAC7BskB,EAAQtkB,EAAM,EA8QoFtH,MAAM,cAGhF,WAQhC,E,yDCkBe0tB,OAzVf,SAA2BzuB,GACvB,MAAO0uB,EAAgCC,GAAqC3oB,sBACrEkM,EAAqB4D,GAA0B9P,oBAAS,GAGzDwO,EAAYC,iBAAO,MACnBma,EAAcna,iBAAO,MACrBC,EAAeD,iBAAO,MActBoa,EAXYC,aAAW,CACzBC,KAAM,CACJ,iBAAkB,CAChBhuB,MAAO,WAET,6BAA8B,CAC5BA,MAAO,aAKCiuB,GAEVC,EAAoCA,CAAC1lB,EAAO2D,KAC3CA,GAAqB,kBAAXA,IAITyhB,IACA3uB,EAAMkvB,+BAA8B,GACxC,EA8BEC,EAAiC7rB,UACnC,MAAM8rB,EAAiCpW,KAAEqW,MAAMrvB,EAAMsvB,4BAUrD,GARAF,EAA+BG,WAAaH,EAA+BG,WAAW3jB,KAAI4jB,IAAc,IACjGA,EAEHC,iBAAkBD,EAAeC,iBAAiBjY,QAAOkY,GAAwBA,EAAqBC,yBAAyB3e,OAAS,QAGxIwG,QAAOgY,GAAkBA,EAAeC,iBAAiBze,OAAS,IAEd,IAArDoe,EAA+BG,WAAWve,OAAa,CACtD8E,GAAuB,GACvB,MAAM8Z,OjB4FStsB,WACvB,MAAMY,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,oCAAAO,OAAmCysB,GAAqB3rB,GAC3FR,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EiBpG4CmsB,CAAmB9vB,EAAMsvB,2BAA2BO,mBAoB1F,GAlBsC,MAAnCD,EAAwBvrB,QACvB+qB,EAA+BhqB,gBAAkBwqB,EAAwBxrB,KAAKgB,gBAC9EgqB,EAA+B5O,WAAaoP,EAAwBxrB,KAAKoc,WACzE4O,EAA+BlB,aAAe0B,EAAwBxrB,KAAK8pB,aAExEkB,EAA+BW,gBAC9BX,EAA+BY,gBAAkBJ,EAAwBxrB,KAAK4rB,gBAC9EZ,EAA+Ba,SAAWL,EAAwBxrB,KAAK6rB,SACvEb,EAA+Brc,YAAc6c,EAAwBxrB,KAAK2O,cAI9E/D,IAAMnL,MAAM+rB,EAAwBxrB,KAAM,CAACoM,QAAS,WAGxDme,EAAkCS,GAElCtZ,GAAuB,GAC4B,KAAhD9V,EAAMsvB,2BAA2BY,WAAkB,CAClD,MAAMlf,EAAS4d,EAAY7V,QAAQ1Q,MAAM2I,OACzC4d,EAAY7V,QAAQoX,kBAAkBnf,EAAQA,GAC9C4d,EAAY7V,QAAQlF,OACxB,MAEI+a,EAAY7V,QAAQlF,OAE5B,GAGEuc,EAAuB9sB,UACzB,GAAGkV,IAAgB,CAGX,GAFJ1C,GAAuB,GAEhB4Y,EAA+Ba,WAAWc,MAAKb,IAAmD,IAAjCA,EAAec,gBAAwB,CACvG,MAAMC,EAAe7B,EAA+Ba,WAAW/X,QAAOgY,IAAmD,IAAjCA,EAAec,gBACjGtsB,EAAkB,CAAES,UAAWiqB,EAA+BjqB,UAAW8rB,aAAcA,SACvFxsB,EAAqBC,EAC/B,CAEA,MAAMwsB,EAAkC9B,EAA+Ba,WAAW/X,QAAOgY,IAAoD,IAAlCA,EAAeiB,iBAC1H/B,EAA+Ba,WAAaiB,EAC5C,MAAME,OjBpEOptB,WACzB,MAAMP,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAMC,KAAK,GAADJ,OAAIP,EAAU,+BAA+B8tB,EAChE,CACIztB,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAIpCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EiBqD+CitB,CAAqBlC,GACrB,MAAlCgC,EAAuBrsB,QACtB2K,IAAM4B,QAAQ8f,EAAuBtsB,KAAM,CAACoM,QAAS,aACrDxQ,EAAM6wB,qCACNlC,IACA3uB,EAAMkvB,+BAA8B,IAGpClgB,IAAMnL,MAAM6sB,EAAuBtsB,KAAM,CAACoM,QAAS,UAE3D,CACAsF,GAAuB,EAAM,EAG/B0C,EAAgBA,KAClB,IAAIE,GAAU,EAkBd,OAjBiD,OAA9CgW,EAA+BwB,aAC9BtB,EAAY7V,QAAQlF,QACpB7E,IAAMnL,MAAM,0DAA+B,CAAC2M,QAAS,WACrDkI,GAAU,GAGwC,iBAAnDgW,EAA+BtpB,kBAC9BsP,EAAaqE,QAAQlF,QACrB7E,IAAMnL,MAAM,mDAA8B,CAAC2M,QAAS,WACpDkI,GAAU,GAGwC,KAAnDgW,EAA+BtpB,kBAC9BsP,EAAaqE,QAAQlF,QACrB7E,IAAMnL,MAAM,sDAA+B,CAAC2M,QAAS,WACrDkI,GAAU,GAEPA,CAAO,EASlB,OANAxQ,qBAAU,KACHlI,EAAM8wB,4BACL3B,GACJ,GACD,CAACnvB,EAAM8wB,6BAGN7wB,eAAAkI,WAAA,CAAA3H,SAAA,CACIP,eAACC,IAAM,CAACC,WAAW,EAAMC,SAAU,KAAMC,KAAML,EAAM8wB,2BAA4B7kB,QAASA,CAAC1C,EAAO2D,IAAW+hB,EAAkC1lB,EAAO2D,GAAS3M,sBAAsB,EAAKC,SAAA,CACtLC,cAACC,IAAW,CAACC,GAAI,CAAEC,WAAY,SAAUC,SAAU,OAAQC,UAAW,SAAUC,MAAO,MAAOC,cAAe,aAAcR,SAAC,4CAC5HC,cAACQ,IAAU,CAACC,QAASA,IAAM+tB,IAAqCtuB,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACzGC,cAACc,IAAS,CAACV,SAAS,YAExBJ,cAACe,IAAa,CAACC,UAAQ,EAACd,GAAI,CAACe,GAAI,OAAQC,GAAI,QAAQnB,SACjDC,cAACqB,IAAG,CAACnB,GAAI,CAACe,GAAI,EAAGC,GAAI,GAAGnB,SACpBC,cAACswB,KAAI,CAACpwB,GAAI,CAAC2M,EAAG,GAAG9M,SACbC,cAACqB,IAAG,CAAAtB,SACCkuB,GACwD,IAArDA,EAA+Ba,WAAWve,OACtCvQ,cAAA,OAAKoM,UAAU,8BAA6BrM,SACvCkuB,EAA+Ba,WAAW3jB,KAAI,CAAC4jB,EAAgBwB,IAC5D/wB,eAAA,OAAAO,SAAA,CACIC,cAACmB,IAAU,CAACjB,GAAI,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,YAAYP,SAAEgvB,EAAeyB,eAC3FzB,EAAeC,iBAAiB7jB,KAAI,CAAC8jB,EAAsBwB,IACxDjxB,eAAA,OAAK4M,UAAU,oCAAoC2B,MAAO,CAAC8C,aAAc,QAAQ9Q,SAAA,CAC7EC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACC,WAAY,SAAUC,SAAU,OAAQC,UAAW,UAAUN,SAAEkvB,EAAqByB,uBAExHzB,EAAqBC,yBAAyB/jB,KAAI,CAACwlB,EAAcC,IAC9D5wB,cAAA,OAAAD,SACIP,eAAC4kB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAEvkB,SAAA,CACP,IAAlB6wB,EACGpxB,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BiQ,YAAa,MAAOhkB,EAAG,IAAK9M,SACrFC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEkvB,EAAqB6B,wBAGvD,UAA7CH,EAAaI,4BACVvxB,eAAAkI,WAAA,CAAA3H,SAAA,CACIP,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAKrkB,GAAI,CAAC0gB,OAAQ,6BAA8BiQ,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,UAAUjC,SAAA,CACxJC,cAACgxB,KAAY,CAAC9wB,GAAI,CAACE,SAAU,SAAUE,MAAO,OAAQwK,GAAI,MAC1D9K,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU8wB,WAAY,OAAOlxB,SAAEkvB,EAAqBiC,0BAGxHlxB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAKrkB,GAAI,CAAC0gB,OAAQ,6BAA8B/T,EAAG,IAAK9M,SACnEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU0O,GAAI,IAAK9O,SAAEkvB,EAAqBkC,2BAIlHnxB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8B/T,EAAG,IAAK9M,SACjEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEkvB,EAAqBkC,2BAK7G,KAGJ3xB,eAAC6B,IAAG,CAAuC0M,MAAO,CAACjM,QAAS,OAAQuI,MAAO,QAAQtK,SAAA,CAC/EC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BwQ,UAAW,MAAOP,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQE,WAAY,UAAUjC,SAC9IC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACE,SAAU,QAAQL,SAAE4wB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVvxB,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAKrkB,GAAI,CAAC0gB,OAAQ,6BAA8BwQ,UAAW,MAAOP,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQmJ,eAAgB,UAAUlL,SACpJC,cAAC2d,KAAQ,CAACoH,UAAQ,EAACnH,QAAS+S,EAAaW,sBACrClD,QAAS,CAAEE,KAAMF,EAAQE,MACzBpuB,GAAI,CAAC,+BAAgC,CAACE,SAAU,WAAYE,MAAM,YAI1EN,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAIxkB,SACfC,cAAA,OAAKoM,UAAU,kBAAiBrM,SAC5BC,cAAA,OAAKoM,UAAU,eAAcrM,SACzBC,cAACuxB,KAAgB,CAACnlB,UAAU,oBAAoBwe,KAAM,EAAG7F,UAAQ,EAACtK,aAAckW,EAAaa,+BAM7GxxB,cAAA0H,WAAA,CAAA3H,SACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAExkB,SACbC,cAAA,OAAKoM,UAAU,kBAAiBrM,SAC5BC,cAAA,OAAKoM,UAAU,eAAcrM,SACzBC,cAACuxB,KAAgB,CAACnlB,UAAU,oBAAoBwe,KAAM,EAAG7F,UAAQ,EAACtK,aAAckW,EAAaa,gCAI1G,gBAAA7uB,OA/BeiuB,QAkCvB,gBAAAjuB,OA/DeiuB,QAiE5B,oBAAAjuB,OArEqG8tB,QAuE7G,kBAAA9tB,OA1EkB4tB,QAiFxCvwB,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAUE,UAAW,UAAUN,SAAC,6EAO7GC,cAAC+d,KAAa,CAAC7d,GAAI,CAACkxB,UAAW,mBAAmBrxB,SAC7CkuB,GACwD,IAArDA,EAA+Ba,WAAWve,OACtC/Q,eAAA,OAAKuO,MAAO,CAAC1D,MAAO,OAAQ+C,QAAS,qBAAqBrN,SAAA,CACtDC,cAACuxB,KAAgB,CAAgElQ,YAAY,6CAAsBtT,MAAO,CAAC1D,MAAO,OAAQ+C,QAAS,OAAQhN,SAAU,QAAS2O,SAAW7H,IAAMuqB,OAxOtL7pB,EAwOkNV,EAAE+H,OAAOrH,WAvO5PmM,EAAUuE,QAAU5H,YAAW,KAC3Bwd,GAAkCwD,IAC9BA,EAAmCjC,WAAa7nB,EACzC,IAAI8pB,KACb,GACH,MAN8B9pB,KAwOkO,EAACmf,IAAKoH,EAAa1T,aAAcwT,EAA+BwB,YAAW,cAAA9sB,OAAjRsrB,EAA+BjqB,YAE/DiqB,EAA+BqB,cAC5BtvB,cAAA0H,WAAA,CAAA3H,SACIP,eAAC6B,IAAG,CAACnB,GAAI,CAAC2K,GAAI,IAAK9K,SAAA,CACiC,KAA/CkuB,EAA+B3b,aAAqE,OAA/C2b,EAA+B3b,YACjF,KAEAtS,cAAA0H,WAAA,CAAA3H,SACIC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,WAAYH,WAAY,SAAUC,SAAU,UAAUL,SAAA,IAAA4C,OAAMsrB,EAA+B3b,iBAIpF,KAAnD2b,EAA+BsB,iBAA6E,OAAnDtB,EAA+BsB,gBACrF,KAEAvvB,cAAA0H,WAAA,CAAA3H,SACIC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,WAAYH,WAAY,SAAUC,SAAU,UAAUL,SAAA,IAAA4C,OAAMsrB,EAA+BsB,qBAI3F,KAA5CtB,EAA+BuB,UAAgE,OAA5CvB,EAA+BuB,SAC/E,KAEAxvB,cAAA0H,WAAA,CAAA3H,SACIC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,WAAYH,WAAY,SAAUC,SAAU,UAAUL,SAAA,IAAA4C,OAAMsrB,EAA+BuB,mBAOhJ,KAGHvB,EAA+BtpB,gBAChC3E,cAAA0H,WAAA,CAAA3H,SACIP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,SAAUJ,GAAI,GAAG9K,SAAA,CACxDP,eAAC2B,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACgC,GAAI,OAAQ2I,GAAI,OAAQC,GAAI,GAAG/K,SAAA,CAAC,mCAAmBC,cAAA,QAAM+N,MAAO,CAAC5N,WAAY,SAAUG,MAAO,WAAWP,SAAEkuB,EAA+BR,kBACxKztB,cAACmb,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAIvb,SAChEC,cAACub,KAAa,CAAC/F,WAAY,CAAC,cAAczV,SACtCC,cAACwb,KAAU,CAACrS,MAAM,oCAAoBwoB,aAAW,EAC7ClW,OAAO,aAAahB,aAAciB,KAAOuS,EAA+BtpB,iBACxEoK,SAAWnH,GA1Q9BA,KAC1BA,IACImM,EAAUuE,SACTqC,cAAc5G,EAAUuE,SAE5BvE,EAAUuE,QAAU5H,YAAW,KAC3B,MAAMgK,EAAa9S,EAAMkU,GACnBvE,EAAgBmE,KAAOhB,GAAYe,OAAO,cAC3B,iBAAlBlE,GACC2W,GAAkCwD,IAC9BA,EAAmC/sB,gBAAkB4S,EAC9C,IAAIma,KAEnB,GACD,KACP,EA2PqEE,CAAwBhqB,GAC7CmO,UAAW,CACP8F,UAAW,CAAEtB,SAAUtG,eAQ3C,KAGRjU,cAAA,OAAK+N,MAAO,CAACjM,QAAS,OAAQmJ,eAAgB,UAAUlL,SACpDP,eAACoO,KAAK,CAACC,QAAS,EAAGC,UAAU,MAAK/N,SAAA,CAC9BC,cAACsL,IAAM,CAACpL,GAAI,CAACE,SAAU,OAAQG,cAAe,QAASa,QAAQ,YAAYX,QAASA,IAAMkvB,IAAuB5vB,SAC5G,aACLC,cAACsL,IAAM,CAACpL,GAAI,CAACE,SAAU,OAAQG,cAAe,QAASa,QAAQ,YAAYd,MAAO,QAC9EG,QAASA,IAAM+tB,IAAoCzuB,SAAC,yBAOxE,UAKZC,cAACwR,GAAe,CACZC,oBAAqBA,EAAqB4D,uBAAwBA,MAIlF,E,2EClWAqG,KAAOmW,OAAO,MA0UCC,OAxUf,SAA8BvyB,GAC1B,MAOOwyB,EAAsBC,GAA2BzsB,mBAPpB,CAChCuqB,aAAc,GACdmC,cAAe,CAAEC,gBAAiB,GAAIC,gBAAiB,GAAI1C,WAAY,GAAI2C,YAAa,IACxFC,aAAc,GACdC,gBAAiB,MAOdC,EAAoBC,GAAyBjtB,oBAAS,IAEtDktB,EAA6BC,GAAkCntB,mBAAS,KACxEotB,EAA6BC,GAAkCrtB,mBAAS,IAazE6oB,EAXYC,aAAW,CACzBC,KAAM,CACJ,iBAAkB,CAChBhuB,MAAO,WAET,6BAA8B,CAC5BA,MAAO,aAKCiuB,GAuFhB,OANA9mB,qBAAU,KACHlI,EAAMszB,mBAlDuBhwB,WAChC2vB,GAAsB,GACtB,MAAMM,QAA4B5uB,GAAe3E,EAAMszB,kBAAkBZ,cAAc1yB,EAAMszB,kBAAkBZ,cAAcrC,MAAKmD,GAAyD,OAApCA,EAAkB5uB,gBAA0B,EAAI,GAAGA,eAC1M,GAAG5E,EAAMszB,kBAAkBG,eAAe,CACtC,MAAMC,EAAsB,IACrB1zB,EAAMszB,kBAAkBZ,cAAc1yB,EAAMszB,kBAAkBZ,cAAcrC,MAAKmD,GAAyD,OAApCA,EAAkB5uB,gBAA0B,EAAI,GACzJ+uB,eAAgBJ,EAAoBV,YAAYc,eAChDvuB,gBAAiBmuB,EAAoBV,YAAYztB,gBACjD8oB,aAAcqF,EAAoBV,YAAY3E,aAC9C2E,YAAaU,EAAoBV,YAAYtD,YAGjDkD,EACI,CACIlC,aAAc,GACdmC,cAAegB,EACfE,sBAAuB5zB,EAAMszB,kBAAkBM,sBAC/Cd,aAAc9yB,EAAMszB,kBAAkBR,aACtCC,gBAAiB/yB,EAAMszB,kBAAkBP,iBAGrD,KAEI,CACG/yB,EAAMszB,kBAAkB/C,aAAavf,OAAS,IAC7ChR,EAAMszB,kBAAkB/C,aAAevwB,EAAMszB,kBAAkB/C,aAAasD,MAAK,CAACC,EAAGC,IAAMD,EAAEE,cAAgBD,EAAEC,iBAGnH,MAAMN,EAAsB,IACrB1zB,EAAMszB,kBAAkBZ,cAAc1yB,EAAMszB,kBAAkBZ,cAAcrC,MAAKmD,GAAyD,OAApCA,EAAkB5uB,gBAA0B,EAAI,GACzJ+uB,eAAgBJ,EAAoBV,YAAYc,eAChDvuB,gBAAiBmuB,EAAoBV,YAAYztB,gBACjD8oB,aAAcqF,EAAoBV,YAAY3E,aAC9C2E,YAAaU,EAAoBV,YAAYtD,YAGjDkD,EACI,CACIlC,aAAcvwB,EAAMszB,kBAAkB/C,aACtCmC,cAAegB,EACfE,sBAAuB5zB,EAAMszB,kBAAkBM,sBAC/Cd,aAAc9yB,EAAMszB,kBAAkBR,aACtCC,gBAAiB/yB,EAAMszB,kBAAkBP,iBAGrD,CACAE,GAAsB,EAAM,EAKxBgB,EACJ,GACD,CAACj0B,EAAMszB,oBAGN7yB,cAAA0H,WAAA,CAAA3H,SACIC,cAACqB,IAAG,CAACnB,GAAI,CAACsK,OAAQ,OAAQ7J,SAAU,YAAYZ,SAC3CwyB,EACG/yB,eAAC6B,IAAG,CAACnB,GAAI,CAACsK,OAAQ,OAAQ1I,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,SAAUD,cAAe,UAAUhC,SAAA,CAChHC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,8HAGjDP,eAAAkI,WAAA,CAAA3H,SAAA,CACIP,eAAA,OAAK4M,UAAU,kCAAiCrM,SAAA,CAE5CP,eAAC2B,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACC,WAAY,SAAUE,UAAW,SAAUD,SAAU,UAAUL,SAAA,CAAC,gCACxEC,cAAA,QAAM+N,MAAO,CAACzN,MAAO,OAAOP,SAAEgyB,EAAqBE,cAAcC,qBAGvF1yB,eAAC8wB,KAAI,CAACpwB,GAAI,CAAC2M,EAAG,GAAG9M,SAAA,CACZgyB,EAAqBjC,aAAa3kB,KAAI,CAACsoB,EAAiBC,IACrDl0B,eAAA,OAAAO,SAAA,CACIC,cAAC2zB,KAAc,CAACzzB,GAAI,CAAC6Z,GAAI,MAAOC,GAAI,MAAOpL,aAAc,MAAO,SAAU,CAACjN,gBAAiB,uBACxFlB,QAASA,IAzGdizB,KAC/BhB,GAAgCkB,IAC5B,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQH,IAAqBG,EAAQH,GAC9BG,CAAO,GAChB,EAoGiDC,CAA0BJ,GAAkB3zB,SAE3DP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQE,WAAY,UAAUjC,SAAA,CAC7CC,cAAC+zB,KAAY,CAAC7zB,GAAI,CAAC8hB,SAAU,OAAQ,+BAAgC,CAAC5hB,SAAU,OAAQE,MAAO,UAAW0zB,WAA6D,IAAlDvB,EAA4BiB,GAA6B,gBAAkB,iBAAiB3zB,SAACC,cAACi0B,KAAQ,MAC3Nj0B,cAACk0B,KAAY,CAACC,QAASV,EAAgBjD,aAActwB,GAAI,CAAC,6BAA8B,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,oBAInJN,cAACo0B,KAAQ,CAACC,GAAI5B,EAA4BiB,GAAmBY,QAAQ,OAAOC,eAAa,EAAAx0B,SACrFC,cAAA,OAAAD,SACK0zB,EAAgBzE,iBAAiB7jB,KAAI,CAACqpB,EAAqCC,IACxEj1B,eAAA,OAAK4M,UAAU,yCAAyC2B,MAAO,CAAE0c,YAAa,OAAQC,aAAc,OAAQ7Z,aAAc,OAAQ9Q,SAAA,CAC9HC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACC,WAAY,SAAUC,SAAU,OAAQC,UAAW,SAAUwK,GAAI2pB,EAAoC9D,qBAAuB,EAAI,GAAI3wB,SAAEy0B,EAAoC9D,uBAE/M1wB,cAACqB,IAAG,CAACnB,GAAI,CAAC2K,GAAI,GAAG9K,SACZy0B,EAAoCtF,yBAAyB/jB,KAAI,CAACwlB,EAAcC,IAC7E5wB,cAACqB,IAAG,CAAAtB,SACAP,eAAC4kB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAEvkB,SAAA,CACP,IAAlB6wB,EACGpxB,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BiQ,YAAa,MAAOhkB,EAAG,IAAK9M,SACrFC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEy0B,EAAoC1D,wBAGtE,UAA7CH,EAAaI,4BACVvxB,eAAAkI,WAAA,CAAA3H,SAAA,CACIP,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAKrkB,GAAI,CAAC0gB,OAAQ,6BAA8BiQ,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,UAAUjC,SAAA,CACxJC,cAACgxB,KAAY,CAAC9wB,GAAI,CAACE,SAAU,SAAUE,MAAO,OAAQwK,GAAI,MAC1D9K,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU8wB,WAAY,OAAOlxB,SAAEy0B,EAAoCtD,0BAGvIlxB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAKrkB,GAAI,CAAC0gB,OAAQ,6BAA8B/T,EAAG,IAAK9M,SACnEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU0O,GAAI,IAAK9O,SAAEy0B,EAAoCrD,2BAIjInxB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8B/T,EAAG,IAAK9M,SACjEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEy0B,EAAoCrD,2BAK5H,KAGJ3xB,eAAC6B,IAAG,CAAuC0M,MAAO,CAACjM,QAAS,OAAQuI,MAAO,QAAQtK,SAAA,CAC/EC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BwQ,UAAW,MAAOP,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQE,WAAY,UAAUjC,SAC9IC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACE,SAAU,QAAQL,SAAE4wB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVvxB,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAKrkB,GAAI,CAAC0gB,OAAQ,6BAA8BwQ,UAAW,MAAOP,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQmJ,eAAgB,UAAUlL,SACpJC,cAAC2d,KAAQ,CAACoH,UAAQ,EAACnH,QAAS+S,EAAaW,sBAAuBlD,QAAS,CAAEE,KAAMF,EAAQE,MAAQpuB,GAAI,CAAC,+BAAgC,CAACE,SAAU,eAGrJJ,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAIxkB,SACfC,cAAA,OAAKoM,UAAU,kBAAiBrM,SAC5BC,cAAA,OAAKoM,UAAU,eAAcrM,SACzBC,cAACuxB,KAAgB,CAACnlB,UAAU,oBAAoBwe,KAAM,EAAG7F,UAAQ,EAACnd,MAAO+oB,EAAaa,+BAMtGxxB,cAAA0H,WAAA,CAAA3H,SACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAExkB,SACbC,cAAA,OAAKoM,UAAU,kBAAiBrM,SAC5BC,cAAA,OAAKoM,UAAU,eAAcrM,SACzBC,cAACuxB,KAAgB,CAACnlB,UAAU,oBAAoBwe,KAAM,EAAG7F,UAAQ,EAACnd,MAAO+oB,EAAaa,gCAInG,gBAAA7uB,OA5BeiuB,QA+BvB,gBAAAjuB,OA5DeiuB,UA+D5B,wCAAAjuB,OApEsK8xB,YAwEjL,mBAAA9xB,OArFc+wB,MAyFhC3B,EAAqBE,cAAcG,YAAYjnB,KAAI,CAACupB,EAAkBC,IACnEn1B,eAAA,OAAAO,SAAA,CACIC,cAAC2zB,KAAc,CAACzzB,GAAI,CAAC6Z,GAAI,MAAOC,GAAI,MAAOpL,aAAc,MAAO,SAAU,CAACjN,gBAAiB,uBACxFlB,QAASA,IA3Ldk0B,KAC/B/B,GAAgCgB,IAC5B,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQc,IAAqBd,EAAQc,GAC9Bd,CAAO,GAChB,EAsLiDe,CAA0BD,GAAkB50B,SAE3DP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQE,WAAY,UAAUjC,SAAA,CAC7CC,cAAC+zB,KAAY,CAAC7zB,GAAI,CAAC8hB,SAAU,OAAQ,+BAAgC,CAAC5hB,SAAU,OAAQE,MAAO,UAAW0zB,WAA6D,IAAlDrB,EAA4BgC,GAA6B,gBAAkB,iBAAiB50B,SAACC,cAACi0B,KAAQ,MAC3Nj0B,cAACk0B,KAAY,CAACC,QAASO,EAAiBlE,aAActwB,GAAI,CAAC,6BAA8B,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,oBAIpJN,cAACo0B,KAAQ,CAACC,GAAI1B,EAA4BgC,GAAmBL,QAAQ,OAAOC,eAAa,EAAAx0B,SACrFC,cAAA,OAAAD,SACK20B,EAAiB1F,iBAAiB7jB,KAAI,CAAC0pB,EAAiCC,IACrEt1B,eAAA,OAAK4M,UAAU,yCAAyC2B,MAAO,CAAE0c,YAAa,OAAQC,aAAc,OAAQ7Z,aAAc,OAAQ9Q,SAAA,CAC9HC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACC,WAAY,SAAUC,SAAU,OAAQC,UAAW,SAAUwK,GAAIgqB,EAAgCnE,qBAAuB,EAAI,GAAI3wB,SAAE80B,EAAgCnE,uBAEvM1wB,cAACqB,IAAG,CAACnB,GAAI,CAAC2K,GAAI,GAAG9K,SACZ80B,EAAgC3F,yBAAyB/jB,KAAI,CAACwlB,EAAcC,IACzE5wB,cAACqB,IAAG,CAAAtB,SACAP,eAAC4kB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAEvkB,SAAA,CACP,IAAlB6wB,EACGpxB,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BiQ,YAAa,MAAOhkB,EAAG,IAAK9M,SACrFC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAE80B,EAAgC/D,wBAGlE,UAA7CH,EAAaI,4BACVvxB,eAAAkI,WAAA,CAAA3H,SAAA,CACIP,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAKrkB,GAAI,CAAC0gB,OAAQ,6BAA8BiQ,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,UAAUjC,SAAA,CACxJC,cAACgxB,KAAY,CAAC9wB,GAAI,CAACE,SAAU,SAAUE,MAAO,OAAQwK,GAAI,MAC1D9K,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU8wB,WAAY,OAAOlxB,SAAE80B,EAAgC3D,0BAGnIlxB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAKrkB,GAAI,CAAC0gB,OAAQ,6BAA8B/T,EAAG,IAAK9M,SACnEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU0O,GAAI,IAAK9O,SAAE80B,EAAgC1D,2BAI7HnxB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8B/T,EAAG,IAAK9M,SACjEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAE80B,EAAgC1D,2BAKxH,KAGJ3xB,eAAC6B,IAAG,CAAuC0M,MAAO,CAACjM,QAAS,OAAQuI,MAAO,QAAQtK,SAAA,CAC/EC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BwQ,UAAW,MAAOP,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQE,WAAY,UAAUjC,SAC9IC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACE,SAAU,QAAQL,SAAE4wB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVvxB,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAKrkB,GAAI,CAAC0gB,OAAQ,6BAA8BwQ,UAAW,MAAOP,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQmJ,eAAgB,UAAUlL,SACpJC,cAAC2d,KAAQ,CAACoH,UAAQ,EAACnH,QAAS+S,EAAaW,sBAAuBlD,QAAS,CAAEE,KAAMF,EAAQE,MAAQpuB,GAAI,CAAC,+BAAgC,CAACE,SAAU,eAGrJJ,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAAIxkB,SACfC,cAAA,OAAKoM,UAAU,kBAAiBrM,SAC5BC,cAAA,OAAKoM,UAAU,eAAcrM,SACzBC,cAACuxB,KAAgB,CAACnlB,UAAU,oBAAoBwe,KAAM,EAAG7F,UAAQ,EAACnd,MAAO+oB,EAAaa,+BAMtGxxB,cAAA0H,WAAA,CAAA3H,SACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAExkB,SACbC,cAAA,OAAKoM,UAAU,kBAAiBrM,SAC5BC,cAAA,OAAKoM,UAAU,eAAcrM,SACzBC,cAACuxB,KAAgB,CAACnlB,UAAU,oBAAoBwe,KAAM,EAAG7F,UAAQ,EAACnd,MAAO+oB,EAAaa,gCAInG,gBAAA7uB,OA5BeiuB,QA+BvB,gBAAAjuB,OA5DeiuB,UA+D5B,oCAAAjuB,OApEkKmyB,YAwE7K,oBAAAnyB,OArFegyB,SA0FtC30B,cAAA,OAAKoM,UAAU,aAAa2B,MAAO,CAACud,WAAY,OAAQlR,UAAW,OAAOra,SACtEC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAA,uBAAA4C,OAAeovB,EAAqBE,cAAcxC,mBAI7HzvB,cAAA,OAAKoM,UAAU,iBAAiB2B,MAAO,CAACud,WAAY,OAAQlR,UAAW,MAAO/P,MAAO,OAAOtK,SACxFC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,UAAWH,WAAY,SAAUC,SAAU,WAAWL,SAAA,GAAA4C,OAAKovB,EAAqBE,cAAc8C,eAAc,MAAApyB,OAAK+Y,KAAOqW,EAAqBE,cAAcE,iBAAiB1W,OAAO,mBAO3P,E,4SC+hEeuZ,OAtzEf,WACI,MAAMC,EAAqC,CACvCC,IAAK,GACL3wB,GAAI,GACJ4wB,WAAY,GACZC,aAAc,GACdC,YAAa,GACbC,kBAAmB,GACnBC,eAAgB,GAChBC,eAAgB,GAChBC,eAAgB,GAChBC,0BAA2B,GAC3BC,cAAe,GACfC,gBAAiB,KAGf,KAAEvwB,EAAI,QAAEG,EAAO,aAAEE,EAAY,aAAEyC,EAAY,WAAElC,EAAU,cAAEL,GAAkByC,qBAAWxD,IAEtF2D,EAAUC,wBAETotB,EAAaC,GAAkBvwB,oBAAS,IAGxCwwB,EAA6BC,GAAkCzwB,mBAAS0vB,IAGxEgB,EAAmBC,GAAwB3wB,mBAAS,KAGpDstB,EAAmBsD,GAAwB5wB,sBAG3C6wB,EAA2BC,GAAgC9wB,oBAAS,IAGpE+wB,EAA+BC,GAAoChxB,mBAAS,KAG5EixB,EAA2BC,GAAgClxB,mBAAS,CAAC,IAGrEmxB,EAAkCC,GAAuCpxB,mBAAS,KAGlFqxB,EAAuBC,GAA4BtxB,mBAAS,KAC5DuxB,EAA8BC,GAAmCxxB,sBAGjEyxB,EAAyBC,GAA8B1xB,mBAAS,IAGhEspB,EAA6BqI,GAAkC3xB,mBAAS,CAAC,IAGzE4xB,EAAoBC,GAAyB7xB,sBAG7C8xB,EAAoBC,GAAyB/xB,sBAG7CgyB,EAAqBC,GAA0BjyB,sBAG/C8qB,EAA4B5B,IAAiClpB,oBAAS,IAEtEkyB,GAA0BC,IAA+BnyB,oBAAS,IAClEoyB,GAAgBC,IAAqBryB,oBAAS,IAC9CsyB,GAAoBC,IAAyBvyB,oBAAS,IACtDwyB,GAA0BC,IAA+BzyB,oBAAS,IAClE0yB,GAA0BC,IAA+B3yB,oBAAS,IAElEiZ,GAA0BC,IAA+BlZ,mBAAS,KAClEqZ,GAAqBC,IAA0BtZ,mBAAS,KAExDuZ,GAA+BC,IAAoCxZ,mBAAS,KAC5EyZ,GAA8BC,IAAmC1Z,mBAAS,KAE1E0Y,GAAYC,IAAiB3Y,mBAAS,CAAC4Y,UAAW,EAAGC,UAAW,yBAChEC,GAAuBC,IAA4B/Y,mBACtD,CACI,CAAE6Y,UAAW,sBAAeG,YAAa,GACzC,CAAEH,UAAW,wBAAcG,YAAa,MAIzC1c,GAA6BmE,IAAkCT,oBAAS,GA2BzE2Z,GAAiBA,CAACC,EAAUC,KAC9B,MAAMC,EAAsBD,EAAWtI,cACvC,OAAOqI,EAASpI,QAAOuI,IACrB,MAAM,UAAEtb,EAAS,SAAE0O,EAAQ,YAAEG,EAAW,YAAEE,GAAgBuM,EAAW/M,QACrE,OAAOvO,EAAU8S,cAAcM,SAASiI,IAAwB3M,EAASoE,cAAcM,SAASiI,IAAwBxM,EAAYiE,cAAcM,SAASiI,IAAwBtM,EAAY+D,cAAcM,SAASiI,EAAoB,GAC1O,EAuFAE,GAA8B1c,UAChC,MAAMK,QAAiBM,IACvB,GAAgB,MAAbN,GAC6B,IAAzBA,EAAS8R,KAAKzE,OAEb,GADAkO,GAA4Bvb,EAAS8R,MACT,IAAzBiJ,GAAWE,YAAiE,IAA9C4X,EAA4BoC,cAAuB,CAChF,MAAMnY,EAA8B9c,EAAS8R,KAAK+B,QAAOkJ,GAAuD,IAA/BA,EAAqBzb,OAA8C,IAA/Byb,EAAqBzb,OAA8C,IAA/Byb,EAAqBzb,QAC9Kya,GAAgCe,GAChCjB,GAAiCiB,GACjC,MAAML,EAActB,GAAsBlT,KAAI,CAACkN,EAAM+f,KAAK,IACnD/f,EACHkG,YAAarb,EAASgd,eAAekY,OAEzC9Z,GAAyBqB,GACtB0Y,eAAetC,6BAjDElzB,WAChCmD,IAA+B,GAC/B,MAAMsyB,EAAgCxxB,KAAKC,MAAMsxB,eAAetC,6BAC1DwC,EAAsBzxB,KAAKC,MAAMsxB,eAAepC,mBAChDuC,EAA+B1xB,KAAKC,MAAMsxB,eAAexJ,4BAM/D,GAJAmH,EAA+Bzd,KAAES,UAAUsf,IAC3CpC,EAAqB3d,KAAES,UAAUuf,IACjCrB,EAA8B3e,KAAES,UAAUwf,IAEvCH,eAAevB,6BAA6B,CAC3C,MAAM2B,EAAiC3xB,KAAKC,MAAMsxB,eAAevB,8BACjEC,EAAgCxe,KAAES,UAAUyf,GAChD,CAEA,GAAGJ,eAAed,oBAAoB,CAClC,MAAMmB,EAAwB5xB,KAAKC,MAAMsxB,eAAed,qBACxDC,EAAuBjf,KAAES,UAAU0f,GACvC,CAEA,GAAGL,eAAelB,mBAAmB,CACjC,MAAMwB,EAAuB7xB,KAAKC,MAAMsxB,eAAelB,oBACvDC,EAAsB7e,KAAES,UAAU2f,GACtC,CAEArB,EAAsB,CAClBtzB,UAAW+xB,EAA4BZ,WACvCrF,aAAc,KAGlBuI,eAAeO,QACf5yB,IAA+B,EAAM,EAmBrB6yB,EAER,MACK,GAA4B,IAAzB5a,GAAWE,UAAgB,CAC/B,MAAMgC,EAA2Bjd,EAAS8R,KAAK+B,QAAOkJ,GAAuD,IAA/BA,EAAqBzb,QACnGya,GAAgCkB,GAChCpB,GAAiCoB,GACjC,MAAMR,EAActB,GAAsBlT,KAAI,CAACkN,EAAM+f,KAAK,IACnD/f,EACHkG,YAAarb,EAASgd,eAAekY,OAEzC9Z,GAAyBqB,EAC7B,CAGRiY,IAAkB,GAClBE,IAAsB,EAAM,EAG1BgB,GAAyBj2B,UAC3BmD,IAA+B,GAC/B8xB,IAAsB,GACtBJ,IAA4B,SACtBqB,GAA8BC,EAAiBz0B,IACrD,MAAM00B,EAA+B,IAAIlD,GACzCkD,EAA6B/D,IAAM8D,EAAiB9V,MACpD+V,EAA6B10B,GAAKy0B,EAAiBz0B,GACnD00B,EAA6Br1B,OAAS,EACtCq1B,EAA6B9D,WAAa6D,EAAiBzmB,QAAQvO,UACnEi1B,EAA6B7D,aAAe4D,EAAiBzmB,QAAQG,SACrEumB,EAA6B5D,YAAc2D,EAAiBzmB,QAAQzO,WACpEm1B,EAA6B3D,kBAAoB0D,EAAiBzmB,QAAQ4R,YAC1E8U,EAA6B1D,eAAiByD,EAAiBzmB,QAAQI,OACvEsmB,EAA6BzD,eAAiBwD,EAAiBxuB,OAC/DyuB,EAA6BxD,eAAiBuD,EAAiB5mB,OAC/D6mB,EAA6BvD,0BAA4BsD,EAAiB3mB,kBAC1E4mB,EAA6BvD,0BAA4BsD,EAAiB3mB,kBAC1E4mB,EAA6BtD,cAAgBqD,EAAiBzmB,QAAQM,YAAcmmB,EAAiBzmB,QAAQM,YAAcmmB,EAAiBzmB,QAAQQ,YACpJkmB,EAA6BrD,gBAAkBoD,EAAiBzmB,QAAQuN,YACxEmZ,EAA6B3mB,aAA+C,IAAjC0mB,EAAiB1mB,YAC5D2mB,EAA6Bd,cAA2C,IAA3Ba,EAAiBx0B,MAC9Dy0B,EAA6BC,aAA0C,IAA3BF,EAAiBx0B,MAC7DwxB,EAA+BiD,GAC/BnB,IAAsB,GACtBJ,IAA4B,GAC5B1xB,IAA+B,EAAM,EAwDnCmzB,GAA6Bt2B,UAS/B,GARAm1B,IAA4B,GAC5BnF,EAAkBZ,cAAc1L,SAASwM,IACE,OAApCA,EAAkB5uB,gBACjB4uB,EAAkBvuB,MAAQ,EAC9B,KAI4C,IAA7CuxB,EAA4BmD,eAA8D,IAArCrG,EAAkBG,eAAyB,CAE/F,MAEMoG,SAFqCh1B,GAAqB2xB,EAA4BZ,aAErBxxB,KAAKwH,KAAIkuB,IAC5E,MAAMC,EAA4BzG,EAAkB/C,aAAaxW,MAAKigB,GAAqCA,EAAkChG,gBAAkB8F,EAAiC9F,gBAEhM,MAAO,IACA8F,EACHG,QAAQ,EACRxK,iBAAkBqK,EAAiCrK,iBAAiBjY,QAAO0iB,GAChEH,GAA6BA,EAA0BtK,iBAAiBY,MAAK8J,GAAYA,EAASC,uBAAyBF,EAASE,yBAC5IxuB,KAAIsuB,IACH,MAAMG,EAAmBN,EAA0BtK,iBAAiB1V,MAAKogB,GAAYA,EAASC,uBAAyBF,EAASE,uBAChI,MAAO,IACAF,EACHI,oBAAoBD,EACpBJ,QAAQ,EACRtK,yBAA0B0K,EAAmBA,EAAiB1K,yBAA2B,GAC5F,IAER,IAGL2D,EAAkB/C,aAAesJ,EAEjC9B,EAAsB,CAClBtzB,UAAW+xB,EAA4BZ,WACvCrF,aAAc,KAGlB,MAAMgK,QAAqC51B,GAAe,GAE1D2uB,EAAkBZ,cAAc,GAAGnD,WAAagL,EAA6B1H,YAAYtD,WAEzF,MAAMiL,EAA6ClH,EAAkBZ,cAAc,GAAGnD,WAAW3jB,KAAI6uB,IAAQ,CACzGxJ,aAAcwJ,EAASxJ,aACvBR,gBAAgB,EAChBhB,iBAAkBgL,EAAShL,iBAAiB7jB,KAAI8uB,IAAO,IAClDA,EACH/K,yBAA0B,WAK1BgL,EAAiC,CACnCl2B,UAAW+xB,EAA4BZ,WACvC7F,cAAeuD,EAAkBvgB,YACjC8c,kBAAmByD,EAAkBZ,cAAc,GAAG7C,kBACtDK,WAAYoD,EAAkBZ,cAAc,GAAGxC,WAC/CX,WAAYiL,GAGhBlD,EAAyB,CACrBsD,kBAAmBtH,EAAkBZ,cAAc,GAAGC,gBACtDkI,iBAAkBvH,EAAkBZ,cAAc,GAAGnD,aAGzDiI,EAAgC,CAC5BoD,kBAAmBtH,EAAkBZ,cAAc,GAAGC,gBACtDkI,iBAAkBvH,EAAkBZ,cAAc,GAAGnD,aAGzDoH,EAAqBrD,GACrBqE,EAA8BgD,GAE9B/D,GAEJ,KAGI,CACA,MAAMkE,EAAoCxH,EAAkB/C,aAAa3kB,KAAKsoB,IAC1E,MAAM6G,EAAgC7G,EAAgBzE,iBAAiB7jB,KAAK8jB,IAC/C,CACrByB,qBAAsBzB,EAAqByB,qBAC3CI,oBAAqB7B,EAAqB6B,oBAC1CI,qBAAsBjC,EAAqBiC,qBAC3CC,oBAAqBlC,EAAqBkC,oBAC1CwI,qBAAsB1K,EAAqB0K,qBAC3CzK,yBAA0B,OAYlC,MAP8B,CAC1BsB,aAAciD,EAAgBjD,aAC9BX,eAAe,EACf0D,cAAeE,EAAgBF,cAC/BvE,iBAAkBsL,EAGM,IAG1BC,EAAqC1H,EAAkBZ,cAAc3Y,MAAMyZ,GAAsBA,EAAkB/uB,YAAc+xB,EAA4BZ,aAEnK+B,EAA8B,CAC1BlzB,UAAW+xB,EAA4BZ,WACvC7F,cAAeuD,EAAkBvgB,YACjC8c,kBAAmBmL,EAAmCnL,kBACtDK,WAAY8K,EAAmC9K,WAC/CX,WAAYuL,IAGhBxH,EAAkB/C,aAAavJ,SAAQ,CAACiU,EAAkBC,KACtDD,EAAiBxL,iBAAmBwL,EAAiBxL,iBAAiB7jB,KAAK8jB,IAChE,IACAA,EACHyL,kBAAmBD,MAGpB,IACAD,MAIXtE,EAAqBrD,GACrBsD,GACJ,CACA6B,IAA4B,EAAM,EAkBhC2C,GAA+B93B,UACjCm1B,IAA4B,GAC5B,MAAM8B,OnBjWej3B,WACzB,MAAMY,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,sCAAAO,OAAqCwB,GAAiBV,GACzFR,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EmByV6C03B,CAAqB/H,EAAkBZ,cAAc,GAAG9tB,eAEnG,GAA2C,MAAxC21B,EAA6Bl2B,OAAe,CAC3C,MAAMq1B,EAA+B,IAAIlD,GACzCkD,EAA6Br1B,OAAS,EACtCoyB,EAA+BiD,IAES,IAArCpG,EAAkBG,iBACjBwE,EAAuBjf,KAAES,UAAU6Z,EAAkB/C,eAErDsH,EAAsB7e,KAAES,UAAU6Z,EAAkB/C,sBAGlD+K,GAA6Bf,EAA6Bn2B,MAChE4K,IAAM4B,QAAQ,2CAADxN,OAA4BozB,EAA4BX,cAAgB,CAACrlB,QAAS,YACnG,MACgD,MAAxC+pB,EAA6Bl2B,QACjC2K,IAAMnL,MAAM,sHAAoE,CAAC2M,QAAS,WAE9FioB,IAA4B,EAAM,EAIhC6C,GAA+Bh4B,UACjCgwB,EAAkBZ,cAAc,GAAGztB,MAAQ,EAC3CquB,EAAkBZ,cAAc,GAAGnD,WAAagM,EAAiChM,WAEjF,MAAMiL,EAA6ClH,EAAkBZ,cAAc,GAAGnD,WAAW3jB,KAAI6uB,IAAQ,CACzGxJ,aAAcwJ,EAASxJ,aACvBR,gBAAgB,EAChBhB,iBAAkBgL,EAAShL,iBAAiB7jB,KAAI8uB,IAAO,IAClDA,EACH/K,yBAA0B,WAK1BgL,EAAiC,CACnCl2B,UAAW+xB,EAA4BZ,WACvC7F,cAAeuD,EAAkBvgB,YACjC8c,kBAAmB2G,EAA4BxxB,KAAOsuB,EAAkBZ,cAAc,GAAG7C,kBAAoB2G,EAA4BxxB,GAAKsuB,EAAkBZ,cAAc,GAAG7C,kBACjLK,WAAYoD,EAAkBZ,cAAc,GAAGxC,WAC/CX,WAAYiL,GAGhBlD,EAAyB,CACrBsD,kBAAmBtH,EAAkBZ,cAAc,GAAGC,gBACtDkI,iBAAkBvH,EAAkBZ,cAAc,GAAGnD,aAGzDiI,EAAgC,CAC5BoD,kBAAmBtH,EAAkBZ,cAAc,GAAGC,gBACtDkI,iBAAkBvH,EAAkBZ,cAAc,GAAGnD,aAIzD,IAAIiM,EAAgCxiB,KAAES,UAAU6Z,EAAkBZ,cAAc,GAAGnD,YAEnFiM,EAAgCA,EAA8B5vB,KAAI6uB,IAC9DA,EAAShL,iBAAmBgL,EAAShL,iBAAiB7jB,KAAI8uB,IACtD,MAAMe,EAAYf,EAAQ/K,yBAGpB+L,EAAUD,EAAU5iB,OAAM8iB,GAAiC,OAA5BA,EAAE5J,uBAA4D,OAA1B4J,EAAE1J,sBAU3E,OANEyI,EAAQ/K,yBAFN+L,EAEiC,GAGAD,EAAUjkB,QAAOmkB,GAAiC,OAA5BA,EAAE5J,uBAA4D,OAA1B4J,EAAE1J,sBAG1FyI,CAAO,IAGlBD,EAAShK,gBAAiB,EACnBgK,KAGXE,EAA+BpL,WAAaiM,EAE5C,MAAMI,QAAqC/2B,GAAqB2xB,EAA4BZ,YAG5F,GAA2C,MAAxCgG,EAA6Bv3B,OAChC,CACI,MAAMw1B,EAAoC+B,EAA6Bx3B,KAAKwH,KAAIkuB,IAC5E,MAAMC,EAA4BzG,EAAkB/C,aAAaxW,MAAKigB,GAAqCA,EAAkChG,gBAAkB8F,EAAiC9F,gBAEhM,MAAO,IACA8F,EACHG,QAAQ,EACRxK,iBAAkBqK,EAAiCrK,iBAAiBjY,QAAO0iB,GAChEH,GAA6BA,EAA0BtK,iBAAiBY,MAAK8J,GAAYA,EAASC,uBAAyBF,EAASE,yBAC5IxuB,KAAIsuB,IACH,MAAMG,EAAmBN,EAA0BtK,iBAAiB1V,MAAKogB,GAAYA,EAASC,uBAAyBF,EAASE,uBAChI,MAAO,IACAF,EACHI,oBAAoBD,EACpBJ,QAAQ,EACRtK,yBAA0B0K,EAAmBA,EAAiB1K,yBAA2B,GAC5F,IAER,IAGL2D,EAAkB/C,aAAesJ,EAEjC9B,EAAsB,CAClBtzB,UAAW+xB,EAA4BZ,WACvCrF,aAAc,KAGlBoG,EAAqBrD,GACrBsD,GACJ,KAGI,CAEA,IAAI4E,EAAgCxiB,KAAES,UAAU6Z,EAAkB/C,cAElEiL,EAAgCA,EAA8B5vB,KAAKkN,IAC/D,MAAM+iB,EAAuB/iB,EAAK2W,iBAAiB7jB,KAAKkwB,IAC7C,CACHnK,qBAAsBmK,EAAqBnK,qBAC3CJ,oBAAqBuK,EAAqBvK,oBAC1C6I,qBAAsB0B,EAAqB1B,qBAC3CxI,oBAAqBkK,EAAqBlK,oBAC1CT,qBAAsB2K,EAAqB3K,qBAC3CxB,yBAA0B,OAIlC,MAAO,CACHsB,aAAcnY,EAAKmY,aACnB+C,cAAelb,EAAKkb,cACpBvE,iBAAkBoM,EAClBvL,eAAe,EAClB,IAGL,MAAMyL,EAA8CP,EAA8Bp4B,OAAOu3B,EAA+BpL,YACxHoL,EAA+BpL,WAAawM,EAE5CpF,EAAqBrD,GACrBsD,GACJ,CAEAe,EAA8B3e,KAAES,UAAUkhB,GAAgC,EAmIxEqB,GAA6DA,CAACC,EAAyB9gB,KACzF,MAAM+gB,EAAsCpE,EAAmBvH,aAAaxW,MAAKoiB,GAAsCA,EAAmCnI,gBAAkBiD,EAA0BjD,gBAEtM,GAAGkI,EAAoC,CAEnC,MAAME,EAAyCF,EAAoCzM,iBAAiB1V,MAAKsiB,GAA0CA,EAAuCjC,uBAAyBjD,EAAiCiD,uBAEpP,GAAGgC,EAAuC,CAEtC,MAAM/K,EAAgB+K,EAAuCzM,yBAAyBjlB,WAAU4xB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,8BAA+C,KAAfphB,IACpRqhB,EAAsBJ,EAAuCzM,yBAAyBjlB,WAAU4xB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,8BAA+C,KAAfphB,KAE1Q,IAAnBkW,EAEC+K,EAAuCzM,yBAAyB0B,GAAeY,oBAAsB9W,GAGxE,IAAzBqhB,EAEJJ,EAAuCzM,yBAAyB8M,OAAOD,EAAqB,GAK5FJ,EAAuCzM,yBAAyB9kB,KAAKoxB,EAE7E,KAEI,CAEA,MAAMS,EAAqC,CACvC/K,qBAAsBwF,EAAiCxF,qBACvDJ,oBAAqB4F,EAAiC5F,oBACtD6I,qBAAsBjD,EAAiCiD,qBACvDzK,yBAA0B,CAACsM,GAC3BrK,oBAAqBuF,EAAiCvF,oBACtDT,qBAAsBgG,EAAiChG,sBAG3D+K,EAAoCzM,iBAAiB5kB,KAAK6xB,EAC9D,CACJ,KAEI,CAEA,MAAMA,EAAqC,CACvC/K,qBAAsBwF,EAAiCxF,qBACvDJ,oBAAqB4F,EAAiC5F,oBACtD6I,qBAAsBjD,EAAiCiD,qBACvDzK,yBAA0B,CAACsM,GAC3BrK,oBAAqBuF,EAAiCvF,oBACtDT,qBAAsBgG,EAAiChG,sBAGrDwL,EAAiC,CACnC3I,cAAeiD,EAA0BjD,cACzC/C,aAAcgG,EAA0BhG,aACxC2L,eAAgB3F,EAA0B2F,eAC1CnN,iBAAkB,CAACiN,IAGvB5E,EAAmBvH,aAAa1lB,KAAK8xB,EACzC,GAGEE,GAAwDA,CAACZ,EAAyB9gB,KACpF,GAAGA,EAAW,CAEV,IAAqD,IAAlD8gB,EAAwBlK,uBAA0F,UAAxDkK,EAAwBzK,6BAAiE,IAAtBrW,EAAWnK,OAAa,CACpJ,MAAMkrB,EAAsCpE,EAAmBvH,aAAaxW,MAAKoiB,GAAsCA,EAAmCnI,gBAAkBiD,EAA0BjD,gBAEtM,GAAGkI,EAAoC,CAEnC,MAAME,EAAyCF,EAAoCzM,iBAAiB1V,MAAKsiB,GAA0CA,EAAuCjC,uBAAyBjD,EAAiCiD,uBAEpP,GAAGgC,EAAuC,CAEtC,MAAM/K,EAAgB+K,EAAuCzM,yBAAyBjlB,WAAU4xB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,gCACpO,IAAnBlL,IAEC+K,EAAuCzM,yBAAyB0B,GAAeY,oBAAsB9W,EAE7G,CACJ,CACJ,CAGA,IAAqD,IAAlD8gB,EAAwBlK,uBAA0F,UAAxDkK,EAAwBzK,6BAAiE,IAAtBrW,EAAWnK,OAAa,CACpJ,MAAMkrB,EAAsCpE,EAAmBvH,aAAaxW,MAAKoiB,GAAsCA,EAAmCnI,gBAAkBiD,EAA0BjD,gBAEtM,GAAGkI,EAAoC,CAEnC,MAAME,EAAyCF,EAAoCzM,iBAAiB1V,MAAKsiB,GAA0CA,EAAuCjC,uBAAyBjD,EAAiCiD,uBAEpP,GAAGgC,EAAuC,CAEtC,MAAM/K,EAAgB+K,EAAuCzM,yBAAyBjlB,WAAU4xB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,gCACpO,IAAnBlL,IAEC+K,EAAuCzM,yBAAyB0B,GAAeY,oBAAsB,GAE7G,CACJ,CACJ,CAEJ,KAEI,CAEA,IAAqD,IAAlDgK,EAAwBlK,uBAA0F,UAAxDkK,EAAwBzK,4BAAwC,CACzH,MAAM0K,EAAsCpE,EAAmBvH,aAAaxW,MAAKoiB,GAAsCA,EAAmCnI,gBAAkBiD,EAA0BjD,gBAEtM,GAAGkI,EAAoC,CAEnC,MAAME,EAAyCF,EAAoCzM,iBAAiB1V,MAAKsiB,GAA0CA,EAAuCjC,uBAAyBjD,EAAiCiD,uBAEpP,GAAGgC,EAECA,EAAuCzM,yBAAyB9kB,KAAKoxB,OAErE,CAEA,MAAMS,EAAqC,CACvC/K,qBAAsBwF,EAAiCxF,qBACvDJ,oBAAqB4F,EAAiC5F,oBACtD6I,qBAAsBjD,EAAiCiD,qBACvDzK,yBAA0B,CAACsM,GAC3BrK,oBAAqBuF,EAAiCvF,oBACtDT,qBAAsBgG,EAAiChG,sBAE3D+K,EAAoCzM,iBAAiB5kB,KAAK6xB,EAC9D,CACJ,KACI,CAEA,MAAMA,EAAqC,CACvC/K,qBAAsBwF,EAAiCxF,qBACvDJ,oBAAqB4F,EAAiC5F,oBACtD6I,qBAAsBjD,EAAiCiD,qBACvDzK,yBAA0B,CAACsM,GAC3BrK,oBAAqBuF,EAAiCvF,oBACtDT,qBAAsBgG,EAAiChG,sBAGrDwL,EAAiC,CACnC3I,cAAeiD,EAA0BjD,cACzC/C,aAAcgG,EAA0BhG,aACxC2L,eAAgB3F,EAA0B2F,eAC1CnN,iBAAkB,CAACiN,IAGvB5E,EAAmBvH,aAAa1lB,KAAK8xB,EACzC,CACJ,CAGA,GAAqD,OAAlDV,EAAwBlK,uBAA0F,UAAxDkK,EAAwBzK,4BAAwC,CACzH,MAAM0K,EAAsCpE,EAAmBvH,aAAaxW,MAAKoiB,GAAsCA,EAAmCnI,gBAAkBiD,EAA0BjD,gBAEtM,GAAGkI,EAAoC,CAEnC,MAAME,EAAyCF,EAAoCzM,iBAAiB1V,MAAKsiB,GAA0CA,EAAuCjC,uBAAyBjD,EAAiCiD,uBAEpP,GAAGgC,EAAuC,CAEtC,MAAM/K,EAAgB+K,EAAuCzM,yBAAyBjlB,WAAU4xB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,gCACpO,IAAnBlL,GAEC+K,EAAuCzM,yBAAyB8M,OAAOpL,EAAe,EAE9F,CACJ,CACJ,CACJ,GAmFEyL,GAA+Bx5B,MAAOy5B,EAAwBC,KAChE,MAAMC,QAAqCl5B,EAAqBg5B,GAChE,GAA2C,MAAxCE,EAA6B54B,OAAe,CAE3C,MAAM64B,EAAqB,IAAIxG,GAE/BwG,EAAmB3M,aAAavJ,SAASiU,IAClCA,EAAiBjH,gBAAkBgJ,EAAuBhJ,gBACzDiH,EAAiBxL,iBAAmBuN,EAAuBvN,iBAC3DwL,EAAiBxL,iBAAiBzI,SAAS0I,IACvCA,EAAqBuK,QAAS,CAAI,IAEgB,IAAnD+C,EAAuBvN,iBAAiBze,OACvCiqB,EAAiB2B,gBAAiB,EAElC3B,EAAiB2B,gBAAiB,EAEtC3B,EAAiBhB,QAAS,GAG9BgB,EAAiBxL,iBAAmBwL,EAAiBxL,iBAAiBjY,QAAOsB,GAAiD,IAAzCA,EAAK6W,yBAAyB3e,QAAa,IAGpI2lB,EAAqBuG,GAErB,MAAMC,EAA4BD,EAAmB3M,aAAaxW,MAAKkhB,GAAoBA,EAAiBjH,gBAAkBgJ,EAAuBhJ,gBAErJhlB,IAAM4B,QAAQ,4DAA4B,CAACJ,QAAS,wCAEpD4sB,GAA0BD,EAC9B,MAEInuB,IAAMnL,MAAMo5B,EAA6B74B,KAAM,CAACoM,QAAS,sCAE7D/J,IAA+B,EAAM,EAInC+yB,GAAgCl2B,UAClC,MAAM+5B,OnBl8BkB/5B,WAC5B,MAAMY,EAASpB,IACf,aAAaS,IAAMY,IAAI,GAADf,OAAIP,EAAU,+BAAAO,OAA8B4B,GAAMd,GACvER,MAAK,SAAUC,GACZ,OAAOA,EAASS,IACpB,IACCR,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASU,MAC1B,GAAE,EmB07BsCi5B,CAAwBt4B,GAC5D4xB,EAAqByG,EAAsB,EAIzCD,GAA4B95B,UAgB9B,IAfiC,IAA9BuzB,GACCC,GAA8BD,GAGE,IAAjCQ,EAAsBrmB,QACrBsmB,EAAyB,IAG7BJ,EACI,IACOqG,EACHC,gBAAiBD,EAAsB9N,iBAAiBze,UAIf,IAA9CwlB,EAA4BoC,gBAA+D,IAArClC,EAAkBjD,eAAwB,CAC/F,MAAMgK,EAAwD,IAAIF,EAAsB9N,iBAAiB,GAAImN,eAAgBW,EAAsBX,gBACnJxF,EAAoCqG,GACpC/F,EAA2B,EAC/B,MAEI,GAAqD,IAAlD6F,EAAsB9N,iBAAiBze,OACtComB,EAAoC,CAAC6C,OAAQsD,EAAsBtD,OAAQK,oBAAoB,SAG/F,GAAGiD,EAAsBtM,eAAiBgG,EAA0BhG,aAAa,CAC7E,MAAMwM,EAAwD,IAAIF,EAAsB9N,iBAAiB,GAAImN,eAAgBW,EAAsBX,gBACnJxF,EAAoCqG,GACpC/F,EAA2B,EAC/B,MACK,GAAG6F,EAAsBtM,eAAiBgG,EAA0BhG,aAAa,CAClFiG,EACI,IACOqG,EACHC,gBAAiBD,EAAsB9N,iBAAiBze,SAIhE,MAAMysB,EAAwD,IAAIF,EAAsB9N,iBAAiB,GAAImN,eAAgBW,EAAsBX,gBACnJxF,EAAoCqG,GACpC/F,EAA2B,EAC/B,KACI,CACA,MAAM+F,EAAwD,IAAIF,EAAsB9N,iBAAiBgI,EAA0B,GAAImF,eAAgBW,EAAsBX,gBAC7KxF,EAAoCqG,EACxC,CAER,EAkHEC,GAAmBp6B,MAAOsB,EAAe+tB,EAAiBgL,KAC5D,MAAMpK,QAA4B5uB,GAAeC,GAAgC,GAoE7E0yB,EAAyB,CACrBsD,kBAAmBjI,EACnBgB,eAAgBJ,EAAoBV,YAAYc,eAChDkH,iBAAkBtH,EAAoBV,YAAYtD,aAGtDiI,EAAgC,CAC5BoD,kBAAmBjI,EACnBgB,eAAgBJ,EAAoBV,YAAYc,eAChDkH,iBAAkBtH,EAAoBV,YAAYtD,aAGtD,MAAMqO,EAA2BrK,EAAoBV,YAAYtD,WAAW3jB,KAAI,CAACiyB,EAAsBC,KAI7F,CACF7M,aAJiB4M,EAAqB5M,aAKtCxB,iBAJiBoO,EAAqBpO,iBAAiB,GAKvDsO,4BAA6B,EAC7BP,gBAAiBK,EAAqBpO,iBAAiBze,WAIzDgtB,EAA6B,CAC/BpD,kBAAmBjI,EACnBgB,eAAgBJ,EAAoBV,YAAYc,eAChDzD,WAAYqD,EAAoBV,YAAY3C,WAC5C2K,iBAAkB+C,GAKtB,GAFAxG,EAAoC4G,GAEV,IAAvBL,EAAyB,CACxB,MAAMM,EAAyC1K,EAAoBV,YAAYtD,WAAW3jB,KAAI,CAAC4jB,EAAgBwB,KAC3G,MAAM+J,EAAgCvL,EAAeC,iBAAiB7jB,KAAK8jB,IAC9C,CACrByB,qBAAsBzB,EAAqByB,qBAC3CI,oBAAqB7B,EAAqB6B,oBAC1CI,qBAAsBjC,EAAqBiC,qBAC3CC,oBAAqBlC,EAAqBkC,oBAC1CjC,yBAA0B,OAWlC,MAN8B,CAC1BsB,aAAczB,EAAeyB,aAC7BR,gBAAgB,EAChBhB,iBAAkBsL,EAGM,IAG1BmD,EAA8B,IAAI5O,GACxC2O,EAAuCryB,KAAKuyB,GAA2CD,EAA4B3O,WAAW1kB,KAAKszB,KACnIxG,EAA8BuG,EAClC,GAyFF1pB,GAAYC,iBAAO,MA0FnB2pB,GAAuCA,CAACN,EAAuBC,EAA6B1M,EAAehpB,KAC7G,MAAM8S,EAAa9S,EAEhBmM,GAAUuE,SACTqC,cAAc5G,GAAUuE,SAG5BvE,GAAUuE,QAAU5H,YAAW,KAE3B,MAAMktB,EAAyB,IAAIhH,GACnCgH,EAAuBxD,iBAAiBiD,GAAuBrO,iBAAiBsO,EAA8B,GAAGpO,yBAAyB0B,GAAeY,oBAAsB9W,EAC/Kmc,EAAyB+G,GAEzBC,GACID,EAAuBxD,iBAAiBiD,GAAuB7M,aAC/D8M,EAA8B,EAC9BM,EAAuBxD,iBAAiBiD,GAAuBrO,iBAAiBsO,EAA8B,GAAGpO,yBAAyB0B,GAC1IgN,EAAuBxD,iBAAiBiD,GAAuBrO,iBAAiBsO,EAA8B,GAAGpO,yBAAyB0B,GAAekL,6BACzJphB,GANe,EAQlB,GACF,IAAI,EAGLmjB,GAAgDA,CAACrN,EAAcsN,EAAiBtC,EAAyBuC,EAAerN,EAAsBsN,KAEhJ,GAAGA,IAAgE,IAAlDxC,EAAwBlK,uBAA0F,UAAxDkK,EAAwBzK,4BAC/FlC,EAA2BC,WAAWvI,SAASwI,IACxCA,EAAeyB,eAAiBA,IACyD,IAArFzB,EAAeC,iBAAiB8O,GAAiB5O,yBAAyB3e,OACzEwe,EAAeC,iBAAiB8O,GAAiB5O,yBAAyB3I,SAASoK,IAC5EA,EAAamL,+BAAiCiC,IAE7CpN,EAAaa,oBAAsBd,EACvC,IAIJ3B,EAAeC,iBAAiB8O,GAAiB5O,yBAAyB9kB,KAAKoxB,GAEvF,SAIJ,IAAqD,IAAlDA,EAAwBlK,uBAA0F,UAAxDkK,EAAwBzK,4BAAwC,CACzH,MAAM0M,EAA8B,IAAI5O,GACxC4O,EAA4B3O,WAAWvI,SAAQ,CAACwI,EAAgBwB,KACzDxB,EAAeyB,eAAiBA,GAC/BzB,EAAeC,iBAAiB8O,GAAiB5O,yBAAyB9kB,KAAKoxB,EACnF,IAEJtE,EAA8BuG,EAClC,MAGK,IAAqD,IAAlDjC,EAAwBlK,uBAA2F,UAAxDkK,EAAwBzK,4BAAwC,CAC/H,MAAM0M,EAA8B,IAAI5O,GACxC4O,EAA4B3O,WAAWvI,SAAQ,CAACwI,EAAgBwB,KAC5D,GAAGxB,EAAeyB,eAAiBA,EAAa,CAC5C,MAAMyN,EAAyBlP,EAAeC,iBAAiB8O,GAAiB5O,yBAAyBnY,QAAQ4Z,GAAiBA,EAAamL,+BAAiCiC,IAChLhP,EAAeC,iBAAiB8O,GAAiB5O,yBAA2B+O,CAChF,KAEJ/G,EAA8BuG,EAClC,CAIJ,GAAmD,KAAhDjC,EAAwBhK,qBAAsF,WAAxDgK,EAAwBzK,4BAAyC,CACtH,MAAM0M,EAA8B,IAAI5O,GAExC4O,EAA4B3O,WAAWvI,SAAQwI,IACxCA,EAAeyB,eAAiBA,GAE/BzB,EAAeC,iBAAiBzI,SAAQ0I,IACpC,GAAGA,EAAqByB,uBAAyBA,EAE7C,GAAIzB,EAAqBC,yBAAyB3e,OAAS,EAAG,CAE1D,MAAM2tB,EAAmBjP,EAAqBC,yBAAyB5V,MAAK6kB,GACxEA,EAAS9M,8BAAgCmK,EAAwBnK,8BAGjE6M,EAEAA,EAAiB1M,oBAAsBgK,EAAwBhK,oBAG/DvC,EAAqBC,yBAAyB9kB,KAAKoxB,EAG3D,MAEIvM,EAAqBC,yBAAyB9kB,KAAKoxB,EAE3D,GAER,IAGJtE,EAA8BuG,EAClC,CAEA,GAAmD,KAAhDjC,EAAwBhK,qBAAsF,WAAxDgK,EAAwBzK,4BAAyC,CACtH,MAAM0M,EAA8B,IAAI5O,GACxC4O,EAA4B3O,WAAWvI,SAAQwI,IACxCA,EAAeyB,eAAiBA,GAC/BzB,EAAeC,iBAAiBzI,SAAQ0I,IACjCA,EAAqByB,uBAAyBA,IAC7CzB,EAAqBC,yBAA2BD,EAAqBC,yBAAyBnY,QAAOqnB,GAAgCA,EAA6B/M,8BAAgCmK,EAAwBnK,8BAC9N,GAER,IAGJ6F,EAA8BuG,EAClC,GAcErP,GAXYC,aAAW,CACzBC,KAAM,CACJ,iBAAkB,CAChBhuB,MAAO,WAET,6BAA8B,CAC5BA,MAAO,aAKCiuB,GA2JhB,OAzJA9mB,qBAAU,KACN,GAA0C,IAAvCsuB,EAA4BnyB,QAAgB8B,EAAa,CAC9B24B,OAAOC,QAAQ,oDAAD37B,OAAgCozB,EAA4BX,aAAY,0EAExGiD,eAAe5pB,QAAQ,8BAA+B3H,KAAKy3B,UAAUxI,IACrEsC,eAAe5pB,QAAQ,6BAA8B3H,KAAKy3B,UAAU1P,IACpEwJ,eAAe5pB,QAAQ,oBAAqB3H,KAAKy3B,UAAUtI,IAExDa,GACCuB,eAAe5pB,QAAQ,+BAAgC3H,KAAKy3B,UAAUzH,IAGvES,GACCc,eAAe5pB,QAAQ,sBAAuB3H,KAAKy3B,UAAUhH,IAG9DJ,GACCkB,eAAe5pB,QAAQ,qBAAsB3H,KAAKy3B,UAAUpH,IAEhEhvB,KAGAlC,GAEZ,KAEK,IAAG8vB,EAA4BnyB,OAAO,CACvCkyB,GAAe,GAEf,MAAM0I,EAAsBt3B,IACxB,MAAMu3B,EAAsB,gFAE5B,OADAv3B,EAAEw3B,YAAcD,EACTA,CAAmB,EAGxBE,EAAUn2B,EAAQo2B,OAAM,CAACt2B,EAAU4B,KACrC,GAAI2rB,EAAa,CAIb,IAHqBwI,OAAOC,QACxB,iKAuBA,OAAO,EApBPjG,eAAe5pB,QAAQ,8BAA+B3H,KAAKy3B,UAAUxI,IACrEsC,eAAe5pB,QAAQ,6BAA8B3H,KAAKy3B,UAAU1P,IACpEwJ,eAAe5pB,QAAQ,oBAAqB3H,KAAKy3B,UAAUtI,IAExDa,GACCuB,eAAe5pB,QAAQ,+BAAgC3H,KAAKy3B,UAAUzH,IAGvES,GACCc,eAAe5pB,QAAQ,sBAAuB3H,KAAKy3B,UAAUhH,IAG9DJ,GACCkB,eAAe5pB,QAAQ,qBAAsB3H,KAAKy3B,UAAUpH,IAGhEwH,IACAn2B,EAAQ4B,KAAK9B,EAAS0B,SAK9B,CACA,OAAO,CAAI,IAGT60B,EAAeA,KACjBxG,eAAe5pB,QAAQ,8BAA+B3H,KAAKy3B,UAAUxI,IACrEsC,eAAe5pB,QAAQ,6BAA8B3H,KAAKy3B,UAAU1P,IACpEwJ,eAAe5pB,QAAQ,oBAAqB3H,KAAKy3B,UAAUtI,IAExDa,GACCuB,eAAe5pB,QAAQ,+BAAgC3H,KAAKy3B,UAAUzH,IAGvES,GACCc,eAAe5pB,QAAQ,sBAAuB3H,KAAKy3B,UAAUhH,IAG9DJ,GACCkB,eAAe5pB,QAAQ,qBAAsB3H,KAAKy3B,UAAUpH,GAChE,EAMJ,OAHAkH,OAAO9d,iBAAiB,eAAgBie,GACxCH,OAAO9d,iBAAiB,SAAUse,GAE3B,KACHR,OAAO7d,oBAAoB,eAAgBge,GAC3CG,IACAN,OAAO7d,oBAAoB,SAAUqe,EAAa,CAE1D,CAEQn5B,GACJyC,GACJ,IACD,CAAC4tB,EAA6BE,EAAmBa,EAA8BjI,EAA4BnpB,EAAcyC,EAAclC,EAAYL,EAAe4C,EAASqtB,IAE9KpuB,qBAAU,MACS,IAAZjC,GAAqBH,KACiB,IAAlCA,EAAKmB,yBACJ+Y,MAEsC,IAAlCla,EAAKmB,0BACT+H,IAAMnL,MAAM,sHAAoE,CAAC2M,QAAS,YAElG,GACD,CAACvK,EAASH,IAEboC,qBAAU,KACN,MAAM+O,EAAiB1N,IACE,MAAlBA,EAAMuX,SACLvX,EAAM4N,iBAGoC,KAA3Cqf,EAA4BZ,aAAqD,IAAhCtzB,KAAwE,IAA/BwuB,GAA0D,MAAlBvnB,EAAMuX,UAClH,MAAlBvX,EAAMuX,SAA0D,IAAvC0V,EAA4BnyB,QACpDkF,EAAM4N,iBA/lDQ7T,WAC1B+0B,IAAkB,GAClBE,IAAsB,GACtBE,IAA4B,GAC5BE,IAA4B,GAC5B,MAAMh1B,QAAiBoB,GAAmByxB,EAA4BxxB,GAAI,EAA+C,IAA9CwxB,EAA4BoC,cAAyB,GAAsD,IAA7CpC,EAA4BmD,aAAwB,EAAI,IAC1K,MAApBh2B,EAASU,QACR2K,IAAM4B,QAAQ,qDAADxN,OAA8BozB,EAA4BX,cAAgB,CAACrlB,QAAS,aACjGimB,EAA+Bf,GAC/BiB,EAAqB,IACrBG,GAA6B,GAC7BE,EAAiC,IACjCE,EAA6B,CAAC,GAC9BE,EAAoC,IACpCE,EAAyB,IACzBE,IACAE,EAA2B,GAC3BC,EAA8B,CAAC,GAC/BM,IACAT,IACAK,IACA7X,MAEwB,MAApBrc,EAASU,QACb2K,IAAMnL,MAAM,sHAAoE,CAAC2M,QAAS,WAE9FioB,IAA4B,GAC5BE,IAA4B,EAAM,EAqkDtB4G,IAGsB,MAAlBh2B,EAAMuX,SAAmBwS,EACa,IAAvCkD,EAA4BnyB,SAA8D,IAA9CmyB,EAA4BoC,cA78CnDt1B,WACpC+0B,IAAkB,GAClB,MAAM10B,QAAiBoB,GAAmByxB,EAA4BxxB,GAAI,GAC1E,GAAuB,MAApBrB,EAASU,OAAe,CACvB,MAAMq1B,EAA+B,IAAIlD,GACzCkD,EAA6Br1B,OAAS,EACtCoyB,EAA+BiD,GAC5BpG,EAAkBZ,cAAcrC,MAAKmD,GAAyD,OAApCA,EAAkB5uB,iBAExE4xB,EAA4BmD,eAC3B1B,EAAuBjf,KAAES,UAAU6Z,EAAkB/C,eAErDsH,EAAsB7e,KAAES,UAAU6Z,EAAkB/C,sBAGlDvQ,WACA4Z,KACN5qB,IAAM4B,QAAQ,2CAADxN,OAA4BozB,EAA4BX,cAAgB,CAACrlB,QAAS,qBAGzF4qB,WACApb,KAEd,MAC4B,MAApBrc,EAASU,QACb2K,IAAMnL,MAAMF,EAASS,KAAM,CAACoM,QAAS,WAEzC6nB,IAAkB,EAAM,EAm7CRmH,GAE2C,IAAvChJ,EAA4BnyB,OAChCo7B,MAAM,0EAADr8B,OAAgDozB,EAA4BX,aAAY,gJAElD,IAAvCW,EAA4BnyB,SAA+D,IAA9CmyB,EAA4BoC,eA/yCrDt1B,WAGxC,GAFA+0B,IAAkB,GAEK,aADAtzB,GAAmByxB,EAA4BxxB,GAAI,IAC9DX,OAAe,CACvB,MAAMq1B,EAA+B,IAAIlD,GACzCkD,EAA6Br1B,OAAS,EACtCoyB,EAA+BiD,SACzB0B,WACApb,KACNrB,GAAc,CAACC,UAAW,EAAGC,UAAW,uBAC5C,GAsyCgB6gB,GAIkB,MAAlBn2B,EAAMuX,SACgC,IAAvC0V,EAA4BnyB,QAC3B8M,YAAW,KACP+d,IAA8B,EAAK,GACpC,KAGf,EAKJ,OAFAnO,SAASC,iBAAiB,UAAW/J,GAE9B,KACH8J,SAASE,oBAAoB,UAAWhK,EAAc,CACzD,GAEF,CAACuf,EAA6B1F,EAA4BxuB,GAA6BwuB,IAGtF7wB,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAAC2O,KAAS,CAAChP,SAAS,KAAKO,GAAI,CAACgC,GAAI,MAAMnC,SACpCC,cAACqB,IAAG,CAACnB,GAAI,CAAE4V,QAAS,OAAQtL,OAAQ,QAAQzK,SACxCP,eAAC4kB,KAAI,CAACC,WAAS,EAACxW,QAAS,EAAG3N,GAAI,CAACe,GAAI,GAAKC,GAAI,IAAKnB,SAAA,CAE/CP,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAExkB,SAAA,CAEbC,cAACyhB,KAAc,CAACxV,UAAWyV,KAAOxhB,GAAI,CAAEsK,OAAQ,QAASqW,UAAW,EAAGjS,aAAc,QAAS7O,SACzF43B,GACG33B,cAAA0H,WAAA,CAAA3H,SACIP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,SAAUD,cAAe,SAAUJ,gBAAiB,UAAW6I,OAAQ,QAAQzK,SAAA,CAC5IC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,mFAIrDP,eAAAkI,WAAA,CAAA3H,SAAA,CACIP,eAAC6B,IAAG,CAAAtB,SAAA,CACAC,cAAC4N,KAAK,CAACE,UAAU,MAAMD,QAAS,EAAG3N,GAAI,CAAC+K,eAAgB,SAAU/I,GAAI,KAAKnC,SACtEse,GAAsBlT,KAAI,CAAC2V,EAAuBC,IAC/C/gB,cAACghB,KAAK,CAACC,aAAcH,EAAsBvC,YAAaje,MAAM,QAAOP,SACjEC,cAACkhB,KAAI,CAAC/X,MAAO2X,EAAsB1C,UAAW9d,MAAOygB,IAA2B9C,GAAWE,UAAY,UAAY,UACnH1d,QAASA,IA3sDlC0gB,EAACC,EAAWhD,KAEnC,GADAF,GAAc,CAACC,UAAWiD,EAAWhD,UAAWA,IAC/B,IAAdgD,EAAgB,CACjB,MAAMpB,EAA8BxB,GAAyBzH,QAAOkJ,GAAuD,IAA/BA,EAAqBzb,OAA8C,IAA/Byb,EAAqBzb,OAA8C,IAA/Byb,EAAqBzb,QACzLya,GAAgCe,GAChCjB,GAAiCiB,EACnC,MACK,GAAiB,IAAdoB,EAAgB,CACpB,MAAMjB,EAA2B3B,GAAyBzH,QAAOkJ,GAAuD,IAA/BA,EAAqBzb,QAC9Gya,GAAgCkB,GAChCpB,GAAiCoB,EACrC,GAgsD+DgB,CAAmBJ,EAAwBD,EAAsB1C,cAAc,qBAAAzb,OAFFoe,QAMxGvhB,eAAC2B,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACgC,GAAI,GAAK7B,UAAW,SAAUD,SAAU,WAAWL,SAAA,CAAC,gBAAWke,GAAWG,UAAU,YAAO1C,OAASD,OAAO,iBACzIzb,cAACqB,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,SAAUtK,SAAU,YAAYZ,SACvEC,cAAC8M,KAAS,CAAC5M,GAAI,CAAC2K,GAAI,GAAKR,MAAO,IAAK,iCAAkC,CAAChK,UAAW,WAAYwc,KAAK,QAChGzb,QAAQ,WAAWigB,YAAY,+CAA4BzZ,MAAOgX,GAAqB7P,SAAW7H,GApsDpHU,KAC1B,MAAM8S,EAAa9S,EACnBiX,GAAuBnE,GAGrBuE,GADW,KAAVrX,EAC+BkX,GAEAI,GAAeJ,GAA+BpE,GAChF,EA4rDoJ4G,CAAqBpa,EAAE+H,OAAOrH,OACtIoF,WAAY,CACRuU,eACIvhB,cAACkN,KAAc,CAACvM,SAAS,QAAOZ,SAACC,cAACwhB,KAAU,MAEhDvU,aACIjN,cAACkN,KAAc,CAACvM,SAAS,MAAKZ,SACD,KAAxB6e,GACG5e,cAACc,IAAS,CAACZ,GAAI,CAAC0L,OAAQ,WAAYD,YAAY,SAC5ClL,QAASA,IAAM,CAACoe,GAAuB,IAAKI,GAAgCH,OAGhF,eAS5Btf,eAACsiB,KAAK,CAACC,cAAY,EAAAhiB,SAAA,CACfC,cAACiiB,KAAS,CAAAliB,SACNP,eAAC0iB,KAAQ,CAAChiB,GAAI,CAAC,OAAQ,CAACI,MAAO,mBAAoBqB,gBAAiB,SAAS5B,SAAA,CACzEC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,QACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,4BACnDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,WAAWL,SAAC,wBAG3DC,cAACqiB,KAAS,CAAAtiB,SACLif,GAA6B7T,KAAI,CAAC6tB,EAAkBkG,IACjD1/B,eAAC0iB,KAAQ,CAACM,OAAK,EAACC,KAAK,WACjBviB,GAAI,CAAE0L,OAAQ,UAAWjK,gBAA4C,IAA3Bq3B,EAAiBx0B,MAAc,UAAY,OACrF,SAAU,CAAC7C,gBAA4C,IAA3Bq3B,EAAiBx0B,MAAc,qBAAuB,kCAClF/D,QAASA,IA/jDvBoC,WACJ,IAA3Bm2B,EAAiBx0B,OAA0C,IAA3Bw0B,EAAiBx0B,OAAeuxB,EAA4BX,eAAiB4D,EAAiBzmB,QAAQG,SACvF,KAA3CqjB,EAA4BZ,YAAgE,KAA3CY,EAA4BZ,YAA4D,IAAvCY,EAA4BnyB,aACvHk1B,GAAuBE,GAG7BgG,MAAM,0EAADr8B,OAAgDozB,EAA4BX,aAAY,6HAIlE,IAA3B4D,EAAiBx0B,OAAeuxB,EAA4BX,eAAiB4D,EAAiBzmB,QAAQG,WAC5D,KAA3CqjB,EAA4BZ,YAA4D,IAAvCY,EAA4BnyB,OAC5Eo7B,MAAM,0EAADr8B,OAAgDozB,EAA4BX,aAAY,mIAGvF0D,GAAuBE,GAErC,EA8iD+DmG,CAA8BnG,GAAkBj5B,SAAA,CAE/DC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,QAAQtK,SAAEi5B,EAAiB9V,QAC/DljB,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,SAAStK,SAAEi5B,EAAiBzmB,QAAQvO,YACxEhE,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,SAAStK,SAAEi5B,EAAiBzmB,QAAQG,aAPvCsmB,EAAiB9V,mBAiB9EljB,cAACqB,IAAG,CAAC0M,MAAO,CAAC1D,MAAO,OAAQ+P,UAAW,MAAOxL,aAAc,OAAQgS,OAAQ,gBAAiBpW,OAAQ,SAASzK,SAEzE,IAA7Bk2B,EAAkB1lB,SAA6C,IAA7BwnB,KAA4D,IAAtBlF,EACpE,KAEJ7yB,cAAA0H,WAAA,CAAA3H,SACKg4B,GACGv4B,eAAC6B,IAAG,CAACnB,GAAI,CAACyB,gBAAiB,UAAWiN,aAAc,OAAQpE,OAAQ,OAAQ1I,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,SAAUD,cAAe,UAAUhC,SAAA,CAClKC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,kHAGjDC,cAAA0H,WAAA,CAAA3H,SACIC,cAAA,OAAKoM,UAAU,qBAAoBrM,SAC/BP,eAAC8wB,KAAI,CAACpwB,GAAI,CAAC2M,EAAG,EAAG/K,QAAS,eAAe/B,SAAA,CACpCk2B,EAAkBnG,aAAa3kB,KAAI,CAACsoB,EAAiBC,IAClDl0B,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC9BC,cAAC2zB,KAAc,CACXzzB,GAAI,CACJmK,MAAO,aAAc0P,GAAI,MAAOC,GAAI,MAAOpL,aAAc,MAAO,SAAU,CAACjN,gBAAiB60B,EAA0BhG,eAAiBiD,EAAgBjD,aAAe,UAAY,sBAClL7uB,gBAAiB60B,EAA0BhG,eAAiBiD,EAAgBjD,aAAe,UAAY,IACvG/vB,QAASA,IAAMk8B,GAA0BlJ,GAAiB1zB,SAE1DP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQE,WAAY,UAAUjC,SAAA,CAC7CC,cAAC+zB,KAAY,CAAC7zB,GAAI,CAAC8hB,SAAU,OAAQ,+BAAgC,CAAC5hB,SAAU,SAAUE,MAAO,YAAYP,SAACC,cAACi0B,KAAQ,MACvHj0B,cAACk0B,KAAY,CAACC,QAASV,EAAgBjD,aAActwB,GAAI,CAAC,6BAA8B,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,qBAI/G,IAAnCmzB,EAAgB0I,iBAA8D,IAAnC1I,EAAgBT,eACxD,KAEAxzB,eAAAkI,WAAA,CAAA3H,SAAA,EACwC,IAAnC0zB,EAAgB0I,eACbn8B,cAAA0H,WAAA,CAAA3H,SACIC,cAACo/B,KAAe,CAACl/B,GAAI,CAACI,MAAO,QAASF,SAAU,SAAU4N,OAAQ,QAASrC,YAAY,6BAG3F,KAGHsqB,EAAkBjD,eACf,MAE2B,IAA3BS,EAAgB+F,OACZx5B,cAAA0H,WAAA,CAAA3H,SACIC,cAACQ,IAAU,CAAC6+B,KAAK,MAAMn/B,GAAI,CAAC2O,GAAI,GAAKrN,OAAQ,KAAMf,QAASA,IAxxC1GoC,OAAO2tB,EAAc+C,KACnDvtB,IAA+B,GAE/B,MAEMs5B,SAFqCl7B,GAAqB2xB,EAA4BZ,aAEjCxxB,KAAK2V,MAAK+f,GAAoCA,EAAiC9F,gBAAkBA,IAE5J0C,EAAkBnG,aAAavJ,SAASiU,IACjCA,EAAiBjH,gBAAkB+L,EAAsB/L,gBACxDiH,EAAiBxL,iBAAmBsQ,EAAsBtQ,iBAC1DwL,EAAiBxL,iBAAiBzI,SAAS0I,IACvCA,EAAqBuK,QAAS,CAAK,IAEvCgB,EAAiBhB,QAAS,EAC9B,IAGJ,MAAMkD,EAA4BzG,EAAkBnG,aAAaxW,MAAKkhB,GAAoBA,EAAiBjH,gBAAkBA,IAEzH8D,EAAmBvH,aAAaF,MAAK4K,GAAoBA,EAAiBhK,eAAiBA,MAC3F6G,EAAmBvH,aAAeyH,GAGtCoF,GAA0BD,GAE1B12B,IAA+B,EAAM,EA+vCyGu5B,CAA0B9L,EAAgBjD,aAAciD,EAAgBF,eAAexzB,SACrJC,cAAC2gB,KAAQ,CAACzgB,GAAI,CAACI,MAAO,OAAQF,SAAU,UAAWuL,YAAY,iBAKvEnM,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAACQ,IAAU,CAAC6+B,KAAK,MAAMn/B,GAAI,CAAC2O,GAAI,GAAKrN,OAAQ,KAAMf,QAASA,KAAM++B,OA/+BtGjM,EA++ByIE,EAAgBF,cA9+BjMvtB,IAA+B,QAE/B0K,YAAW,KACP,MAAM6rB,EAAyBlF,EAAmBvH,aAAaxW,MAAK4iB,GAAkCA,EAA+B3I,gBAAkBA,IAEjJkM,EAAsCtI,EAAmB7d,MAAKomB,GAA0BA,EAAuBnM,gBAAkBgJ,EAAuBhJ,gBAE3JkM,EAEClD,EAAuBvN,iBAAiBzI,SAAQoZ,IAE5C,IAAI1F,EAAUwF,EAAoCzQ,iBAAiB1V,MAAKsmB,GAA8CA,EAA2CjG,uBAAyBgG,EAA2ChG,uBAElOM,GAECA,EAAQ/K,yBAA2B+K,EAAQ/K,yBAAyBnY,QAAOmkB,GACvEyE,EAA2CzQ,yBAAyBU,MAAKiQ,GAAQA,EAAK/D,+BAAiCZ,EAAEY,iCAI3C,IAA/E6D,EAA2CzQ,yBAAyB3e,OACnEovB,EAA2CzQ,yBAAyB3I,SAAQuZ,IACxE,GAAgE,OAA7DA,EAAmCxO,uBAAqG,UAAnEwO,EAAmC/O,4BAEvGkJ,EAAQ/K,yBAA2B+K,EAAQ/K,yBAAyBnY,QAAOmkB,GAAKA,EAAEY,+BAAiCgE,EAAmChE,oCAGrJ,GAAgE,KAA7DgE,EAAmCxO,uBAAmG,WAAnEwO,EAAmC/O,4BAC1GkJ,EAAQ/K,yBAA2B+K,EAAQ/K,yBAAyBnY,QAAOmkB,GAAKA,EAAEY,+BAAiCgE,EAAmChE,mCAGtJ,CACA,MAAMlL,EAAgBqJ,EAAQ/K,yBAAyBjlB,WAAUixB,GAAKA,EAAEY,+BAAiCgE,EAAmChE,gCAErH,IAAnBlL,EAEAqJ,EAAQ/K,yBAAyB0B,GAAiBkP,EAKlD7F,EAAQ/K,yBAAyB9kB,KAAK01B,EAE9C,KAIJL,EAAoCzQ,iBAAmByQ,EAAoCzQ,iBAAiBjY,QAAOgpB,GAA+BA,EAA4BpG,uBAAyBgG,EAA2ChG,wBAItP8F,EAAoCzQ,iBAAiB5kB,KAAKu1B,EAC9D,IAKJxI,EAAmB/sB,KAAKmyB,GAG5BpF,EAAmB5Q,SAASmZ,IACxBA,EAAuB1Q,iBAAmB0Q,EAAuB1Q,iBAAiBjY,QAAOkY,GAAiF,IAAzDA,EAAqBC,yBAAyB3e,QAAa,IAGhL,MAAMyvB,EAAuC7I,EAAmBltB,WAAUoO,GAAyC,IAAjCA,EAAK2W,iBAAiBze,UAC3D,IAA1CyvB,GACC7I,EAAmB6E,OAAOgE,EAAsC,GAGpE,MAAM1D,EAAyB,CAC3Bt4B,UAAWqzB,EAAmBrzB,UAC9B8rB,aAAcqH,GAGlBkF,GAA6BC,EAAwBC,EAAuB,GAC7E,KA5EqChJ,KA++BwK,EAAAxzB,SAChIC,cAACigC,KAAY,CAAC//B,GAAI,CAACI,MAAO,MAAOF,SAAU,UAAWuL,YAAY,eAGtE3L,cAACQ,IAAU,CAAC6+B,KAAK,MAAMn/B,GAAI,CAAC2O,GAAI,GAAKrN,OAAQ,KAAMf,QAASA,KAAMy/B,OAAgCzM,EAAgBjD,aAtwC3I+C,EAswCyJE,EAAgBF,cArwC5NvtB,IAA+B,QAE/B0K,YAAW,KACP,MAAMyvB,EAAwChJ,EAAmB7d,MAAK8mB,GAA2BA,EAAwB7M,gBAAkBA,IAE3I,GAAG4M,EACClK,EAAkBnG,aAAavJ,SAASiU,IACjCA,EAAiBjH,gBAAkB4M,EAAsC5M,gBACxEiH,EAAiBxL,iBAAmBmR,EAAsCnR,iBAC1EwL,EAAiBxL,iBAAiBzI,SAAS0I,IACvCA,EAAqBuK,QAAS,CAAI,IAEtCgB,EAAiBhB,QAAS,EAC9B,IAGJnC,EAAmBvH,aAAavJ,SAASmV,IAClCA,EAAmCnI,gBAAkB4M,EAAsC5M,gBAC1FmI,EAAmC1M,iBAAmBmR,EAAsCnR,iBAChG,QAGJ,CACAiH,EAAkBnG,aAAavJ,SAASiU,IACjCA,EAAiBjH,gBAAkBA,IAClCiH,EAAiBxL,iBAAmB,GACpCwL,EAAiBhB,QAAS,EAC9B,IAGJ,MACM6G,EADsB,IAAIhJ,GACsBvH,aAAa/Y,QAAOyjB,GAAoBA,EAAiBjH,gBAAkBA,IACjI8D,EAAmBvH,aAAeuQ,CACtC,CAEA7I,EAAuBjf,KAAES,UAAUme,IAEnC,MAAMuF,EAA4BzG,EAAkBnG,aAAaxW,MAAKkhB,GAAoBA,EAAiBjH,gBAAkBA,IAC7HoJ,GAA0BD,GAE1B12B,IAA+B,EAAM,GACtC,KA1CiCk6B,IAAe3M,CAswCwL,EAAAxzB,SAC3JC,cAAC2tB,KAAU,CAACztB,GAAI,CAACI,MAAO,MAAOF,SAAU,UAAWuL,YAAY,uBAIjF,YAAAhJ,OA9CyC+wB,MAmDxDl0B,eAACm0B,KAAc,CACXzzB,GAAI,CAAC6Z,GAAI,MAAOC,GAAI,MAAOpL,aAAc,MAAOjN,gBAA4D,+BAA3C60B,EAA0BhG,aAAiC,UAAY,GACpI,SAAU,CAAC7uB,gBAA4D,+BAA3C60B,EAA0BhG,aAAiC,UAAY,uBACvG/vB,QAASA,KAAM6/B,OAj1BpCrO,EAi1B8DgE,EAAkBhE,eAh1B9E,IAA9BmE,GACCC,GAA8BD,GAGE,IAAjCQ,EAAsBrmB,QACrBsmB,EAAyB,IAG7BJ,EACI,CACIjG,aAAc,6BACdxB,iBAAkBiD,SAI1B0E,EACI,CACI4J,0BAA2B,OAC3BvR,iBAAkBiD,IAnBKA,KAi1B+F,EAAAlyB,SAAA,CAE1EC,cAAC+zB,KAAY,CAAC7zB,GAAI,CAAC8hB,SAAU,OAAQ,+BAAgC,CAAC5hB,SAAU,SAAUE,MAAO,YAAYP,SACzGC,cAACi0B,KAAQ,CAAC/zB,GAAI,CAAC8zB,UAAsD,+BAA3CwC,EAA0BhG,aAAiC,gBAAkB,oBAG3GxwB,cAACk0B,KAAY,CAACC,QAAS,6BAAej0B,GAAI,CAAC,6BAA8B,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,kBAGhIN,cAACo0B,KAAQ,CAACC,GAAI+B,EAA2B9B,QAAQ,OAAOC,eAAa,EAAAx0B,SACjEC,cAAA,OAAK+N,MAAO,CAAE0c,YAAa,QAAS1qB,SAC/Bk2B,EAAkBhE,cAAc9mB,KAAI,CAAC4nB,EAAmByN,IACrDhhC,eAACm0B,KAAc,CAA6CzzB,GAAI,CAAC6Z,GAAI,MAAOC,GAAI,MAAO3P,MAAO,OAAQuE,aAAc,MAAO,SAAU,CAACjN,gBAAiB,uBACnJlB,QAASA,IAr0BvCoC,OAAOsB,EAAe+tB,EAAiBgL,KACzE,GAAGhL,IAAoBwE,EAAiCyD,kBAAkB,CAItE,GAHAn0B,IAA+B,GAC/BkyB,IAA4B,GAEzBpB,EACC,GAA0B,IAAvBoG,QACOD,GAAiB94B,EAAe+tB,EAAiBgL,QAGvD,IAAmD,IAAhDpG,EAA6B5D,gBAA4BhB,IAAoB+D,EAAkBhE,cAAc,GAAGC,gBAAgB,CAC/H,MAAMuO,EAAmC,CACrCtG,kBAAmBlE,EAAkBhE,cAAc,GAAGC,gBACtDkI,iBAAkBnE,EAAkBhE,cAAc,GAAGnD,WACrDoE,gBAAgB,GAGpB6D,EAAgC0J,GAEhC5J,EAAyB,CACrBsD,kBAAmBjI,EACnBgB,eAAgBuN,EAAiCvN,eACjDkH,iBAAkBqG,EAAiCrG,mBAGvD,MAAM+C,EAA2BsD,EAAiCrG,iBAAiBjvB,KAAI,CAACiyB,EAAsBC,KAIpG,CACF7M,aAJiB4M,EAAqB5M,aAKtCxB,iBAJiBoO,EAAqBpO,iBAAiB,GAKvDsO,4BAA6B,EAC7BP,gBAAiBK,EAAqBpO,iBAAiBze,WAIzDgtB,EAA6B,CAC/BpD,kBAAmBjI,EACnBgB,eAAgBuN,EAAiCvN,eACjDzD,WAAYZ,EAA2BY,WACvC2K,iBAAkB+C,GAGtBxG,EAAoC4G,EACxC,KAEI,CACA1G,EAAyB,CACrBsD,kBAAmBjI,EACnBgB,eAAgB4D,EAA6B5D,eAC7CkH,iBAAkBtD,EAA6BsD,mBAGnD,MAAM+C,EAA2BrG,EAA6BsD,iBAAiBjvB,KAAI,CAACiyB,EAAsBC,KAIhG,CACF7M,aAJiB4M,EAAqB5M,aAKtCxB,iBAJiBoO,EAAqBpO,iBAAiB,GAKvDsO,4BAA6B,EAC7BP,gBAAiBK,EAAqBpO,iBAAiBze,WAIzDgtB,EAA6B,CAC/BpD,kBAAmBjI,EACnBgB,eAAgB4D,EAA6B5D,eAC7CzD,WAAYZ,EAA2BY,WACvC2K,iBAAkB+C,GAEtBxG,EAAoC4G,EACxC,YAKEN,GAAiB94B,EAAe+tB,EAAiBgL,GAE3DhF,IAA4B,GAC5BlyB,IAA+B,EACnC,GAmvB+E06B,CAA8B3N,EAAkB5uB,cAAe4uB,EAAkBb,gBAAiBa,EAAkBvuB,OAAOzE,SAAA,CAC1IC,cAAC+zB,KAAY,CAAC7zB,GAAI,CAAC8hB,SAAU,OAAQ,+BAAgC,CAAC5hB,SAAU,SAAUE,MAAmC,IAA5ByyB,EAAkBvuB,MAAc,MAAQ,YAAYzE,SACjJC,cAAC2gC,KAAqB,CAACzgC,GAAI,CAAC8zB,UAAsD,+BAA3CwC,EAA0BhG,aAAiC,gBAAkB,oBAExHxwB,cAACk0B,KAAY,CAACC,QAASpB,EAAkBb,gBAAiBhyB,GAAI,CAAC,6BAA8B,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,iBAAe,iBAAAqC,OAL7H69B,qBAiB9EhhC,eAAA,OAAK4M,UAAU,cAAc2B,MAAO,CAACjM,QAAS,OAAQmJ,eAAgB,iBAAiBlL,SAAA,CACnFP,eAAC2B,IAAU,CAACC,QAAQ,KAAIrB,SAAA,CAACC,cAAA,QAAM+N,MAAO,CAAC5N,WAAY,SAAUG,MAAO,OAAOP,SAAC,OAAS,uBACrFP,eAAC2B,IAAU,CAACC,QAAQ,KAAIrB,SAAA,CAACC,cAAA,QAAM+N,MAAO,CAAC5N,WAAY,SAAUG,MAAO,YAAYP,SAAC,OAAS,qCAC1FP,eAAC2B,IAAU,CAACC,QAAQ,KAAIrB,SAAA,CAACC,cAAA,QAAM+N,MAAO,CAAC5N,WAAY,SAAUG,MAAO,QAAQP,SAAC,OAAS,qCAI9FP,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAExkB,SAAA,CAEbP,eAAC6B,IAAG,CAACnB,GAAI,CAAC2gB,UAAW,EAAGjS,aAAc,OAAQgS,OAAQ,iBAAkBpW,OAAQ,QAASK,GAAI,MAAOuY,SAAU,QAAQrjB,SAAA,CAClHC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,OAAQ4B,GAAI,GAAK2I,GAAI,GAAK1K,WAAY,SAAUC,SAAU,SAAUC,UAAW,UAAUN,SAAC,mCAC/HC,cAACqB,IAAG,CAACnB,GAAI,CAACe,GAAI,IAAKC,GAAI,IAAKgB,GAAI,GAAGnC,SAC9B83B,GACGr4B,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,SAAUD,cAAe,SAAUG,GAAI,GAAGnC,SAAA,CACvGC,cAACiC,IAAgB,CAAC3B,MAAM,YACxBN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,8FAGjDC,cAAA0H,WAAA,CAAA3H,SACIP,eAAC4kB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAGsc,cAAe,CAAErc,GAAI,EAAGsc,GAAI,EAAGC,GAAI,GAAG/gC,SAAA,CAEjEP,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAAC+gC,KAAO,CAAC7gC,GAAI,CAACI,MAAO,YAAYN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAAC2O,GAAI,GAAG9O,SAAA,aAAA4C,OAAYozB,EAA4BZ,YAAc,SAEvI31B,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACghC,KAAU,CAAC9gC,GAAI,CAACI,MAAO,YAAYN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAAC2O,GAAI,GAAG9O,SAAA,mBAAA4C,OAAaozB,EAA4BX,cAAgB,SAE7I51B,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,EACK,IAA/Cg2B,EAA4BR,eAA0Bv1B,cAACihC,KAAQ,CAAC/gC,GAAI,CAACI,MAAO,QAASF,SAAU,UAAaJ,cAACkhC,KAAU,CAAChhC,GAAI,CAACI,MAAO,QAASF,SAAU,UACxJJ,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAAC2O,GAAI,GAAG9O,SAAA,sBAAA4C,OACsB,KAA/CozB,EAA4BR,gBAAuE,IAA/CQ,EAA4BR,eAA0B,MAAQ,UAAO,SAIhJ/1B,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACmhC,KAAiB,CAACjhC,GAAI,CAACI,MAAO,YAAYd,eAAC2B,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAAC2O,GAAI,GAAG9O,SAAA,CAAC,iBAAYg2B,EAA4BV,YAAc3Z,KAAOqa,EAA4BV,aAAa5Z,OAAO,cAAgB,SAEzNjc,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACohC,KAAQ,CAAClhC,GAAI,CAACI,MAAO,YAAYN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAAC2O,GAAI,GAAG9O,SAAA,uBAAA4C,OAAiBozB,EAA4BT,mBAAqB,SAEpJ91B,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACqhC,KAAS,CAACnhC,GAAI,CAACI,MAAO,YAAYN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAAC2O,GAAI,GAAG9O,SAAA,QAAA4C,OAAUozB,EAA4BJ,eAAiB,SAG1In2B,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAIwR,EAA4BzjB,YAAc,EAAI,EAAGpS,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CACzFC,cAACshC,KAAY,CAACvzB,MAAO,CAACzN,MAAO,SAAUF,SAAU,UAAWkrB,WAAY,SACxEtrB,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAAC2O,GAAI,IAAK9O,SAAA,mBAAA4C,OAC3BozB,EAA4BP,eAAiBO,EAA4BP,eAAiB,MAAQ,SAGzHh2B,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAIwR,EAA4BzjB,YAAc,EAAI,EAAGpS,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CACzFC,cAACuhC,KAAa,CAACxzB,MAAO,CAACzN,MAAO,SAAUF,SAAU,aAClDJ,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAAC2O,GAAI,GAAG9O,SAAA,qBAAA4C,OAC1BozB,EAA4BN,eAAiBM,EAA4BN,eAAiB,MAAQ,SAIvHM,EAA4BzjB,YACzB,KAEAtS,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,IAGnB/kB,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACwhC,KAAc,CAACzzB,MAAO,CAACzN,MAAO,SAAUF,SAAU,aACnDJ,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAAC2O,GAAI,GAAG9O,SAAA,0BAAA4C,OAC1BozB,EAA4BL,0BAA4BK,EAA4BL,0BAA4B,MAAQ,SAI7IK,EAA4BzjB,YACzB9S,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACyhC,KAAY,CAAC1zB,MAAO,CAACzN,MAAO,SAAUF,SAAU,aACjDJ,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAAC2O,GAAI,GAAG9O,SAAC,kCAGjD,KAGJP,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,GAAIrkB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC5CC,cAAC0hC,KAAI,CAACxhC,GAAI,CAACI,MAAO,YAAYN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAAC2O,GAAI,GAAG9O,SAAA,2BAAA4C,OAAcozB,EAA4BH,iBAAmB,mBAU/Jp2B,eAAA,OAAK4M,UAAU,8BAA6BrM,SAAA,CAEpC03B,GACIz3B,cAAA0H,WAAA,CAAA3H,SACIP,eAAC6B,IAAG,CAACnB,GAAI,CAACsK,OAAQ,OAAQ1I,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,SAAUD,cAAe,UAAUhC,SAAA,CAChHC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,sHAIzD8yB,EAC+C,IAA3CA,EAAkBZ,cAAc1hB,QAAqE,OAArDsiB,EAAkBZ,cAAc,GAAG9tB,cAC/EnE,cAACqB,IAAG,CAACnB,GAAI,CAACsK,OAAQ,OAAQ1I,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,SAAUD,cAAe,UAAUhC,SAChHC,cAACmB,IAAU,CAACC,QAAQ,KAAIrB,SAAC,uEAG7BC,cAAA,OAAKoM,UAAU,oBAAmBrM,SAACC,cAAC8xB,GAAoB,CAACe,kBAAmBA,MAEhF,KAGqC,IAA5C6D,EAAiCnmB,OAC9B/Q,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAAA,OAAKoM,UAAU,oBAAoB2B,MAAO,CAACvD,OAAyC,IAAjCosB,EAAsBrmB,OAAe,SAAW,QAAQxQ,SACtGk4B,GACGj4B,cAAA0H,WAAA,CAAA3H,SACIP,eAAC6B,IAAG,CAACnB,GAAI,CAACsK,OAAQ,OAAQ1I,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,SAAUD,cAAe,UAAUhC,SAAA,CAChHC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,6GAIrDC,cAAA0H,WAAA,CAAA3H,SACK22B,EAAiCmD,qBAAkE,IAA5CnD,EAAiC8C,OACrFx5B,cAACqB,IAAG,CAACnB,GAAI,CAACsK,OAAQ,OAAQ1I,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,SAAUD,cAAe,UAAUhC,SAChHC,cAACmB,IAAU,CAACC,QAAQ,KAAIrB,SAAC,2HAG7BP,eAAC6B,IAAG,CAACnB,GAA8D,OAA1Dw2B,EAAiChG,qBAAgC,CAACtW,UAAW,QAAU,CAAC,EAAEra,SAAA,CAC/FC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACC,WAAY,SAAUE,UAAW,SAAUD,SAAU,SAAUyK,GAAI,IAAK9K,SAAE22B,EAAiChG,sBAAwB,KAChKgG,EAAiCxH,yBAC9BwH,EAAiCxH,yBAAyB/jB,KAAI,CAACwlB,EAAcC,IACzE5wB,cAACqB,IAAG,CAAAtB,SACAP,eAAC4kB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAEvkB,SAAA,CAEP,IAAlB6wB,EACGpxB,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BiQ,YAAa,MAAOhkB,EAAG,IAAK9M,SACrFC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAE22B,EAAiC5F,wBAGnE,UAA7CH,EAAaI,4BACVvxB,eAAAkI,WAAA,CAAA3H,SAAA,CACIP,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BiQ,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,UAAUjC,SAAA,CACtJC,cAACgxB,KAAY,CAAC9wB,GAAI,CAACE,SAAU,UAAWE,MAAO,UAAUN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU6N,OAAQ,OAAQijB,WAAY,OAAOlxB,SAAE22B,EAAiCxF,0BAG7MlxB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8B/T,EAAG,IAAK9M,SACjEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU0O,GAAI,IAAK9O,SAAE22B,EAAiCvF,2BAI1HnxB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8B/T,EAAG,IAAK9M,SACjEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAE22B,EAAiCvF,2BAK7H,KAGJnxB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BwQ,UAAW,MAAOP,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQE,WAAY,UAAUjC,SAC9IC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACE,SAAU,QAAQL,SAAE4wB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVvxB,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BwQ,UAAW,MAAOP,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQmJ,eAAgB,UAAUlL,SAClJC,cAAC2d,KAAQ,CAACoH,UAAsD,IAA5C2R,EAAiC8C,OACrD5b,SAAgD,IAAvC+S,EAAaW,sBACtBlD,QAAS,CAAEE,KAAMF,GAAQE,MAAQhuB,MAAM,QACvCJ,GAAI,CAAC,+BAAgC,CAACE,SAAU,WAChDK,QAASA,KAAkD,IAA5Ci2B,EAAiC8C,OA76CpEmI,EAAC/Q,EAAegR,KAC5E,GAAc,OAAXA,EAAgB,CACf,MAAMC,EAA6B,IAAIrL,GACvCqL,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAeU,uBAAwB,EACzImF,EAA6BoL,GAE7BzF,GAAsDyF,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAC5J,MACK,IAAc,IAAXgR,EAAgB,CACpB,MAAMC,EAA6B,IAAIrL,GACvCqL,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAeU,sBAAwB,KACzImF,EAA6BoL,GAE7BzF,GAAsDyF,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAC5J,GA+5CmJ+Q,CAAwD/Q,EAAeD,EAAaW,uBA3vBzMwQ,EAAClR,EAAegR,KAE9C,GAAc,OAAXA,EAAgB,CACf,MAAMC,EAA6B,IAAIrL,GACvCqL,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAeU,uBAAwB,EACzImF,EAA6BoL,GAE7BhE,GACIgE,EAA2BrR,aAC3BwG,EAA0B,EAC1B6K,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAClGiR,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAekL,6BAEzH,MACK,IAAc,IAAX8F,EAAgB,CACpB,MAAMC,EAA6B,IAAIrL,GACvCqL,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAeU,uBAAwB,EACzImF,EAA6BoL,GAE7BhE,GACIgE,EAA2BrR,aAC3BwG,EAA0B,EAC1B6K,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAClGiR,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAekL,6BAEzH,KACI,CACA,MAAM+F,EAA6B,IAAIrL,GACvCqL,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAeU,uBAAwB,EACzImF,EAA6BoL,GAE7BhE,GAA8CgE,EAA2BrR,aACrEwG,EAA0B,EAC1B6K,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAClGiR,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAekL,6BAEzH,GAutBgQgG,CAA0BlR,EAAeD,EAAaW,2BAG1OtxB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAExkB,SACbC,cAAA,OAAKoM,UAAU,uBAAsBrM,SACjCC,cAAA,OAAKoM,UAAU,eAAcrM,SACzBC,cAACuxB,KAAgB,CAACnlB,UAAU,oBAAoBwe,KAAM,EAAG7F,UAAsD,IAA5C2R,EAAiC8C,OAChGzqB,SAAW7H,IAAkD,IAA5CwvB,EAAiC8C,OAl6CpFuI,EAACnR,EAAehpB,KAC1E,MAAM8S,EAAa9S,EAEhBmM,GAAUuE,SACTqC,cAAc5G,GAAUuE,SAG5BvE,GAAUuE,QAAU5H,YAAW,KAC3B,MAAMmxB,EAA6B,IAAIrL,GACvCqL,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAeY,oBAAsB9W,EACvI+b,EAA6BoL,GAE7BzF,GAAsDyF,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAgBlW,EAAW,GACpL,IAAI,EAq5C0JqnB,CAAsDnR,EAAe1pB,EAAE+H,OAAOrH,OAztBnNo6B,EAACpR,EAAehpB,KAC5C,MAAM8S,EAAa9S,EAEhBmM,GAAUuE,SACTqC,cAAc5G,GAAUuE,SAG5BvE,GAAUuE,QAAU5H,YAAW,KAC3B,MAAMmxB,EAA6B,IAAIrL,GACvCqL,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAeY,oBAAsB9W,EACvI+b,EAA6BoL,GAE7BhE,GACIgE,EAA2BrR,aAC3BwG,EAA0B,EAC1B6K,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAClGiR,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAekL,6BACjHphB,GANe,EAQlB,GACF,IAAI,EAqsBiPsnB,CAAwBpR,EAAe1pB,EAAE+H,OAAOrH,OAC5M6S,aAAckW,EAAaa,uBAC7B,WAAA7uB,OAJwCq0B,EAAuB,gBAAAr0B,OAAeiuB,EAAa,gBAAAjuB,OAAe+zB,EAAiCiD,qBAAoB,yBAAAh3B,OAAwB+zB,EAAiCgE,kBAAiB,cAAA/3B,OAAa+zB,EAAiC8C,gBAUzSx5B,cAAA0H,WAAA,CAAA3H,SACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAExkB,SACbC,cAAA,OAAKoM,UAAU,uBAAsBrM,SACjCC,cAAA,SAAO+M,KAAK,OAAOgY,UAAsD,IAA5C2R,EAAiC8C,OAC1DptB,UAAU,mBACV2C,SAAW7H,IAAkD,IAA5CwvB,EAAiC8C,OA95ChFyI,EAACrR,EAAehpB,KAC1E,MAAM8S,EAAa9S,EAEhBmM,GAAUuE,SACTqC,cAAc5G,GAAUuE,SAG5BvE,GAAUuE,QAAU5H,YAAW,KAC3B,MAAMmxB,EAA6B,IAAIrL,GACvCqL,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAeY,oBAAsB9W,EACvI+b,EAA6BoL,GAE7BtG,GAA2DsG,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAgBlW,EAAW,GACzL,IAAI,EAi5CsJunB,CAAsDrR,EAAe1pB,EAAE+H,OAAOrH,OA/sB7Ms6B,EAACtR,EAAehpB,KAC9C,MAAM8S,EAAa9S,EAEhBmM,GAAUuE,SACTqC,cAAc5G,GAAUuE,SAG5BvE,GAAUuE,QAAU5H,YAAW,KAE3B,MAAMmxB,EAA6B,IAAIrL,GACvCqL,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAeY,oBAAsB9W,EACvI+b,EAA6BoL,GAE7BhE,GACIgE,EAA2BrR,aAC3BwG,EAA0B,EAC1B6K,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAClGiR,EAA2B7S,iBAAiBgI,EAA0B,GAAG9H,yBAAyB0B,GAAekL,6BACjH+F,EAA2B7S,iBAAiBgI,EAA0B,GAAGtG,qBAC5E,GACF,EAAE,EA2rB+OwR,CAA0BtR,EAAe1pB,EAAE+H,OAAOrH,OAC9M6S,aAAckW,EAAaa,uBAC7B,WAAA7uB,OALgDq0B,EAAuB,gBAAAr0B,OAAeiuB,EAAa,gBAAAjuB,OAAe+zB,EAAiCiD,qBAAoB,yBAAAh3B,OAAwB+zB,EAAiCgE,kBAAiB,cAAA/3B,OAAa+zB,EAAiC8C,iBAU9S,+BAAA72B,OAnE8BiuB,MAuEkB,SAA/D8F,EAAiC6J,2BAAyE,IAAjC3J,EAAsBrmB,OAC3F/Q,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACC,WAAY,SAAUE,UAAW,SAAUD,SAAU,SAAUyK,GAAI,IAAK9K,SAAC,wEACvGC,cAACyhB,KAAc,CAACxV,UAAWyV,KAAM3hB,SAC7BP,eAACsiB,KAAK,CAACC,cAAY,EAAAhiB,SAAA,CACfC,cAACiiB,KAAS,CAAAliB,SACNP,eAAC0iB,KAAQ,CAAChiB,GAAI,CAAC,OAAQ,CAACI,MAAO,mBAAoBqB,gBAAiB,SAAS5B,SAAA,CACzEC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,SAAUE,MAAO,SAASP,SAAC,oBAClEC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,UAAUL,SAAC,uBAClDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,UAAUL,SAAC,oBAClDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,UAAUL,SAAC,2BAClDC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACE,SAAU,UAAUL,SAAC,4BAG1DC,cAACqiB,KAAS,CAACniB,GAAI,CAAC0O,aAAc,OAAO7O,SAChC22B,EAAiC1H,iBAAiB7jB,KAAI,CAAC4nB,EAAmByN,KACvEhhC,sBAAC0iB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAAU1iB,SAAA,CAC3BP,eAAC2iB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,SAAStK,SAAA,CAACC,cAACmiC,KAAe,CAACjiC,GAAI,CAAC4K,GAAI,GAAKD,GAAI,GAAKvK,MAAO,gBAAiByyB,EAAkBb,mBAChIlyB,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,SAAStK,UAj1BpG6D,EAi1B8HmvB,EAAkBvuB,MAh1BjK,IAAXZ,EAEC5D,cAAA,OAAKoM,UAAU,mBAAkBrM,SAACC,cAAA,KAAGoM,UAAU,YAAWrM,SAAC,oCAG5C,IAAX6D,EAEJ5D,cAAA,OAAKoM,UAAU,kBAAiBrM,SAACC,cAAA,KAAGoM,UAAU,YAAWrM,SAAC,oCAK1DC,cAAA,OAAKoM,UAAU,iBAAgBrM,SAACC,cAAA,KAAGoM,UAAU,YAAWrM,SAAC,wCAq0ByBC,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,SAAStK,SAAE2b,KAAOqX,EAAkBqP,cAAc3mB,OAAO,gBAC7Fzb,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,SAAStK,SAAEgzB,EAAkBgC,iBACjE/0B,cAACmiB,KAAS,CAACC,MAAM,OAAOliB,GAAI,CAACmK,MAAO,QAAQtK,SAAEgzB,EAAkBtD,eAL/B+Q,GA/0BxF58B,KAs1BgD,cAMrBpE,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACC,WAAY,SAAUE,UAAW,SAAUD,SAAU,SAAU6wB,WAAY,EAAG/uB,GAAI,GAAGnC,SAAE22B,EAAiCyD,oBACtJn6B,cAAA,OAAKoM,UAAU,wBAAuBrM,SAClCP,eAAC8wB,KAAI,CAACpwB,GAAI,CAAC2M,EAAG,GAAG9M,SAAA,CACZ22B,EAAiC0D,iBAAiBjvB,KAAI,CAACiyB,EAAsBC,IAC1E79B,eAAA,OAAAO,SAAA,CACIC,cAAC2zB,KAAc,CACXzzB,GAAI,CAAC6Z,GAAI,MAAOC,GAAI,MAAOpL,aAAc,MAAO,SAAU,CAACjN,gBAAiB,uBAC5ElB,QAASA,IA52BxD48B,KACjC9G,GAAkC3C,IAC9B,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQwJ,IAA0BxJ,EAAQwJ,GACnCxJ,CAAO,GAChB,EAu2B6FwO,CAA4BhF,GAAuBt9B,SAElEP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQE,WAAY,UAAUjC,SAAA,CAC7CC,cAAC+zB,KAAY,CAAC7zB,GAAI,CAAC8hB,SAAU,OAAQ,+BAAgC,CAAC5hB,SAAU,OAAQE,MAAO,UAAW0zB,WAAoE,IAAzDsC,EAA8B+G,GAAkC,gBAAkB,iBAAiBt9B,SAACC,cAACi0B,KAAQ,MAClOj0B,cAACk0B,KAAY,CAACC,QAASiJ,EAAqB5M,aAActwB,GAAI,CAAC,6BAA8B,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,oBAIxJN,cAACo0B,KAAQ,CAACC,GAAIiC,EAA8B+G,GAAwB/I,QAAQ,OAAOC,eAAa,EAAAx0B,SAC5FP,eAAA,OAAK4M,UAAU,uBAAuB2B,MAAO,CAACqM,UAAW,OAAQvJ,aAAc,QAAS+P,OAAQ,oBAAqBhS,aAAc,QAAQ7O,SAAA,CACvIC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACC,WAAY,SAAUE,UAAW,UAAUN,SAAEq9B,EAAqBpO,iBAAiB0B,uBAExH1wB,cAAA,OAAKoM,UAAU,wBAAwB2B,MAAO,CAACX,QAAS,QAAQrN,SAC5DP,eAAC4kB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAEvkB,SAAA,CAC1BC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BiQ,YAAa,MAAOhkB,EAAG,IAAK9M,SACrFC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEq9B,EAAqBpO,iBAAiB8B,wBAGtHtxB,eAAC4kB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BiQ,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQmJ,eAAgB,SAAUjJ,WAAY,UAAUjC,SAAA,CACtJC,cAACgxB,KAAY,CAAC9wB,GAAI,CAACE,SAAU,SAAUE,MAAO,OAAQwK,GAAI,MAC1D9K,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU8wB,WAAY,OAAOlxB,SAAEq9B,EAAqBpO,iBAAiBkC,0BAGzIlxB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8B/T,EAAG,IAAK9M,SACjEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU0O,GAAI,IAAK9O,SAAEq9B,EAAqBpO,iBAAiBmC,wBAG9HiM,EAAqBpO,iBAAiBE,yBAAyB/jB,KAAI,CAACwlB,EAAcC,IAC/EpxB,eAAC6B,IAAG,CAA+G0M,MAAO,CAACjM,QAAS,OAAQuI,MAAO,QAAQtK,SAAA,CACvJC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BwQ,UAAW,MAAOP,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQE,WAAY,UAAUjC,SAC9IC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACE,SAAU,QAAQL,SAAE4wB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVvxB,eAAAkI,WAAA,CAAA3H,SAAA,CACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAGrkB,GAAI,CAAC0gB,OAAQ,6BAA8BwQ,UAAW,MAAOP,YAAa,MAAOhkB,EAAG,GAAK/K,QAAS,OAAQmJ,eAAgB,UAAUlL,SAClJC,cAAC2d,KAAQ,CAACyQ,QAAS,CAAEE,KAAMF,GAAQE,MAAQ1Q,SAAgD,IAAvC+S,EAAaW,sBAC7DvM,UAA8D,IAApD2R,EAAiCxD,eAC3ChzB,GAAI,CAAC,+BAAgC,CAACE,SAAU,WAAYE,MAAM,QAClEG,QAAUyG,GA/wBnFo7B,EAACjF,EAAuBC,EAA6B1M,EAAegR,KAC/G,GAAc,OAAXA,EAAgB,CACf,MAAMhE,EAAyB,IAAIhH,GACnCgH,EAAuBxD,iBAAiBiD,GAAuBrO,iBAAiBsO,EAA8B,GAAGpO,yBAAyB0B,GAAeU,uBAAwB,EACjLuF,EAAyB+G,GAEzBC,GACID,EAAuBxD,iBAAiBiD,GAAuB7M,aAC/D8M,EAA8B,EAC9BM,EAAuBxD,iBAAiBiD,GAAuBrO,iBAAiBsO,EAA8B,GAAGpO,yBAAyB0B,GAC1IgN,EAAuBxD,iBAAiBiD,GAAuBrO,iBAAiBsO,EAA8B,GAAGpO,yBAAyB0B,GAAekL,6BAEjK,MAEK,IAAc,IAAX8F,EAAgB,CACpB,MAAMhE,EAAyB,IAAIhH,GACnCgH,EAAuBxD,iBAAiBiD,GAAuBrO,iBAAiBsO,EAA8B,GAAGpO,yBAAyB0B,GAAeU,uBAAwB,EACjLuF,EAAyB+G,GAEzBC,GACID,EAAuBxD,iBAAiBiD,GAAuB7M,aAC/D8M,EAA8B,EAC9BM,EAAuBxD,iBAAiBiD,GAAuBrO,iBAAiBsO,EAA8B,GAAGpO,yBAAyB0B,GAC1IgN,EAAuBxD,iBAAiBiD,GAAuBrO,iBAAiBsO,EAA8B,GAAGpO,yBAAyB0B,GAAekL,6BAEjK,KAEI,CACA,MAAM8B,EAAyB,IAAIhH,GACnCgH,EAAuBxD,iBAAiBiD,GAAuBrO,iBAAiBsO,EAA8B,GAAGpO,yBAAyB0B,GAAeU,uBAAwB,EACjLuF,EAAyB+G,GAEzBC,GACID,EAAuBxD,iBAAiBiD,GAAuB7M,aAC/D8M,EAA8B,EAC9BM,EAAuBxD,iBAAiBiD,GAAuBrO,iBAAiBsO,EAA8B,GAAGpO,yBAAyB0B,GAC1IgN,EAAuBxD,iBAAiBiD,GAAuBrO,iBAAiBsO,EAA8B,GAAGpO,yBAAyB0B,GAAekL,6BAEjK,GAyuBoIwG,CAAuCjF,EAAuBD,EAAqBE,4BAA6B1M,EAAeD,EAAaW,2BAIpKtxB,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAExkB,SACbC,cAAA,OAAKoM,UAAU,kBAAiBrM,SAC5BC,cAAA,OAAKoM,UAAU,eAAcrM,SACzBC,cAACuxB,KAAgB,CAACnlB,UAAU,oBAAoBwe,KAAM,EAAGnQ,aAAckW,EAAaa,oBAChFzM,UAA8D,IAApD2R,EAAiCxD,eAC3CnkB,SAAW7H,GAAMy2B,GAAqCN,EAAuBD,EAAqBE,4BAA6B1M,EAAe1pB,EAAE+H,OAAOrH,UACzJ,WAAAjF,OAJwCy6B,EAAqBE,4BAA2B,KAAA36B,OAAIiuB,WAU9G5wB,cAAA0H,WAAA,CAAA3H,SACIC,cAACokB,KAAI,CAAC/L,MAAI,EAACkM,GAAI,EAAExkB,SACbC,cAAA,OAAKoM,UAAU,kBAAiBrM,SAC5BC,cAAA,OAAKoM,UAAU,eAAcrM,SACzBC,cAACuxB,KAAgB,CAACnlB,UAAU,oBAAoBwe,KAAM,EAAGnQ,aAAckW,EAAaa,oBAChFzM,UAA8D,IAApD2R,EAAiCxD,eAC3CnkB,SAAW7H,GAAMy2B,GAAqCN,EAAuBD,EAAqBE,4BAA6B1M,EAAe1pB,EAAE+H,OAAOrH,UACzJ,WAAAjF,OAJwCy6B,EAAqBE,4BAA2B,KAAA36B,OAAIiuB,YAQ3G,gBAAAjuB,OAtCeiuB,EAAa,uBAAAjuB,OAAsB+zB,EAAiCyD,2BA6C1Gn6B,cAAA,OAAKoM,UAAU,2BAA2B2B,MAAO,CAACpM,gBAAiB,UAAWhB,SAAU,SAASZ,SAC7FC,cAAC6tB,KAAU,CAACC,MAAOsP,EAAqBL,gBAAiB9Q,KAAMmR,EAAqBE,4BAChFh9B,MAAM,QAAQJ,GAAI,CAAC0M,EAAG,QAASmC,SAAUA,CAAC7H,EAAGU,IAx5BtG26B,EAACz5B,EAAOmjB,EAAMuW,KACjD,MAAMC,EAAoC,IAAI/L,GAC9C+L,EAAkCrI,iBAAiBoI,GAAexT,iBAAmB4H,EAAsBwD,iBAAiBoI,GAAexT,iBAAiB/C,EAAO,GACnKwW,EAAkCrI,iBAAiBoI,GAAelF,4BAA8BrR,EAChG0K,EAAoC8L,EAAkC,EAo5B6EF,CAA+Br7B,EAAGU,EAAOy1B,cAIrG,oBAAA16B,OAlFe06B,MAsFe,OAAhD3G,EAAiCjH,WAC9BzvB,cAAA0H,WAAA,CAAA3H,SACIC,cAAA,OAAKoM,UAAU,aAAa2B,MAAO,CAACud,WAAY,OAAQlR,UAAW,OAAOra,SACtEC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,aAAcH,WAAY,UAAUJ,SAAA,+CAAA4C,OAA0B+zB,EAAiCjH,kBAIxI,oBAa3CiH,EAAiCxH,0BAC8B,IAAxDwH,EAAiCmD,qBAA2E,IAA5CnD,EAAiC8C,OAC7F,KAEAx5B,cAAA0H,WAAA,CAAA3H,SACIC,cAAA,OAAKoM,UAAU,2BAA0BrM,SACrCC,cAAC6tB,KAAU,CAACC,MAAO0I,EAA0BuG,gBAAiB9Q,KAAM+K,EAAyB12B,MAAM,UAAUJ,GAAI,CAAC0M,EAAG,QAASmC,SAAUA,CAACjG,EAAOlB,IA/7B7K86B,EAAC55B,EAAOlB,KAC9B+uB,EAAoCH,EAA0BxH,iBAAiBpnB,EAAQ,IACvFqvB,EAA2BrvB,EAAM,EA67B4K86B,CAAmB55B,EAAOlB,SAIpM,QAIR,kBAQxB5H,cAACguB,GAAiB,CAACqC,2BAA4BA,EAA4B5B,8BAA+BA,GACtG2B,mCAlrE+BA,KACvC7hB,IAAM4B,QAAQ,6DAADxN,OAAmCozB,EAA4BX,cAAgB,CAACrlB,QAAS,aACtGimB,EAA+Bf,GAC/BiB,EAAqB,IACrBG,GAA6B,GAC7BE,EAAiC,IACjCE,EAA6B,CAAC,GAC9BE,EAAoC,IACpCE,EAAyB,IACzBE,IACAE,EAA2B,GAC3BC,EAA8B,CAAC,GAC/BM,IACAT,IACAK,IACA7X,IAA6B,EAmqEmDsP,2BAA4BA,IAExG7uB,cAACsB,EAAuB,CACpBO,4BAA6BA,GAA6BD,kBAAkB,MAO5F,ECn2Ee+gC,OAlBIpjC,GAEfS,cAAA0H,WAAA,CAAA3H,SACEC,cAAC4iC,IAAU,CAAA7iC,SAETP,eAACqjC,SAAM,CAAA9iC,SAAA,CACLP,eAACuM,QAAK,CAACF,OAAK,EAACG,KAAK,IAAGjM,SAAA,CAAC,OAAK,OAC3BC,cAAC+L,QAAK,CAACC,KAAK,SAAQjM,SAACC,cAACiO,GAAK,MAC3BjO,cAAC8L,GAAa,CAACE,KAAK,mBAAmBC,UAAW6e,KAClD9qB,cAAC8L,GAAa,CAACE,KAAK,oBAAoBC,UAAW+oB,KACnDh1B,cAAC8L,GAAa,CAACE,KAAK,oBAAoBC,UAAWsf,KACnD/rB,eAACuM,QAAK,CAACC,KAAK,IAAGjM,SAAA,CAACC,cAACmM,GAAO,IAAI,cCkBvB22B,OA9Bf,WAEE,OACEtjC,eAAAkI,WAAA,CAAA3H,SAAA,CACEP,eAACojC,IAAU,CAAA7iC,SAAA,CACTC,cAAA,OAAKoM,UAAU,mBAAkBrM,SAC/BC,cAAC+iC,GAAM,MAGT/iC,cAAA,OAAKoM,UAAU,gBAAerM,SAC5BC,cAAC2iC,GAAS,SAId3iC,cAACgjC,IAAc,CACbriC,SAAS,gBACTsiC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZ/hC,MAAM,YAId,ECxBegiC,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1gC,MAAKgC,IAAkD,IAAjD,OAAE2+B,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS/+B,EACpE2+B,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,E,cCAFO,IAASC,OAEPlkC,cAAC8E,IAAMq/B,WAAU,CAAApkC,SACfC,cAACgF,GAAY,CAAAjF,SACXC,cAAC8iC,GAAG,QAIRxiB,SAAS+I,eAAe,SAM1Boa,I","file":"static/js/main.c4dcd0fd.chunk.js","sourcesContent":["import React from 'react'\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nfunction UserManual(props) {\r\n\r\n    return (\r\n        <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalUserManual} disableEscapeKeyDown={true}>\r\n            <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Hướng dẫn sử dụng</DialogTitle>\r\n            <IconButton onClick={() => props.setOpenModalUserManual(false)} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Điều dưỡng</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F2 hoặc nút Đăng ký trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Làm mới form thông tin đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F4 hoặc nút Làm mới trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Tìm bệnh cũ</Typography>\r\n                        <Typography>Nhấn phím F8 hoặc nút Bệnh cũ trên màn hình, sau khi nhập thông tin và tìm được bệnh nhân, click đúp thông tin bệnh nhân để form thông tin đăng ký khám nhận dữ liệu</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin bệnh nhân</Typography>\r\n                        <Typography>Trong bảng danh sách đăng ký khám trong ngày, nhấn vào bệnh nhân để mở form sửa thông tin</Typography>\r\n                    </Box>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Bác sĩ</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Khám bệnh</Typography>\r\n                        <Typography>Bước 1: Nhấn chọn bệnh nhân để khám</Typography>\r\n                        <Typography>Bước 2: Nhấn F2 để bắt đầu khám</Typography>\r\n                        <Typography>Bước 3: Nhấn F4 để kết thúc khám</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin hỏi bệnh khi đã kết thúc khám</Typography>\r\n\r\n                    </Box>\r\n                \r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Admin</Typography>\r\n                {/* <Typography variant='subtitle1' sx={{color: 'red'}}>Nếu có sự cố liên hệ zalo: 0987654321 (chỉ phục vụ giờ hành chính)</Typography> */}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default UserManual","export default __webpack_public_path__ + \"static/media/logo.e5a4a234.png\";","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessingBackdrop(props) {\r\n    return (\r\n        <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: props.changeBackground ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.6)' }} open={props.openAlertProcessingBackdrop}>\r\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <CircularProgress color='inherit' />\r\n                <Typography sx={{mt: 1.4,}} variant='subtitle1'>{props.alertTitle}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n\r\nexport default AlertProcessingBackdrop\r\n","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\nconst userLogin = async (userId, password) => {\r\n  return await axios.post(`${backendURL}/api/UserAccount/Login`, { userId, password })\r\n  .then(function (response) {\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n};\r\n\r\nconst getUserLogin = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetUserLogin`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst getGetListDoctor = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetDoctors`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nexport {\r\n    userLogin, \r\n    getUserLogin, getGetListDoctor\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst createMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/Register`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createMedicalBackRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/BackRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createCurrentDoctorExamining = async (userIdDoctor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/SetDoctorExaming/${userIdDoctor}`, \r\n        {}, // Body của request, có thể là {} hoặc object\r\n        {\r\n            headers: {\r\n                \"content-type\": \"text/plain; charset=utf-8\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddPredecessor = async (dataPredecessor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddPredecessor`, dataPredecessor,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddMedicalBook = async (dataMedicalBook) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddMedicalBook`, dataMedicalBook,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getRegistersByDateNow = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetRegistersByDateNow`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveRegister = async (dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListOldDisease = async (patientId, phone, fullName, dayOfBirth, gender) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/SearchPatients?patientId=${patientId}&phone=${phone}&fullName=${fullName}&dayOfBirth=${dayOfBirth}&gender=${gender}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getVaccinationByPatientId = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetVaccinationByPatientId/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getCurrentDoctorExamining = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetDoctorExamining`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalDetailPatient = async (id) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/DetailPatient/${id}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetMediacalBook?medicalBookId=${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdatePredecessor = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdatePredecessor/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdateMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdateMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentDate = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentDate/${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentsNextWeek = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsNextWeek`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getAppointmentsToday = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsToday`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst updateMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/EditRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateMedicalState = async (id, state) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateState?id=${id}&state=${state}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateStateAppointment = async (medicalBookId, appointmentDate, stateAppointment) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateStateAppointment/${medicalBookId}?appointmentDate=${appointmentDate}&stateAppointment=${stateAppointment}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    createMedicalRegister, createMedicalBackRegister, createCurrentDoctorExamining, createAddPredecessor, createAddMedicalBook,\r\n    getRegistersByDateNow, getListMedicalExaminationsGiveRegister, getListOldDisease, getVaccinationByPatientId, getCurrentDoctorExamining, getMedicalDetailPatient, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook, getAppointmentDate, getAppointmentsNextWeek, getAppointmentsToday,\r\n    updateMedicalRegister, updateMedicalState, updateStateAppointment\r\n}","import React, { useState, useEffect } from 'react';\r\n//modal\r\nimport AlertProcessingBackdrop from '../components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//api\r\nimport { getUserLogin } from '../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../Service/MedicalService';\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n\r\n    const userDefault = {\r\n        isAuthenticated: false,\r\n        isLogin: false,\r\n        token: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(userDefault);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [isLogOutClick, setIsLogOutClick] = useState(false);\r\n    const [onConfirm, setOnConfirm] = useState(null);\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const loginContext = (userContextLogin) => {\r\n        setUser({ ...userContextLogin });\r\n        setLoading(false);\r\n    };\r\n\r\n    const triggerAlert = (confirmCallback) => {\r\n        setAlertVisible(true);\r\n        setIsLogOutClick(true);\r\n        setOnConfirm(() => confirmCallback);\r\n    };\r\n\r\n    const confirmAlert = () => {\r\n        if (onConfirm) onConfirm();\r\n        setIsLogOutClick(false);\r\n        resetAlert();\r\n    };\r\n\r\n    const resetAlert = () => {\r\n        setAlertVisible(false);\r\n        setIsLogOutClick(false);\r\n        setOnConfirm(null);\r\n    };\r\n\r\n    const logoutContext = () => {\r\n        setUser({ ...userDefault });\r\n    }\r\n\r\n    const loadingContext = (loading) => {\r\n        setLoading(...loading);\r\n    }\r\n\r\n    const fetchUser = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        const response = await getUserLogin();\r\n        if(response.positionName === 'Doctor'){\r\n            const responseCurrentDoctorExamining = await getCurrentDoctorExamining();\r\n            if(responseCurrentDoctorExamining.status === 200){\r\n                setUser({\r\n                    isAuthenticated: true, \r\n                    isLogin: true,\r\n                    userId: response.userId,\r\n                    userFullName: response.userFullName,\r\n                    positionName: response.positionName,\r\n                    isCurrentDoctorExamining: response.userId === responseCurrentDoctorExamining.data.userIdDoctor ? true : false\r\n                })\r\n            }\r\n            else{\r\n                setUser({\r\n                    isAuthenticated: true, \r\n                    isLogin: true,\r\n                    userId: response.userId,\r\n                    userFullName: response.userFullName,\r\n                    positionName: response.positionName,\r\n                    isCurrentDoctorExamining: false\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            setUser({\r\n                isAuthenticated: true, \r\n                isLogin: true,\r\n                userId: response.userId,\r\n                userFullName: response.userFullName,\r\n                positionName: response.positionName\r\n            }) \r\n        }\r\n        setLoading(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const parseJwt = (token) => {\r\n        try {\r\n          return JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n    };\r\n\r\n    const checkJWTExpire = () => {\r\n        let result = false;\r\n        let getJWT = localStorage.getItem('jwt');\r\n        if(getJWT){\r\n            let decodeJWT = parseJwt(getJWT);\r\n            let currentDate  = new Date();\r\n\r\n            if(decodeJWT.exp * 1000 < currentDate.getTime()) {\r\n                //console.log('Token đã hết hạn hoặc không tồn tại')\r\n                localStorage.removeItem('jwt'); //xóa localStorage\r\n                return result \r\n            }\r\n            else{\r\n                //console.log('token còn hạn');\r\n                result = true;\r\n                return result\r\n            }\r\n        }\r\n        else{\r\n            return result\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const result = checkJWTExpire();\r\n        if(result){\r\n            fetchUser();\r\n        }else{\r\n            //không có token\r\n            setUser(userDefault);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <UserContext.Provider \r\n                value={{ user, loading, loadingContext, loginContext, \r\n                    logoutContext, alertVisible, triggerAlert, confirmAlert, resetAlert, isLogOutClick\r\n                }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop}\r\n                alertTitle={'Đang tải thông tin người dùng'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\nimport UserManual from '../ManageUserManual/UserManual';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nfunction Header(props) {\r\n\r\n  const { user, logoutContext, triggerAlert } = useContext(UserContext);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [openModalUserManual, setOpenModalUserManual] = useState(false);\r\n\r\n  //mui state menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  \r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const actionNursing = [\r\n    { key: 'medicalRegister', maxWidth: '114px', label: 'Đăng ký khám', icon: <LocalHospitalIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/medicalregister\" },\r\n    { key: 'remind-examining', maxWidth: '95px', label: 'Nhắc khám', icon: <LocalPhoneIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/remind-examining\" },\r\n  ]\r\n\r\n  const actionDoctor = [\r\n    { key: 'examining', maxWidth: '100px', label: 'Khám bệnh', icon: <MedicationLiquidIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/doctor-examining\" },\r\n  ]\r\n\r\n  const actionAdmin = [\r\n    { key: 'statistical', maxWidth: '83px', label: 'Thống kê', icon: <BarChartIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/dashboard\" },\r\n  ]\r\n\r\n  const [userAction, setUserAction] = useState([]);\r\n\r\n  const handleChangeURL = (pathname) => {\r\n    const actionIndex = userAction.findIndex(action => action.to === pathname);\r\n    return actionIndex;\r\n  }\r\n\r\n  const value = handleChangeURL(props.location.pathname);\r\n\r\n  const handleLogout = () => {\r\n    if(user.positionName === 'Doctor'){\r\n      triggerAlert(() => {\r\n        localStorage.removeItem('jwt');\r\n        logoutContext();\r\n        setAnchorEl(null);\r\n        history.push('/login');\r\n      });\r\n    }\r\n    \r\n    else{\r\n      localStorage.removeItem('jwt'); //xóa localStorage\r\n      logoutContext();\r\n      setAnchorEl(null);\r\n      history.push('/login');\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(user.positionName === 'Nursing'){        \r\n      setUserAction(actionNursing);\r\n    }\r\n    else if(user.positionName === 'Doctor'){\r\n      setUserAction(actionDoctor);\r\n    }\r\n    else if(user.positionName === 'Admin'){\r\n      setUserAction(actionAdmin);\r\n    }\r\n  }, [user])\r\n  \r\n  if(location.pathname !== '/login'){\r\n    return (\r\n      <>\r\n        <Box sx={{ width: '100%', position: 'fixed', top: 0}} >\r\n          <AppBar>\r\n            <Toolbar sx={{backgroundColor: '#cfe8fc', height: '78px'}}>\r\n              <Link to=\"/\">\r\n                <Avatar src={Logo} sx={{ width: 62, height: 62, mt: 'auto', mb: 'auto', mr: 4 }} />\r\n              </Link>\r\n                {user.isAuthenticated === true || token ? \r\n                  <>\r\n                    <BottomNavigation showLabels value={value}\r\n                      sx={{display: 'flex', justifyContent: 'flex-start', backgroundColor: '#cfe8fc', flexGrow: 1}}>\r\n                      {userAction.map(actionItem => (\r\n                        <BottomNavigationAction\r\n                          key={actionItem.key}\r\n                          label={actionItem.label}\r\n                          icon={actionItem.icon}\r\n                          LinkComponent={actionItem.LinkComponent}\r\n                          to={actionItem.to}\r\n                          sx={{color: '#000', maxWidth: actionItem.maxWidth}}\r\n                        />\r\n                      ))}  \r\n                    </BottomNavigation>\r\n\r\n                    <Button onClick={handleClick} sx={{color: '#000', textTransform: 'none'}}>{user.userFullName}</Button>\r\n                    <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\r\n                      <MenuItem>Đổi mật khẩu</MenuItem>\r\n                      <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                    </Menu>\r\n                    <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                  </>\r\n                  :\r\n                    <>\r\n                      <Box sx={{position: 'absolute', right: 22}}>\r\n                        <NavLink exact to=\"/login\"><Button sx={{textTransform: 'none', color: '#000'}}>Đăng nhập</Button></NavLink>\r\n                        <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                      </Box>\r\n                    </>\r\n                  }            \r\n                </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n  \r\n        <UserManual openModalUserManual={openModalUserManual} setOpenModalUserManual={setOpenModalUserManual}/>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst PrivateRoutes = (props) => {\n  const token = localStorage.getItem('jwt');\n\n  if (token) {\n    return (\n      <>\n        <Route path={props.path} component={props.component}></Route>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <Redirect to='/login'></Redirect>\n      </>\n    )\n  }\n};\nexport default PrivateRoutes;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../ErrorPage/Page500.scss\";\nconst Page404 = () => {\n  let history = useHistory();\n  const handleBack = () => {\n    history.push(\"/\");\n  };\n  return (\n    <div>\n      <div className=\"section\">\n        <h1 className=\"error\">404</h1>\n        <div className=\"page\">\n          Oh snap!!! The page you are looking for is not found.\n        </div>\n        <div>\n          <a className=\"back-home\" onClick={() => handleBack()}>\n            Back to home\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Page404;\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CreateAccount = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleCloseModalRegister = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalRegister(false);\r\n      }\r\n    }\r\n\r\n    const position = [\r\n      {id: '1', positionName: 'Điều dưỡng'},\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n          <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalRegister} onClose={(event, reason) => handleCloseModalRegister(event, reason)} disableEscapeKeyDown={true}  >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n            <IconButton onClick={() => handleCloseModalRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n              <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} />\r\n              <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }}/>\r\n              <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '46ch', mb: 2.5 }} \r\n                InputProps={{ // <-- This is where the toggle button is added.\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <Autocomplete options={position.map((option) => option.positionName)} renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} sx={{ width: '45.95ch', mb: 2.5 }}/>\r\n              <Stack spacing={2} direction=\"column\">\r\n                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleCloseModalRegister()}>Tạo tài khoản</Button>\r\n              </Stack>\r\n            \r\n            </DialogContent>\r\n          </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAccount","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Register from '../ManageRegister/Register';\r\nimport { toast } from 'react-toastify';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//api\r\nimport { userLogin } from '../../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nconst Login = () => {\r\n    const { user, loadingContext, loginContext } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [userAccount, setUserAccount] = useState({userId: '', password: ''})\r\n    const [openModalRegister, setOpenModalRegister] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const onChangeUserName = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                userId: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const onChangeUserPassword = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                password: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if(userAccount.userName === ''){\r\n            toast.error('Bạn chưa nhập tài khoản!')\r\n        }\r\n        else if(userAccount.password === ''){\r\n            toast.error('Bạn chưa nhập mật khẩu!');\r\n        }\r\n        else{\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const response = await userLogin(userAccount.userId, userAccount.password);\r\n            setOpenAlertProcessingBackdrop(false);\r\n            if(response.status !== 200){\r\n                toast.error(response.data);\r\n            }\r\n            else{\r\n                localStorage.setItem('jwt', response.data.tokenDTO.token)\r\n                if(response.data.positionName === 'Doctor'){\r\n                    const responseCurrentDoctorExamining = await getCurrentDoctorExamining();\r\n                    if(responseCurrentDoctorExamining.status === 200){\r\n                        loginContext(\r\n                            {\r\n                                isAuthenticated: true, \r\n                                isLogin: true,\r\n                                userId: response.data.userId,\r\n                                userFullName: response.data.userFullName,\r\n                                positionName: response.data.positionName,\r\n                                isCurrentDoctorExamining: response.data.userId === responseCurrentDoctorExamining.data.userIdDoctor ? true : false\r\n                            }\r\n                        )\r\n                    }\r\n                    else{\r\n                        loginContext(\r\n                            { isAuthenticated: true, isLogin: true, userId: response.data.userId, userFullName: response.data.userFullName, positionName: response.data.positionName, isCurrentDoctorExamining: false }\r\n                        )\r\n                    }\r\n                }\r\n                else{\r\n                    loginContext(\r\n                        { isAuthenticated: true, isLogin: true, userId: response.data.userId, userFullName: response.data.userFullName, positionName: response.data.positionName }\r\n                    )\r\n                }\r\n\r\n                if(response.data.positionName === 'Nursing'){\r\n                    history.push('/medicalregister');\r\n                }\r\n                else if(response.data.positionName === 'Doctor'){\r\n                    history.push('/doctor-examining');\r\n                }\r\n                else{\r\n                    history.push('/');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleLogin();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAuthenticated === true) {\r\n            history.push('/');\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        if (token) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box sx={{ mt: 3, borderRadius: '25px' }} >\r\n                    <Box sx={{ p: 7.6 }}>\r\n                        <Avatar src={Logo} sx={{ width: 120, height: 120, ml: 'auto', mr: 'auto', mb: 2 }} />\r\n                        <Typography sx={{ textAlign: 'center', textTransform: 'uppercase', fontWeight: 'bolder', fontSize: '1.15rem', mb: 2, color: '#4caf50' }} variant=\"h5\">Chương trình khám nhi khoa phát triển</Typography>\r\n                        <Box component=\"form\" autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                            <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                            <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 3 }} \r\n                            onChange={(e) => onChangeUserPassword(e.target.value)} onKeyDown={(e) => handlePressEnter(e)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6.5vh', width: '28ch' }} variant=\"contained\" style={{ margin: 'auto' }} onClick={(e) => handleLogin()}>Đăng nhập</Button>\r\n                                <Typography sx={{textAlign: 'center'}} variant=\"subtitle1\">Chưa có tài khoản? <strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Đăng ký</strong></Typography>\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Register\r\n                openModalRegister={openModalRegister} setOpenModalRegister={setOpenModalRegister}\r\n            />\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang đăng nhập'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useState, useContext, useEffect } from 'react';\r\n//lodash\r\nimport _ from 'lodash';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Popper from '@mui/material/Popper';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//toast\r\nimport { toast } from 'react-toastify';\r\n//api\r\nimport { getGetListDoctor } from '../../Service/UserService';\r\nimport { createCurrentDoctorExamining } from '../../Service/MedicalService';\r\nimport { Box } from '@mui/material';\r\n\r\nfunction SelectedDoctorExamining(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [listDoctor, setListDoctor] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n\r\n    const CustomPopper = (props) => {\r\n        return <Popper {...props} style={{ width: props.anchorEl ? props.anchorEl.clientWidth : undefined }} placement=\"bottom-start\" />;\r\n      };\r\n\r\n    const onSelectDoctor = (e, value) => {\r\n        setSelectedDoctor( { userFullName: value.userFullName, userIdDoctor: value.userId } );\r\n    }\r\n\r\n    const handleCloseSelectedDoctorExaminingModal = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            setSelectedDoctor(null)\r\n            props.setOpenSelectedDoctorExaminingModal(false);\r\n        }\r\n    }\r\n\r\n    const handleCreateCurrentDoctorExamining = async () => {\r\n        if(selectedDoctor === null){\r\n            toast.error('Bạn chưa chọn bác sĩ khám!', {toastId: 'error1'})\r\n        }\r\n        else{\r\n            if(props.currentDoctorExamining.userIdDoctor === selectedDoctor.userId){\r\n                toast.warning('Bác sĩ này đã được chọn khám cho ngày hôm nay', {toastId: 'warning1'})\r\n            }\r\n            else{\r\n                const response = await createCurrentDoctorExamining(selectedDoctor.userIdDoctor);\r\n                toast.success(response.data, {toastId: 'success1'});\r\n                props.setCurrentDoctorExamining(selectedDoctor);\r\n                props.setOpenSelectedDoctorExaminingModal(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleGetGetListDoctor = async () => {\r\n        setLoading(true);\r\n        if(listDoctor.length === 0){\r\n            const response = await getGetListDoctor();\r\n            setListDoctor(response);\r\n            if(props.currentDoctorExamining.userIdDoctor !== ''){\r\n                const indexResponseListDoctor = response.findIndex(listDoctor => listDoctor.userId === props.currentDoctorExamining.userIdDoctor);\r\n                setSelectedDoctor(response[indexResponseListDoctor]);\r\n            }\r\n        }\r\n        else{\r\n            const indexResponseListDoctor = listDoctor.findIndex(listDoctor => listDoctor.userId === props.currentDoctorExamining.userIdDoctor);\r\n            setSelectedDoctor(listDoctor[indexResponseListDoctor]);\r\n        }\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 300)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openSelectedDoctorExaminingModal){   \r\n            handleGetGetListDoctor();   \r\n        }\r\n    }, [props.currentDoctorExamining, props.openSelectedDoctorExaminingModal])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth='xs' open={props.openSelectedDoctorExaminingModal} onClose={(event, reason) => handleCloseSelectedDoctorExaminingModal(event, reason)} disableEscapeKeyDown={true} >\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>{props.currentDoctorExamining ? props.currentDoctorExamining.userIdDoctor !== '' ? 'Thay đổi bác sĩ khám' : 'Chọn bác sĩ khám' : null}</DialogTitle>\r\n                <IconButton onClick={() => props.setOpenSelectedDoctorExaminingModal(false)}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers >\r\n                    {loading ? \r\n                        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                            <CircularProgress />\r\n                        </div>\r\n                    :\r\n                        <>\r\n                            <Box sx={{height: 'auto'}}>\r\n                                <Autocomplete \r\n                                    value={selectedDoctor}\r\n                                    sx={{marginBottom: '10px'}}\r\n                                    options={listDoctor}\r\n                                    PopperComponent={CustomPopper}\r\n                                    getOptionLabel={(option) => option.userFullName}\r\n                                    renderOption={(props, option) => (\r\n                                        <li {...props}>\r\n                                            {option.userFullName}\r\n                                        </li>\r\n                                    )}\r\n                                    onChange={(e, value) => onSelectDoctor(e, value)}\r\n                                    renderInput={(params) => (\r\n                                        <TextField {...params} \r\n                                            label={'Chọn một bác sĩ'} \r\n                                        />\r\n                                    )}\r\n                                    disableClearable // Bỏ icon xóa\r\n                                    popupIcon={null} // Bỏ icon dropdown\r\n                                />\r\n\r\n                                <Stack spacing={2} direction=\"column\">\r\n                                    <Button sx={{ width: '12ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} \r\n                                        onClick={() => handleCreateCurrentDoctorExamining()}>Lưu\r\n                                    </Button>\r\n                                </Stack>\r\n                            </Box>\r\n                        </>\r\n                    }\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectedDoctorExamining","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessing(props) {\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={props.openAlertProcessing} disableEscapeKeyDown={true}>\r\n                <DialogContent>\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <CircularProgress/>\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang xử lý...</Typography>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertProcessing","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getListProvince = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/ListProvince`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListDistrict = async (provinceId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListDistrictByIdProvince/${provinceId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListWard = async (districtId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListWardByIdDistrict/${districtId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getFullAddressByIdWard = async (codeWard) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetFullAddressByIdWard/${codeWard}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getListProvince, getListDistrict, getListWard, getFullAddressByIdWard\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport { Autocomplete } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//lodash\r\nimport _ from 'lodash';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { updateMedicalRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalService';\r\n\r\nfunction ManageInfoPantients(props) {\r\n  const dataPatientInfoDefault = {\r\n    examinationId: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    headCircumference: \"\",\r\n    reason: \"\",\r\n    vaccination: false,\r\n    id: \"\",\r\n    patient: {\r\n      identifier: \"\",\r\n      address: \"\",\r\n      fullName: \"\",\r\n      dayOfBirth: null,\r\n      codeWard: \"\",\r\n      gender: true,\r\n      fullNameMother: \"\",\r\n      phoneMother: \"\",\r\n      fullNameFather: \"\",\r\n      phoneFather: \"\",\r\n      patientId: \"\"\r\n    }\r\n  }\r\n\r\n  const dataPatientInfoErrorDefault = {\r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    examiningSession: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n  } \r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const selectedAutoCompleteDefault = { \r\n    gender: { value: null, openOption: false }, \r\n    examiningSession: {value: null, openOption: false, loading: false},\r\n    province: { value: null, openOption: false }, \r\n    district: { value: null, openOption: false }, \r\n    ward: { value: null, openOption: false },\r\n  }\r\n\r\n  const typingRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  const [dataPatientInfoNotEdit, setDataPatientInfoNotEdit] = useState();\r\n  const [dataPatientInfo, setDataPatientInfo] = useState(dataPatientInfoDefault);\r\n  const [dataPatientInfoError, setDataPatientInfoError] = useState(dataPatientInfoErrorDefault);\r\n    \r\n  const [selectedAutoComplete, setSelectedAutoComplete] = useState(selectedAutoCompleteDefault);\r\n\r\n  const [listExaminingSession, setListExaminingSession] = useState([]);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f',\r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -8],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.gender.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'ExaminingSession'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.examiningSession.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else{\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      //const _dataPatientInfoError = {...dataPatientInfoError};\r\n      // if(fieldName === 'patientId'){\r\n      //   _dataPatientInfoError.patientId.title = '';\r\n      //   _dataPatientInfoError.patientId.openTooltip = false;\r\n      //   setDataPatientInfoError(_dataPatientInfoError);\r\n      // }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.dayOfBirth.title = '';\r\n      //     _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientInfoError.dayOfBirth.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneMother.title = '';\r\n      //     _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneMother.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneFather'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneFather.title = '';\r\n      //     _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneFather.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'Gender'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.gender.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'ExaminingSession'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n      //     prevSelectedAutoComplete.examiningSession.openOption = false\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Province'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.province.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'District'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.district.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Ward'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.ward.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.gender.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'ExaminingSession'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n          prevSelectedAutoComplete.examiningSession.openOption = false\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.district.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.ward.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n  \r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n  \r\n      return (lowercasedFullName.includes(lowercasedInput) || initials.includes(lowercasedInput));\r\n    });\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientInfoError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientInfoError.identifier.openTooltip = true;\r\n          _dataPatientInfoError.identifier.isError = true;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n        else{\r\n          setDataPatientInfo(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientInfoError.identifier.title = '';\r\n          _dataPatientInfoError.identifier.openTooltip = false;\r\n          _dataPatientInfoError.identifier.isError = false;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.identifier.title = '';\r\n      _dataPatientInfoError.identifier.openTooltip = false;\r\n      _dataPatientInfoError.identifier.isError = false;\r\n      _dataPatientInfoError.identifier.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n    \r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.fullName = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n    \r\n      if(dataPatientInfoError.fullName.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullName.title = '';\r\n        _dataPatientInfoError.fullName.openTooltip = false;\r\n        _dataPatientInfoError.fullName.isError = false;\r\n        _dataPatientInfoError.fullName.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = async (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n    \r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n            \r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n    \r\n        if(today < takenValue || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientInfoError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n          _dataPatientInfoError.dayOfBirth.isError = true;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n    \r\n        else{\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.dayOfBirth = formattedDate\r\n            return {...prevDataPatientInfo}\r\n          })\r\n    \r\n          _dataPatientInfoError.dayOfBirth.title = '';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n          _dataPatientInfoError.dayOfBirth.isError = false;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n\r\n          onChangeDOBToGetExaminingSession(formattedDate);\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onChangeDOBToGetExaminingSession = async (formattedDate) => {\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.value = null\r\n      return {...prevSelectedAutoComplete}\r\n    })\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = true\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(formattedDate);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = false\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.patient.gender = value.genderValue\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n    \r\n    if(dataPatientInfoError.gender.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.gender.isError = false;\r\n      _dataPatientInfoError.gender.title = '';\r\n      _dataPatientInfoError.gender.openTooltip = false;\r\n      _dataPatientInfoError.gender.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectExaminingSession = (e, value) => {\r\n    if(focusField === 'examiningSession'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.examinationId = value.id\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.examiningSession.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(dataPatientInfoError.examiningSession.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.examiningSession.isError = false;\r\n      _dataPatientInfoError.examiningSession.title = '';\r\n      _dataPatientInfoError.examiningSession.openTooltip = false;\r\n      _dataPatientInfoError.examiningSession.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.province.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(selectedAutoComplete.district.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.province.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.province.isError = false;\r\n      _dataPatientInfoError.province.title = '';\r\n      _dataPatientInfoError.province.openTooltip = false;\r\n      _dataPatientInfoError.province.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.district.value = value;\r\n      return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.district.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.district.isError = false;\r\n      _dataPatientInfoError.district.title = '';\r\n      _dataPatientInfoError.district.openTooltip = false;\r\n      _dataPatientInfoError.district.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n\r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.codeWard = value.code\r\n      return { ...prevDataPatientInfo }\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.ward.value = value;\r\n        return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(dataPatientInfoError.ward.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.ward.isError = false;\r\n      _dataPatientInfoError.ward.title = '';\r\n      _dataPatientInfoError.ward.openTooltip = false;\r\n      _dataPatientInfoError.ward.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    if(focusField === 'address'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.address = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.address.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.address.isError = false;\r\n        _dataPatientInfoError.address.title = '';\r\n        _dataPatientInfoError.address.openTooltip = false;\r\n        _dataPatientInfoError.address.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    if(focusField === 'fullNameMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameMother = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(focusField === 'phoneMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneMother.openTooltip = true;\r\n          _dataPatientInfoError.phoneMother.isError = true;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n          \r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneMother = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n      \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n      \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 10)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneMother.title = '';\r\n      _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      _dataPatientInfoError.phoneMother.isError = false;\r\n      _dataPatientInfoError.phoneMother.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameFather = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneFather.openTooltip = true;\r\n          _dataPatientInfoError.phoneFather.isError = true;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n\r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneFather = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n                \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n                \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneFather.title = '';\r\n      _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      _dataPatientInfoError.phoneFather.isError = false;\r\n      _dataPatientInfoError.phoneFather.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    if(focusField === 'height'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.height = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.height.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.height.title = '';\r\n        _dataPatientInfoError.height.openTooltip = false;\r\n        _dataPatientInfoError.height.isError = false;\r\n        _dataPatientInfoError.height.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    if(focusField === 'weight'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.weight = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.weight.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.weight.title = '';\r\n        _dataPatientInfoError.weight.openTooltip = false;\r\n        _dataPatientInfoError.weight.isError = false;\r\n        _dataPatientInfoError.weight.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    if(focusField === 'headCircumference'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.headCircumference = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.headCircumference.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.headCircumference.title = '';\r\n        _dataPatientInfoError.headCircumference.openTooltip = false;\r\n        _dataPatientInfoError.headCircumference.isError = false;\r\n        _dataPatientInfoError.headCircumference.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.vaccination = bool\r\n      return {...prevDataPatientInfo}\r\n    })\r\n  }\r\n\r\n  const handleCloseModalInfoPantients = (event, reason) => {\r\n    if(reason && reason === \"backdropClick\"){\r\n      return;\r\n    }\r\n    else{\r\n      setListDistrict(prevListDistrict => {\r\n        prevListDistrict.loading = false\r\n        prevListDistrict.list = []\r\n        return {...prevListDistrict}\r\n      })\r\n      setListWard(prevListWard => {\r\n        prevListWard.loading = false\r\n        prevListWard.list = []\r\n        return {...prevListWard}\r\n      })\r\n      setListExaminingSession([]);\r\n      setSelectedAutoComplete(selectedAutoCompleteDefault);\r\n      setDataPatientInfo(dataPatientInfoDefault);\r\n      setDataPatientInfoNotEdit('');\r\n      setDataPatientInfoError(dataPatientInfoErrorDefault);\r\n      setLoading(true);\r\n      props.setSelectedPantientInfo();\r\n      props.setOpenModalInfoPantients(false);\r\n    }\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const responseListProvince = await getListProvince();\r\n    setListProvince(responseListProvince);\r\n  }\r\n\r\n  const handleApplyPantientDataToField = async () => {\r\n    setOpenAlertProcessing(true);   \r\n      \r\n    const editPropsDataPatientInfo = {...dataPatientInfo};\r\n    editPropsDataPatientInfo.examinationId = props.selectedPantientInfo.examinationId\r\n    editPropsDataPatientInfo.height = props.selectedPantientInfo.height\r\n    editPropsDataPatientInfo.weight = props.selectedPantientInfo.weight\r\n    editPropsDataPatientInfo.headCircumference = props.selectedPantientInfo.headCircumference\r\n    editPropsDataPatientInfo.reason = props.selectedPantientInfo.reason\r\n    editPropsDataPatientInfo.vaccination = props.selectedPantientInfo.vaccination\r\n    editPropsDataPatientInfo.id = props.selectedPantientInfo.id\r\n    editPropsDataPatientInfo.patient.identifier = props.selectedPantientInfo.patient.identifier\r\n    editPropsDataPatientInfo.patient.address = props.selectedPantientInfo.patient.address\r\n    editPropsDataPatientInfo.patient.fullName = props.selectedPantientInfo.patient.fullName\r\n    editPropsDataPatientInfo.patient.dayOfBirth = props.selectedPantientInfo.patient.dayOfBirth\r\n    editPropsDataPatientInfo.patient.codeWard = props.selectedPantientInfo.patient.codeWard\r\n    editPropsDataPatientInfo.patient.gender = props.selectedPantientInfo.patient.gender\r\n    editPropsDataPatientInfo.patient.fullNameMother = props.selectedPantientInfo.patient.fullNameMother\r\n    editPropsDataPatientInfo.patient.phoneMother = props.selectedPantientInfo.patient.phoneMother\r\n    editPropsDataPatientInfo.patient.fullNameFather = props.selectedPantientInfo.patient.fullNameFather\r\n    editPropsDataPatientInfo.patient.phoneFather = props.selectedPantientInfo.patient.phoneFather\r\n    editPropsDataPatientInfo.patient.patientId = props.selectedPantientInfo.patient.patientId\r\n\r\n    setDataPatientInfo(_.cloneDeep(editPropsDataPatientInfo));\r\n    setDataPatientInfoNotEdit(_.cloneDeep(editPropsDataPatientInfo));\r\n        \r\n    const response = await getFullAddressByIdWard(props.selectedPantientInfo.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.list = responseListDistrict;\r\n      return {...prevListDistrict}\r\n    });\r\n    const responseListWard = await getListWard(response.districtCode);\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = responseListWard;\r\n      return {...prevListWard}\r\n    });\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(props.selectedPantientInfo.patient.dayOfBirth);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n     \r\n    const selectedGender = listGender.find(gender => gender.genderValue === props.selectedPantientInfo.patient.gender);\r\n    const indexListExamining = responseListMedicalExaminationsGiveRegister.exams.findIndex(examiningSession => examiningSession.id === props.selectedPantientInfo.examinationId)\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = selectedGender\r\n      prevSelectedAutoComplete.examiningSession.value = responseListMedicalExaminationsGiveRegister.exams[indexListExamining];\r\n      prevSelectedAutoComplete.province.value = listProvince[indexListProvince];\r\n      prevSelectedAutoComplete.district.value = responseListDistrict[indexListDistrict];\r\n      prevSelectedAutoComplete.ward.value = responseListWard[indexListWard];\r\n      return prevSelectedAutoComplete\r\n    })\r\n\r\n    setLoading(false);\r\n    setOpenAlertProcessing(false);   \r\n  }\r\n\r\n  const checkValidate = () => {\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      let isValid = true;\r\n\r\n      if(dataPatientInfoError.identifier.title !== ''){\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.identifier.focus = true;\r\n          setFocusField('identifier');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullName === ''){\r\n        _dataPatientInfoError.fullName.title = 'Bạn chưa nhập họ tên';\r\n        _dataPatientInfoError.fullName.openTooltip = true;\r\n        _dataPatientInfoError.fullName.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullName.focus = true;\r\n          setFocusField('fullName');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(dataPatientInfo.patient.gender === ''){\r\n        _dataPatientInfoError.gender.title = 'Bạn chưa chọn giới tính';\r\n        _dataPatientInfoError.gender.isError = true;\r\n        _dataPatientInfoError.gender.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.gender.focus = true;\r\n          setFocusField('gender');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.dayOfBirth === ''){\r\n        _dataPatientInfoError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfoError.dayOfBirth.title !== ''){\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.examiningSession.value === null){\r\n        _dataPatientInfoError.examiningSession.title = 'Bạn chưa chọn lại kỳ khám';\r\n        _dataPatientInfoError.examiningSession.isError = true;\r\n        _dataPatientInfoError.examiningSession.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.examiningSession.focus = true;\r\n          setFocusField('examiningSession');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.province.value === null){\r\n        _dataPatientInfoError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n        _dataPatientInfoError.province.isError = true;\r\n        _dataPatientInfoError.province.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.province.focus = true;\r\n          setFocusField('province');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.district.value === null){\r\n        _dataPatientInfoError.district.title = 'Bạn chưa chọn quận huyện';\r\n        _dataPatientInfoError.district.isError = true;\r\n        _dataPatientInfoError.district.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.district.focus = true;\r\n          setFocusField('district');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.ward.value === null){\r\n        _dataPatientInfoError.ward.title = 'Bạn chưa chọn phường xã';\r\n        _dataPatientInfoError.ward.isError = true;\r\n        _dataPatientInfoError.ward.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.ward.focus = true;\r\n          setFocusField('ward');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.address === ''){\r\n        _dataPatientInfoError.address.title = 'Bạn chưa nhập địa chỉ';\r\n        _dataPatientInfoError.address.isError = true;\r\n        _dataPatientInfoError.address.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.address.focus = true;\r\n          setFocusField('address');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullNameMother === '' && dataPatientInfo.patient.fullNameFather === ''){\r\n        _dataPatientInfoError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n        _dataPatientInfoError.fullNameMother.isError = true;\r\n        _dataPatientInfoError.fullNameMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullNameMother.focus = true;\r\n          setFocusField('fullNameMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.phoneMother === '' && dataPatientInfo.patient.phoneFather === ''){\r\n        _dataPatientInfoError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        _dataPatientInfoError.phoneMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneMother.title !== ''){\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneFather.title !== ''){\r\n        _dataPatientInfoError.phoneFather.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneFather.focus = true;\r\n          setFocusField('phoneFather');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.height === ''){\r\n        _dataPatientInfoError.height.title = 'Bạn chưa nhập chiều cao';\r\n        _dataPatientInfoError.height.isError = true;\r\n        _dataPatientInfoError.height.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.height.focus = true;\r\n          setFocusField('height');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.weight === ''){\r\n        _dataPatientInfoError.weight.title = 'Bạn chưa nhập cân nặng';\r\n        _dataPatientInfoError.weight.isError = true;\r\n        _dataPatientInfoError.weight.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.weight.focus = true;\r\n          setFocusField('weight');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.headCircumference === ''){\r\n        _dataPatientInfoError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n        _dataPatientInfoError.headCircumference.isError = true;\r\n        _dataPatientInfoError.headCircumference.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.headCircumference.focus = true;\r\n          setFocusField('headCircumference');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      // if(dataPatientInfo.reason === ''){\r\n      //   _dataPatientInfoError.reason.isError = true;\r\n      //   isValid = false;\r\n      // }\r\n\r\n      if(_.isEqual(dataPatientInfo, dataPatientInfoNotEdit) === true){\r\n        toast.warning('Hiện không có gì để cập nhật', {toastId: 'warning1'});\r\n        isValid = false;\r\n      }\r\n\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n      return isValid;\r\n  }\r\n\r\n  const handleUpdateMedicalRegister = async () => {\r\n    if(checkValidate()){\r\n      setOpenAlertProcessing(true);\r\n      const response = await updateMedicalRegister(dataPatientInfo);\r\n      if(response.status === 200){\r\n        toast.success(response.data, {toastId: 'success1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      else{\r\n        toast.error(response.data, {toastId: 'error1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      setOpenAlertProcessing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(listProvince.length === 0){\r\n      handleGetListProvince();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.selectedPantientInfo){\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n      handleApplyPantientDataToField();\r\n    }\r\n  }, [props.selectedPantientInfo])\r\n\r\n  useEffect(() => {\r\n    if(props.openModalInfoPantients && props.isContinueUpdateMedicalRegister && loading === false){\r\n      handleUpdateMedicalRegister();\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n    }\r\n  }, [props.isContinueUpdateMedicalRegister, loading])\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth={true} maxWidth='md' open={props.openModalInfoPantients} onClose={(event, reason) => handleCloseModalInfoPantients(event, reason)} >\r\n        <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center', color: 'blue' }}>Thông tin bệnh nhân</DialogTitle>\r\n        <IconButton onClick={() => handleCloseModalInfoPantients()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n          <CloseIcon fontSize='medium'/>\r\n        </IconButton>\r\n        <DialogContent dividers sx={{pt: 1.5, pb: 1.5}}>\r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', pl: 4.2, pr: 4.2, mb: 0.8}}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.identifier.title}</h6>} open={dataPatientInfoError.identifier.openTooltip} placement='left'> \r\n              <TextField error={true ? dataPatientInfoError.identifier.isError === true : false}\r\n                label=\"Mã định danh\" variant=\"outlined\" \r\n                sx={{width: '18%', '&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                inputProps={{ maxLength: 12 }}\r\n                inputRef={(input) => input && focusField === 'identifier' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.identifier}\r\n                onChange={(e) => onChangeIdentifier(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n                      \r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullName.title}</h6>} open={dataPatientInfoError.fullName.openTooltip} placement='top'\r\n              slotProps={{\r\n                popper: {\r\n                  modifiers: [\r\n                    {\r\n                      name: 'offset',\r\n                      options: { offset: [-10, -6], },\r\n                    },\r\n                  ],\r\n                },\r\n              }} \r\n            > \r\n              <TextField error={true ? dataPatientInfoError.fullName.isError === true : false}\r\n                label=\"Họ tên\" variant=\"outlined\" \r\n                sx={{width: '32%', '&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.fullName}\r\n                onChange={(e) => onChangeFullName(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.gender.title}</h6>} open={dataPatientInfoError.gender.openTooltip} placement='top'>\r\n              <Autocomplete \r\n                sx={{width: '12%', marginTop: '7.5px'}}\r\n                options={listGender} \r\n                getOptionLabel={(option) => option.genderName}\r\n                value={selectedAutoComplete.gender.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.genderName}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectGender(e, value)}\r\n                open={selectedAutoComplete.gender.openOption}\r\n                onFocus={() => handleFocus('Gender')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Giới tính\" \r\n                    inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                    error={true ? dataPatientInfoError.gender.isError === true : false}                     \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <DemoContainer components={['DatePicker']}>  \r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.dayOfBirth.title}</h6>} open={dataPatientInfoError.dayOfBirth.openTooltip}>    \r\n                  <Box sx={{width: 110}}>\r\n                    <DatePicker label=\"Ngày sinh\" \r\n                      format='DD/MM/YYYY' defaultValue={moment(dataPatientInfo.patient.dayOfBirth)}\r\n                      disableFuture={true} disableOpenPicker \r\n                      slotProps={{ \r\n                        textField: \r\n                          { \r\n                            inputRef: dateFieldRef,\r\n                            error: true ? dataPatientInfoError.dayOfBirth.isError === true : false,\r\n                            onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                          }\r\n                        }}\r\n                      onChange={(value) => onChangeDOB(value)}\r\n                    />\r\n                  </Box>\r\n                </Tooltip>\r\n              </DemoContainer>\r\n            </ThemeProvider>\r\n          </LocalizationProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.examiningSession.title}</h6>} open={dataPatientInfoError.examiningSession.openTooltip} placement='right'>\r\n              <Autocomplete \r\n                sx={{width: '18%', mt: '7.5px'}}\r\n                options={listExaminingSession} \r\n                noOptionsText={selectedAutoComplete.examiningSession.loading ? 'Đang tải...' : ''}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.examiningSession.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectExaminingSession(e, value)}\r\n                open={selectedAutoComplete.examiningSession.openOption}\r\n                onFocus={() => handleFocus('ExaminingSession')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'ExaminingSession')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Kỳ khám\" \r\n                    inputRef={(input) => input && focusField === 'examiningSession' && input.focus()}\r\n                    error={true ? dataPatientInfoError.examiningSession.isError === true : false} \r\n                    sx={{'& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot': {pl: '6px', pr: '6px'}}}\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      endAdornment: (\r\n                        <>\r\n                          {selectedAutoComplete.examiningSession.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </>\r\n                      ),\r\n                    }} \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.province.title}</h6>} open={dataPatientInfoError.province.openTooltip} placement='left'>\r\n              <Autocomplete \r\n                sx={{width: '20%', mt: 2}}\r\n                options={listProvince} \r\n                filterOptions={filterOptions}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.province.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectProvine(e, value)}\r\n                open={selectedAutoComplete.province.openOption}\r\n                onFocus={() => handleFocus('Province')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Thành phố\"\r\n                    inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                    error={true ? dataPatientInfoError.province.isError === true : false}  \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.district.title}</h6>} open={dataPatientInfoError.district.openTooltip} placement='top'>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listDistrict.list} \r\n                  noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.district.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectDistrict(e, value)}\r\n                  open={selectedAutoComplete.district.openOption}\r\n                  onFocus={() => handleFocus('District')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Quận/huyện\" \r\n                      inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                      error={true ? dataPatientInfoError.district.isError === true : false} \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.ward.title}</h6>} open={dataPatientInfoError.ward.openTooltip}>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listWard.list}\r\n                  noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.ward.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectWard(e, value)}\r\n                  open={selectedAutoComplete.ward.openOption}\r\n                  onFocus={() => handleFocus('Ward')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Phường/Xã\" \r\n                      inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                      error={true ? dataPatientInfoError.ward.isError === true : false}  \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.address.title}</h6>} open={dataPatientInfoError.address.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.address.isError === true : false}\r\n                  label=\"Địa chỉ\" variant=\"outlined\" \r\n                  sx={{width: '36%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.address}\r\n                  onChange={(e) => onChangeAddress(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullNameMother.title}</h6>} open={dataPatientInfoError.fullNameMother.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.fullNameMother.isError === true : false}\r\n                  label=\"Họ tên mẹ\" variant=\"outlined\" \r\n                  sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.fullNameMother}\r\n                  onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                />    \r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneMother.title}</h6>} open={dataPatientInfoError.phoneMother.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.phoneMother.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneMother}\r\n                  onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <TextField \r\n              label=\"Họ tên cha\" variant=\"outlined\" sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n              defaultValue={dataPatientInfo.patient.fullNameFather}\r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n            />\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneFather.title}</h6>} open={dataPatientInfoError.phoneFather.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.phoneFather.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneFather}\r\n                  onChange={(e) => onChangePhoneFather(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.height.title}</h6>} open={dataPatientInfoError.height.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.height.isError === true : false}\r\n                  label='Chiều cao' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.height}\r\n                  onChange={(e) => onChangeHeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.weight.title}</h6>} open={dataPatientInfoError.weight.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.weight.isError === true : false}\r\n                  label='Cân nặng' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(kg)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.weight}\r\n                  onChange={(e) => onChangeWeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.headCircumference.title}</h6>} open={dataPatientInfoError.headCircumference.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.headCircumference.isError === true : false}\r\n                  label='Vòng đầu' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.headCircumference}\r\n                  onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <FormControlLabel sx={{width: '30%', mt: 2}} control={<Checkbox checked={dataPatientInfo.vaccination}/>} \r\n              label=\"Có tham gia tiêm ngừa\"\r\n              onChange={(e) => onChangeVaccination(e.target.checked)}\r\n            />  \r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{justifyContent: 'center'}}>\r\n          <Button variant=\"contained\" onClick={() => handleUpdateMedicalRegister()}>Sửa (F1)</Button>\r\n          <Button variant=\"contained\" color='secondary' onClick={(event, reason) => handleCloseModalInfoPantients(event, reason)}>Đóng (ESC)</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <AlertProcessing openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageInfoPantients","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//info pantients modal\r\nimport ManageInfoPantients from '../ManageInfoPantients/ManageInfoPantients';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//mui theme\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getRegistersByDateNow, getAppointmentsToday, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction ListPatientsRegister(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n  const [listPantientChipState, setListPantientChipState] = useState(\r\n    [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n    ]\r\n  )\r\n\r\n  const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n  \r\n  const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n  const [listDataPatientsAppointmentsToday, setListDataPatientsAppointmentsToday] = useState([]); \r\n  \r\n  const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n  const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n  const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n  const [selectedPantientInfo, setSelectedPantientInfo] = useState();\r\n  const [openModalInfoPantients, setOpenModalInfoPantients] = useState(false);\r\n  const [isContinueUpdateMedicalRegister, setIsContinueUpdateMedicalRegister] = useState();\r\n\r\n  const renderPatientsStatus = (state) => {\r\n    if(state === 0 || state === 3){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterWaiting' />\r\n        </>\r\n      )\r\n    }\r\n    else if(state === 1){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterExamining' />\r\n        </>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterDone' />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSelectedChip = (chipIndex, chipLabel) => {\r\n    setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n    if(chipIndex === 0){\r\n      const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n      setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n    }\r\n    else if(chipIndex === 1){\r\n      const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n      setListDataPatientsRegisterState(listPantientRegisterDone);\r\n    }\r\n    else if(chipIndex === 2){\r\n      setListDataPatientsRegisterSort(listDataPatientsAppointmentsToday);\r\n      setListDataPatientsRegisterState(listDataPatientsAppointmentsToday);\r\n    }\r\n  };\r\n\r\n  const handleSearchPantient = (value) => {\r\n    const takenValue = value;\r\n    setSearchPatientsQuery(takenValue);\r\n\r\n    if(value === ''){\r\n      setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n    }else{\r\n      setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n    }\r\n  }\r\n\r\n  const searchPatients = (patients, searchTerm) => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return patients.filter(patientObj => {\r\n      const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n      return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n    });\r\n  }\r\n\r\n  const handleSelectedPantientInfo = (patientsRegisterSortItem) => {\r\n    setSelectedPantientInfo(patientsRegisterSortItem);\r\n    setIsContinueUpdateMedicalRegister(true);\r\n    setOpenModalInfoPantients(true);\r\n  }\r\n\r\n  const handleSelectedPantientAppointmentsToday = async (patientsRegisterSortItem) => {\r\n    setOpenAlertProcessingBackdrop(true);\r\n    const responseVaccinationByPatientId = await getVaccinationByPatientId(patientsRegisterSortItem.patient.patientId);\r\n    const dataPantientOldOldDiseaseRegister = {\r\n      examinationId: patientsRegisterSortItem.patient.nextExamId,\r\n      oldDisease: true,\r\n      height: '',\r\n      weight: '',\r\n      headCircumference: '',\r\n      reason: '',\r\n      vaccination: responseVaccinationByPatientId.vaccination,\r\n      medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n      userIdDoctor: '',\r\n      patient: patientsRegisterSortItem.patient\r\n    }\r\n    props.setDataPantientAppointmentsToday(dataPantientOldOldDiseaseRegister)\r\n    setOpenAlertProcessingBackdrop(false);\r\n  }\r\n\r\n  const handleGetRegistersByDateNow = async () => {\r\n    setLoading(true);\r\n\r\n    const response = await getRegistersByDateNow();\r\n    const responseGetAppointmentsToday = await getAppointmentsToday();\r\n\r\n    let updatedList = [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: responseGetAppointmentsToday.length }\r\n    ]\r\n\r\n    let _listDataPatientsAppointmentsToday\r\n    if(responseGetAppointmentsToday.length > 0){\r\n      _listDataPatientsAppointmentsToday = responseGetAppointmentsToday.map((item) => {\r\n        const result = {\r\n          patient : {\r\n            identifier: item.identifier,\r\n            patientId: item.patientId,\r\n            fullName: item.patientFullName,\r\n            gender: item.gender,\r\n            dayOfBirth: item.dateOfBirth,\r\n            fullNameMother: item.fullNameMother,\r\n            phoneMother: item.phoneMother,\r\n            fullNameFather: item.fullNameFather,\r\n            phoneFather: item.phoneFather,\r\n            address: item.address,\r\n            fullAddress: item.fullAddress,\r\n            codeWard: item.codeWard,\r\n            nextExamId: item.nextExamId\r\n          }\r\n        }\r\n        return result;\r\n      })\r\n      setListDataPatientsAppointmentsToday(_listDataPatientsAppointmentsToday);\r\n    }\r\n    else{\r\n      setListDataPatientsAppointmentsToday(responseGetAppointmentsToday)\r\n    }\r\n\r\n    if(response !== 400){\r\n      if(response.list.length !== 0){\r\n        setListDataPatientsRegister(response.list);\r\n        if(activeChip.chipOrder === 0){\r\n          const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám và tái khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n          setListDataPatientsRegisterState(listPantientRegisterDone);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 2){\r\n          setListDataPatientsRegisterSort(_listDataPatientsAppointmentsToday);\r\n          setListDataPatientsRegisterState(_listDataPatientsAppointmentsToday);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n      }\r\n    }\r\n    setListPantientChipState(updatedList);\r\n    props.setComponent1Loading(false);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetRegistersByDateNow();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(openModalInfoPantients){\r\n      const handleKeyDown = (event) => {\r\n        if(event.keyCode === 112){\r\n          event.preventDefault()\r\n          setIsContinueUpdateMedicalRegister(true);\r\n          //nhấn F1 để sửa thông tin đăng ký khám\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [openModalInfoPantients, isContinueUpdateMedicalRegister]);\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true){\r\n      handleGetRegistersByDateNow();\r\n      props.setCompleteMedicalRegister(false);\r\n    }\r\n  }, [props.completeMedicalRegister])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{p: 0}}>\r\n        <Typography variant='h6' sx={{color: 'red', mb: 0, fontWeight: 'bolder', fontSize: '1.16rem', marginBottom: '5px'}}>\r\n          {loading ? \r\n            <Skeleton /> \r\n          : \r\n            <div style={{display: 'flex', height: '30px'}}>\r\n              {props.currentDoctorExamining.userIdDoctor !== '' ?\r\n              <>\r\n                <Typography variant='subbtitle1'>{`Bác sĩ khám hôm nay: ${props.currentDoctorExamining.userFullName}`}</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Sửa'/>\r\n              </>\r\n              :\r\n              <>\r\n                <Typography variant='subbtitle1'>Chưa chọn bác sĩ khám hôm nay</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Thêm'/>\r\n              </>}\r\n            </div>\r\n          }\r\n        </Typography>\r\n\r\n        <div className='container' style={{border: '1px solid #fff', borderRadius: '10px', height: '562px', padding: 0, boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)'}}>\r\n          {loading ? \r\n             <>\r\n              <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                <CircularProgress/>\r\n                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n              </Box>        \r\n            </>\r\n          :\r\n            <>\r\n              <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                  <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                    <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                      onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                  </Badge>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n            \r\n              <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                <TextField sx={{mt: 0.2, mb: 1, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                  variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc SĐT' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    startAdornment: (\r\n                      <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                    ),\r\n                    endAdornment: (\r\n                      <InputAdornment position='end'>\r\n                        {searchPatientsQuery !== '' ? \r\n                          <CloseIcon sx={{cursor: 'pointer'}} \r\n                            titleAccess='Xóa'\r\n                            onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                          /> \r\n                        : \r\n                          null\r\n                        }\r\n                        </InputAdornment>  \r\n                      )\r\n                    }}>\r\n                  </TextField>\r\n              </Box>\r\n\r\n              <TableContainer component={Paper} sx={{ height: '438px', overflowX: 'scroll', borderBottomLeftRadius: '10px', borderBottomRightRadius: '10px' }}>\r\n                <Table stickyHeader sx={{ minWidth: 1200 }}>\r\n                  <TableHead>\r\n                    <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                      {activeChip.chipOrder === 2 ? \r\n                        null\r\n                      :\r\n                        <>\r\n                          <TableCell align=\"left\" sx={{fontSize: '0.95rem', p: '10px'}}>Trạng thái</TableCell>\r\n                          <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                        </>\r\n                      }\r\n                      <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {listDataPatientsRegisterSort.length !== 0 ?\r\n                      <>\r\n                        {listDataPatientsRegisterSort.map((patientsRegisterSortItem, patientsRegisterSortIndex) => (\r\n                          <TableRow hover role=\"checkbox\" key={patientsRegisterSortIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => activeChip.chipOrder === 2 ? handleSelectedPantientAppointmentsToday(patientsRegisterSortItem) : handleSelectedPantientInfo(patientsRegisterSortItem)}>\r\n                            {activeChip.chipOrder === 2 ? \r\n                              null\r\n                            :\r\n                              <>\r\n                                <TableCell align='center' sx={{width: '90px'}}>\r\n                                  <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.state === 0 || patientsRegisterSortItem.state === 3 ? 'Chờ khám' : patientsRegisterSortItem.state === 2 ? 'Đang khám': 'Đã khám'}</Typography>} >\r\n                                    <span>{renderPatientsStatus(patientsRegisterSortItem.state)}</span>\r\n                                  </Tooltip>\r\n                                </TableCell>\r\n                                <TableCell align='left' sx={{width: '20px'}}>{patientsRegisterSortItem.order}</TableCell>\r\n                              </>\r\n                            }\r\n                            <TableCell align='left' sx={{width: '150px'}}>{patientsRegisterSortItem.patient.patientId}</TableCell>\r\n                            <TableCell align='left' sx={{width: '200px'}}>{patientsRegisterSortItem.patient.fullName}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{patientsRegisterSortItem.patient.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{moment(patientsRegisterSortItem.patient.dayOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                            <TableCell align='left' sx={{width: '140px'}}>{patientsRegisterSortItem.patient.phoneMother !== '' ? patientsRegisterSortItem.patient.phoneMother : patientsRegisterSortItem.patient.phoneFather}</TableCell>\r\n                            <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 120}}>\r\n                              <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.patient.fullAddress}</Typography>} >\r\n                                <span>{patientsRegisterSortItem.patient.fullAddress}</span>\r\n                              </Tooltip>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))} \r\n                      </>\r\n                    :\r\n                      null\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </>\r\n          }\r\n        </div>\r\n      </Box>\r\n      \r\n      <AlertProcessingBackdrop openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n      />\r\n\r\n      <ManageInfoPantients \r\n        openModalInfoPantients={openModalInfoPantients} setOpenModalInfoPantients={setOpenModalInfoPantients}\r\n        selectedPantientInfo={selectedPantientInfo} setSelectedPantientInfo={setSelectedPantientInfo}\r\n        isContinueUpdateMedicalRegister={isContinueUpdateMedicalRegister} setIsContinueUpdateMedicalRegister={setIsContinueUpdateMedicalRegister}\r\n        setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListPatientsRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//modal\r\n// import AlertConfirmModal from '../ManageAlertConfirm/AlertConfirm';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//api\r\nimport { createMedicalRegister, createMedicalBackRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalService';\r\n\r\nfunction ExaminingSession(props) {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [listExaminingSession, setListExaminingSession] = useState(null);\r\n\r\n    const onChangeRadioSelect = (value) => {\r\n        props.dataPatientsRegister.examinationId = value;\r\n    }\r\n\r\n    const handleListMedicalExaminationsGiveRegister = async () =>  {\r\n        setOpenAlertProcessing(true);\r\n        const response = await getListMedicalExaminationsGiveRegister(props.dataPatientsRegister.patient.dayOfBirth);\r\n        setListExaminingSession(response);\r\n        props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n        setOpenAlertProcessing(false);\r\n    }\r\n\r\n    const handleMedicalRegister = async () => {\r\n        // //bệnh cũ\r\n        if(props.dataPatientsRegister.oldDisease === true){\r\n            //là bênh mới đã đăng ký nhưng chưa từng khám bao giờ\r\n            if(listExaminingSession.isAppointment === false){\r\n                //setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    toast.success(response.data);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            //có hẹn khám nhưng không nhắc khám hoặc đến trễ ngày hẹn khám\r\n            else{\r\n                //setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    toast.success(response.data);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n        }\r\n        //bệnh mới\r\n        else{\r\n            //setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalRegister(props.dataPatientsRegister);\r\n            setOpenAlertProcessing(false);\r\n\r\n            if(response.status === 200){\r\n                toast.success(response.data);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCloseConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n      };\r\n\r\n    const handleOpenConfirm = () => {\r\n        if(props.dataPatientsRegister.examinationId === ''){\r\n            // setIsConfirmOpen(false);\r\n            toast.error('Bạn chưa chọn kỳ khám', {toastId: 'error1'});\r\n        }\r\n        else{\r\n            //setIsConfirmOpen(true);\r\n            handleMedicalRegister();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.dataPatientsRegister.patient.dayOfBirth !== '' && props.openModalExaminingSession === true){\r\n            handleListMedicalExaminationsGiveRegister();\r\n        }\r\n    }, [props.openModalExaminingSession])\r\n\r\n    useEffect(() => {\r\n        if(props.isContinueSelectedExaminingSession === true){\r\n            //nhấn F2 để hoàn tất đăng ký khám\r\n            handleOpenConfirm();\r\n            props.setIsContinueSelectedExaminingSession(false);\r\n        }\r\n    }, [props.isContinueSelectedExaminingSession])\r\n\r\n    return (\r\n        <>\r\n            {listExaminingSession ? \r\n                <>\r\n                    <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalExaminingSession} disableEscapeKeyDown={true}>\r\n                        <DialogTitle \r\n                            sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'green', textTransform: 'uppercase' }}>\r\n                            {`${props.dataPatientsRegister.patient.fullName}, \r\n                            ${props.dataPatientsRegister.patient.gender === true ? 'Nam' : 'Nữ'}, \r\n                            ${listExaminingSession.monthsOfAge}`}\r\n                        </DialogTitle>\r\n\r\n                        <IconButton onClick={() => [props.setOpenModalExaminingSession(false), props.dataPatientsRegister.examinationId = '']} \r\n                            sx={{position: 'absolute', right: 5, top: 7}}>\r\n                                <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n\r\n                        <DialogContent dividers sx={{pl: '0px', pr: '0px'}}>\r\n                            <Grid container rowSpacing={0}>\r\n                                <Grid item xs={0.5}/>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid black', p: 1, height: '50vh', overflow: 'auto'}}>\r\n                                        <Typography variant='h6' sx={{fontWeight: 'bolder'}}>Lịch sử khám</Typography>\r\n                                        {listExaminingSession.oldExams ?\r\n                                            listExaminingSession.oldExams.map((oldExamItem, oldExamIndex) => (\r\n                                                <Typography key={oldExamIndex} variant='subtitle1'>{oldExamItem.name}</Typography>\r\n                                            ))\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </Box>  \r\n                                </Grid>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid red', p: 1, height: '50vh'}}>\r\n                                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', color: 'red'}}>Chọn kỳ khám</Typography>\r\n                                            {listExaminingSession.exams && listExaminingSession.isAppointment === false ? \r\n                                                <RadioGroup defaultValue={listExaminingSession.exams[0].id} onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                    {listExaminingSession.exams.map((examItem, examIndex) => (\r\n                                                        <FormControlLabel key={examIndex} value={examItem.id} control={<Radio />} label={examItem.name} />\r\n                                                    ))}\r\n                                                </RadioGroup>\r\n                                            :\r\n                                                <RadioGroup defaultValue={listExaminingSession.exams[1].id} onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                    {listExaminingSession.oldExams.map((examItem, examIndex) => (\r\n                                                        <FormControlLabel key={examIndex} value={examItem.id} control={<Radio />} label={examItem.name} disabled={examIndex === 0 ? true : false}/>\r\n                                                    ))}\r\n                                                </RadioGroup>\r\n                                            }\r\n                                            <Button variant='contained' sx={{mt: 0.5}} onClick={() => handleOpenConfirm()}>Tiếp tục (F2)</Button> \r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </>\r\n            :\r\n                null\r\n            }\r\n\r\n            {/* <AlertConfirmModal \r\n                openAlertConfirmModal={isConfirmOpen} onCloseAlertConfirmModal={handleCloseConfirm} \r\n                onConfirmAlertConfirmModal={handleMedicalRegister} \r\n                titleConfirm=\"Đăng ký khám cho bệnh nhân?\"\r\n            /> */}\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExaminingSession","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListOldDisease, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDisease(props) {\r\n\r\n    const dataPatientsForSearchOldDiseaseDefault = {patientId: '', phone: '', fullName: '', dayOfBirth: ''}\r\n    const dataPatientsForSearchOldDiseaseErrorDefault = {\r\n        patientId: { title: '', isError: false, openTooltip: false, focus: false},\r\n        phone: { title: '', isError: false, openTooltip: false, focus: false },\r\n        fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n        dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    }\r\n    \r\n    const [listFoundOldDisease, setListFoundOldDisease] = useState(null);\r\n    const [dataPatientsForSearchOldDisease, setDataPatientsForSearchOldDisease] = useState(dataPatientsForSearchOldDiseaseDefault);\r\n    const [dataPatientsForSearchOldDiseaseError, setDataPatientsForSearchOldDiseaseError] = useState(dataPatientsForSearchOldDiseaseErrorDefault);\r\n    const [focusField, setFocusField] = useState(null);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n\r\n    const dateFieldRef = useRef(null);\r\n    const formRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n    const tooltipTheme = createTheme({\r\n        components: {\r\n          MuiTooltip: {\r\n            defaultProps: {\r\n              placement: 'bottom',\r\n              arrow: true,\r\n              componentsProps: {\r\n                tooltip: {\r\n                  sx: {\r\n                    bgcolor: '#d32f2f',\r\n                  },\r\n                },\r\n                arrow: {\r\n                  sx: {\r\n                    color: '#d32f2f',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n    });\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key !== 'Enter') \r\n        {\r\n            event.preventDefault();\r\n        }\r\n        else if(event.key === 'Enter'){\r\n            handleEnterPress(event);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (value, fieldName) => {\r\n        if(value === '' || value === 'DD/MM/YYYY'){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(fieldName === 'patientId'){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'patientId'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'dayOfBirth'){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'dayOfBirth'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'phone'){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const onChangePatientId = (value) => {\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 8){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.title = 'Mã bệnh nhân phải từ 8 đến 12 số';\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.patientId = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'patientId'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n    }\r\n\r\n    const onChangeFullName = (value) => {\r\n        if(focusField === 'fullName'){\r\n            setFocusField(null);\r\n        }\r\n\r\n        setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n            prevDataPatientsForSearchOldDisease.fullName = value;\r\n            return {...prevDataPatientsForSearchOldDisease}\r\n        })\r\n\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);      \r\n    }\r\n\r\n    const onChangeDayOfBirth = (value) => {\r\n        if(value){            \r\n            const date = value._d;\r\n            const today = new Date();\r\n            const yearsDifference = today.getFullYear() - date.getFullYear();\r\n            const monthsDifference = today.getMonth() - date.getMonth();\r\n            const daysDifference = today.getDate() - date.getDate();\r\n            const age = today.getFullYear() - date.getFullYear();\r\n\r\n            let totalMonths = yearsDifference * 12 + monthsDifference;\r\n            let totalDays = daysDifference;\r\n\r\n            if (daysDifference < 0) {\r\n                totalMonths -= 1;\r\n                totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n            }\r\n\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n\r\n            if(today < date || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = true;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n              }\r\n              else{\r\n                const formattedDate = moment(date).format('YYYY-MM-DD');\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.dayOfBirth = formattedDate;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangePhone = (value) => {\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 10){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.phone = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        }\r\n    }\r\n\r\n    const handleCloseModalOldDisease = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n          else{\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            setListFoundOldDisease(null);\r\n            setSelectedRowIndex(0);\r\n            props.setOpenModalOldDisease(false);\r\n        }\r\n    }\r\n\r\n    const handleResetField = () => {\r\n        formRef.current.reset();\r\n        const inputs = formRef.current.querySelectorAll('input, textarea');\r\n        inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n        setFocusField(null);\r\n    }\r\n\r\n    const validate = () => {\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        let isValid = true;\r\n\r\n        if(dataPatientsForSearchOldDisease.patientId === '' && dataPatientsForSearchOldDisease.fullName === '' && \r\n            dataPatientsForSearchOldDisease.dayOfBirth === '' && dataPatientsForSearchOldDisease.phone === '')\r\n        {\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.fullName.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.patientId.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.focus = true;\r\n                setFocusField('patientId');\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.dayOfBirth.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                if (dateFieldRef.current) {\r\n                    dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n                }\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.phone.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.phone.focus = true;\r\n                setFocusField('phone');\r\n            }\r\n            isValid = false;\r\n        }\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        return isValid;\r\n    }\r\n\r\n    const handleFindOldDisease = async () => {\r\n        if(validate()){\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListOldDisease(dataPatientsForSearchOldDisease.patientId, dataPatientsForSearchOldDisease.phone, dataPatientsForSearchOldDisease.fullName, dataPatientsForSearchOldDisease.dayOfBirth, '');\r\n            setOpenAlertProcessing(false);\r\n            setListFoundOldDisease(response);\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            handleResetField();\r\n            if(response.length > 0){\r\n                tableRef.current.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleFindOldDisease();\r\n        }\r\n    }\r\n\r\n    const handleTableKeyDown = (event) => {\r\n        if (event.key === 'ArrowDown') {\r\n            setSelectedRowIndex((prevIndex) => (Math.min(prevIndex + 1, listFoundOldDisease.length - 1)));\r\n        } else if (event.key === 'ArrowUp') {\r\n            setSelectedRowIndex((prevIndex) => (Math.max(prevIndex - 1, 0)));\r\n        } else if (event.key === 'Enter' && selectedRowIndex !== null){\r\n            handleApplyDataPatientOldDisease(listFoundOldDisease[selectedRowIndex])\r\n        }\r\n    };\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientId: foundOldDiseaseItem.patientId,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseModalOldDisease();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalOldDisease} onClose={(event, reason) => handleCloseModalOldDisease(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Tìm bệnh cũ</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalOldDisease()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{p: '10px 24px'}}>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around'}} component=\"form\" ref={formRef}>\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.patientId.title}</h6>} open={dataPatientsForSearchOldDiseaseError.patientId.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.patientId.isError === true : false}\r\n                                    label=\"Mã BN\" variant=\"outlined\" size='small'\r\n                                    autoFocus\r\n                                    inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                                    inputProps={{ maxLength: 12 }}\r\n                                    onChange={(e) => onChangePatientId(e.target.value)}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'patientId')}\r\n                                    onKeyDown={handleKeyDown} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.fullName.title}</h6>} open={dataPatientsForSearchOldDiseaseError.fullName.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.fullName.isError === true : false}\r\n                                    label=\"Họ tên\" variant=\"outlined\" size='small'\r\n                                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                                    onKeyDown={(e) => handleEnterPress(e)} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                            <ThemeProvider theme={tooltipTheme}>\r\n                                <DemoContainer components={['DatePicker']}>\r\n                                    <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.dayOfBirth.title}</h6>} open={dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip}>    \r\n                                        <Box sx={{width: 222}}>\r\n                                            <DatePicker label=\"Ngày sinh\" format='DD/MM/YYYY' \r\n                                                disableFuture={true} disableOpenPicker \r\n                                                renderInput={(params) => <TextField {...params} size='small' />}\r\n                                                slotProps={{  \r\n                                                    textField: \r\n                                                    { \r\n                                                        inputRef: dateFieldRef,\r\n                                                        error: true ? dataPatientsForSearchOldDiseaseError.dayOfBirth.isError === true : false, \r\n                                                        size: 'small', \r\n                                                        onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                                        onKeyDown: (e) => handleEnterPress(e)\r\n                                                    }, \r\n                                                }}\r\n                                                onChange={(value) => onChangeDayOfBirth(value)}\r\n                                            />\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                </DemoContainer>\r\n                            </ThemeProvider>      \r\n                        </LocalizationProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.phone.title}</h6>} open={dataPatientsForSearchOldDiseaseError.phone.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                                    inputRef={(input) => input && focusField === 'phone' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.phone.isError === true : false}\r\n                                    label=\"Điện thoại cha/mẹ\" variant=\"outlined\" size='small'\r\n                                    inputProps={{ maxLength: 10 }}\r\n                                    onChange={(e) => onChangePhone(e.target.value)}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'phone')}\r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 1.6}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleFindOldDisease()}>Tìm (Enter)</Button>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        {\r\n                            listFoundOldDisease ? \r\n                                listFoundOldDisease.length !== 0 ? \r\n                                <>\r\n                                    <TableContainer component={Paper} sx={{boxShadow: 4, mt: 1.4}} tabIndex={0} onKeyDown={(event) => handleTableKeyDown(event)} ref={tableRef}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listFoundOldDisease ? \r\n                                                    listFoundOldDisease.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                        <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} \r\n                                                            selected={selectedRowIndex === foundOldDiseaseIndex} \r\n                                                            onDoubleClick={() => handleApplyDataPatientOldDisease(foundOldDiseaseItem)}\r\n                                                        >\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.patientId}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                            <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'green'}}>Tìm thấy {listFoundOldDisease.length} bệnh nhân</Typography>\r\n                                </>\r\n                                : \r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'red'}}>Không tìm thấy bệnh nhân</Typography>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Box>  \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDisease","import React, { useState, useEffect, useRef } from 'react';\r\n//ExaminingSessios modal\r\nimport ExaminingSession from '../ManageExaminingSession/ExaminingSession';\r\n//old disease modal\r\nimport OldDisease from '../ManageOldDisease/OldDisease';\r\n// import OldDiseaseForRegister from '../ManageOldDisease/OldDiseaseForRegister';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateField } from '@mui/x-date-pickers/DateField';\r\n//lodash\r\nimport _ from 'lodash';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { createMedicalBackRegister } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction BookMedical(props) {\r\n\r\n  const dataPatientsRegisterDefault = {\r\n    examinationId: '',\r\n    oldDisease: false,\r\n    height: '',\r\n    weight: '',\r\n    headCircumference: '',\r\n    reason: '',\r\n    vaccination: false,\r\n    medicalTypeId: '',\r\n    userIdDoctor: '',\r\n    patient: {\r\n      patientId: '',\r\n      identifier: '',\r\n      address: '',\r\n      fullName: '',\r\n      dayOfBirth: '',\r\n      codeWard: '',\r\n      gender: '',\r\n      fullNameMother: '',\r\n      phoneMother: '',\r\n      fullNameFather: '',\r\n      phoneFather: ''\r\n    }\r\n  }\r\n\r\n  const autocompleteValueDefault = { \r\n    dayOfBirth: null, \r\n    gender: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    province: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    district: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    ward: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    medicalType: {\r\n      value: null,\r\n      openOption: false\r\n    },\r\n    vaccination: false \r\n  }\r\n\r\n  const dataPatientsRegisterErrorDefault = { \r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    patientId: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n    medicalType: { title: '', isError: false, openTooltip: false, focus: false },\r\n    reason: { title: '', isError: false, openTooltip: false, focus: false }\r\n  }\r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const listMedicalType = [\r\n    {medicalTypeOrder: 1, medicalTypeName: 'Khám Nhi khoa phát triển', medicalTypeId: 1},\r\n    {medicalTypeOrder: 2, medicalTypeName: 'Khám trẻ nguy cơ cao', medicalTypeId: 2},\r\n  ]\r\n\r\n  const [openModalExaminingSession, setOpenModalExaminingSession] = useState(false);\r\n  const [isContinueSelectedExaminingSession, setIsContinueSelectedExaminingSession] = useState(false);\r\n\r\n  const [openModalOldDisease, setOpenModalOldDisease] = useState(false);\r\n\r\n  // const [openOldDiseaseRegister, setOpenOldDiseaseRegister] = useState(false);\r\n  // const [listOldDiseaseRegister, setListOldDiseaseRegister] = useState([]);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const [dataPatientsRegister, setDataPatientsRegister] = useState(dataPatientsRegisterDefault);\r\n  const [dataPatientsRegisterError, setDataPatientsRegisterError] = useState(dataPatientsRegisterErrorDefault);\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [autocompleteValue, setAutocompleteValue] = useState(autocompleteValueDefault);\r\n\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const formRef = useRef(null);\r\n  const firstFocusRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n  const typingRef = useRef(null);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f', \r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -7],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n        event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n\r\n    // Xử lý đặc biệt cho \"d\" và \"đ\"\r\n    const replaceSpecialCharacters = str => str.replace(/đ/g, 'd');\r\n\r\n    return options.filter(option => {\r\n        const lowercasedFullName = replaceSpecialCharacters(option.fullName.toLowerCase());\r\n        const initials = replaceSpecialCharacters(option.fullName.split(' ').map(word => word[0]).join('').toLowerCase());\r\n\r\n        const normalizedInput = replaceSpecialCharacters(lowercasedInput);\r\n\r\n        return (\r\n            lowercasedFullName.includes(normalizedInput) ||\r\n            initials.includes(normalizedInput)\r\n        );\r\n    });\r\n  };\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.gender.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.province.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Ward'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'MedicalType'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.medicalType.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n      if(fieldName === 'Identifier'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n        _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.dayOfBirth.title = '';\r\n      //     _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n      //   _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PatientId'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.patientId.title = '';\r\n      //     _dataPatientsRegisterError.patientId.openTooltip = false;\r\n      //     _dataPatientsRegisterError.patientId.isError = false;\r\n      //     _dataPatientsRegisterError.patientId.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.phoneMother.title = '';\r\n      //     _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      //     _dataPatientsRegisterError.phoneMother.isError = false;\r\n      //     _dataPatientsRegisterError.phoneFather.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      if(fieldName === 'PhoneFather'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      else if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientsRegisterError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientsRegisterError.identifier.openTooltip = true;\r\n          _dataPatientsRegisterError.identifier.isError = true;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.identifier.title = '';\r\n      _dataPatientsRegisterError.identifier.openTooltip = false;\r\n      _dataPatientsRegisterError.identifier.isError = false;\r\n      _dataPatientsRegisterError.identifier.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangePatientId = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 8){\r\n          _dataPatientsRegisterError.patientId.title = 'Mã BN phải từ 8 đến 12 số';\r\n          _dataPatientsRegisterError.patientId.openTooltip = true;\r\n          _dataPatientsRegisterError.patientId.isError = true;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          if(focusField === 'patientId'){\r\n            setFocusField(null);\r\n          }\r\n          \r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.patientId = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.patientId.title = '';\r\n          _dataPatientsRegisterError.patientId.openTooltip = false;\r\n          _dataPatientsRegisterError.patientId.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    // else{\r\n    //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n    //   _dataPatientsRegisterError.patientId.title = '';\r\n    //   _dataPatientsRegisterError.patientId.openTooltip = false;\r\n    //   _dataPatientsRegisterError.patientId.isError = false;\r\n    //   _dataPatientsRegisterError.patientId.focus = false;\r\n    //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    // }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullName = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      if(dataPatientsRegisterError.fullName.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullName.title = '';\r\n        _dataPatientsRegisterError.fullName.openTooltip = false;\r\n        _dataPatientsRegisterError.fullName.isError = false;\r\n        _dataPatientsRegisterError.fullName.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n\r\n      // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n      //   handleFindOldDisease();\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n\r\n        if(today < takenValue || age > 2 || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientsRegisterError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n        }\r\n\r\n        else{\r\n          if(focusField === 'dayOfBirth'){\r\n            setFocusField(null);\r\n          }\r\n\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n          prevDataPatientsRegister.patient.dayOfBirth = formattedDate\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.dayOfBirth.title = '';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n          //   handleFindOldDisease();\r\n          // }\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.gender = value.genderValue\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.gender.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.gender.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.gender.title = '';\r\n      _dataPatientsRegisterError.gender.openTooltip = false;\r\n      _dataPatientsRegisterError.gender.isError = false;\r\n      _dataPatientsRegisterError.gender.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n    //   handleFindOldDisease();\r\n    // }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.province.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.district.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.province.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.province.title = '';\r\n      _dataPatientsRegisterError.province.openTooltip = false;\r\n      _dataPatientsRegisterError.province.isError = false;\r\n      _dataPatientsRegisterError.province.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.district.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.district.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.district.title = '';\r\n      _dataPatientsRegisterError.district.openTooltip = false;\r\n      _dataPatientsRegisterError.district.isError = false;\r\n      _dataPatientsRegisterError.district.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n    \r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.codeWard = value.code\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.ward.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.ward.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.ward.title = '';\r\n      _dataPatientsRegisterError.ward.openTooltip = false;\r\n      _dataPatientsRegisterError.ward.isError = false;\r\n      _dataPatientsRegisterError.ward.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeFolk = (value) => {\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'address'){\r\n        setFocusField(null);\r\n      }\r\n      \r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.address = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.address.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.address.title = '';\r\n        _dataPatientsRegisterError.address.openTooltip = false;\r\n        _dataPatientsRegisterError.address.isError = false;\r\n        _dataPatientsRegisterError.address.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'fullNameMother'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameMother = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        if(focusField === 'phoneMother'){\r\n          setFocusField(null);\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneMother.isError = true;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneMother = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneMother.title = '';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneMother.isError = false;\r\n      _dataPatientsRegisterError.phoneMother.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    if(focusField === 'fullNameFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameFather = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (e, value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneFather.isError = true;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneFather = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'phoneFather'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneFather.title = '';\r\n      _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneFather.isError = false;\r\n      _dataPatientsRegisterError.phoneFather.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'height'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.height = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.height.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.height.title = '';\r\n        _dataPatientsRegisterError.height.openTooltip = false;\r\n        _dataPatientsRegisterError.height.isError = false;\r\n        _dataPatientsRegisterError.height.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'weight'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.weight = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.weight.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.weight.title = '';\r\n        _dataPatientsRegisterError.weight.openTooltip = false;\r\n        _dataPatientsRegisterError.weight.isError = false;\r\n        _dataPatientsRegisterError.weight.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'headCircumference'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.headCircumference = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.headCircumference.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.headCircumference.title = '';\r\n        _dataPatientsRegisterError.headCircumference.openTooltip = false;\r\n        _dataPatientsRegisterError.headCircumference.isError = false;\r\n        _dataPatientsRegisterError.headCircumference.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onSelectMedicalType = (e, value) => {\r\n    if(focusField === 'medicalType'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.medicalTypeId = value.medicalTypeId\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.medicalType.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.medicalType.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.medicalType.title = '';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = false;\r\n      _dataPatientsRegisterError.medicalType.isError = false;\r\n      _dataPatientsRegisterError.medicalType.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeReason = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.reason = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      // if(dataPatientsRegisterError.reason.isError){\r\n      //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      //   _dataPatientsRegisterError.reason.isError = false;\r\n      //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.vaccination = bool\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.vaccination = bool\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkValidate = () => {\r\n    let isValid = true;\r\n    const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n\r\n    if(dataPatientsRegisterError.identifier.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.identifier.focus = true;\r\n        setFocusField('identifier');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.patientId === ''){\r\n      _dataPatientsRegisterError.patientId.title = 'Bạn chưa nhập mã bệnh nhân';\r\n      _dataPatientsRegisterError.patientId.openTooltip = true;\r\n      _dataPatientsRegisterError.patientId.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.patientId.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullName === ''){\r\n      _dataPatientsRegisterError.fullName.title = 'Bạn chưa nhập họ tên';\r\n      _dataPatientsRegisterError.fullName.openTooltip = true;\r\n      _dataPatientsRegisterError.fullName.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullName.focus = true;\r\n        setFocusField('fullName');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.dayOfBirth === ''){\r\n      _dataPatientsRegisterError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n      _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n      _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.dayOfBirth.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.gender === ''){\r\n      _dataPatientsRegisterError.gender.title = 'Bạn chưa chọn giới tính';\r\n      _dataPatientsRegisterError.gender.openTooltip = true;\r\n      _dataPatientsRegisterError.gender.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.gender.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n      setFocusField('gender');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.province.value === null){\r\n      _dataPatientsRegisterError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n      _dataPatientsRegisterError.province.openTooltip = true;\r\n      _dataPatientsRegisterError.province.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.province.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('province');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.district.value === null){\r\n      _dataPatientsRegisterError.district.title = 'Bạn chưa chọn quận huyện';\r\n      _dataPatientsRegisterError.district.openTooltip = true;\r\n      _dataPatientsRegisterError.district.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.district.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('district');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.ward.value === null){\r\n      _dataPatientsRegisterError.ward.title = 'Bạn chưa chọn phường xã';\r\n      _dataPatientsRegisterError.ward.openTooltip = true;\r\n      _dataPatientsRegisterError.ward.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.ward.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('ward');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.address === ''){\r\n      _dataPatientsRegisterError.address.title = 'Bạn chưa nhập địa chỉ';\r\n      _dataPatientsRegisterError.address.openTooltip = true;\r\n      _dataPatientsRegisterError.address.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.address.focus = true;\r\n        setFocusField('address');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullNameMother === '' && dataPatientsRegister.patient.fullNameFather === ''){\r\n      _dataPatientsRegisterError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n      _dataPatientsRegisterError.fullNameMother.openTooltip = true;\r\n      _dataPatientsRegisterError.fullNameMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullNameMother.focus = true;\r\n        setFocusField('fullNameMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.phoneMother === '' && dataPatientsRegister.patient.phoneFather === ''){\r\n      _dataPatientsRegisterError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n      _dataPatientsRegisterError.phoneMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneMother.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneFather.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneFather.focus = true;\r\n        setFocusField('phoneFather');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.height === ''){\r\n      _dataPatientsRegisterError.height.title = 'Bạn chưa nhập chiều cao';\r\n      _dataPatientsRegisterError.height.openTooltip = true;\r\n      _dataPatientsRegisterError.height.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.height.focus = true;\r\n        setFocusField('height');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.weight === ''){\r\n      _dataPatientsRegisterError.weight.title = 'Bạn chưa nhập cân nặng';\r\n      _dataPatientsRegisterError.weight.openTooltip = true;\r\n      _dataPatientsRegisterError.weight.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.weight.focus = true;\r\n        setFocusField('weight');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.headCircumference === ''){\r\n      _dataPatientsRegisterError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n      _dataPatientsRegisterError.headCircumference.openTooltip = true;\r\n      _dataPatientsRegisterError.headCircumference.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.headCircumference.focus = true;\r\n        setFocusField('headCircumference');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.medicalTypeId === ''){\r\n      _dataPatientsRegisterError.medicalType.title = 'Bạn chưa chọn loại hình khám';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = true;\r\n      _dataPatientsRegisterError.medicalType.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.medicalType.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('medicalType');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    // if(dataPatientsRegister.reason === ''){\r\n    //   _dataPatientsRegisterError.reason.isError = true;\r\n    //   isValid = false;\r\n    // }\r\n\r\n    if(dataPatientsRegister.userIdDoctor === ''){\r\n      if(props.currentDoctorExamining.userIdDoctor === '') {\r\n        toast.error('Bạn chưa chọn bác sĩ khám cho ngày hôm nay!', {toastId: 'error1'});\r\n        isValid = false;\r\n      }\r\n\r\n    else if(props.currentDoctorExamining.userIdDoctor !== ''){\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.userIdDoctor = props.currentDoctorExamining.userIdDoctor\r\n          return prevDataPatientsRegister\r\n        })\r\n      }\r\n    }\r\n\r\n    setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    return isValid;\r\n  }\r\n\r\n  const handleMedicalRegister = () => {\r\n    setTimeout(() => {\r\n      if(checkValidate()){\r\n        firstFocusRef.current.focus();\r\n        if(props.dataPantientAppointmentsToday){\r\n          handleMedicalBackRegister();\r\n        }\r\n        else{\r\n          setOpenModalExaminingSession(true);\r\n        }\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const handleMedicalBackRegister = async () => {\r\n    setOpenAlertProcessing(true);\r\n    const responseCreateMedicalBackRegister = await createMedicalBackRegister(dataPatientsRegister);\r\n    if(responseCreateMedicalBackRegister.status === 200){\r\n      toast.success(responseCreateMedicalBackRegister.data, {toastId: 'success5'})\r\n      props.setCompleteMedicalRegister(true);\r\n      handleResetField();\r\n    }\r\n    else{\r\n      toast.error(responseCreateMedicalBackRegister.data, {toastId: 'error5'})\r\n    }\r\n    setOpenAlertProcessing(false);\r\n  }\r\n\r\n  const handleApplyPantientOldDiseaseData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = dataPatientsRegister.patient.identifier;\r\n    document.getElementById('patientId').value = dataPatientsRegister.patient.patientId;\r\n    document.getElementById('patientFullName').value = dataPatientsRegister.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(dataPatientsRegister.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(dataPatientsRegister.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === dataPatientsRegister.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === dataPatientsRegister.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = dataPatientsRegister.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = dataPatientsRegister.patient.address;\r\n    document.getElementById('patientFullNameMother').value = dataPatientsRegister.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = dataPatientsRegister.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = dataPatientsRegister.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = dataPatientsRegister.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('height');\r\n  }\r\n\r\n  const handleApplyPantientAppointmentsTodayData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = props.dataPantientAppointmentsToday.patient.identifier;\r\n    document.getElementById('patientId').value = props.dataPantientAppointmentsToday.patient.patientId;\r\n    document.getElementById('patientFullName').value = props.dataPantientAppointmentsToday.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(props.dataPantientAppointmentsToday.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(props.dataPantientAppointmentsToday.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === props.dataPantientAppointmentsToday.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === props.dataPantientAppointmentsToday.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = props.dataPantientAppointmentsToday.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = props.dataPantientAppointmentsToday.patient.address;\r\n    document.getElementById('patientFullNameMother').value = props.dataPantientAppointmentsToday.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = props.dataPantientAppointmentsToday.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = props.dataPantientAppointmentsToday.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = props.dataPantientAppointmentsToday.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('height');\r\n  }\r\n\r\n  const handleResetField = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n\r\n    firstFocusRef.current.focus();\r\n  }\r\n\r\n  const handleOpenModalOldDisease = () => {\r\n    handleResetField();\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const response = await getListProvince();\r\n    if(response !== 400){\r\n      setListProvince(response);\r\n    }\r\n  }\r\n\r\n  // const handleFindOldDisease = async () => {\r\n  //   const response = await getListOldDisease('', '', dataPatientsRegister.patient.fullName, dataPatientsRegister.patient.dayOfBirth, dataPatientsRegister.patient.gender);\r\n  //   if(response.length !== 0){\r\n  //     setListOldDiseaseRegister(response);\r\n  //     setOpenOldDiseaseRegister(true);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleGetListProvince();\r\n    firstFocusRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(dataPatientsRegister.oldDisease === true){\r\n      handleApplyPantientOldDiseaseData();\r\n    }\r\n  }, [dataPatientsRegister.oldDisease])\r\n\r\n  useEffect(() => {\r\n    if(props.dataPantientAppointmentsToday){\r\n      setDataPatientsRegister(props.dataPantientAppointmentsToday);\r\n      handleApplyPantientAppointmentsTodayData();\r\n    }\r\n  }, [props.dataPantientAppointmentsToday]) \r\n\r\n  useEffect(() => {\r\n    if(props.onF2Press){\r\n      if(openModalExaminingSession === true && openModalOldDisease === false){\r\n        setIsContinueSelectedExaminingSession(true);\r\n        props.setOnF2Press(false);\r\n      }\r\n      else{\r\n        handleMedicalRegister();\r\n        props.setOnF2Press(false);\r\n      }\r\n    }\r\n    \r\n    if(props.onF4Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF4Press(false);\r\n      }\r\n      else{\r\n        handleResetField();\r\n        props.setOnF4Press(false);\r\n      }\r\n    }\r\n\r\n    if(props.onF8Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF8Press(false);\r\n      }\r\n      else{\r\n        handleOpenModalOldDisease();\r\n        props.setOnF8Press(false);\r\n      }\r\n    }\r\n  }, [props.onF2Press, props.onF4Press, props.onF8Press])\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{'&.MuiContainer-maxWidthLg': {pr: 0}}}>\r\n        <Box sx={{ minHeight: '36.4rem', borderRadius: '20px', boxShadow: 5, pt: 1.2, pb: 1.2, pl: 2.4, pr: 2.4, mt: 1.5}}>\r\n          <Typography variant='h6' sx={{textAlign: 'center', fontWeight: 'bolder', color: 'blue'}}>Thông tin đăng ký khám</Typography> \r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}} component=\"form\" ref={formRef}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.identifier.title}</h6>} open={dataPatientsRegisterError.identifier.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.identifier.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã định danh\" variant=\"outlined\" id='patientIdentifier'\r\n                  inputRef={focusField === 'identifier' ? (input) => input && focusField === 'identifier' && input.focus() : firstFocusRef}\r\n                  onChange={(e) => onChangeIdentifier(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Identifier')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.patientId.title}</h6>} open={dataPatientsRegisterError.patientId.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.patientId.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã BN\" variant=\"outlined\" id='patientId'\r\n                  inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                  onChange={(e) => onChangePatientId(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'PatientId')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullName.title}</h6>} open={dataPatientsRegisterError.fullName.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }} \r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [37, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              > \r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullName.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên\" variant=\"outlined\" id=\"patientFullName\"                   \r\n                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  /> \r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n      \r\n            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n              <ThemeProvider theme={tooltipTheme}>\r\n                <DemoContainer components={['DatePicker']} >\r\n                  <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.dayOfBirth.title}</h6>} open={dataPatientsRegisterError.dayOfBirth.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>    \r\n                    <Box sx={{width: 142, mt: '12px !important'}}>\r\n                      <div style={{width: '100%', }}>\r\n                        <DateField label=\"Ngày sinh\" \r\n                          format='DD/MM/YYYY' value={autocompleteValue.dayOfBirth}\r\n                          disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                          slotProps={{ \r\n                            textField: \r\n                              { \r\n                                inputRef: dateFieldRef,\r\n                                error: true ? dataPatientsRegisterError.dayOfBirth.isError === true : false,\r\n                                onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                sx: {'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } },\r\n                              }\r\n                          }}\r\n                          onChange={(value) => onChangeDOB(value)}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  </Tooltip>\r\n                </DemoContainer>\r\n              </ThemeProvider>      \r\n            </LocalizationProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.gender.title}</h6>} open={dataPatientsRegisterError.gender.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '12%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientGender' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.gender.value}\r\n                    options={listGender} \r\n                    getOptionLabel={(option) => option.genderName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.genderName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectGender(e, value)}\r\n                    open={autocompleteValue.gender.openOption}\r\n                    onFocus={() => handleFocus('Gender')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Giới tính\" \r\n                        inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.gender.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n             \r\n            {/* <TextField label=\"Dân tộc\" variant=\"outlined\" sx={{width: '12%', '&.MuiTextField-root' : {marginTop: '15px'}}}/> */}\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.province.title}</h6>} open={dataPatientsRegisterError.province.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '19.2%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.province.value}\r\n                    options={listProvince} \r\n                    noOptionsText={'Đang tải...'}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectProvine(e, value)}\r\n                    open={autocompleteValue.province.openOption}\r\n                    onFocus={() => handleFocus('Province')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Thành phố\" \r\n                        inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.province.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.district.title}</h6>} open={dataPatientsRegisterError.district.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '24%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.district.value}\r\n                    options={listDistrict.list} \r\n                    noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                    open={autocompleteValue.district.openOption}\r\n                    onFocus={() => handleFocus('District')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.fullName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectDistrict(e, value)}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Quận/Huyện\" \r\n                        inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.district.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <>\r\n                              {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <>\r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.ward.title}</h6>} open={dataPatientsRegisterError.ward.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                  <div style={{width: '23.5%', marginTop: '20px'}}>\r\n                    <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                      value={autocompleteValue.ward.value}\r\n                      options={listWard.list} \r\n                      noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                      filterOptions={filterOptions}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderOption={(props, option) => (\r\n                        <li {...props}>\r\n                          {option.fullName}\r\n                        </li>\r\n                      )}\r\n                      onChange={(e, value) => onSelectWard(e, value)}\r\n                      open={autocompleteValue.ward.openOption}\r\n                      onFocus={() => handleFocus('Ward')}\r\n                      onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} \r\n                          label=\"Phường/Xã\" \r\n                          inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                          error={true ? dataPatientsRegisterError.ward.isError === true : false} \r\n                          sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                              <>\r\n                                {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                              </>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      disableClearable // Bỏ icon xóa\r\n                      popupIcon={null} // Bỏ icon dropdown\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.address.title}</h6>} open={dataPatientsRegisterError.address.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.address.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Địa chỉ\" variant=\"outlined\" id='patientAddress'\r\n                    inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                    onChange={(e) => onChangeAddress(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullNameMother.title}</h6>} open={dataPatientsRegisterError.fullNameMother.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullNameMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên mẹ\" variant=\"outlined\" id='patientFullNameMother'\r\n                    inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                    autoFocus={dataPatientsRegisterError.fullNameMother.focus}\r\n                    onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneMother.title}</h6>} open={dataPatientsRegisterError.phoneMother.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.phoneMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Điện thoại\" variant=\"outlined\" id='patientPhoneMother' \r\n                    inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                    onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n\r\n            <TextField label=\"Họ tên cha\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n              variant=\"outlined\" id='patientFullNameFather' \r\n              sx={{width: '30.4%', '&.MuiTextField-root' : {marginTop: '20px'}}} \r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n              inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n              InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n            />\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneFather.title}</h6>} open={dataPatientsRegisterError.phoneFather.openTooltip}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField label=\"Điện thoại\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                    variant=\"outlined\" id='patientPhoneFather'\r\n                    onChange={(e) => onChangePhoneFather(e, e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneFather')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.height.title}</h6>} open={dataPatientsRegisterError.height.openTooltip} placement='left' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Chiều cao bé\" variant=\"outlined\" id='patientHeight' error={true ? dataPatientsRegisterError.height.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.weight.title}</h6>} open={dataPatientsRegisterError.weight.openTooltip} PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Cân nặng bé\" variant=\"outlined\" id='patientWeight' error={true ? dataPatientsRegisterError.weight.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(kg)</InputAdornment>}}\r\n                    onChange={(e) => onChangeWeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>  \r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.headCircumference.title}</h6>} open={dataPatientsRegisterError.headCircumference.openTooltip} placement='top-start' PopperProps={{sx: { zIndex: 2 } }}\r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [70, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              >\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Vòng đầu bé\" variant=\"outlined\" id='patientHeadCircumference' error={true ? dataPatientsRegisterError.headCircumference.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.medicalType.title}</h6>} open={dataPatientsRegisterError.medicalType.openTooltip} placement='bottom' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30.5%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientMedicalType' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.medicalType.value}\r\n                    options={listMedicalType} \r\n                    getOptionLabel={(option) => option.medicalTypeName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.medicalTypeName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectMedicalType(e, value)}\r\n                    open={autocompleteValue.medicalType.openOption}\r\n                    onFocus={() => handleFocus('MedicalType')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'MedicalType')}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Loại hình khám\" \r\n                        inputRef={(input) => input && focusField === 'medicalType' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.medicalType.isError === true : false} \r\n                        sx={{\r\n                          '& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } ,\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.Mui-disabled.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'},\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'}\r\n                        }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.reason.title}</h6>} open={dataPatientsRegisterError.reason.openTooltip} >\r\n                <div style={{width: '100%' }}>\r\n                  <TextField fullWidth label=\"Lý do khám\" multiline rows={3} variant=\"outlined\" id='patientReason' error={true ? dataPatientsRegisterError.reason.isError === true : false}\r\n                    sx={{'&.MuiTextField-root' : {marginTop: '20px'}}} \r\n                    onChange={(e) => onChangeReason(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <FormControlLabel control={<Checkbox checked={autocompleteValue.vaccination}/>} sx={{width: '100%'}}\r\n              label=\"Bệnh nhân có tham gia tiêm ngừa\" onChange={(e) => onChangeVaccination(e.target.checked)}/>  \r\n\r\n            <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n              <Button variant=\"contained\" color=\"primary\" sx={{mr: 1}} onClick={() => handleMedicalRegister()}>Đăng ký (f2)</Button>\r\n              <Button variant=\"contained\" color=\"warning\" onClick={() => handleResetField()}>Làm mới (f4)</Button>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => handleOpenModalOldDisease()}>Bệnh cũ (f8)</Button>\r\n            </Box>\r\n          </Box>         \r\n        </Box>\r\n      </Container>\r\n\r\n      <ExaminingSession \r\n        openModalExaminingSession={openModalExaminingSession} setOpenModalExaminingSession={setOpenModalExaminingSession} \r\n        handleResetField={handleResetField} setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        isContinueSelectedExaminingSession={isContinueSelectedExaminingSession} setIsContinueSelectedExaminingSession={setIsContinueSelectedExaminingSession}\r\n        dataPatientsRegister={dataPatientsRegister} \r\n      />\r\n\r\n      <OldDisease \r\n        openModalOldDisease={openModalOldDisease} setOpenModalOldDisease={setOpenModalOldDisease}\r\n        dataPatientsRegister={dataPatientsRegister} setDataPatientsRegister={setDataPatientsRegister}\r\n      />\r\n\r\n      {/* <OldDiseaseForRegister\r\n        openOldDiseaseRegister={openOldDiseaseRegister} setOpenOldDiseaseRegister={setOpenOldDiseaseRegister}\r\n        setDataPatientsRegister={setDataPatientsRegister}\r\n        listOldDiseaseRegister={listOldDiseaseRegister} setListOldDiseaseRegister={setListOldDiseaseRegister}\r\n      /> */}\r\n\r\n      <AlertProcessing\r\n        openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookMedical","import React, { useState, useContext, useEffect } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//modal\r\nimport SelectedDoctorExamining from '../ManageSelectedDoctorExamining/SelectedDoctorExamining';\r\n//components\r\nimport ListPatientsRegister from './ListPatientsRegister';\r\nimport BookMedical from './BookMedical';\r\n//api\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nfunction MainMedicalRegister() {\r\n\r\n  const [component1Loading, setComponent1Loading] = useState(true);\r\n\r\n  const currentDoctorExaminingDefault = {userFullName: '', userIdDoctor: ''};\r\n\r\n  const [completeMedicalRegister, setCompleteMedicalRegister] = useState(false);\r\n  const [dataPantientAppointmentsToday, setDataPantientAppointmentsToday] = useState();\r\n\r\n  const [handleResetField, setHandleResetField] = useState(false); //F2\r\n  const [handleOpenModalExaminingSession, setHandleOpenModalExaminingSession] = useState(false); //F4\r\n  const [handleOpenModalOldDisease, setHandleOpenModalOldDisease] = useState(false); //F8\r\n\r\n  const [currentDoctorExamining, setCurrentDoctorExamining] = useState();\r\n  const [openSelectedDoctorExaminingModal, setOpenSelectedDoctorExaminingModal] = useState(false);\r\n\r\n  const handleF2Press = () => {\r\n    setHandleOpenModalExaminingSession(true);\r\n  }\r\n\r\n  const handleF4Press = () => {\r\n    setHandleResetField(true);\r\n  }\r\n\r\n  const handleF8Press = () => {\r\n    setHandleOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetCurrentDoctorExamining = async () => {\r\n    const response = await getCurrentDoctorExamining();\r\n    if(response.status === 200){\r\n      setCurrentDoctorExamining( {userIdDoctor: response.data.userIdDoctor, userFullName: response.data.userFullName} );\r\n    }\r\n    else{\r\n      setCurrentDoctorExamining(currentDoctorExaminingDefault);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetCurrentDoctorExamining();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if(event.keyCode === 113){\r\n        event.preventDefault()\r\n        //nhấn F2 để đăng ký khám\r\n        handleF2Press();\r\n      }\r\n      else if(event.keyCode === 115){\r\n        event.preventDefault()\r\n        //nhấn F4 để reset các input field \r\n        handleF4Press();\r\n      }\r\n      else if(event.keyCode === 119){\r\n        event.preventDefault()\r\n        //nhấn F8 để tìm bệnh cũ\r\n        handleF8Press();\r\n      }\r\n      else{\r\n\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 11}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                <Grid container spacing={0} sx={{marginLeft: 0}}>\r\n                  {currentDoctorExamining ? \r\n                    <>\r\n                      <Grid item xs={5}>  \r\n                        <ListPatientsRegister \r\n                          completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                          currentDoctorExamining={currentDoctorExamining}\r\n                          setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n                          component1Loading={component1Loading} setComponent1Loading={setComponent1Loading}\r\n                          dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                        />\r\n                      </Grid>\r\n            \r\n                      <Grid item xs={7} >\r\n                        {component1Loading ?\r\n                          <div style={{marginTop: '20px', marginLeft: '18px'}}>\r\n                            <Skeleton variant='rectangular' width=\"100%\" height={576} />\r\n                          </div>\r\n                          :\r\n                          <BookMedical \r\n                            onF2Press={handleOpenModalExaminingSession} setOnF2Press={setHandleOpenModalExaminingSession}\r\n                            onF4Press={handleResetField} setOnF4Press={setHandleResetField}\r\n                            onF8Press={handleOpenModalOldDisease} setOnF8Press={setHandleOpenModalOldDisease}\r\n                            completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                            currentDoctorExamining={currentDoctorExamining}\r\n                            dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                          />\r\n                        }\r\n                      </Grid>\r\n                    </>\r\n                  :\r\n                      null\r\n                  }\r\n                </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n         <SelectedDoctorExamining \r\n          openSelectedDoctorExaminingModal={openSelectedDoctorExaminingModal} setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n          currentDoctorExamining={currentDoctorExamining} setCurrentDoctorExamining={setCurrentDoctorExamining}\r\n         />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainMedicalRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getAppointmentsNextWeek, updateStateAppointment } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainAppointmentExamining() {\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chưa nhắc hẹn khám'});\r\n    const [listPantientAppointmentChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [listAppointment, setListAppointment] = useState();\r\n    \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n    const [listDataPatientsAppointmentPaginate, setListDataPatientsAppointmentPaginate] = useState([]);\r\n    const [listDataPatientsAppointmentState, setListDataPatientsAppointmentState] = useState();\r\n    const [listDataPatientsAppointmentSort, setListDataPatientsAppointmentSort] = useState([]);\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [pageCount, setPageCount] = useState();\r\n\r\n    const handlePaginate = (data) => {\r\n        const itemsPerPage = 5;\r\n        if(data){\r\n            const calculatedPageCount = Math.ceil(data.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = data.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n        else{\r\n            const calculatedPageCount = Math.ceil(listDataPatientsAppointmentPaginate.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = listDataPatientsAppointmentPaginate.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    }\r\n\r\n    const handleGetAppointmentsNextWeek = async () => {\r\n        setLoading(true);\r\n        const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n        setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n        const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n        const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n        const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n        const updateListPantientAppointmentChipState = [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n        ]\r\n\r\n        setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n        if(activeChip.chipOrder === 0){\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n            handlePaginate(_listAppointmentNotRemind)\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n            handlePaginate(_listAppointmentAcceptReExamining)\r\n        }\r\n        else{\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n            handlePaginate(_listAppointmentRejectReExamining)\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n            const _listAppointmentNotRemind = listAppointment.filter(item => item.stateAppointment === 0);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const _listAppointmentAcceptReExamining = listAppointment.filter(item => item.stateAppointment === 1);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining);\r\n            handlePaginate(_listAppointmentAcceptReExamining);\r\n        }\r\n        else{\r\n            const _listAppointmentRejectReExamining = listAppointment.filter(item => item.stateAppointment === 2);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining);\r\n            handlePaginate(_listAppointmentRejectReExamining);\r\n        }\r\n    }\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsAppointmentSort(listDataPatientsAppointmentState);\r\n        }else{\r\n          setListDataPatientsAppointmentSort(searchPatients(listDataPatientsAppointmentState, takenValue));\r\n        }\r\n    }\r\n\r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, patientFullName, phoneMother, phoneFather } = patientObj;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || patientFullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const handleAcceptReExamining = async (medicalBookId, appointmentDate) => {\r\n        setLoading(true);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(medicalBookId, appointmentDate, 1);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            \r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n            else if(activeChip.chipOrder === 1){\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleRejectReExamining = async (medicalBookId, appointmentDate) => {\r\n        setLoading(true);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(medicalBookId, appointmentDate, 2);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n            else if(activeChip.chipOrder === 1){\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetAppointmentsNextWeek();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handlePaginate();\r\n    }, [page]);\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 11, p: 0 }}>\r\n            <TableContainer component={Paper} sx={{boxShadow: 3, height: '38rem', position: 'relative'}}>\r\n                {loading ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>        \r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Box>\r\n                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                {listPantientAppointmentChipState.map((pantientAppointmentChipStateItem, pantientAppointmentChipStateIndex) => (\r\n                                    <Badge badgeContent={pantientAppointmentChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientAppointmentChipStateIndex}`}> \r\n                                        <Chip label={pantientAppointmentChipStateItem.chipLabel} color={pantientAppointmentChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                            onClick={() => handleSelectedChip(pantientAppointmentChipStateIndex, pantientAppointmentChipStateItem.chipLabel)} />  \r\n                                    </Badge>\r\n                                ))}\r\n                            </Stack>\r\n\r\n                            <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.15rem', fontWeight: 'bolder'}}>Danh sách {activeChip.chipLabel} trong 7 ngày tới</Typography>\r\n\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', mb: 1}}>\r\n                                <TextField sx={{width: 500, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc Số điện thoại' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                        startAdornment: (\r\n                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                        ),\r\n                                        endAdornment: (\r\n                                            <InputAdornment position='end'>\r\n                                                {searchPatientsQuery !== '' ? \r\n                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsAppointmentSort(listDataPatientsAppointmentState)]}\r\n                                                    /> \r\n                                                : \r\n                                                    null\r\n                                                }\r\n                                            </InputAdornment>  \r\n                                        )\r\n                                    }}>\r\n                                </TextField>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Table stickyHeader >\r\n                            <TableHead>\r\n                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên Cha/Mẹ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Kỳ khám cũ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Kỳ khám tiếp theo</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày hẹn khám</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Thao tác</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {listDataPatientsAppointmentSort.map((dataPantientAppointmentItem, dataPantientAppointmentIndex) => (\r\n                                    <TableRow hover role=\"checkbox\" key={dataPantientAppointmentIndex} sx={{':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1) !important'}}}>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.patientId}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.patientFullName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{moment(dataPantientAppointmentItem.dateOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                        <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 240, fontSize: '0.9rem'}}>\r\n                                            <Tooltip title={<Typography variant='subtitle2'>{dataPantientAppointmentItem.fullAddress}</Typography>} >\r\n                                                <span>{dataPantientAppointmentItem.fullAddress}</span>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.fullNameFather !== '' ? dataPantientAppointmentItem.fullNameFather : dataPantientAppointmentItem.fullNameMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.phoneFather !== '' ? dataPantientAppointmentItem.phoneFather : dataPantientAppointmentItem.phoneMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.examNameOld}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.nextExamName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{moment(dataPantientAppointmentItem.appointmentDate).format(\"DD/MM/YYYY\")}</TableCell>                                                                                                \r\n                                        <TableCell align={dataPantientAppointmentItem.stateAppointment === 0 ? 'left' : 'center'} sx={{width: 'auto', fontSize: '0.9rem'}}>\r\n                                            {dataPantientAppointmentItem.stateAppointment === 0 ?\r\n                                                <>   \r\n                                                    <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId, dataPantientAppointmentItem.appointmentDate)}/>\r\n                                                    <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId, dataPantientAppointmentItem.appointmentDate)}/>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {dataPantientAppointmentItem.stateAppointment === 1 ?\r\n                                                        <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId, dataPantientAppointmentItem.appointmentDate)}/>\r\n                                                    :\r\n                                                        <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId, dataPantientAppointmentItem.appointmentDate)}/>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n\r\n                        {listDataPatientsAppointmentSort.length !== 0 ?\r\n                                <Box sx={{display: 'flex', justifyContent: 'center', position: 'absolute', bottom: 4, width: '100%'}}>\r\n                                    <Pagination count={pageCount} page={page} onChange={handlePageChange} color=\"primary\" />\r\n                                </Box>\r\n                            :\r\n                                null\r\n                        }\r\n                    </>\r\n                }\r\n            </TableContainer>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainAppointmentExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport _ from 'lodash'\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DialogActions } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//other\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n//css\r\nimport './SCSS/CompleteExamining.scss';\r\n//api\r\nimport { createAddPredecessor, createAddMedicalBook, getAppointmentDate } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CompleteExamining(props) {\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState();\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n\r\n    const typingRef = useRef(null);\r\n    const textareaRef = useRef(null);\r\n    const dateFieldRef = useRef(null);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleCloseModalCompleteExamining = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n          return;\r\n        }\r\n        else{\r\n            setMainDataExaminingForConclusion();\r\n            props.setOpenModalCompleteExamining(false);\r\n        }\r\n      }\r\n\r\n    const onChangeExaminingConclusion = (value) => {\r\n        typingRef.current = setTimeout(() => {\r\n            setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                prevMainDataExaminingForConclusion.conclusion = value;\r\n                return {...prevMainDataExaminingForConclusion}\r\n            })\r\n        }, 300)\r\n    }\r\n\r\n    const onChangeAppointmentDate = (value) => {\r\n        if(value){\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n            typingRef.current = setTimeout(() => {\r\n                const takenValue = value._d;\r\n                const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n                if(formattedDate !== 'Invalid date'){\r\n                    setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                        prevMainDataExaminingForConclusion.appointmentDate = formattedDate;\r\n                        return {...prevMainDataExaminingForConclusion}\r\n                    })\r\n                }\r\n            }, 200)   \r\n        }\r\n    }\r\n\r\n    const handleSetDataCompleteExamining = async () => {\r\n        const editDataExaminingForConclusion = _.clone(props.dataExaminingForConclusion);\r\n        \r\n        editDataExaminingForConclusion.categories = editDataExaminingForConclusion.categories.map(categoriesItem => ({\r\n            ...categoriesItem,\r\n            // Lọc các categoryContents để giữ lại những phần tử có categoryContentQuestions không rỗng\r\n            categoryContents: categoriesItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length > 0)\r\n\r\n            // Loại bỏ các categories nếu tất cả categoryContents của nó đều bị loại bỏ\r\n        })).filter(categoriesItem => categoriesItem.categoryContents.length > 0);\r\n\r\n        if(editDataExaminingForConclusion.categories.length !== 0){\r\n            setOpenAlertProcessing(true);\r\n            const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n            if(responseAppointmentDate.status === 200){\r\n                editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n                editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n                editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n                if(editDataExaminingForConclusion.isVaccination){\r\n                    editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n                    editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n                    editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n                }\r\n\r\n            }else{\r\n                toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n            }\r\n \r\n            setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n            setOpenAlertProcessing(false);\r\n            if(props.dataExaminingForConclusion.conclusion !== ''){\r\n                const length = textareaRef.current.value.length;\r\n                textareaRef.current.setSelectionRange(length, length);\r\n                textareaRef.current.focus();\r\n            }\r\n            else{\r\n                textareaRef.current.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleAddMedicalBook = async () => {\r\n        if(checkValidate()){\r\n            setOpenAlertProcessing(true);\r\n    \r\n                if(mainDataExaminingForConclusion.categories.some(categoriesItem => categoriesItem.isPredecessor === true)){\r\n                    const categoryPres = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isPredecessor === true)\r\n                    const dataPredecessor = { patientId: mainDataExaminingForConclusion.patientId, categoryPres: categoryPres }\r\n                    await createAddPredecessor(dataPredecessor);\r\n                }\r\n\r\n                const categoriesHealthRecordExamining = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isHealthRecord === true)\r\n                mainDataExaminingForConclusion.categories = categoriesHealthRecordExamining\r\n                const responseAddMedicalBook = await createAddMedicalBook(mainDataExaminingForConclusion);\r\n                if(responseAddMedicalBook.status === 200){\r\n                    toast.success(responseAddMedicalBook.data, {toastId: 'success3'});\r\n                    props.handleCompleteExaminingForPantient();\r\n                    setMainDataExaminingForConclusion();\r\n                    props.setOpenModalCompleteExamining(false);\r\n                }\r\n                else{\r\n                    toast.error(responseAddMedicalBook.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            setOpenAlertProcessing(false);\r\n    }\r\n\r\n    const checkValidate = () => {\r\n        let isValid = true;\r\n        if(mainDataExaminingForConclusion.conclusion === null){\r\n            textareaRef.current.focus();\r\n            toast.error('Bạn chưa nhập kết luận khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === 'Invalid date'){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Ngày tái khám không hợp lệ', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === ''){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Bạn chưa chọn ngày tái khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalCompleteExamining){\r\n            handleSetDataCompleteExamining();\r\n        }\r\n    }, [props.openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalCompleteExamining} onClose={(event, reason) => handleCloseModalCompleteExamining(event, reason)} disableEscapeKeyDown={true}>\r\n                <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Tóm tắt quá trình khám</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalCompleteExamining()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='large'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                    <Box sx={{pl: 6, pr: 6}}>\r\n                        <List sx={{p: 0}}>\r\n                            <Box>\r\n                                {mainDataExaminingForConclusion ? \r\n                                    mainDataExaminingForConclusion.categories.length !== 0 ? \r\n                                        <div className='category-complete-examining'>\r\n                                            {mainDataExaminingForConclusion.categories.map((categoriesItem, categoriesIndex) => (\r\n                                                <div key={`categoriesItem ${categoriesIndex}`}>\r\n                                                    <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                        {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                            <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                                \r\n                                                                {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                    <div key={`questionItem ${questionIndex}`}>\r\n                                                                        <Grid container rowSpacing={0}>\r\n                                                                            {questionIndex === 0 ?\r\n                                                                                <>\r\n                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                    </Grid> \r\n\r\n                                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                        <>\r\n                                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                            </Grid>\r\n                                                                        \r\n                                                                                            <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                        </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    }   \r\n                                                                                </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n                                                                \r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                                classes={{ root: classes.root }}\r\n                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                            />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={5.5} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                :   \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={8} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                }                                                                                                                                                                          \r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    :\r\n                                        <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không có nội dung nào được khám.</Typography>\r\n                                :\r\n                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không có nội dung nào được khám.</Typography>\r\n                                }\r\n                            </Box>\r\n                        </List>\r\n                    </Box>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{borderTop: '1px solid black'}}>\r\n                    {mainDataExaminingForConclusion ? \r\n                        mainDataExaminingForConclusion.categories.length !== 0 ?\r\n                            <div style={{width: '100%', padding: '8px 50px 8px 50px'}}>\r\n                                <TextareaAutosize key={`pantientId ${mainDataExaminingForConclusion.patientId}`} placeholder='Kết luận của bác sĩ' style={{width: '100%', padding: '15px', fontSize: '17px'}} onChange={(e) => onChangeExaminingConclusion(e.target.value)} ref={textareaRef} defaultValue={mainDataExaminingForConclusion.conclusion} /> \r\n                            \r\n                                    {mainDataExaminingForConclusion.isVaccination ? \r\n                                        <>\r\n                                            <Box sx={{mb: 0.4}}>\r\n                                                {mainDataExaminingForConclusion.vaccination === '' || mainDataExaminingForConclusion.vaccination === null?\r\n                                                    null\r\n                                                    :\r\n                                                    <>\r\n                                                        <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.vaccination}`}</Typography>\r\n                                                    </>\r\n                                                }\r\n\r\n                                                {mainDataExaminingForConclusion.nextVaccination === '' || mainDataExaminingForConclusion.nextVaccination === null?\r\n                                                    null\r\n                                                    :\r\n                                                    <>\r\n                                                        <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.nextVaccination}`}</Typography>\r\n                                                    </>\r\n                                                }\r\n\r\n                                                {mainDataExaminingForConclusion.reminder === '' ||  mainDataExaminingForConclusion.reminder === null?\r\n                                                    null\r\n                                                    :\r\n                                                    <>\r\n                                                        <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.reminder}`}</Typography>\r\n                                                    </>\r\n                                                }\r\n                                            </Box>\r\n                                            \r\n                                        </>\r\n                                        :\r\n                                        null\r\n                                    }\r\n\r\n                                    {mainDataExaminingForConclusion.appointmentDate ? \r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', mb: 2}}>\r\n                                            <Typography variant='h6' sx={{mt: 'auto', mb: 'auto', mr: 2}}>Kỳ khám tiếp theo: <span style={{fontWeight: 'bolder', color: '#ff1744'}}>{mainDataExaminingForConclusion.nextExamName}</span></Typography>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                                <DemoContainer components={['DatePicker']}>  \r\n                                                    <DatePicker label=\"Ngày khám dự kiến\" disablePast\r\n                                                        format='DD/MM/YYYY' defaultValue={moment(mainDataExaminingForConclusion.appointmentDate)}\r\n                                                        onChange={(value) => onChangeAppointmentDate(value)}\r\n                                                        slotProps={{ \r\n                                                            textField: { inputRef: dateFieldRef, }\r\n                                                        }}\r\n                                                    />\r\n                                                </DemoContainer>\r\n                                            </LocalizationProvider>\r\n                                        </Box>\r\n                                    </>\r\n                                    :\r\n                                        null\r\n                                    }\r\n                        \r\n                                <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                    <Stack spacing={1} direction=\"row\">\r\n                                        <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' onClick={() => handleAddMedicalBook()}\r\n                                            >Lưu</Button>\r\n                                        <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' color={'error'}\r\n                                            onClick={() => handleCloseModalCompleteExamining()}>Đóng</Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </div>   \r\n                        :\r\n                            null\r\n                    :\r\n                        null                \r\n                    }             \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//scss\r\nimport './SCSS/PreviewLastExamining.scss'; \r\n//api\r\nimport { getMedicalBook } from '../../Service/MedicalService';\r\n//moment\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi'; \r\nmoment.locale('vi');\r\n\r\nfunction PreviewLastExamining(props) {\r\n    const previewDataExaminingDefault = {\r\n        categoryPres: [],\r\n        healthRecords: { examinationName: '', timeUpdateState: '', conclusion: '', medicakBook: [] },\r\n        nutritionals: [],\r\n        vaccinationBook: [] \r\n    }\r\n\r\n    const [previewDataExamining, setPreviewDataExamining] = useState(previewDataExaminingDefault);\r\n    // const [fullDataPredecessor, setFullDataPredecessor] = useState();\r\n    // const [fullDataHealthRecord, setFullDataHealthRecord] = useState();\r\n    \r\n    const [loadingMedicalBook, setLoadingMedicalBook] = useState(false);\r\n\r\n    const [openCollapsePredecessorItem, setOpenCollapsePredecessorItem] = useState([]);\r\n    const [openCollapseMedicakBookItem, setOpenCollapseMedicakBookItem] = useState([]);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpenPredecessorItem = (predecessorIndex) => {\r\n        setOpenCollapsePredecessorItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[predecessorIndex] = !newOpen[predecessorIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleOpenMedicakBookItem = (medicakBookIndex) => {\r\n        setOpenCollapseMedicakBookItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[medicakBookIndex] = !newOpen[medicakBookIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    // const handeOnChangePagePredecessor = (e, page, indexPredecessor) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].categoryContents = fullDataPredecessor[indexPredecessor].categoryContents[page - 1];\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    // const handeOnChangePageHealthRecords = (e, page, indexMedicakbook) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].categoryContents = fullDataHealthRecord[indexMedicakbook].categoryContents[page - 1];\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    const handleEditPrevDataExamining = async () => {\r\n        setLoadingMedicalBook(true);\r\n        const responseMedicalBook = await getMedicalBook(props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0].medicalBookId);\r\n        if(props.prevDataExamining.newPredecessor){\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n             \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: [],\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n\r\n        else{\r\n            if(props.prevDataExamining.categoryPres.length > 1){\r\n                props.prevDataExamining.categoryPres = props.prevDataExamining.categoryPres.sort((a, b) => a.categoryOrder - b.categoryOrder);\r\n            }\r\n\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n            \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: props.prevDataExamining.categoryPres,\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n        setLoadingMedicalBook(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.prevDataExamining){\r\n            handleEditPrevDataExamining();\r\n        }\r\n    }, [props.prevDataExamining])\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{height: '100%', position: 'relative'}}>\r\n                {loadingMedicalBook ? \r\n                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                        <CircularProgress />\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh gần nhất, hãy chờ một chút...</Typography>\r\n                    </Box>\r\n                :\r\n                    <>\r\n                        <div className='preview-last-examining-contents' >\r\n\r\n                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem'}}>\r\n                                Thông tin tóm tắt <span style={{color: 'red'}}>{previewDataExamining.healthRecords.examinationName}</span>\r\n                            </Typography>\r\n\r\n                            <List sx={{p: 0}}>\r\n                                {previewDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                    <div key={`predecessorItem ${predecessorIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenPredecessorItem(predecessorIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapsePredecessorItem[predecessorIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapsePredecessorItem[predecessorIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {predecessorItem.categoryContents.map((predecessorItemCategoryContentsItem, predecessorItemCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`predecessorItemCategoryContentsIndex ${predecessorItemCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: predecessorItemCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{predecessorItemCategoryContentsItem.categoryContentTitle}</Typography>\r\n                                                    \r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {predecessorItemCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{predecessorItemCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={6.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                                    \r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={6.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))} \r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                {previewDataExamining.healthRecords.medicakBook.map((medicakBookItems, medicakBookIndex) => (\r\n                                    <div key={`medicakBookItems ${medicakBookIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenMedicakBookItem(medicakBookIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseMedicakBookItem[medicakBookIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={medicakBookItems.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapseMedicakBookItem[medicakBookIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {medicakBookItems.categoryContents.map((medicakBookCategoryContentsItem, medicakBookCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`medicakBookCategoryContentsIndex ${medicakBookCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: medicakBookCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{medicakBookCategoryContentsItem.categoryContentTitle}</Typography>\r\n\r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {medicakBookCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{medicakBookCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={5.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))}\r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}             \r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n                            </List>\r\n\r\n                            <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận: ${previewDataExamining.healthRecords.conclusion}`}</Typography>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='time-examining' style={{marginLeft: '16px', marginTop: '4px', width: '99%'}}>\r\n                            <Typography variant='subtitle1' sx={{color: '#009688', fontWeight: 'bolder', fontSize: '1.08rem'}}>{`${previewDataExamining.healthRecords.doctorFullName}, ${moment(previewDataExamining.healthRecords.timeUpdateState).format('LLLL')}`}</Typography>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Box>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default PreviewLastExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//lodash\r\nimport _, { constant } from \"lodash\";\r\n//modal\r\nimport CompleteExamining from '../ManageCompleteExamining/CompleteExamining';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//components\r\nimport PreviewLastExamining from './PreviewLastExamining';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { GiWeightScale } from \"react-icons/gi\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport { TbRulerMeasure } from \"react-icons/tb\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport BeenhereIcon from '@mui/icons-material/Beenhere';\r\nimport VaccinesIcon from '@mui/icons-material/Vaccines';\r\n//moment\r\nimport moment from 'moment';\r\n//scss\r\nimport './SCSS/DoctorExamining.scss';\r\n//api\r\nimport { \r\n    createAddPredecessor,\r\n    getMedicalDetailPatient,\r\n    getRegistersByDateNow, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook,\r\n    updateMedicalState\r\n} from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainDoctorExamining() {\r\n    const dataPantientsReadyExaminingDefault = {\r\n        stt: '',\r\n        id: '',\r\n        patientsId: '',\r\n        patientsName: '',\r\n        patientsDOB: '',\r\n        patientsMonthsOld: '',\r\n        patientsGender: '',\r\n        patientsHeight: '',\r\n        patientsWeight: '',\r\n        patientsHeadCircumference: '',\r\n        patientsPhone: '',\r\n        patientsAddress: ''\r\n    }\r\n\r\n    const { user, loading, alertVisible, confirmAlert, resetAlert, isLogOutClick } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isFormDirty, setIsFormDirty] = useState(false);\r\n\r\n    //state thông tin bệnh nhân ban đầu \r\n    const [dataPantientsReadyExamining, setDataPantientsReadyExamining] = useState(dataPantientsReadyExaminingDefault);\r\n\r\n    //state các category gồm tiêu đề nội dung khám và câu hỏi khám ban đầu\r\n    const [mainDataExamining, setMainDataExamining] = useState([]);\r\n\r\n    //state lưu tạm data các kỳ khám \r\n    const [prevDataExamining, setPrevDataExamining] = useState();\r\n\r\n    //state đóng mở cây thư mục khám của sổ khám bệnh\r\n    const [openCollapseHealthRecords, setOpenCollapseHealthRecords] = useState(false);\r\n\r\n    //state đóng mở chi tiết nội dung của sổ khám bệnh\r\n    const [openCollapseHealthRecordsItem, setOpenCollapseHealthRecordsItem] = useState([]);\r\n\r\n    //state chọn danh mục khám ban đầu\r\n    const [categorySelectedExamining, setCategorySelectedExamining] = useState({});\r\n\r\n    //state chọn danh mục bao gồm nội dung bên trong ban đầu\r\n    const [contentCategorySelectedExamining, setContentCategorySelectedExamining] = useState([]);\r\n\r\n    //state lưu tạm nội dung chi tiết của sổ khám bệnh\r\n    const [healthRecordsContents, setHealthRecordsContents] = useState([]);\r\n    const [currentHealthRecordExamining, setCurrentHealthRecordExamining] = useState();\r\n\r\n    //state vị trí nội dung hiện tại\r\n    const [currentContentExamining, setCurrentContentExamining] = useState(1);\r\n\r\n    //state các câu hỏi được bác sĩ khám tích hoặc gõ vào\r\n    const [dataExaminingForConclusion , setDataExaminingForConclusion ] = useState({});\r\n\r\n    //state lưu tạm các data tiền căn của getUpdatePredecessor (bao gồm những data tiền căn đã chọn và chưa chọn)\r\n    const [oldDataPredecessor, setOldDataPredecessor] = useState();\r\n\r\n    //dùng khi tái khám hoặc mở khám lại cho bệnh nhân có tiền căn đã đụng\r\n    const [newDataPredecessor, setNewDataPredecessor] = useState();\r\n\r\n    //state lưu data tiền căn cũ (những data tiền căn đã chọn)  \r\n    const [prevDataPredecessor, setPrevDataPredecessor] = useState();\r\n\r\n    //state quản lý modal kết thúc khám\r\n    const [openModalCompleteExamining, setOpenModalCompleteExamining] = useState(false);\r\n\r\n    const [loadingPrevDataExamining, setLoadingPrevDataExamining] = useState(false);\r\n    const [loadingPatient, setLoadingPatient] = useState(true);\r\n    const [loadingInfoPatient, setLoadingInfoPatient] = useState(true);\r\n    const [loadingCategoryExamining, setLoadingCategoryExamining] = useState(false);\r\n    const [loadingContentsExamining, setLoadingContentsExamining] = useState(false);\r\n\r\n    const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n  \r\n    const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n    const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n    const [listPantientChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n            { chipLabel: 'BN đã khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n          const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n            setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n            setListDataPatientsRegisterState(listPantientRegisterDone);\r\n        }\r\n    };\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n        }else{\r\n          setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n        }\r\n      }\r\n    \r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const handleCompleteExaminingForPantient = () => {\r\n        toast.success(`Đã kết thúc khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setCurrentHealthRecordExamining();\r\n        setCurrentContentExamining(1);\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleCancelExamining = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingCategoryExamining(true);\r\n        setLoadingContentsExamining(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, [dataPantientsReadyExamining.editExamining === true ? 2 : 0 || dataPantientsReadyExamining.backRegister === true ? 3 : 0]);\r\n        if(response.status === 200){\r\n            toast.success(`Đã hủy khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success2'});    \r\n            setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n            setMainDataExamining([]);\r\n            setOpenCollapseHealthRecords(false);\r\n            setOpenCollapseHealthRecordsItem([]);\r\n            setCategorySelectedExamining({});\r\n            setContentCategorySelectedExamining([]);\r\n            setHealthRecordsContents([]);\r\n            setCurrentHealthRecordExamining();\r\n            setCurrentContentExamining(1);\r\n            setDataExaminingForConclusion({});\r\n            setPrevDataPredecessor();\r\n            setCurrentHealthRecordExamining();\r\n            setOldDataPredecessor()\r\n            handleGetRegistersByDateNow();\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    //hàm này dùng khi user đang khám mà bị ngáo lỡ nhấn f5\r\n    const handleReloadUIWhenExamining = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        const reDataPantientsReadyExamining = JSON.parse(sessionStorage.dataPantientsReadyExamining);\r\n        const reMainDataExamining = JSON.parse(sessionStorage.mainDataExamining);\r\n        const reDataExaminingForConclusion = JSON.parse(sessionStorage.dataExaminingForConclusion);\r\n        \r\n        setDataPantientsReadyExamining(_.cloneDeep(reDataPantientsReadyExamining));\r\n        setMainDataExamining(_.cloneDeep(reMainDataExamining));\r\n        setDataExaminingForConclusion(_.cloneDeep(reDataExaminingForConclusion));\r\n\r\n        if(sessionStorage.currentHealthRecordExamining){\r\n            const reCurrentHealthRecordExamining = JSON.parse(sessionStorage.currentHealthRecordExamining);\r\n            setCurrentHealthRecordExamining(_.cloneDeep(reCurrentHealthRecordExamining));\r\n        }\r\n\r\n        if(sessionStorage.prevDataPredecessor){\r\n            const rePrevDataPredecessor = JSON.parse(sessionStorage.prevDataPredecessor);\r\n            setPrevDataPredecessor(_.cloneDeep(rePrevDataPredecessor));\r\n        }\r\n\r\n        if(sessionStorage.oldDataPredecessor){\r\n            const reOldDataPredecessor = JSON.parse(sessionStorage.oldDataPredecessor);\r\n            setOldDataPredecessor(_.cloneDeep(reOldDataPredecessor));\r\n        }\r\n        \r\n        setNewDataPredecessor({\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            categoryPres: []\r\n        })\r\n        \r\n        sessionStorage.clear();\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //lấy danh sách đăng ký khám trong ngày\r\n    const handleGetRegistersByDateNow = async () => {\r\n        const response = await getRegistersByDateNow();\r\n        if(response !== 400){\r\n            if(response.list.length !== 0){\r\n                setListDataPatientsRegister(response.list);\r\n                if(activeChip.chipOrder === 0 || dataPantientsReadyExamining.editExamining === true){\r\n                    const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n                    setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                    setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n                    const updatedList = listPantientChipState.map((item, index) => ({\r\n                        ...item,\r\n                        chipContent: response.listCountState[index]\r\n                    }));\r\n                    setListPantientChipState(updatedList);\r\n                    if(sessionStorage.dataPantientsReadyExamining){\r\n                        handleReloadUIWhenExamining();\r\n                    }\r\n                }\r\n                else if(activeChip.chipOrder === 1){\r\n                    const listPantientRegisterDone = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n                    setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n                    setListDataPatientsRegisterState(listPantientRegisterDone);\r\n                    const updatedList = listPantientChipState.map((item, index) => ({\r\n                        ...item,\r\n                        chipContent: response.listCountState[index]\r\n                    }));\r\n                    setListPantientChipState(updatedList);\r\n                }\r\n            }\r\n        }\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n    }\r\n\r\n    const handleAppyPantientData = async (dataPantientItem) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingPrevDataExamining(true);\r\n        await handleGetMedicalDetailPatient(dataPantientItem.id);\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.stt = dataPantientItem.order;\r\n        _dataPantientsReadyExamining.id = dataPantientItem.id;\r\n        _dataPantientsReadyExamining.status = 0;\r\n        _dataPantientsReadyExamining.patientsId = dataPantientItem.patient.patientId;\r\n        _dataPantientsReadyExamining.patientsName = dataPantientItem.patient.fullName;\r\n        _dataPantientsReadyExamining.patientsDOB = dataPantientItem.patient.dayOfBirth;\r\n        _dataPantientsReadyExamining.patientsMonthsOld = dataPantientItem.patient.monthsOfAge;\r\n        _dataPantientsReadyExamining.patientsGender = dataPantientItem.patient.gender;\r\n        _dataPantientsReadyExamining.patientsHeight = dataPantientItem.height;\r\n        _dataPantientsReadyExamining.patientsWeight = dataPantientItem.weight;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsPhone = dataPantientItem.patient.phoneMother ? dataPantientItem.patient.phoneMother : dataPantientItem.patient.phoneFather;\r\n        _dataPantientsReadyExamining.patientsAddress = dataPantientItem.patient.fullAddress;\r\n        _dataPantientsReadyExamining.vaccination = dataPantientItem.vaccination === true ? true : false;\r\n        _dataPantientsReadyExamining.editExamining = dataPantientItem.state === 2 ? true : false;\r\n        _dataPantientsReadyExamining.backRegister = dataPantientItem.state === 3 ? true : false;\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n        setLoadingInfoPatient(false);\r\n        setLoadingPrevDataExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //nhấn chọn bệnh nhân để load vào ô thông tin bn\r\n    const handleSelectPantientExamining = async (dataPantientItem) => {\r\n        if(dataPantientItem.state === 0 || dataPantientItem.state === 3 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId === '' || dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 0){\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n            else{\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n        }\r\n        \r\n        else if(dataPantientItem.state === 2 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 1){\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n            else{\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    //bắt đầu khám bệnh cho bệnh nhân\r\n    const handleBeginExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            if(prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                    //backup prevDataPredecessor để khi cần dùng\r\n                    setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n                }\r\n\r\n                await handleGetRegistersByDateNow();\r\n                await handleSetMainDataExamining();\r\n                toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n            }\r\n            else{\r\n                await handleGetCategoryReExamining();\r\n                await handleGetRegistersByDateNow();\r\n            }\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error(response.data, {toastId: 'error1'});\r\n        }\r\n        setLoadingPatient(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu khám cho bệnh nhân khám mới\r\n    const handleSetMainDataExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        prevDataExamining.healthRecords.forEach((healthRecordsItem) => {\r\n            if(healthRecordsItem.medicalBookId === null){\r\n                healthRecordsItem.state = 1\r\n            }\r\n        })\r\n        \r\n        //tái khám và có tiền căn đã đụng\r\n        if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === false){\r\n\r\n            const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(0);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(demoDataExaminingForConclusion);\r\n            //console.log(prevDataExamining);\r\n            setPrevDataExamining();\r\n\r\n        }\r\n\r\n        //khám mới hoàn toàn hoặc tái khám có tiền căn chưa đụng\r\n        else{\r\n            const editDataCategoryPresForConclusion = prevDataExamining.categoryPres.map((predecessorItem) => {\r\n                const mainCategoryContentsExamining = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentOrder: categoryContentsItem.categoryContentOrder,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n    \r\n                const mainCategoryExamining = {\r\n                    categoryName: predecessorItem.categoryName,\r\n                    isPredecessor: true,\r\n                    categoryOrder: predecessorItem.categoryOrder,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n    \r\n                return mainCategoryExamining\r\n            })\r\n    \r\n            const editDataHealthRecordsForConclusion = prevDataExamining.healthRecords.find((healthRecordsItem) => healthRecordsItem.patientId === dataPantientsReadyExamining.patientsId)\r\n    \r\n            setDataExaminingForConclusion({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n                conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n                categories: editDataCategoryPresForConclusion,\r\n            });\r\n    \r\n            prevDataExamining.categoryPres.forEach((categoryPresItem, categoryPresIndex) => {\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.map((categoryContentsItem) => {\r\n                    return {\r\n                        ...categoryContentsItem,\r\n                        categoryPresOrder: categoryPresIndex\r\n                    }\r\n                })\r\n                return {\r\n                    ...categoryPresItem,\r\n                }\r\n            })\r\n    \r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //bắt đầu sửa dữ liệu khám bệnh\r\n    const handleBeginEditExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            await handleGetCategoryReExamining();\r\n            await handleGetRegistersByDateNow();\r\n            setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n        }\r\n    }\r\n\r\n    //lấy dữ liệu cây thư mục khám lại\r\n    const handleGetCategoryReExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        const responseGetUpdateMedicalBook = await getUpdateMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n\r\n        if(responseGetUpdateMedicalBook.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n\r\n            if(prevDataExamining.newPredecessor === false){\r\n                setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                //backup prevDataPredecessor để khi cần dùng\r\n                setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n            }\r\n            \r\n            await handleSetMainDataReExamining(responseGetUpdateMedicalBook.data);\r\n            toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        }\r\n        else if(responseGetUpdateMedicalBook.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu cây thư mục khám của chức năng mở khám lại\r\n    const handleSetMainDataReExamining = async (responseGetUpdateMedicalBookData) => {\r\n        prevDataExamining.healthRecords[0].state = 1\r\n        prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBookData.categories\r\n\r\n        const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n            categoryName: category.categoryName,\r\n            isHealthRecord: true,\r\n            categoryContents: category.categoryContents.map(content => ({\r\n              ...content,\r\n              categoryContentQuestions: []\r\n            })) \r\n        }))\r\n\r\n        //demo truớc data kết luận\r\n        const demoDataExaminingForConclusion = {\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            isVaccination: prevDataExamining.vaccination,\r\n            medicalRegisterId: dataPantientsReadyExamining.id !== prevDataExamining.healthRecords[0].medicalRegisterId ? dataPantientsReadyExamining.id : prevDataExamining.healthRecords[0].medicalRegisterId,\r\n            conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n            categories: updateHealthRecordsCategoriesForConclusion\r\n        }\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        //sửa categories của conclusion phần sổ khám bệnh\r\n        let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.healthRecords[0].categories);\r\n\r\n        updateCategoriesForConclusion = updateCategoriesForConclusion.map(category => {\r\n            category.categoryContents = category.categoryContents.map(content => {\r\n                const questions = content.categoryContentQuestions;\r\n    \r\n                // Check if all questions have both categoryContentAnswer and categoryContentNote as null\r\n                const allNull = questions.every(q => q.categoryContentAnswer === null && q.categoryContentNote === null);\r\n                    \r\n                if (allNull) {\r\n                  // Set categoryContentQuestions to an empty array\r\n                  content.categoryContentQuestions = [];                    \r\n                } else {\r\n                  // Filter out questions with both categoryContentAnswer and categoryContentNote as null\r\n                  content.categoryContentQuestions = questions.filter(q => q.categoryContentAnswer !== null || q.categoryContentNote !== null);\r\n                }\r\n                    \r\n                return content;\r\n            });\r\n                  \r\n            category.isHealthRecord = true\r\n            return category;\r\n        })\r\n\r\n        demoDataExaminingForConclusion.categories = updateCategoriesForConclusion\r\n\r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        //tiền căn đợt trước đã đụng (newPredecessor = false)\r\n        if(responseGetUpdatePredecessor.status === 200)\r\n        {   \r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        \r\n        //tiền căn đợt trước chưa đụng (newPredecessor = true) \r\n        else{\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n        \r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n    }\r\n\r\n    //sửa dữ liệu tiền căn cho mở khám lại hoặc tái khám\r\n    const handleEditDataPredecessor = async (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        \r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        const findUpdatePredecessor = responseGetUpdatePredecessor.data.find(responseGetUpdatePredecessorItem => responseGetUpdatePredecessorItem.categoryOrder === categoryOrder);\r\n\r\n        mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n            if(categoryPresItem.categoryOrder === findUpdatePredecessor.categoryOrder){\r\n                categoryPresItem.categoryContents = findUpdatePredecessor.categoryContents\r\n                categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                    categoryContentsItem.isLock = false\r\n                })\r\n                categoryPresItem.isLock = false\r\n            }\r\n        })\r\n\r\n        const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n        \r\n        if(!newDataPredecessor.categoryPres.some(categoryPresItem => categoryPresItem.categoryName === categoryName)){\r\n            newDataPredecessor.categoryPres = prevDataPredecessor\r\n        }\r\n\r\n        handleSelectCategoryClick(selectCategoryReExamining);\r\n\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //huỷ không sửa dữ liệu tiền căn nữa\r\n    const handleCancelEditDataPredecessor = (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        setTimeout(() => {\r\n            const findPrevDataPredecessorByCategoryName = oldDataPredecessor.find(prevDataPredecessorItem => prevDataPredecessorItem.categoryOrder === categoryOrder);\r\n\r\n            if(findPrevDataPredecessorByCategoryName){\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        categoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                        categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                            categoryContentsItem.isLock = true\r\n                        })\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                newDataPredecessor.categoryPres.forEach((newDataPredecessorCategoryPresItem) => {\r\n                    if(newDataPredecessorCategoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        newDataPredecessorCategoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === categoryOrder){\r\n                        categoryPresItem.categoryContents = [];\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                const _newDataPredecessor = {...newDataPredecessor};\r\n                const removeCategoryPredecessor = _newDataPredecessor.categoryPres.filter(categoryPresItem => categoryPresItem.categoryOrder !== categoryOrder);\r\n                newDataPredecessor.categoryPres = removeCategoryPredecessor\r\n            }\r\n\r\n            setPrevDataPredecessor(_.cloneDeep(oldDataPredecessor));\r\n\r\n            const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n            handleSelectCategoryClick(selectCategoryReExamining)\r\n   \r\n            setOpenAlertProcessingBackdrop(false);\r\n        }, 300)       \r\n    }\r\n\r\n    //tạo data tiền căn để lưu lại khi tái khám hoặc mở khám lại\r\n    //câu trả lời dạng check chọn true false\r\n    const handleAnswerCheckQuestionPredecessorForReExamOrBackExam = (questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(_categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex])\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(_categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex])\r\n        }\r\n    }\r\n\r\n    //câu trả lời dạng check chọn sửa lại note\r\n    const handleNoteCheckQuestionPredecessorForReExamOrBackExam = (questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(_categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex], takenValue)\r\n        }, 300)\r\n    }\r\n\r\n    //câu trả lời dạng giá trị, sửa lại note\r\n    const handleNoteValueQuestionPredecessorForReExamOrBackExam = (questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsValuePredecessorForReExamOrBackExam(_categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex], takenValue)\r\n        }, 300)\r\n    }\r\n\r\n    const createSelectedQuestionsValuePredecessorForReExamOrBackExam = (categoryContentQuestion, takenValue) => {\r\n        const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n        if(findNewDataPredecessorCategoryOrder){\r\n            // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n            const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === contentCategorySelectedExamining.categoryContentOrder)\r\n\r\n            if(findNewDataPredecessorCategoryContents){\r\n                // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue !== '');\r\n                const questionIndexRemove = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue === '');\r\n\r\n                if(questionIndex !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value khác rỗng => gán note cũ bằng note mới\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n                }\r\n\r\n                else if(questionIndexRemove !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value bằng rỗng => bỏ note đó\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexRemove, 1);\r\n                }\r\n\r\n                else{\r\n                    //nếu không tìm thấy, đẩy note mới vào\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                }\r\n            }\r\n\r\n            else{\r\n                // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                const newDataPredecessorCategoryContents = {\r\n                    categoryContentCheck: contentCategorySelectedExamining.categoryContentCheck,\r\n                    categoryContentName: contentCategorySelectedExamining.categoryContentName,\r\n                    categoryContentOrder: contentCategorySelectedExamining.categoryContentOrder,\r\n                    categoryContentQuestions: [categoryContentQuestion],\r\n                    categoryContentText: contentCategorySelectedExamining.categoryContentText,\r\n                    categoryContentTitle: contentCategorySelectedExamining.categoryContentTitle\r\n                }\r\n\r\n                findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents)\r\n            }\r\n        }\r\n\r\n        else{\r\n            // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n            const newDataPredecessorCategoryContents = {\r\n                categoryContentCheck: contentCategorySelectedExamining.categoryContentCheck,\r\n                categoryContentName: contentCategorySelectedExamining.categoryContentName,\r\n                categoryContentOrder: contentCategorySelectedExamining.categoryContentOrder,\r\n                categoryContentQuestions: [categoryContentQuestion],\r\n                categoryContentText: contentCategorySelectedExamining.categoryContentText,\r\n                categoryContentTitle: contentCategorySelectedExamining.categoryContentTitle\r\n            }\r\n\r\n            const newDataPredecessorCategoryPres = {\r\n                categoryOrder: categorySelectedExamining.categoryOrder,\r\n                categoryName: categorySelectedExamining.categoryName,\r\n                newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                categoryContents: [newDataPredecessorCategoryContents]\r\n            }\r\n\r\n            newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n        }         \r\n    }\r\n\r\n    const createSelectedQuestionsPredecessorForReExamOrBackExam = (categoryContentQuestion, takenValue) => {\r\n        if(takenValue){\r\n            //câu hỏi là dạng check đang là true, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === contentCategorySelectedExamining.categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check đang là true, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === contentCategorySelectedExamining.categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng rỗng\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = ''\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n                \r\n        }\r\n\r\n        else{\r\n            //câu hỏi là dạng check câu trả lời là true\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === contentCategorySelectedExamining.categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, thêm câu hỏi mới\r\n                        findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: contentCategorySelectedExamining.categoryContentCheck,\r\n                            categoryContentName: contentCategorySelectedExamining.categoryContentName,\r\n                            categoryContentOrder: contentCategorySelectedExamining.categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: contentCategorySelectedExamining.categoryContentText,\r\n                            categoryContentTitle: contentCategorySelectedExamining.categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents)\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: contentCategorySelectedExamining.categoryContentCheck,\r\n                        categoryContentName: contentCategorySelectedExamining.categoryContentName,\r\n                        categoryContentOrder: contentCategorySelectedExamining.categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: contentCategorySelectedExamining.categoryContentText,\r\n                        categoryContentTitle: contentCategorySelectedExamining.categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check câu trả lời là false\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === contentCategorySelectedExamining.categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndex, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //lưu dữ liệu tiền căn khi sửa xong\r\n    const handleEditDataPredecessorForSaving = (categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        setTimeout(() => {\r\n            const findNewDataPredecessor = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPres => newDataPredecessorCategoryPres.categoryOrder === categoryOrder)\r\n\r\n            const findOldDataPredecessorCategoryOrder = oldDataPredecessor.find(oldDataPredecessorItem => oldDataPredecessorItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n\r\n            if(findOldDataPredecessorCategoryOrder){\r\n                // Nếu tìm thấy categoryOrder, duyệt qua categoryContents của findNewDataPredecessor\r\n                findNewDataPredecessor.categoryContents.forEach(findNewDataPredecessorCategoryContentsItem => {\r\n\r\n                    let content = findOldDataPredecessorCategoryOrder.categoryContents.find(findOldDataPredecessorCategoryContentsItem => findOldDataPredecessorCategoryContentsItem.categoryContentOrder === findNewDataPredecessorCategoryContentsItem.categoryContentOrder);\r\n\r\n                    if(content){\r\n                        // Loại bỏ các categoryContentQuestions trong content nếu không tồn tại trong findNewDataPredecessorCategoryContentsItem\r\n                        content.categoryContentQuestions = content.categoryContentQuestions.filter(q =>\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.some(newQ => newQ.categoryContentQuestionOrder === q.categoryContentQuestionOrder)\r\n                        );\r\n\r\n                        // Nếu tìm thấy categoryContentOrder, duyệt qua categoryContentQuestions\r\n                        if(findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.length !== 0){\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.forEach(findNewDataPredecessorQuestionItem => {\r\n                                if(findNewDataPredecessorQuestionItem.categoryContentAnswer === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'check'){\r\n                                    // Nếu categoryContentAnswer là false, loại bỏ question đó\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else if(findNewDataPredecessorQuestionItem.categoryContentAnswer === '' && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'string'){\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else{\r\n                                    const questionIndex = content.categoryContentQuestions.findIndex(q => q.categoryContentQuestionOrder === findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n\r\n                                    if (questionIndex !== -1) {\r\n                                        // Thay thế question nếu trùng khớp\r\n                                        content.categoryContentQuestions[questionIndex] = findNewDataPredecessorQuestionItem;\r\n                                    }\r\n\r\n                                    else {\r\n                                        // Thêm question mới nếu không trùng khớp\r\n                                        content.categoryContentQuestions.push(findNewDataPredecessorQuestionItem);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        }else{\r\n                            findOldDataPredecessorCategoryOrder.categoryContents = findOldDataPredecessorCategoryOrder.categoryContents.filter(contentCategoryContentsItem => contentCategoryContentsItem.categoryContentOrder !== findNewDataPredecessorCategoryContentsItem.categoryContentOrder)\r\n                        }\r\n                        \r\n                    }else{\r\n                        findOldDataPredecessorCategoryOrder.categoryContents.push(findNewDataPredecessorCategoryContentsItem);\r\n                    }\r\n\r\n                })\r\n            }else{\r\n                // Thêm toàn bộ object2 nếu không tìm thấy findNewDataPredecessor\r\n                oldDataPredecessor.push(findNewDataPredecessor)\r\n            }\r\n\r\n            oldDataPredecessor.forEach((oldDataPredecessorItem) => {\r\n                oldDataPredecessorItem.categoryContents = oldDataPredecessorItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length !== 0)\r\n            }) \r\n\r\n            const removeOldDataPredecessorCategoryPres = oldDataPredecessor.findIndex(item => item.categoryContents.length === 0);\r\n            if(removeOldDataPredecessorCategoryPres !== -1){\r\n                oldDataPredecessor.splice(removeOldDataPredecessorCategoryPres, 1);\r\n            }\r\n\r\n            const saveNewDataPredecessor = {\r\n                patientId: newDataPredecessor.patientId,\r\n                categoryPres: oldDataPredecessor\r\n            }\r\n\r\n            handleSaveNewDataPredecessor(saveNewDataPredecessor, findNewDataPredecessor)            \r\n        }, 500)\r\n    }\r\n\r\n    const handleSaveNewDataPredecessor = async (saveNewDataPredecessor, findNewDataPredecessor) => {\r\n        const responseCreateAddPredecessor = await createAddPredecessor(saveNewDataPredecessor);\r\n        if(responseCreateAddPredecessor.status === 200){\r\n\r\n            const _mainDataExamining = {...mainDataExamining};\r\n\r\n            _mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                if(categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder){\r\n                    categoryPresItem.categoryContents = findNewDataPredecessor.categoryContents\r\n                    categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                        categoryContentsItem.isLock = true\r\n                    })\r\n                    if(findNewDataPredecessor.categoryContents.length === 0){\r\n                        categoryPresItem.newCategoryPre = true\r\n                    }else{\r\n                        categoryPresItem.newCategoryPre = false\r\n                    }\r\n                    categoryPresItem.isLock = true\r\n                }\r\n\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.filter(item => item.categoryContentQuestions.length !== 0);\r\n            })\r\n\r\n            setMainDataExamining(_mainDataExamining);\r\n\r\n            const selectCategoryReExamining = _mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n            \r\n            toast.success('Đã cập nhật lại tiền căn', {toastId: 'handleSaveNewDataPredecessorSuccess'});\r\n            \r\n            handleSelectCategoryClick(selectCategoryReExamining);\r\n        }\r\n        else{\r\n            toast.error(responseCreateAddPredecessor.data, {toastId: 'handleSaveNewDataPredecessorError'});\r\n        }\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //tìm danh mục khám gồm tiền căn, sổ sức khỏe, dinh dưỡng...\r\n    const handleGetMedicalDetailPatient = async (id) => {\r\n        const responseDataExamining = await getMedicalDetailPatient(id);\r\n        setPrevDataExamining(responseDataExamining);\r\n    }\r\n\r\n    //chọn mục lục để khám\r\n    const handleSelectCategoryClick = async (categoryIncludeCotent) => {\r\n        if(openCollapseHealthRecords === true){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }\r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                ...categoryIncludeCotent,\r\n                contentQuantity: categoryIncludeCotent.categoryContents.length\r\n            }\r\n        )\r\n\r\n        if(dataPantientsReadyExamining.editExamining !== true && mainDataExamining.newPredecessor === true){\r\n            const editNewCategoryPreForContentCategorySelectedExamining = {...categoryIncludeCotent.categoryContents[0], newCategoryPre: categoryIncludeCotent.newCategoryPre}\r\n            setContentCategorySelectedExamining(editNewCategoryPreForContentCategorySelectedExamining);\r\n            setCurrentContentExamining(1);\r\n        }\r\n        else{\r\n            if(categoryIncludeCotent.categoryContents.length === 0){\r\n                setContentCategorySelectedExamining({isLock: categoryIncludeCotent.isLock, isNullCategoryPres: true})\r\n            }\r\n            else{\r\n                if(categoryIncludeCotent.categoryName !== categorySelectedExamining.categoryName){\r\n                    const editNewCategoryPreForContentCategorySelectedExamining = {...categoryIncludeCotent.categoryContents[0], newCategoryPre: categoryIncludeCotent.newCategoryPre}\r\n                    setContentCategorySelectedExamining(editNewCategoryPreForContentCategorySelectedExamining);\r\n                    setCurrentContentExamining(1);\r\n                }\r\n                else if(categoryIncludeCotent.categoryName === categorySelectedExamining.categoryName){\r\n                    setCategorySelectedExamining(\r\n                        {\r\n                            ...categoryIncludeCotent,\r\n                            contentQuantity: categoryIncludeCotent.categoryContents.length\r\n                        }\r\n                    )\r\n\r\n                    const editNewCategoryPreForContentCategorySelectedExamining = {...categoryIncludeCotent.categoryContents[0], newCategoryPre: categoryIncludeCotent.newCategoryPre}\r\n                    setContentCategorySelectedExamining(editNewCategoryPreForContentCategorySelectedExamining);\r\n                    setCurrentContentExamining(1);\r\n                }\r\n                else{\r\n                    const editNewCategoryPreForContentCategorySelectedExamining = {...categoryIncludeCotent.categoryContents[currentContentExamining - 1], newCategoryPre: categoryIncludeCotent.newCategoryPre}\r\n                    setContentCategorySelectedExamining(editNewCategoryPreForContentCategorySelectedExamining);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //chọn cây thư mục khám sổ sức khỏe\r\n    const handleSelectHealthRecords = (healthRecords) => {\r\n        if(openCollapseHealthRecords === false){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }        \r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                categoryName: 'Sổ sức khỏe',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(\r\n            {\r\n                healthRecordsContentsType: 'tree',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n    }\r\n\r\n    //chọn chỉ định một sổ khám bệnh (tìm chi tiết một sổ khám bệnh)\r\n    const handleSelectHealthRecordsItem = async (medicalBookId, examinationName, healthRecordsState) => {\r\n        if(examinationName !== contentCategorySelectedExamining.healthRecordsName){\r\n            setOpenAlertProcessingBackdrop(true);\r\n            setLoadingContentsExamining(true);\r\n\r\n            if(currentHealthRecordExamining){\r\n                if(healthRecordsState === 2){\r\n                    await findHealthRecord(medicalBookId, examinationName, healthRecordsState);\r\n                }\r\n                else{\r\n                    if(currentHealthRecordExamining.newMedicalBook === false && examinationName === mainDataExamining.healthRecords[0].examinationName){\r\n                        const editCurrentHealthRecordExamining = {\r\n                            healthRecordsName: mainDataExamining.healthRecords[0].examinationName,\r\n                            categoryPatients: mainDataExamining.healthRecords[0].categories,\r\n                            newMedicalBook: true\r\n                        }\r\n    \r\n                        setCurrentHealthRecordExamining(editCurrentHealthRecordExamining)\r\n    \r\n                        setHealthRecordsContents({\r\n                            healthRecordsName: examinationName,\r\n                            newMedicalBook: editCurrentHealthRecordExamining.newMedicalBook,\r\n                            categoryPatients: editCurrentHealthRecordExamining.categoryPatients\r\n                        })\r\n    \r\n                        const editHealthRecordsContent = editCurrentHealthRecordExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => {\r\n                            const categoryName = categoryPatientsItem.categoryName;\r\n                            const firstContent = categoryPatientsItem.categoryContents[0];\r\n                    \r\n                            return{\r\n                                categoryName: categoryName,\r\n                                categoryContents: firstContent,\r\n                                currentHealthRecordsContent: 1,\r\n                                contentQuantity: categoryPatientsItem.categoryContents.length\r\n                            }\r\n                        })\r\n    \r\n                        const updateHealthRecordsContent = {\r\n                            healthRecordsName: examinationName,\r\n                            newMedicalBook: editCurrentHealthRecordExamining.newMedicalBook,\r\n                            conclusion: dataExaminingForConclusion.conclusion,\r\n                            categoryPatients: editHealthRecordsContent\r\n                        }\r\n    \r\n                        setContentCategorySelectedExamining(updateHealthRecordsContent);\r\n                    }\r\n                    \r\n                    else{\r\n                        setHealthRecordsContents({\r\n                            healthRecordsName: examinationName,\r\n                            newMedicalBook: currentHealthRecordExamining.newMedicalBook,\r\n                            categoryPatients: currentHealthRecordExamining.categoryPatients\r\n                        })\r\n    \r\n                        const editHealthRecordsContent = currentHealthRecordExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => {\r\n                            const categoryName = categoryPatientsItem.categoryName;\r\n                            const firstContent = categoryPatientsItem.categoryContents[0];\r\n                    \r\n                            return{\r\n                                categoryName: categoryName,\r\n                                categoryContents: firstContent,\r\n                                currentHealthRecordsContent: 1,\r\n                                contentQuantity: categoryPatientsItem.categoryContents.length\r\n                            }\r\n                        })\r\n    \r\n                        const updateHealthRecordsContent = {\r\n                            healthRecordsName: examinationName,\r\n                            newMedicalBook: currentHealthRecordExamining.newMedicalBook,\r\n                            conclusion: dataExaminingForConclusion.conclusion,\r\n                            categoryPatients: editHealthRecordsContent\r\n                        }\r\n                        setContentCategorySelectedExamining(updateHealthRecordsContent);\r\n                    }\r\n                }\r\n            }\r\n    \r\n            else{\r\n                await findHealthRecord(medicalBookId, examinationName, healthRecordsState);\r\n            }\r\n            setLoadingContentsExamining(false);\r\n            setOpenAlertProcessingBackdrop(false);\r\n        }\r\n    }\r\n\r\n    const findHealthRecord = async (medicalBookId, examinationName, healthRecordsState) => {\r\n        const responseMedicalBook = await getMedicalBook(medicalBookId ? medicalBookId : 0);\r\n\r\n        // //tái khám\r\n        // if(dataPantientsReadyExamining.backRegister){\r\n        //     const editHealthRecordsContent = responseMedicalBook.medicakBook.categories.map((categoryPatientsItem, categoryPatientsIndex) => {\r\n        //         const categoryName = categoryPatientsItem.categoryName;\r\n        //         const firstContent = categoryPatientsItem.categoryContents[0];\r\n                \r\n        //         return{\r\n        //             categoryName: categoryName,\r\n        //             categoryContents: firstContent,\r\n        //             currentHealthRecordsContent: 1,\r\n        //             contentQuantity: categoryPatientsItem.categoryContents.length\r\n        //         }\r\n        //     })\r\n        \r\n        //     const updateHealthRecordsContent = {\r\n        //         healthRecordsName: examinationName,\r\n        //         newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n        //         conclusion: responseMedicalBook.medicakBook.conclusion,\r\n        //         categoryPatients: editHealthRecordsContent\r\n        //     }\r\n\r\n        //     setContentCategorySelectedExamining(updateHealthRecordsContent);\r\n        //     setPrevDataHealthRecords(responseMedicalBook.medicakBook);\r\n\r\n        //     //medicalBookId truyền vào bằng với medicalBookId của đợt khám hiện tại\r\n        //     if(medicalBookId === mainDataExamining.healthRecords[0].medicalBookId){\r\n        //         setHealthRecordsContents({\r\n        //             healthRecordsName: examinationName,\r\n        //             newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n        //             categoryPatients: responseMedicalBook.medicakBook.categories\r\n        //         })\r\n\r\n        //         setCurrentHealthRecordExamining({\r\n        //             healthRecordsName: examinationName,\r\n        //             newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n        //             categoryPatients: responseMedicalBook.medicakBook.categories\r\n        //         });\r\n            \r\n        //         const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n        //             const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n        //                 const categoryContents = {\r\n        //                     categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n        //                     categoryContentName: categoryContentsItem.categoryContentName,\r\n        //                     categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n        //                     categoryContentText: categoryContentsItem.categoryContentText,\r\n        //                     categoryContentQuestions: []\r\n        //                 }\r\n        //                 return categoryContents\r\n        //             })\r\n                    \r\n        //             const mainCategoryExamining = {\r\n        //                 categoryName: categoriesItem.categoryName,\r\n        //                 isHealthRecord: true,\r\n        //                 categoryContents: mainCategoryContentsExamining\r\n        //             }\r\n    \r\n        //             return mainCategoryExamining\r\n        //         })\r\n    \r\n        //         const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n        //         editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n        //         setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        //     }\r\n        // }\r\n\r\n        //else{\r\n            setHealthRecordsContents({\r\n                healthRecordsName: examinationName,\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                categoryPatients: responseMedicalBook.medicakBook.categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: examinationName,\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                categoryPatients: responseMedicalBook.medicakBook.categories\r\n            });\r\n        \r\n            const editHealthRecordsContent = responseMedicalBook.medicakBook.categories.map((categoryPatientsItem, categoryPatientsIndex) => {\r\n                const categoryName = categoryPatientsItem.categoryName;\r\n                const firstContent = categoryPatientsItem.categoryContents[0];\r\n        \r\n                return{\r\n                    categoryName: categoryName,\r\n                    categoryContents: firstContent,\r\n                    currentHealthRecordsContent: 1,\r\n                    contentQuantity: categoryPatientsItem.categoryContents.length\r\n                }\r\n            })\r\n        \r\n            const updateHealthRecordsContent = {\r\n                healthRecordsName: examinationName,\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                conclusion: responseMedicalBook.medicakBook.conclusion,\r\n                categoryPatients: editHealthRecordsContent\r\n            }\r\n        \r\n            setContentCategorySelectedExamining(updateHealthRecordsContent);\r\n\r\n            if(healthRecordsState === 1){\r\n                const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                    const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                        const categoryContents = {\r\n                            categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                            categoryContentName: categoryContentsItem.categoryContentName,\r\n                            categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                            categoryContentText: categoryContentsItem.categoryContentText,\r\n                            categoryContentQuestions: []\r\n                        }\r\n                        return categoryContents\r\n                    })\r\n                    \r\n                    const mainCategoryExamining = {\r\n                        categoryName: categoriesItem.categoryName,\r\n                        isHealthRecord: true,\r\n                        categoryContents: mainCategoryContentsExamining\r\n                    }\r\n    \r\n                    return mainCategoryExamining\r\n                })\r\n    \r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n        //}\r\n    }\r\n\r\n    //chọn loại mục khám của một sổ khám bệnh\r\n    const handleOpenHealthRecordsItem = (categoryPatientsIndex) => {\r\n        setOpenCollapseHealthRecordsItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryPatientsIndex] = !newOpen[categoryPatientsIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleOnChangePage = (event, value) => {\r\n         setContentCategorySelectedExamining(categorySelectedExamining.categoryContents[value - 1]);\r\n         setCurrentContentExamining(value);\r\n    }\r\n\r\n    const handeOnChangePageHealthRecords = (event, page, categoryIndex) => {\r\n        const _contentCategorySelectedExamining = {...contentCategorySelectedExamining};\r\n        _contentCategorySelectedExamining.categoryPatients[categoryIndex].categoryContents = healthRecordsContents.categoryPatients[categoryIndex].categoryContents[page - 1];\r\n        _contentCategorySelectedExamining.categoryPatients[categoryIndex].currentHealthRecordsContent = page;\r\n        setContentCategorySelectedExamining(_contentCategorySelectedExamining);\r\n    }\r\n\r\n    // const handeOnChangePageOldHealthRecords = (event, page, categoryIndex) => {\r\n    //     const _contentCategorySelectedExamining = {...contentCategorySelectedExamining};\r\n    //     _contentCategorySelectedExamining.categoryPatients[categoryIndex].categoryContents = prevDataHealthRecords.categories[categoryIndex].categoryContents[page - 1];\r\n    //     _contentCategorySelectedExamining.categoryPatients[categoryIndex].currentHealthRecordsContent = page;\r\n    //     setContentCategorySelectedExamining(_contentCategorySelectedExamining);\r\n    // }\r\n\r\n    const handleAnswerCheckQuestion = (questionIndex, answer) => {\r\n        //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng check\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            )\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = false\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            )\r\n        }\r\n        else{\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(_categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            )\r\n        }   \r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const handleNoteCheckQuestion = (questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n            const isEditNote = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                takenValue,\r\n                isEditNote\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const handleAnswerValueQuestion = (questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentTitle,\r\n            )\r\n        }, 0)\r\n    }\r\n\r\n    const handleAnswerCheckQuestionHealthRecords = (categoryPatientsIndex, currentHealthRecordsContent, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                currentHealthRecordsContent - 1,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            );\r\n        }\r\n\r\n        else if(answer === true){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = false;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                currentHealthRecordsContent - 1,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            );\r\n        }\r\n\r\n        else{\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                currentHealthRecordsContent - 1,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            );\r\n        }\r\n    }\r\n    \r\n    //trả lời câu hỏi của mục sổ khám bệnh\r\n    const handleNoteCheckQuestionHealthRecords = (categoryPatientsIndex, currentHealthRecordsContent, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n            const isEditNote = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                currentHealthRecordsContent - 1,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                takenValue,\r\n                isEditNote\r\n            );\r\n        }, 300)\r\n    }\r\n\r\n    const createSelectedQuestionsExaminingForConclusion = (categoryName, currentCategory, categoryContentQuestion, questionOrder, categoryContentTitle, isEditNote) => {\r\n        //question dạng check nhưng answer là true\r\n        if(isEditNote && categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            dataExaminingForConclusion.categories.forEach((categoriesItem) => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    if(categoriesItem.categoryContents[currentCategory].categoryContentQuestions.length !== 0){\r\n                        categoriesItem.categoryContents[currentCategory].categoryContentQuestions.forEach((questionItem) => {\r\n                            if(questionItem.categoryContentQuestionOrder === questionOrder){\r\n                                //dùng tạm categoryContentTitle thay cho taken value của note\r\n                                questionItem.categoryContentNote = categoryContentTitle\r\n                            }\r\n                        })\r\n                    }\r\n                    else{\r\n                        categoriesItem.categoryContents[currentCategory].categoryContentQuestions.push(categoryContentQuestion)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        categoriesItem.categoryContents[currentCategory].categoryContentQuestions.push(categoryContentQuestion)\r\n                    }\r\n                })\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n\r\n            //question dạng check nhưng answer là false\r\n            else if(categoryContentQuestion.categoryContentAnswer === false && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        const removeSelectedQuestion = categoriesItem.categoryContents[currentCategory].categoryContentQuestions.filter((questionItem) => questionItem.categoryContentQuestionOrder !== questionOrder)\r\n                        categoriesItem.categoryContents[currentCategory].categoryContentQuestions = removeSelectedQuestion\r\n                    }\r\n                })\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion)\r\n            }\r\n        }\r\n\r\n        //question dạng giá trị nhưng khác rỗng\r\n        if(categoryContentQuestion.categoryContentNote !== '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            // Duyệt qua từng categoriesItem trong categories\r\n            _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                    categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                        if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                            // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                            if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                    question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                );\r\n                \r\n                                if (existingQuestion) {\r\n                                    // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                    existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                } else {\r\n                                    // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                    categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                }\r\n\r\n                            } else {\r\n                            // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                            }\r\n                        }\r\n                    });        \r\n                }\r\n            });\r\n\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n        //question dạng giá trị nhưng là rỗng\r\n        if(categoryContentQuestion.categoryContentNote === '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                        if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if(dataPantientsReadyExamining.status === 1 && alertVisible){\r\n                const userConfirmed = window.confirm(`Bạn đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, có chắc là muốn đăng xuất không?`);\r\n                if(userConfirmed){\r\n                    sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                    sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                    sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n\r\n                    if(currentHealthRecordExamining){\r\n                        sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                    }\r\n\r\n                    if(prevDataPredecessor){\r\n                        sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                    }\r\n\r\n                    if(oldDataPredecessor){\r\n                        sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                    }\r\n                    confirmAlert();\r\n                }\r\n                else{\r\n                    resetAlert();\r\n                }\r\n        }\r\n\r\n        else if(dataPantientsReadyExamining.status){\r\n            setIsFormDirty(true)\r\n\r\n            const handleBeforeUnload = (e) => {\r\n                const confirmationMessage = 'Bạn có chắc chắn muốn rời khỏi trang này?';\r\n                e.returnValue = confirmationMessage; // Hiển thị thông báo cảnh báo\r\n                return confirmationMessage;\r\n            };\r\n\r\n            const unblock = history.block((location, action) => {\r\n                if (isFormDirty) {\r\n                    const confirmLeave = window.confirm(\r\n                        'Bạn có chắc chắn muốn rời khỏi trang này? Những thay đổi sẽ không được lưu....'\r\n                    );\r\n                    if (confirmLeave) {\r\n                        sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                        sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                        sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                        if(currentHealthRecordExamining){\r\n                            sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                        }\r\n    \r\n                        if(prevDataPredecessor){\r\n                            sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                        }\r\n    \r\n                        if(oldDataPredecessor){\r\n                            sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                        }\r\n\r\n                        unblock(); // Hủy chặn để điều hướng\r\n                        history.push(location.pathname); // Điều hướng đến trang mới\r\n                        \r\n                    } else {\r\n                        return false; // Ngăn điều hướng\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n    \r\n            const handleUnload = () => {                \r\n                sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                if(currentHealthRecordExamining){\r\n                    sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                }\r\n    \r\n                if(prevDataPredecessor){\r\n                    sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                }\r\n    \r\n                if(oldDataPredecessor){\r\n                    sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                }\r\n            };\r\n            \r\n            window.addEventListener('beforeunload', handleBeforeUnload);\r\n            window.addEventListener('unload', handleUnload);\r\n            \r\n            return () => {\r\n                window.removeEventListener('beforeunload', handleBeforeUnload);\r\n                unblock();\r\n                window.removeEventListener('unload', handleUnload);                \r\n            };\r\n        }\r\n\r\n        else if(alertVisible){\r\n            confirmAlert();\r\n        }\r\n    }, [dataPantientsReadyExamining, mainDataExamining, currentHealthRecordExamining, dataExaminingForConclusion, alertVisible, confirmAlert, resetAlert, isLogOutClick, history, isFormDirty])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user){\r\n            if(user.isCurrentDoctorExamining === true){\r\n                handleGetRegistersByDateNow();\r\n            }\r\n            else if(user.isCurrentDoctorExamining === false){\r\n                toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error10'});\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(event.keyCode === 112){\r\n                event.preventDefault();\r\n            }\r\n\r\n            if(dataPantientsReadyExamining.patientsId !== '' && openAlertProcessingBackdrop === false && openModalCompleteExamining === false && event.keyCode !== 116){\r\n                if(event.keyCode === 112 && dataPantientsReadyExamining.status === 1){\r\n                    event.preventDefault();\r\n                    handleCancelExamining();\r\n                }\r\n\r\n                else if(event.keyCode === 113 && prevDataExamining){\r\n                    if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n                        handleBeginExaminingForPantient();\r\n                    }\r\n                    else if(dataPantientsReadyExamining.status === 1){\r\n                        alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n                    }\r\n                    else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n                        handleBeginEditExaminingForPantient();\r\n                    }\r\n                }\r\n\r\n                else if(event.keyCode === 115){\r\n                    if(dataPantientsReadyExamining.status === 1){\r\n                        setTimeout(() => {\r\n                            setOpenModalCompleteExamining(true);\r\n                        }, 500)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n\r\n    }, [dataPantientsReadyExamining, openModalCompleteExamining, openAlertProcessingBackdrop, openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 10.6}}>\r\n                <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                    <Grid container spacing={2} sx={{pl: 0.6, pr: 0.6}}>\r\n\r\n                        <Grid item xs={5}>\r\n                            {/* <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{`${moment().format('dddd')}, ${moment().format('LL')}`}</Typography> */}\r\n                            <TableContainer component={Paper} sx={{ height: '332px', boxShadow: 5, borderRadius: '10px' }}>\r\n                                {loadingPatient ?\r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                                            <CircularProgress />\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                                        </Box>        \r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Box>\r\n                                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                                                    <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                                                        <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                                        onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                                                    </Badge>\r\n                                                ))}\r\n                                            </Stack>\r\n                                            <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                                            <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                                                <TextField sx={{mb: 0.6, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                                        startAdornment: (\r\n                                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                                        ),\r\n                                                        endAdornment: (\r\n                                                            <InputAdornment position='end'>\r\n                                                                {searchPatientsQuery !== '' ? \r\n                                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                                                                    /> \r\n                                                                : \r\n                                                                    null\r\n                                                                }\r\n                                                            </InputAdornment>  \r\n                                                        )\r\n                                                    }}>\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Box>\r\n                                \r\n                                        <Table stickyHeader >\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listDataPatientsRegisterSort.map((dataPantientItem, dataPantientIndex) => (\r\n                                                    <TableRow hover role=\"checkbox\" key={dataPantientItem.order}\r\n                                                        sx={{ cursor: 'pointer', backgroundColor: dataPantientItem.state === 1 ? '#26c6da' : '#fff', \r\n                                                        ':hover': {backgroundColor: dataPantientItem.state === 1 ? '#00bcd4 !important' : 'rgba(0, 0, 0, 0.1) !important'} }} \r\n                                                        onClick={() => handleSelectPantientExamining(dataPantientItem)}\r\n                                                    >\r\n                                                        <TableCell align='left' sx={{width: '20px'}}>{dataPantientItem.order}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '150px'}}>{dataPantientItem.patient.patientId}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '240px'}}>{dataPantientItem.patient.fullName}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </>\r\n                                }\r\n                            </TableContainer>\r\n\r\n                            {/* cây thư mục khám */}\r\n                            <Box style={{width: '100%', marginTop: '8px', borderRadius: '10px', border: '2px solid red', height: '250px'}} >\r\n                                {\r\n                                    mainDataExamining.length === 0 && loadingCategoryExamining === false || prevDataExamining === false ?\r\n                                        null\r\n                                    :\r\n                                    <>\r\n                                        {loadingCategoryExamining ?\r\n                                            <Box sx={{backgroundColor: '#e0e0e0', borderRadius: '10px', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu cây thư mục khám, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <>\r\n                                                <div className='category-scrollbar'>\r\n                                                    <List sx={{p: 0, display: 'inline-grid'}}>\r\n                                                        {mainDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                                            <Box sx={{display: 'inline-flex'}} key={`category ${predecessorIndex}`}>\r\n                                                                <ListItemButton\r\n                                                                    sx={{\r\n                                                                    width: 'fitContent', pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'},\r\n                                                                    backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffd54f' : ''}} \r\n                                                                    onClick={() => handleSelectCategoryClick(predecessorItem)}\r\n                                                                >\r\n                                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                        <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </Box>\r\n                                                                </ListItemButton>\r\n\r\n                                                                {predecessorItem.newCategoryPre === true && predecessorItem.newPredecessor === true ? \r\n                                                                    null\r\n                                                                :\r\n                                                                    <>\r\n                                                                        {predecessorItem.newCategoryPre === false  ?\r\n                                                                            <>  \r\n                                                                                <CheckCircleIcon sx={{color: 'green', fontSize: '1.4rem', margin: 'auto'}} titleAccess='đã theo dõi'/>\r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        {mainDataExamining.newPredecessor ? \r\n                                                                            null\r\n                                                                        :\r\n                                                                            predecessorItem.isLock === true ?\r\n                                                                                <>  \r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <EditIcon sx={{color: 'blue', fontSize: '1.6rem'}} titleAccess='Sửa'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>\r\n                                                                            \r\n                                                                            :\r\n                                                                                <>\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessorForSaving(predecessorItem.categoryOrder)}>\r\n                                                                                        <BeenhereIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Lưu'/>\r\n                                                                                    </IconButton>\r\n\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleCancelEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <CancelIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Hủy'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>   \r\n                                                                        }                                  \r\n                                                                    </>\r\n                                                                }\r\n                                                            </Box>\r\n                                                        ))}\r\n\r\n                                                        <ListItemButton \r\n                                                            sx={{pt: '4px', pb: '4px', borderRadius: '8px', backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffd54f' : '',\r\n                                                                ':hover': {backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                            onClick={() => handleSelectHealthRecords(mainDataExamining.healthRecords)}\r\n                                                        >\r\n                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}>\r\n                                                                <SendIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                            </ListItemIcon>\r\n\r\n                                                            <ListItemText primary={'Sổ sức khỏe'} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>                                                    \r\n                                                        </ListItemButton>\r\n\r\n                                                        <Collapse in={openCollapseHealthRecords} timeout=\"auto\" unmountOnExit>\r\n                                                            <div style={{ paddingLeft: '24px' }}>\r\n                                                                {mainDataExamining.healthRecords.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                    <ListItemButton key={`healthRecords ${healthRecordsIndex}`} sx={{pt: '0px', pb: '0px', width: 'auto', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                                        onClick={() => handleSelectHealthRecordsItem(healthRecordsItem.medicalBookId, healthRecordsItem.examinationName, healthRecordsItem.state)}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: healthRecordsItem.state === 1 ? 'red' : '#009688'}}}>\r\n                                                                            <FiberManualRecordIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={healthRecordsItem.examinationName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </ListItemButton>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </Collapse>\r\n                                                    </List>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </Box>\r\n                            <div className='instruction' style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                                <Typography variant='h6'><span style={{fontWeight: 'bolder', color: 'red'}}>F1</span> huỷ khám</Typography>\r\n                                <Typography variant='h6'><span style={{fontWeight: 'bolder', color: 'deeppink'}}>F2</span> bắt đầu khám</Typography>\r\n                                <Typography variant='h6'><span style={{fontWeight: 'bolder', color: 'blue'}}>F4</span> kết thúc khám</Typography>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            {/* thông tin bệnh nhân */}\r\n                            <Box sx={{boxShadow: 4, borderRadius: '20px', border: '2px solid blue', height: '220px', mb: '4px', overflow: 'auto'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', mt: 0.6, mb: 0.6, fontWeight: 'bolder', fontSize: '1.2rem', textAlign: 'center'}}>Thông tin bệnh nhân</Typography>\r\n                                <Box sx={{pl: 2.8, pr: 2.8, mt: 1}}>\r\n                                    {loadingInfoPatient ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', mt: 4}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải thông tin bệnh nhân, hãy chờ một chút...</Typography>\r\n                                        </Box>\r\n                                    :\r\n                                        <>\r\n                                            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Mã BN: ${dataPantientsReadyExamining.patientsId || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Họ tên: ${dataPantientsReadyExamining.patientsName || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    {dataPantientsReadyExamining.patientsGender === true ? <MaleIcon sx={{color: 'coral', fontSize: '27px'}}/> : <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/>}\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Giới tính: ${dataPantientsReadyExamining.patientsGender !== '' ? dataPantientsReadyExamining.patientsGender === true ? 'Nam' : 'Nữ' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: {dataPantientsReadyExamining.patientsDOB ? moment(dataPantientsReadyExamining.patientsDOB).format(\"DD/MM/YYYY\") : ''}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Tháng tuổi: ${dataPantientsReadyExamining.patientsMonthsOld || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Sdt: ${dataPantientsReadyExamining.patientsPhone || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={dataPantientsReadyExamining.vaccination ? 3 : 4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiBodyHeight style={{color: 'tomato', fontSize: '1.42rem', marginLeft: '2px'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 0.8}}>\r\n                                                        {`Chiều cao: ${dataPantientsReadyExamining.patientsHeight ? dataPantientsReadyExamining.patientsHeight + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={dataPantientsReadyExamining.vaccination ? 3 : 4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Cân nặng: ${dataPantientsReadyExamining.patientsWeight ? dataPantientsReadyExamining.patientsWeight + ' kg' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                {dataPantientsReadyExamining.vaccination ? \r\n                                                    null\r\n                                                    :\r\n                                                    <Grid item xs={1}/>\r\n                                                }\r\n                                                \r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <TbRulerMeasure style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Vòng đầu: ${dataPantientsReadyExamining.patientsHeadCircumference ? dataPantientsReadyExamining.patientsHeadCircumference + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                {dataPantientsReadyExamining.vaccination ? \r\n                                                    <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                        <VaccinesIcon style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                        <Typography variant='subtitle1' sx={{ml: 1}}>Tham gia tiêm ngừa</Typography>\r\n                                                    </Grid>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                                \r\n                                                <Grid item xs={12} sx={{display: 'inline-flex'}}>\r\n                                                    <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Địa chỉ: ${dataPantientsReadyExamining.patientsAddress || ''}`}</Typography>\r\n                                                </Grid> \r\n\r\n                                            </Grid>\r\n                                        </>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {/* nội dung khám */}\r\n                            <div className='container-content-examining'>\r\n                                {\r\n                                    loadingPrevDataExamining ? \r\n                                        <>\r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu kỳ khám gần nhất, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    :\r\n                                    prevDataExamining ? \r\n                                        prevDataExamining.healthRecords.length === 1 && prevDataExamining.healthRecords[0].medicalBookId === null ? \r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <Typography variant='h6'>Bệnh nhân không có kỳ khám trước</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <div className='content-examining'><PreviewLastExamining prevDataExamining={prevDataExamining} /></div>\r\n                                    :\r\n                                        null\r\n                                }\r\n                                \r\n                                {contentCategorySelectedExamining.length !== 0 ? \r\n                                    <>\r\n                                        <div className='content-examining' style={{height: healthRecordsContents.length === 0 ? '47.4vh' : '50vh'}}>\r\n                                            {loadingContentsExamining ? \r\n                                                <>\r\n                                                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                        <CircularProgress />\r\n                                                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh, hãy chờ một chút...</Typography>\r\n                                                    </Box>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {contentCategorySelectedExamining.isNullCategoryPres && contentCategorySelectedExamining.isLock === true ? \r\n                                                        <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                            <Typography variant='h6'>Bệnh nhân không có tiền căn đang được theo dõi ở mục này</Typography>\r\n                                                        </Box>\r\n                                                    :\r\n                                                        <Box sx={contentCategorySelectedExamining.categoryContentTitle === null ? {marginTop: '30px'} : {}}>\r\n                                                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>{contentCategorySelectedExamining.categoryContentTitle || ''}</Typography>\r\n                                                            {contentCategorySelectedExamining.categoryContentQuestions ? \r\n                                                                contentCategorySelectedExamining.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                    <Box key={`categoryContentQuestionName ${questionIndex}`}>\r\n                                                                        <Grid container rowSpacing={0}>\r\n\r\n                                                                            {questionIndex === 0 ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{contentCategorySelectedExamining.categoryContentName}</Typography>\r\n                                                                                    </Grid>\r\n\r\n                                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                        <>\r\n                                                                                            <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>{contentCategorySelectedExamining.categoryContentCheck}</Typography>\r\n                                                                                            </Grid>\r\n\r\n                                                                                            <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{contentCategorySelectedExamining.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                        </>\r\n                                                                                        : \r\n                                                                                            <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{contentCategorySelectedExamining.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                    }                                                                             \r\n                                                                                </> \r\n                                                                                : \r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                    \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled={contentCategorySelectedExamining.isLock === true ? true : false} \r\n                                                                                        checked={questionItem.categoryContentAnswer === true ? true : false } \r\n                                                                                        classes={{ root: classes.root }} color='error' \r\n                                                                                        sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} \r\n                                                                                        onClick={() => contentCategorySelectedExamining.isLock === false ? handleAnswerCheckQuestionPredecessorForReExamOrBackExam(questionIndex, questionItem.categoryContentAnswer) : handleAnswerCheckQuestion(questionIndex, questionItem.categoryContentAnswer)} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={7} >\r\n                                                                                        <div className='textfield-for-answer'>\r\n                                                                                            <div className='suggest-note' key={`current ${currentContentExamining} - question ${questionIndex} - category ${contentCategorySelectedExamining.categoryContentOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - isLock ${contentCategorySelectedExamining.isLock}`} >                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled={contentCategorySelectedExamining.isLock === true ? true : false}\r\n                                                                                                    onChange={(e) => contentCategorySelectedExamining.isLock === false ? handleNoteCheckQuestionPredecessorForReExamOrBackExam(questionIndex, e.target.value) : handleNoteCheckQuestion(questionIndex, e.target.value)}\r\n                                                                                                    defaultValue={questionItem.categoryContentNote}\r\n                                                                                                />\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>   \r\n                                                                                :\r\n                                                                                <>\r\n                                                                                    <Grid item xs={8}>\r\n                                                                                        <div className='textfield-for-answer' key={`current ${currentContentExamining} - question ${questionIndex} - category ${contentCategorySelectedExamining.categoryContentOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - isLock ${contentCategorySelectedExamining.isLock}`} >\r\n                                                                                            <input type='text' disabled={contentCategorySelectedExamining.isLock === true ? true : false}\r\n                                                                                                className='value-for-answer' \r\n                                                                                                onChange={(e) => contentCategorySelectedExamining.isLock === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(questionIndex, e.target.value) : handleAnswerValueQuestion(questionIndex, e.target.value)} \r\n                                                                                                defaultValue={questionItem.categoryContentNote} \r\n                                                                                            />\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }\r\n                                                                        </Grid>\r\n                                                                    </Box>\r\n                                                                ))\r\n                                                                :\r\n                                                                contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length === 0 ? \r\n                                                                    <>\r\n                                                                        <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n                                                                        <TableContainer component={Paper}>\r\n                                                                            <Table stickyHeader>\r\n                                                                                <TableHead>\r\n                                                                                    <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                                                        <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n                                                                                        <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n                                                                                        <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n                                                                                        <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n                                                                                        <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                </TableHead>\r\n                                                                                <TableBody sx={{borderRadius: '0px'}}>\r\n                                                                                    {contentCategorySelectedExamining.categoryContents.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                                        <TableRow hover role=\"checkbox\" key={healthRecordsIndex}>\r\n                                                                                            <TableCell align='left' sx={{width: '158px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{healthRecordsItem.examinationName}</TableCell>\r\n                                                                                            <TableCell align='left' sx={{width: '144px'}}>{handleRenderExamsStatus(healthRecordsItem.state)}</TableCell>\r\n                                                                                            <TableCell align='left' sx={{width: '108px'}}>{moment(healthRecordsItem.timeRegister).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                                                                            <TableCell align='left' sx={{width: '115px'}}>{healthRecordsItem.doctorFullName}</TableCell>\r\n                                                                                            <TableCell align='left' sx={{width: 'auto'}}>{healthRecordsItem.conclusion}</TableCell>\r\n                                                                                        </TableRow>\r\n                                                                                    ))}\r\n                                                                                </TableBody>\r\n                                                                            </Table>\r\n                                                                        </TableContainer>\r\n                                                                    </>\r\n                                                                :\r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', lineHeight: 1, mt: 1}}>{contentCategorySelectedExamining.healthRecordsName}</Typography>\r\n                                                                    <div className='health-record-content'>\r\n                                                                        <List sx={{p: 0}}>\r\n                                                                            {contentCategorySelectedExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => (\r\n                                                                                <div key={`categoryPatients ${categoryPatientsIndex}`}>\r\n                                                                                    <ListItemButton     \r\n                                                                                        sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                                                                        onClick={() => handleOpenHealthRecordsItem(categoryPatientsIndex)}\r\n                                                                                    >\r\n                                                                                        <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseHealthRecordsItem[categoryPatientsIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                                                            <ListItemText primary={categoryPatientsItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                                        </Box>\r\n                                                                                    </ListItemButton>\r\n\r\n                                                                                    <Collapse in={openCollapseHealthRecordsItem[categoryPatientsIndex]} timeout=\"auto\" unmountOnExit>\r\n                                                                                        <div className='header-health-record' style={{marginTop: '0.4x', marginBottom: '0.4px', border: '2px solid #00bcd4', borderRadius: '20px'}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{fontWeight: 'bolder', textAlign: 'center'}}>{categoryPatientsItem.categoryContents.categoryContentTitle}</Typography>\r\n\r\n                                                                                            <div className='content-health-record' style={{padding: '10px'}} >                                                                                                                                                                \r\n                                                                                                <Grid container rowSpacing={0}>\r\n                                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryPatientsItem.categoryContents.categoryContentName}</Typography>\r\n                                                                                                    </Grid>\r\n\r\n                                                                                                    <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                        <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryPatientsItem.categoryContents.categoryContentCheck}</Typography>\r\n                                                                                                    </Grid>\r\n\r\n                                                                                                    <Grid item xs={5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryPatientsItem.categoryContents.categoryContentText}</Typography>\r\n                                                                                                    </Grid> \r\n                                                                                                    \r\n                                                                                                    {categoryPatientsItem.categoryContents.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                                                        <Box key={`questionItem ${questionIndex} healthRecordsName ${contentCategorySelectedExamining.healthRecordsName}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                                            </Grid>\r\n\r\n                                                                                                            {questionItem.categoryContentQuestionType === 'check' ?\r\n                                                                                                                <>\r\n                                                                                                                    <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                                                        <Checkbox classes={{ root: classes.root }} checked={questionItem.categoryContentAnswer === true ? true : false }\r\n                                                                                                                            disabled={contentCategorySelectedExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                            sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                                                            onClick={(e) => handleAnswerCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsItem.currentHealthRecordsContent, questionIndex, questionItem.categoryContentAnswer)} \r\n                                                                                                                        />\r\n                                                                                                                    </Grid>\r\n                                                                                                                \r\n                                                                                                                    <Grid item xs={5} >\r\n                                                                                                                        <div className='note-for-answer'>\r\n                                                                                                                            <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex}`}>                                                                          \r\n                                                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                    disabled={contentCategorySelectedExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                    onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsItem.currentHealthRecordsContent, questionIndex, e.target.value)}    \r\n                                                                                                                                />\r\n                                                                                                                            </div>\r\n                                                                                                                        </div>\r\n                                                                                                                    </Grid>\r\n                                                                                                                </>\r\n                                                                                                            :\r\n                                                                                                                <>\r\n                                                                                                                    <Grid item xs={8} >\r\n                                                                                                                        <div className='note-for-answer'>\r\n                                                                                                                            <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex}`}>                                                                          \r\n                                                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                    disabled={contentCategorySelectedExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                    onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsItem.currentHealthRecordsContent, questionIndex, e.target.value)}    \r\n                                                                                                                                />\r\n                                                                                                                            </div>\r\n                                                                                                                        </div>\r\n                                                                                                                    </Grid>\r\n                                                                                                                </>\r\n                                                                                                            }\r\n                                                                                                        </Box>\r\n                                                                                                    ))}\r\n                                                                                                </Grid>\r\n                                                                                            </div>\r\n\r\n                                                                                            <div className='footer-content-examining' style={{backgroundColor: '#00bcd4', position: 'unset'}}>\r\n                                                                                                <Pagination count={categoryPatientsItem.contentQuantity} page={categoryPatientsItem.currentHealthRecordsContent} \r\n                                                                                                    color=\"error\" sx={{m: 'auto'}} onChange={(e, value) => handeOnChangePageHealthRecords(e, value, categoryPatientsIndex)}>\r\n                                                                                                </Pagination>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Collapse>\r\n                                                                                </div>\r\n                                                                            ))}\r\n\r\n                                                                            {contentCategorySelectedExamining.conclusion !== null ?\r\n                                                                                <>\r\n                                                                                    <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                                                                        <Typography variant='h6' sx={{color: 'blueviolet', fontWeight: 'bolder'}}>{`Kết luận của bác sĩ: ${contentCategorySelectedExamining.conclusion}`}</Typography>\r\n                                                                                    </div>\r\n                                                                                </>\r\n                                                                                :\r\n                                                                                    null\r\n                                                                            }\r\n\r\n                                                                        </List>\r\n                                                                    </div>\r\n                                                                </>\r\n                                                            }\r\n                                                        </Box>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n\r\n                                        {contentCategorySelectedExamining.categoryContentQuestions ? \r\n                                                contentCategorySelectedExamining.isNullCategoryPres === true && contentCategorySelectedExamining.isLock === true ? \r\n                                                    null\r\n                                                : \r\n                                                    <>\r\n                                                        <div className='footer-content-examining'>\r\n                                                            <Pagination count={categorySelectedExamining.contentQuantity} page={currentContentExamining} color=\"success\" sx={{m: 'auto'}} onChange={(event, value) => handleOnChangePage(event, value)} />\r\n                                                        </div>\r\n                                                    </>\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n\r\n            <CompleteExamining openModalCompleteExamining={openModalCompleteExamining} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n                handleCompleteExaminingForPantient={handleCompleteExaminingForPantient} dataExaminingForConclusion={dataExaminingForConclusion}\r\n            />\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n            />\r\n            {/* <AlertConfirm openAlertConfirmModal={openAlertConfirmModal.open} onCloseAlertConfirmModal={setOpenAlertConfirmModal} \r\n                titleConfirm={openAlertConfirmModal.title} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDoctorExamining","import { BrowserRouter, Route, Link, Switch, NavLink, HashRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport Header from \"../components/Nav/Header.jsx\";\nimport Page404 from \"../components/ErrorPage/Page404\";\nimport Login from \"../components/LoginAccount/Log-in\";\nimport MainMedicalRegister from \"../components/MedicalRegister/MainMedicalRegister.jsx\";\nimport MainAppointmentExamining from \"../components/MedicalAppointment/MainAppointmentExamining.jsx\";\nimport MainDoctorExamining from \"../components/DoctorExamining/MainDoctorExamining.jsx\";\n\nconst AppRoutes = (props) => {\n  return (\n    <>\n      <HashRouter>\n        {/* <Header />{\" \"} */}\n        <Switch>\n          <Route exact path=\"/\">home{\" \"}</Route>\n          <Route path=\"/login\"><Login /></Route>\n          <PrivateRoutes path=\"/medicalregister\" component={MainMedicalRegister}></PrivateRoutes>\n          <PrivateRoutes path=\"/doctor-examining\" component={MainDoctorExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/remind-examining\" component={MainAppointmentExamining}></PrivateRoutes>\n          <Route path=\"*\"><Page404 />{\" \"}</Route>\n          {/* <PrivateRoutes path=\"/users\" component={Users} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\nexport default AppRoutes;\n","import \"./App.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Nav/Header\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <div className=\"header-container\">\n          <Header />\n        </div>\n\n        <div className=\"app-container\">\n          <AppRoutes />\n        </div>\n      </HashRouter>\n\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}