{"version":3,"sources":["Service/UserService.jsx","components/ManageChangePassword/ChangePassword.jsx","assets/image/logo.png","components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop.jsx","context/UserContext.jsx","Service/SignalService.jsx","components/Nav/Header.jsx","routes/PrivateRoutes.js","components/ErrorPage/Page404.js","components/ManageRegister/Register.jsx","Service/MedicalService.jsx","components/LoginAccount/Log-in.jsx","components/ManageAlertProcessing/AlertProcessing.jsx","Service/PlaceService.jsx","components/ManageInfoPantients/ManageInfoPantients.jsx","components/MedicalRegister/ListPatientsRegister.jsx","components/ManageExaminingSession/ExaminingSession.jsx","components/ManageOldDisease/OldDisease.jsx","components/MedicalRegister/BookMedical.jsx","components/MedicalRegister/MainMedicalRegister.jsx","components/MedicalAppointment/MainAppointmentExamining.jsx","components/ManageCompleteExamining/CompleteExamining.jsx","components/DoctorExamining/PreviewLastExamining.jsx","components/DoctorExamining/MainDoctorExamining.jsx","Service/StatisticsService.jsx","components/Dashboard/MainDashboard.jsx","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["backendURL","ChangePassword","props","inputPasswordDefault","currentPassword","openCurrentPassword","newPassword","openNewPassword","inputPassword","setInputPassword","useState","loading","setLoading","handleCloseModalChangePassword","event","reason","setIsDialogChangePasswordOpen","setOpenModalChangePassword","setTimeout","handleChangePassword","async","Promise","resolve","handleValidate","isValid","toast","warning","toastId","inputPayloadPassword","password","passwordOld","responseUpdatePassword","token","localStorage","getItem","axios","put","concat","headers","Authorization","then","response","catch","error","updatePassword","status","data","success","_jsx","_Fragment","children","_jsxs","Dialog","maxWidth","fullWidth","open","openModalChangePassword","onClose","disableEscapeKeyDown","DialogTitle","sx","m","p","fontWeight","fontSize","IconButton","onClick","position","right","top","CloseIcon","DialogContent","dividers","display","flexDirection","alignItems","style","justifyContent","CircularProgress","TextField","autoFocus","label","variant","type","width","mb","onChange","e","value","_inputPassword","onChangeNewPassword","target","InputProps","endAdornment","InputAdornment","handleClickShowNewPassword","padding","VisibilityIcon","VisibilityOffIcon","onChangeCurrentPassword","handleClickShowCurrentPassword","Stack","spacing","direction","Button","height","color","margin","AlertProcessingBackdrop","Backdrop","zIndex","theme","drawer","backgroundColor","changeBackground","openAlertProcessingBackdrop","Box","Typography","mt","alertTitle","UserContext","React","createContext","UserProvider","_ref","userDefault","isAuthenticated","isLogin","user","setUser","alertVisible","setAlertVisible","isLogOutClick","setIsLogOutClick","onConfirm","setOnConfirm","setOpenAlertProcessingBackdrop","isDialogChangePasswordOpen","isOldDiseaseWithNullCodeWard","setIsOldDiseaseWithNullCodeWard","resetAlert","checkJWTExpire","result","getJWT","decodeJWT","JSON","parse","atob","split","parseJwt","currentDate","Date","exp","getTime","removeItem","sessionStorage","clear","useEffect","getUserLogin","Provider","loadingContext","loginContext","userContextLogin","logoutContext","triggerAlert","confirmCallback","confirmAlert","connection","startSignalRConnection","console","log","signalR","withUrl","accessTokenFactory","transport","WebSockets","ServerSentEvents","LongPolling","withAutomaticReconnect","configureLogging","Information","build","start","on","message","onReceiveMessage","callback","withRouter","useContext","location","useLocation","history","useHistory","anchorEl","setAnchorEl","Boolean","actionNursing","key","icon","LocalHospitalIcon","LinkComponent","NavLink","to","LocalPhoneIcon","actionDoctor","MedicationLiquidIcon","actionAdmin","BarChartIcon","userAction","setUserAction","pathname","findIndex","action","handleLogout","positionName","invoke","removeFromGroup","push","AppBar","Toolbar","Avatar","src","Logo","mr","BottomNavigation","showLabels","flexGrow","map","actionItem","BottomNavigationAction","handleClick","preventDefault","currentTarget","textTransform","userFullName","Menu","MenuItem","exact","PrivateRoutes","Route","path","component","Redirect","Page404","className","CreateAccount","showPassword","setShowPassword","handleCloseModalRegister","setOpenModalRegister","openModalRegister","handleClickShowPassword","Autocomplete","options","id","option","renderInput","params","createConfig","createMedicalBackRegister","post","dataPatientsRegister","createAddPredecessor","dataPredecessor","createNotificationForMedicalRegister","getRegistersByDateNow","config","get","getListMedicalExaminationsGiveRegister","dayOfBirth","getVaccinationByPatientId","patientId","getMedicalBook","medicalRegisterId","getUpdatePredecessor","getAppointmentsNextWeek","updateMedicalState","state","updateStateAppointment","dataAppointment","stateAppointment","medicalBookId","appointmentDate","Login","userAccount","setUserAccount","userName","handleLogin","userLogin","tokenDTO","setItem","userId","stringify","handleKeyDown","document","addEventListener","removeEventListener","Container","borderRadius","ml","textAlign","autoComplete","onChangeUserName","prevUserAccount","onChangeUserPassword","onKeyDown","which","code","handlePressEnter","cursor","Register","AlertProcessing","openAlertProcessing","getListProvince","getListDistrict","provinceId","getListWard","districtId","getFullAddressByIdWard","codeWard","ManageInfoPantients","dataPatientInfoDefault","examinationId","weight","headCircumference","vaccination","patient","identifier","address","fullName","gender","fullNameMother","phoneMother","fullNameFather","phoneFather","dataPatientInfoErrorDefault","title","isError","openTooltip","focus","examiningSession","province","district","ward","listGender","genderOrder","genderName","genderValue","selectedAutoCompleteDefault","openOption","typingRef","useRef","dateFieldRef","dataPatientInfoNotEdit","setDataPatientInfoNotEdit","dataPatientInfo","setDataPatientInfo","dataPatientInfoError","setDataPatientInfoError","selectedAutoComplete","setSelectedAutoComplete","listExaminingSession","setListExaminingSession","listProvince","setListProvince","listDistrict","setListDistrict","list","listWard","setListWard","focusField","setFocusField","setOpenAlertProcessing","tooltipTheme","createTheme","components","MuiTooltip","defaultProps","placement","arrow","componentsProps","tooltip","bgcolor","slotProps","popper","modifiers","name","offset","handleFocus","fieldName","prevSelectedAutoComplete","handleBlur","test","filterOptions","inputValue","lowercasedInput","toLowerCase","filter","lowercasedFullName","initials","word","join","includes","onChangeDOBToGetExaminingSession","responseListMedicalExaminationsGiveRegister","formattedDate","exams","handleCloseModalInfoPantients","prevListDistrict","prevListWard","setSelectedPantientInfo","setOpenModalInfoPantients","handleUpdateMedicalRegister","checkValidate","_dataPatientInfoError","Object","values","every","item","current","_","isEqual","updateMedicalRegister","setCompleteMedicalRegister","length","responseListProvince","handleGetListProvince","selectedPantientInfo","setIsContinueUpdateMedicalRegister","editPropsDataPatientInfo","cloneDeep","responseListDistrict","provinceCode","responseListWard","districtCode","selectedGender","find","indexListExamining","indexListProvince","indexListDistrict","indexListWard","wardCode","handleApplyPantientDataToField","openModalInfoPantients","isContinueUpdateMedicalRegister","pt","pb","flexWrap","pl","pr","ThemeProvider","Tooltip","marginTop","inputProps","maxLength","inputRef","input","defaultValue","takenValue","clearInterval","prevDataPatientsRegister","onChangeIdentifier","prevDataPatientInfo","onChangeFullName","getOptionLabel","renderOption","onSelectGender","onFocus","onBlur","disableClearable","popupIcon","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DemoContainer","DatePicker","format","moment","disableFuture","disableOpenPicker","textField","_d","today","yearsDifference","getFullYear","monthsDifference","getMonth","daysDifference","getDate","age","totalMonths","totalDays","isNaN","onChangeDOB","noOptionsText","onSelectExaminingSession","size","onSelectProvine","onSelectDistrict","onSelectWard","onChangeAddress","onChangeFullNameMother","onChangePhoneMother","onChangeFullNameFather","onChangePhoneFather","onChangeHeight","onChangeWeight","onChangeHeadCircumference","FormControlLabel","control","Checkbox","checked","onChangeVaccination","bool","DialogActions","ListPatientsRegister","activeChip","setActiveChip","chipOrder","chipLabel","listPantientChipState","setListPantientChipState","chipContent","listDataPatientsRegister","setListDataPatientsRegister","listDataPatientsAppointmentsToday","setListDataPatientsAppointmentsToday","searchPatientsQuery","setSearchPatientsQuery","listDataPatientsRegisterState","setListDataPatientsRegisterState","listDataPatientsRegisterSort","setListDataPatientsRegisterSort","searchPatients","patients","searchTerm","lowerCaseSearchTerm","patientObj","handleGetRegistersByDateNow","responseGetAppointmentsToday","getAppointmentsToday","_listDataPatientsAppointmentsToday","updatedList","patientFullName","dateOfBirth","fullAddress","nextExamId","listPantientRegisterWaiting","patientsRegisterItem","listCountState","listPantientRegisterDone","setComponent1Loading","keyCode","completeMedicalRegister","border","boxShadow","pantientChipStateItem","pantientChipStateIndex","Badge","badgeContent","Chip","handleSelectedChip","chipIndex","placeholder","handleSearchPantient","startAdornment","SearchIcon","titleAccess","TableContainer","Paper","overflowX","borderBottomLeftRadius","borderBottomRightRadius","Table","stickyHeader","minWidth","TableHead","TableRow","TableCell","align","TableBody","patientsRegisterSortItem","patientsRegisterSortIndex","hover","role","onDoubleClick","responseVaccinationByPatientId","dataPantientOldOldDiseaseRegister","oldDisease","medicalTypeId","userIdDoctor","setDataPantientAppointmentsToday","handleSelectedPantientAppointmentsToday","handleSelectedPantientInfo","order","whiteSpace","overflow","textOverflow","ExaminingSession","isConfirmOpen","setIsConfirmOpen","handleListMedicalExaminationsGiveRegister","getListMedicalExaminationsGiveOldRegister","handleMedicalRegister","isAppointment","oldExams","setIsContinueSelectedExaminingSession","setOpenModalExaminingSession","handleResetField","createMedicalRegister","handleOpenConfirm","openModalExaminingSession","isContinueSelectedExaminingSession","monthsOfAge","Grid","container","rowSpacing","xs","oldExamItem","oldExamIndex","RadioGroup","onChangeRadioSelect","examItem","examIndex","Radio","OldDisease","dataPatientsForSearchOldDiseaseDefault","phone","dataPatientsForSearchOldDiseaseErrorDefault","listFoundOldDisease","setListFoundOldDisease","dataPatientsForSearchOldDisease","setDataPatientsForSearchOldDisease","dataPatientsForSearchOldDiseaseError","setDataPatientsForSearchOldDiseaseError","selectedRowIndex","setSelectedRowIndex","formRef","tableRef","handleEnterPress","_dataPatientsForSearchOldDiseaseError","handleCloseModalOldDisease","setOpenModalOldDisease","handleFindOldDisease","getListOldDisease","reset","querySelectorAll","forEach","dispatchEvent","Event","bubbles","handleClickFindOldDisease","validate","handleApplyDataPatientOldDisease","foundOldDiseaseItem","oldDiseaseWithNullCodeWard","setDataPatientsRegister","openModalOldDisease","ref","prevDataPatientsForSearchOldDisease","onChangePatientId","date","onChangeDayOfBirth","onChangePhone","tabIndex","prevIndex","Math","min","max","handleTableKeyDown","foundOldDiseaseIndex","selected","BookMedical","dataPatientsRegisterDefault","autocompleteValueDefault","medicalType","dataPatientsRegisterErrorDefault","listMedicalType","medicalTypeOrder","medicalTypeName","dataPatientsRegisterError","setDataPatientsRegisterError","autocompleteValue","setAutocompleteValue","firstFocusRef","replaceSpecialCharacters","str","replace","normalizedInput","prevAutocompleteValue","_dataPatientsRegisterError","dataPantientAppointmentsToday","handleMedicalBackRegister","responseCreateMedicalBackRegister","handleOpenModalOldDisease","getElementById","_autocompleteValue","indexListGender","indexListMedicalType","handleApplyPantientOldDiseaseData","handleApplyPantientAppointmentsTodayData","onF2Press","setOnF2Press","onF4Press","setOnF4Press","onF8Press","setOnF8Press","minHeight","PopperProps","disabled","WebkitTextFillColor","InputLabelProps","shrink","DateField","disablePortal","onSelectMedicalType","paddingLeft","paddingRight","multiline","rows","onChangeReason","MainMedicalRegister","component1Loading","setHandleResetField","handleOpenModalExaminingSession","setHandleOpenModalExaminingSession","setHandleOpenModalOldDisease","marginLeft","Skeleton","MainAppointmentExamining","listPantientAppointmentChipState","listAppointment","setListAppointment","listDataPatientsAppointmentPaginate","setListDataPatientsAppointmentPaginate","listDataPatientsAppointmentState","setListDataPatientsAppointmentState","listDataPatientsAppointmentSort","setListDataPatientsAppointmentSort","page","setPage","pageCount","setPageCount","setDataAppointment","handlePaginate","calculatedPageCount","ceil","startIndex","newCurrentItems","slice","handleAcceptReExamining","findDataAppointment","responseUpdateStateAppointment","responseGetAppointmentsNextWeek","_listAppointmentNotRemind","_listAppointmentAcceptReExamining","_listAppointmentRejectReExamining","updateListPantientAppointmentChipState","dataAppointmentNotRemind","dataAppointmentAcceptReExamining","dataAppointmentRejectReExamining","handleRejectReExamining","handleGetAppointmentsNextWeek","pantientAppointmentChipStateItem","pantientAppointmentChipStateIndex","dataPantientAppointmentItem","dataPantientAppointmentIndex","examNameOld","nextExamName","disablePast","minDate","onChangeAppointmentDate","convertAppointmentDateFindDataAppointment","CheckIcon","CancelIcon","Pagination","count","handlePageChange","CompleteExamining","mainDataExaminingForConclusion","setMainDataExaminingForConclusion","textareaRef","classes","makeStyles","root","useStyles","handleCloseModalCompleteExamining","setOpenModalCompleteExamining","handleSetDataCompleteExamining","editDataExaminingForConclusion","clone","dataExaminingForConclusion","categories","categoriesItem","categoryContents","categoryContentsItem","categoryContentQuestions","responseAppointmentDate","getAppointmentDate","isVaccination","nextVaccination","reminder","conclusion","setSelectionRange","handleAddMedicalBook","some","isPredecessor","categoryPres","categoriesHealthRecordExamining","isHealthRecord","responseAddMedicalBook","dataMedicalBook","createAddMedicalBook","handleCompleteExaminingForPantient","openModalCompleteExamining","List","categoriesIndex","categoryName","categoryContentsIndex","marginBottom","categoryContentTitle","questionItem","questionIndex","borderRight","categoryContentName","categoryContentQuestionType","CheckBoxIcon","lineHeight","categoryContentCheck","categoryContentText","borderTop","categoryContentQuestionName","categoryContentAnswer","TextareaAutosize","categoryContentNote","onChangeExaminingConclusion","prevMainDataExaminingForConclusion","locale","PreviewLastExamining","previewDataExamining","setPreviewDataExamining","healthRecords","examinationName","timeUpdateState","medicakBook","nutritionals","vaccinationBook","loadingMedicalBook","setLoadingMedicalBook","openCollapsePredecessorItem","setOpenCollapsePredecessorItem","openCollapseMedicakBookItem","setOpenCollapseMedicakBookItem","prevDataExamining","responseMedicalBook","healthRecordsItem","newPredecessor","healthRecordsUpdate","newMedicalBook","medicalBookIdRecently","sort","a","b","categoryOrder","handleEditPrevDataExamining","predecessorItem","predecessorIndex","ListItemButton","prevOpen","newOpen","handleOpenPredecessorItem","ListItemIcon","transform","SendIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","predecessorItemCategoryContentsItem","predecessorItemCategoryContentsIndex","medicakBookItems","medicakBookIndex","handleOpenMedicakBookItem","medicakBookCategoryContentsItem","medicakBookCategoryContentsIndex","doctorFullName","MainDoctorExamining","dataPantientsReadyExaminingDefault","stt","patientsId","patientsName","patientsDOB","patientsMonthsOld","patientsGender","patientsHeight","patientsWeight","patientsHeadCircumference","patientsPhone","patientsAddress","isFormDirty","setIsFormDirty","dataPantientsReadyExamining","setDataPantientsReadyExamining","mainDataExamining","setMainDataExamining","setPrevDataExamining","openCollapseHealthRecords","setOpenCollapseHealthRecords","openCollapseHealthRecordsItem","setOpenCollapseHealthRecordsItem","categorySelectedExamining","setCategorySelectedExamining","contentCategorySelectedExamining","setContentCategorySelectedExamining","healthRecordsContents","setHealthRecordsContents","currentHealthRecordExamining","setCurrentHealthRecordExamining","previewPredecessor","setPreviewPredecessor","setDataExaminingForConclusion","oldDataPredecessor","setOldDataPredecessor","newDataPredecessor","setNewDataPredecessor","prevDataPredecessor","setPrevDataPredecessor","loadingPrevDataExamining","setLoadingPrevDataExamining","loadingPatient","setLoadingPatient","loadingInfoPatient","setLoadingInfoPatient","loadingCategoryExamining","setLoadingCategoryExamining","loadingContentsExamining","setLoadingContentsExamining","handleCancelExamining","editExamining","backRegister","handleDeleteExamining","window","confirm","responseDeleteMedicalBook","delete","deleteMedicalBook","handleStartExaminingButtonClick","handleBeginExaminingForPantient","alert","handleBeginEditExaminingForPantient","handleCompleteExaminingButtonClick","findListPantientNotExam","handleAppyPantientData","handleGetMedicalDetailPatient","dataPantientItem","_dataPantientsReadyExamining","isContinueExam","_listDataPatientsRegister","findIndexPatient","handleSetMainDataExamining","handleGetCategoryReExamining","editPrevDataExaminingCategoryPres","responseGetUpdatePredecessorItem","matchingPrevDataExamining","prevDataExaminingCategoryPresItem","isLock","content2","content1","categoryContentOrder","matchingContent1","isNullCategoryPres","responseGetUpdateMedicalBook","updateHealthRecordsCategoriesForConclusion","category","content","demoDataExaminingForConclusion","healthRecordsName","categoryPatients","updateCategoriesForConclusion","editCategoryContents","itemCategoryContents","newCategoriesDemoDataExaminingForConclusion","editDataCategoryPresForConclusion","mainCategoryContentsExamining","editDataHealthRecordsForConclusion","categoryPresItem","categoryPresIndex","categoryPresOrder","getUpdateMedicalBook","handleSetMainDataReExamining","responseGetUpdateMedicalBookData","questions","allNull","q","responseGetUpdatePredecessor","handleNoteValueQuestionPredecessorForReExamOrBackExam","_categorySelectedExamining","createSelectedQuestionsValuePredecessorForReExamOrBackExam","categoryContentQuestion","findNewDataPredecessorCategoryOrder","newDataPredecessorCategoryPresItem","findNewDataPredecessorCategoryContents","newDataPredecessorCategoryContentsItem","newDataPredecessorcategoryContentQuestionsItem","categoryContentQuestionOrder","questionIndexRemove","splice","newDataPredecessorCategoryContents","newDataPredecessorCategoryPres","newCategoryPre","createSelectedQuestionsPredecessorForReExamOrBackExam","isEditNote","questionIndexNoteDontExit","createPreviewDataPredecessor","handleSaveNewDataPredecessor","saveNewDataPredecessor","findNewDataPredecessor","responseCreateAddPredecessor","_mainDataExamining","selectCategoryReExamining","handleSelectCategoryClick","responseDataExamining","getMedicalDetailPatient","previewDataPredecessor","flatMap","question","healthRecordsContentsType","categoryIncludeCotent","findHealthRecord","healthRecordsState","editDataHealthRecordsItemForConclusion","_dataExaminingForConclusion","dataHealthRecordsItemForConclusionItem","handleAnswerValueQuestion","createSelectedQuestionsExaminingForConclusion","handleNoteCheckQuestionHealthRecords","categoryPatientsIndex","categoryPatientsContentsIndex","_healthRecordsContents","questionOrder","existingQuestion","categoryContentQuestionsItem","_previewPredecessor","findQuestion","handleReceiveMessage","medicalRegisterMessage","handleBeforeUnload","confirmationMessage","returnValue","unblock","block","_dataPatientsRegisterSort","handleUnload","reDataPatientsRegisterSort","dataPatientsRegisterSort","reDataPantientsReadyExamining","reMainDataExamining","reDataExaminingForConclusion","reCurrentHealthRecordExamining","rePrevDataPredecessor","reOldDataPredecessor","handleReloadUIWhenExamining","dataPantientIndex","handleSelectPantientExamining","CheckCircleIcon","edge","findUpdatePredecessor","handleEditDataPredecessor","EditIcon","handleEditDataPredecessorForSaving","findOldDataPredecessorCategoryOrder","oldDataPredecessorItem","findNewDataPredecessorCategoryContentsItem","findOldDataPredecessorCategoryContentsItem","newQ","findNewDataPredecessorQuestionItem","contentCategoryContentsItem","removeOldDataPredecessorCategoryPres","BeenhereIcon","handleCancelEditDataPredecessor","findPrevDataPredecessorByCategoryName","prevDataPredecessorItem","removeCategoryPredecessor","handleSelectHealthRecords","healthRecordsIndex","handleSelectHealthRecordsItem","FiberManualRecordIcon","columnSpacing","sm","md","PinIcon","PersonIcon","MaleIcon","FemaleIcon","CalendarMonthIcon","InfoIcon","PhoneIcon","GiBodyHeight","GiWeightScale","TbRulerMeasure","Home","index","handleAnswerCheckQuestionPredecessorForReExamOrBackExam","answer","handleAnswerCheckQuestion","handleNoteCheckQuestionPredecessorForReExamOrBackExam","handleNoteCheckQuestion","DescriptionIcon","timeRegister","categoryPatientsItem","handleOpenHealthRecordsItem","categoryPatientsContentsItem","handleAnswerCheckQuestionHealthRecords","currentHealthRecordsContent","getReportPatient","dateSelectedReport","dateStart","dateEnd","MainDashboard","setDateSelectedReport","mainDataDashboard","setMainDataDashboard","loadingDataDashboard","setLoadingDataDashboard","editMainDataDashboard","dayExam","examName","handleGetReportPatient","_dateSelectedReport","onChangeDateStart","onChangeDateEnd","DataGrid","localeText","viVN","MuiDataGrid","row","columns","field","headerName","headerAlign","pageSizeOptions","handleExportExcel","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","startIcon","RiFileExcel2Fill","toolbar","formattedRows","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","disableRowSelectionOnClick","AppRoutes","HashRouter","Switch","App","Header","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d86f787e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n//import SignalService from \"./SignalService.jsx\"\r\n\r\nconst backendURL = 'https://api-knkpt.somee.com';\r\n\r\nconst createConfig = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\nconst userLogin = async (userName, password) => {\r\n  return await axios.post(`${backendURL}/api/UserAccount/Login`, { userName, password })\r\n  .then(function (response) {\r\n    //SignalService.startSignalRConnection(response.data.tokenDTO.token)\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n};\r\n\r\nconst getUserLogin = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetUserLogin`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst getGetListDoctor = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetDoctors`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst updatePassword = async (inputPayloadPassword) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/UserAccount/ChangePassword`, inputPayloadPassword, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    userLogin, \r\n    getUserLogin, getGetListDoctor,\r\n    updatePassword\r\n}\r\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { toast } from 'react-toastify';\r\n//api\r\nimport { updatePassword } from '../../Service/UserService';\r\n\r\nfunction ChangePassword(props) {\r\n    const inputPasswordDefault = {\r\n        currentPassword: '',\r\n        openCurrentPassword: false,\r\n        newPassword: '',\r\n        openNewPassword: false\r\n    }\r\n\r\n    const [inputPassword, setInputPassword] = useState(inputPasswordDefault);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleCloseModalChangePassword = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            props.setIsDialogChangePasswordOpen(false);\r\n            props.setOpenModalChangePassword(false);\r\n            setTimeout(() => {\r\n                setInputPassword(inputPasswordDefault);\r\n            }, 200)\r\n        }\r\n    }\r\n\r\n    const handleClickShowCurrentPassword = () => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.openCurrentPassword = !inputPassword.openCurrentPassword\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const handleClickShowNewPassword = () => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.openNewPassword = !inputPassword.openNewPassword\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const onChangeCurrentPassword = (value) => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.currentPassword = value\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const onChangeNewPassword = (value) => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.newPassword = value\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const handleValidate = () => {\r\n        let isValid = true;\r\n        if(inputPassword.currentPassword === ''){\r\n            toast.warning('Bạn chưa nhập mật khẩu hiện tại!', {toastId: 'validateCurrentPassword'})\r\n            isValid = false;\r\n        }\r\n        \r\n        if(inputPassword.newPassword === ''){\r\n            toast.warning('Bạn chưa nhập mật khẩu mới!', {toastId: 'validateNewPassword'})\r\n            isValid = false\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    const handleChangePassword = async () => {\r\n        setLoading(true);\r\n        await new Promise(resolve => setTimeout(resolve, 2 * 100));\r\n        if(handleValidate()){\r\n            const inputPayloadPassword = { password: inputPassword.newPassword, passwordOld: inputPassword.currentPassword }\r\n            const responseUpdatePassword = await updatePassword(inputPayloadPassword);\r\n\r\n            if(responseUpdatePassword.status === 400 && responseUpdatePassword.data === 'Tài khoản hoặc mật khẩu không chính xác !'){\r\n                toast.error('Mật khẩu hiện tại không chính xác.', {toastId: 'handleChangePasswordError1'})\r\n            }\r\n            else if(responseUpdatePassword.status === 400){\r\n                toast.error(responseUpdatePassword.data, {toastId: 'handleChangePasswordError2'})\r\n            }\r\n            else if(responseUpdatePassword.status === 200){\r\n                toast.success(responseUpdatePassword.data, {toastId: 'handleChangePasswordSuccess'})\r\n                handleCloseModalChangePassword();\r\n            }\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalChangePassword} onClose={(event, reason) => handleCloseModalChangePassword(event, reason)} disableEscapeKeyDown={true} >\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Đổi mật khẩu</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalChangePassword()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                \r\n                <DialogContent dividers sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                    {loading ? \r\n                        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                            <CircularProgress />\r\n                        </div>\r\n                    :\r\n                        <>\r\n                            <TextField autoFocus={true} label=\"Mật khẩu mới\" variant=\"outlined\" type={inputPassword.openNewPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeNewPassword(e.target.value)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={handleClickShowNewPassword} sx={{padding: '1px'}}> {inputPassword.openNewPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n\r\n                            <TextField label=\"Mật khẩu hiện tại\" variant=\"outlined\" type={inputPassword.openCurrentPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeCurrentPassword(e.target.value)} \r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={handleClickShowCurrentPassword} sx={{padding: '1px'}}> {inputPassword.openCurrentPassword  ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleChangePassword()}>Đổi mật khẩu</Button>\r\n                            </Stack>\r\n                        </>\r\n                    }\r\n\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChangePassword","export default __webpack_public_path__ + \"static/media/logo.e5a4a234.png\";","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessingBackdrop(props) {\r\n    return (\r\n        <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: props.changeBackground ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.6)' }} open={props.openAlertProcessingBackdrop}>\r\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <CircularProgress color='inherit' />\r\n                <Typography sx={{mt: 1.4,}} variant='subtitle1'>{props.alertTitle}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n\r\nexport default AlertProcessingBackdrop\r\n","import React, { useState, useEffect } from 'react';\r\n//modal\r\nimport AlertProcessingBackdrop from '../components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n\r\n    const userDefault = {\r\n        isAuthenticated: false,\r\n        isLogin: false,\r\n        token: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(userDefault);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [isLogOutClick, setIsLogOutClick] = useState(false);\r\n    const [onConfirm, setOnConfirm] = useState(null);\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [isDialogChangePasswordOpen, setIsDialogChangePasswordOpen] = useState(false);\r\n\r\n    const [isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard] = useState(false);\r\n\r\n    const loginContext = (userContextLogin) => {\r\n        setUser({ ...userContextLogin });\r\n        setLoading(false);\r\n    };\r\n\r\n    const triggerAlert = (confirmCallback) => {\r\n        setAlertVisible(true);\r\n        setIsLogOutClick(true);\r\n        setOnConfirm(() => confirmCallback);\r\n    };\r\n\r\n    const confirmAlert = () => {\r\n        if (onConfirm) onConfirm();\r\n        setIsLogOutClick(false);\r\n        resetAlert();\r\n    };\r\n\r\n    const resetAlert = () => {\r\n        setAlertVisible(false);\r\n        setIsLogOutClick(false);\r\n        setOnConfirm(null);\r\n    };\r\n\r\n    const logoutContext = () => {\r\n        setUser({ ...userDefault });\r\n    }\r\n\r\n    const loadingContext = (loading) => {\r\n        setLoading(...loading);\r\n    }\r\n\r\n    // const fetchUser = async () => {\r\n    //     setOpenAlertProcessingBackdrop(true);\r\n    //     const response = await getUserLogin();\r\n    //     setUser({\r\n    //             isAuthenticated: true, \r\n    //             isLogin: true,\r\n    //             userId: response.userId,\r\n    //             userFullName: response.userFullName,\r\n    //             positionName: response.positionName\r\n    //         }) \r\n    //     setLoading(false);\r\n    //     setOpenAlertProcessingBackdrop(false);\r\n    // }\r\n\r\n    const parseJwt = (token) => {\r\n        try {\r\n          return JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n    };\r\n\r\n    const checkJWTExpire = () => {\r\n        let result = false;\r\n        let getJWT = localStorage.getItem('jwt');\r\n        if(getJWT){\r\n            let decodeJWT = parseJwt(getJWT);\r\n            let currentDate  = new Date();\r\n            if(decodeJWT.exp * 1000 < currentDate.getTime()) {\r\n                //console.log('Token đã hết hạn hoặc không tồn tại')\r\n                localStorage.removeItem('jwt'); //xóa localStorage\r\n                localStorage.removeItem('userLogin');\r\n                sessionStorage.clear();\r\n                return result \r\n            }\r\n            else{\r\n                //console.log('token còn hạn');\r\n                result = true;\r\n                return result\r\n            }\r\n        }\r\n        else{\r\n            localStorage.removeItem('userLogin');\r\n            return result\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n        if(getUserLogin){\r\n            const result = checkJWTExpire();\r\n            if(result){\r\n                const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n                setUser(getUserLogin);\r\n            }else{\r\n                //không có token\r\n                setUser(userDefault);\r\n            }\r\n        }else{\r\n            localStorage.removeItem('jwt'); //xóa localStorage\r\n            setUser(userDefault);\r\n        }\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <UserContext.Provider \r\n                value={{ user, loading, loadingContext, loginContext, \r\n                    logoutContext, alertVisible, triggerAlert, confirmAlert, resetAlert, isLogOutClick,\r\n                    isDialogChangePasswordOpen, setIsDialogChangePasswordOpen,\r\n                    isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard\r\n                }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop}\r\n                alertTitle={'Đang tải thông tin người dùng'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import * as signalR from '@microsoft/signalr';\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nlet connection = null; // Biến toàn cục lưu trữ kết nối SignalR\r\n\r\n// Hàm khởi tạo và kết nối SignalR\r\nconst startSignalRConnection = async (token) => {\r\n    if (connection) {\r\n        console.log('SignalR connection already established.');\r\n        return connection;\r\n    }\r\n\r\n    connection = new signalR.HubConnectionBuilder()\r\n        .withUrl(`${backendURL}/notificationHub`, {\r\n            accessTokenFactory: () => token,\r\n            transport: signalR.HttpTransportType.WebSockets |\r\n                        signalR.HttpTransportType.ServerSentEvents |\r\n                        signalR.HttpTransportType.LongPolling\r\n        })\r\n        .withAutomaticReconnect([0, 2000, 10000, 30000])\r\n        .configureLogging(signalR.LogLevel.Information)\r\n        .build();\r\n\r\n    // Khởi tạo kết nối, trả về promise để xử lý sau\r\n    try {\r\n        await connection.start(); // Bắt đầu kết nối\r\n        console.log(\"Connected to SignalR hub.\");\r\n\r\n        // Đăng ký sự kiện nhận tin nhắn, gọi callback khi nhận được tin nhắn\r\n        connection.on(\"ReceiveMessage\", (message) => {\r\n            console.log(\"Received message:\", message);\r\n            if (onReceiveMessage) {\r\n                onReceiveMessage(message); // Gọi callback được truyền vào\r\n            }\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error(\"Error connecting to SignalR hub:\", error);\r\n        setTimeout(() => startSignalRConnection(token, onReceiveMessage), 5000); // Thử kết nối lại sau 5 giây nếu gặp lỗi\r\n    }\r\n};\r\n\r\n// Hàm đăng ký sự kiện ReceiveMessage\r\nconst onReceiveMessage = (callback) => {\r\n    if (connection) {\r\n        connection.on(\"ReceiveMessage\", callback);\r\n    } else {\r\n        console.error(\"Connection has not been established yet.\");\r\n    }\r\n};\r\n\r\n// Hàm dừng kết nối SignalR\r\nconst stopSignalRConnection = async () => {\r\n    if (connection) {\r\n        try {\r\n            await connection.stop();\r\n            //console.log(\"Disconnected from SignalR hub.\");\r\n            connection = null;\r\n        } catch (error) {\r\n            console.error(\"Error disconnecting from SignalR hub:\", error);\r\n        }\r\n    }\r\n};\r\n\r\nconst removeFromGroup = async () => {\r\n    if (connection) {\r\n        try {\r\n            await connection.invoke('RemoveFromGroup');\r\n            console.log(\"User đã logout SignalR.\");\r\n        } catch (error) {\r\n            console.error(`Failed to remove user from group: ${error}`);\r\n        }\r\n    } else {\r\n        console.error(\"Connection has not been established yet.\");\r\n    }\r\n};\r\n\r\n// Hàm kiểm tra nếu đã kết nối\r\nconst isConnected = () => {\r\n    return connection !== null;\r\n};\r\n\r\nexport {\r\n    startSignalRConnection , stopSignalRConnection, onReceiveMessage, removeFromGroup, isConnected\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n//modal\r\n//import UserManual from '../ManageUserManual/UserManual';\r\nimport ChangePassword from '../ManageChangePassword/ChangePassword';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//real-time\r\nimport {removeFromGroup} from '../../Service/SignalService';\r\n\r\nfunction Header(props) {\r\n\r\n  const { user, logoutContext, triggerAlert, isDialogChangePasswordOpen, setIsDialogChangePasswordOpen, isOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  // const [openModalUserManual, setOpenModalUserManual] = useState(false);\r\n  const [openModalChangePassword, setOpenModalChangePassword] = useState(false);\r\n\r\n  //mui state menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  \r\n  const open = Boolean(anchorEl);\r\n  \r\n  const handleClick = (event) => {\r\n    if(isOldDiseaseWithNullCodeWard === true){\r\n      event.preventDefault();\r\n    }else{\r\n      setAnchorEl(event.currentTarget)\r\n    }\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const actionNursing = [\r\n    { key: 'medicalRegister', maxWidth: '114px', label: 'Đăng ký khám', icon: <LocalHospitalIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/medicalregister\" },\r\n    { key: 'remind-examining', maxWidth: '95px', label: 'Nhắc khám', icon: <LocalPhoneIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/remind-examining\" },\r\n  ]\r\n\r\n  const actionDoctor = [\r\n    { key: 'examining', maxWidth: '100px', label: 'Khám bệnh', icon: <MedicationLiquidIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/doctor-examining\" },\r\n  ]\r\n\r\n  const actionAdmin = [\r\n    { key: 'statistical', maxWidth: '83px', label: 'Thống kê', icon: <BarChartIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/dashboard\" },\r\n  ]\r\n\r\n  const [userAction, setUserAction] = useState([]);\r\n\r\n  const handleChangeURL = (pathname) => {\r\n    const actionIndex = userAction.findIndex(action => action.to === pathname);\r\n    return actionIndex;\r\n  }\r\n\r\n  const value = handleChangeURL(props.location.pathname);\r\n\r\n  const handleLogout = () => {\r\n    if(user.positionName === 'Doctor'){\r\n      triggerAlert(async () => {\r\n        await removeFromGroup();\r\n        localStorage.removeItem('jwt');\r\n        localStorage.removeItem('userLogin');\r\n        logoutContext();\r\n        setAnchorEl(null);\r\n        history.push('/login');\r\n      });\r\n    }\r\n    \r\n    else{\r\n      localStorage.removeItem('jwt'); //xóa localStorage\r\n      localStorage.removeItem('userLogin');\r\n      logoutContext();\r\n      setAnchorEl(null);\r\n      history.push('/login');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isOldDiseaseWithNullCodeWard])\r\n  \r\n  useEffect(() => {\r\n    if(user.positionName === 'Nursing'){        \r\n      setUserAction(actionNursing);\r\n    }\r\n    else if(user.positionName === 'Doctor'){\r\n      setUserAction(actionDoctor);\r\n    }\r\n    else if(user.positionName === 'Admin'){\r\n      setUserAction(actionAdmin);\r\n    }\r\n  }, [user])\r\n  \r\n  if(location.pathname !== '/login'){\r\n    return (\r\n      <>\r\n        <Box sx={{ width: '100%'}} >\r\n          <AppBar sx={{position: 'unset'}}>\r\n            <Toolbar sx={{backgroundColor: '#cfe8fc', height: '78px'}}>\r\n              {/* <Link to=\"/\"> */}\r\n                <Avatar src={Logo} sx={{ width: 62, height: 62, mt: 'auto', mb: 'auto', mr: 4 }} />\r\n              {/* </Link> */}\r\n              {user.isAuthenticated === true || token ? \r\n                <>\r\n                  <BottomNavigation showLabels value={value}\r\n                    sx={{display: 'flex', justifyContent: 'flex-start', backgroundColor: '#cfe8fc', flexGrow: 1}}>\r\n                    {userAction.map(actionItem => (\r\n                      <BottomNavigationAction\r\n                        key={actionItem.key}\r\n                        label={actionItem.label}\r\n                        icon={actionItem.icon}\r\n                        LinkComponent={actionItem.LinkComponent}\r\n                        to={actionItem.to}\r\n                        sx={{color: '#000', maxWidth: actionItem.maxWidth}}\r\n                      />\r\n                    ))}  \r\n                  </BottomNavigation>\r\n\r\n                  <Button onClick={(e) => handleClick(e)} sx={{color: '#000', textTransform: 'none'}}>{user.userFullName}</Button>\r\n                  <Menu anchorEl={anchorEl} open={open} onClose={() => handleClose()}>\r\n                    <MenuItem onClick={() => [setOpenModalChangePassword(true), setIsDialogChangePasswordOpen(true), setAnchorEl(null)]}>Đổi mật khẩu</MenuItem>\r\n                    <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                  </Menu>\r\n                  {/* <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} /> */}\r\n                </>\r\n                :\r\n                  <>\r\n                    <Box sx={{position: 'absolute', right: 22}}>\r\n                      <NavLink exact to=\"/login\"><Button sx={{textTransform: 'none', color: '#000'}}>Đăng nhập</Button></NavLink>\r\n                      {/* <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} /> */}\r\n                    </Box>\r\n                  </>\r\n                }            \r\n            </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n  \r\n        {/* <UserManual openModalUserManual={openModalUserManual} setOpenModalUserManual={setOpenModalUserManual}/> */}\r\n        <ChangePassword openModalChangePassword={openModalChangePassword} setOpenModalChangePassword={setOpenModalChangePassword} setIsDialogChangePasswordOpen={setIsDialogChangePasswordOpen}/>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst PrivateRoutes = (props) => {\n  const token = localStorage.getItem('jwt');\n  const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\n\n  if (token && getUserLogin) {\n    return (\n      <>\n        <Route path={props.path} component={props.component}></Route>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <Redirect to='/login'></Redirect>\n      </>\n    )\n  }\n};\nexport default PrivateRoutes;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../ErrorPage/Page500.scss\";\n\nconst Page404 = () => {\n\n  let history = useHistory();\n\n  return (\n    <div>\n      <div className=\"section\">\n        <h1 className=\"error\">404</h1>\n        <div className=\"page\">Trang mà bạn đang truy cập không tồn tại.</div>\n      </div>\n    </div>\n  );\n};\nexport default Page404;\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CreateAccount = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleCloseModalRegister = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalRegister(false);\r\n      }\r\n    }\r\n\r\n    const position = [\r\n      {id: '1', positionName: 'Điều dưỡng'},\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n          <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalRegister} onClose={(event, reason) => handleCloseModalRegister(event, reason)} disableEscapeKeyDown={true}  >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n            <IconButton onClick={() => handleCloseModalRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n              <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} />\r\n              <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }}/>\r\n              <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '46ch', mb: 2.5 }} \r\n                InputProps={{ // <-- This is where the toggle button is added.\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <Autocomplete options={position.map((option) => option.positionName)} renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} sx={{ width: '45.95ch', mb: 2.5 }}/>\r\n              <Stack spacing={2} direction=\"column\">\r\n                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleCloseModalRegister()}>Tạo tài khoản</Button>\r\n              </Stack>\r\n            \r\n            </DialogContent>\r\n          </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAccount","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst createMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/Register`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createMedicalBackRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/BackRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createCurrentDoctorExamining = async (userIdDoctor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/SetDoctorExaming/${userIdDoctor}`, \r\n        {}, // Body của request, có thể là {} hoặc object\r\n        {\r\n            headers: {\r\n                \"content-type\": \"text/plain; charset=utf-8\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddPredecessor = async (dataPredecessor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddPredecessor`, dataPredecessor,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddMedicalBook = async (dataMedicalBook) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddMedicalBook`, dataMedicalBook,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createNotificationForMedicalRegister = async () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const medicalRegisterMessage = true\r\n    return await axios.post(`${backendURL}/api/Notification/SendSignalRGroup?groupId=doctor`, medicalRegisterMessage,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getRegistersByDateNow = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetRegistersByDateNow`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveRegister = async (dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveOldRegister = async (dayOfBirth, patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}&patientId=${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListOldDisease = async (patientId, phone, fullName, dayOfBirth, gender) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/SearchPatients?patientId=${patientId}&phone=${phone}&fullName=${fullName}&dayOfBirth=${dayOfBirth}&gender=${gender}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getVaccinationByPatientId = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetVaccinationByPatientId/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getCurrentDoctorExamining = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetDoctorExamining`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalDetailPatient = async (id) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/DetailPatient/${id}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalBook = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetMediacalBook?medicalRegisterId=${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdatePredecessor = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdatePredecessor/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdateMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdateMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentDate = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentDate/${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentsNextWeek = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsNextWeek`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getAppointmentsToday = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsToday`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst updateMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/EditRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateMedicalState = async (id, state) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateState?id=${id}&state=${state}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateStateAppointment = async (dataAppointment, stateAppointment) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateStateAppointment/${dataAppointment.medicalBookId}?appointmentDate=${dataAppointment.appointmentDate}&stateAppointment=${stateAppointment}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst deleteMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.delete(`${backendURL}/api/Medical/DeleteMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    createMedicalRegister, createMedicalBackRegister, createCurrentDoctorExamining, createAddPredecessor, createAddMedicalBook, createNotificationForMedicalRegister,\r\n    getRegistersByDateNow, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister, getListOldDisease, getVaccinationByPatientId, getCurrentDoctorExamining, getMedicalDetailPatient, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook, getAppointmentDate, getAppointmentsNextWeek, getAppointmentsToday,\r\n    updateMedicalRegister, updateMedicalState, updateStateAppointment,\r\n    deleteMedicalBook\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Register from '../ManageRegister/Register';\r\nimport { toast } from 'react-toastify';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//api\r\nimport { userLogin } from '../../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n//signal\r\nimport { startSignalRConnection } from '../../Service/SignalService';\r\n\r\nconst Login = () => {\r\n    const { user, loadingContext, loginContext } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [userAccount, setUserAccount] = useState({userName: '', password: ''})\r\n    const [openModalRegister, setOpenModalRegister] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const onChangeUserName = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                userName: value\r\n            }\r\n        }) \r\n    }\r\n\r\n    const onChangeUserPassword = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                password: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if(userAccount.userName === ''){\r\n            toast.error('Bạn chưa nhập tài khoản!')\r\n        }\r\n        else if(userAccount.password === ''){\r\n            toast.error('Bạn chưa nhập mật khẩu!');\r\n        }\r\n        else{\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const response = await userLogin(userAccount.userName, userAccount.password);\r\n            if(response.status !== 200){\r\n                toast.error(response.data);\r\n            }\r\n            else{\r\n                if(response.data.positionName === 'Doctor'){\r\n                    await startSignalRConnection(response.data.tokenDTO.token);\r\n                }\r\n\r\n                localStorage.setItem('jwt', response.data.tokenDTO.token)\r\n                const userLogin = {\r\n                    isAuthenticated: true, \r\n                    isLogin: true, \r\n                    userId: response.data.userId,\r\n                    userName: response.data.userName, \r\n                    userFullName: response.data.userFullName, \r\n                    positionName: response.data.positionName\r\n                }\r\n\r\n                localStorage.setItem('userLogin', JSON.stringify(userLogin))\r\n                loginContext(userLogin);\r\n                   \r\n                if(response.data.positionName === 'Nursing'){\r\n                    history.push('/medicalregister');\r\n                }\r\n                else if(response.data.positionName === 'Doctor'){\r\n                    history.push('/doctor-examining');\r\n                }\r\n                else if(response.data.positionName === 'Admin'){\r\n                    history.push('/dashboard');\r\n                }\r\n                setOpenAlertProcessingBackdrop(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleLogin();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAuthenticated === true) {\r\n            history.push('/');\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        const userLogin = localStorage.getItem('userLogin');\r\n        if (token && userLogin) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(openAlertProcessingBackdrop){\r\n                event.preventDefault();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [openAlertProcessingBackdrop])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box sx={{ mt: 3, borderRadius: '25px' }} >\r\n                    <Box sx={{ p: 7.6 }}>\r\n                        <Avatar src={Logo} sx={{ width: 120, height: 120, ml: 'auto', mr: 'auto', mb: 2 }} />\r\n                        <Typography sx={{ textAlign: 'center', textTransform: 'uppercase', fontWeight: 'bolder', fontSize: '1.15rem', mb: 2, color: '#4caf50' }} variant=\"h5\">Chương trình khám nhi khoa phát triển</Typography>\r\n                        <Box component=\"form\" autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                            <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                            <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 3 }} \r\n                            onChange={(e) => onChangeUserPassword(e.target.value)} onKeyDown={(e) => handlePressEnter(e)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6.5vh', width: '28ch' }} variant=\"contained\" style={{ margin: 'auto' }} onClick={(e) => handleLogin()}>Đăng nhập</Button>\r\n                                <Typography sx={{textAlign: 'center', color: 'red', fontSize: '18px'}} variant=\"subtitle1\"><strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Quên mật khẩu</strong></Typography>\r\n                                <Typography sx={{textAlign: 'center', mt: '10px !important'}} variant=\"subtitle1\">Chưa có tài khoản? <strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Đăng ký</strong></Typography>\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Register\r\n                openModalRegister={openModalRegister} setOpenModalRegister={setOpenModalRegister}\r\n            />\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang đăng nhập'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessing(props) {\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={props.openAlertProcessing} disableEscapeKeyDown={true}>\r\n                <DialogContent>\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <CircularProgress/>\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang xử lý...</Typography>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertProcessing","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-knkpt.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getListProvince = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/ListProvince`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListDistrict = async (provinceId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListDistrictByIdProvince/${provinceId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListWard = async (districtId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListWardByIdDistrict/${districtId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getFullAddressByIdWard = async (codeWard) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetFullAddressByIdWard/${codeWard}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getListProvince, getListDistrict, getListWard, getFullAddressByIdWard\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport { Autocomplete } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//lodash\r\nimport _ from 'lodash';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { updateMedicalRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalService';\r\n\r\nfunction ManageInfoPantients(props) {\r\n  const dataPatientInfoDefault = {\r\n    examinationId: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    headCircumference: \"\",\r\n    reason: \"\",\r\n    vaccination: false,\r\n    id: \"\",\r\n    patient: {\r\n      identifier: \"\",\r\n      address: \"\",\r\n      fullName: \"\",\r\n      dayOfBirth: null,\r\n      codeWard: \"\",\r\n      gender: true,\r\n      fullNameMother: \"\",\r\n      phoneMother: \"\",\r\n      fullNameFather: \"\",\r\n      phoneFather: \"\",\r\n      patientId: \"\"\r\n    }\r\n  }\r\n\r\n  const dataPatientInfoErrorDefault = {\r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    examiningSession: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n  } \r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const selectedAutoCompleteDefault = { \r\n    gender: { value: null, openOption: false }, \r\n    examiningSession: {value: null, openOption: false, loading: false},\r\n    province: { value: null, openOption: false }, \r\n    district: { value: null, openOption: false }, \r\n    ward: { value: null, openOption: false },\r\n  }\r\n\r\n  const typingRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  const [dataPatientInfoNotEdit, setDataPatientInfoNotEdit] = useState();\r\n  const [dataPatientInfo, setDataPatientInfo] = useState(dataPatientInfoDefault);\r\n  const [dataPatientInfoError, setDataPatientInfoError] = useState(dataPatientInfoErrorDefault);\r\n    \r\n  const [selectedAutoComplete, setSelectedAutoComplete] = useState(selectedAutoCompleteDefault);\r\n\r\n  const [listExaminingSession, setListExaminingSession] = useState([]);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f',\r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -8],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.gender.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'ExaminingSession'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.examiningSession.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else{\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      //const _dataPatientInfoError = {...dataPatientInfoError};\r\n      // if(fieldName === 'patientId'){\r\n      //   _dataPatientInfoError.patientId.title = '';\r\n      //   _dataPatientInfoError.patientId.openTooltip = false;\r\n      //   setDataPatientInfoError(_dataPatientInfoError);\r\n      // }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.dayOfBirth.title = '';\r\n      //     _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientInfoError.dayOfBirth.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneMother.title = '';\r\n      //     _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneMother.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneFather'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneFather.title = '';\r\n      //     _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneFather.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'Gender'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.gender.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'ExaminingSession'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n      //     prevSelectedAutoComplete.examiningSession.openOption = false\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Province'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.province.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'District'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.district.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Ward'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.ward.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.gender.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'ExaminingSession'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n          prevSelectedAutoComplete.examiningSession.openOption = false\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.district.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.ward.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n  \r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n  \r\n      return (lowercasedFullName.includes(lowercasedInput) || initials.includes(lowercasedInput));\r\n    });\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientInfoError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientInfoError.identifier.openTooltip = true;\r\n          _dataPatientInfoError.identifier.isError = true;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n        else{\r\n          setDataPatientInfo(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientInfoError.identifier.title = '';\r\n          _dataPatientInfoError.identifier.openTooltip = false;\r\n          _dataPatientInfoError.identifier.isError = false;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.identifier.title = '';\r\n      _dataPatientInfoError.identifier.openTooltip = false;\r\n      _dataPatientInfoError.identifier.isError = false;\r\n      _dataPatientInfoError.identifier.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n    \r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.fullName = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n    \r\n      if(dataPatientInfoError.fullName.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullName.title = '';\r\n        _dataPatientInfoError.fullName.openTooltip = false;\r\n        _dataPatientInfoError.fullName.isError = false;\r\n        _dataPatientInfoError.fullName.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = async (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n    \r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n            \r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n    \r\n        if(today < takenValue || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientInfoError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n          _dataPatientInfoError.dayOfBirth.isError = true;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n    \r\n        else{\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.dayOfBirth = formattedDate\r\n            return {...prevDataPatientInfo}\r\n          })\r\n    \r\n          _dataPatientInfoError.dayOfBirth.title = '';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n          _dataPatientInfoError.dayOfBirth.isError = false;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n\r\n          onChangeDOBToGetExaminingSession(formattedDate);\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onChangeDOBToGetExaminingSession = async (formattedDate) => {\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.value = null\r\n      return {...prevSelectedAutoComplete}\r\n    })\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = true\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(formattedDate);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = false\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.patient.gender = value.genderValue\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n    \r\n    if(dataPatientInfoError.gender.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.gender.isError = false;\r\n      _dataPatientInfoError.gender.title = '';\r\n      _dataPatientInfoError.gender.openTooltip = false;\r\n      _dataPatientInfoError.gender.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectExaminingSession = (e, value) => {\r\n    if(focusField === 'examiningSession'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.examinationId = value.id\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.examiningSession.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(dataPatientInfoError.examiningSession.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.examiningSession.isError = false;\r\n      _dataPatientInfoError.examiningSession.title = '';\r\n      _dataPatientInfoError.examiningSession.openTooltip = false;\r\n      _dataPatientInfoError.examiningSession.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.province.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(selectedAutoComplete.district.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.province.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.province.isError = false;\r\n      _dataPatientInfoError.province.title = '';\r\n      _dataPatientInfoError.province.openTooltip = false;\r\n      _dataPatientInfoError.province.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.district.value = value;\r\n      return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.district.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.district.isError = false;\r\n      _dataPatientInfoError.district.title = '';\r\n      _dataPatientInfoError.district.openTooltip = false;\r\n      _dataPatientInfoError.district.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n\r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.codeWard = value.code\r\n      return { ...prevDataPatientInfo }\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.ward.value = value;\r\n        return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(dataPatientInfoError.ward.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.ward.isError = false;\r\n      _dataPatientInfoError.ward.title = '';\r\n      _dataPatientInfoError.ward.openTooltip = false;\r\n      _dataPatientInfoError.ward.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    if(focusField === 'address'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.address = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.address.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.address.isError = false;\r\n        _dataPatientInfoError.address.title = '';\r\n        _dataPatientInfoError.address.openTooltip = false;\r\n        _dataPatientInfoError.address.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    if(focusField === 'fullNameMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameMother = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(focusField === 'phoneMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneMother.openTooltip = true;\r\n          _dataPatientInfoError.phoneMother.isError = true;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n          \r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneMother = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n      \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n      \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 10)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneMother.title = '';\r\n      _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      _dataPatientInfoError.phoneMother.isError = false;\r\n      _dataPatientInfoError.phoneMother.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameFather = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneFather.openTooltip = true;\r\n          _dataPatientInfoError.phoneFather.isError = true;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n\r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneFather = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n                \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n                \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneFather.title = '';\r\n      _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      _dataPatientInfoError.phoneFather.isError = false;\r\n      _dataPatientInfoError.phoneFather.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    if(focusField === 'height'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.height = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.height.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.height.title = '';\r\n        _dataPatientInfoError.height.openTooltip = false;\r\n        _dataPatientInfoError.height.isError = false;\r\n        _dataPatientInfoError.height.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    if(focusField === 'weight'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.weight = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.weight.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.weight.title = '';\r\n        _dataPatientInfoError.weight.openTooltip = false;\r\n        _dataPatientInfoError.weight.isError = false;\r\n        _dataPatientInfoError.weight.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    if(focusField === 'headCircumference'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.headCircumference = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.headCircumference.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.headCircumference.title = '';\r\n        _dataPatientInfoError.headCircumference.openTooltip = false;\r\n        _dataPatientInfoError.headCircumference.isError = false;\r\n        _dataPatientInfoError.headCircumference.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.vaccination = bool\r\n      return {...prevDataPatientInfo}\r\n    })\r\n  }\r\n\r\n  const handleCloseModalInfoPantients = (event, reason) => {\r\n    if(reason && reason === \"backdropClick\"){\r\n      return;\r\n    }\r\n    else{\r\n      setListDistrict(prevListDistrict => {\r\n        prevListDistrict.loading = false\r\n        prevListDistrict.list = []\r\n        return {...prevListDistrict}\r\n      })\r\n      setListWard(prevListWard => {\r\n        prevListWard.loading = false\r\n        prevListWard.list = []\r\n        return {...prevListWard}\r\n      })\r\n      setListExaminingSession([]);\r\n      setSelectedAutoComplete(selectedAutoCompleteDefault);\r\n      setDataPatientInfo(dataPatientInfoDefault);\r\n      setDataPatientInfoNotEdit('');\r\n      setDataPatientInfoError(dataPatientInfoErrorDefault);\r\n      setLoading(true);\r\n      props.setSelectedPantientInfo();\r\n      props.setOpenModalInfoPantients(false);\r\n    }\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const responseListProvince = await getListProvince();\r\n    setListProvince(responseListProvince);\r\n  }\r\n\r\n  const handleApplyPantientDataToField = async () => {\r\n    setOpenAlertProcessing(true);   \r\n      \r\n    const editPropsDataPatientInfo = {...dataPatientInfo};\r\n    editPropsDataPatientInfo.examinationId = props.selectedPantientInfo.examinationId\r\n    editPropsDataPatientInfo.height = props.selectedPantientInfo.height\r\n    editPropsDataPatientInfo.weight = props.selectedPantientInfo.weight\r\n    editPropsDataPatientInfo.headCircumference = props.selectedPantientInfo.headCircumference\r\n    editPropsDataPatientInfo.reason = props.selectedPantientInfo.reason\r\n    editPropsDataPatientInfo.vaccination = props.selectedPantientInfo.vaccination\r\n    editPropsDataPatientInfo.id = props.selectedPantientInfo.id\r\n    editPropsDataPatientInfo.patient.identifier = props.selectedPantientInfo.patient.identifier\r\n    editPropsDataPatientInfo.patient.address = props.selectedPantientInfo.patient.address\r\n    editPropsDataPatientInfo.patient.fullName = props.selectedPantientInfo.patient.fullName\r\n    editPropsDataPatientInfo.patient.dayOfBirth = props.selectedPantientInfo.patient.dayOfBirth\r\n    editPropsDataPatientInfo.patient.codeWard = props.selectedPantientInfo.patient.codeWard\r\n    editPropsDataPatientInfo.patient.gender = props.selectedPantientInfo.patient.gender\r\n    editPropsDataPatientInfo.patient.fullNameMother = props.selectedPantientInfo.patient.fullNameMother\r\n    editPropsDataPatientInfo.patient.phoneMother = props.selectedPantientInfo.patient.phoneMother\r\n    editPropsDataPatientInfo.patient.fullNameFather = props.selectedPantientInfo.patient.fullNameFather\r\n    editPropsDataPatientInfo.patient.phoneFather = props.selectedPantientInfo.patient.phoneFather\r\n    editPropsDataPatientInfo.patient.patientId = props.selectedPantientInfo.patient.patientId\r\n\r\n    setDataPatientInfo(_.cloneDeep(editPropsDataPatientInfo));\r\n    setDataPatientInfoNotEdit(_.cloneDeep(editPropsDataPatientInfo));\r\n        \r\n    const response = await getFullAddressByIdWard(props.selectedPantientInfo.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.list = responseListDistrict;\r\n      return {...prevListDistrict}\r\n    });\r\n    const responseListWard = await getListWard(response.districtCode);\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = responseListWard;\r\n      return {...prevListWard}\r\n    });\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(props.selectedPantientInfo.patient.dayOfBirth);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n     \r\n    const selectedGender = listGender.find(gender => gender.genderValue === props.selectedPantientInfo.patient.gender);\r\n    const indexListExamining = responseListMedicalExaminationsGiveRegister.exams.findIndex(examiningSession => examiningSession.id === props.selectedPantientInfo.examinationId)\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = selectedGender\r\n      prevSelectedAutoComplete.examiningSession.value = responseListMedicalExaminationsGiveRegister.exams[indexListExamining];\r\n      prevSelectedAutoComplete.province.value = listProvince[indexListProvince];\r\n      prevSelectedAutoComplete.district.value = responseListDistrict[indexListDistrict];\r\n      prevSelectedAutoComplete.ward.value = responseListWard[indexListWard];\r\n      return prevSelectedAutoComplete\r\n    })\r\n\r\n    setLoading(false);\r\n    setOpenAlertProcessing(false);   \r\n  }\r\n\r\n  const checkValidate = () => {\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      let isValid = true;\r\n\r\n      if(dataPatientInfoError.identifier.title !== ''){\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.identifier.focus = true;\r\n          setFocusField('identifier');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullName === ''){\r\n        _dataPatientInfoError.fullName.title = 'Bạn chưa nhập họ tên';\r\n        _dataPatientInfoError.fullName.openTooltip = true;\r\n        _dataPatientInfoError.fullName.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullName.focus = true;\r\n          setFocusField('fullName');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(dataPatientInfo.patient.gender === ''){\r\n        _dataPatientInfoError.gender.title = 'Bạn chưa chọn giới tính';\r\n        _dataPatientInfoError.gender.isError = true;\r\n        _dataPatientInfoError.gender.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.gender.focus = true;\r\n          setFocusField('gender');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.dayOfBirth === ''){\r\n        _dataPatientInfoError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfoError.dayOfBirth.title !== ''){\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.examiningSession.value === null){\r\n        _dataPatientInfoError.examiningSession.title = 'Bạn chưa chọn lại kỳ khám';\r\n        _dataPatientInfoError.examiningSession.isError = true;\r\n        _dataPatientInfoError.examiningSession.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.examiningSession.focus = true;\r\n          setFocusField('examiningSession');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.province.value === null){\r\n        _dataPatientInfoError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n        _dataPatientInfoError.province.isError = true;\r\n        _dataPatientInfoError.province.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.province.focus = true;\r\n          setFocusField('province');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.district.value === null){\r\n        _dataPatientInfoError.district.title = 'Bạn chưa chọn quận huyện';\r\n        _dataPatientInfoError.district.isError = true;\r\n        _dataPatientInfoError.district.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.district.focus = true;\r\n          setFocusField('district');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.ward.value === null){\r\n        _dataPatientInfoError.ward.title = 'Bạn chưa chọn phường xã';\r\n        _dataPatientInfoError.ward.isError = true;\r\n        _dataPatientInfoError.ward.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.ward.focus = true;\r\n          setFocusField('ward');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.address === ''){\r\n        _dataPatientInfoError.address.title = 'Bạn chưa nhập địa chỉ';\r\n        _dataPatientInfoError.address.isError = true;\r\n        _dataPatientInfoError.address.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.address.focus = true;\r\n          setFocusField('address');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullNameMother === '' && dataPatientInfo.patient.fullNameFather === ''){\r\n        _dataPatientInfoError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n        _dataPatientInfoError.fullNameMother.isError = true;\r\n        _dataPatientInfoError.fullNameMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullNameMother.focus = true;\r\n          setFocusField('fullNameMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.phoneMother === '' && dataPatientInfo.patient.phoneFather === ''){\r\n        _dataPatientInfoError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        _dataPatientInfoError.phoneMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneMother.title !== ''){\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneFather.title !== ''){\r\n        _dataPatientInfoError.phoneFather.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneFather.focus = true;\r\n          setFocusField('phoneFather');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.height === ''){\r\n        _dataPatientInfoError.height.title = 'Bạn chưa nhập chiều cao';\r\n        _dataPatientInfoError.height.isError = true;\r\n        _dataPatientInfoError.height.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.height.focus = true;\r\n          setFocusField('height');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.weight === ''){\r\n        _dataPatientInfoError.weight.title = 'Bạn chưa nhập cân nặng';\r\n        _dataPatientInfoError.weight.isError = true;\r\n        _dataPatientInfoError.weight.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.weight.focus = true;\r\n          setFocusField('weight');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.headCircumference === ''){\r\n        _dataPatientInfoError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n        _dataPatientInfoError.headCircumference.isError = true;\r\n        _dataPatientInfoError.headCircumference.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.headCircumference.focus = true;\r\n          setFocusField('headCircumference');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      // if(dataPatientInfo.reason === ''){\r\n      //   _dataPatientInfoError.reason.isError = true;\r\n      //   isValid = false;\r\n      // }\r\n\r\n      if(_.isEqual(dataPatientInfo, dataPatientInfoNotEdit) === true){\r\n        toast.warning('Hiện không có gì để cập nhật', {toastId: 'warning1'});\r\n        isValid = false;\r\n      }\r\n\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n      return isValid;\r\n  }\r\n\r\n  const handleUpdateMedicalRegister = async () => {\r\n    if(checkValidate()){\r\n      setOpenAlertProcessing(true);\r\n      const response = await updateMedicalRegister(dataPatientInfo);\r\n      if(response.status === 200){\r\n        toast.success(response.data, {toastId: 'success1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      else{\r\n        toast.error(response.data, {toastId: 'error1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      setOpenAlertProcessing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(listProvince.length === 0){\r\n      handleGetListProvince();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.selectedPantientInfo){\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n      handleApplyPantientDataToField();\r\n    }\r\n  }, [props.selectedPantientInfo])\r\n\r\n  useEffect(() => {\r\n    if(props.openModalInfoPantients && props.isContinueUpdateMedicalRegister && loading === false){\r\n      handleUpdateMedicalRegister();\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n    }\r\n  }, [props.isContinueUpdateMedicalRegister, loading])\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth={true} maxWidth='md' open={props.openModalInfoPantients} onClose={(event, reason) => handleCloseModalInfoPantients(event, reason)} >\r\n        <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center', color: 'blue' }}>Thông tin bệnh nhân</DialogTitle>\r\n        <IconButton onClick={() => handleCloseModalInfoPantients()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n          <CloseIcon fontSize='medium'/>\r\n        </IconButton>\r\n        <DialogContent dividers sx={{pt: 1.5, pb: 1.5}}>\r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', pl: 4.2, pr: 4.2, mb: 0.8}}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.identifier.title}</h6>} open={dataPatientInfoError.identifier.openTooltip} placement='left'> \r\n              <TextField error={true ? dataPatientInfoError.identifier.isError === true : false}\r\n                label=\"Mã định danh\" variant=\"outlined\" \r\n                sx={{width: '18%', '&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                inputProps={{ maxLength: 12 }}\r\n                inputRef={(input) => input && focusField === 'identifier' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.identifier}\r\n                onChange={(e) => onChangeIdentifier(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n                      \r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullName.title}</h6>} open={dataPatientInfoError.fullName.openTooltip} placement='top'\r\n              slotProps={{\r\n                popper: {\r\n                  modifiers: [\r\n                    {\r\n                      name: 'offset',\r\n                      options: { offset: [-10, -6], },\r\n                    },\r\n                  ],\r\n                },\r\n              }} \r\n            > \r\n              <TextField error={true ? dataPatientInfoError.fullName.isError === true : false}\r\n                label=\"Họ tên\" variant=\"outlined\" \r\n                sx={{width: '32%', '&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.fullName}\r\n                onChange={(e) => onChangeFullName(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.gender.title}</h6>} open={dataPatientInfoError.gender.openTooltip} placement='top'>\r\n              <Autocomplete \r\n                sx={{width: '12%', marginTop: '7.5px'}}\r\n                options={listGender} \r\n                getOptionLabel={(option) => option.genderName}\r\n                value={selectedAutoComplete.gender.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.genderName}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectGender(e, value)}\r\n                open={selectedAutoComplete.gender.openOption}\r\n                onFocus={() => handleFocus('Gender')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Giới tính\" \r\n                    inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                    error={true ? dataPatientInfoError.gender.isError === true : false}                     \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <DemoContainer components={['DatePicker']}>  \r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.dayOfBirth.title}</h6>} open={dataPatientInfoError.dayOfBirth.openTooltip}>    \r\n                  <Box sx={{width: 110}}>\r\n                    <DatePicker label=\"Ngày sinh\" \r\n                      format='DD/MM/YYYY' defaultValue={moment(dataPatientInfo.patient.dayOfBirth)}\r\n                      disableFuture={true} disableOpenPicker \r\n                      slotProps={{ \r\n                        textField: \r\n                          { \r\n                            inputRef: dateFieldRef,\r\n                            error: true ? dataPatientInfoError.dayOfBirth.isError === true : false,\r\n                            onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                          }\r\n                        }}\r\n                      onChange={(value) => onChangeDOB(value)}\r\n                    />\r\n                  </Box>\r\n                </Tooltip>\r\n              </DemoContainer>\r\n            </ThemeProvider>\r\n          </LocalizationProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.examiningSession.title}</h6>} open={dataPatientInfoError.examiningSession.openTooltip} placement='right'>\r\n              <Autocomplete \r\n                sx={{width: '18%', mt: '7.5px'}}\r\n                options={listExaminingSession} \r\n                noOptionsText={selectedAutoComplete.examiningSession.loading ? 'Đang tải...' : ''}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.examiningSession.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectExaminingSession(e, value)}\r\n                open={selectedAutoComplete.examiningSession.openOption}\r\n                onFocus={() => handleFocus('ExaminingSession')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'ExaminingSession')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Kỳ khám\" \r\n                    inputRef={(input) => input && focusField === 'examiningSession' && input.focus()}\r\n                    error={true ? dataPatientInfoError.examiningSession.isError === true : false} \r\n                    sx={{'& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot': {pl: '6px', pr: '6px'}}}\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      endAdornment: (\r\n                        <>\r\n                          {selectedAutoComplete.examiningSession.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </>\r\n                      ),\r\n                    }} \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.province.title}</h6>} open={dataPatientInfoError.province.openTooltip} placement='left'>\r\n              <Autocomplete \r\n                sx={{width: '20%', mt: 2}}\r\n                options={listProvince} \r\n                filterOptions={filterOptions}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.province.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectProvine(e, value)}\r\n                open={selectedAutoComplete.province.openOption}\r\n                onFocus={() => handleFocus('Province')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Thành phố\"\r\n                    inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                    error={true ? dataPatientInfoError.province.isError === true : false}  \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.district.title}</h6>} open={dataPatientInfoError.district.openTooltip} placement='top'>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listDistrict.list} \r\n                  noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.district.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectDistrict(e, value)}\r\n                  open={selectedAutoComplete.district.openOption}\r\n                  onFocus={() => handleFocus('District')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Quận/huyện\" \r\n                      inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                      error={true ? dataPatientInfoError.district.isError === true : false} \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.ward.title}</h6>} open={dataPatientInfoError.ward.openTooltip}>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listWard.list}\r\n                  noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.ward.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectWard(e, value)}\r\n                  open={selectedAutoComplete.ward.openOption}\r\n                  onFocus={() => handleFocus('Ward')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Phường/Xã\" \r\n                      inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                      error={true ? dataPatientInfoError.ward.isError === true : false}  \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.address.title}</h6>} open={dataPatientInfoError.address.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.address.isError === true : false}\r\n                  label=\"Địa chỉ\" variant=\"outlined\" \r\n                  sx={{width: '36%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.address}\r\n                  onChange={(e) => onChangeAddress(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullNameMother.title}</h6>} open={dataPatientInfoError.fullNameMother.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.fullNameMother.isError === true : false}\r\n                  label=\"Họ tên mẹ\" variant=\"outlined\" \r\n                  sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.fullNameMother}\r\n                  onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                />    \r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneMother.title}</h6>} open={dataPatientInfoError.phoneMother.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.phoneMother.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneMother}\r\n                  onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <TextField \r\n              label=\"Họ tên cha\" variant=\"outlined\" sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n              defaultValue={dataPatientInfo.patient.fullNameFather}\r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n            />\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneFather.title}</h6>} open={dataPatientInfoError.phoneFather.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.phoneFather.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneFather}\r\n                  onChange={(e) => onChangePhoneFather(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.height.title}</h6>} open={dataPatientInfoError.height.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.height.isError === true : false}\r\n                  label='Chiều cao' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.height}\r\n                  onChange={(e) => onChangeHeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.weight.title}</h6>} open={dataPatientInfoError.weight.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.weight.isError === true : false}\r\n                  label='Cân nặng' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(kg)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.weight}\r\n                  onChange={(e) => onChangeWeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.headCircumference.title}</h6>} open={dataPatientInfoError.headCircumference.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.headCircumference.isError === true : false}\r\n                  label='Vòng đầu' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.headCircumference}\r\n                  onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <FormControlLabel sx={{width: '30%', mt: 2}} control={<Checkbox checked={dataPatientInfo.vaccination}/>} \r\n              label=\"Có tham gia tiêm ngừa\"\r\n              onChange={(e) => onChangeVaccination(e.target.checked)}\r\n            />  \r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{justifyContent: 'center'}}>\r\n          <Button variant=\"contained\" onClick={() => handleUpdateMedicalRegister()}>Sửa (F1)</Button>\r\n          <Button variant=\"contained\" color='secondary' onClick={(event, reason) => handleCloseModalInfoPantients(event, reason)}>Đóng (ESC)</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <AlertProcessing openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageInfoPantients","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//info pantients modal\r\nimport ManageInfoPantients from '../ManageInfoPantients/ManageInfoPantients';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//mui theme\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getRegistersByDateNow, getAppointmentsToday, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction ListPatientsRegister(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n  const [listPantientChipState, setListPantientChipState] = useState(\r\n    [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n    ]\r\n  )\r\n\r\n  const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n  \r\n  const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n  const [listDataPatientsAppointmentsToday, setListDataPatientsAppointmentsToday] = useState([]); \r\n  \r\n  const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n  const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n  const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n  const [selectedPantientInfo, setSelectedPantientInfo] = useState();\r\n  const [openModalInfoPantients, setOpenModalInfoPantients] = useState(false);\r\n  const [isContinueUpdateMedicalRegister, setIsContinueUpdateMedicalRegister] = useState();\r\n\r\n  const renderPatientsStatus = (state) => {\r\n    if(state === 0 || state === 3){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterWaiting' />\r\n        </>\r\n      )\r\n    }\r\n    else if(state === 1){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterExamining' />\r\n        </>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterDone' />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSelectedChip = (chipIndex, chipLabel) => {\r\n    setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n    if(chipIndex === 0){\r\n      const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n      setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n    }\r\n    else if(chipIndex === 1){\r\n      const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n      setListDataPatientsRegisterState(listPantientRegisterDone);\r\n    }\r\n    else if(chipIndex === 2){\r\n      setListDataPatientsRegisterSort(listDataPatientsAppointmentsToday);\r\n      setListDataPatientsRegisterState(listDataPatientsAppointmentsToday);\r\n    }\r\n  };\r\n\r\n  const handleSearchPantient = (value) => {\r\n    const takenValue = value;\r\n    setSearchPatientsQuery(takenValue);\r\n\r\n    if(value === ''){\r\n      setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n    }else{\r\n      setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n    }\r\n  }\r\n\r\n  const searchPatients = (patients, searchTerm) => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return patients.filter(patientObj => {\r\n      const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n      return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n    });\r\n  }\r\n\r\n  const handleSelectedPantientInfo = (patientsRegisterSortItem) => {\r\n    setSelectedPantientInfo(patientsRegisterSortItem);\r\n    setIsContinueUpdateMedicalRegister(true);\r\n    setOpenModalInfoPantients(true);\r\n  }\r\n\r\n  const handleSelectedPantientAppointmentsToday = async (patientsRegisterSortItem) => {\r\n    setOpenAlertProcessingBackdrop(true);\r\n    const responseVaccinationByPatientId = await getVaccinationByPatientId(patientsRegisterSortItem.patient.patientId);\r\n    const dataPantientOldOldDiseaseRegister = {\r\n      examinationId: patientsRegisterSortItem.patient.nextExamId,\r\n      oldDisease: true,\r\n      height: '',\r\n      weight: '',\r\n      headCircumference: '',\r\n      reason: '',\r\n      vaccination: responseVaccinationByPatientId.vaccination,\r\n      medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n      userIdDoctor: '',\r\n      patient: patientsRegisterSortItem.patient\r\n    }\r\n    props.setDataPantientAppointmentsToday(dataPantientOldOldDiseaseRegister)\r\n    setOpenAlertProcessingBackdrop(false);\r\n  }\r\n\r\n  const handleGetRegistersByDateNow = async () => {\r\n    setLoading(true);\r\n\r\n    const response = await getRegistersByDateNow();\r\n    const responseGetAppointmentsToday = await getAppointmentsToday();\r\n\r\n    let updatedList = [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: responseGetAppointmentsToday.length }\r\n    ]\r\n\r\n    let _listDataPatientsAppointmentsToday\r\n    if(responseGetAppointmentsToday.length > 0){\r\n      _listDataPatientsAppointmentsToday = responseGetAppointmentsToday.map((item) => {\r\n        const result = {\r\n          patient : {\r\n            identifier: item.identifier,\r\n            patientId: item.patientId,\r\n            fullName: item.patientFullName,\r\n            gender: item.gender,\r\n            dayOfBirth: item.dateOfBirth,\r\n            fullNameMother: item.fullNameMother,\r\n            phoneMother: item.phoneMother,\r\n            fullNameFather: item.fullNameFather,\r\n            phoneFather: item.phoneFather,\r\n            address: item.address,\r\n            fullAddress: item.fullAddress,\r\n            codeWard: item.codeWard,\r\n            nextExamId: item.nextExamId\r\n          }\r\n        }\r\n        return result;\r\n      })\r\n      setListDataPatientsAppointmentsToday(_listDataPatientsAppointmentsToday);\r\n    }\r\n    else{\r\n      setListDataPatientsAppointmentsToday(responseGetAppointmentsToday)\r\n    }\r\n\r\n    if(response !== 400){\r\n      if(response.list.length !== 0){\r\n        setListDataPatientsRegister(response.list);\r\n        if(activeChip.chipOrder === 0){\r\n          const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám và tái khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n          setListDataPatientsRegisterState(listPantientRegisterDone);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 2){\r\n          setListDataPatientsRegisterSort(_listDataPatientsAppointmentsToday);\r\n          setListDataPatientsRegisterState(_listDataPatientsAppointmentsToday);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n      }\r\n    }\r\n    setListPantientChipState(updatedList);\r\n    props.setComponent1Loading(false);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetRegistersByDateNow();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(openModalInfoPantients){\r\n      const handleKeyDown = (event) => {\r\n        if(event.keyCode === 112){\r\n          event.preventDefault()\r\n          setIsContinueUpdateMedicalRegister(true);\r\n          //nhấn F1 để sửa thông tin đăng ký khám\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [openModalInfoPantients, isContinueUpdateMedicalRegister]);\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true){\r\n      handleGetRegistersByDateNow();\r\n      props.setCompleteMedicalRegister(false);\r\n    }\r\n  }, [props.completeMedicalRegister])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{p: 0}}>\r\n        {/* <Typography variant='h6' sx={{color: 'red', mb: 0, fontWeight: 'bolder', fontSize: '1.16rem', marginBottom: '5px'}}>\r\n          {loading ? \r\n            <Skeleton /> \r\n          : \r\n            <div style={{display: 'flex', height: '30px'}}>\r\n              {props.currentDoctorExamining.userIdDoctor !== '' ?\r\n              <>\r\n                <Typography variant='subbtitle1'>{`Bác sĩ khám hôm nay: ${props.currentDoctorExamining.userFullName}`}</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Sửa'/>\r\n              </>\r\n              :\r\n              <>\r\n                <Typography variant='subbtitle1'>Chưa chọn bác sĩ khám hôm nay</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Thêm'/>\r\n              </>}\r\n            </div>\r\n          }\r\n        </Typography> */}\r\n\r\n        <div className='container' style={{border: '1px solid #fff', borderRadius: '10px', height: '590px', padding: 0, boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)'}}>\r\n          {loading ? \r\n             <>\r\n              <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                <CircularProgress/>\r\n                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n              </Box>        \r\n            </>\r\n          :\r\n            <>\r\n              <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                  <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                    <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                      onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                  </Badge>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n            \r\n              <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                <TextField sx={{mt: 0.2, mb: 1, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                  variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc SĐT' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    startAdornment: (\r\n                      <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                    ),\r\n                    endAdornment: (\r\n                      <InputAdornment position='end'>\r\n                        {searchPatientsQuery !== '' ? \r\n                          <CloseIcon sx={{cursor: 'pointer'}} \r\n                            titleAccess='Xóa'\r\n                            onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                          /> \r\n                        : \r\n                          null\r\n                        }\r\n                        </InputAdornment>  \r\n                      )\r\n                    }}>\r\n                  </TextField>\r\n              </Box>\r\n\r\n              <TableContainer component={Paper} sx={{ height: '465px', overflowX: 'scroll', borderBottomLeftRadius: '10px', borderBottomRightRadius: '10px' }}>\r\n                <Table stickyHeader sx={{ minWidth: 1200 }}>\r\n                  <TableHead>\r\n                    <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                      {activeChip.chipOrder === 2 ? \r\n                        null\r\n                      :\r\n                        <>\r\n                          <TableCell align=\"left\" sx={{fontSize: '0.95rem', p: '10px'}}>Trạng thái</TableCell>\r\n                          <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                        </>\r\n                      }\r\n                      <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {listDataPatientsRegisterSort.length !== 0 ?\r\n                      <>\r\n                        {listDataPatientsRegisterSort.map((patientsRegisterSortItem, patientsRegisterSortIndex) => (\r\n                          <TableRow hover role=\"checkbox\" key={patientsRegisterSortIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => activeChip.chipOrder === 2 ? handleSelectedPantientAppointmentsToday(patientsRegisterSortItem) : handleSelectedPantientInfo(patientsRegisterSortItem)}>\r\n                            {activeChip.chipOrder === 2 ? \r\n                              null\r\n                            :\r\n                              <>\r\n                                <TableCell align='center' sx={{width: '90px'}}>\r\n                                  <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.state === 0 || patientsRegisterSortItem.state === 3 ? 'Chờ khám' : patientsRegisterSortItem.state === 2 ? 'Đã khám' : 'Đang khám'}</Typography>} >\r\n                                    <span>{renderPatientsStatus(patientsRegisterSortItem.state)}</span>\r\n                                  </Tooltip>\r\n                                </TableCell>\r\n                                <TableCell align='left' sx={{width: '20px'}}>{patientsRegisterSortItem.order}</TableCell>\r\n                              </>\r\n                            }\r\n                            <TableCell align='left' sx={{width: '150px'}}>{patientsRegisterSortItem.patient.patientId}</TableCell>\r\n                            <TableCell align='left' sx={{width: '200px'}}>{patientsRegisterSortItem.patient.fullName}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{patientsRegisterSortItem.patient.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{moment(patientsRegisterSortItem.patient.dayOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                            <TableCell align='left' sx={{width: '140px'}}>{patientsRegisterSortItem.patient.phoneMother !== '' ? patientsRegisterSortItem.patient.phoneMother : patientsRegisterSortItem.patient.phoneFather}</TableCell>\r\n                            <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 120}}>\r\n                              <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.patient.fullAddress}</Typography>} >\r\n                                <span>{patientsRegisterSortItem.patient.fullAddress}</span>\r\n                              </Tooltip>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))} \r\n                      </>\r\n                    :\r\n                      null\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </>\r\n          }\r\n        </div>\r\n      </Box>\r\n      \r\n      <AlertProcessingBackdrop openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n      />\r\n\r\n      <ManageInfoPantients \r\n        openModalInfoPantients={openModalInfoPantients} setOpenModalInfoPantients={setOpenModalInfoPantients}\r\n        selectedPantientInfo={selectedPantientInfo} setSelectedPantientInfo={setSelectedPantientInfo}\r\n        isContinueUpdateMedicalRegister={isContinueUpdateMedicalRegister} setIsContinueUpdateMedicalRegister={setIsContinueUpdateMedicalRegister}\r\n        setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListPatientsRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//modal\r\n// import AlertConfirmModal from '../ManageAlertConfirm/AlertConfirm';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//api\r\nimport { createMedicalRegister, createMedicalBackRegister, createNotificationForMedicalRegister, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister } from '../../Service/MedicalService';\r\n\r\nfunction ExaminingSession(props) {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [listExaminingSession, setListExaminingSession] = useState(null);\r\n\r\n    const { isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n    const onChangeRadioSelect = (value) => {\r\n        props.dataPatientsRegister.examinationId = value;\r\n    }\r\n\r\n    const handleListMedicalExaminationsGiveRegister = async () =>  {\r\n        if(props.dataPatientsRegister.oldDisease){\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveOldRegister(props.dataPatientsRegister.patient.dayOfBirth, props.dataPatientsRegister.patient.patientId);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n        else{\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveRegister(props.dataPatientsRegister.patient.dayOfBirth);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    const handleMedicalRegister = async () => {\r\n        // //bệnh cũ\r\n        if(props.dataPatientsRegister.oldDisease === true && props.dataPatientsRegister.examinationId !== ''){\r\n            //là bênh mới đã đăng ký nhưng chưa từng khám bao giờ\r\n            if(listExaminingSession.isAppointment === false && listExaminingSession.oldExams.length === 0){\r\n                setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    await createNotificationForMedicalRegister();\r\n                    if(isOldDiseaseWithNullCodeWard){\r\n                        setIsOldDiseaseWithNullCodeWard(false);\r\n                    }\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            //có hẹn khám nhưng không nhắc khám hoặc đến trễ ngày hẹn khám\r\n            else{\r\n                setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    await createNotificationForMedicalRegister();\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n        }\r\n        //bệnh mới\r\n        else{\r\n            //setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalRegister(props.dataPatientsRegister);\r\n            setOpenAlertProcessing(false);\r\n\r\n            if(response.status === 200){\r\n                await createNotificationForMedicalRegister();\r\n                toast.success(response.data);\r\n                setListExaminingSession(null);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCloseConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n      };\r\n\r\n    const handleOpenConfirm = () => {\r\n        if(props.dataPatientsRegister.examinationId === ''){\r\n            // setIsConfirmOpen(false);\r\n            toast.error('Bạn chưa chọn kỳ khám', {toastId: 'error1'});\r\n        }\r\n        else{\r\n            //setIsConfirmOpen(true);\r\n            handleMedicalRegister();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.dataPatientsRegister.patient.dayOfBirth !== '' && props.openModalExaminingSession === true){\r\n            handleListMedicalExaminationsGiveRegister();\r\n        }\r\n    }, [props.openModalExaminingSession])\r\n\r\n    useEffect(() => {\r\n        if(props.isContinueSelectedExaminingSession === true){\r\n            //nhấn F2 để hoàn tất đăng ký khám\r\n            handleOpenConfirm();\r\n            props.setIsContinueSelectedExaminingSession(false);\r\n        }\r\n    }, [props.isContinueSelectedExaminingSession])\r\n\r\n    return (\r\n        <>\r\n            {listExaminingSession ? \r\n                <>\r\n                    <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalExaminingSession} disableEscapeKeyDown={true}>\r\n                        <DialogTitle \r\n                            sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'green', textTransform: 'uppercase' }}>\r\n                            {`${props.dataPatientsRegister.patient.fullName}, \r\n                            ${props.dataPatientsRegister.patient.gender === true ? 'Nam' : 'Nữ'}, \r\n                            ${listExaminingSession.monthsOfAge}`}\r\n                        </DialogTitle>\r\n\r\n                        <IconButton onClick={() => [props.setOpenModalExaminingSession(false), props.dataPatientsRegister.examinationId = '', setListExaminingSession(null)]} \r\n                            sx={{position: 'absolute', right: 5, top: 7}}>\r\n                                <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n\r\n                        <DialogContent dividers sx={{pl: '0px', pr: '0px'}}>\r\n                            <Grid container rowSpacing={0}>\r\n                                <Grid item xs={0.5}/>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid black', p: 1, height: '50vh', overflow: 'auto'}}>\r\n                                        <Typography variant='h6' sx={{fontWeight: 'bolder'}}>Lịch sử khám</Typography>\r\n                                        {listExaminingSession.oldExams ?\r\n                                            listExaminingSession.oldExams.map((oldExamItem, oldExamIndex) => (\r\n                                                <Typography key={oldExamIndex} variant='subtitle1'>{oldExamItem.name}</Typography>\r\n                                            ))\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </Box>  \r\n                                </Grid>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid red', p: 1, height: '50vh'}}>\r\n                                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', color: 'red'}}>Chọn kỳ khám</Typography>\r\n                                            <RadioGroup key={`${props.dataPatientsRegister.patient.patientId}`} defaultValue={listExaminingSession.exams[0].id} onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                {listExaminingSession.exams.map((examItem, examIndex) => (\r\n                                                    <FormControlLabel key={`${examIndex}`} value={examItem.id} control={<Radio />} label={examItem.name} />\r\n                                                ))}\r\n                                            </RadioGroup>\r\n                                            <Button variant='contained' sx={{mt: 0.5}} onClick={() => handleOpenConfirm()}>Tiếp tục (F2)</Button> \r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </>\r\n            :\r\n                null\r\n            }\r\n\r\n            {/* <AlertConfirmModal \r\n                openAlertConfirmModal={isConfirmOpen} onCloseAlertConfirmModal={handleCloseConfirm} \r\n                onConfirmAlertConfirmModal={handleMedicalRegister} \r\n                titleConfirm=\"Đăng ký khám cho bệnh nhân?\"\r\n            /> */}\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExaminingSession","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListOldDisease, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDisease(props) {\r\n\r\n    const dataPatientsForSearchOldDiseaseDefault = {patientId: '', phone: '', fullName: '', dayOfBirth: ''}\r\n    const dataPatientsForSearchOldDiseaseErrorDefault = {\r\n        patientId: { title: '', isError: false, openTooltip: false, focus: false},\r\n        phone: { title: '', isError: false, openTooltip: false, focus: false },\r\n        fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n        dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n    \r\n    const [listFoundOldDisease, setListFoundOldDisease] = useState(null);\r\n    const [dataPatientsForSearchOldDisease, setDataPatientsForSearchOldDisease] = useState(dataPatientsForSearchOldDiseaseDefault);\r\n    const [dataPatientsForSearchOldDiseaseError, setDataPatientsForSearchOldDiseaseError] = useState(dataPatientsForSearchOldDiseaseErrorDefault);\r\n    const [focusField, setFocusField] = useState(null);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n\r\n    const dateFieldRef = useRef(null);\r\n    const formRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n    const tooltipTheme = createTheme({\r\n        components: {\r\n          MuiTooltip: {\r\n            defaultProps: {\r\n              placement: 'bottom',\r\n              arrow: true,\r\n              componentsProps: {\r\n                tooltip: {\r\n                  sx: {\r\n                    bgcolor: '#d32f2f',\r\n                  },\r\n                },\r\n                arrow: {\r\n                  sx: {\r\n                    color: '#d32f2f',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n    });\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key !== 'Enter') \r\n        {\r\n            event.preventDefault();\r\n        }\r\n        else if(event.key === 'Enter'){\r\n            handleEnterPress(event);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (value, fieldName) => {\r\n        if(value === '' || value === 'DD/MM/YYYY'){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(fieldName === 'patientId'){\r\n                if(typingRef.current){\r\n                    clearInterval(typingRef.current);\r\n                }\r\n                \r\n                typingRef.current = setTimeout(() => {  \r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }, 10)\r\n                \r\n                if(focusField === 'patientId'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'dayOfBirth'){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'dayOfBirth'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'phone'){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const onChangePatientId = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 8){\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = 'Mã bệnh nhân phải từ 8 đến 12 số';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'patientId'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.patientId = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n    }\r\n\r\n    const onChangeFullName = (value) => {\r\n        if(focusField === 'fullName'){\r\n            setFocusField(null);\r\n        }\r\n\r\n        setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n            prevDataPatientsForSearchOldDisease.fullName = value;\r\n            return {...prevDataPatientsForSearchOldDisease}\r\n        })\r\n\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);      \r\n    }\r\n\r\n    const onChangeDayOfBirth = (value) => {\r\n        if(value){            \r\n            const date = value._d;\r\n            const today = new Date();\r\n            const yearsDifference = today.getFullYear() - date.getFullYear();\r\n            const monthsDifference = today.getMonth() - date.getMonth();\r\n            const daysDifference = today.getDate() - date.getDate();\r\n            const age = today.getFullYear() - date.getFullYear();\r\n\r\n            let totalMonths = yearsDifference * 12 + monthsDifference;\r\n            let totalDays = daysDifference;\r\n\r\n            if (daysDifference < 0) {\r\n                totalMonths -= 1;\r\n                totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n            }\r\n\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n\r\n            if(today < date || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = true;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n              }\r\n              else{\r\n                const formattedDate = moment(date).format('YYYY-MM-DD');\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.dayOfBirth = formattedDate;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangePhone = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 10){\r\n                    _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'phone'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.phone = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n\r\n\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 10){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.phone = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        }\r\n    }\r\n\r\n    const handleCloseModalOldDisease = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n          else{\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            setListFoundOldDisease(null);\r\n            setSelectedRowIndex(0);\r\n            props.setOpenModalOldDisease(false);\r\n        }\r\n    }\r\n\r\n    const handleResetField = () => {\r\n        formRef.current.reset();\r\n        const inputs = formRef.current.querySelectorAll('input, textarea');\r\n        inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n        setFocusField(null);\r\n    }\r\n\r\n    const validate = () => {\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        let isValid = true;\r\n\r\n        if(dataPatientsForSearchOldDisease.patientId === '' && dataPatientsForSearchOldDisease.fullName === '' && \r\n            dataPatientsForSearchOldDisease.dayOfBirth === '' && dataPatientsForSearchOldDisease.phone === '')\r\n        {\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.fullName.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.patientId.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.focus = true;\r\n                setFocusField('patientId');\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.dayOfBirth.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                if (dateFieldRef.current) {\r\n                    dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n                }\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.phone.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.phone.focus = true;\r\n                setFocusField('phone');\r\n            }\r\n            isValid = false;\r\n        }\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        return isValid;\r\n    }\r\n\r\n    const handleFindOldDisease = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        setOpenAlertProcessing(true);\r\n        const response = await getListOldDisease(dataPatientsForSearchOldDisease.patientId, dataPatientsForSearchOldDisease.phone, dataPatientsForSearchOldDisease.fullName, dataPatientsForSearchOldDisease.dayOfBirth, '');\r\n        setOpenAlertProcessing(false);\r\n        setListFoundOldDisease(response);\r\n        setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n        setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n        handleResetField();\r\n        if(response.length > 0){\r\n            tableRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleClickFindOldDisease = () => {\r\n        if(validate()){\r\n            handleFindOldDisease()\r\n        }\r\n    }\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleClickFindOldDisease();\r\n        }\r\n    }\r\n\r\n    const handleTableKeyDown = (event) => {\r\n        if (event.key === 'ArrowDown') {\r\n            setSelectedRowIndex((prevIndex) => (Math.min(prevIndex + 1, listFoundOldDisease.length - 1)));\r\n        } else if (event.key === 'ArrowUp') {\r\n            setSelectedRowIndex((prevIndex) => (Math.max(prevIndex - 1, 0)));\r\n        } else if (event.key === 'Enter' && selectedRowIndex !== null){\r\n            handleApplyDataPatientOldDisease(listFoundOldDisease[selectedRowIndex])\r\n        }\r\n    };\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            oldDiseaseWithNullCodeWard: foundOldDiseaseItem.codeWard ? false : true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientId: foundOldDiseaseItem.patientId,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseModalOldDisease();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalOldDisease} onClose={(event, reason) => handleCloseModalOldDisease(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Tìm bệnh cũ</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalOldDisease()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{p: '10px 24px'}}>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around'}} component=\"form\" ref={formRef}>\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.patientId.title}</h6>} open={dataPatientsForSearchOldDiseaseError.patientId.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.patientId.isError === true : false}\r\n                                    label=\"Mã BN\" variant=\"outlined\" size='small'\r\n                                    autoFocus\r\n                                    inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                                    inputProps={{ maxLength: 12 }}\r\n                                    onChange={(e) => onChangePatientId(e.target.value)}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'patientId')}\r\n                                    onKeyDown={handleKeyDown} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.fullName.title}</h6>} open={dataPatientsForSearchOldDiseaseError.fullName.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.fullName.isError === true : false}\r\n                                    label=\"Họ tên\" variant=\"outlined\" size='small'\r\n                                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                                    onKeyDown={(e) => handleEnterPress(e)} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                            <ThemeProvider theme={tooltipTheme}>\r\n                                <DemoContainer components={['DatePicker']}>\r\n                                    <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.dayOfBirth.title}</h6>} open={dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip}>    \r\n                                        <Box sx={{width: 222}}>\r\n                                            <DatePicker label=\"Ngày sinh\" format='DD/MM/YYYY' \r\n                                                disableFuture={true} disableOpenPicker \r\n                                                renderInput={(params) => <TextField {...params} size='small' />}\r\n                                                slotProps={{  \r\n                                                    textField: \r\n                                                    { \r\n                                                        inputRef: dateFieldRef,\r\n                                                        error: true ? dataPatientsForSearchOldDiseaseError.dayOfBirth.isError === true : false, \r\n                                                        size: 'small', \r\n                                                        onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                                        onKeyDown: (e) => handleEnterPress(e)\r\n                                                    }, \r\n                                                }}\r\n                                                onChange={(value) => onChangeDayOfBirth(value)}\r\n                                            />\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                </DemoContainer>\r\n                            </ThemeProvider>      \r\n                        </LocalizationProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.phone.title}</h6>} open={dataPatientsForSearchOldDiseaseError.phone.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                                    inputRef={(input) => input && focusField === 'phone' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.phone.isError === true : false}\r\n                                    label=\"Điện thoại cha/mẹ\" variant=\"outlined\" size='small'\r\n                                    inputProps={{ maxLength: 10 }}\r\n                                    onChange={(e) => onChangePhone(e.target.value)}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'phone')}\r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 1.6}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleClickFindOldDisease()}>Tìm (Enter)</Button>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        {\r\n                            listFoundOldDisease ? \r\n                                listFoundOldDisease.length !== 0 ? \r\n                                <>\r\n                                    <TableContainer component={Paper} sx={{boxShadow: 4, mt: 1.4}} tabIndex={0} onKeyDown={(event) => handleTableKeyDown(event)} ref={tableRef}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listFoundOldDisease ? \r\n                                                    listFoundOldDisease.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                        <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} \r\n                                                            selected={selectedRowIndex === foundOldDiseaseIndex} \r\n                                                            onDoubleClick={() => handleApplyDataPatientOldDisease(foundOldDiseaseItem)}\r\n                                                        >\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.patientId}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                            <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'green'}}>Tìm thấy {listFoundOldDisease.length} bệnh nhân</Typography>\r\n                                </>\r\n                                : \r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'red'}}>Không tìm thấy bệnh nhân</Typography>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Box>  \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDisease","import React, { useContext, useState, useEffect, useRef } from 'react';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//ExaminingSessios modal\r\nimport ExaminingSession from '../ManageExaminingSession/ExaminingSession';\r\n//old disease modal\r\nimport OldDisease from '../ManageOldDisease/OldDisease';\r\n// import OldDiseaseForRegister from '../ManageOldDisease/OldDiseaseForRegister';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateField } from '@mui/x-date-pickers/DateField';\r\n//lodash\r\nimport _ from 'lodash';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { createMedicalBackRegister } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction BookMedical(props) {\r\n\r\n  const dataPatientsRegisterDefault = {\r\n    examinationId: '',\r\n    oldDisease: false,\r\n    height: '',\r\n    weight: '',\r\n    headCircumference: '',\r\n    reason: '',\r\n    vaccination: false,\r\n    medicalTypeId: '',\r\n    userIdDoctor: '',\r\n    patient: {\r\n      patientId: '',\r\n      identifier: '',\r\n      address: '',\r\n      fullName: '',\r\n      dayOfBirth: '',\r\n      codeWard: '',\r\n      gender: '',\r\n      fullNameMother: '',\r\n      phoneMother: '',\r\n      fullNameFather: '',\r\n      phoneFather: ''\r\n    }\r\n  }\r\n\r\n  const autocompleteValueDefault = { \r\n    dayOfBirth: null, \r\n    gender: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    province: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    district: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    ward: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    medicalType: {\r\n      value: null,\r\n      openOption: false\r\n    },\r\n    vaccination: false \r\n  }\r\n\r\n  const dataPatientsRegisterErrorDefault = { \r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    patientId: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n    medicalType: { title: '', isError: false, openTooltip: false, focus: false },\r\n    reason: { title: '', isError: false, openTooltip: false, focus: false }\r\n  }\r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const listMedicalType = [\r\n    {medicalTypeOrder: 1, medicalTypeName: 'Khám Nhi khoa phát triển', medicalTypeId: 1},\r\n    {medicalTypeOrder: 2, medicalTypeName: 'Khám trẻ nguy cơ cao', medicalTypeId: 2},\r\n  ]\r\n\r\n  const { isDialogChangePasswordOpen, isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n  const [openModalExaminingSession, setOpenModalExaminingSession] = useState(false);\r\n  const [isContinueSelectedExaminingSession, setIsContinueSelectedExaminingSession] = useState(false);\r\n\r\n  const [openModalOldDisease, setOpenModalOldDisease] = useState(false);\r\n\r\n  // const [openOldDiseaseRegister, setOpenOldDiseaseRegister] = useState(false);\r\n  // const [listOldDiseaseRegister, setListOldDiseaseRegister] = useState([]);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const [dataPatientsRegister, setDataPatientsRegister] = useState(dataPatientsRegisterDefault);\r\n  const [dataPatientsRegisterError, setDataPatientsRegisterError] = useState(dataPatientsRegisterErrorDefault);\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [autocompleteValue, setAutocompleteValue] = useState(autocompleteValueDefault);\r\n\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const formRef = useRef(null);\r\n  const firstFocusRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n  const typingRef = useRef(null);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f', \r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -7],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n        event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n\r\n    // Xử lý đặc biệt cho \"d\" và \"đ\"\r\n    const replaceSpecialCharacters = str => str.replace(/đ/g, 'd');\r\n\r\n    return options.filter(option => {\r\n        const lowercasedFullName = replaceSpecialCharacters(option.fullName.toLowerCase());\r\n        const initials = replaceSpecialCharacters(option.fullName.split(' ').map(word => word[0]).join('').toLowerCase());\r\n\r\n        const normalizedInput = replaceSpecialCharacters(lowercasedInput);\r\n\r\n        return (\r\n            lowercasedFullName.includes(normalizedInput) ||\r\n            initials.includes(normalizedInput)\r\n        );\r\n    });\r\n  };\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.gender.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.province.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Ward'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'MedicalType'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.medicalType.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n      if(fieldName === 'Identifier'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n        _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.dayOfBirth.title = '';\r\n      //     _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n      //   _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PatientId'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.patientId.title = '';\r\n      //     _dataPatientsRegisterError.patientId.openTooltip = false;\r\n      //     _dataPatientsRegisterError.patientId.isError = false;\r\n      //     _dataPatientsRegisterError.patientId.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.phoneMother.title = '';\r\n      //     _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      //     _dataPatientsRegisterError.phoneMother.isError = false;\r\n      //     _dataPatientsRegisterError.phoneFather.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      if(fieldName === 'PhoneFather'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      else if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientsRegisterError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientsRegisterError.identifier.openTooltip = true;\r\n          _dataPatientsRegisterError.identifier.isError = true;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.identifier.title = '';\r\n      _dataPatientsRegisterError.identifier.openTooltip = false;\r\n      _dataPatientsRegisterError.identifier.isError = false;\r\n      _dataPatientsRegisterError.identifier.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangePatientId = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 8){\r\n          _dataPatientsRegisterError.patientId.title = 'Mã BN phải từ 8 đến 12 số';\r\n          _dataPatientsRegisterError.patientId.openTooltip = true;\r\n          _dataPatientsRegisterError.patientId.isError = true;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          if(focusField === 'patientId'){\r\n            setFocusField(null);\r\n          }\r\n          \r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.patientId = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.patientId.title = '';\r\n          _dataPatientsRegisterError.patientId.openTooltip = false;\r\n          _dataPatientsRegisterError.patientId.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    // else{\r\n    //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n    //   _dataPatientsRegisterError.patientId.title = '';\r\n    //   _dataPatientsRegisterError.patientId.openTooltip = false;\r\n    //   _dataPatientsRegisterError.patientId.isError = false;\r\n    //   _dataPatientsRegisterError.patientId.focus = false;\r\n    //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    // }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullName = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      if(dataPatientsRegisterError.fullName.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullName.title = '';\r\n        _dataPatientsRegisterError.fullName.openTooltip = false;\r\n        _dataPatientsRegisterError.fullName.isError = false;\r\n        _dataPatientsRegisterError.fullName.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n\r\n      // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n      //   handleFindOldDisease();\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n\r\n        if(today < takenValue || age > 2 || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientsRegisterError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n        }\r\n\r\n        else{\r\n          if(focusField === 'dayOfBirth'){\r\n            setFocusField(null);\r\n          }\r\n\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n          prevDataPatientsRegister.patient.dayOfBirth = formattedDate\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.dayOfBirth.title = '';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n          //   handleFindOldDisease();\r\n          // }\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.gender = value.genderValue\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.gender.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.gender.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.gender.title = '';\r\n      _dataPatientsRegisterError.gender.openTooltip = false;\r\n      _dataPatientsRegisterError.gender.isError = false;\r\n      _dataPatientsRegisterError.gender.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n    //   handleFindOldDisease();\r\n    // }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.province.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.district.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.province.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.province.title = '';\r\n      _dataPatientsRegisterError.province.openTooltip = false;\r\n      _dataPatientsRegisterError.province.isError = false;\r\n      _dataPatientsRegisterError.province.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.district.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.district.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.district.title = '';\r\n      _dataPatientsRegisterError.district.openTooltip = false;\r\n      _dataPatientsRegisterError.district.isError = false;\r\n      _dataPatientsRegisterError.district.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n    \r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.codeWard = value.code\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.ward.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.ward.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.ward.title = '';\r\n      _dataPatientsRegisterError.ward.openTooltip = false;\r\n      _dataPatientsRegisterError.ward.isError = false;\r\n      _dataPatientsRegisterError.ward.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeFolk = (value) => {\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'address'){\r\n        setFocusField(null);\r\n      }\r\n      \r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.address = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.address.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.address.title = '';\r\n        _dataPatientsRegisterError.address.openTooltip = false;\r\n        _dataPatientsRegisterError.address.isError = false;\r\n        _dataPatientsRegisterError.address.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'fullNameMother'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameMother = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        if(focusField === 'phoneMother'){\r\n          setFocusField(null);\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneMother.isError = true;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneMother = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneMother.title = '';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneMother.isError = false;\r\n      _dataPatientsRegisterError.phoneMother.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    if(focusField === 'fullNameFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameFather = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (e, value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneFather.isError = true;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneFather = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'phoneFather'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneFather.title = '';\r\n      _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneFather.isError = false;\r\n      _dataPatientsRegisterError.phoneFather.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'height'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.height = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.height.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.height.title = '';\r\n        _dataPatientsRegisterError.height.openTooltip = false;\r\n        _dataPatientsRegisterError.height.isError = false;\r\n        _dataPatientsRegisterError.height.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'weight'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.weight = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.weight.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.weight.title = '';\r\n        _dataPatientsRegisterError.weight.openTooltip = false;\r\n        _dataPatientsRegisterError.weight.isError = false;\r\n        _dataPatientsRegisterError.weight.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'headCircumference'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.headCircumference = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.headCircumference.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.headCircumference.title = '';\r\n        _dataPatientsRegisterError.headCircumference.openTooltip = false;\r\n        _dataPatientsRegisterError.headCircumference.isError = false;\r\n        _dataPatientsRegisterError.headCircumference.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onSelectMedicalType = (e, value) => {\r\n    if(focusField === 'medicalType'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.medicalTypeId = value.medicalTypeId\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.medicalType.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.medicalType.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.medicalType.title = '';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = false;\r\n      _dataPatientsRegisterError.medicalType.isError = false;\r\n      _dataPatientsRegisterError.medicalType.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeReason = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.reason = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      // if(dataPatientsRegisterError.reason.isError){\r\n      //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      //   _dataPatientsRegisterError.reason.isError = false;\r\n      //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.vaccination = bool\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.vaccination = bool\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkValidate = () => {\r\n    let isValid = true;\r\n    const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n\r\n    if(dataPatientsRegisterError.identifier.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.identifier.focus = true;\r\n        setFocusField('identifier');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.patientId === ''){\r\n      _dataPatientsRegisterError.patientId.title = 'Bạn chưa nhập mã bệnh nhân';\r\n      _dataPatientsRegisterError.patientId.openTooltip = true;\r\n      _dataPatientsRegisterError.patientId.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.patientId.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullName === ''){\r\n      _dataPatientsRegisterError.fullName.title = 'Bạn chưa nhập họ tên';\r\n      _dataPatientsRegisterError.fullName.openTooltip = true;\r\n      _dataPatientsRegisterError.fullName.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullName.focus = true;\r\n        setFocusField('fullName');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.dayOfBirth === ''){\r\n      _dataPatientsRegisterError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n      _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n      _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.dayOfBirth.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.gender === ''){\r\n      _dataPatientsRegisterError.gender.title = 'Bạn chưa chọn giới tính';\r\n      _dataPatientsRegisterError.gender.openTooltip = true;\r\n      _dataPatientsRegisterError.gender.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.gender.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n      setFocusField('gender');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.province.value === null){\r\n      _dataPatientsRegisterError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n      _dataPatientsRegisterError.province.openTooltip = true;\r\n      _dataPatientsRegisterError.province.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.province.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('province');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.district.value === null){\r\n      _dataPatientsRegisterError.district.title = 'Bạn chưa chọn quận huyện';\r\n      _dataPatientsRegisterError.district.openTooltip = true;\r\n      _dataPatientsRegisterError.district.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.district.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('district');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.ward.value === null){\r\n      _dataPatientsRegisterError.ward.title = 'Bạn chưa chọn phường xã';\r\n      _dataPatientsRegisterError.ward.openTooltip = true;\r\n      _dataPatientsRegisterError.ward.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.ward.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('ward');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.address === ''){\r\n      _dataPatientsRegisterError.address.title = 'Bạn chưa nhập địa chỉ';\r\n      _dataPatientsRegisterError.address.openTooltip = true;\r\n      _dataPatientsRegisterError.address.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.address.focus = true;\r\n        setFocusField('address');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullNameMother === '' && dataPatientsRegister.patient.fullNameFather === ''){\r\n      _dataPatientsRegisterError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n      _dataPatientsRegisterError.fullNameMother.openTooltip = true;\r\n      _dataPatientsRegisterError.fullNameMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullNameMother.focus = true;\r\n        setFocusField('fullNameMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.phoneMother === '' && dataPatientsRegister.patient.phoneFather === ''){\r\n      _dataPatientsRegisterError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n      _dataPatientsRegisterError.phoneMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneMother.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneFather.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneFather.focus = true;\r\n        setFocusField('phoneFather');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.weight === ''){\r\n      _dataPatientsRegisterError.weight.title = 'Bạn chưa nhập cân nặng';\r\n      _dataPatientsRegisterError.weight.openTooltip = true;\r\n      _dataPatientsRegisterError.weight.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.weight.focus = true;\r\n        setFocusField('weight');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.height === ''){\r\n      _dataPatientsRegisterError.height.title = 'Bạn chưa nhập chiều cao';\r\n      _dataPatientsRegisterError.height.openTooltip = true;\r\n      _dataPatientsRegisterError.height.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.height.focus = true;\r\n        setFocusField('height');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.headCircumference === ''){\r\n      _dataPatientsRegisterError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n      _dataPatientsRegisterError.headCircumference.openTooltip = true;\r\n      _dataPatientsRegisterError.headCircumference.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.headCircumference.focus = true;\r\n        setFocusField('headCircumference');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.medicalTypeId === ''){\r\n      _dataPatientsRegisterError.medicalType.title = 'Bạn chưa chọn loại hình khám';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = true;\r\n      _dataPatientsRegisterError.medicalType.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.medicalType.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('medicalType');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    // if(dataPatientsRegister.reason === ''){\r\n    //   _dataPatientsRegisterError.reason.isError = true;\r\n    //   isValid = false;\r\n    // }\r\n\r\n    setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    return isValid;\r\n  }\r\n\r\n  const handleMedicalRegister = () => {\r\n    setTimeout(() => {\r\n      if(checkValidate()){\r\n        firstFocusRef.current.focus();\r\n        if(props.dataPantientAppointmentsToday){\r\n          handleMedicalBackRegister();\r\n        }\r\n        else{\r\n          setOpenModalExaminingSession(true);\r\n        }\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const handleMedicalBackRegister = async () => {\r\n    setOpenAlertProcessing(true);\r\n    const responseCreateMedicalBackRegister = await createMedicalBackRegister(dataPatientsRegister);\r\n    if(responseCreateMedicalBackRegister.status === 200){\r\n      toast.success(responseCreateMedicalBackRegister.data, {toastId: 'success5'})\r\n      props.setCompleteMedicalRegister(true);\r\n      handleResetField();\r\n    }\r\n    else{\r\n      toast.error(responseCreateMedicalBackRegister.data, {toastId: 'error5'})\r\n    }\r\n    setOpenAlertProcessing(false);\r\n  }\r\n\r\n  const handleApplyPantientOldDiseaseData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = dataPatientsRegister.patient.identifier;\r\n    document.getElementById('patientId').value = dataPatientsRegister.patient.patientId;\r\n    document.getElementById('patientFullName').value = dataPatientsRegister.patient.fullName;\r\n\r\n    let _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(dataPatientsRegister.patient.dayOfBirth);\r\n\r\n    if(dataPatientsRegister.patient.codeWard){\r\n      const response = await getFullAddressByIdWard(dataPatientsRegister.patient.codeWard);\r\n      const responseListDistrict = await getListDistrict(response.provinceCode);\r\n      const responseListWard = await getListWard(response.districtCode);\r\n  \r\n      const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n      const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n      const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n      \r\n      _autocompleteValue.province.value = listProvince[indexListProvince];\r\n      _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n      _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n      _autocompleteValue.vaccination = dataPatientsRegister.vaccination;\r\n    }\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === dataPatientsRegister.patient.gender);\r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === dataPatientsRegister.medicalTypeId);\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    setIsOldDiseaseWithNullCodeWard(true);\r\n    \r\n    document.getElementById('patientAddress').value = dataPatientsRegister.patient.address;\r\n    document.getElementById('patientFullNameMother').value = dataPatientsRegister.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = dataPatientsRegister.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = dataPatientsRegister.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = dataPatientsRegister.patient.phoneFather;\r\n\r\n    if(dataPatientsRegister.oldDiseaseWithNullCodeWard){\r\n      setTimeout(() => {\r\n        setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n        setOpenAlertProcessing(false);\r\n\r\n        setFocusField('province');\r\n      }, 300)\r\n    }\r\n    else{\r\n      setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n      setOpenAlertProcessing(false);\r\n      \r\n      setFocusField('weight');\r\n    }\r\n  }\r\n\r\n  const handleApplyPantientAppointmentsTodayData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = props.dataPantientAppointmentsToday.patient.identifier;\r\n    document.getElementById('patientId').value = props.dataPantientAppointmentsToday.patient.patientId;\r\n    document.getElementById('patientFullName').value = props.dataPantientAppointmentsToday.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(props.dataPantientAppointmentsToday.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(props.dataPantientAppointmentsToday.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === props.dataPantientAppointmentsToday.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === props.dataPantientAppointmentsToday.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = props.dataPantientAppointmentsToday.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = props.dataPantientAppointmentsToday.patient.address;\r\n    document.getElementById('patientFullNameMother').value = props.dataPantientAppointmentsToday.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = props.dataPantientAppointmentsToday.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = props.dataPantientAppointmentsToday.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = props.dataPantientAppointmentsToday.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('height');\r\n  }\r\n\r\n  const handleResetField = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n\r\n    const oldDisease = dataPatientsRegister.oldDisease ? true : false\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n\r\n    if(isOldDiseaseWithNullCodeWard){\r\n      setIsOldDiseaseWithNullCodeWard(false);\r\n    }\r\n\r\n    if(oldDisease){\r\n      setTimeout(() => {\r\n        firstFocusRef.current.focus();\r\n      }, 100)\r\n    }\r\n    else{\r\n      firstFocusRef.current.focus();\r\n    }\r\n  }\r\n\r\n  const handleOpenModalOldDisease = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n    firstFocusRef.current.focus();\r\n\r\n    if(isOldDiseaseWithNullCodeWard){\r\n      setIsOldDiseaseWithNullCodeWard(false);\r\n    }\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const response = await getListProvince();\r\n    if(response !== 400){\r\n      setListProvince(response);\r\n    }\r\n  }\r\n\r\n  // const handleFindOldDisease = async () => {\r\n  //   const response = await getListOldDisease('', '', dataPatientsRegister.patient.fullName, dataPatientsRegister.patient.dayOfBirth, dataPatientsRegister.patient.gender);\r\n  //   if(response.length !== 0){\r\n  //     setListOldDiseaseRegister(response);\r\n  //     setOpenOldDiseaseRegister(true);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleGetListProvince();\r\n    firstFocusRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isOldDiseaseWithNullCodeWard])\r\n\r\n  useEffect(() => {\r\n    if(dataPatientsRegister.oldDisease === true){\r\n      handleApplyPantientOldDiseaseData();\r\n    }\r\n  }, [dataPatientsRegister])\r\n\r\n  useEffect(() => {\r\n    if(props.dataPantientAppointmentsToday){\r\n      setDataPatientsRegister(props.dataPantientAppointmentsToday);\r\n      handleApplyPantientAppointmentsTodayData();\r\n    }\r\n  }, [props.dataPantientAppointmentsToday]) \r\n\r\n  useEffect(() => {\r\n    if(isDialogChangePasswordOpen === false){\r\n      if(props.onF2Press){\r\n        if(openModalExaminingSession === true && openModalOldDisease === false){\r\n          setIsContinueSelectedExaminingSession(true);\r\n          props.setOnF2Press(false);\r\n        }\r\n        else{\r\n          handleMedicalRegister();\r\n          props.setOnF2Press(false);\r\n        }\r\n      }\r\n      \r\n      if(props.onF4Press){\r\n        if(openModalExaminingSession === true || openModalOldDisease === true){\r\n          props.setOnF4Press(false);\r\n        }\r\n        else{\r\n          handleResetField();\r\n          props.setOnF4Press(false);\r\n        }\r\n      }\r\n\r\n      if(props.onF8Press){\r\n        if(openModalExaminingSession === true || openModalOldDisease === true){\r\n          props.setOnF8Press(false);\r\n        }\r\n        else{\r\n          handleOpenModalOldDisease();\r\n          props.setOnF8Press(false);\r\n        }\r\n      }\r\n    }\r\n  }, [props.onF2Press, props.onF4Press, props.onF8Press, isDialogChangePasswordOpen])\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{'&.MuiContainer-maxWidthLg': {pr: 0}, height: '100%',}}>\r\n        <Box sx={{ minHeight: '36.8rem', borderRadius: '20px', boxShadow: 5, pt: 1.2, pb: 1.2, pl: 2.4, pr: 2.4, }}>\r\n          <Typography variant='h6' sx={{textAlign: 'center', fontWeight: 'bolder', color: 'blue'}}>Thông tin đăng ký khám</Typography> \r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}} component=\"form\" ref={formRef}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.identifier.title}</h6>} open={dataPatientsRegisterError.identifier.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.identifier.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã định danh\" variant=\"outlined\" id='patientIdentifier' autoComplete='off'\r\n                  inputRef={focusField === 'identifier' ? (input) => input && focusField === 'identifier' && input.focus() : firstFocusRef}\r\n                  onChange={(e) => onChangeIdentifier(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Identifier')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.patientId.title}</h6>} open={dataPatientsRegisterError.patientId.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.patientId.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã BN\" variant=\"outlined\" id='patientId' autoComplete='off'\r\n                  inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                  onChange={(e) => onChangePatientId(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'PatientId')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullName.title}</h6>} open={dataPatientsRegisterError.fullName.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }} \r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [37, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              > \r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullName.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên\" variant=\"outlined\" id=\"patientFullName\" autoComplete='off'                \r\n                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  /> \r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n      \r\n            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n              <ThemeProvider theme={tooltipTheme}>\r\n                <DemoContainer components={['DatePicker']} >\r\n                  <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.dayOfBirth.title}</h6>} open={dataPatientsRegisterError.dayOfBirth.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>    \r\n                    <Box sx={{width: 142, mt: '12px !important'}}>\r\n                      <div style={{width: '100%', }}>\r\n                        <DateField label=\"Ngày sinh\" \r\n                          format='DD/MM/YYYY' value={autocompleteValue.dayOfBirth}\r\n                          disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                          slotProps={{ \r\n                            textField: \r\n                              { \r\n                                inputRef: dateFieldRef,\r\n                                error: true ? dataPatientsRegisterError.dayOfBirth.isError === true : false,\r\n                                onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                sx: {'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } },\r\n                              }\r\n                          }}\r\n                          onChange={(value) => onChangeDOB(value)}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  </Tooltip>\r\n                </DemoContainer>\r\n              </ThemeProvider>      \r\n            </LocalizationProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.gender.title}</h6>} open={dataPatientsRegisterError.gender.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '12%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientGender' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.gender.value}\r\n                    options={listGender} \r\n                    getOptionLabel={(option) => option.genderName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.genderName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectGender(e, value)}\r\n                    open={autocompleteValue.gender.openOption}\r\n                    onFocus={() => handleFocus('Gender')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Giới tính\" \r\n                        inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.gender.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n             \r\n            {/* <TextField label=\"Dân tộc\" variant=\"outlined\" sx={{width: '12%', '&.MuiTextField-root' : {marginTop: '15px'}}}/> */}\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.province.title}</h6>} open={dataPatientsRegisterError.province.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '19.2%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                    value={autocompleteValue.province.value}\r\n                    options={listProvince} \r\n                    noOptionsText={'Đang tải...'}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectProvine(e, value)}\r\n                    open={autocompleteValue.province.openOption}\r\n                    onFocus={() => handleFocus('Province')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Thành phố\" \r\n                        inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.province.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.district.title}</h6>} open={dataPatientsRegisterError.district.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '24%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                    value={autocompleteValue.district.value}\r\n                    options={listDistrict.list} \r\n                    noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                    open={autocompleteValue.district.openOption}\r\n                    onFocus={() => handleFocus('District')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.fullName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectDistrict(e, value)}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Quận/Huyện\" \r\n                        inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.district.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <>\r\n                              {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <>\r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.ward.title}</h6>} open={dataPatientsRegisterError.ward.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                  <div style={{width: '23.5%', marginTop: '20px'}}>\r\n                    <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                      value={autocompleteValue.ward.value}\r\n                      options={listWard.list} \r\n                      noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                      filterOptions={filterOptions}\r\n                      getOptionLabel={(option) => option.name}\r\n                      autoComplete={false}\r\n                      renderOption={(props, option) => (\r\n                        <li {...props}>\r\n                          {option.fullName}\r\n                        </li>\r\n                      )}\r\n                      onChange={(e, value) => onSelectWard(e, value)}\r\n                      open={autocompleteValue.ward.openOption}\r\n                      onFocus={() => handleFocus('Ward')}\r\n                      onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} \r\n                          label=\"Phường/Xã\" \r\n                          inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                          error={true ? dataPatientsRegisterError.ward.isError === true : false} \r\n                          sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                              <>\r\n                                {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                              </>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      disableClearable // Bỏ icon xóa\r\n                      popupIcon={null} // Bỏ icon dropdown\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.address.title}</h6>} open={dataPatientsRegisterError.address.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.address.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Địa chỉ\" variant=\"outlined\" id='patientAddress' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                    onChange={(e) => onChangeAddress(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullNameMother.title}</h6>} open={dataPatientsRegisterError.fullNameMother.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullNameMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên mẹ\" variant=\"outlined\" id='patientFullNameMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                    autoFocus={dataPatientsRegisterError.fullNameMother.focus}\r\n                    onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneMother.title}</h6>} open={dataPatientsRegisterError.phoneMother.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.phoneMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Điện thoại\" variant=\"outlined\" id='patientPhoneMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                    onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n\r\n            <TextField label=\"Họ tên cha\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n              variant=\"outlined\" id='patientFullNameFather' autoComplete='off'\r\n              sx={{width: '30.4%', '&.MuiTextField-root' : {marginTop: '20px'}}} \r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n              inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n              InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n            />\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneFather.title}</h6>} open={dataPatientsRegisterError.phoneFather.openTooltip}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField label=\"Điện thoại\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                    variant=\"outlined\" id='patientPhoneFather' autoComplete='off'\r\n                    onChange={(e) => onChangePhoneFather(e, e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneFather')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.weight.title}</h6>} open={dataPatientsRegisterError.weight.openTooltip} PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Cân nặng bé\" variant=\"outlined\" id='patientWeight' autoComplete='off' error={true ? dataPatientsRegisterError.weight.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(kg)</InputAdornment>}}\r\n                    onChange={(e) => onChangeWeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.height.title}</h6>} open={dataPatientsRegisterError.height.openTooltip} placement='left' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Chiều cao bé\" variant=\"outlined\" id='patientHeight' autoComplete='off' error={true ? dataPatientsRegisterError.height.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.headCircumference.title}</h6>} open={dataPatientsRegisterError.headCircumference.openTooltip} placement='top-start' PopperProps={{sx: { zIndex: 2 } }}\r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [70, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              >\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Vòng đầu bé\" variant=\"outlined\" id='patientHeadCircumference' autoComplete='off' error={true ? dataPatientsRegisterError.headCircumference.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.medicalType.title}</h6>} open={dataPatientsRegisterError.medicalType.openTooltip} placement='bottom' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30.5%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientMedicalType' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.medicalType.value}\r\n                    options={listMedicalType} \r\n                    getOptionLabel={(option) => option.medicalTypeName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.medicalTypeName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectMedicalType(e, value)}\r\n                    open={autocompleteValue.medicalType.openOption}\r\n                    onFocus={() => handleFocus('MedicalType')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'MedicalType')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Loại hình khám\" \r\n                        inputRef={(input) => input && focusField === 'medicalType' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.medicalType.isError === true : false} \r\n                        sx={{\r\n                          '& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } ,\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.Mui-disabled.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'},\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'}\r\n                        }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.reason.title}</h6>} open={dataPatientsRegisterError.reason.openTooltip} >\r\n                <div style={{width: '100%' }}>\r\n                  <TextField fullWidth label=\"Lý do khám\" multiline rows={3} variant=\"outlined\" id='patientReason' autoComplete='off' error={true ? dataPatientsRegisterError.reason.isError === true : false}\r\n                    sx={{'&.MuiTextField-root' : {marginTop: '20px'}}} \r\n                    onChange={(e) => onChangeReason(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <FormControlLabel control={<Checkbox checked={autocompleteValue.vaccination}/>} sx={{width: '100%'}}\r\n              label=\"Bệnh nhân có tham gia tiêm ngừa\" onChange={(e) => onChangeVaccination(e.target.checked)}/>  \r\n\r\n            <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n              <Button variant=\"contained\" color=\"primary\" sx={{mr: 1}} onClick={() => handleMedicalRegister()}>Đăng ký (f2)</Button>\r\n              <Button variant=\"contained\" color=\"warning\" onClick={() => handleResetField()}>Làm mới (f4)</Button>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => handleOpenModalOldDisease()}>Bệnh cũ (f8)</Button>\r\n            </Box>\r\n          </Box>         \r\n        </Box>\r\n      </Container>\r\n\r\n      <ExaminingSession \r\n        openModalExaminingSession={openModalExaminingSession} setOpenModalExaminingSession={setOpenModalExaminingSession} \r\n        handleResetField={handleResetField} setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        isContinueSelectedExaminingSession={isContinueSelectedExaminingSession} setIsContinueSelectedExaminingSession={setIsContinueSelectedExaminingSession}\r\n        dataPatientsRegister={dataPatientsRegister} \r\n      />\r\n\r\n      <OldDisease \r\n        openModalOldDisease={openModalOldDisease} setOpenModalOldDisease={setOpenModalOldDisease}\r\n        dataPatientsRegister={dataPatientsRegister} setDataPatientsRegister={setDataPatientsRegister}\r\n      />\r\n\r\n      {/* <OldDiseaseForRegister\r\n        openOldDiseaseRegister={openOldDiseaseRegister} setOpenOldDiseaseRegister={setOpenOldDiseaseRegister}\r\n        setDataPatientsRegister={setDataPatientsRegister}\r\n        listOldDiseaseRegister={listOldDiseaseRegister} setListOldDiseaseRegister={setListOldDiseaseRegister}\r\n      /> */}\r\n\r\n      <AlertProcessing\r\n        openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookMedical","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//modal\r\nimport SelectedDoctorExamining from '../ManageSelectedDoctorExamining/SelectedDoctorExamining';\r\n//components\r\nimport ListPatientsRegister from './ListPatientsRegister';\r\nimport BookMedical from './BookMedical';\r\n//api\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nfunction MainMedicalRegister() {\r\n\r\n  const { user, loading } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [component1Loading, setComponent1Loading] = useState(true);\r\n\r\n  const [completeMedicalRegister, setCompleteMedicalRegister] = useState(false);\r\n  const [dataPantientAppointmentsToday, setDataPantientAppointmentsToday] = useState();\r\n\r\n  const [handleResetField, setHandleResetField] = useState(false); //F2\r\n  const [handleOpenModalExaminingSession, setHandleOpenModalExaminingSession] = useState(false); //F4\r\n  const [handleOpenModalOldDisease, setHandleOpenModalOldDisease] = useState(false); //F8\r\n\r\n  const handleF2Press = () => {\r\n    setHandleOpenModalExaminingSession(true);\r\n  }\r\n\r\n  const handleF4Press = () => {\r\n    setHandleResetField(true);\r\n  }\r\n\r\n  const handleF8Press = () => {\r\n    setHandleOpenModalOldDisease(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(loading === false && user.isLogin){\r\n      if(user.positionName !== 'Nursing'){\r\n        history.push('/404');\r\n      }\r\n    }\r\n  }, [loading, user])\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if(event.keyCode === 113){\r\n        event.preventDefault()\r\n        //nhấn F2 để đăng ký khám\r\n        handleF2Press();\r\n      }\r\n      else if(event.keyCode === 115){\r\n        event.preventDefault()\r\n        //nhấn F4 để reset các input field \r\n        handleF4Press();\r\n      }\r\n      else if(event.keyCode === 119){\r\n        event.preventDefault()\r\n        //nhấn F8 để tìm bệnh cũ\r\n        handleF8Press();\r\n      }\r\n      else{\r\n\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n              <Grid container spacing={0} sx={{marginLeft: 0}}>\r\n                <Grid item xs={5}>  \r\n                  <ListPatientsRegister \r\n                    completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                    component1Loading={component1Loading} setComponent1Loading={setComponent1Loading}\r\n                    dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                  />\r\n                </Grid>\r\n            \r\n                <Grid item xs={7} >\r\n                  {component1Loading ?\r\n                    <div style={{marginLeft: '18px'}}>\r\n                      <Skeleton variant='rectangular' width=\"100%\" height={590} />\r\n                    </div>\r\n                  :\r\n                    <BookMedical \r\n                      onF2Press={handleOpenModalExaminingSession} setOnF2Press={setHandleOpenModalExaminingSession}\r\n                      onF4Press={handleResetField} setOnF4Press={setHandleResetField}\r\n                      onF8Press={handleOpenModalOldDisease} setOnF8Press={setHandleOpenModalOldDisease}\r\n                      completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                      dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                    />\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n         {/* <SelectedDoctorExamining \r\n          openSelectedDoctorExaminingModal={openSelectedDoctorExaminingModal} setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n          currentDoctorExamining={currentDoctorExamining} setCurrentDoctorExamining={setCurrentDoctorExamining}\r\n         /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainMedicalRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getAppointmentsNextWeek, updateStateAppointment } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainAppointmentExamining() {\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chưa nhắc hẹn khám'});\r\n    const [listPantientAppointmentChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [listAppointment, setListAppointment] = useState();\r\n    \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n    const [listDataPatientsAppointmentPaginate, setListDataPatientsAppointmentPaginate] = useState([]);\r\n    const [listDataPatientsAppointmentState, setListDataPatientsAppointmentState] = useState();\r\n    const [listDataPatientsAppointmentSort, setListDataPatientsAppointmentSort] = useState([]);\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [pageCount, setPageCount] = useState();\r\n\r\n    const [dataAppointment, setDataAppointment] = useState();\r\n\r\n    const handlePaginate = (data) => {\r\n        const itemsPerPage = 5;\r\n        if(data){\r\n            const calculatedPageCount = Math.ceil(data.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = data.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n        else{\r\n            const calculatedPageCount = Math.ceil(listDataPatientsAppointmentPaginate.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = listDataPatientsAppointmentPaginate.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    }\r\n\r\n    const handleGetAppointmentsNextWeek = async () => {\r\n        setLoading(true);\r\n        const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n        setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n        const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n        const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n        const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n        const updateListPantientAppointmentChipState = [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n        ]\r\n\r\n        setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n        if(activeChip.chipOrder === 0){\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind)\r\n        }\r\n\r\n        else if(activeChip.chipOrder === 1){\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n            handlePaginate(_listAppointmentAcceptReExamining)\r\n        }\r\n\r\n        else{\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n            handlePaginate(_listAppointmentRejectReExamining)\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n            const _listAppointmentNotRemind = listAppointment.filter(item => item.stateAppointment === 0);\r\n\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const _listAppointmentAcceptReExamining = listAppointment.filter(item => item.stateAppointment === 1);\r\n\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining);\r\n            handlePaginate(_listAppointmentAcceptReExamining);\r\n        }\r\n        else{\r\n            const _listAppointmentRejectReExamining = listAppointment.filter(item => item.stateAppointment === 2);\r\n\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining);\r\n            handlePaginate(_listAppointmentRejectReExamining);\r\n        }\r\n    }\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsAppointmentSort(listDataPatientsAppointmentState);\r\n        }else{\r\n          setListDataPatientsAppointmentSort(searchPatients(listDataPatientsAppointmentState, takenValue));\r\n        }\r\n    }\r\n\r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, patientFullName, phoneMother, phoneFather } = patientObj;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || patientFullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const onChangeAppointmentDate = (medicalBookId, appointmentDate) => {\r\n        if(appointmentDate){\r\n            const takenValue = appointmentDate._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const today = new Date();\r\n                const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n                const convertAppointmentDateFindDataAppointment = new Date(findDataAppointment.appointmentDate)\r\n\r\n                if(today <= takenValue || takenValue >= convertAppointmentDateFindDataAppointment){\r\n                    findDataAppointment.appointmentDate = moment(takenValue).format('YYYY-MM-DD');\r\n                }\r\n            }, 100) \r\n        }\r\n        \r\n    }\r\n\r\n    const handleAcceptReExamining = async (medicalBookId) => {\r\n        setLoading(true);\r\n\r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 1);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            \r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleRejectReExamining = async (medicalBookId) => {\r\n        setLoading(true);\r\n        \r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 2);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetAppointmentsNextWeek();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handlePaginate();\r\n    }, [page]);\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1, p: 0 }}>\r\n            <TableContainer component={Paper} sx={{height: loading ? '40rem' : 'auto', position: 'relative'}}>\r\n                {loading ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>        \r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Box>\r\n                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                {listPantientAppointmentChipState.map((pantientAppointmentChipStateItem, pantientAppointmentChipStateIndex) => (\r\n                                    <Badge badgeContent={pantientAppointmentChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientAppointmentChipStateIndex}`}> \r\n                                        <Chip label={pantientAppointmentChipStateItem.chipLabel} color={pantientAppointmentChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                            onClick={() => handleSelectedChip(pantientAppointmentChipStateIndex, pantientAppointmentChipStateItem.chipLabel)} />  \r\n                                    </Badge>\r\n                                ))}\r\n                            </Stack>\r\n\r\n                            <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.15rem', fontWeight: 'bolder'}}>Danh sách {activeChip.chipLabel} trong 6 ngày tới</Typography>\r\n\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', mb: 1}}>\r\n                                <TextField sx={{width: 500, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc Số điện thoại' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                        startAdornment: (\r\n                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                        ),\r\n                                        endAdornment: (\r\n                                            <InputAdornment position='end'>\r\n                                                {searchPatientsQuery !== '' ? \r\n                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsAppointmentSort(listDataPatientsAppointmentState)]}\r\n                                                    /> \r\n                                                : \r\n                                                    null\r\n                                                }\r\n                                            </InputAdornment>  \r\n                                        )\r\n                                    }}>\r\n                                </TextField>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Table stickyHeader >\r\n                            <TableHead>\r\n                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                    <TableCell align='left' >Mã bệnh nhân</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày sinh</TableCell>\r\n                                    {/* <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Giới tính</TableCell> */}\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Địa chỉ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên Cha/Mẹ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Số điện thoại</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám cũ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám tiếp theo</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày hẹn khám</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Nhấn</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {listDataPatientsAppointmentSort.map((dataPantientAppointmentItem, dataPantientAppointmentIndex) => (\r\n                                    <TableRow hover role=\"checkbox\" key={dataPantientAppointmentIndex} sx={{':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1) !important'}}}>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientId}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientFullName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{moment(dataPantientAppointmentItem.dateOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                        {/* <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.gender === true ? 'Nam' : 'Nữ'}</TableCell> */}\r\n                                        <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 240, fontSize: '0.9rem'}}>\r\n                                            <Tooltip title={<Typography variant='subtitle2'>{dataPantientAppointmentItem.fullAddress}</Typography>} >\r\n                                                <span>{dataPantientAppointmentItem.fullAddress}</span>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.fullNameFather !== '' ? dataPantientAppointmentItem.fullNameFather : dataPantientAppointmentItem.fullNameMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.phoneFather !== '' ? dataPantientAppointmentItem.phoneFather : dataPantientAppointmentItem.phoneMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.examNameOld}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.nextExamName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto'}}>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                                <DemoContainer components={['DatePicker']}> \r\n                                                    <Box sx={{width: 145}}>\r\n                                                        <div style={{width: '100%'}}>\r\n                                                            <DatePicker label=\"Ngày khám dự kiến\" disablePast minDate={moment()}\r\n                                                                format='DD/MM/YYYY' value={moment(dataPantientAppointmentItem.appointmentDate)}\r\n                                                                onChange={(value) => onChangeAppointmentDate(dataPantientAppointmentItem.medicalBookId, value)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Box> \r\n                                                </DemoContainer>\r\n                                            </LocalizationProvider>\r\n                                        </TableCell>                                                                                                \r\n                                        <TableCell align={dataPantientAppointmentItem.stateAppointment === 0 ? 'left' : 'center'} sx={{width: 'auto', fontSize: '0.9rem'}}>\r\n                                            {dataPantientAppointmentItem.stateAppointment === 0 ?\r\n                                                <>   \r\n                                                    <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {dataPantientAppointmentItem.stateAppointment === 1 ?\r\n                                                        <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    :\r\n                                                        <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </>\r\n                }\r\n            </TableContainer>\r\n\r\n            {listDataPatientsAppointmentSort.length !== 0 && loading === false ?\r\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n                    <Pagination count={pageCount} page={page} onChange={handlePageChange} color=\"secondary\" />\r\n                </Box>\r\n            :\r\n                null\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainAppointmentExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport _ from 'lodash'\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DialogActions } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//other\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n//css\r\nimport './SCSS/CompleteExamining.scss';\r\n//api\r\nimport { createAddPredecessor, createAddMedicalBook, getAppointmentDate } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CompleteExamining(props) {\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState();\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n\r\n    const typingRef = useRef(null);\r\n    const textareaRef = useRef(null);\r\n    const dateFieldRef = useRef(null);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleCloseModalCompleteExamining = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n          return;\r\n        }\r\n        else{\r\n            setMainDataExaminingForConclusion();\r\n            props.setOpenModalCompleteExamining(false);\r\n        }\r\n      }\r\n\r\n    const onChangeExaminingConclusion = (value) => {\r\n        typingRef.current = setTimeout(() => {\r\n            setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                prevMainDataExaminingForConclusion.conclusion = value;\r\n                return {...prevMainDataExaminingForConclusion}\r\n            })\r\n        }, 300)\r\n    }\r\n\r\n    const onChangeAppointmentDate = (value) => {\r\n        if(value){\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n            typingRef.current = setTimeout(() => {\r\n                const takenValue = value._d;\r\n                const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n                if(formattedDate !== 'Invalid date'){\r\n                    setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                        prevMainDataExaminingForConclusion.appointmentDate = formattedDate;\r\n                        return {...prevMainDataExaminingForConclusion}\r\n                    })\r\n                }\r\n            }, 200)   \r\n        }\r\n    }\r\n\r\n    const handleSetDataCompleteExamining = async () => {\r\n        setOpenAlertProcessing(true);\r\n\r\n        const editDataExaminingForConclusion = _.clone(props.dataExaminingForConclusion);\r\n        editDataExaminingForConclusion.categories = editDataExaminingForConclusion.categories.map(categoriesItem => ({\r\n            ...categoriesItem,\r\n            // Lọc các categoryContents để giữ lại những phần tử có categoryContentQuestions không rỗng\r\n            categoryContents: categoriesItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length > 0)\r\n\r\n            // Loại bỏ các categories nếu tất cả categoryContents của nó đều bị loại bỏ\r\n        })).filter(categoriesItem => categoriesItem.categoryContents.length > 0);\r\n\r\n        const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        if(responseAppointmentDate.status === 200){\r\n            editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n            editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n            editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n            if(editDataExaminingForConclusion.isVaccination){\r\n                editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n                editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n                editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n            }\r\n\r\n        }else{\r\n            toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        }\r\n \r\n        setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        setOpenAlertProcessing(false);\r\n        if(props.dataExaminingForConclusion.conclusion !== ''){\r\n            const length = textareaRef.current.value.length;\r\n            textareaRef.current.setSelectionRange(length, length);\r\n            textareaRef.current.focus();\r\n        }\r\n        else{\r\n            textareaRef.current.focus();\r\n        }\r\n\r\n        // if(editDataExaminingForConclusion.categories.length !== 0){\r\n            \r\n        //     const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        //     if(responseAppointmentDate.status === 200){\r\n        //         editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n        //         editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n        //         editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n        //         if(editDataExaminingForConclusion.isVaccination){\r\n        //             editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n        //             editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n        //             editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n        //         }\r\n\r\n        //     }else{\r\n        //         toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        //     }\r\n \r\n        //     setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        //     setOpenAlertProcessing(false);\r\n        //     if(props.dataExaminingForConclusion.conclusion !== ''){\r\n        //         const length = textareaRef.current.value.length;\r\n        //         textareaRef.current.setSelectionRange(length, length);\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        //     else{\r\n        //         textareaRef.current.focus();\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    const handleAddMedicalBook = async () => {\r\n        if(checkValidate()){\r\n            setOpenAlertProcessing(true);\r\n    \r\n                if(mainDataExaminingForConclusion.categories.some(categoriesItem => categoriesItem.isPredecessor === true)){\r\n                    const categoryPres = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isPredecessor === true)\r\n                    const dataPredecessor = { patientId: mainDataExaminingForConclusion.patientId, categoryPres: categoryPres }\r\n                    await createAddPredecessor(dataPredecessor);\r\n                }\r\n\r\n                const categoriesHealthRecordExamining = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isHealthRecord === true)\r\n                mainDataExaminingForConclusion.categories = categoriesHealthRecordExamining\r\n                const responseAddMedicalBook = await createAddMedicalBook(mainDataExaminingForConclusion);\r\n                if(responseAddMedicalBook.status === 200){\r\n                    toast.success(responseAddMedicalBook.data, {toastId: 'success3'});\r\n                    props.handleCompleteExaminingForPantient();\r\n                    setMainDataExaminingForConclusion();\r\n                    props.setOpenModalCompleteExamining(false);\r\n                }\r\n                else{\r\n                    toast.error(responseAddMedicalBook.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            setOpenAlertProcessing(false);\r\n    }\r\n\r\n    const checkValidate = () => {\r\n        let isValid = true;\r\n        if(mainDataExaminingForConclusion.conclusion === null){\r\n            textareaRef.current.focus();\r\n            toast.error('Bạn chưa nhập kết luận khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === 'Invalid date'){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Ngày tái khám không hợp lệ', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === ''){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Bạn chưa chọn ngày tái khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalCompleteExamining){\r\n            handleSetDataCompleteExamining();\r\n        }\r\n    }, [props.openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalCompleteExamining} onClose={(event, reason) => handleCloseModalCompleteExamining(event, reason)} disableEscapeKeyDown={true}>\r\n                <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Tóm tắt quá trình khám</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalCompleteExamining()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='large'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                    <Box sx={{pl: 6, pr: 6}}>\r\n                        <List sx={{p: 0}}>\r\n                            <Box>\r\n                                {mainDataExaminingForConclusion ? \r\n                                    mainDataExaminingForConclusion.categories.length !== 0 ? \r\n                                        <div className='category-complete-examining'>\r\n                                            {mainDataExaminingForConclusion.categories.map((categoriesItem, categoriesIndex) => (\r\n                                                <div key={`categoriesItem ${categoriesIndex}`}>\r\n                                                    <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                        {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                            <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                                \r\n                                                                {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                    <div key={`questionItem ${questionIndex}`}>\r\n                                                                        <Grid container rowSpacing={0}>\r\n                                                                            {questionIndex === 0 ?\r\n                                                                                <>\r\n                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                    </Grid> \r\n\r\n                                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                        <>\r\n                                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                            </Grid>\r\n                                                                        \r\n                                                                                            <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                        </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    }   \r\n                                                                                </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n                                                                \r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                                classes={{ root: classes.root }}\r\n                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                            />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={5.5} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                :   \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={8} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                }                                                                                                                                                                          \r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    :\r\n                                        <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                :\r\n                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                }\r\n                            </Box>\r\n                        </List>\r\n                    </Box>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{borderTop: '1px solid black'}}>\r\n                    {mainDataExaminingForConclusion ? \r\n                        <div style={{width: '100%', padding: '8px 50px 8px 50px'}}>\r\n                            <TextareaAutosize key={`pantientId ${mainDataExaminingForConclusion.patientId}`} placeholder='Kết luận của bác sĩ' style={{width: '100%', padding: '15px', fontSize: '17px'}} onChange={(e) => onChangeExaminingConclusion(e.target.value)} ref={textareaRef} defaultValue={mainDataExaminingForConclusion.conclusion} /> \r\n                            \r\n                                {mainDataExaminingForConclusion.isVaccination ? \r\n                                    <>\r\n                                        <Box sx={{mb: 0.4}}>\r\n                                            {mainDataExaminingForConclusion.vaccination === '' || mainDataExaminingForConclusion.vaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.vaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.nextVaccination === '' || mainDataExaminingForConclusion.nextVaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.nextVaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.reminder === '' ||  mainDataExaminingForConclusion.reminder === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.reminder}`}</Typography>\r\n                                                </>\r\n                                            }\r\n                                        </Box>\r\n                                            \r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n\r\n                                {mainDataExaminingForConclusion.appointmentDate ? \r\n                                <>\r\n                                    <Box sx={{display: 'flex', justifyContent: 'center', mb: 2}}>\r\n                                        <Typography variant='h6' sx={{mt: 'auto', mb: 'auto', mr: 2}}>Kỳ khám tiếp theo: <span style={{fontWeight: 'bolder', color: '#ff1744'}}>{mainDataExaminingForConclusion.nextExamName}</span></Typography>\r\n                                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                            <DemoContainer components={['DatePicker']}>  \r\n                                                <DatePicker label=\"Ngày khám dự kiến\" disablePast\r\n                                                    format='DD/MM/YYYY' defaultValue={moment(mainDataExaminingForConclusion.appointmentDate)}\r\n                                                    onChange={(value) => onChangeAppointmentDate(value)}\r\n                                                    slotProps={{ \r\n                                                        textField: { inputRef: dateFieldRef, }\r\n                                                    }}\r\n                                                />\r\n                                            </DemoContainer>\r\n                                        </LocalizationProvider>\r\n                                    </Box>\r\n                                </>\r\n                                :\r\n                                    null\r\n                                }\r\n                        \r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <Stack spacing={1} direction=\"row\">\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' onClick={() => handleAddMedicalBook()}>Lưu</Button>\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' color={'error'} onClick={() => handleCloseModalCompleteExamining()}>Đóng</Button>\r\n                                </Stack>\r\n                            </div>\r\n                        </div>   \r\n                    :\r\n                        null            \r\n                    }             \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//scss\r\nimport './SCSS/PreviewLastExamining.scss'; \r\n//api\r\nimport { getMedicalBook } from '../../Service/MedicalService';\r\n//moment\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi'; \r\nmoment.locale('vi');\r\n\r\nfunction PreviewLastExamining(props) {\r\n    const previewDataExaminingDefault = {\r\n        categoryPres: [],\r\n        healthRecords: { examinationName: '', timeUpdateState: '', conclusion: '', medicakBook: [] },\r\n        nutritionals: [],\r\n        vaccinationBook: [] \r\n    }\r\n\r\n    const [previewDataExamining, setPreviewDataExamining] = useState(previewDataExaminingDefault);\r\n    // const [fullDataPredecessor, setFullDataPredecessor] = useState();\r\n    // const [fullDataHealthRecord, setFullDataHealthRecord] = useState();\r\n    \r\n    const [loadingMedicalBook, setLoadingMedicalBook] = useState(false);\r\n\r\n    const [openCollapsePredecessorItem, setOpenCollapsePredecessorItem] = useState([]);\r\n    const [openCollapseMedicakBookItem, setOpenCollapseMedicakBookItem] = useState([]);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpenPredecessorItem = (predecessorIndex) => {\r\n        setOpenCollapsePredecessorItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[predecessorIndex] = !newOpen[predecessorIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleOpenMedicakBookItem = (medicakBookIndex) => {\r\n        setOpenCollapseMedicakBookItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[medicakBookIndex] = !newOpen[medicakBookIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    // const handeOnChangePagePredecessor = (e, page, indexPredecessor) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].categoryContents = fullDataPredecessor[indexPredecessor].categoryContents[page - 1];\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    // const handeOnChangePageHealthRecords = (e, page, indexMedicakbook) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].categoryContents = fullDataHealthRecord[indexMedicakbook].categoryContents[page - 1];\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    const handleEditPrevDataExamining = async () => {\r\n        setLoadingMedicalBook(true);\r\n        const responseMedicalBook = await getMedicalBook(props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0].medicalRegisterId);\r\n        if(props.prevDataExamining.newPredecessor){\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n             \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: [],\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n\r\n        else{\r\n            if(props.prevDataExamining.categoryPres.length > 1){\r\n                props.prevDataExamining.categoryPres = props.prevDataExamining.categoryPres.sort((a, b) => a.categoryOrder - b.categoryOrder);\r\n            }\r\n\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n            \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: props.prevDataExamining.categoryPres,\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n        setLoadingMedicalBook(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.prevDataExamining){\r\n            handleEditPrevDataExamining();\r\n        }\r\n    }, [props.prevDataExamining])\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{height: '100%', position: 'relative'}}>\r\n                {loadingMedicalBook ? \r\n                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                        <CircularProgress />\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh gần nhất, hãy chờ một chút...</Typography>\r\n                    </Box>\r\n                :\r\n                    <>\r\n                        <div className='preview-last-examining-contents' >\r\n\r\n                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem'}}>\r\n                                Thông tin tóm tắt <span style={{color: 'red'}}>{previewDataExamining.healthRecords.examinationName}</span>\r\n                            </Typography>\r\n\r\n                            <List sx={{p: 0}}>\r\n                                {previewDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                    <div key={`predecessorItem ${predecessorIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenPredecessorItem(predecessorIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapsePredecessorItem[predecessorIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapsePredecessorItem[predecessorIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {predecessorItem.categoryContents.map((predecessorItemCategoryContentsItem, predecessorItemCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`predecessorItemCategoryContentsIndex ${predecessorItemCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: predecessorItemCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{predecessorItemCategoryContentsItem.categoryContentTitle}</Typography>\r\n                                                    \r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {predecessorItemCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{predecessorItemCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={6.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                                    \r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={6.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))} \r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                {previewDataExamining.healthRecords.medicakBook.map((medicakBookItems, medicakBookIndex) => (\r\n                                    <div key={`medicakBookItems ${medicakBookIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenMedicakBookItem(medicakBookIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseMedicakBookItem[medicakBookIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={medicakBookItems.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapseMedicakBookItem[medicakBookIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {medicakBookItems.categoryContents.map((medicakBookCategoryContentsItem, medicakBookCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`medicakBookCategoryContentsIndex ${medicakBookCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: medicakBookCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{medicakBookCategoryContentsItem.categoryContentTitle}</Typography>\r\n\r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {medicakBookCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{medicakBookCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={5.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))}\r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}             \r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n                            </List>\r\n\r\n                            <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận: ${previewDataExamining.healthRecords.conclusion}`}</Typography>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='time-examining' style={{marginLeft: '16px', marginTop: '4px', width: '99%'}}>\r\n                            <Typography variant='subtitle1' sx={{color: '#009688', fontWeight: 'bolder', fontSize: '1.08rem'}}>{`${previewDataExamining.healthRecords.doctorFullName}, ${moment(previewDataExamining.healthRecords.timeUpdateState).format('LLLL')}`}</Typography>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Box>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default PreviewLastExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//lodash\r\nimport _, { constant } from \"lodash\";\r\n//modal\r\nimport CompleteExamining from '../ManageCompleteExamining/CompleteExamining';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//components\r\nimport PreviewLastExamining from './PreviewLastExamining';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { GiWeightScale } from \"react-icons/gi\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport { TbRulerMeasure } from \"react-icons/tb\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport BeenhereIcon from '@mui/icons-material/Beenhere';\r\nimport VaccinesIcon from '@mui/icons-material/Vaccines';\r\n//moment\r\nimport moment from 'moment';\r\n//scss\r\nimport './SCSS/DoctorExamining.scss';\r\n//real-time\r\nimport {startSignalRConnection, onReceiveMessage} from '../../Service/SignalService';\r\n//api\r\nimport { \r\n    createAddPredecessor,\r\n    getMedicalDetailPatient,\r\n    getRegistersByDateNow, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook,\r\n    updateMedicalState,\r\n    deleteMedicalBook\r\n} from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainDoctorExamining() {\r\n    const dataPantientsReadyExaminingDefault = {\r\n        stt: '',\r\n        id: '',\r\n        patientsId: '',\r\n        patientsName: '',\r\n        patientsDOB: '',\r\n        patientsMonthsOld: '',\r\n        patientsGender: '',\r\n        patientsHeight: '',\r\n        patientsWeight: '',\r\n        patientsHeadCircumference: '',\r\n        patientsPhone: '',\r\n        patientsAddress: ''\r\n    }\r\n\r\n    const { user, loading, alertVisible, confirmAlert, resetAlert, isLogOutClick, isDialogChangePasswordOpen } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isFormDirty, setIsFormDirty] = useState(false);\r\n\r\n    //state thông tin bệnh nhân ban đầu \r\n    const [dataPantientsReadyExamining, setDataPantientsReadyExamining] = useState(dataPantientsReadyExaminingDefault);\r\n\r\n    //state các category gồm tiêu đề nội dung khám và câu hỏi khám ban đầu\r\n    const [mainDataExamining, setMainDataExamining] = useState([]);\r\n\r\n    //state lưu tạm data các kỳ khám \r\n    const [prevDataExamining, setPrevDataExamining] = useState();\r\n\r\n    //state đóng mở cây thư mục khám của sổ khám bệnh\r\n    const [openCollapseHealthRecords, setOpenCollapseHealthRecords] = useState(false);\r\n\r\n    //state đóng mở chi tiết nội dung của sổ khám bệnh\r\n    const [openCollapseHealthRecordsItem, setOpenCollapseHealthRecordsItem] = useState([]);\r\n\r\n    //state chọn danh mục khám ban đầu\r\n    const [categorySelectedExamining, setCategorySelectedExamining] = useState({});\r\n\r\n    //state chọn danh mục bao gồm nội dung bên trong ban đầu\r\n    const [contentCategorySelectedExamining, setContentCategorySelectedExamining] = useState([]);\r\n\r\n    //state lưu tạm nội dung chi tiết của sổ khám bệnh\r\n    const [healthRecordsContents, setHealthRecordsContents] = useState([]);\r\n    const [currentHealthRecordExamining, setCurrentHealthRecordExamining] = useState();\r\n\r\n    //tiền căn show ở thông tin bệnh nhân\r\n    const [previewPredecessor, setPreviewPredecessor] = useState();\r\n\r\n    //state các câu hỏi được bác sĩ khám tích hoặc gõ vào\r\n    const [dataExaminingForConclusion , setDataExaminingForConclusion ] = useState({});\r\n\r\n    //state lưu tạm các data tiền căn của getUpdatePredecessor (bao gồm những data tiền căn đã chọn và chưa chọn)\r\n    const [oldDataPredecessor, setOldDataPredecessor] = useState();\r\n\r\n    //dùng khi tái khám hoặc mở khám lại cho bệnh nhân có tiền căn đã đụng\r\n    const [newDataPredecessor, setNewDataPredecessor] = useState();\r\n\r\n    //state lưu data tiền căn cũ (những data tiền căn đã chọn)  \r\n    const [prevDataPredecessor, setPrevDataPredecessor] = useState();\r\n\r\n    //state quản lý modal kết thúc khám\r\n    const [openModalCompleteExamining, setOpenModalCompleteExamining] = useState(false);\r\n\r\n    const [loadingPrevDataExamining, setLoadingPrevDataExamining] = useState(false);\r\n    const [loadingPatient, setLoadingPatient] = useState(true);\r\n    const [loadingInfoPatient, setLoadingInfoPatient] = useState(true);\r\n    const [loadingCategoryExamining, setLoadingCategoryExamining] = useState(false);\r\n    const [loadingContentsExamining, setLoadingContentsExamining] = useState(false);\r\n\r\n    const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n  \r\n    const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n    const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n    const [listPantientChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n            { chipLabel: 'BN đã khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n          const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n            setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n            setListDataPatientsRegisterState(listPantientRegisterDone);\r\n        }\r\n    };\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n        }else{\r\n          setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n        }\r\n      }\r\n    \r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const handleCompleteExaminingForPantient = () => {\r\n        setLoadingPatient(true);\r\n        toast.success(`Đã kết thúc khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setCurrentHealthRecordExamining();\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        setPreviewPredecessor();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleCancelExamining = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingCategoryExamining(true);\r\n        setLoadingContentsExamining(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, [dataPantientsReadyExamining.editExamining === true ? 2 : 0 || dataPantientsReadyExamining.backRegister === true ? 3 : 0]);\r\n        if(response.status === 200){\r\n            toast.success(`Đã hủy khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success2'});    \r\n            setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n            setMainDataExamining([]);\r\n            setOpenCollapseHealthRecords(false);\r\n            setOpenCollapseHealthRecordsItem([]);\r\n            setCategorySelectedExamining({});\r\n            setContentCategorySelectedExamining([]);\r\n            setHealthRecordsContents([]);\r\n            setCurrentHealthRecordExamining();\r\n            setDataExaminingForConclusion({});\r\n            setPrevDataPredecessor();\r\n            setCurrentHealthRecordExamining();\r\n            setOldDataPredecessor();\r\n            setPreviewPredecessor();\r\n            handleGetRegistersByDateNow();\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    const handleDeleteExamining = async () => {\r\n        const confirmLeave = window.confirm(\r\n            'Chức năng này sẽ xóa tất cả dữ liệu của kỳ khám hiện tại và đặt bệnh nhân về trạng thái chưa khám. Bạn có muốn xóa không?'\r\n        );\r\n        if (confirmLeave) {\r\n            setLoadingPatient(true);\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const responseDeleteMedicalBook = await deleteMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n            if(responseDeleteMedicalBook.status === 200){\r\n                toast.success(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingSuccess'});\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    await updateMedicalState(dataPantientsReadyExamining.id, 3);\r\n                }\r\n                setPrevDataExamining();\r\n                if(previewPredecessor && previewPredecessor.length !== 0){\r\n                    setPreviewPredecessor();\r\n                }\r\n                setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n                setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n                handleGetRegistersByDateNow();\r\n            }\r\n            else{\r\n                toast.error(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingError'});\r\n            }\r\n            setOpenAlertProcessingBackdrop(false);\r\n        } else {\r\n            return false; // Ngăn điều hướng\r\n        }\r\n    }\r\n\r\n    const handleStartExaminingButtonClick = () => {\r\n        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n            handleBeginExaminingForPantient();\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 1){\r\n            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n            handleBeginEditExaminingForPantient();\r\n        }\r\n    }\r\n\r\n    const handleCompleteExaminingButtonClick = () => {\r\n        setOpenAlertProcessingBackdrop(true)\r\n        if(dataPantientsReadyExamining.status === 1){\r\n            setTimeout(() => {\r\n            setOpenAlertProcessingBackdrop(false)\r\n                setOpenModalCompleteExamining(true);\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    //hàm này dùng khi user đang khám mà bị ngáo lỡ nhấn f5\r\n    const handleReloadUIWhenExamining = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        const reDataPatientsRegisterSort = JSON.parse(sessionStorage.dataPatientsRegisterSort)\r\n        const reDataPantientsReadyExamining = JSON.parse(sessionStorage.dataPantientsReadyExamining);\r\n        const reMainDataExamining = JSON.parse(sessionStorage.mainDataExamining);\r\n        const reDataExaminingForConclusion = JSON.parse(sessionStorage.dataExaminingForConclusion);\r\n\r\n        setListDataPatientsRegisterSort(reDataPatientsRegisterSort);\r\n        \r\n        reDataPantientsReadyExamining.isContinueExam = true;\r\n        \r\n        setDataPantientsReadyExamining(_.cloneDeep(reDataPantientsReadyExamining));\r\n        setMainDataExamining(_.cloneDeep(reMainDataExamining));\r\n        setDataExaminingForConclusion(_.cloneDeep(reDataExaminingForConclusion));\r\n\r\n        if(sessionStorage.currentHealthRecordExamining){\r\n            const reCurrentHealthRecordExamining = JSON.parse(sessionStorage.currentHealthRecordExamining);\r\n            setHealthRecordsContents(_.cloneDeep(reCurrentHealthRecordExamining));\r\n            setCurrentHealthRecordExamining(_.cloneDeep(reCurrentHealthRecordExamining));\r\n        }\r\n\r\n        if(sessionStorage.prevDataPredecessor){\r\n            const rePrevDataPredecessor = JSON.parse(sessionStorage.prevDataPredecessor);\r\n            setPrevDataPredecessor(_.cloneDeep(rePrevDataPredecessor));\r\n        }\r\n\r\n        if(sessionStorage.oldDataPredecessor){\r\n            const reOldDataPredecessor = JSON.parse(sessionStorage.oldDataPredecessor);\r\n            setOldDataPredecessor(_.cloneDeep(reOldDataPredecessor));\r\n        }\r\n        \r\n        setNewDataPredecessor({\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            categoryPres: []\r\n        })\r\n        \r\n        sessionStorage.clear();\r\n\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //lấy danh sách đăng ký khám trong ngày\r\n    const handleGetRegistersByDateNow = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1 * 1000));\r\n        const response = await getRegistersByDateNow();\r\n        if(response !== 400){\r\n            const findListPantientNotExam = response.list.filter(item => item.state !== 1)\r\n            setListDataPatientsRegister(findListPantientNotExam);\r\n\r\n            let listPantientRegisterWaiting = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n            let listPantientRegisterDone = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n\r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const updatedList = [\r\n                { chipLabel: 'BN chờ khám', chipContent: listPantientRegisterWaiting.length },\r\n                { chipLabel: 'BN đã khám', chipContent: listPantientRegisterDone.length }\r\n            ]\r\n            setListPantientChipState(updatedList);\r\n        }\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n    }\r\n\r\n    const handleAppyPantientData = async (dataPantientItem) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingPrevDataExamining(true);\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            setPreviewPredecessor();\r\n        }\r\n        await handleGetMedicalDetailPatient(dataPantientItem.id);\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.stt = dataPantientItem.order;\r\n        _dataPantientsReadyExamining.id = dataPantientItem.id;\r\n        _dataPantientsReadyExamining.status = 0;\r\n        _dataPantientsReadyExamining.patientsId = dataPantientItem.patient.patientId;\r\n        _dataPantientsReadyExamining.patientsName = dataPantientItem.patient.fullName;\r\n        _dataPantientsReadyExamining.patientsDOB = dataPantientItem.patient.dayOfBirth;\r\n        _dataPantientsReadyExamining.patientsMonthsOld = dataPantientItem.patient.monthsOfAge;\r\n        _dataPantientsReadyExamining.patientsGender = dataPantientItem.patient.gender;\r\n        _dataPantientsReadyExamining.patientsHeight = dataPantientItem.height;\r\n        _dataPantientsReadyExamining.patientsWeight = dataPantientItem.weight;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsPhone = dataPantientItem.patient.phoneMother ? dataPantientItem.patient.phoneMother : dataPantientItem.patient.phoneFather;\r\n        _dataPantientsReadyExamining.patientsAddress = dataPantientItem.patient.fullAddress;\r\n        _dataPantientsReadyExamining.vaccination = dataPantientItem.vaccination === true ? true : false;\r\n        _dataPantientsReadyExamining.editExamining = dataPantientItem.state === 2 ? true : false;\r\n        _dataPantientsReadyExamining.backRegister = dataPantientItem.state === 3 ? true : false;\r\n        _dataPantientsReadyExamining.isContinueExam = false;\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n        setLoadingInfoPatient(false);\r\n        setLoadingPrevDataExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //nhấn chọn bệnh nhân để load vào ô thông tin bn\r\n    const handleSelectPantientExamining = async (dataPantientItem) => {\r\n        if(dataPantientItem.state === 0 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName || dataPantientItem.state === 3 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId === '' || dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 0){\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n            else{\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n        }\r\n        \r\n        else if(dataPantientItem.state === 2 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 1){\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n            else{\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    //bắt đầu khám bệnh cho bệnh nhân\r\n    const handleBeginExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            if(prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                    //backup prevDataPredecessor để khi cần dùng\r\n                    setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n                }\r\n\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleSetMainDataExamining();\r\n                toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n            }\r\n            else{\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleGetCategoryReExamining();\r\n            }\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error(response.data, {toastId: 'error1'});\r\n        }\r\n        setLoadingPatient(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu khám cho bệnh nhân khám mới\r\n    const handleSetMainDataExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        prevDataExamining.healthRecords.forEach((healthRecordsItem) => {\r\n            if(healthRecordsItem.medicalBookId === null){\r\n                healthRecordsItem.state = 1\r\n            }\r\n        })\r\n        \r\n        //tái khám và có tiền căn đã đụng\r\n        if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === false){\r\n            const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //tái khám và có tiền căn chưa đụng\r\n        else if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === true){\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n\r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //khám mới hoàn toàn\r\n        else{\r\n            const editDataCategoryPresForConclusion = prevDataExamining.categoryPres.map((predecessorItem) => {\r\n                const mainCategoryContentsExamining = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentOrder: categoryContentsItem.categoryContentOrder,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n    \r\n                const mainCategoryExamining = {\r\n                    categoryName: predecessorItem.categoryName,\r\n                    isPredecessor: true,\r\n                    categoryOrder: predecessorItem.categoryOrder,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n    \r\n                return mainCategoryExamining\r\n            })\r\n    \r\n            const editDataHealthRecordsForConclusion = prevDataExamining.healthRecords.find((healthRecordsItem) => healthRecordsItem.patientId === dataPantientsReadyExamining.patientsId)\r\n    \r\n            setDataExaminingForConclusion({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n                conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n                categories: editDataCategoryPresForConclusion,\r\n            });\r\n    \r\n            prevDataExamining.categoryPres.forEach((categoryPresItem, categoryPresIndex) => {\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.map((categoryContentsItem) => {\r\n                    return {\r\n                        ...categoryContentsItem,\r\n                        categoryPresOrder: categoryPresIndex\r\n                    }\r\n                })\r\n                return {\r\n                    ...categoryPresItem,\r\n                }\r\n            })\r\n            \r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //bắt đầu sửa dữ liệu khám bệnh\r\n    const handleBeginEditExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n            const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n            _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n            setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n            const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            await handleGetCategoryReExamining();\r\n            setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n            setLoadingPatient(false);\r\n        }\r\n    }\r\n\r\n    //lấy dữ liệu cây thư mục khám lại\r\n    const handleGetCategoryReExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        const responseGetUpdateMedicalBook = await getUpdateMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n\r\n        if(responseGetUpdateMedicalBook.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n\r\n            if(prevDataExamining.newPredecessor === false){\r\n                setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                //backup prevDataPredecessor để khi cần dùng\r\n                setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n            }\r\n            \r\n            await handleSetMainDataReExamining(responseGetUpdateMedicalBook.data);\r\n            toast.success(`Đang mở khám lại cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        }\r\n        else if(responseGetUpdateMedicalBook.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu cây thư mục khám của chức năng mở khám lại\r\n    const handleSetMainDataReExamining = async (responseGetUpdateMedicalBookData) => {\r\n        prevDataExamining.healthRecords[0].state = 1\r\n        prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBookData.categories\r\n\r\n        const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n            categoryName: category.categoryName,\r\n            isHealthRecord: true,\r\n            categoryContents: category.categoryContents.map(content => ({\r\n              ...content,\r\n              categoryContentQuestions: []\r\n            })) \r\n        }))\r\n\r\n        //demo truớc data kết luận\r\n        const demoDataExaminingForConclusion = {\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            isVaccination: prevDataExamining.vaccination,\r\n            medicalRegisterId: dataPantientsReadyExamining.id !== prevDataExamining.healthRecords[0].medicalRegisterId ? dataPantientsReadyExamining.id : prevDataExamining.healthRecords[0].medicalRegisterId,\r\n            conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n            categories: updateHealthRecordsCategoriesForConclusion\r\n        }\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        //sửa categories của conclusion phần sổ khám bệnh\r\n        let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.healthRecords[0].categories);\r\n\r\n        updateCategoriesForConclusion = updateCategoriesForConclusion.map(category => {\r\n            category.categoryContents = category.categoryContents.map(content => {\r\n                const questions = content.categoryContentQuestions;\r\n    \r\n                // Check if all questions have both categoryContentAnswer and categoryContentNote as null\r\n                const allNull = questions.every(q => q.categoryContentAnswer === null && q.categoryContentNote === null);\r\n                    \r\n                if (allNull) {\r\n                  // Set categoryContentQuestions to an empty array\r\n                  content.categoryContentQuestions = [];                    \r\n                } else {\r\n                  // Filter out questions with both categoryContentAnswer and categoryContentNote as null\r\n                  content.categoryContentQuestions = questions.filter(q => q.categoryContentAnswer !== null || q.categoryContentNote !== null);\r\n                }\r\n                    \r\n                return content;\r\n            });\r\n                  \r\n            category.isHealthRecord = true\r\n            return category;\r\n        })\r\n\r\n        demoDataExaminingForConclusion.categories = updateCategoriesForConclusion\r\n\r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        //tiền căn đợt trước đã đụng (newPredecessor = false)\r\n        if(responseGetUpdatePredecessor.status === 200)\r\n        {   \r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        \r\n        //tiền căn đợt trước chưa đụng (newPredecessor = true) \r\n        else{\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n        \r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n    }\r\n\r\n    //sửa dữ liệu tiền căn cho mở khám lại hoặc tái khám\r\n    const handleEditDataPredecessor = async (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        \r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        const findUpdatePredecessor = responseGetUpdatePredecessor.data.find(responseGetUpdatePredecessorItem => responseGetUpdatePredecessorItem.categoryOrder === categoryOrder);\r\n\r\n        mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n            if(categoryPresItem.categoryOrder === findUpdatePredecessor.categoryOrder){\r\n                categoryPresItem.categoryContents = findUpdatePredecessor.categoryContents\r\n                categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                    categoryContentsItem.isLock = false\r\n                })\r\n                categoryPresItem.isLock = false\r\n            }\r\n        })\r\n\r\n        const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n        \r\n        if(!newDataPredecessor.categoryPres.some(categoryPresItem => categoryPresItem.categoryName === categoryName)){\r\n            newDataPredecessor.categoryPres = prevDataPredecessor\r\n        }\r\n\r\n        handleSelectCategoryClick(selectCategoryReExamining);\r\n\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //huỷ không sửa dữ liệu tiền căn nữa\r\n    const handleCancelEditDataPredecessor = (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        setTimeout(() => {\r\n            const findPrevDataPredecessorByCategoryName = oldDataPredecessor.find(prevDataPredecessorItem => prevDataPredecessorItem.categoryOrder === categoryOrder);\r\n\r\n            if(findPrevDataPredecessorByCategoryName){\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        categoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                        categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                            categoryContentsItem.isLock = true\r\n                        })\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                newDataPredecessor.categoryPres.forEach((newDataPredecessorCategoryPresItem) => {\r\n                    if(newDataPredecessorCategoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        newDataPredecessorCategoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === categoryOrder){\r\n                        categoryPresItem.categoryContents = [];\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                const _newDataPredecessor = {...newDataPredecessor};\r\n                const removeCategoryPredecessor = _newDataPredecessor.categoryPres.filter(categoryPresItem => categoryPresItem.categoryOrder !== categoryOrder);\r\n                newDataPredecessor.categoryPres = removeCategoryPredecessor\r\n            }\r\n\r\n            setPrevDataPredecessor(_.cloneDeep(oldDataPredecessor));\r\n\r\n            const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n            handleSelectCategoryClick(selectCategoryReExamining)\r\n   \r\n            setOpenAlertProcessingBackdrop(false);\r\n        }, 300)       \r\n    }\r\n\r\n    //tạo data tiền căn để lưu lại khi tái khám hoặc mở khám lại\r\n    //câu trả lời dạng check chọn true false\r\n    const handleAnswerCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n    }\r\n\r\n    //câu trả lời dạng check chọn sửa lại note\r\n    const handleNoteCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n        const isEditNote = true;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], takenValue, isEditNote)\r\n        }, 300)\r\n    }\r\n\r\n    //câu trả lời dạng giá trị, sửa lại note\r\n    const handleNoteValueQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsValuePredecessorForReExamOrBackExam(\r\n                categoryContentsIndex,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, \r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], \r\n                takenValue\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const createSelectedQuestionsValuePredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue) => {\r\n        const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n        if(findNewDataPredecessorCategoryOrder){\r\n            // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n            const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n            if(findNewDataPredecessorCategoryContents){\r\n                // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue !== '');\r\n                const questionIndexRemove = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue === '');\r\n\r\n                if(questionIndex !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value khác rỗng => gán note cũ bằng note mới\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n                }\r\n\r\n                else if(questionIndexRemove !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value bằng rỗng => bỏ note đó\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexRemove, 1);\r\n                }\r\n\r\n                else{\r\n                    //nếu không tìm thấy, đẩy note mới vào\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                }\r\n            }\r\n\r\n            else{\r\n                // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                const newDataPredecessorCategoryContents = {\r\n                    categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                    categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                    categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                    categoryContentQuestions: [categoryContentQuestion],\r\n                    categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                    categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                }\r\n                findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n            }\r\n        }\r\n\r\n        else{\r\n            // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n            const newDataPredecessorCategoryContents = {\r\n                categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                categoryContentQuestions: [categoryContentQuestion],\r\n                categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n            }\r\n\r\n            const newDataPredecessorCategoryPres = {\r\n                categoryOrder: categorySelectedExamining.categoryOrder,\r\n                categoryName: categorySelectedExamining.categoryName,\r\n                newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                categoryContents: [newDataPredecessorCategoryContents]\r\n            }\r\n\r\n            newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n        }         \r\n    }\r\n\r\n    const createSelectedQuestionsPredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue, isEditNote) => {\r\n        if(isEditNote){\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){       \r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng rỗng\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n         \r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                        }\r\n                        else{\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndex, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else{\r\n            //câu hỏi là dạng check câu trả lời là true\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote !== '');\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n                        }\r\n                        else{\r\n                            // Nếu tìm thấy categoryContentOrder, thêm câu hỏi mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }       \r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents)\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check câu trả lời là false\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndexNoteDontExit = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote === null);\r\n                        if(questionIndexNoteDontExit !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexNoteDontExit, 1);\r\n                        }\r\n                        else{\r\n                            const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n    }\r\n\r\n    //lưu dữ liệu tiền căn khi sửa xong\r\n    const handleEditDataPredecessorForSaving = (categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setTimeout(() => {\r\n            const findNewDataPredecessor = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPres => newDataPredecessorCategoryPres.categoryOrder === categoryOrder)\r\n\r\n            const findOldDataPredecessorCategoryOrder = oldDataPredecessor.find(oldDataPredecessorItem => oldDataPredecessorItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n\r\n            if(findOldDataPredecessorCategoryOrder){\r\n                // Nếu tìm thấy categoryOrder, duyệt qua categoryContents của findNewDataPredecessor\r\n                findNewDataPredecessor.categoryContents.forEach(findNewDataPredecessorCategoryContentsItem => {\r\n\r\n                    let content = findOldDataPredecessorCategoryOrder.categoryContents.find(findOldDataPredecessorCategoryContentsItem => findOldDataPredecessorCategoryContentsItem.categoryContentOrder === findNewDataPredecessorCategoryContentsItem.categoryContentOrder);\r\n\r\n                    if(content){\r\n                        // Loại bỏ các categoryContentQuestions trong content nếu không tồn tại trong findNewDataPredecessorCategoryContentsItem\r\n                        content.categoryContentQuestions = content.categoryContentQuestions.filter(q =>\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.some(newQ => newQ.categoryContentQuestionOrder === q.categoryContentQuestionOrder)\r\n                        );\r\n\r\n                        // Nếu tìm thấy categoryContentOrder, duyệt qua categoryContentQuestions\r\n                        if(findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.length !== 0){\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.forEach(findNewDataPredecessorQuestionItem => {\r\n                                if(findNewDataPredecessorQuestionItem.categoryContentAnswer === null && findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'check'){\r\n                                    // Nếu categoryContentAnswer là false và categoryContentNote là null, loại bỏ question đó\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else if(findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'string'){\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else{\r\n                                    const questionIndex = content.categoryContentQuestions.findIndex(q => q.categoryContentQuestionOrder === findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n\r\n                                    if (questionIndex !== -1) {\r\n                                        // Thay thế question nếu trùng khớp\r\n                                        content.categoryContentQuestions[questionIndex] = findNewDataPredecessorQuestionItem;\r\n                                    }\r\n\r\n                                    else {\r\n                                        // Thêm question mới nếu không trùng khớp\r\n                                        content.categoryContentQuestions.push(findNewDataPredecessorQuestionItem);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        }else{\r\n                            findOldDataPredecessorCategoryOrder.categoryContents = findOldDataPredecessorCategoryOrder.categoryContents.filter(contentCategoryContentsItem => contentCategoryContentsItem.categoryContentOrder !== findNewDataPredecessorCategoryContentsItem.categoryContentOrder)\r\n                        }\r\n                        \r\n                    }else{\r\n                        findOldDataPredecessorCategoryOrder.categoryContents.push(findNewDataPredecessorCategoryContentsItem);\r\n                    }\r\n\r\n                })\r\n            }else{\r\n                // Thêm toàn bộ object2 nếu không tìm thấy findNewDataPredecessor\r\n                oldDataPredecessor.push(findNewDataPredecessor)\r\n            }\r\n\r\n            oldDataPredecessor.forEach((oldDataPredecessorItem) => {\r\n                oldDataPredecessorItem.categoryContents = oldDataPredecessorItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length !== 0)\r\n            }) \r\n\r\n            const removeOldDataPredecessorCategoryPres = oldDataPredecessor.findIndex(item => item.categoryContents.length === 0);\r\n            if(removeOldDataPredecessorCategoryPres !== -1){\r\n                oldDataPredecessor.splice(removeOldDataPredecessorCategoryPres, 1);\r\n            }\r\n\r\n            const saveNewDataPredecessor = {\r\n                patientId: newDataPredecessor.patientId,\r\n                categoryPres: oldDataPredecessor\r\n            }\r\n\r\n            handleSaveNewDataPredecessor(saveNewDataPredecessor, findNewDataPredecessor)            \r\n        }, 500)\r\n    }\r\n\r\n    const handleSaveNewDataPredecessor = async (saveNewDataPredecessor, findNewDataPredecessor) => {\r\n        const responseCreateAddPredecessor = await createAddPredecessor(saveNewDataPredecessor);\r\n        if(responseCreateAddPredecessor.status === 200){\r\n\r\n            const _mainDataExamining = {...mainDataExamining};\r\n\r\n            _mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                if(categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder){\r\n                    categoryPresItem.categoryContents = findNewDataPredecessor.categoryContents\r\n                    categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                        categoryContentsItem.isLock = true\r\n                    })\r\n                    if(findNewDataPredecessor.categoryContents.length === 0){\r\n                        categoryPresItem.newCategoryPre = true\r\n                    }else{\r\n                        categoryPresItem.newCategoryPre = false\r\n                    }\r\n                    categoryPresItem.isLock = true\r\n                }\r\n\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.filter(item => item.categoryContentQuestions.length !== 0);\r\n            })\r\n\r\n            setMainDataExamining(_mainDataExamining);\r\n\r\n            const selectCategoryReExamining = _mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n            \r\n            toast.success('Đã cập nhật lại tiền căn', {toastId: 'handleSaveNewDataPredecessorSuccess'});\r\n            \r\n            handleSelectCategoryClick(selectCategoryReExamining);\r\n        }\r\n        else{\r\n            toast.error(responseCreateAddPredecessor.data, {toastId: 'handleSaveNewDataPredecessorError'});\r\n        }\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //tìm danh mục khám gồm tiền căn, sổ sức khỏe, dinh dưỡng...\r\n    const handleGetMedicalDetailPatient = async (id) => {\r\n        const responseDataExamining = await getMedicalDetailPatient(id);\r\n        setPrevDataExamining(responseDataExamining);\r\n\r\n        if(responseDataExamining.newPredecessor === false){\r\n            const previewDataPredecessor = responseDataExamining.categoryPres.filter(item => item.newCategoryPre === false).flatMap(item => item.categoryContents).flatMap(content => content.categoryContentQuestions).filter(question => question.categoryContentAnswer === true || question.categoryContentNote !== null)\r\n            setPreviewPredecessor(previewDataPredecessor);     \r\n        }\r\n    }\r\n\r\n    //chọn mục lục để khám\r\n    const handleSelectCategoryClick = async (categoryIncludeCotent) => {\r\n        if(openCollapseHealthRecords === true){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }\r\n\r\n        if(contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length !== 0){\r\n            setContentCategorySelectedExamining([]);\r\n        }\r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                ...categoryIncludeCotent,\r\n                //contentQuantity: categoryIncludeCotent.categoryContents.length\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining([]);\r\n    }\r\n\r\n    //chọn cây thư mục khám sổ sức khỏe\r\n    const handleSelectHealthRecords = (healthRecords) => {\r\n        if(openCollapseHealthRecords === false){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }        \r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                categoryName: 'Sổ sức khỏe',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(\r\n            {\r\n                healthRecordsContentsType: 'tree',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n    }\r\n\r\n    //chọn chỉ định một sổ khám bệnh (tìm chi tiết một sổ khám bệnh)\r\n    const handleSelectHealthRecordsItem = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingContentsExamining(true);\r\n\r\n        //dùng cho tái khám (có tiền căn đã đụng), mở khám lại\r\n        if(currentHealthRecordExamining){\r\n            if(healthRecordsContents.healthRecordsName !== examinationName){\r\n                if(healthRecordsState === 2){\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n                else if(healthRecordsState === 1 && dataPantientsReadyExamining.editExamining || healthRecordsState === 1 && dataPantientsReadyExamining.backRegister){\r\n                    setHealthRecordsContents({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    })\r\n\r\n                    setCurrentHealthRecordExamining({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    });\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && dataPantientsReadyExamining.isContinueExam){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else{\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n            }\r\n        }\r\n        //dùng cho tái khám (tiền căn chưa đụng), khám mới hoàn toàn\r\n        else{\r\n            await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n        }\r\n\r\n        setLoadingContentsExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const findHealthRecord = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        const responseMedicalBook = await getMedicalBook(medicalRegisterId);\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        });\r\n\r\n        if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && mainDataExamining.healthRecords[0].medicalBookId === null){\r\n            const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n                \r\n                const mainCategoryExamining = {\r\n                    categoryName: categoriesItem.categoryName,\r\n                    isHealthRecord: true,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n\r\n                return mainCategoryExamining\r\n            })\r\n\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    //chọn loại mục khám của một sổ khám bệnh\r\n    const handleOpenHealthRecordsItem = (categoryPatientsIndex) => {\r\n        setOpenCollapseHealthRecordsItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryPatientsIndex] = !newOpen[categoryPatientsIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleAnswerCheckQuestion = (categoryContentsIndex, questionIndex, answer) => {\r\n        //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng check\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else{\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }   \r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const handleNoteCheckQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            )\r\n        }, 1000)\r\n    }\r\n\r\n    const handleAnswerValueQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const handleAnswerCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else if(answer === true){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else{\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n    }\r\n    \r\n    //trả lời câu hỏi của mục sổ khám bệnh\r\n    const handleNoteCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            );\r\n        }, 1000)\r\n    }\r\n\r\n    const createSelectedQuestionsExaminingForConclusion = (categoryName, isPredecessor, categoryContentQuestion, questionOrder, categoryContentTitle, isEditNote) => {\r\n        if(categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            if(isEditNote){\r\n                if(categoryContentQuestion.categoryContentNote !== ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n\r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n\r\n                else if(categoryContentQuestion.categoryContentNote === ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentAnswer === null || categoryContentQuestionsItem.categoryContentAnswer === false){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n            }\r\n            else{\r\n                //question dạng check nhưng answer là true\r\n                if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n    \r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n    \r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n    \r\n                //question dạng check nhưng answer là false\r\n                else if(categoryContentQuestion.categoryContentAnswer === false && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentNote === null || categoryContentQuestionsItem.categoryContentNote === ''){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion)\r\n                }\r\n            }\r\n        }\r\n\r\n        else{\r\n            //question dạng giá trị nhưng khác rỗng\r\n            if(categoryContentQuestion.categoryContentNote !== '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                // Duyệt qua từng categoriesItem trong categories\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                    // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                    const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                        question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                    );\r\n                    \r\n                                    if (existingQuestion) {\r\n                                        // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                        existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                    } else {\r\n                                        // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                        categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                    }\r\n\r\n                                } else {\r\n                                // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                    categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                }\r\n                            }\r\n                        });        \r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n            //question dạng giá trị nhưng là rỗng\r\n            else if(categoryContentQuestion.categoryContentNote === '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n        }\r\n\r\n        if(isPredecessor === true){\r\n            createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n        }\r\n            \r\n    }\r\n\r\n    const createPreviewDataPredecessor = (categoryContentQuestion, isEditNote) => {\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            let _previewPredecessor = [...previewPredecessor];\r\n\r\n            const findQuestion = _previewPredecessor.find(item => item.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n            if(findQuestion){\r\n                if(findQuestion.categoryContentQuestionType === 'string'){\r\n                    if(categoryContentQuestion.categoryContentNote === ''){\r\n                        _previewPredecessor = previewPredecessor.filter(item => item.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName);\r\n                    }\r\n                    else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                        const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                        if(existingQuestion){\r\n                            existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                        }\r\n                        else{\r\n                            _previewPredecessor.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                }\r\n                else if(findQuestion.categoryContentQuestionType === 'check'){\r\n                    if(isEditNote){\r\n                        if(categoryContentQuestion.categoryContentNote === ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName && question.categoryContentAnswer === true);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                if(categoryContentQuestion.categoryContentAnswer === null || categoryContentQuestion.categoryContentAnswer === false){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    else{\r\n                        if(categoryContentQuestion.categoryContentAnswer === false || categoryContentQuestion.categoryContentAnswer === null){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                if(existingQuestion.categoryContentNote === '' || existingQuestion.categoryContentNote === null){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                                else if(existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                    existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                }               \r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentAnswer === true){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion || existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                            }\r\n                            else{\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }        \r\n                    }\r\n                }\r\n            }\r\n\r\n            else{\r\n                _previewPredecessor.push(categoryContentQuestion);\r\n            }\r\n            setPreviewPredecessor(_previewPredecessor)\r\n        }\r\n\r\n        else{\r\n            setPreviewPredecessor([categoryContentQuestion])\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        // Đăng ký sự kiện nhận thông báo bn đăng ký khám khi component được mount\r\n        const handleReceiveMessage = (medicalRegisterMessage) => {\r\n            if(medicalRegisterMessage === true && dataPantientsReadyExamining.id === ''){\r\n                setLoadingPatient(true);\r\n                handleGetRegistersByDateNow();\r\n            }\r\n        };\r\n\r\n        startSignalRConnection(localStorage.getItem('jwt', handleReceiveMessage))\r\n\r\n        onReceiveMessage(handleReceiveMessage);\r\n\r\n        return () => {\r\n            // Dừng lắng nghe sự kiện nếu cần khi component Chat unmount\r\n        };\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(dataPantientsReadyExamining.status === 1 && alertVisible){\r\n                const userConfirmed = window.confirm(`Bạn đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, có chắc là muốn đăng xuất không?`);\r\n                if(userConfirmed){\r\n                    sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                    sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                    sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n\r\n                    if(currentHealthRecordExamining){\r\n                        sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                    }\r\n\r\n                    if(prevDataPredecessor){\r\n                        sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                    }\r\n\r\n                    if(oldDataPredecessor){\r\n                        sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                    }\r\n                    confirmAlert();\r\n                }\r\n                else{\r\n                    resetAlert();\r\n                }\r\n        }\r\n\r\n        else if(dataPantientsReadyExamining.status){\r\n            setIsFormDirty(true)\r\n\r\n            const handleBeforeUnload = (e) => {\r\n                const confirmationMessage = 'Bạn có chắc chắn muốn rời khỏi trang này?';\r\n                e.returnValue = confirmationMessage; // Hiển thị thông báo cảnh báo\r\n                return confirmationMessage;\r\n            };\r\n\r\n            const unblock = history.block((location, action) => {\r\n                if (isFormDirty) {\r\n                    const confirmLeave = window.confirm(\r\n                        'Bạn có chắc chắn muốn rời khỏi trang này? Những thay đổi sẽ không được lưu....'\r\n                    );\r\n                    if (confirmLeave) {\r\n                        const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                        sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                        sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                        sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                        sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                        if(currentHealthRecordExamining){\r\n                            sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                        }\r\n    \r\n                        if(prevDataPredecessor){\r\n                            sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                        }\r\n    \r\n                        if(oldDataPredecessor){\r\n                            sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                        }\r\n\r\n                        unblock(); // Hủy chặn để điều hướng\r\n                        history.push(location.pathname); // Điều hướng đến trang mới\r\n                        \r\n                    } else {\r\n                        return false; // Ngăn điều hướng\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n    \r\n            const handleUnload = () => {                \r\n                const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                \r\n                sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                if(currentHealthRecordExamining){\r\n                    sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                }\r\n    \r\n                if(prevDataPredecessor){\r\n                    sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                }\r\n    \r\n                if(oldDataPredecessor){\r\n                    sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                }\r\n            };\r\n            \r\n            window.addEventListener('beforeunload', handleBeforeUnload);\r\n            window.addEventListener('unload', handleUnload);\r\n            \r\n            return () => {\r\n                window.removeEventListener('beforeunload', handleBeforeUnload);\r\n                unblock();\r\n                window.removeEventListener('unload', handleUnload);                \r\n            };\r\n        }\r\n\r\n        else if(alertVisible){\r\n            confirmAlert();\r\n        }\r\n    }, [dataPantientsReadyExamining, mainDataExamining, currentHealthRecordExamining, dataExaminingForConclusion, alertVisible, confirmAlert, resetAlert, isLogOutClick, history, isFormDirty])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Doctor'){\r\n                history.push('/404');\r\n            }\r\n            else{\r\n                if(sessionStorage.dataPantientsReadyExamining){\r\n                    handleReloadUIWhenExamining();\r\n                }\r\n                else{\r\n                    handleGetRegistersByDateNow();\r\n                }\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(isDialogChangePasswordOpen === false){\r\n            const handleKeyDown = (event) => {\r\n                if(event.keyCode === 112){\r\n                    event.preventDefault();\r\n                }\r\n\r\n                if(dataPantientsReadyExamining.patientsId !== '' && openAlertProcessingBackdrop === false && openModalCompleteExamining === false && event.keyCode !== 116){\r\n                    if(event.keyCode === 112 && dataPantientsReadyExamining.status === 1){\r\n                        event.preventDefault();\r\n                        handleCancelExamining();\r\n                    }\r\n\r\n                    else if(event.keyCode === 113 && prevDataExamining){\r\n                        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n                            handleBeginExaminingForPantient();\r\n                        }\r\n                        else if(dataPantientsReadyExamining.status === 1){\r\n                            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n                        }\r\n                        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n                            handleBeginEditExaminingForPantient();\r\n                        }\r\n                    }\r\n\r\n                    else if(event.keyCode === 115){\r\n                    setOpenAlertProcessingBackdrop(true)\r\n                        if(dataPantientsReadyExamining.status === 1){\r\n                            setTimeout(() => {\r\n                                setOpenAlertProcessingBackdrop(false)\r\n                                setOpenModalCompleteExamining(true);\r\n                            }, 1000)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            document.addEventListener('keydown', handleKeyDown);\r\n\r\n            return () => {\r\n                document.removeEventListener('keydown', handleKeyDown);\r\n            };\r\n        }\r\n        \r\n    }, [dataPantientsReadyExamining, openModalCompleteExamining, openAlertProcessingBackdrop, openModalCompleteExamining, isDialogChangePasswordOpen])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n                <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                    <Grid container spacing={2} sx={{pl: 0.6, pr: 0.6}}>\r\n\r\n                        <Grid item xs={5}>\r\n                            {/* <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{`${moment().format('dddd')}, ${moment().format('LL')}`}</Typography> */}\r\n                            <TableContainer component={Paper} sx={{ height: '330px', boxShadow: 5, borderRadius: '10px' }}>\r\n                                {loadingPatient ?\r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                                            <CircularProgress />\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                                        </Box>        \r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Box>\r\n                                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                                                    <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                                                        <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                                        onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                                                    </Badge>\r\n                                                ))}\r\n                                            </Stack>\r\n                                            <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                                            <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                                                <TextField sx={{mb: 0.6, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                                        startAdornment: (\r\n                                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                                        ),\r\n                                                        endAdornment: (\r\n                                                            <InputAdornment position='end'>\r\n                                                                {searchPatientsQuery !== '' ? \r\n                                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                                                                    /> \r\n                                                                : \r\n                                                                    null\r\n                                                                }\r\n                                                            </InputAdornment>  \r\n                                                        )\r\n                                                    }}>\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Box>\r\n                                \r\n                                        <Table stickyHeader >\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listDataPatientsRegisterSort.map((dataPantientItem, dataPantientIndex) => (\r\n                                                    <TableRow hover role=\"checkbox\" key={dataPantientItem.order}\r\n                                                        sx={{ cursor: 'pointer', backgroundColor: dataPantientItem.state === 1 ? '#26c6da' : '#fff', \r\n                                                        ':hover': {backgroundColor: dataPantientItem.state === 1 ? '#00bcd4 !important' : 'rgba(0, 0, 0, 0.1) !important'} }} \r\n                                                        onClick={() => handleSelectPantientExamining(dataPantientItem)}\r\n                                                    >\r\n                                                        <TableCell align='left' sx={{width: '20px'}}>{dataPantientItem.order}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '150px'}}>{dataPantientItem.patient.patientId}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '240px'}}>{dataPantientItem.patient.fullName}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </>\r\n                                }\r\n                            </TableContainer>\r\n\r\n                            {/* cây thư mục khám */}\r\n                            <Box style={{width: '100%', marginTop: '10px', borderRadius: '10px', border: '2px solid red', height: '300px', overflow: 'auto'}} >\r\n                                {\r\n                                    mainDataExamining.length === 0 && loadingCategoryExamining === false || prevDataExamining === false ?\r\n                                        null\r\n                                    :\r\n                                    <>\r\n                                        {loadingCategoryExamining ?\r\n                                            <Box sx={{backgroundColor: '#e0e0e0', borderRadius: '10px', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu cây thư mục khám, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <>\r\n                                                <div className='category-scrollbar'>\r\n                                                    <List sx={{p: 0, display: 'inline-grid'}}>\r\n                                                        {mainDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                                            <Box sx={{display: 'inline-flex'}} key={`category ${predecessorIndex}`}>\r\n                                                                <ListItemButton\r\n                                                                    sx={{\r\n                                                                    width: 'fitContent', pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'},\r\n                                                                    backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffd54f' : ''}} \r\n                                                                    onClick={() => handleSelectCategoryClick(predecessorItem)}\r\n                                                                >\r\n                                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                        <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </Box>\r\n                                                                </ListItemButton>\r\n\r\n                                                                {predecessorItem.newCategoryPre === true && predecessorItem.newPredecessor === true ? \r\n                                                                    null\r\n                                                                :\r\n                                                                    <>\r\n                                                                        {predecessorItem.newCategoryPre === false  ?\r\n                                                                            <>  \r\n                                                                                <CheckCircleIcon sx={{color: 'green', fontSize: '1.4rem', margin: 'auto'}} titleAccess='đã theo dõi'/>\r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        {mainDataExamining.newPredecessor ? \r\n                                                                            null\r\n                                                                        :\r\n                                                                            predecessorItem.isLock === true ?\r\n                                                                                <>  \r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <EditIcon sx={{color: 'blue', fontSize: '1.6rem'}} titleAccess='Sửa'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>\r\n                                                                            \r\n                                                                            :\r\n                                                                                <>\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessorForSaving(predecessorItem.categoryOrder)}>\r\n                                                                                        <BeenhereIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Lưu'/>\r\n                                                                                    </IconButton>\r\n\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleCancelEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <CancelIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Hủy'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>   \r\n                                                                        }                                  \r\n                                                                    </>\r\n                                                                }\r\n                                                            </Box>\r\n                                                        ))}\r\n\r\n                                                        <ListItemButton \r\n                                                            sx={{pt: '4px', pb: '4px', borderRadius: '8px', backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffd54f' : '',\r\n                                                                ':hover': {backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                            onClick={() => handleSelectHealthRecords(mainDataExamining.healthRecords)}\r\n                                                        >\r\n                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}>\r\n                                                                <SendIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                            </ListItemIcon>\r\n\r\n                                                            <ListItemText primary={'Sổ sức khỏe'} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>                                                    \r\n                                                        </ListItemButton>\r\n\r\n                                                        <Collapse in={openCollapseHealthRecords} timeout=\"auto\" unmountOnExit>\r\n                                                            <div style={{ paddingLeft: '24px' }}>\r\n                                                                {mainDataExamining.healthRecords.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                    <ListItemButton key={`healthRecords ${healthRecordsIndex}`} sx={{pt: '0px', pb: '0px', width: 'auto', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                                        onClick={() => handleSelectHealthRecordsItem(healthRecordsItem.medicalRegisterId, healthRecordsItem.examinationName, healthRecordsItem.state)}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: healthRecordsItem.state === 1 ? 'red' : '#009688'}}}>\r\n                                                                            <FiberManualRecordIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={healthRecordsItem.examinationName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </ListItemButton>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </Collapse>\r\n                                                    </List>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </Box>\r\n                            {activeChip.chipOrder === 0 && dataPantientsReadyExamining.editExamining === false ?\r\n                                <div className='instruction' style={{display: 'flex', justifyContent: 'space-between', marginTop: '4.5px'}}>\r\n                                    <Button variant=\"contained\" color=\"error\" onClick={() => handleCancelExamining()}>Hủy khám (f1)</Button>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Bắt đầu khám (f2)</Button>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                </div>\r\n                            :\r\n                                dataPantientsReadyExamining.id === '' ?\r\n                                    null\r\n                                :\r\n                                    dataPantientsReadyExamining.id !== '' && dataPantientsReadyExamining.status === 0 ? \r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleDeleteExamining()}>Xóa khám (f1)</Button>\r\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Sửa đổi (f2)</Button>\r\n                                        </div>\r\n                                    :\r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleCancelExamining()}>Hủy thay đổi (f1)</Button>\r\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                        </div>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            {/* thông tin bệnh nhân */}\r\n                            <Box sx={{boxShadow: 4, borderRadius: '20px', border: '2px solid blue', height: '230px', mb: '8px', overflow: 'auto'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', mt: 0.6, mb: 0.6, fontWeight: 'bolder', fontSize: '1.2rem', textAlign: 'center'}}>Thông tin bệnh nhân</Typography>\r\n                                <Box sx={{pl: 2.8, pr: 2.8, mt: 1}}>\r\n                                    {loadingInfoPatient ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', mt: 4}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải thông tin bệnh nhân, hãy chờ một chút...</Typography>\r\n                                        </Box>\r\n                                    :\r\n                                        <>\r\n                                            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Mã BN: ${dataPantientsReadyExamining.patientsId || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Họ tên: ${dataPantientsReadyExamining.patientsName || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    {dataPantientsReadyExamining.patientsGender === true ? <MaleIcon sx={{color: 'coral', fontSize: '27px'}}/> : <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/>}\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Giới tính: ${dataPantientsReadyExamining.patientsGender !== '' ? dataPantientsReadyExamining.patientsGender === true ? 'Nam' : 'Nữ' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: {dataPantientsReadyExamining.patientsDOB ? moment(dataPantientsReadyExamining.patientsDOB).format(\"DD/MM/YYYY\") : ''}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Tháng tuổi: ${dataPantientsReadyExamining.patientsMonthsOld || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Sdt: ${dataPantientsReadyExamining.patientsPhone || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiBodyHeight style={{color: 'tomato', fontSize: '1.42rem', marginLeft: '2px'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 0.8}}>\r\n                                                        {`Chiều cao: ${dataPantientsReadyExamining.patientsHeight ? dataPantientsReadyExamining.patientsHeight + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Cân nặng: ${dataPantientsReadyExamining.patientsWeight ? dataPantientsReadyExamining.patientsWeight + ' kg' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <TbRulerMeasure style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Vòng đầu: ${dataPantientsReadyExamining.patientsHeadCircumference ? dataPantientsReadyExamining.patientsHeadCircumference + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={12} sx={{display: 'inline-flex'}}>\r\n                                                    <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Địa chỉ: ${dataPantientsReadyExamining.patientsAddress || ''}`}</Typography>\r\n                                                </Grid> \r\n\r\n                                                {previewPredecessor ? \r\n                                                    <>\r\n                                                        <Grid item xs={12} >\r\n                                                            <Box sx={{display: 'flex', flexWrap: 'wrap'}}>\r\n                                                                {previewPredecessor.map((item, index) => (\r\n                                                                    <Typography variant='subtitle1' sx={{ml: 0.5, fontSize: '1.1rem', color: 'mediumblue', fontWeight: 'bolder'}} key={index} >{`${item.categoryContentQuestionName}: ${item.categoryContentAnswer ? 'có' : ''} ${item.categoryContentNote !== null ? `${item.categoryContentNote}` : ''}, `}</Typography>\r\n                                                                ))}\r\n                                                            </Box>\r\n                                                            \r\n                                                        </Grid> \r\n                                                    </>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </Grid>\r\n                                        </>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {/* nội dung khám */}\r\n                            <div className='container-content-examining'>\r\n                                {\r\n                                    loadingPrevDataExamining ? \r\n                                        <>\r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu kỳ khám gần nhất, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    :\r\n                                    prevDataExamining ? \r\n                                        prevDataExamining.healthRecords.length === 1 && prevDataExamining.healthRecords[0].medicalBookId === null ? \r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <Typography variant='h6'>Bệnh nhân không có kỳ khám trước</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <div className='content-examining'><PreviewLastExamining prevDataExamining={prevDataExamining} /></div>\r\n                                    :\r\n                                        null\r\n                                }\r\n                                \r\n                                {categorySelectedExamining.categoryContents ? \r\n                                    <>\r\n                                        <div className='content-examining'>\r\n                                            {loadingContentsExamining ? \r\n                                                <>\r\n                                                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                        <CircularProgress />\r\n                                                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh, hãy chờ một chút...</Typography>\r\n                                                    </Box>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {categorySelectedExamining.newCategoryPre === true && categorySelectedExamining.isLock === true ? \r\n                                                        <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                            <Typography variant='h6'>Bệnh nhân không có tiền căn đang được theo dõi ở mục này</Typography>\r\n                                                        </Box>\r\n                                                    :\r\n                                                        contentCategorySelectedExamining.healthRecordsContentsType !== 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                            categorySelectedExamining.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                                <Box key={categoryContentsIndex} sx={categoryContentsItem.categoryContentTitle === null ? {marginTop: '30px'} : {}}>\r\n\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>{categoryContentsItem.categoryContentTitle || ''}</Typography>\r\n                                                                    {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                        <Box key={`categoryContentQuestionName ${questionIndex}`}>\r\n                                                                            <Grid container rowSpacing={0}>\r\n                                                                                {questionIndex === 0 ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                        </Grid>\r\n\r\n                                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                    <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                </Grid>\r\n\r\n                                                                                                <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            : \r\n                                                                                                <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                        }                                                                             \r\n                                                                                    </> \r\n                                                                                    : \r\n                                                                                    null\r\n                                                                                }\r\n                                                                                \r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1.2rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled={categorySelectedExamining.isLock === true ? true : false} \r\n                                                                                            checked={questionItem.categoryContentAnswer === true ? true : false } \r\n                                                                                            classes={{ root: classes.root }} color='error' \r\n                                                                                            sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} \r\n                                                                                            onClick={() => \r\n                                                                                                dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleAnswerCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer) : handleAnswerCheckQuestion(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer)} />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={7} >\r\n                                                                                            <div className='textfield-for-answer'>\r\n                                                                                                <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                        onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleNoteCheckQuestion(categoryContentsIndex, questionIndex, e.target.value)}\r\n                                                                                                        defaultValue={questionItem.categoryContentNote}\r\n                                                                                                    />\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>   \r\n                                                                                    :\r\n                                                                                    <>\r\n                                                                                        {categorySelectedExamining.categoryOrder === 4 ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8} >\r\n                                                                                                    <div className='textfield-for-answer'>\r\n                                                                                                        <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                                onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                                defaultValue={questionItem.categoryContentNote}\r\n                                                                                                            />\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            :\r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8}>\r\n                                                                                                    <div className='textfield-for-answer' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >\r\n                                                                                                        <input type='text' disabled={categorySelectedExamining.isLock === true ? true : false}\r\n                                                                                                            className='value-for-answer' \r\n                                                                                                            onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                            defaultValue={questionItem.categoryContentNote} \r\n                                                                                                        />\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                        }\r\n                                                                                    </>\r\n                                                                                }\r\n                                                                                \r\n                                                                            </Grid>\r\n                                                                        </Box>\r\n                                                                    ))}\r\n                                                                </Box>\r\n                                                            ))\r\n                                                        :\r\n                                                            contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n                                                                    <TableContainer component={Paper}>\r\n                                                                        <Table stickyHeader>\r\n                                                                            <TableHead>\r\n                                                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                                                    <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n                                                                                </TableRow>\r\n                                                                            </TableHead>\r\n                                                                            <TableBody sx={{borderRadius: '0px'}}>\r\n                                                                                {contentCategorySelectedExamining.categoryContents.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                                    <TableRow hover role=\"checkbox\" key={healthRecordsIndex}>\r\n                                                                                        <TableCell align='left' sx={{width: '158px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{healthRecordsItem.examinationName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '144px'}}>{handleRenderExamsStatus(healthRecordsItem.state)}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '108px'}}>{moment(healthRecordsItem.timeRegister).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '115px'}}>{healthRecordsItem.doctorFullName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: 'auto'}}>{healthRecordsItem.conclusion}</TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                ))}\r\n                                                                            </TableBody>\r\n                                                                        </Table>\r\n                                                                    </TableContainer>\r\n                                                                </>\r\n                                                            :\r\n                                                                \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', lineHeight: 1, mt: 1}}>{currentHealthRecordExamining.healthRecordsName}</Typography>\r\n                                                                    <div className='health-record-content'>\r\n                                                                        <List sx={{p: 0}}>\r\n                                                                            {currentHealthRecordExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => (\r\n                                                                                <div key={`categoryPatients ${categoryPatientsIndex}`}>\r\n                                                                                    <ListItemButton     \r\n                                                                                        sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                                                                        onClick={() => handleOpenHealthRecordsItem(categoryPatientsIndex)}\r\n                                                                                    >\r\n                                                                                        <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseHealthRecordsItem[categoryPatientsIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                                                            <ListItemText primary={categoryPatientsItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                                        </Box>\r\n                                                                                    </ListItemButton>\r\n\r\n                                                                                    <Collapse in={openCollapseHealthRecordsItem[categoryPatientsIndex]} timeout=\"auto\" unmountOnExit>\r\n                                                                                        {categoryPatientsItem.categoryContents.map((categoryPatientsContentsItem, categoryPatientsContentsIndex) => (\r\n                                                                                            <div className='header-health-record' key={categoryPatientsContentsIndex} style={{marginTop: '15px', marginBottom: '15px', border: '2px solid #00bcd4', borderRadius: '20px'}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', textAlign: 'center'}}>{categoryPatientsContentsItem.categoryContentTitle}</Typography>\r\n                                                                                                \r\n                                                                                                <div className='content-health-record' style={{padding: '10px'}} >  \r\n                                                                                                    <Grid container rowSpacing={0}>\r\n                                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryPatientsContentsItem.categoryContentName}</Typography>\r\n                                                                                                        </Grid>\r\n\r\n                                                                                                        <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryPatientsContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                        </Grid>\r\n                                                                                                        \r\n                                                                                                        <Grid item xs={5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryPatientsContentsItem.categoryContentText}</Typography>\r\n                                                                                                        </Grid> \r\n\r\n                                                                                                        {categoryPatientsContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                                                            <Box key={`questionItem ${questionIndex} healthRecordsName ${contentCategorySelectedExamining.healthRecordsName}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                                                 </Grid>    \r\n\r\n                                                                                                                {questionItem.categoryContentQuestionType === 'check' ?\r\n                                                                                                                    <>\r\n                                                                                                                        <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                                                            <Checkbox classes={{ root: classes.root }} checked={questionItem.categoryContentAnswer === true ? true : false }\r\n                                                                                                                                disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                                                                onClick={(e) => handleAnswerCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, questionItem.categoryContentAnswer)} \r\n                                                                                                                            />\r\n                                                                                                                        </Grid>\r\n                                                                                                                    \r\n                                                                                                                        <Grid item xs={5} >\r\n                                                                                                                            <div className='note-for-answer'>\r\n                                                                                                                                <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                        disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                        onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                    />\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                                                                                                                        </Grid>\r\n                                                                                                                    </>\r\n                                                                                                                :\r\n                                                                                                                    <>\r\n                                                                                                                        <Grid item xs={8} >\r\n                                                                                                                            <div className='note-for-answer'>\r\n                                                                                                                                <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                        disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                        onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                    />\r\n                                                                                                                                </div>\r\n                                                                                                                            </div>\r\n                                                                                                                        </Grid>\r\n                                                                                                                    </>\r\n                                                                                                                }\r\n                                                                                                            </Box>\r\n                                                                                                        ))}\r\n                                                                                                    </Grid>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        ))}\r\n                                                                                    </Collapse>\r\n                                                                                </div>\r\n                                                                            ))}\r\n                                                                        </List>\r\n                                                                        \r\n                                                                        {currentHealthRecordExamining.conclusion !== null ?\r\n                                                                            <>\r\n                                                                                <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                                                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận của bác sĩ: ${currentHealthRecordExamining.conclusion}`}</Typography>\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                            :\r\n                                                                            null\r\n                                                                            \r\n                                                                        }\r\n                                                                        \r\n                                                                    </div>\r\n\r\n                                                                </>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n\r\n            <CompleteExamining openModalCompleteExamining={openModalCompleteExamining} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n                handleCompleteExaminingForPantient={handleCompleteExaminingForPantient} dataExaminingForConclusion={dataExaminingForConclusion}\r\n            />\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n            />\r\n            {/* <AlertConfirm openAlertConfirmModal={openAlertConfirmModal.open} onCloseAlertConfirmModal={setOpenAlertConfirmModal} \r\n                titleConfirm={openAlertConfirmModal.title} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDoctorExamining","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-knkpt.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getReportPatient = async (dateSelectedReport) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Admin/GetReportPatient?dateStart=${dateSelectedReport.dateStart}&dateEnd=${dateSelectedReport.dateEnd}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getReportPatient\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridToolbarExport, GridToolbarColumnsButton, GridToolbarDensitySelector, GridToolbarFilterButton, GridToolbarContainer, viVN } from '@mui/x-data-grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//icon\r\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\r\n//moment\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\n//api\r\nimport { getReportPatient } from '../../Service/StatisticsService';\r\n\r\nfunction MainDashboard() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [dateSelectedReport, setDateSelectedReport] = useState({dateStart: '', dateEnd: ''})\r\n    const [mainDataDashboard, setMainDataDashboard] = useState([]);\r\n    const [loadingDataDashboard, setLoadingDataDashboard] = useState(false);\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'STT', width: 120, align: 'left', headerAlign: 'left', },\r\n        { field: 'fullName', headerName: 'Họ tên', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'dayExam', headerName: 'Ngày khám', width: 180, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'gender', headerName: 'Giới tính', width: 140, align: 'left', headerAlign: 'left' },\r\n        { field: 'dayOfBirth', headerName: 'Ngày sinh', width: 165, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'examName', headerName: 'Kỳ khám', width: 170, align: 'left', headerAlign: 'left' },\r\n        { field: 'phone', headerName: 'Điện thoại', width: 170, type: 'number', align: 'left', headerAlign: 'left'},\r\n        { field: 'district', headerName: 'Quận/Huyện', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'province', headerName: 'Tỉnh/Thành phố', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'address', headerName: 'Địa chỉ', width: 700, align: 'left', headerAlign: 'left' },\r\n    ];\r\n\r\n    // Hàm xử lý xuất file Excel\r\n    const handleExportExcel = () => {\r\n        // Tạo lại dữ liệu với các tiêu đề cột tùy chỉnh\r\n        const formattedRows = mainDataDashboard.map((row, index) => ({\r\n            'STT': index + 1,\r\n            'Họ tên': row.fullName, \r\n            'Ngày khám': row.dayExam,\r\n            'Giới tính': row.gender,\r\n            'Ngày sinh': row.dayOfBirth,\r\n            'Kỳ khám': row.examName,\r\n            'Điện thoại': row.phone,\r\n            'Quận/Huyện': row.district,\r\n            'Tỉnh/Thành phố': row.province,\r\n            'Địa chỉ': row.address\r\n          }));\r\n\r\n        // Tạo worksheet từ dữ liệu đã định dạng\r\n        const ws = XLSX.utils.json_to_sheet(formattedRows);\r\n\r\n        // Tạo workbook và thêm worksheet vào đó\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n\r\n        // Xuất file Excel\r\n        XLSX.writeFile(wb, `Danh sách bệnh nhân khám bệnh từ ${moment(dateSelectedReport.dateStart).format('DD-MM-YYYY')} đến ${moment(dateSelectedReport.dateEnd).format('DD-MM-YYYY')}.xlsx`);\r\n    };\r\n\r\n    // Custom toolbar bao gồm nút xuất Excel\r\n    const CustomToolbar = ({ handleExportExcel }) => {\r\n        return (\r\n            <GridToolbarContainer >\r\n                {/* Các chức năng của GridToolbar mặc định */}\r\n                <GridToolbarColumnsButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarFilterButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarDensitySelector sx={{fontSize: '16px'}}/>\r\n                <Button variant=\"text\" startIcon={< RiFileExcel2Fill/>} onClick={handleExportExcel} sx={{fontSize: '16px'}}>Xuất Excel</Button>\r\n            </GridToolbarContainer>\r\n        );\r\n    };\r\n\r\n    const onChangeDateStart = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateStart = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const onChangeDateEnd = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateEnd = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const handleGetReportPatient = async () => {\r\n        setLoadingDataDashboard(true);\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        const responseGetReportPatient = await getReportPatient(dateSelectedReport);\r\n        const editMainDataDashboard = responseGetReportPatient.map((item) => {\r\n            const dataReportPatient = {\r\n                patientId: item.patientId,\r\n                fullName: item.fullName,\r\n                dayExam: moment(item.dayExam).format('DD/MM/YYYY'),\r\n                gender: item.gender ? 'Nam' : 'Nữ',\r\n                dayOfBirth: moment(item.dayOfBirth).format('DD/MM/YYYY'),\r\n                examName: item.examName,\r\n                phone: item.phone,\r\n                district: item.district,\r\n                province: item.province,\r\n                address: item.address\r\n            }\r\n            return dataReportPatient\r\n        })\r\n        setMainDataDashboard(editMainDataDashboard);\r\n        setLoadingDataDashboard(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Admin'){\r\n                history.push('/404');\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(dateSelectedReport.dateStart !== '' && dateSelectedReport.dateEnd !== ''){\r\n            handleGetReportPatient();\r\n        }\r\n    }, [dateSelectedReport])\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1}}>\r\n            <Box sx={{display: 'flex', justifyContent: 'center'}}>\r\n                <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                    <DemoContainer components={['DatePicker']}> \r\n                        <DatePicker label=\"Từ ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateStart(value)}/> \r\n                        <DatePicker label=\"Đến ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateEnd(value)}/>                                   \r\n                    </DemoContainer>\r\n                </LocalizationProvider>\r\n            </Box>\r\n\r\n            <Box sx={{ height: 600, width: '100%', mt: 1.2 }}>\r\n                {loadingDataDashboard ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '80%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>  \r\n                    </>\r\n                    :\r\n                        mainDataDashboard.length !== 0 ?\r\n                            <>       \r\n                                <DataGrid \r\n                                    style={{ fontSize: '18px' }}\r\n                                    localeText={viVN.components.MuiDataGrid.defaultProps.localeText}\r\n                                    rows={mainDataDashboard.map((row, index) => ({\r\n                                        ...row,\r\n                                        id: index + 1,\r\n                                    }))}\r\n                                    columns={columns}\r\n                                    pageSizeOptions={[1]}\r\n                                    components={{\r\n                                        Toolbar: CustomToolbar, // Chèn toolbar vào đây\r\n                                      }}\r\n                                      componentsProps={{\r\n                                        toolbar: { handleExportExcel }, // Truyền hàm export vào props của toolbar\r\n                                      }}\r\n                                    disableRowSelectionOnClick\r\n                                    sx={{\r\n                                        '.MuiTablePagination-selectLabel': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                        '.MuiTablePagination-displayedRows': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        :\r\n                           <h5 style={{textAlign: 'center', color: 'blue'}}>Hãy chọn khoảng ngày khám để lấy dữ liệu thống kê</h5>\r\n                }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainDashboard","import { BrowserRouter, Route, Link, Switch, NavLink, HashRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport Header from \"../components/Nav/Header.jsx\";\nimport Page404 from \"../components/ErrorPage/Page404\";\nimport Login from \"../components/LoginAccount/Log-in\";\nimport MainMedicalRegister from \"../components/MedicalRegister/MainMedicalRegister.jsx\";\nimport MainAppointmentExamining from \"../components/MedicalAppointment/MainAppointmentExamining.jsx\";\nimport MainDoctorExamining from \"../components/DoctorExamining/MainDoctorExamining.jsx\";\nimport MainDashboard from \"../components/Dashboard/MainDashboard.jsx\";\n\nconst AppRoutes = (props) => {\n  return (\n    <>\n      <HashRouter>\n        {/* <Header />{\" \"} */}\n        <Switch>\n          <Route exact path=\"/\">home{\" \"}</Route>\n          <Route path=\"/login\"><Login /></Route>\n          <PrivateRoutes path=\"/medicalregister\" component={MainMedicalRegister}></PrivateRoutes>\n          <PrivateRoutes path=\"/doctor-examining\" component={MainDoctorExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/remind-examining\" component={MainAppointmentExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/dashboard\" component={MainDashboard}></PrivateRoutes>\n          <Route path=\"*\"><Page404 />{\" \"}</Route>\n          {/* <PrivateRoutes path=\"/users\" component={Users} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\nexport default AppRoutes;\n","import \"./App.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Nav/Header\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <div className=\"header-container\">\n          <Header />\n        </div>\n\n        <div className=\"app-container\">\n          <AppRoutes />\n        </div>\n      </HashRouter>\n\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}