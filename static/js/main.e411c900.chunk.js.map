{"version":3,"sources":["Service/UserService.jsx","components/ManageChangePassword/ChangePassword.jsx","components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop.jsx","context/UserContext.jsx","components/ManageUserInfo/ChangeUserInfo.jsx","assets/image/logo.png","Service/SignalService.jsx","components/Nav/Header.jsx","routes/PrivateRoutes.js","components/ErrorPage/Page404.js","components/Home/Home.jsx","components/ManageRegister/Register.jsx","Service/MedicalService.jsx","components/LoginAccount/Log-in.jsx","components/ManageAlertProcessing/AlertProcessing.jsx","Service/PlaceService.jsx","components/ManageInfoPantients/ManageInfoPantients.jsx","components/MedicalRegister/ListPatientsRegister.jsx","components/ManageExaminingSession/ExaminingSession.jsx","components/ManageOldDisease/OldDisease.jsx","components/ManageOldDisease/OldDiseaseForRegister.jsx","components/MedicalRegister/BookMedical.jsx","components/MedicalRegister/MainMedicalRegister.jsx","components/MedicalAppointment/MainAppointmentExamining.jsx","components/ManageConclusionPaper/ConclusionPaper.jsx","components/ManageCompleteExamining/CompleteExamining.jsx","components/DoctorExamining/PreviewLastExamining.jsx","components/DoctorExamining/MainDoctorExamining.jsx","Service/StatisticsService.jsx","components/Dashboard/MainDashboard.jsx","components/ManageAddUser/AddUser.jsx","components/Dashboard/MainListUser.jsx","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["backendURL","createConfig","token","localStorage","getItem","headers","Authorization","concat","ChangePassword","props","inputPasswordDefault","currentPassword","openCurrentPassword","newPassword","openNewPassword","inputPassword","setInputPassword","useState","loading","setLoading","handleCloseModalChangePassword","event","reason","setIsDialogChangePasswordOpen","setOpenModalChangePassword","setTimeout","handleChangePassword","async","Promise","resolve","handleValidate","isValid","toast","warning","toastId","inputPayloadPassword","password","passwordOld","responseUpdatePassword","axios","put","then","response","catch","error","updatePassword","status","data","success","_jsx","_Fragment","children","_jsxs","Dialog","maxWidth","fullWidth","open","openModalChangePassword","onClose","disableEscapeKeyDown","DialogTitle","sx","m","p","fontWeight","fontSize","IconButton","onClick","position","right","top","CloseIcon","DialogContent","dividers","display","flexDirection","alignItems","style","justifyContent","CircularProgress","TextField","autoFocus","label","variant","type","width","mb","onChange","e","value","_inputPassword","onChangeNewPassword","target","InputProps","endAdornment","InputAdornment","handleClickShowNewPassword","padding","VisibilityIcon","VisibilityOffIcon","onChangeCurrentPassword","handleClickShowCurrentPassword","Stack","spacing","direction","Button","height","color","margin","AlertProcessingBackdrop","Backdrop","zIndex","theme","drawer","backgroundColor","changeBackground","openAlertProcessingBackdrop","Box","Typography","mt","alertTitle","UserContext","React","createContext","UserProvider","_ref","useHistory","userDefault","isAuthenticated","isLogin","user","setUser","alertVisible","setAlertVisible","isLogOutClick","setIsLogOutClick","onConfirm","setOnConfirm","setOpenAlertProcessingBackdrop","isDialogChangePasswordOpen","isDialogChangeInfoUserOpen","setIsDialogChangeInfoUserOpen","isOldDiseaseWithNullCodeWard","setIsOldDiseaseWithNullCodeWard","resetAlert","checkJWTExpire","result","getJWT","decodeJWT","JSON","parse","atob","split","parseJwt","currentDate","Date","exp","getTime","removeItem","sessionStorage","clear","useEffect","getUserLogin","getToken","Provider","loadingContext","loginContext","userContextLogin","logoutContext","triggerAlert","confirmCallback","confirmAlert","ChangeUserInfo","useContext","inputUserInfoDefault","userId","userName","userFullName","userEmail","userPosition","dataUserInfoDefault","setDataUserInfoDefault","newDataUserInfo","setNewDataUserInfo","handleCloseModalChangeUserInfo","setOpenModalChangeUserInfo","openModalChangeUserInfo","dataUserInfo","setDataUserInfo","handleChangeUserInfoByAdmin","dataUpdateUser","updateUserAccount","setReloadComponent","handleChangeUserInfo","responseEditUserLogin","editUserLogin","setItem","_dataUserInfoDefault","key","hasOwnProperty","stringify","handleGetUser","responseGetUserLogin","config","get","textAlign","defaultValue","onChangeName","prevNewDataUserInfo","onChangeUserName","onChangeEmail","Autocomplete","options","id","positionName","getOptionLabel","option","renderOption","onSelectPosition","renderInput","params","connection","startSignalRConnection","signalR","withUrl","accessTokenFactory","transport","WebSockets","ServerSentEvents","LongPolling","withAutomaticReconnect","configureLogging","Information","build","start","on","message","onReceiveMessage","callback","withRouter","location","useLocation","history","anchorEl","setAnchorEl","anchorElManageMenuIcon","setAnchorElManageMenuIcon","Boolean","openManageMenuIcon","handleCloseManageMenuIcon","actionNursing","icon","LocalHospitalIcon","LinkComponent","NavLink","to","LocalPhoneIcon","actionDoctor","MedicationLiquidIcon","actionAdmin","BarChartIcon","SettingsSuggestIcon","userAction","setUserAction","pathname","findIndex","action","handleLogout","invoke","removeFromGroup","push","AppBar","Toolbar","Link","Avatar","src","Logo","mr","BottomNavigation","showLabels","flexGrow","map","actionItem","BottomNavigationAction","undefined","handleOpenManageMenuIcon","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","handleMenuItemClick","path","handleClick","preventDefault","textTransform","exact","PrivateRoutes","Redirect","Route","component","Page404","className","Home","Container","ml","CreateAccount","showPassword","setShowPassword","handleCloseModalRegister","setOpenModalRegister","openModalRegister","handleClickShowPassword","createMedicalBackRegister","post","dataPatientsRegister","createAddPredecessor","dataPredecessor","createNotificationForMedicalRegister","getRegistersByDateNow","getListMedicalExaminationsGiveRegister","dayOfBirth","getListOldDisease","patientCode","phone","fullName","getVaccinationByPatientId","patientId","getMedicalDetailPatient","getMedicalBook","medicalRegisterId","getUpdatePredecessor","getAppointmentsNextWeek","updateMedicalState","state","updateStateAppointment","dataAppointment","stateAppointment","medicalBookId","appointmentDate","Login","userAccount","setUserAccount","handleLogin","userLogin","tokenDTO","handleKeyDown","document","addEventListener","removeEventListener","borderRadius","autoComplete","prevUserAccount","onChangeUserPassword","onKeyDown","which","code","handlePressEnter","Register","AlertProcessing","openAlertProcessing","getListProvince","getListDistrict","provinceId","getListWard","districtId","getFullAddressByIdWard","codeWard","ManageInfoPantients","dataPatientInfoDefault","examinationId","weight","headCircumference","vaccination","patient","identifier","address","gender","fullNameMother","phoneMother","fullNameFather","phoneFather","dataPatientInfoErrorDefault","title","isError","openTooltip","focus","examiningSession","province","district","ward","listGender","genderOrder","genderName","genderValue","selectedAutoCompleteDefault","openOption","typingRef","useRef","dateFieldRef","dataPatientInfoNotEdit","setDataPatientInfoNotEdit","dataPatientInfo","setDataPatientInfo","dataPatientInfoError","setDataPatientInfoError","selectedAutoComplete","setSelectedAutoComplete","listExaminingSession","setListExaminingSession","listProvince","setListProvince","listDistrict","setListDistrict","list","listWard","setListWard","focusField","setFocusField","setOpenAlertProcessing","tooltipTheme","createTheme","components","MuiTooltip","defaultProps","placement","arrow","componentsProps","tooltip","bgcolor","slotProps","popper","modifiers","name","offset","handleFocus","fieldName","prevSelectedAutoComplete","handleBlur","test","filterOptions","inputValue","lowercasedInput","toLowerCase","filter","lowercasedFullName","initials","word","join","includes","onChangeDOBToGetExaminingSession","responseListMedicalExaminationsGiveRegister","formattedDate","exams","handleCloseModalInfoPantients","prevListDistrict","prevListWard","setSelectedPantientInfo","setOpenModalInfoPantients","handleUpdateMedicalRegister","checkValidate","_dataPatientInfoError","Object","values","every","item","current","_","isEqual","updateMedicalRegister","setCompleteMedicalRegister","setIsEditedInfo","length","responseListProvince","handleGetListProvince","selectedPantientInfo","setIsContinueUpdateMedicalRegister","editPropsDataPatientInfo","cloneDeep","responseListDistrict","provinceCode","responseListWard","districtCode","selectedGender","find","indexListExamining","indexListProvince","indexListDistrict","indexListWard","wardCode","handleApplyPantientDataToField","openModalInfoPantients","isContinueUpdateMedicalRegister","pt","pb","flexWrap","pl","pr","ThemeProvider","Tooltip","marginTop","inputProps","maxLength","inputRef","input","takenValue","clearInterval","prevDataPatientsRegister","onChangeIdentifier","prevDataPatientInfo","onChangeFullName","onSelectGender","onFocus","onBlur","disableClearable","popupIcon","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DemoContainer","DatePicker","format","moment","disableFuture","disableOpenPicker","textField","_d","today","yearsDifference","getFullYear","monthsDifference","getMonth","daysDifference","getDate","age","totalMonths","totalDays","isNaN","onChangeDOB","noOptionsText","onSelectExaminingSession","size","onSelectProvine","onSelectDistrict","onSelectWard","onChangeAddress","onChangeFullNameMother","onChangePhoneMother","onChangeFullNameFather","onChangePhoneFather","onChangeHeight","onChangeWeight","onChangeHeadCircumference","FormControlLabel","control","Checkbox","checked","onChangeVaccination","bool","DialogActions","ListPatientsRegister","activeChip","setActiveChip","chipOrder","chipLabel","listPantientChipState","setListPantientChipState","chipContent","listDataPatientsRegister","setListDataPatientsRegister","listDataPatientsAppointmentsToday","setListDataPatientsAppointmentsToday","searchPatientsQuery","setSearchPatientsQuery","listDataPatientsRegisterState","setListDataPatientsRegisterState","listDataPatientsRegisterSort","setListDataPatientsRegisterSort","isEditedInfo","searchPatients","patients","searchTerm","lowerCaseSearchTerm","patientObj","handleGetRegistersByDateNow","responseGetAppointmentsToday","getAppointmentsToday","_listDataPatientsAppointmentsToday","updatedList","patientFullName","dateOfBirth","fullAddress","nextExamId","listPantientRegisterWaiting","patientsRegisterItem","listCountState","listPantientRegisterDone","setComponent1Loading","keyCode","completeMedicalRegister","border","boxShadow","pantientChipStateItem","pantientChipStateIndex","Badge","badgeContent","Chip","handleSelectedChip","chipIndex","CachedIcon","cursor","titleAccess","handleReloadGetRegistersByDateNow","placeholder","handleSearchPantient","startAdornment","SearchIcon","TableContainer","Paper","overflowX","borderBottomLeftRadius","borderBottomRightRadius","Table","stickyHeader","minWidth","TableHead","TableRow","TableCell","align","TableBody","patientsRegisterSortItem","patientsRegisterSortIndex","hover","role","onDoubleClick","responseVaccinationByPatientId","dataPantientOldOldDiseaseRegister","oldDisease","medicalTypeId","userIdDoctor","setDataPantientAppointmentsToday","handleSelectedPantientAppointmentsToday","handleSelectedPantientInfo","order","whiteSpace","overflow","textOverflow","ExaminingSession","isConfirmOpen","setIsConfirmOpen","handleListMedicalExaminationsGiveRegister","getListMedicalExaminationsGiveOldRegister","handleMedicalRegister","isAppointment","oldExams","setIsContinueSelectedExaminingSession","setOpenModalExaminingSession","handleResetField","createMedicalRegister","handleOpenConfirm","openModalExaminingSession","isContinueSelectedExaminingSession","monthsOfAge","Grid","container","rowSpacing","xs","oldExamItem","oldExamIndex","RadioGroup","onChangeRadioSelect","examItem","examIndex","Radio","OldDisease","dataPatientsForSearchOldDiseaseDefault","dataPatientsForSearchOldDiseaseErrorDefault","listFoundOldDisease","setListFoundOldDisease","dataPatientsForSearchOldDisease","setDataPatientsForSearchOldDisease","dataPatientsForSearchOldDiseaseError","setDataPatientsForSearchOldDiseaseError","selectedRowIndex","setSelectedRowIndex","formRef","tableRef","handleEnterPress","_dataPatientsForSearchOldDiseaseError","handleCloseModalOldDisease","setOpenModalOldDisease","handleFindOldDisease","reset","querySelectorAll","forEach","dispatchEvent","Event","bubbles","handleClickFindOldDisease","validate","handleApplyDataPatientOldDisease","foundOldDiseaseItem","oldDiseaseWithNullCodeWard","setDataPatientsRegister","openModalOldDisease","ref","prevDataPatientsForSearchOldDisease","onChangePatientId","date","onChangeDayOfBirth","onChangePhone","tabIndex","prevIndex","Math","min","max","handleTableKeyDown","foundOldDiseaseIndex","selected","OldDiseaseForRegister","handleCloseOldDiseaseRegister","setOpenOldDiseaseRegister","openOldDiseaseRegister","listOldDiseaseRegister","BookMedical","dataPatientsRegisterDefault","autocompleteValueDefault","medicalType","dataPatientsRegisterErrorDefault","listMedicalType","medicalTypeOrder","medicalTypeName","setListOldDiseaseRegister","dataPatientsRegisterError","setDataPatientsRegisterError","autocompleteValue","setAutocompleteValue","firstFocusRef","nextFieldId","nextField","getElementById","select","replaceSpecialCharacters","str","replace","normalizedInput","prevAutocompleteValue","_dataPatientsRegisterError","dataPantientAppointmentsToday","handleMedicalBackRegister","responseCreateMedicalBackRegister","handleOpenModalOldDisease","_autocompleteValue","indexListGender","indexListMedicalType","handleApplyPantientOldDiseaseData","handleApplyPantientAppointmentsTodayData","onF2Press","setOnF2Press","onF4Press","setOnF4Press","onF8Press","setOnF8Press","minHeight","PopperProps","disabled","WebkitTextFillColor","InputLabelProps","shrink","DateField","disablePortal","onSelectMedicalType","paddingLeft","paddingRight","multiline","rows","onChangeReason","MainMedicalRegister","component1Loading","setHandleResetField","handleOpenModalExaminingSession","setHandleOpenModalExaminingSession","setHandleOpenModalOldDisease","marginLeft","Skeleton","MainAppointmentExamining","listPantientAppointmentChipState","listAppointment","setListAppointment","listDataPatientsAppointmentPaginate","setListDataPatientsAppointmentPaginate","listDataPatientsAppointmentState","setListDataPatientsAppointmentState","listDataPatientsAppointmentSort","setListDataPatientsAppointmentSort","loadingComponent","setLoadingComponent","page","setPage","pageCount","setPageCount","setDataAppointment","handlePaginate","calculatedPageCount","ceil","startIndex","newCurrentItems","slice","handleAcceptReExamining","findDataAppointment","responseUpdateStateAppointment","responseGetAppointmentsNextWeek","_listAppointmentNotRemind","_listAppointmentAcceptReExamining","_listAppointmentRejectReExamining","updateListPantientAppointmentChipState","dataAppointmentNotRemind","dataAppointmentAcceptReExamining","dataAppointmentRejectReExamining","handleRejectReExamining","handleGetAppointmentsNextWeek","pantientAppointmentChipStateItem","pantientAppointmentChipStateIndex","dataPantientAppointmentItem","dataPantientAppointmentIndex","examNameOld","nextExamName","disablePast","minDate","onChangeAppointmentDate","convertAppointmentDateFindDataAppointment","CheckIcon","CancelIcon","Pagination","count","handlePageChange","resolvePromise","ConclusionPaper","contentRef","dataPantientInfo","setDataPantientInfo","dataConclusionPaper","setDataConclusionPaper","reactToPrintFn","makeStyles","root","useStyles","useReactToPrint","onAfterPrint","openConclusionPaper","predecessorToPrint","updatePredecessorToPrint","updatedCategoryPres","categoryPres","category","updatedCategoryContents","categoryContents","content","updatedQuestions","categoryContentQuestions","question","hasEdit","handleEditDataConclusionToPrint","newDataConclusionPaper","newDataConclusionPaperCategories","categories","setOpenConclusionPaper","onComplete","marginBottom","columnSpacing","sm","md","patientsName","patientsGender","patientsDOB","patientsMonthsOld","patientsAddress","parentName","patientsPhone","patientsHeight","patientsWeight","patientsHeadCircumference","conclusion","isVaccination","nextVaccination","CompleteExamining","mainDataExaminingForConclusion","setMainDataExaminingForConclusion","textareaRef","classes","handleCloseModalCompleteExamining","setOpenModalCompleteExamining","handleSetDataCompleteExamining","editDataExaminingForConclusion","clone","dataExaminingForConclusion","categoriesItem","categoryContentsItem","responseAppointmentDate","getAppointmentDate","reminder","setSelectionRange","handleWaitingPrintComplete","handleAddMedicalBook","some","isPredecessor","categoriesHealthRecordExamining","isHealthRecord","responseAddMedicalBook","dataMedicalBook","createAddMedicalBook","handleCompleteExaminingForPantient","openModalCompleteExamining","List","categoriesIndex","categoryName","categoryContentsIndex","categoryContentTitle","questionItem","questionIndex","borderRight","categoryContentName","categoryContentQuestionType","CheckBoxIcon","lineHeight","categoryContentCheck","categoryContentText","borderTop","categoryContentQuestionName","categoryContentAnswer","TextareaAutosize","categoryContentNote","onChangeExaminingConclusion","prevMainDataExaminingForConclusion","locale","PreviewLastExamining","previewDataExamining","setPreviewDataExamining","healthRecords","examinationName","timeUpdateState","medicakBook","nutritionals","vaccinationBook","loadingMedicalBook","setLoadingMedicalBook","openCollapsePredecessorItem","setOpenCollapsePredecessorItem","openCollapseMedicakBookItem","setOpenCollapseMedicakBookItem","prevDataExamining","responseMedicalBook","healthRecordsItem","newPredecessor","healthRecordsUpdate","newMedicalBook","medicalBookIdRecently","sort","a","b","categoryOrder","handleEditPrevDataExamining","predecessorItem","predecessorIndex","ListItemButton","prevOpen","newOpen","handleOpenPredecessorItem","ListItemIcon","transform","SendIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","predecessorItemCategoryContentsItem","predecessorItemCategoryContentsIndex","medicakBookItems","medicakBookIndex","handleOpenMedicakBookItem","medicakBookCategoryContentsItem","medicakBookCategoryContentsIndex","doctorFullName","MainDoctorExamining","dataPantientsReadyExaminingDefault","stt","patientsId","isFormDirty","setIsFormDirty","dataPantientsReadyExamining","setDataPantientsReadyExamining","mainDataExamining","setMainDataExamining","setPrevDataExamining","openCollapseHealthRecords","setOpenCollapseHealthRecords","openCollapseHealthRecordsItem","setOpenCollapseHealthRecordsItem","categorySelectedExamining","setCategorySelectedExamining","contentCategorySelectedExamining","setContentCategorySelectedExamining","healthRecordsContents","setHealthRecordsContents","currentHealthRecordExamining","setCurrentHealthRecordExamining","previewPredecessor","setPreviewPredecessor","oldPreviewPredecessor","setOldPreviewPredecessor","setPredecessorToPrint","setDataExaminingForConclusion","oldDataPredecessor","setOldDataPredecessor","newDataPredecessor","setNewDataPredecessor","prevDataPredecessor","setPrevDataPredecessor","loadingPrevDataExamining","setLoadingPrevDataExamining","loadingPatient","setLoadingPatient","loadingInfoPatient","setLoadingInfoPatient","loadingCategoryExamining","setLoadingCategoryExamining","loadingContentsExamining","setLoadingContentsExamining","handleCancelExamining","editExamining","backRegister","handleStartExaminingButtonClick","handleBeginExaminingForPantient","alert","handleBeginEditExaminingForPantient","handleCompleteExaminingButtonClick","responseListPantient","findPantientIsExam","responseDataExamining","indexPantient","findListPantientNotExam","handleAppyPantientData","handleGetMedicalDetailPatient","dataPantientItem","_dataPantientsReadyExamining","isContinueExam","_listDataPatientsRegister","findIndexPatient","handleSetMainDataExamining","handleGetCategoryReExamining","editPrevDataExaminingCategoryPres","responseGetUpdatePredecessorItem","matchingPrevDataExamining","prevDataExaminingCategoryPresItem","isLock","content2","content1","categoryContentOrder","matchingContent1","isNullCategoryPres","responseGetUpdateMedicalBook","updateHealthRecordsCategoriesForConclusion","demoDataExaminingForConclusion","healthRecordsName","categoryPatients","updateCategoriesForConclusion","editCategoryContents","itemCategoryContents","newCategoriesDemoDataExaminingForConclusion","editDataCategoryPresForConclusion","mainCategoryContentsExamining","editDataHealthRecordsForConclusion","categoryPresItem","categoryPresIndex","categoryPresOrder","getUpdateMedicalBook","handleSetMainDataReExamining","responseGetUpdateMedicalBookData","questions","allNull","q","responseGetUpdatePredecessor","handleNoteValueQuestionPredecessorForReExamOrBackExam","_categorySelectedExamining","createSelectedQuestionsValuePredecessorForReExamOrBackExam","categoryContentQuestion","findNewDataPredecessorCategoryOrder","newDataPredecessorCategoryPresItem","findNewDataPredecessorCategoryContents","newDataPredecessorCategoryContentsItem","newDataPredecessorcategoryContentQuestionsItem","categoryContentQuestionOrder","questionIndexRemove","splice","newDataPredecessorCategoryContents","newDataPredecessorCategoryPres","newCategoryPre","createPreviewDataPredecessor","createSelectedQuestionsPredecessorForReExamOrBackExam","isEditNote","questionIndexNoteDontExit","handleSaveNewDataPredecessor","saveNewDataPredecessor","findNewDataPredecessor","responseCreateAddPredecessor","_mainDataExamining","selectCategoryReExamining","handleSelectCategoryClick","previewDataPredecessor","flatMap","categoryContentDefauls","healthRecordsContentsType","categoryIncludeCotent","findHealthRecord","healthRecordsState","editDataHealthRecordsItemForConclusion","_dataExaminingForConclusion","dataHealthRecordsItemForConclusionItem","handleAnswerValueQuestion","createSelectedQuestionsExaminingForConclusion","handleNoteCheckQuestionHealthRecords","categoryPatientsIndex","categoryPatientsContentsIndex","_healthRecordsContents","questionOrder","existingQuestion","categoryContentQuestionsItem","_previewPredecessor","findQuestion","handleReceiveMessage","medicalRegisterMessage","window","confirm","handleBeforeUnload","confirmationMessage","returnValue","unblock","block","_dataPatientsRegisterSort","handleUnload","reDataPatientsRegisterSort","dataPatientsRegisterSort","reDataPantientsReadyExamining","reMainDataExamining","reDataExaminingForConclusion","reCurrentHealthRecordExamining","rePrevDataPredecessor","reOldDataPredecessor","handleReloadUIWhenExamining","dataPantientIndex","handleSelectPantientExamining","CheckCircleIcon","edge","findUpdatePredecessor","handleEditDataPredecessor","EditIcon","handleEditDataPredecessorForSaving","findOldDataPredecessorCategoryOrder","oldDataPredecessorItem","findNewDataPredecessorCategoryContentsItem","findOldDataPredecessorCategoryContentsItem","newQ","findNewDataPredecessorQuestionItem","contentCategoryContentsItem","removeOldDataPredecessorCategoryPres","BeenhereIcon","handleCancelEditDataPredecessor","findPrevDataPredecessorByCategoryName","prevDataPredecessorItem","removeCategoryPredecessor","findOldDataPredecessorByCategoryOrder","findPreviewPredecessorNotByCategoryOrder","newPreviewPredecessor","handleSelectHealthRecords","healthRecordsIndex","handleSelectHealthRecordsItem","FiberManualRecordIcon","PinIcon","PersonIcon","MaleIcon","FemaleIcon","CalendarMonthIcon","InfoIcon","PhoneIcon","GiBodyHeight","GiWeightScale","TbRulerMeasure","index","handleAnswerCheckQuestionPredecessorForReExamOrBackExam","answer","handleAnswerCheckQuestion","handleNoteCheckQuestionPredecessorForReExamOrBackExam","handleNoteCheckQuestion","DescriptionIcon","timeRegister","categoryPatientsItem","handleOpenHealthRecordsItem","categoryPatientsContentsItem","handleAnswerCheckQuestionHealthRecords","currentHealthRecordsContent","getListUser","MainDashboard","dateSelectedReport","setDateSelectedReport","dateStart","dateEnd","mainDataDashboard","setMainDataDashboard","loadingDataDashboard","setLoadingDataDashboard","handleGetReportPatient","responseGetReportPatient","getReportPatient","editMainDataDashboard","dayExam","examName","_dateSelectedReport","onChangeDateStart","onChangeDateEnd","DataGrid","localeText","viVN","MuiDataGrid","row","columns","field","headerName","headerAlign","pageSizeOptions","handleExportExcel","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","startIcon","RiFileExcel2Fill","toolbar","formattedRows","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","disableRowSelectionOnClick","AddUser","dataAddUser","setDataAddUser","userPassword","handleCloseModalAddUser","setOpenModalAddUser","handleAddUser","responseAddUser","addUser","openModalAddUser","onChangeUserFullName","prevDataAddUser","MainListUser","reloadComponent","loadingListUser","setLoadingListUser","listUser","setListUser","onChangeActiveUser","isActive","updateActiveUser","editMainDataListUser","dataReportUser","userIsActive","renderCell","Switch","handleGetListUser","marginRight","handleOpenModalAddUser","HiUserAdd","onCellDoubleClick","handleDoubleClickUser","AppRoutes","HashRouter","App","Header","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"ofAGA,MAAMA,EAAa,gCAEbC,EAAeA,KACnB,MAAMC,EAAQC,aAAaC,QAAQ,OAOnC,MALe,CACbC,QAAS,CACPC,cAAc,UAADC,OAAYL,IAGhB,E,WCwIAM,MAnIf,SAAwBC,GACpB,MAAMC,EAAuB,CACzBC,gBAAiB,GACjBC,qBAAqB,EACrBC,YAAa,GACbC,iBAAiB,IAGdC,EAAeC,GAAoBC,mBAASP,IAE5CQ,EAASC,GAAcF,oBAAS,GAEjCG,EAAiCA,CAACC,EAAOC,KACxCA,GAAqB,kBAAXA,IAITb,EAAMc,+BAA8B,GACpCd,EAAMe,4BAA2B,GACjCC,YAAW,KACPT,EAAiBN,EAAqB,GACvC,KACP,EAyCEgB,EAAuBC,UAGzB,GAFAR,GAAW,SACL,IAAIS,SAAQC,GAAWJ,WAAWI,EAAS,OAhB9BC,MACnB,IAAIC,GAAU,EAUd,MATqC,KAAlChB,EAAcJ,kBACbqB,IAAMC,QAAQ,sEAAoC,CAACC,QAAS,4BAC5DH,GAAU,GAGmB,KAA9BhB,EAAcF,cACbmB,IAAMC,QAAQ,4DAA+B,CAACC,QAAS,wBACvDH,GAAU,GAEPA,CAAO,EAMXD,GAAiB,CAChB,MAAMK,EAAuB,CAAEC,SAAUrB,EAAcF,YAAawB,YAAatB,EAAcJ,iBACzF2B,ODpBKX,WACrB,MAAMzB,EAAQC,aAAaC,QAAQ,OACjC,aAAamC,IAAMC,IAAI,GAADjC,OAAIP,EAAU,mCAAmCmC,EAAsB,CACzF9B,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAGhCuC,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,ECO2CG,CAAeV,GAEf,MAAlCG,EAAuBQ,QAAkD,8EAAhCR,EAAuBS,KAC/Df,IAAMY,MAAM,kEAAsC,CAACV,QAAS,+BAEtB,MAAlCI,EAAuBQ,OAC3Bd,IAAMY,MAAMN,EAAuBS,KAAM,CAACb,QAAS,+BAEb,MAAlCI,EAAuBQ,SAC3Bd,IAAMgB,QAAQV,EAAuBS,KAAM,CAACb,QAAS,gCACrDd,IAER,CACAD,GAAW,EAAM,EAGrB,OACI8B,cAAAC,WAAA,CAAAC,SACIC,eAACC,IAAM,CAACC,SAAU,KAAMC,WAAW,EAAMC,KAAM/C,EAAMgD,wBAAyBC,QAASA,CAACrC,EAAOC,IAAWF,EAA+BC,EAAOC,GAASqC,sBAAsB,EAAKR,SAAA,CAChLF,cAACW,IAAW,CAACC,GAAI,CAAEC,EAAG,EAAGC,EAAG,IAAKC,WAAY,SAAUC,SAAU,QAASd,SAAC,qCAC3EF,cAACiB,IAAU,CAACC,QAASA,IAAM/C,IAAiCyC,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACrGF,cAACsB,IAAS,CAACN,SAAS,aAGxBhB,cAACuB,IAAa,CAACC,UAAQ,EAACZ,GAAI,CAACa,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAUzB,SACxFjC,EACG+B,cAAA,OAAK4B,MAAO,CAACH,QAAS,OAAQI,eAAgB,UAAU3B,SACpDF,cAAC8B,IAAgB,MAGrB3B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAAC+B,IAAS,CAACC,WAAW,EAAMC,MAAM,8BAAeC,QAAQ,WAAWC,KAAMrE,EAAcD,gBAAkB,OAAS,WAAY+C,GAAI,CAAEwB,MAAO,OAAQC,GAAI,KAAOC,SAAWC,GAxDrKC,KACzB,MAAMC,EAAiB,IAAI3E,GAC3B2E,EAAe7E,YAAc4E,EAC7BzE,EAAiB0E,EAAe,EAqDoKC,CAAoBH,EAAEI,OAAOH,OACzMI,WAAY,CACRC,aACI7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAC1BC,eAACc,IAAU,CAACC,QAxEjB6B,KAC/B,MAAMN,EAAiB,IAAI3E,GAC3B2E,EAAe5E,iBAAmBC,EAAcD,gBAChDE,EAAiB0E,EAAe,EAqEqD7B,GAAI,CAACoC,QAAS,OAAO9C,SAAA,CAAC,IAAEpC,EAAcD,gBAAkBmC,cAACiD,IAAc,IAAMjD,cAACkD,IAAiB,YAMhKlD,cAAC+B,IAAS,CAACE,MAAM,wCAAoBC,QAAQ,WAAWC,KAAMrE,EAAcH,oBAAsB,OAAS,WAAYiD,GAAI,CAAEwB,MAAO,OAAQC,GAAI,KAAOC,SAAWC,GAxEzJC,KAC7B,MAAMC,EAAiB,IAAI3E,GAC3B2E,EAAe/E,gBAAkB8E,EACjCzE,EAAiB0E,EAAe,EAqE4JU,CAAwBZ,EAAEI,OAAOH,OACrMI,WAAY,CACRC,aACI7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAC1BC,eAACc,IAAU,CAACC,QAxFbkC,KACnC,MAAMX,EAAiB,IAAI3E,GAC3B2E,EAAe9E,qBAAuBG,EAAcH,oBACpDI,EAAiB0E,EAAe,EAqFyD7B,GAAI,CAACoC,QAAS,OAAO9C,SAAA,CAAC,IAAEpC,EAAcH,oBAAuBqC,cAACiD,IAAc,IAAMjD,cAACkD,IAAiB,YAMzKlD,cAACqD,IAAK,CAACC,QAAS,EAAGC,UAAU,SAAQrD,SACjCF,cAACwD,IAAM,CAAC5C,GAAI,CAAE6C,OAAQ,MAAOrB,MAAO,QAAUF,QAAQ,YAAYwB,MAAM,UAAU9B,MAAO,CAAE+B,OAAQ,QAAUzC,QAASA,IAAMzC,IAAuByB,SAAC,gDASpL,E,2BClIe0D,MAXf,SAAiCpG,GAC7B,OACIwC,cAAC6D,IAAQ,CAACjD,GAAI,CAAE8C,MAAO,OAAQI,OAASC,GAAUA,EAAMD,OAAOE,OAAS,EAAGC,gBAAiBzG,EAAM0G,iBAAmB,qBAAuB,sBAAwB3D,KAAM/C,EAAM2G,4BAA4BjE,SACxMC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAUzB,SAAA,CACtEF,cAAC8B,IAAgB,CAAC4B,MAAM,YACxB1D,cAACqE,IAAU,CAACzD,GAAI,CAAC0D,GAAI,KAAOpC,QAAQ,YAAWhC,SAAE1C,EAAM+G,iBAIvE,ECVA,MAAMC,EAAcC,IAAMC,cAAc,MAElCC,EAAeC,IAAmB,IAAlB,SAAE1E,GAAU0E,EAEdC,uBAAhB,MAEMC,EAAc,CAChBC,iBAAiB,EACjBC,SAAS,EACT/H,MAAO,KAGJgI,EAAMC,GAAWlH,mBAAS8G,IAE1B7G,EAASC,GAAcF,oBAAS,IAEhCmH,EAAcC,GAAmBpH,oBAAS,IAC1CqH,EAAeC,GAAoBtH,oBAAS,IAC5CuH,EAAWC,GAAgBxH,mBAAS,OAEpCmG,EAA6BsB,GAAkCzH,oBAAS,IAExE0H,EAA4BpH,GAAiCN,oBAAS,IAEtE2H,EAA4BC,GAAiC5H,oBAAS,IAEtE6H,EAA8BC,GAAmC9H,oBAAS,GAmB3E+H,EAAaA,KACfX,GAAgB,GAChBE,GAAiB,GACjBE,EAAa,KAAK,EAiChBQ,EAAiBA,KACnB,IAAIC,GAAS,EACTC,EAAShJ,aAAaC,QAAQ,OAClC,GAAG+I,EAAO,CACN,IAAIC,EAZMlJ,KACd,IACE,OAAOmJ,KAAKC,MAAMC,KAAKrJ,EAAMsJ,MAAM,KAAK,IAC1C,CAAE,MAAOhE,GACP,OAAO,IACT,GAOoBiE,CAASN,GACrBO,EAAc,IAAIC,KACtB,OAAmB,IAAhBP,EAAUQ,IAAaF,EAAYG,WAElC1J,aAAa2J,WAAW,OACxB3J,aAAa2J,WAAW,aACxBC,eAAeC,QACRd,IAIPA,GAAS,EACFA,EAEf,CAGI,OADA/I,aAAa2J,WAAW,aACjBZ,CACX,EAwBJ,OArBAe,qBAAU,KACN9I,GAAW,GACX,MAAM+I,EAAeb,KAAKC,MAAMnJ,aAAaC,QAAQ,cAE/C+J,EAAWhK,aAAaC,QAAQ,OACtC,GAAG8J,GAAgBC,EAAS,CACxB,MAAMjB,EAASD,IACZC,EACCf,EAAQ+B,IAEO,IAAXhB,GACJf,EAAQJ,EAEhB,MACI5H,aAAa2J,WAAW,OACxB3J,aAAa2J,WAAW,aACxB3B,EAAQJ,GAEZ5G,GAAW,EAAM,GAClB,IAGCiC,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACwE,EAAY2C,SAAQ,CACjB3E,MAAO,CAAEyC,OAAMhH,UAASmJ,eA3EZnJ,IACpBC,KAAcD,EAAQ,EA0E0BoJ,aAtG9BC,IAClBpC,EAAQ,IAAKoC,IACbpJ,GAAW,EAAM,EAqGLqJ,cAhFMA,KAClBrC,EAAQ,IAAKJ,GAAc,EA+EAK,eAAcqC,aAlGvBC,IAClBrC,GAAgB,GAChBE,GAAiB,GACjBE,GAAa,IAAMiC,GAAgB,EA+FoBC,aA5FtCA,KACbnC,GAAWA,IACfD,GAAiB,GACjBS,GAAY,EAyFyDA,aAAYV,gBACrEK,6BAA4BpH,gCAC5BqH,6BAA4BC,gCAC5BC,+BAA8BC,mCAChC5F,SACDA,IAGLF,cAAC4D,EAAuB,CACpBO,4BAA6BA,EAC7BI,WAAY,8DAEjB,E,aCiDIoD,MApLf,SAAwBnK,GACpB,MAAM,aAAE6J,GAAiBO,qBAAWpD,GAE9BqD,EAAuB,CACzBC,OAAQ,GACRC,SAAU,GACVC,aAAc,GACdC,UAAW,GACXC,aAAc,KAGXjK,EAASC,GAAcF,oBAAS,IAChCmK,EAAqBC,GAA0BpK,mBAAS6J,IACxDQ,EAAiBC,GAAsBtK,mBAAS,CAAC,GAOlDuK,EAAiCA,CAACnK,EAAOC,KACxCA,GAAqB,kBAAXA,IAITb,EAAMgL,4BAA2B,GAC9BhL,EAAMiL,0BAA4BjL,EAAMkL,aACvClL,EAAMoI,+BAA8B,GAEpCpI,EAAMmL,kBAEVL,EAAmB,CAAC,GACpBF,EAAuBP,GAC3B,EA+BEe,EAA8BlK,UAChCR,GAAW,GACXmK,EAAgBP,OAASK,EAAoBL,OAEL,YJ6BtBpJ,WACxB,MAAMzB,EAAQC,aAAaC,QAAQ,OACjC,aAAamC,IAAMC,IAAI,GAADjC,OAAIP,EAAU,uCAAuC8L,EAAgB,CACvFzL,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAGhCuC,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EI3C0CqJ,CAAkBT,IAC7BxI,SACzBd,IAAMgB,QAAQ,sCAAuB,CAACd,QAAS,6BAC/CzB,EAAMuL,oBAAmB,GACzBR,KAEJrK,GAAW,EAAM,EAGf8K,EAAuBtK,UACzBR,GAAW,GACX,MAAM+K,OJGQvK,WACpB,MAAMzB,EAAQC,aAAaC,QAAQ,OACnC,aAAamC,IAAMC,IAAI,GAADjC,OAAIP,EAAU,mCAAmC8L,EAAgB,CACnFzL,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAGhCuC,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EIhBwCyJ,CAAcb,GACd,MAAjCY,EAAsBpJ,QAClBoJ,EAAsBnJ,KAAK7C,OAC1BC,aAAaiM,QAAQ,MAAOF,EAAsBnJ,KAAK7C,OAG3DuB,YAAW,KACP,MAAM4K,EAAuB,IAAIjB,GACjC,IAAK,MAAMkB,KAAOhB,EACVe,EAAqBE,eAAeD,KACpCD,EAAqBC,GAAOhB,EAAgBgB,IAIpDjB,EAAuBgB,GACvB/B,EAAa+B,GACblM,aAAaiM,QAAQ,YAAa/C,KAAKmD,UAAU,CAACxE,iBAAiB,EAAMC,SAAS,KAASoE,KAE3FrK,IAAMgB,QAAQ,sCAAuB,CAACd,QAAS,yBAE/Cf,GAAW,EAAM,GAClB,OAGHa,IAAMY,MAAMsJ,EAAsBnJ,KAAM,CAACb,QAAS,uBAClDf,GAAW,GACf,EAGEsL,EAAgB9K,UAClBR,GAAW,GACX,MAAMuL,OJlFO/K,WACnB,MAAMgL,EAAS1M,IACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,EAAU,iCAAiC2M,GACpElK,MAAK,SAAUC,GACd,OAAOA,EAASK,IAClB,IACCJ,OAAM,SAAUC,GACf,OAAOA,EAAMF,SAASI,MACxB,GAAE,EI0EuCoH,GACnCmB,EAAuBqB,GACvBvL,GAAW,EAAM,EAsBrB,OAXA8I,qBAAU,MAC+B,IAAlCxJ,EAAMiL,0BACFjL,EAAMkL,cATbxK,GAAW,GACXM,YAAW,KACP4J,EAAuB5K,EAAMkL,cAC7BxK,GAAW,EAAM,GAClB,MASKsL,IAER,GACD,CAAChM,EAAMiL,wBAAyBjL,EAAMkL,eAGrCvI,eAACC,IAAM,CAACC,SAAU,KAAMC,WAAW,EAAMC,KAAM/C,EAAMiL,wBAAyBhI,QAASA,CAACrC,EAAOC,IAAWkK,EAA+BnK,EAAOC,GAASqC,sBAAsB,EAAKR,SAAA,CAChLF,cAACW,IAAW,CAACC,GAAI,CAAEC,EAAG,EAAGC,EAAG,IAAKC,WAAY,SAAUC,SAAU,OAAQ4I,UAAW,UAAW1J,SAAC,+BAC5FF,cAACiB,IAAU,CAACC,QAASA,IAAMqH,IAAiC3H,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACrGF,cAACsB,IAAS,CAACN,SAAS,aAG5BhB,cAACuB,IAAa,CAACC,UAAQ,EAACZ,GAAI,CAACa,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAUzB,SACxFjC,EACG+B,cAAA,OAAK4B,MAAO,CAACH,QAAS,OAAQI,eAAgB,UAAU3B,SACpDF,cAAC8B,IAAgB,MAGrB3B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAAC+B,IAAS,CAACE,MAAM,iBAASC,QAAQ,WAAWtB,GAAI,CAAEwB,MAAO,OAAQC,GAAI,KAAOwH,aAAc1B,EAAoBH,aAAc1F,SAAWC,IAAMuH,OA/G5ItH,EA+GyJD,EAAEI,OAAOH,WA9GpL8F,GAAmByB,IACfA,EAAoB/B,aAAexF,EAC5B,IAAIuH,MAHGvH,KA+GyK,IAC3KxC,cAAC+B,IAAS,CAACE,MAAM,kCAAgBC,QAAQ,WAAWtB,GAAI,CAAEwB,MAAO,OAAQC,GAAI,KAAOwH,aAAc1B,EAAoBJ,SAAUzF,SAAWC,IAAMyH,OAzG3IxH,EAyG4JD,EAAEI,OAAOH,WAxG3L8F,GAAmByB,IACfA,EAAoBhC,SAAWvF,EACxB,IAAIuH,MAHOvH,KAyG4K,IAClLxC,cAAC+B,IAAS,CAACE,MAAM,QAAQC,QAAQ,WAAWtB,GAAI,CAAEwB,MAAO,OAAQC,GAAI,KAAOwH,aAAc1B,EAAoBF,UAAW3F,SAAWC,IAAM0H,OAnGvIzH,EAmGqJD,EAAEI,OAAOH,WAlGjL8F,GAAmByB,IACfA,EAAoB9B,UAAYzF,EACzB,IAAIuH,MAHIvH,KAmGqK,IAElI,UAArC2F,EAAoBD,aACjBlI,cAAAC,WAAA,CAAAC,SACIF,cAACkK,IAAY,CACTC,QA3IX,CACjB,CAACC,GAAI,IAAKC,aAAc,kBACxB,CAACD,GAAI,IAAKC,aAAc,wBA0IIC,eAAiBC,GAAWA,EAAOF,aACnCG,aAAcA,CAAChN,EAAO+M,IAClBvK,cAAA,SAAQxC,EAAK0C,SACRqK,EAAOF,eAGhB/H,SAAUA,CAACC,EAAGC,IAxGrBiI,EAAClI,EAAGC,KACzB8F,GAAmByB,IACfA,EAAoB7B,aAAe1F,EAAM4H,GAClC,IAAIL,KACb,EAoGkDU,CAAiBlI,EAAGC,GAC5CkI,YAAcC,GAAW3K,cAAC+B,IAAS,IAAK4I,EAAQ1I,MAAM,mBACtDrB,GAAI,CAAEwB,MAAO,UAAWC,GAAI,SAIpC,KAGJrC,cAACqD,IAAK,CAACC,QAAS,EAAGC,UAAU,SAAQrD,SACjCF,cAACwD,IAAM,CAAC5C,GAAI,CAAE6C,OAAQ,MAAOrB,MAAO,QAAUF,QAAQ,YAAYwB,MAAM,UAAU9B,MAAO,CAAE+B,OAAQ,QAAUzC,QAASA,IAAM1D,EAAMkL,aAAeE,IAAgCI,IAAuB9I,SAAC,wCAOrO,E,6CCnMe,MAA0B,iC,8ICIzC,IAAI0K,GAAa,KAGjB,MAAMC,GAAyBnM,UAC3B,GAAIkM,GAEA,OAAOA,GAGXA,IAAa,IAAIE,MACZC,QAAQ,GAADzN,OAZG,gCAYW,oBAAoB,CACtC0N,mBAAoBA,IAAM/N,EAC1BgO,UAAWH,KAA0BI,WACzBJ,KAA0BK,iBAC1BL,KAA0BM,cAEzCC,uBAAuB,CAAC,EAAG,IAAM,IAAO,MACxCC,iBAAiBR,KAAiBS,aAClCC,QAGL,UACUZ,GAAWa,QAIjBb,GAAWc,GAAG,kBAAmBC,IAEzBC,IACAA,GAAiBD,EACrB,GAGR,CAAE,MAAOhM,GAELnB,YAAW,IAAMqM,GAAuB5N,EAAO2O,KAAmB,IACtE,GAIEA,GAAoBC,IAClBjB,IACAA,GAAWc,GAAG,iBAAkBG,EAEhC,EC4JOC,6BA5Kf,SAAgBtO,GAEd,MAAM,KAAEyH,EAAI,cAAEsC,EAAa,aAAEC,EAAY,8BAAElJ,EAA6B,8BAAEsH,EAA6B,6BAAEC,GAAiC+B,qBAAWpD,GAE/IuH,EAAWC,wBACXC,EAAUpH,wBAGTrE,EAAyBjC,GAA8BP,oBAAS,IAChEyK,EAAyBD,GAA8BxK,oBAAS,IAGhEkO,EAAUC,GAAenO,mBAAS,OAClCoO,EAAwBC,GAA6BrO,mBAAS,MAE/Df,EAAQC,aAAaC,QAAQ,OAE7BoD,EAAO+L,QAAQJ,GACfK,EAAqBD,QAAQF,GAoB7BI,EAA4BA,KAChCH,EAA0B,KAAK,EAQ3BI,EAAgB,CACpB,CAAEpD,IAAK,kBAAmBhJ,SAAU,QAAS4B,MAAO,+BAAgByK,KAAM1M,cAAC2M,IAAiB,CAAC/L,GAAI,CAACI,SAAU,MAAQ4L,cAAeC,IAASC,GAAI,oBAChJ,CAAEzD,IAAK,mBAAoBhJ,SAAU,OAAQ4B,MAAO,oBAAayK,KAAM1M,cAAC+M,IAAc,CAACnM,GAAI,CAACI,SAAU,MAAQ4L,cAAeC,IAASC,GAAI,sBAGtIE,EAAe,CACnB,CAAE3D,IAAK,YAAahJ,SAAU,QAAS4B,MAAO,oBAAayK,KAAM1M,cAACiN,IAAoB,CAACrM,GAAI,CAACI,SAAU,MAAQ4L,cAAeC,IAASC,GAAI,sBAGtII,EAAc,CAClB,CAAE7D,IAAK,cAAehJ,SAAU,OAAQ4B,MAAO,mBAAYyK,KAAM1M,cAACmN,KAAY,CAACvM,GAAI,CAACI,SAAU,MAAQ4L,cAAeC,IAASC,GAAI,cAClI,CAAEzD,IAAK,SAAUhJ,SAAU,OAAQ4B,MAAO,kBAAWyK,KAAM1M,cAACoN,KAAmB,CAACxM,GAAI,CAACI,SAAU,SAG1FqM,EAAYC,GAAiBtP,mBAAS,IAOvCwE,GALmB+K,EAKK/P,EAAMuO,SAASwB,SAJvBF,EAAWG,WAAUC,GAAUA,EAAOX,KAAOS,KAD1CA,MAOzB,MAAMG,EAAeA,KACnB,MAAMH,EAAW/P,EAAMuO,SAASwB,SACP,WAAtBtI,EAAKoF,cAA0C,qBAAbkD,EACnC/F,GAAa9I,eDxCKA,WACpB,GAAIkM,GACA,UACUA,GAAW+C,OAAO,kBAE5B,CAAE,MAAOhO,GACL,CAGJ,ECgCMiO,GACN1Q,aAAa2J,WAAW,OACxB3J,aAAa2J,WAAW,aACxBU,IACA4E,EAAY,MACZF,EAAQ4B,KAAK,SAAS,KAKxB3Q,aAAa2J,WAAW,OACxB3J,aAAa2J,WAAW,aACxBU,IACA4E,EAAY,MACZF,EAAQ4B,KAAK,UACf,EAqBF,OAlBA7G,qBAAU,QAEP,CAACnB,IAEJmB,qBAAU,KACL/B,IACwB,YAAtBA,EAAKoF,aACNiD,EAAcb,GAEc,WAAtBxH,EAAKoF,aACXiD,EAAcN,GAEc,UAAtB/H,EAAKoF,cACXiD,EAAcJ,GAElB,GACC,CAACjI,IAEqB,WAAtB8G,EAASwB,SAERpN,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACoE,IAAG,CAACxD,GAAI,CAAEwB,MAAO,QAAQlC,SACxBF,cAAC8N,IAAM,CAAClN,GAAI,CAACO,SAAU,SAASjB,SAC9BC,eAAC4N,IAAO,CAACnN,GAAI,CAACqD,gBAAiB,UAAWR,OAAQ,QAAQvD,SAAA,CACxDF,cAACgO,IAAI,CAAClB,GAAG,IAAG5M,SACVF,cAACiO,IAAM,CAACC,IAAKC,EAAMvN,GAAI,CAAEwB,MAAO,GAAIqB,OAAQ,GAAIa,GAAI,OAAQjC,GAAI,OAAQ+L,GAAI,OAE7EnJ,GAAQhI,EACPkD,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACqO,IAAgB,CAACC,YAAU,EAAC9L,MAAOA,EAClC5B,GAAI,CAACa,QAAS,OAAQI,eAAgB,aAAcoC,gBAAiB,UAAWsK,SAAU,GAAGrO,SAC5FmN,EAAWmB,KAAIC,GACdzO,cAAC0O,IAAsB,CAErBzM,MAAOwM,EAAWxM,MAClByK,KAAM+B,EAAW/B,KACjBE,cAAe6B,EAAW7B,eAAiB,MAC3CE,GAAI2B,EAAW3B,SAAM6B,EACrBzN,QAAU9C,GAlGCwQ,EAACxQ,EAAOiL,KAC5B,WAARA,GACDgD,EAA0BjO,EAAMyQ,cAClC,EA+FwCD,CAAyBxQ,EAAOqQ,EAAWpF,KAC/DzI,GAAI,CAAC8C,MAAO,OAAQrD,SAAUoO,EAAWpO,WANpCoO,EAAWpF,SAWtBrJ,cAAC8O,IAAI,CAAC5C,SAAUE,EAAwB7L,KAAM+L,QAAQC,GAAqB9L,QAASA,IAAM+L,IAA6BuC,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAAYC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,UAAW/O,SAC5OF,cAACmP,IAAQ,CAACjO,QAASA,KAAMkO,OA/FdC,EA+FkC,eA9F7DpD,EAAQ4B,KAAKwB,QACb7C,IAF2B6C,KA+FkD,EAAAnP,SAAC,8BAGhEF,cAACwD,IAAM,CAACtC,QAAUqB,IAAM+M,OAxHnBlR,EAwH+BmE,QAvHd,IAAjCsD,EACDzH,EAAMmR,iBAENpD,EAAY/N,EAAMyQ,gBAJDzQ,KAwHkC,EAACwC,GAAI,CAAC8C,MAAO,OAAQ8L,cAAe,QAAQtP,SAAE+E,EAAK+C,eAC1F7H,eAAC2O,IAAI,CAAC5C,SAAUA,EAAU3L,KAAMA,EAAME,QAASA,KAhH7D0L,EAAY,KAgHqE,EAAAjM,SAAA,CACjEF,cAACmP,IAAQ,CAACjO,QAASA,IAAM,CAAC3C,GAA2B,GAAOD,GAA8B,GAAO6N,EAAY,OAAOjM,SAAC,qCACrHF,cAACmP,IAAQ,CAACjO,QAASA,IAAM,CAACsH,GAA2B,GAAO5C,GAA8B,GAAOuG,EAAY,OAAOjM,SAAC,+BACrHF,cAACmP,IAAQ,CAACjO,QAASwM,EAAaxN,SAAC,mCAMrCF,cAAAC,WAAA,CAAAC,SACEF,cAACoE,IAAG,CAACxD,GAAI,CAACO,SAAU,WAAYC,MAAO,IAAIlB,SACzCF,cAAC6M,IAAO,CAAC4C,OAAK,EAAC3C,GAAG,SAAQ5M,SAACF,cAACwD,IAAM,CAAC5C,GAAI,CAAC4O,cAAe,OAAQ9L,MAAO,QAAQxD,SAAC,0CAU3FF,cAACzC,EAAc,CAACiD,wBAAyBA,EAAyBjC,2BAA4BA,EAA4BD,8BAA+BA,IACzJ0B,cAAC2H,EAAc,CAACc,wBAAyBA,EAAyBD,2BAA4BA,EAA4B5C,8BAA+BA,OAKtJ5F,cAAAC,WAAA,GAEX,ICrIeyP,OAlEQlS,IAErB,MAQMwI,EAAiBA,KACrB,IAAIC,GAAS,EACb,MAAMC,EAAShJ,aAAaC,QAAQ,OACpC,GAAI+I,EAAQ,CACV,IAAIC,EAZUlJ,KAChB,IACE,OAAOmJ,KAAKC,MAAMC,KAAKrJ,EAAMsJ,MAAM,KAAK,IAC1C,CAAE,MAAOhE,GACP,OAAO,IACT,GAOkBiE,CAASN,GACrBO,EAAc,IAAIC,KACtB,OAAoB,IAAhBP,EAAUQ,IAAaF,EAAYG,WAErC1J,aAAa2J,WAAW,OACxB3J,aAAa2J,WAAW,aACxBC,eAAeC,QACRd,IAIPA,GAAS,EACFA,EAEX,CAIE,OAFA/I,aAAa2J,WAAW,OACxB3J,aAAa2J,WAAW,aACjBZ,CACT,EAGIiB,EAAWhK,aAAaC,QAAQ,OAGtC,GAFqBiJ,KAAKC,MAAMnJ,aAAaC,QAAQ,eAEjC+J,EAAU,CAE5B,OAAe,IADAlB,IAGXhG,cAAAC,WAAA,CAAAC,SACEF,cAAC2P,WAAQ,CAAC7C,GAAG,aAMf9M,cAAAC,WAAA,CAAAC,SACEF,cAAC4P,QAAK,CAACP,KAAM7R,EAAM6R,KAAMQ,UAAWrS,EAAMqS,aAIlD,CAIE,OAFA3S,aAAa2J,WAAW,OACxB3J,aAAa2J,WAAW,aAEtB7G,cAAAC,WAAA,CAAAC,SACEF,cAAC2P,WAAQ,CAAC7C,GAAG,YAGnB,E,OClDagD,OAbCA,KAEAjL,uBAEd,OACE7E,cAAA,OAAAE,SACEC,eAAA,OAAK4P,UAAU,UAAS7P,SAAA,CACtBF,cAAA,MAAI+P,UAAU,QAAO7P,SAAC,QACtBF,cAAA,OAAK+P,UAAU,OAAM7P,SAAC,iFAEpB,E,UCuBK8P,OA7Bf,WAEI,MAAM,KAAE/K,EAAI,QAAEhH,GAAY2J,qBAAWpD,GAErC,OACIxE,cAACiQ,KAAS,CAAA/P,SACNF,cAACoE,IAAG,CAACxD,GAAI,CAAC0D,GAAI,GAAGpE,UACA,IAAZjC,GAAqBgH,GAAQA,EAAKD,QACT,YAAtBC,EAAKoF,aACDrK,cAAAC,WAAA,CAAAC,SACIC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,EAAGlP,SAAU,WAAWd,SAAA,CAAC,+EAAuCF,cAAA,QAAM4B,MAAO,CAACb,WAAY,SAAU2C,MAAO,QAAQxD,SAAC,mCAAqB,sIAGhK,WAAtB+E,EAAKoF,aACDlK,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,EAAGlP,SAAU,WAAWd,SAAA,8IACjEC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,EAAGlP,SAAU,WAAWd,SAAA,CAAC,yFAA2CF,cAAA,QAAM4B,MAAO,CAACb,WAAY,SAAU2C,MAAO,QAAQxD,SAAC,wBAAkB,+DACnLF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,EAAGlP,SAAU,WAAWd,SAAC,qMAGtE,KAERC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,EAAGlP,SAAU,WAAWd,SAAA,CAAC,oBAASF,cAAA,QAAM4B,MAAO,CAACb,WAAY,SAAU2C,MAAO,QAAQxD,SAAC,+BAAkB,8FAKrK,EC4BeiQ,OAjDQ3S,IACnB,MAAO4S,EAAcC,GAAmBrS,oBAAS,GAI3CsS,EAA2BA,CAAClS,EAAOC,KACpCA,GAAqB,kBAAXA,GAIXb,EAAM+S,sBAAqB,EAC7B,EAQF,OACIvQ,cAAAC,WAAA,CAAAC,SACEC,eAACC,IAAM,CAACC,SAAU,KAAMC,WAAW,EAAMC,KAAM/C,EAAMgT,kBAAmB/P,QAASA,CAACrC,EAAOC,IAAWiS,EAAyBlS,EAAOC,GAASqC,sBAAsB,EAAKR,SAAA,CACtKF,cAACW,IAAW,CAACC,GAAI,CAAEC,EAAG,EAAGC,EAAG,IAAKC,WAAY,SAAUC,SAAU,QAASd,SAAC,+BAC3EF,cAACiB,IAAU,CAACC,QAASA,IAAMoP,IAA2B1P,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACjGF,cAACsB,IAAS,CAACN,SAAS,aAEtBb,eAACoB,IAAa,CAACC,UAAQ,EAAAtB,SAAA,CACrBF,cAAC+B,IAAS,CAACE,MAAM,iBAASC,QAAQ,WAAWtB,GAAI,CAAEwB,MAAO,OAAQC,GAAI,OACtErC,cAAC+B,IAAS,CAACE,MAAM,oBAAYC,QAAQ,WAAWtB,GAAI,CAAEwB,MAAO,OAAQC,GAAI,OACzErC,cAAC+B,IAAS,CAACE,MAAM,qBAAWC,QAAQ,WAAWC,KAAMiO,EAAe,OAAS,WAAYxP,GAAI,CAAEwB,MAAO,OAAQC,GAAI,KAChHO,WAAY,CACVC,aACE7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAC5BC,eAACc,IAAU,CAACC,QA9BEuP,IAAMJ,GAAiBD,GA8BSxP,GAAI,CAACoC,QAAS,OAAO9C,SAAA,CAAC,IAAEkQ,EAAepQ,cAACiD,IAAc,IAAMjD,cAACkD,IAAiB,YAKpIlD,cAACkK,IAAY,CAACC,QAxBP,CACf,CAACC,GAAI,IAAKC,aAAc,kCACxB,CAACD,GAAI,IAAKC,aAAc,mBAsBgBmE,KAAKjE,GAAWA,EAAOF,eAAeK,YAAcC,GAAW3K,cAAC+B,IAAS,IAAK4I,EAAQ1I,MAAM,mBAAarB,GAAI,CAAEwB,MAAO,UAAWC,GAAI,OACrKrC,cAACqD,IAAK,CAACC,QAAS,EAAGC,UAAU,SAAQrD,SACnCF,cAACwD,IAAM,CAAC5C,GAAI,CAAE6C,OAAQ,MAAOrB,MAAO,QAAUF,QAAQ,YAAYwB,MAAM,UAAU9B,MAAO,CAAE+B,OAAQ,QAAUzC,QAASA,IAAMoP,IAA2BpQ,SAAC,wCAK7J,ECzDX,MAAMnD,GAAa,gCAEbC,GAAeA,KACjB,MAAMC,EAAQC,aAAaC,QAAQ,OAOnC,MALe,CACbC,QAAS,CACPC,cAAc,UAADC,OAAYL,IAGhB,EAmBXyT,GAA4BhS,UAC9B,MAAMzB,EAAQC,aAAaC,QAAQ,OACnC,aAAamC,IAAMqR,KAAK,GAADrT,OAAIP,GAAU,6BAA6B6T,EAAsB,CACpFxT,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAGhCuC,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAsBAoR,GAAuBnS,UACzB,MAAMzB,EAAQC,aAAaC,QAAQ,OACnC,aAAamC,IAAMqR,KAAK,GAADrT,OAAIP,GAAU,+BAA+B+T,EAChE,CACI1T,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAIpCuC,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAqBAsR,GAAuCrS,UACzC,MAAMzB,EAAQC,aAAaC,QAAQ,OAEnC,aAAamC,IAAMqR,KAAK,GAADrT,OAAIP,GAAU,sDADN,EAE3B,CACIK,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAIpCuC,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGAuR,GAAwBtS,UAC1B,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,sCAAsC2M,GACzElK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAGAoR,GAAyCvS,UAC3C,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,wDAAAO,OAAuD4T,GAAcxH,GACxGlK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAcAsR,GAAoBzS,MAAO0S,EAAaC,EAAOC,EAAUJ,KAC3D,MAAMxH,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,4CAAAO,OAA2C8T,EAAW,WAAA9T,OAAU+T,EAAK,cAAA/T,OAAagU,EAAQ,gBAAAhU,OAAe4T,GAAcxH,GAC1JlK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAGA0R,GAA4B7S,UAC9B,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,2CAAAO,OAA0CkU,GAAa9H,GAC1FlK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAcA4R,GAA0B/S,UAC5B,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,+BAAAO,OAA8B8M,GAAMV,GACvElK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAGA6R,GAAiBhT,UACnB,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,mDAAAO,OAAkDqU,GAAqBjI,GAC1GlK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGAmS,GAAuBlT,UACzB,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,sCAAAO,OAAqCkU,GAAa9H,GACrFlK,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAyBAoS,GAA0BnT,UAC5B,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,wCAAwC2M,GAC3ElK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EA8BAiS,GAAqBpT,MAAO0L,EAAI2H,KAClC,MAAM9U,EAAQC,aAAaC,QAAQ,OACnC,aAAamC,IAAMC,IAAI,GAADjC,OAAIP,GAAU,gCAAAO,OAA+B8M,EAAE,WAAA9M,OAAUyU,GAAS,CAAC,EAAG,CACxF3U,QAAS,CACL,eAAgB,4BAChBC,cAAc,UAADC,OAAYL,MAGhCuC,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGAuS,GAAyBtT,MAAOuT,EAAiBC,KACnD,MAAMjV,EAAQC,aAAaC,QAAQ,OACnC,aAAamC,IAAMC,IAAI,GAADjC,OAAIP,GAAU,wCAAAO,OAAuC2U,EAAgBE,cAAa,qBAAA7U,OAAoB2U,EAAgBG,gBAAe,sBAAA9U,OAAqB4U,GAAoB,CAAC,EAAG,CACpM9U,QAAS,CACL,eAAgB,4BAChBC,cAAc,UAADC,OAAYL,MAGhCuC,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,ECnIS4S,OAtJDA,KACV,MAAM,KAAEpN,EAAI,aAAEoC,GAAiBO,qBAAWpD,GACpCyH,EAAUpH,wBAETV,EAA6BsB,GAAkCzH,oBAAS,IAExEsU,EAAaC,GAAkBvU,mBAAS,CAAC+J,SAAU,GAAI5I,SAAU,MACjEqR,EAAmBD,GAAwBvS,oBAAS,IACpDoS,EAAcC,GAAmBrS,oBAAS,GAsB3CwU,EAAc9T,UAChB,GAA4B,KAAzB4T,EAAYvK,SACXhJ,IAAMY,MAAM,wDAEX,GAA4B,KAAzB2S,EAAYnT,SAChBJ,IAAMY,MAAM,wDAEZ,CACA8F,GAA+B,GAC/B,MAAMhG,ObnDAf,OAAOqJ,EAAU5I,UACpBG,IAAMqR,KAAK,GAADrT,OAAIP,EAAU,0BAA0B,CAAEgL,WAAU5I,aAC1EK,MAAK,SAAUC,GAEZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACf,OAAOA,EAAMF,QACf,Ia2CiCgT,CAAUH,EAAYvK,SAAUuK,EAAYnT,UACnE,GAAuB,MAApBM,EAASI,OACRd,IAAMY,MAAMF,EAASK,MACrB2F,GAA+B,OAE/B,CACkC,WAA/BhG,EAASK,KAAKuK,oBACPQ,GAAuBpL,EAASK,KAAK4S,SAASzV,OAGxDC,aAAaiM,QAAQ,MAAO1J,EAASK,KAAK4S,SAASzV,OACnD,MAAMwV,EAAY,CACd1N,iBAAiB,EACjBC,SAAS,EACT8C,OAAQrI,EAASK,KAAKgI,OACtBC,SAAUtI,EAASK,KAAKiI,SACxBC,aAAcvI,EAASK,KAAKkI,aAC5BC,UAAWxI,EAASK,KAAKmI,UACzBoC,aAAc5K,EAASK,KAAKuK,cAGhCnN,aAAaiM,QAAQ,YAAa/C,KAAKmD,UAAUkJ,IACjDpL,EAAaoL,GAEqB,YAA/BhT,EAASK,KAAKuK,aACb4B,EAAQ4B,KAAK,oBAEsB,WAA/BpO,EAASK,KAAKuK,aAClB4B,EAAQ4B,KAAK,qBAEsB,UAA/BpO,EAASK,KAAKuK,cAClB4B,EAAQ4B,KAAK,cAEjBpI,GAA+B,EACnC,CACJ,GAmCJ,OA1BAuB,qBAAU,KACF/B,IAAiC,IAAzBA,EAAKF,iBACbkH,EAAQ4B,KAAK,KAGjB,MAAM5Q,EAAQC,aAAaC,QAAQ,OAC7BsV,EAAYvV,aAAaC,QAAQ,aACnCF,GAASwV,GACTxG,EAAQ4B,KAAK,IACjB,GACD,IAEH7G,qBAAU,KACN,MAAM2L,EAAiBvU,IAChB+F,GACC/F,EAAMmR,gBACV,EAKJ,OAFAqD,SAASC,iBAAiB,UAAWF,GAE9B,KACHC,SAASE,oBAAoB,UAAWH,EAAc,CACzD,GACF,CAACxO,IAGAhE,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACiQ,KAAS,CAAC5P,SAAS,KAAIH,SACpBF,cAACoE,IAAG,CAACxD,GAAI,CAAE0D,GAAI,EAAGyO,aAAc,QAAS7S,SACrCC,eAACiE,IAAG,CAACxD,GAAI,CAAEE,EAAG,KAAMZ,SAAA,CAChBF,cAACiO,IAAM,CAACC,IAAKC,EAAMvN,GAAI,CAAEwB,MAAO,IAAKqB,OAAQ,IAAKyM,GAAI,OAAQ9B,GAAI,OAAQ/L,GAAI,KAC9ErC,cAACqE,IAAU,CAACzD,GAAI,CAAEgJ,UAAW,SAAU4F,cAAe,YAAazO,WAAY,SAAUC,SAAU,UAAWqB,GAAI,EAAGqB,MAAO,WAAaxB,QAAQ,KAAIhC,SAAC,kEACtJC,eAACiE,IAAG,CAACyL,UAAU,OAAOmD,aAAa,MAAMpR,MAAO,CAAEgI,UAAW,UAAW1J,SAAA,CACpEF,cAAC+B,IAAS,CAACE,MAAM,oBAAYC,QAAQ,WAAWtB,GAAI,CAAEwB,MAAO,OAAQC,GAAI,KAAOC,SAAWC,IAAMyH,OAzG/FxH,EAyGgHD,EAAEI,OAAOH,WAxG/I+P,GAAeU,IACJ,IACAA,EACHlL,SAAUvF,MAJIA,KAyGgI,IAClIxC,cAAC+B,IAAS,CAACE,MAAM,qBAAWC,QAAQ,WAAWC,KAAMiO,EAAe,OAAS,WAAYxP,GAAI,CAAEwB,MAAO,OAAQC,GAAI,GAClHC,SAAWC,IAAM2Q,OAlGX1Q,EAkGgCD,EAAEI,OAAOH,WAjGnE+P,GAAeU,IACJ,IACAA,EACH9T,SAAUqD,MAJQA,KAkGgD,EAAC2Q,UAAY5Q,GA1CjEA,KACN,KAAZA,EAAE6Q,OAA2B,UAAX7Q,EAAE8Q,MACpBb,GACJ,EAuC6Fc,CAAiB/Q,GACtFK,WAAY,CACRC,aACI7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAC9BC,eAACc,IAAU,CAACC,QAjHhBuP,IAAMJ,GAAiBD,GAiH2BxP,GAAI,CAACoC,QAAS,OAAO9C,SAAA,CAAC,IAAEkQ,EAAepQ,cAACiD,IAAc,IAAMjD,cAACkD,IAAiB,YAKxIlD,cAACqD,IAAK,CAACC,QAAS,EAAGC,UAAU,SAAQrD,SACjCF,cAACwD,IAAM,CAAC5C,GAAI,CAAE6C,OAAQ,QAASrB,MAAO,QAAUF,QAAQ,YAAYN,MAAO,CAAE+B,OAAQ,QAAUzC,QAAUqB,GAAMiQ,IAActS,SAAC,yCASlJF,cAACuT,GAAQ,CACL/C,kBAAmBA,EAAmBD,qBAAsBA,IAGhEvQ,cAAC4D,EAAuB,CACpBO,4BAA6BA,EAA6BsB,+BAAgCA,EAC1FlB,WAAY,yCAEjB,E,+CCxJIiP,OAff,SAAyBhW,GACrB,OACIwC,cAAAC,WAAA,CAAAC,SACIF,cAACI,IAAM,CAACE,WAAW,EAAMD,SAAU,KAAME,KAAM/C,EAAMiW,oBAAqB/S,sBAAsB,EAAKR,SACjGF,cAACuB,IAAa,CAAArB,SACVC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUH,cAAe,SAAUC,WAAY,UAAUzB,SAAA,CAChGF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,uCAMrE,E,wHClBA,MAAMnD,GAAa,gCAEbC,GAAeA,KACjB,MAAMC,EAAQC,aAAaC,QAAQ,OAOnC,MALe,CACbC,QAAS,CACPC,cAAc,UAADC,OAAYL,IAGhB,EAGXyW,GAAkBhV,UACpB,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,oCAAoC2M,GACvElK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAGA8T,GAAkBjV,UACpB,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,oDAAAO,OAAmDsW,GAAclK,GACpGlK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAGAgU,GAAcnV,UAChB,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,gDAAAO,OAA+CwW,GAAcpK,GAChGlK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EAGAkU,GAAyBrV,UAC3B,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,+CAAAO,OAA8C0W,GAAYtK,GAC7FlK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EC8+CSoU,OAngDf,SAA6BzW,GAC3B,MAAM0W,EAAyB,CAC7BC,cAAe,GACf1Q,OAAQ,GACR2Q,OAAQ,GACRC,kBAAmB,GACnBhW,OAAQ,GACRiW,aAAa,EACblK,GAAI,GACJmK,QAAS,CACPC,WAAY,GACZC,QAAS,GACTnD,SAAU,GACVJ,WAAY,KACZ8C,SAAU,GACVU,QAAQ,EACRC,eAAgB,GAChBC,YAAa,GACbC,eAAgB,GAChBC,YAAa,GACbtD,UAAW,KAITuD,EAA8B,CAClCP,WAAY,CAAEQ,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpE7D,SAAU,CAAE0D,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClET,OAAQ,CAAEM,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEjE,WAAY,CAAE8D,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpEC,iBAAkB,CAAEJ,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC1EE,SAAU,CAAEL,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEG,SAAU,CAAEN,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEI,KAAM,CAAEP,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC9DV,QAAS,CAAEO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACjER,eAAgB,CAAEK,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACxEP,YAAa,CAAEI,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrEL,YAAa,CAAEE,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrE1R,OAAQ,CAAEuR,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEf,OAAQ,CAAEY,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEd,kBAAmB,CAAEW,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,IAGvEK,EAAa,CACjB,CAACC,YAAa,EAAGC,WAAY,MAAOC,aAAa,GACjD,CAACF,YAAa,EAAGC,WAAY,UAAMC,aAAa,IAG5CC,EAA8B,CAClClB,OAAQ,CAAElS,MAAO,KAAMqT,YAAY,GACnCT,iBAAkB,CAAC5S,MAAO,KAAMqT,YAAY,EAAO5X,SAAS,GAC5DoX,SAAU,CAAE7S,MAAO,KAAMqT,YAAY,GACrCP,SAAU,CAAE9S,MAAO,KAAMqT,YAAY,GACrCN,KAAM,CAAE/S,MAAO,KAAMqT,YAAY,IAG7BC,EAAYC,iBAAO,MACnBC,EAAeD,iBAAO,OAErB9X,EAASC,GAAcF,sBAEvBiY,EAAwBC,GAA6BlY,sBACrDmY,EAAiBC,GAAsBpY,mBAASkW,IAChDmC,EAAsBC,GAA2BtY,mBAAS+W,IAE1DwB,EAAsBC,GAA2BxY,mBAAS4X,IAE1Da,EAAsBC,GAA2B1Y,mBAAS,KAC1D2Y,EAAcC,GAAmB5Y,mBAAS,KAC1C6Y,EAAcC,GAAmB9Y,mBAAS,CAAC+Y,KAAM,GAAI9Y,SAAS,KAC9D+Y,EAAUC,GAAejZ,mBAAS,CAAC+Y,KAAM,GAAI9Y,SAAS,KAEtDiZ,EAAYC,GAAiBnZ,mBAAS,OAEtCyV,EAAqB2D,GAA0BpZ,oBAAS,GAEzDqZ,EAAeC,aAAY,CAC/BC,WAAY,CACVC,WAAY,CACVC,aAAc,CACZC,UAAW,SACXC,OAAO,EACPC,gBAAiB,CACfC,QAAS,CACPjX,GAAI,CACFkX,QAAS,YAGbH,MAAO,CACL/W,GAAI,CACF8C,MAAO,aAIbqU,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN/N,QAAS,CACPgO,OAAQ,CAAC,GAAI,aAWzBC,EAAeC,IAEjB7B,EADe,WAAd6B,EACuBC,IACtBA,EAAyB5D,OAAOmB,YAAa,EACtC,IAAIyC,IAGO,qBAAdD,EACkBC,IACtBA,EAAyBlD,iBAAiBS,YAAa,EAChD,IAAIyC,IAGO,aAAdD,EACkBC,IACtBA,EAAyBjD,SAASQ,YAAa,EACxC,IAAIyC,IAGQ,aAAdD,EACiBC,IACtBA,EAAyBhD,SAASO,YAAa,EACxC,IAAIyC,IAIWA,IACtBA,EAAyB/C,KAAKM,YAAa,EACpC,IAAIyC,IAEf,EAGIC,EAAaA,CAAC/V,EAAO6V,KACZ,KAAV7V,GAA0B,eAAVA,GAuED,KAAVA,IACW,WAAd6V,EACD7B,GAAwB8B,IACtBA,EAAyB5D,OAAOmB,YAAa,EACtC,IAAIyC,MAGO,qBAAdD,EACN7B,GAAwB8B,IACtBA,EAAyBlD,iBAAiBS,YAAa,EAChD,IAAIyC,MAGO,aAAdD,EACN7B,GAAwB8B,IACxBA,EAAyBjD,SAASQ,YAAa,EACtC,IAAIyC,MAGO,aAAdD,EACN7B,GAAwB8B,IACtBA,EAAyBhD,SAASO,YAAa,EACxC,IAAIyC,MAGO,SAAdD,GACN7B,GAAwB8B,IACtBA,EAAyB/C,KAAKM,YAAa,EACpC,IAAIyC,MAGjB,EAGI3F,EAAiBvU,IAChB,QAAQoa,KAAKpa,EAAMiL,MAAsB,cAAdjL,EAAMiL,KAAqC,WAAdjL,EAAMiL,KAAkC,cAAdjL,EAAMiL,KAAqC,eAAdjL,EAAMiL,KAAsC,QAAdjL,EAAMiL,KAEtJjL,EAAMmR,gBACR,EAGIkJ,EAAgBA,CAACtO,EAAOvF,KAAsB,IAApB,WAAE8T,GAAY9T,EAC5C,MAAM+T,EAAkBD,EAAWE,cAEnC,OAAOzO,EAAQ0O,QAAOtO,IACpB,MAAMuO,EAAqBvO,EAAO+G,SAASsH,cACrCG,EAAWxO,EAAO+G,SAAS/K,MAAM,KAAKiI,KAAIwK,GAAQA,EAAK,KAAIC,KAAK,IAAIL,cAE1E,OAAQE,EAAmBI,SAASP,IAAoBI,EAASG,SAASP,EAAgB,GAC1F,EAkIEQ,EAAmCza,UACvC8X,GAAwB8B,IACtBA,EAAyBlD,iBAAiB5S,MAAQ,KAC3C,IAAI8V,MAGb9B,GAAwB8B,IACtBA,EAAyBlD,iBAAiBnX,SAAU,EAC7C,IAAIqa,MAGb,MAAMc,QAAoDnI,GAAuCoI,GACjG3C,EAAwB0C,EAA4CE,OAEpE9C,GAAwB8B,IACtBA,EAAyBlD,iBAAiBnX,SAAU,EAC7C,IAAIqa,KACX,EAobEiB,EAAgCA,CAACnb,EAAOC,KACzCA,GAAqB,kBAAXA,IAIXyY,GAAgB0C,IACdA,EAAiBvb,SAAU,EAC3Bub,EAAiBzC,KAAO,GACjB,IAAIyC,MAEbvC,GAAYwC,IACVA,EAAaxb,SAAU,EACvBwb,EAAa1C,KAAO,GACb,IAAI0C,MAEb/C,EAAwB,IACxBF,EAAwBZ,GACxBQ,EAAmBlC,GACnBgC,EAA0B,IAC1BI,EAAwBvB,GACxB7W,GAAW,GACXV,EAAMkc,0BACNlc,EAAMmc,2BAA0B,GAClC,EA2QIC,EAA8Blb,UAClC,GAzMoBmb,MAClB,MAAMC,EAAwB,IAAIzD,GAClC,IAAIvX,GAAU,EAmMd,MAjM6C,KAA1CuX,EAAqB7B,WAAWQ,QAC9B+E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBtF,WAAWW,OAAQ,EACzCgC,EAAc,eAEhBrY,GAAU,GAG4B,KAArCqX,EAAgB5B,QAAQjD,WACzBwI,EAAsBxI,SAAS0D,MAAQ,8CACvC8E,EAAsBxI,SAAS4D,aAAc,EAC7C4E,EAAsBxI,SAAS2D,SAAU,EACtC8E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBxI,SAAS6D,OAAQ,EACvCgC,EAAc,aAEhBrY,GAAU,GAG0B,KAAnCqX,EAAgB5B,QAAQG,SACzBoF,EAAsBpF,OAAOM,MAAQ,iDACrC8E,EAAsBpF,OAAOO,SAAU,EACvC6E,EAAsBpF,OAAOQ,aAAc,EACxC6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBpF,OAAOS,OAAQ,EACrCgC,EAAc,WAEhBrY,GAAU,GAG8B,KAAvCqX,EAAgB5B,QAAQrD,aACzB4I,EAAsB5I,WAAW8D,MAAQ,4CACzC8E,EAAsB5I,WAAW+D,SAAU,EAC3C6E,EAAsB5I,WAAWgE,aAAc,EAC5C6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsB5I,WAAWiE,OAAQ,EACrCa,EAAamE,SACfnE,EAAamE,QAAQhF,SAGzBrW,GAAU,GAGiC,KAA1CuX,EAAqBnF,WAAW8D,QACjC8E,EAAsB5I,WAAW+D,SAAU,EACxC8E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsB5I,WAAWiE,OAAQ,EACrCa,EAAamE,SACfnE,EAAamE,QAAQhF,SAGzBrW,GAAU,GAGuC,OAAhDyX,EAAqBnB,iBAAiB5S,QACvCsX,EAAsB1E,iBAAiBJ,MAAQ,wDAC/C8E,EAAsB1E,iBAAiBH,SAAU,EACjD6E,EAAsB1E,iBAAiBF,aAAc,EAClD6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsB1E,iBAAiBD,OAAQ,EAC/CgC,EAAc,qBAEhBrY,GAAU,GAG+B,OAAxCyX,EAAqBlB,SAAS7S,QAC/BsX,EAAsBzE,SAASL,MAAQ,kDACvC8E,EAAsBzE,SAASJ,SAAU,EACzC6E,EAAsBzE,SAASH,aAAc,EAC1C6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBzE,SAASF,OAAQ,EACvCgC,EAAc,aAEhBrY,GAAU,GAG+B,OAAxCyX,EAAqBjB,SAAS9S,QAC/BsX,EAAsBxE,SAASN,MAAQ,oDACvC8E,EAAsBxE,SAASL,SAAU,EACzC6E,EAAsBxE,SAASJ,aAAc,EAC1C6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBxE,SAASH,OAAQ,EACvCgC,EAAc,aAEhBrY,GAAU,GAG2B,OAApCyX,EAAqBhB,KAAK/S,QAC3BsX,EAAsBvE,KAAKP,MAAQ,sDACnC8E,EAAsBvE,KAAKN,SAAU,EACrC6E,EAAsBvE,KAAKL,aAAc,EACtC6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBvE,KAAKJ,OAAQ,EACnCgC,EAAc,SAEhBrY,GAAU,GAG2B,KAApCqX,EAAgB5B,QAAQE,UACzBqF,EAAsBrF,QAAQO,MAAQ,sDACtC8E,EAAsBrF,QAAQQ,SAAU,EACxC6E,EAAsBrF,QAAQS,aAAc,EACzC6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBrF,QAAQU,OAAQ,EACtCgC,EAAc,YAEhBrY,GAAU,GAGkC,KAA3CqX,EAAgB5B,QAAQI,gBAAoE,KAA3CwB,EAAgB5B,QAAQM,iBAC1EiF,EAAsBnF,eAAeK,MAAQ,qDAC7C8E,EAAsBnF,eAAeM,SAAU,EAC/C6E,EAAsBnF,eAAeO,aAAc,EAChD6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBnF,eAAeQ,OAAQ,EAC7CgC,EAAc,mBAEhBrY,GAAU,GAG+B,KAAxCqX,EAAgB5B,QAAQK,aAA8D,KAAxCuB,EAAgB5B,QAAQO,cACvEgF,EAAsBlF,YAAYI,MAAQ,iEAC1C8E,EAAsBlF,YAAYK,SAAU,EAC5C6E,EAAsBlF,YAAYM,aAAc,EAC7C6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBlF,YAAYO,OAAQ,EAC1CgC,EAAc,gBAEhBrY,GAAU,GAGmC,KAA5Cgb,EAAsBlF,YAAYI,QACnC8E,EAAsBlF,YAAYK,SAAU,EACzC8E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBlF,YAAYO,OAAQ,EAC1CgC,EAAc,gBAEhBrY,GAAU,GAGmC,KAA5Cgb,EAAsBhF,YAAYE,QACnC8E,EAAsBhF,YAAYG,SAAU,EACzC8E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBhF,YAAYK,OAAQ,EAC1CgC,EAAc,gBAEhBrY,GAAU,GAGkB,KAA3BqX,EAAgB1S,SACjBqW,EAAsBrW,OAAOuR,MAAQ,8CACrC8E,EAAsBrW,OAAOwR,SAAU,EACvC6E,EAAsBrW,OAAOyR,aAAc,EACxC6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBrW,OAAO0R,OAAQ,EACrCgC,EAAc,WAEhBrY,GAAU,GAGkB,KAA3BqX,EAAgB/B,SACjB0F,EAAsB1F,OAAOY,MAAQ,gDACrC8E,EAAsB1F,OAAOa,SAAU,EACvC6E,EAAsB1F,OAAOc,aAAc,EACxC6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsB1F,OAAOe,OAAQ,EACrCgC,EAAc,WAEhBrY,GAAU,GAG6B,KAAtCqX,EAAgB9B,oBACjByF,EAAsBzF,kBAAkBW,MAAQ,6DAChD8E,EAAsBzF,kBAAkBY,SAAU,EAClD6E,EAAsBzF,kBAAkBa,aAAc,EACnD6E,OAAOC,OAAOF,GAAuBG,OAAMC,IAAuB,IAAfA,EAAK/E,UACzD2E,EAAsBzF,kBAAkBc,OAAQ,EAChDgC,EAAc,sBAEhBrY,GAAU,IAQ8C,IAAvDsb,KAAEC,QAAQlE,EAAiBF,KAC5BlX,IAAMC,QAAQ,iEAAgC,CAACC,QAAS,aACxDH,GAAU,GAGZwX,EAAwBwD,GACjBhb,CAAO,EAIb+a,GAAgB,CACjBzC,GAAuB,GACvB,MAAM3X,OJ/4BkBf,WAC1B,MAAMzB,EAAQC,aAAaC,QAAQ,OACnC,aAAamC,IAAMC,IAAI,GAADjC,OAAIP,GAAU,6BAA6B6T,EAAsB,CACnFxT,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAGhCuC,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EIk4BuB6a,CAAsBnE,GACtB,MAApB1W,EAASI,QACVd,IAAMgB,QAAQN,EAASK,KAAM,CAACb,QAAS,aACvCzB,EAAM+c,4BAA2B,GACjC/c,EAAMgd,iBAAgB,GACtBjB,MAGAxa,IAAMY,MAAMF,EAASK,KAAM,CAACb,QAAS,WACrCzB,EAAM+c,4BAA2B,GACjChB,KAEFnC,GAAuB,EACzB,GAuBF,OApBApQ,qBAAU,KACmB,IAAxB2P,EAAa8D,QA5RY/b,WAC5B,MAAMgc,QAA6BhH,KACnCkD,EAAgB8D,EAAqB,EA2RnCC,EACF,GACC,IAEH3T,qBAAU,KACLxJ,EAAMod,uBACPpd,EAAMqd,oCAAmC,GA9RNnc,WACrC0Y,GAAuB,GAEvB,MAAM0D,EAA2B,IAAI3E,GACrC2E,EAAyB3G,cAAgB3W,EAAMod,qBAAqBzG,cACpE2G,EAAyBrX,OAASjG,EAAMod,qBAAqBnX,OAC7DqX,EAAyB1G,OAAS5W,EAAMod,qBAAqBxG,OAC7D0G,EAAyBzG,kBAAoB7W,EAAMod,qBAAqBvG,kBACxEyG,EAAyBzc,OAASb,EAAMod,qBAAqBvc,OAC7Dyc,EAAyBxG,YAAc9W,EAAMod,qBAAqBtG,YAClEwG,EAAyB1Q,GAAK5M,EAAMod,qBAAqBxQ,GACzD0Q,EAAyBvG,QAAQC,WAAahX,EAAMod,qBAAqBrG,QAAQC,WACjFsG,EAAyBvG,QAAQE,QAAUjX,EAAMod,qBAAqBrG,QAAQE,QAC9EqG,EAAyBvG,QAAQjD,SAAW9T,EAAMod,qBAAqBrG,QAAQjD,SAC/EwJ,EAAyBvG,QAAQrD,WAAa1T,EAAMod,qBAAqBrG,QAAQrD,WACjF4J,EAAyBvG,QAAQP,SAAWxW,EAAMod,qBAAqBrG,QAAQP,SAC/E8G,EAAyBvG,QAAQG,OAASlX,EAAMod,qBAAqBrG,QAAQG,OAC7EoG,EAAyBvG,QAAQI,eAAiBnX,EAAMod,qBAAqBrG,QAAQI,eACrFmG,EAAyBvG,QAAQK,YAAcpX,EAAMod,qBAAqBrG,QAAQK,YAClFkG,EAAyBvG,QAAQM,eAAiBrX,EAAMod,qBAAqBrG,QAAQM,eACrFiG,EAAyBvG,QAAQO,YAActX,EAAMod,qBAAqBrG,QAAQO,YAClFgG,EAAyBvG,QAAQ/C,UAAYhU,EAAMod,qBAAqBrG,QAAQ/C,UAEhF4E,EAAmBgE,KAAEW,UAAUD,IAC/B5E,EAA0BkE,KAAEW,UAAUD,IAEtC,MAAMrb,QAAiBsU,GAAuBvW,EAAMod,qBAAqBrG,QAAQP,UAC3EgH,QAA6BrH,GAAgBlU,EAASwb,cAC5DnE,GAAgB0C,IACdA,EAAiBzC,KAAOiE,EACjB,IAAIxB,MAEb,MAAM0B,QAAyBrH,GAAYpU,EAAS0b,cACpDlE,GAAYwC,IACVA,EAAa1C,KAAOmE,EACb,IAAIzB,MAEb,MAAML,QAAoDnI,GAAuCzT,EAAMod,qBAAqBrG,QAAQrD,YACpIwF,EAAwB0C,EAA4CE,OAEpE,MAAM8B,EAAiB5F,EAAW6F,MAAK3G,GAAUA,EAAOiB,cAAgBnY,EAAMod,qBAAqBrG,QAAQG,SACrG4G,EAAqBlC,EAA4CE,MAAM9L,WAAU4H,GAAoBA,EAAiBhL,KAAO5M,EAAMod,qBAAqBzG,gBACxJoH,EAAoB5E,EAAanJ,WAAU6H,GAAYA,EAAShC,OAAS5T,EAASwb,eAClFO,EAAoBR,EAAqBxN,WAAU8H,GAAYA,EAASjC,OAAS5T,EAAS0b,eAC1FM,EAAgBP,EAAiB1N,WAAU+H,GAAQA,EAAKlC,OAAS5T,EAASic,WAEhFlF,GAAyB8B,IACvBA,EAAyB5D,OAAOlS,MAAQ4Y,EACxC9C,EAAyBlD,iBAAiB5S,MAAQ4W,EAA4CE,MAAMgC,GACpGhD,EAAyBjD,SAAS7S,MAAQmU,EAAa4E,GACvDjD,EAAyBhD,SAAS9S,MAAQwY,EAAqBQ,GAC/DlD,EAAyB/C,KAAK/S,MAAQ0Y,EAAiBO,GAChDnD,KAGTpa,GAAW,GACXkZ,GAAuB,EAAM,EAuO3BuE,GACF,GACC,CAACne,EAAMod,uBAEV5T,qBAAU,KACLxJ,EAAMoe,wBAA0Bpe,EAAMqe,kCAA+C,IAAZ5d,IAC1E2b,IACApc,EAAMqd,oCAAmC,GAC3C,GACC,CAACrd,EAAMqe,gCAAiC5d,IAGzCkC,eAAAF,WAAA,CAAAC,SAAA,CACEC,eAACC,IAAM,CAACE,WAAW,EAAMD,SAAS,KAAKE,KAAM/C,EAAMoe,uBAAwBnb,QAASA,CAACrC,EAAOC,IAAWkb,EAA8Bnb,EAAOC,GAAQ6B,SAAA,CAClJF,cAACW,IAAW,CAACC,GAAI,CAAEE,EAAG,EAAGC,WAAY,SAAUC,SAAU,OAAQ4I,UAAW,SAAUlG,MAAO,QAASxD,SAAC,mCACvGF,cAACiB,IAAU,CAACC,QAASA,IAAMqY,IAAiC3Y,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACvGF,cAACsB,IAAS,CAACN,SAAS,aAEtBhB,cAACuB,IAAa,CAACC,UAAQ,EAACZ,GAAI,CAACkb,GAAI,IAAKC,GAAI,KAAK7b,SAC7CC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,gBAAiBma,SAAU,OAAQC,GAAI,IAAKC,GAAI,IAAK7Z,GAAI,IAAKnC,SAAA,CAEzGF,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqB7B,WAAWQ,QAAazU,KAAM8V,EAAqB7B,WAAWU,YAAawC,UAAU,OAAMxX,SAC7JF,cAAC+B,IAAS,CAACpC,OAA0D,IAA5C0W,EAAqB7B,WAAWS,QACvDhT,MAAM,4BAAeC,QAAQ,WAC7BtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACia,UAAW,UACvDC,WAAY,CAAEC,UAAW,IACzBC,SAAWC,GAAUA,GAAwB,eAAfvF,GAA+BuF,EAAMtH,QACnEtL,aAAcsM,EAAgB5B,QAAQC,WACtClS,SAAWC,GA/5BGC,KAC1B,GAAa,KAAVA,EAAa,CACI,eAAf0U,GACDC,EAAc,MAGhB,MAAMuF,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAC7B,MAAMsb,EAAwB,IAAIzD,GAC/BqG,EAAWjC,OAAS,IACrBX,EAAsBtF,WAAWQ,MAAQ,8DACzC8E,EAAsBtF,WAAWU,aAAc,EAC/C4E,EAAsBtF,WAAWS,SAAU,EAC3C6E,EAAsBtF,WAAWW,OAAQ,EACzCmB,EAAwBwD,KAGxB1D,GAAmBwG,IACjBA,EAAyBrI,QAAQC,WAAakI,EACvC,IAAKE,MAGd9C,EAAsBtF,WAAWQ,MAAQ,GACzC8E,EAAsBtF,WAAWU,aAAc,EAC/C4E,EAAsBtF,WAAWS,SAAU,EAC3C6E,EAAsBtF,WAAWW,OAAQ,EACzCmB,EAAwBwD,GAC1B,GACC,IACL,KACI,CACgB,eAAf5C,GACDC,EAAc,MAGhB,MAAM2C,EAAwB,IAAIzD,GAClCyD,EAAsBtF,WAAWQ,MAAQ,GACzC8E,EAAsBtF,WAAWU,aAAc,EAC/C4E,EAAsBtF,WAAWS,SAAU,EAC3C6E,EAAsBtF,WAAWW,OAAQ,EACzCmB,EAAwBwD,EAC1B,GAk3B6B+C,CAAmBta,EAAEI,OAAOH,aAKnDxC,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqB/E,SAAS0D,QAAazU,KAAM8V,EAAqB/E,SAAS4D,YAAawC,UAAU,MACnJK,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN/N,QAAS,CAAEgO,OAAQ,EAAE,IAAK,QAIhCjY,SAEFF,cAAC+B,IAAS,CAACpC,OAAwD,IAA1C0W,EAAqB/E,SAAS2D,QACrDhT,MAAM,iBAASC,QAAQ,WACvBtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACia,UAAW,UACvDG,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjEtL,aAAcsM,EAAgB5B,QAAQjD,SACtChP,SAAWC,GAt4BCC,KACxB,MAAMka,EAAala,EAEhBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAU7B,GATA4X,GAAmB0G,IACnBA,EAAoBvI,QAAQjD,SAAWoL,EAC9B,IAAII,MAGK,aAAf5F,GACDC,EAAc,MAGbd,EAAqB/E,SAAS2D,QAAQ,CACvC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBxI,SAAS0D,MAAQ,GACvC8E,EAAsBxI,SAAS4D,aAAc,EAC7C4E,EAAsBxI,SAAS2D,SAAU,EACzC6E,EAAsBxI,SAAS6D,OAAQ,EACvCmB,EAAwBwD,EAC1B,IACC,IAAI,EA62BsBiD,CAAiBxa,EAAEI,OAAOH,aAKjDxC,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqB3B,OAAOM,QAAazU,KAAM8V,EAAqB3B,OAAOQ,YAAawC,UAAU,MAAKxX,SACpJF,cAACkK,IAAY,CACXtJ,GAAI,CAACwB,MAAO,MAAOia,UAAW,SAC9BlS,QAASqL,EACTlL,eAAiBC,GAAWA,EAAOmL,WACnClT,MAAO+T,EAAqB7B,OAAOlS,MACnCgI,aAAcA,CAAChN,EAAO+M,IACpBvK,cAAA,SAAQxC,EAAK0C,SACVqK,EAAOmL,aAGZpT,SAAUA,CAACC,EAAGC,IApzBLwa,EAACza,EAAGC,KAezB,GAdkB,WAAf0U,GACDC,EAAc,MAGhBf,GAAmB0G,IACjBA,EAAoBvI,QAAQG,OAASlS,EAAMmT,YACpC,IAAImH,MAGbtG,GAAyB8B,IACvBA,EAAyB5D,OAAOlS,MAAQA,EAClC,IAAI8V,MAGTjC,EAAqB3B,OAAOO,QAAQ,CACrC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBpF,OAAOO,SAAU,EACvC6E,EAAsBpF,OAAOM,MAAQ,GACrC8E,EAAsBpF,OAAOQ,aAAc,EAC3C4E,EAAsBpF,OAAOS,OAAQ,EACrCmB,EAAwBwD,EAC1B,GA8xBoCkD,CAAeza,EAAGC,GAC1CjC,KAAMgW,EAAqB7B,OAAOmB,WAClCoH,QAASA,IAAM7E,EAAY,UAC3B8E,OAAS3a,GAAMgW,EAAWhW,EAAEI,OAAOH,MAAO,UAC1CkI,YAAcC,GACZ3K,cAAC+B,IAAS,IAAK4I,EACb1I,MAAM,oBACNua,SAAWC,GAAUA,GAAwB,WAAfvF,GAA2BuF,EAAMtH,QAC/DxV,OAAsD,IAAxC0W,EAAqB3B,OAAOO,UAG9CkI,kBAAgB,EAChBC,UAAW,WAKjBpd,cAACqd,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAItd,SAClEF,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACyd,KAAa,CAAClG,WAAY,CAAC,cAAcrX,SACxCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqBnF,WAAW8D,QAAazU,KAAM8V,EAAqBnF,WAAWgE,YAAYhV,SAC5IF,cAACoE,IAAG,CAACxD,GAAI,CAACwB,MAAO,KAAKlC,SACpBF,cAAC0d,KAAU,CAACzb,MAAM,eAChB0b,OAAO,aAAa9T,aAAc+T,KAAOzH,EAAgB5B,QAAQrD,YACjE2M,eAAe,EAAMC,mBAAiB,EACtC/F,UAAW,CACTgG,UACE,CACEvB,SAAUxG,EACVrW,OAA0D,IAA5C0W,EAAqBnF,WAAW+D,QAC9CiI,OAAS3a,GAAMgW,EAAWhW,EAAEI,OAAOH,MAAO,gBAGhDF,SAAWE,GA55BX9D,WAClB,GAAG8D,EAAM,CACP,MAAMka,EAAala,EAAMwb,GACtBlI,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAC7B,MAAMyf,EAAQ,IAAIvX,KACZwX,EAAkBD,EAAME,cAAgBzB,EAAWyB,cACnDC,EAAmBH,EAAMI,WAAa3B,EAAW2B,WACjDC,EAAiBL,EAAMM,UAAY7B,EAAW6B,UAC9CC,EAAMP,EAAME,cAAgBzB,EAAWyB,cAE7C,IAAIM,EAAgC,GAAlBP,EAAuBE,EACrCM,EAAYJ,EAEZA,EAAiB,IACnBG,GAAe,EACfC,GAAa,IAGf,MAAM5E,EAAwB,IAAIzD,GAElC,GAAG4H,EAAQvB,GAAciC,MAAMH,IAAQC,EAAc,IAAuB,KAAhBA,GAAsBC,EAAY,GAC5F5E,EAAsB5I,WAAW8D,MAAQ,sFACzC8E,EAAsB5I,WAAWgE,aAAc,EAC/C4E,EAAsB5I,WAAW+D,SAAU,EAC3C6E,EAAsB5I,WAAWiE,OAAQ,EACzCmB,EAAwBwD,OAGtB,CACF,MAAMT,EAAgBuE,KAAOlB,GAAYiB,OAAO,cAChDvH,GAAmB0G,IACjBA,EAAoBvI,QAAQrD,WAAamI,EAClC,IAAIyD,MAGbhD,EAAsB5I,WAAW8D,MAAQ,GACzC8E,EAAsB5I,WAAWgE,aAAc,EAC/C4E,EAAsB5I,WAAW+D,SAAU,EAC3C6E,EAAsB5I,WAAWiE,OAAQ,EACzCmB,EAAwBwD,GAExBX,EAAiCE,EACnC,IACC,IACL,GA42BuCuF,CAAYpc,eAQ7CxC,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqBjB,iBAAiBJ,QAAazU,KAAM8V,EAAqBjB,iBAAiBF,YAAawC,UAAU,QAAOxX,SAC1KF,cAACkK,IAAY,CACXtJ,GAAI,CAACwB,MAAO,MAAOkC,GAAI,SACvB6F,QAASsM,EACToI,cAAetI,EAAqBnB,iBAAiBnX,QAAU,wBAAgB,GAC/EqM,eAAiBC,GAAWA,EAAO2N,KACnC1V,MAAO+T,EAAqBnB,iBAAiB5S,MAC7CgI,aAAcA,CAAChN,EAAO+M,IACpBvK,cAAA,SAAQxC,EAAK0C,SACVqK,EAAO2N,OAGZ5V,SAAUA,CAACC,EAAGC,IAj1BKsc,EAACvc,EAAGC,KAenC,GAdkB,qBAAf0U,GACDC,EAAc,MAGhBf,GAAmB0G,IACjBA,EAAoB3I,cAAgB3R,EAAM4H,GACnC,IAAI0S,MAGbtG,GAAyB8B,IACvBA,EAAyBlD,iBAAiB5S,MAAQA,EAC5C,IAAI8V,MAGTjC,EAAqBjB,iBAAiBH,QAAQ,CAC/C,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsB1E,iBAAiBH,SAAU,EACjD6E,EAAsB1E,iBAAiBJ,MAAQ,GAC/C8E,EAAsB1E,iBAAiBF,aAAc,EACrD4E,EAAsB1E,iBAAiBD,OAAQ,EAC/CmB,EAAwBwD,EAC1B,GA2zBoCgF,CAAyBvc,EAAGC,GACpDjC,KAAMgW,EAAqBnB,iBAAiBS,WAC5CoH,QAASA,IAAM7E,EAAY,oBAC3B8E,OAAS3a,GAAMgW,EAAWhW,EAAEI,OAAOH,MAAO,oBAC1CkI,YAAcC,GACZ3K,cAAC+B,IAAS,IAAK4I,EACb1I,MAAM,kBACNua,SAAWC,GAAUA,GAAwB,qBAAfvF,GAAqCuF,EAAMtH,QACzExV,OAAgE,IAAlD0W,EAAqBjB,iBAAiBH,QACpDrU,GAAI,CAAC,yKAA0K,CAACqb,GAAI,MAAOC,GAAI,QAC/LtZ,WAAY,IACP+H,EAAO/H,WACVC,aACE1C,eAAAF,WAAA,CAAAC,SAAA,CACGqW,EAAqBnB,iBAAiBnX,QAAU+B,cAAC8B,IAAgB,CAAC4B,MAAM,UAAUqb,KAAM,KAAS,KACjGpU,EAAO/H,WAAWC,mBAM7Bsa,kBAAgB,EAChBC,UAAW,WAKjBpd,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqBhB,SAASL,QAAazU,KAAM8V,EAAqBhB,SAASH,YAAawC,UAAU,OAAMxX,SACzJF,cAACkK,IAAY,CACXtJ,GAAI,CAACwB,MAAO,MAAOkC,GAAI,GACvB6F,QAASwM,EACT8B,cAAeA,EACfnO,eAAiBC,GAAWA,EAAO2N,KACnC1V,MAAO+T,EAAqBlB,SAAS7S,MACrCgI,aAAcA,CAAChN,EAAO+M,IACpBvK,cAAA,SAAQxC,EAAK0C,SACVqK,EAAO2N,OAGZ5V,SAAUA,CAACC,EAAGC,IAh2BJ9D,OAAO6D,EAAGC,KAwBhC,GAvBkB,aAAf0U,GACDC,EAAc,MAGhBX,GAAyB8B,IACvBA,EAAyBjD,SAAS7S,MAAQA,EACpC,IAAI8V,MAG+B,OAAxC/B,EAAqBjB,SAAS9S,OAC/BgU,GAAwB8B,IACtBA,EAAyBhD,SAAS9S,MAAQ,KACnC,IAAI8V,MAIwB,OAApC/B,EAAqBhB,KAAK/S,OAC3BgU,GAAwB8B,IACtBA,EAAyB/C,KAAK/S,MAAQ,KAC/B,IAAI8V,MAIZjC,EAAqBhB,SAASJ,QAAQ,CACvC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBzE,SAASJ,SAAU,EACzC6E,EAAsBzE,SAASL,MAAQ,GACvC8E,EAAsBzE,SAASH,aAAc,EAC7C4E,EAAsBzE,SAASF,OAAQ,EACvCmB,EAAwBwD,EAC1B,CAEA7C,GAAYwC,IACVA,EAAa1C,KAAO,GACb,IAAI0C,MAGb3C,GAAgB0C,IACdA,EAAiBvb,SAAU,EACpB,IAAIub,MAGb,MAAMwB,QAA6BrH,GAAgBnR,EAAM6Q,MACzDyD,GAAgB0C,IACdA,EAAiBvb,SAAU,EAC3Bub,EAAiBzC,KAAOiE,EACjB,IAAIxB,KACX,EAgzBkCwF,CAAgBzc,EAAGC,GAC3CjC,KAAMgW,EAAqBlB,SAASQ,WACpCoH,QAASA,IAAM7E,EAAY,YAC3B8E,OAAS3a,GAAMgW,EAAWhW,EAAEI,OAAOH,MAAO,YAC1CkI,YAAcC,GACZ3K,cAAC+B,IAAS,IAAK4I,EACb1I,MAAM,oBACNua,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjExV,OAAwD,IAA1C0W,EAAqBhB,SAASJ,UAGhDkI,kBAAgB,EAChBC,UAAW,WAKfpd,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqBf,SAASN,QAAazU,KAAM8V,EAAqBf,SAASJ,YAAawC,UAAU,MAAKxX,SACxJF,cAACkK,IAAY,CACXtJ,GAAI,CAACwB,MAAO,MAAOkC,GAAI,GACvB6F,QAAS0M,EAAaE,KACtB8H,cAAehI,EAAa5Y,QAAU,wBAAgB,GACtDwa,cAAeA,EACfnO,eAAiBC,GAAWA,EAAO2N,KACnC1V,MAAO+T,EAAqBjB,SAAS9S,MACrCgI,aAAcA,CAAChN,EAAO+M,IACpBvK,cAAA,SAAQxC,EAAK0C,SACVqK,EAAO+G,WAGZhP,SAAUA,CAACC,EAAGC,IA50BL9D,OAAO6D,EAAGC,KAiBjC,GAhBkB,aAAf0U,GACDC,EAAc,MAGhBX,GAAyB8B,IACvBA,EAAyBhD,SAAS9S,MAAQA,EACpC,IAAK8V,MAG0B,OAApC/B,EAAqBhB,KAAK/S,OAC3BgU,GAAwB8B,IACtBA,EAAyB/C,KAAK/S,MAAQ,KAC/B,IAAI8V,MAIZjC,EAAqBf,SAASL,QAAQ,CACvC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBxE,SAASL,SAAU,EACzC6E,EAAsBxE,SAASN,MAAQ,GACvC8E,EAAsBxE,SAASJ,aAAc,EAC7C4E,EAAsBxE,SAASH,OAAQ,EACvCmB,EAAwBwD,EAC1B,CAEA7C,GAAYwC,IACVA,EAAaxb,SAAU,EAChB,IAAIwb,MAGb,MAAMyB,QAAyBrH,GAAYrR,EAAM6Q,MACjD4D,GAAYwC,IACVA,EAAaxb,SAAU,EACvBwb,EAAa1C,KAAOmE,EACb,IAAIzB,KACX,EAwyBoCwF,CAAiB1c,EAAGC,GAC5CjC,KAAMgW,EAAqBjB,SAASO,WACpCoH,QAASA,IAAM7E,EAAY,YAC3B8E,OAAS3a,GAAMgW,EAAWhW,EAAEI,OAAOH,MAAO,YAC1CkI,YAAcC,GACZ3K,cAAC+B,IAAS,IAAK4I,EACb1I,MAAM,uBACNua,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjExV,OAAwD,IAA1C0W,EAAqBf,SAASL,QAC5CrS,WAAY,IACP+H,EAAO/H,WACVC,aACE1C,eAAAF,WAAA,CAAAC,SAAA,CACG2W,EAAa5Y,QAAU+B,cAAC8B,IAAgB,CAAC4B,MAAM,UAAUqb,KAAM,KAAS,KACxEpU,EAAO/H,WAAWC,mBAM7Bsa,kBAAgB,EAChBC,UAAW,WAKjBpd,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqBd,KAAKP,QAAazU,KAAM8V,EAAqBd,KAAKL,YAAYhV,SAChIF,cAACkK,IAAY,CACXtJ,GAAI,CAACwB,MAAO,MAAOkC,GAAI,GACvB6F,QAAS6M,EAASD,KAClB8H,cAAe7H,EAAS/Y,QAAU,wBAAgB,GAClDwa,cAAeA,EACfnO,eAAiBC,GAAWA,EAAO2N,KACnC1V,MAAO+T,EAAqBhB,KAAK/S,MACjCgI,aAAcA,CAAChN,EAAO+M,IACpBvK,cAAA,SAAQxC,EAAK0C,SACVqK,EAAO+G,WAGZhP,SAAUA,CAACC,EAAGC,IA70BT0c,EAAC3c,EAAGC,KAevB,GAdkB,SAAf0U,GACDC,EAAc,MAGhBf,GAAmB0G,IACjBA,EAAoBvI,QAAQP,SAAWxR,EAAM6Q,KACtC,IAAKyJ,MAGdtG,GAAyB8B,IACvBA,EAAyB/C,KAAK/S,MAAQA,EAC9B,IAAK8V,MAGZjC,EAAqBd,KAAKN,QAAQ,CACnC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBvE,KAAKN,SAAU,EACrC6E,EAAsBvE,KAAKP,MAAQ,GACnC8E,EAAsBvE,KAAKL,aAAc,EACzC4E,EAAsBvE,KAAKJ,OAAQ,EACnCmB,EAAwBwD,EAC1B,GAuzBsCoF,CAAa3c,EAAGC,GACxCjC,KAAMgW,EAAqBhB,KAAKM,WAChCoH,QAASA,IAAM7E,EAAY,QAC3B8E,OAAS3a,GAAMgW,EAAWhW,EAAEI,OAAOH,MAAO,QAC1CkI,YAAcC,GACZ3K,cAAC+B,IAAS,IAAK4I,EACb1I,MAAM,yBACNua,SAAWC,GAAUA,GAAwB,SAAfvF,GAAyBuF,EAAMtH,QAC7DxV,OAAoD,IAAtC0W,EAAqBd,KAAKN,QACxCrS,WAAY,IACP+H,EAAO/H,WACVC,aACE1C,eAAAF,WAAA,CAAAC,SAAA,CACG8W,EAAS/Y,QAAU+B,cAAC8B,IAAgB,CAAC4B,MAAM,UAAUqb,KAAM,KAAS,KACpEpU,EAAO/H,WAAWC,mBAM7Bsa,kBAAgB,EAChBC,UAAW,WAKjBpd,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqB5B,QAAQO,QAAazU,KAAM8V,EAAqB5B,QAAQS,YAAawC,UAAU,QAAOxX,SACxJF,cAAC+B,IAAS,CAACpC,OAAuD,IAAzC0W,EAAqB5B,QAAQQ,QACpDhT,MAAM,yBAAUC,QAAQ,WACxBtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChDkY,SAAWC,GAAUA,GAAwB,YAAfvF,GAA4BuF,EAAMtH,QAChEtL,aAAcsM,EAAgB5B,QAAQE,QACtCnS,SAAWC,GAr1BFC,KACL,YAAf0U,GACDC,EAAc,MAGhB,MAAMuF,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAM7B,GALA4X,GAAmB0G,IACjBA,EAAoBvI,QAAQE,QAAUiI,EAC/B,IAAKI,MAGXzG,EAAqB5B,QAAQQ,QAAQ,CACtC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBrF,QAAQQ,SAAU,EACxC6E,EAAsBrF,QAAQO,MAAQ,GACtC8E,EAAsBrF,QAAQS,aAAc,EAC5C4E,EAAsBrF,QAAQU,OAAQ,EACtCmB,EAAwBwD,EAC1B,IACC,IAAI,EA6zBwBqF,CAAgB5c,EAAEI,OAAOH,aAKhDxC,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqB1B,eAAeK,QAAazU,KAAM8V,EAAqB1B,eAAeO,YAAawC,UAAU,OAAMxX,SACrKF,cAAC+B,IAAS,CAACpC,OAA8D,IAAhD0W,EAAqB1B,eAAeM,QAC3DhT,MAAM,yBAAYC,QAAQ,WAC1BtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChDkY,SAAWC,GAAUA,GAAwB,mBAAfvF,GAAmCuF,EAAMtH,QACvEtL,aAAcsM,EAAgB5B,QAAQI,eACtCrS,SAAWC,GAt0BKC,KACZ,mBAAf0U,GACDC,EAAc,MAGhB,MAAMuF,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAM7B,GALA4X,GAAmB0G,IACjBA,EAAoBvI,QAAQI,eAAiB+H,EACtC,IAAKI,MAGXzG,EAAqB1B,eAAeM,QAAQ,CAC7C,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBnF,eAAeM,SAAU,EAC/C6E,EAAsBnF,eAAeK,MAAQ,GAC7C8E,EAAsBnF,eAAeO,aAAc,EACnD4E,EAAsBnF,eAAeQ,OAAQ,EAC7CmB,EAAwBwD,EAC1B,IACC,IAAI,EA8yBwBsF,CAAuB7c,EAAEI,OAAOH,aAKvDxC,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqBzB,YAAYI,QAAazU,KAAM8V,EAAqBzB,YAAYM,YAAYhV,SAC9IF,cAAC+B,IAAS,CAACpC,OAA2D,IAA7C0W,EAAqBzB,YAAYK,QACxDhT,MAAM,oCAAgBC,QAAQ,WAC9BtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChDgY,WAAY,CAAEC,UAAW,IACzBC,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpEtL,aAAcsM,EAAgB5B,QAAQK,YACtCtS,SAAWC,GAxzBEC,KAK3B,GAJkB,gBAAf0U,GACDC,EAAc,MAGH,KAAV3U,EAAa,CACd,MAAMka,EAAala,EAEhBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAC7B,MAAMsb,EAAwB,IAAIzD,GAC/BqG,EAAWjC,OAAS,IACrBX,EAAsBlF,YAAYI,MAAQ,sEAC1C8E,EAAsBlF,YAAYM,aAAc,EAChD4E,EAAsBlF,YAAYK,SAAU,EAC5C6E,EAAsBlF,YAAYO,OAAQ,EAC1CmB,EAAwBwD,KAIxB1D,GAAmB0G,IACjBA,EAAoBvI,QAAQK,YAAc8H,EACnC,IAAII,MAGbhD,EAAsBlF,YAAYI,MAAQ,GAC1C8E,EAAsBlF,YAAYM,aAAc,EAChD4E,EAAsBlF,YAAYK,SAAU,EAC5C6E,EAAsBlF,YAAYO,OAAQ,EAE1C2E,EAAsBhF,YAAYE,MAAQ,GAC1C8E,EAAsBhF,YAAYI,aAAc,EAChD4E,EAAsBhF,YAAYG,SAAU,EAC5C6E,EAAsBhF,YAAYK,OAAQ,EAC1CmB,EAAwBwD,GAC1B,GACC,GACL,KAEI,CACF,MAAMA,EAAwB,IAAIzD,GAClCyD,EAAsBlF,YAAYI,MAAQ,GAC1C8E,EAAsBlF,YAAYM,aAAc,EAChD4E,EAAsBlF,YAAYK,SAAU,EAC5C6E,EAAsBlF,YAAYO,OAAQ,EAC1CmB,EAAwBwD,EAC1B,GAuwB+BuF,CAAoB9c,EAAEI,OAAOH,OAC9C2Q,UAAWR,QAKjB3S,cAAC+B,IAAS,CACRE,MAAM,qBAAaC,QAAQ,WAAWtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IACtFuF,aAAcsM,EAAgB5B,QAAQM,eACtCvS,SAAWC,GA7wBSC,KAC9B,MAAMka,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAM7B,GALA4X,GAAmB0G,IACjBA,EAAoBvI,QAAQM,eAAiB6H,EACtC,IAAII,MAGVzG,EAAqB1B,eAAeM,QAAQ,CAC7C,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBnF,eAAeM,SAAU,EAC/C6E,EAAsBnF,eAAeK,MAAQ,GAC7C8E,EAAsBnF,eAAeO,aAAc,EACnD4E,EAAsBnF,eAAeQ,OAAQ,EAC7CmB,EAAwBwD,EAC1B,IACC,IAAI,EAyvBoBwF,CAAuB/c,EAAEI,OAAOH,SAGnDxC,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqBvB,YAAYE,QAAazU,KAAM8V,EAAqBvB,YAAYI,YAAawC,UAAU,QAAOxX,SAChKF,cAAC+B,IAAS,CAACpC,OAA2D,IAA7C0W,EAAqBvB,YAAYG,QACxDhT,MAAM,oCAAgBC,QAAQ,WAC9BtB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChDgY,WAAY,CAAEC,UAAW,IACzBC,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpEtL,aAAcsM,EAAgB5B,QAAQO,YACtCxS,SAAWC,GAjwBEC,KAK3B,GAJkB,gBAAf0U,GACDC,EAAc,MAGH,KAAV3U,EAAa,CACd,MAAMka,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAC7B,MAAMsb,EAAwB,IAAIzD,GAC/BqG,EAAWjC,OAAS,IACrBX,EAAsBhF,YAAYE,MAAQ,sEAC1C8E,EAAsBhF,YAAYI,aAAc,EAChD4E,EAAsBhF,YAAYG,SAAU,EAC5C6E,EAAsBhF,YAAYK,OAAQ,EAC1CmB,EAAwBwD,KAIxB1D,GAAmB0G,IACjBA,EAAoBvI,QAAQO,YAAc4H,EACnC,IAAII,MAGbhD,EAAsBhF,YAAYE,MAAQ,GAC1C8E,EAAsBhF,YAAYI,aAAc,EAChD4E,EAAsBhF,YAAYG,SAAU,EAC5C6E,EAAsBhF,YAAYK,OAAQ,EAE1C2E,EAAsBlF,YAAYI,MAAQ,GAC1C8E,EAAsBlF,YAAYM,aAAc,EAChD4E,EAAsBlF,YAAYK,SAAU,EAC5C6E,EAAsBlF,YAAYO,OAAQ,EAC1CmB,EAAwBwD,GAC1B,GACC,IACL,KAEI,CACF,MAAMA,EAAwB,IAAIzD,GAClCyD,EAAsBhF,YAAYE,MAAQ,GAC1C8E,EAAsBhF,YAAYI,aAAc,EAChD4E,EAAsBhF,YAAYG,SAAU,EAC5C6E,EAAsBhF,YAAYK,OAAQ,EAC1CmB,EAAwBwD,EAC1B,GAitB+ByF,CAAoBhd,EAAEI,OAAOH,OAC9C2Q,UAAWR,QAKjB3S,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqB5S,OAAOuR,QAAazU,KAAM8V,EAAqB5S,OAAOyR,YAAawC,UAAU,OAAMxX,SACrJF,cAAC+B,IAAS,CAACpC,OAAsD,IAAxC0W,EAAqB5S,OAAOwR,QACnDhT,MAAM,iBACNrB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChDkY,SAAWC,GAAUA,GAAwB,WAAfvF,GAA2BuF,EAAMtH,QAC/DvS,WAAY,CAACC,aAAc7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAAE,UAC3D2J,aAAcsM,EAAgB1S,OAC9BnB,SAAWC,GA5tBHC,KACJ,WAAf0U,GACDC,EAAc,MAGhB,MAAMuF,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAM7B,GALA4X,GAAmB0G,IACjBA,EAAoBrZ,OAASiZ,EACtB,IAAII,MAGVzG,EAAqB5S,OAAOwR,QAAQ,CACrC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBrW,OAAOuR,MAAQ,GACrC8E,EAAsBrW,OAAOyR,aAAc,EAC3C4E,EAAsBrW,OAAOwR,SAAU,EACvC6E,EAAsBrW,OAAO0R,OAAQ,EACrCmB,EAAwBwD,EAC1B,IACC,IAAI,EAosBwB0F,CAAejd,EAAEI,OAAOH,aAK/CxC,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqBjC,OAAOY,QAAazU,KAAM8V,EAAqBjC,OAAOc,YAAYhV,SACpIF,cAAC+B,IAAS,CAACpC,OAAsD,IAAxC0W,EAAqBjC,OAAOa,QACnDhT,MAAM,mBACNrB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChDkY,SAAWC,GAAUA,GAAwB,WAAfvF,GAA2BuF,EAAMtH,QAC/DvS,WAAY,CAACC,aAAc7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAAE,UAC3D2J,aAAcsM,EAAgB/B,OAC9B9R,SAAWC,GA9sBHC,KACJ,WAAf0U,GACDC,EAAc,MAGhB,MAAMuF,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAM7B,GALA4X,GAAmB0G,IACjBA,EAAoB1I,OAASsI,EACtB,IAAII,MAGVzG,EAAqBjC,OAAOa,QAAQ,CACrC,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsB1F,OAAOY,MAAQ,GACrC8E,EAAsB1F,OAAOc,aAAc,EAC3C4E,EAAsB1F,OAAOa,SAAU,EACvC6E,EAAsB1F,OAAOe,OAAQ,EACrCmB,EAAwBwD,EAC1B,IACC,IAAI,EAsrBwB2F,CAAeld,EAAEI,OAAOH,aAK/CxC,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEmW,EAAqBhC,kBAAkBW,QAAazU,KAAM8V,EAAqBhC,kBAAkBa,YAAawC,UAAU,QAAOxX,SAC5KF,cAAC+B,IAAS,CAACpC,OAAiE,IAAnD0W,EAAqBhC,kBAAkBY,QAC9DhT,MAAM,wBACNrB,GAAI,CAACwB,MAAO,MAAO,sBAAwB,CAACkC,GAAI,IAChDkY,SAAWC,GAAUA,GAAwB,sBAAfvF,GAAsCuF,EAAMtH,QAC1EvS,WAAY,CAACC,aAAc7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAAE,UAC3D2J,aAAcsM,EAAgB9B,kBAC9B/R,SAAWC,GAhsBQC,KACf,sBAAf0U,GACDC,EAAc,MAGhB,MAAMuF,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAM7B,GALA4X,GAAmB0G,IACjBA,EAAoBzI,kBAAoBqI,EACjC,IAAII,MAGVzG,EAAqBhC,kBAAkBY,QAAQ,CAChD,MAAM6E,EAAwB,IAAIzD,GAClCyD,EAAsBzF,kBAAkBW,MAAQ,GAChD8E,EAAsBzF,kBAAkBa,aAAc,EACtD4E,EAAsBzF,kBAAkBY,SAAU,EAClD6E,EAAsBzF,kBAAkBc,OAAQ,EAChDmB,EAAwBwD,EAC1B,IACC,IAAI,EAwqBwB4F,CAA0Bnd,EAAEI,OAAOH,aAK1DxC,cAAC2f,KAAgB,CAAC/e,GAAI,CAACwB,MAAO,MAAOkC,GAAI,GAAIsb,QAAS5f,cAAC6f,KAAQ,CAACC,QAAS3J,EAAgB7B,cACvFrS,MAAM,mCACNK,SAAWC,IAAMwd,OA5qBAC,EA4qBoBzd,EAAEI,OAAOmd,aA3qBxD1J,GAAmB0G,IACjBA,EAAoBxI,YAAc0L,EAC3B,IAAIlD,MAHckD,KA4qBsC,SAI7D7f,eAAC8f,KAAa,CAACrf,GAAI,CAACiB,eAAgB,UAAU3B,SAAA,CAC5CF,cAACwD,IAAM,CAACtB,QAAQ,YAAYhB,QAASA,IAAM0Y,IAA8B1Z,SAAC,kBAC1EF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,YAAYxC,QAASA,CAAC9C,EAAOC,IAAWkb,EAA8Bnb,EAAOC,GAAQ6B,SAAC,6BAI5HF,cAACwT,GAAe,CAACC,oBAAqBA,EAAqB2D,uBAAwBA,MAGzF,E,2ICnoCe8I,OA5Xf,SAA8B1iB,GAE5B,MAAOS,EAASC,GAAcF,oBAAS,IAEhCmiB,EAAYC,GAAiBpiB,mBAAS,CAACqiB,UAAW,EAAGC,UAAW,yBAChEC,EAAuBC,GAA4BxiB,mBACxD,CACE,CAAEsiB,UAAW,sBAAeG,YAAa,GACzC,CAAEH,UAAW,wBAAcG,YAAa,GACxC,CAAEH,UAAW,sBAAeG,YAAa,MAItCtc,EAA6BsB,GAAkCzH,oBAAS,IAExE0iB,EAA0BC,GAA+B3iB,mBAAS,KAClE4iB,EAAmCC,GAAwC7iB,mBAAS,KAEpF8iB,EAAqBC,GAA0B/iB,mBAAS,KAExDgjB,EAA+BC,GAAoCjjB,mBAAS,KAC5EkjB,EAA8BC,GAAmCnjB,mBAAS,KAE1E4c,EAAsBlB,GAA2B1b,sBACjD4d,EAAwBjC,GAA6B3b,oBAAS,IAC9D6d,EAAiChB,GAAsC7c,sBAEvEojB,EAAc5G,GAAmBxc,oBAAS,GAuD3CqjB,EAAiBA,CAACC,EAAUC,KAChC,MAAMC,EAAsBD,EAAW3I,cACvC,OAAO0I,EAASzI,QAAO4I,IACrB,MAAM,YAAErQ,EAAW,SAAEE,EAAQ,YAAEsD,EAAW,YAAEE,GAAgB2M,EAAWlN,QACvE,OAAOnD,EAAYwH,cAAcM,SAASsI,IAAwBlQ,EAASsH,cAAcM,SAASsI,IAAwB5M,EAAYgE,cAAcM,SAASsI,IAAwB1M,EAAY8D,cAAcM,SAASsI,EAAoB,GAC5O,EA4BEE,EAA8BhjB,UAClCR,GAAW,GAEX,MAAMuB,QAAiBuR,KACjB2Q,OLiGmBjjB,WACzB,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,qCAAqC2M,GACxElK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EKzGyC+hB,GAE3C,IAMIC,EANAC,EAAc,CAChB,CAAExB,UAAW,sBAAeG,YAAa,GACzC,CAAEH,UAAW,wBAAcG,YAAa,GACxC,CAAEH,UAAW,sBAAeG,YAAakB,EAA6BlH,SAgCxE,GA5BGkH,EAA6BlH,OAAS,GACvCoH,EAAqCF,EAA6BnT,KAAK0L,IACtD,CACb3F,QAAU,CACRC,WAAY0F,EAAK1F,WACjBhD,UAAW0I,EAAK1I,UAChBJ,YAAa8I,EAAK9I,YAClBE,SAAU4I,EAAK6H,gBACfrN,OAAQwF,EAAKxF,OACbxD,WAAYgJ,EAAK8H,YACjBrN,eAAgBuF,EAAKvF,eACrBC,YAAasF,EAAKtF,YAClBC,eAAgBqF,EAAKrF,eACrBC,YAAaoF,EAAKpF,YAClBL,QAASyF,EAAKzF,QACdwN,YAAa/H,EAAK+H,YAClBjO,SAAUkG,EAAKlG,SACfkO,WAAYhI,EAAKgI,gBAKvBrB,EAAqCgB,IAGrChB,EAAqCc,GAGvB,MAAbliB,GAC2B,IAAzBA,EAASsX,KAAK0D,OAEf,GADAkG,EAA4BlhB,EAASsX,MACT,IAAzBoJ,EAAWE,UAAgB,CAC5B,MAAM8B,EAA8B1iB,EAASsX,KAAK8B,QAAOuJ,GAAuD,IAA/BA,EAAqBrQ,OAA8C,IAA/BqQ,EAAqBrQ,OAA8C,IAA/BqQ,EAAqBrQ,QAC9KoP,EAAgC/G,KAAEW,UAAUoH,IAC5ClB,EAAiC7G,KAAEW,UAAUoH,IAC7CL,EAAY,GAAGrB,YAAchhB,EAAS4iB,eAAe,GACrDP,EAAY,GAAGrB,YAAchhB,EAAS4iB,eAAe,EACvD,MACK,GAA4B,IAAzBlC,EAAWE,UAAgB,CACjC,MAAMiC,EAA2B5B,EAAyB7H,QAAOuJ,GAAuD,IAA/BA,EAAqBrQ,QAC9GoP,EAAgC/G,KAAEW,UAAUuH,IAC5CrB,EAAiC7G,KAAEW,UAAUuH,IAC7CR,EAAY,GAAGrB,YAAchhB,EAAS4iB,eAAe,GACrDP,EAAY,GAAGrB,YAAchhB,EAAS4iB,eAAe,EACvD,MACiC,IAAzBlC,EAAWE,YACjBc,EAAgC/G,KAAEW,UAAU8G,IAC5CZ,EAAiC7G,KAAEW,UAAU8G,IAC7CC,EAAY,GAAGrB,YAAchhB,EAAS4iB,eAAe,GACrDP,EAAY,GAAGrB,YAAchhB,EAAS4iB,eAAe,IAI3D7B,EAAyBsB,GAEtBV,GACD5G,GAAgB,GAGlBhd,EAAM+kB,sBAAqB,GAE3BrkB,GAAW,EAAM,EA+CnB,OAtCA8I,qBAAU,KACR0a,GAA6B,GAC5B,IAEH1a,qBAAU,KACR,GAAG4U,EAAuB,CACxB,MAAMjJ,EAAiBvU,IACA,MAAlBA,EAAMokB,UACPpkB,EAAMmR,iBACNsL,GAAmC,GAErC,EAKF,OAFAjI,SAASC,iBAAiB,UAAWF,GAE9B,KACLC,SAASE,oBAAoB,UAAWH,EAAc,CAE1D,IACC,CAACiJ,EAAwBC,IAE5B7U,qBAAU,KACLoa,GACDM,GACF,GACC,CAACN,EAAcV,EAA0BQ,IAE5Cla,qBAAU,MAC6B,IAAlCxJ,EAAMilB,0BAAqD,IAAjBrB,IAC3CT,EAA4B,IAC5BQ,EAAgC,IAChCF,EAAiC,IACjCS,IACAlkB,EAAM+c,4BAA2B,GACnC,GACC,CAAC/c,EAAMilB,wBAAyB/B,EAA0BQ,IAG3D/gB,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACoE,IAAG,CAACxD,GAAI,CAACE,EAAG,GAAGZ,SAkBdF,cAAA,OAAK+P,UAAU,YAAYnO,MAAO,CAAC8gB,OAAQ,iBAAkB3P,aAAc,OAAQtP,OAAQ,QAAST,QAAS,EAAG2f,UAAW,uGAAuGziB,SAC/NjC,EACE+B,cAAAC,WAAA,CAAAC,SACCC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,SAAU+B,OAAQ,QAAQvD,SAAA,CAClHF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,mFAIjDC,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACqD,IAAK,CAACE,UAAU,MAAMD,QAAS,EAAG1C,GAAI,CAACiB,eAAgB,SAAUyC,GAAI,KAAKpE,SACxEqgB,EAAsB/R,KAAI,CAACoU,EAAuBC,IACjD7iB,cAAC8iB,KAAK,CAACC,aAAcH,EAAsBnC,YAAa/c,MAAM,QAAOxD,SACnEF,cAACgjB,KAAI,CAAC/gB,MAAO2gB,EAAsBtC,UAAW5c,MAAOmf,IAA2B1C,EAAWE,UAAY,UAAY,UACjHnf,QAASA,IAzNF+hB,EAACC,EAAW5C,KAErC,GADAF,EAAc,CAACC,UAAW6C,EAAW5C,UAAWA,IAC/B,IAAd4C,EAAgB,CACjB,MAAMf,EAA8BzB,EAAyB7H,QAAOuJ,GAAuD,IAA/BA,EAAqBrQ,OAA8C,IAA/BqQ,EAAqBrQ,OAA8C,IAA/BqQ,EAAqBrQ,QACzLoP,EAAgCgB,GAChClB,EAAiCkB,EACnC,MACK,GAAiB,IAAde,EAAgB,CACtB,MAAMZ,EAA2B5B,EAAyB7H,QAAOuJ,GAAuD,IAA/BA,EAAqBrQ,QAC9GoP,EAAgCmB,GAChCrB,EAAiCqB,EACnC,MACsB,IAAdY,IACN/B,EAAgCP,GAChCK,EAAiCL,GACnC,EA0MiCqC,CAAmBJ,EAAwBD,EAAsBtC,cAAc,qBAAAhjB,OAFFulB,QAOpG1iB,eAACiE,IAAG,CAACxD,GAAI,CAAC0D,GAAI,GAAKnD,SAAU,WAAYM,QAAS,OAAQI,eAAgB,SAAUH,cAAe,UAAUxB,SAAA,CAC3GF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACgJ,UAAW,SAAUtF,GAAI,GAAKtD,SAAU,QAAQd,SAAC,2HACtFC,eAACkE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACgJ,UAAW,SAAU5I,SAAU,WAAWd,SAAA,CAAC,gBAAWigB,EAAWG,UAAU,YAAO1C,OAASD,OAAO,iBAChI3d,cAACmjB,KAAU,CAACviB,GAAI,CAAC8C,MAAO,QAAS3C,WAAY,SAAUI,SAAU,WAAYC,MAAO,GAAIC,IAAK,GAAIL,SAAU,SAAUoiB,OAAQ,WAAYC,YAAY,oBAAUniB,QAASA,IAtF5IxC,WACxClB,EAAM+kB,sBAAqB,SACrBb,IACNlkB,EAAM+kB,sBAAqB,EAAM,EAmFyJe,QAGhLtjB,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUV,SAAU,YAAYjB,SACzEF,cAAC+B,IAAS,CAACnB,GAAI,CAAC0D,GAAI,GAAKjC,GAAI,EAAGD,MAAO,IAAK,iCAAkC,CAACwH,UAAW,WAAYmV,KAAK,QACzG7c,QAAQ,WAAWqhB,YAAY,kEAAqC/gB,MAAOse,EAAqBxe,SAAWC,GApN7FC,KAC5B,MAAMka,EAAala,EACnBue,EAAuBrE,GAGrByE,EADW,KAAV3e,EAC+Bwe,EAEAK,EAAeL,EAA+BtE,GAChF,EA4M+H8G,CAAqBjhB,EAAEI,OAAOH,OAC/II,WAAY,CACV6gB,eACEzjB,cAAC8C,IAAc,CAAC3B,SAAS,QAAOjB,SAACF,cAAC0jB,KAAU,MAE9C7gB,aACE7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SACH,KAAxB4gB,EACC9gB,cAACsB,IAAS,CAACV,GAAI,CAACwiB,OAAQ,WACtBC,YAAY,SACZniB,QAASA,IAAM,CAAC6f,EAAuB,IAAKI,EAAgCH,MAG9E,YAQZhhB,cAAC2jB,KAAc,CAAC9T,UAAW+T,KAAOhjB,GAAI,CAAE6C,OAAQ,QAASogB,UAAW,SAAUC,uBAAwB,OAAQC,wBAAyB,QAAS7jB,SAC9IC,eAAC6jB,KAAK,CAACC,cAAY,EAACrjB,GAAI,CAAEsjB,SAAU,MAAOhkB,SAAA,CACzCF,cAACmkB,KAAS,CAAAjkB,SACRC,eAACikB,KAAQ,CAACxjB,GAAI,CAAC,OAAQ,CAAC8C,MAAO,mBAAoBO,gBAAiB,SAAS/D,SAAA,CACjD,IAAzBigB,EAAWE,UACV,KAEAlgB,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAWF,EAAG,QAAQZ,SAAC,uBAC9DF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,WAAWd,SAAC,WAGvDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,WAAWd,SAAC,4BACnDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,WAAWd,SAAC,mBACnDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,WAAWd,SAAC,sBACnDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,WAAWd,SAAC,iBACnDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,WAAWd,SAAC,sCACnDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,WAAWd,SAAC,gCAIvDF,cAACukB,KAAS,CAAArkB,SACiC,IAAxCghB,EAA6BzG,OAC5Bza,cAAAC,WAAA,CAAAC,SACGghB,EAA6B1S,KAAI,CAACgW,EAA0BC,KAC3DtkB,sBAACikB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAA2C/jB,GAAI,CAACwiB,OAAQ,WAAYwB,cAAeA,IAA+B,IAAzBzE,EAAWE,UAzOjG3hB,WAC9C+G,GAA+B,GAC/B,MAAMof,QAAuCtT,GAA0BiT,EAAyBjQ,QAAQ/C,WAClGsT,EAAoC,CACxC3Q,cAAeqQ,EAAyBjQ,QAAQ2N,WAChD6C,YAAY,EACZthB,OAAQ,GACR2Q,OAAQ,GACRC,kBAAmB,GACnBhW,OAAQ,GACRiW,YAAauQ,EAA+BvQ,YAC5C0Q,cAAeH,EAA+BG,cAC9CC,aAAc,GACd1Q,QAASiQ,EAAyBjQ,SAEpC/W,EAAM0nB,iCAAiCJ,GACvCrf,GAA+B,EAAM,EAyN4H0f,CAAwCX,GA/OvKA,KAClC9K,EAAwB8K,GACxB3J,GAAmC,GACnClB,GAA0B,EAAK,EA4OsMyL,CAA2BZ,GAA0BtkB,SAAA,CACxO,IAAzBigB,EAAWE,UACV,KAEAlgB,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACqkB,KAAS,CAACC,MAAM,SAAS1jB,GAAI,CAACwB,MAAO,QAAQlC,SAC5CF,cAACoc,KAAO,CAACpH,MAAOhV,cAACqE,IAAU,CAACnC,QAAQ,YAAWhC,SAAqC,IAAnCskB,EAAyBzS,OAAkD,IAAnCyS,EAAyBzS,MAAc,mBAAgD,IAAnCyS,EAAyBzS,MAAc,qBAAY,sBAA0B7R,SACxNF,cAAA,QAAAE,UAnTJ6R,EAmTgCyS,EAAyBzS,MAlTxE,IAAVA,GAAyB,IAAVA,EAEd/R,cAAAC,WAAA,CAAAC,SACEF,cAAA,QAAM+P,UAAU,iCAIJ,IAAVgC,EAEJ/R,cAAAC,WAAA,CAAAC,SACEF,cAAA,QAAM+P,UAAU,mCAMlB/P,cAAAC,WAAA,CAAAC,SACEF,cAAA,QAAM+P,UAAU,qCAoSM/P,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,QAAQlC,SAAEskB,EAAyBa,WAG3ErlB,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,SAASlC,SAAEskB,EAAyBjQ,QAAQnD,cAChFpR,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,SAASlC,SAAEskB,EAAyBjQ,QAAQjD,WAChFtR,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,SAASlC,UAA8C,IAA5CskB,EAAyBjQ,QAAQG,OAAkB,MAAQ,YAC1G1U,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,SAASlC,SAAE0d,KAAO4G,EAAyBjQ,QAAQrD,YAAYyM,OAAO,gBAC1G3d,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,SAASlC,SAAmD,KAAjDskB,EAAyBjQ,QAAQK,YAAqB4P,EAAyBjQ,QAAQK,YAAc4P,EAAyBjQ,QAAQO,cACrL9U,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAAC0kB,WAAY,SAAUC,SAAU,SAAUC,aAAc,WAAYnlB,SAAU,KAAKH,SAC9GF,cAACoc,KAAO,CAACpH,MAAOhV,cAACqE,IAAU,CAACnC,QAAQ,YAAWhC,SAAEskB,EAAyBjQ,QAAQ0N,cAA0B/hB,SAC1GF,cAAA,QAAAE,SAAOskB,EAAyBjQ,QAAQ0N,oBApBTwC,GA5S/B1S,KAoUP,MAGH,mBAUhB/R,cAAC4D,EAAuB,CAACO,4BAA6BA,EAA6BD,kBAAkB,IAGrGlE,cAACiU,GAAmB,CAClB2H,uBAAwBA,EAAwBjC,0BAA2BA,EAC3EiB,qBAAsBA,EAAsBlB,wBAAyBA,EACrEmC,gCAAiCA,EAAiChB,mCAAoCA,EACtGN,2BAA4B/c,EAAM+c,2BAClCC,gBAAiBA,MAIzB,E,oBCpMeiL,OAjMf,SAA0BjoB,GACtB,MAAOkoB,EAAeC,GAAoB3nB,oBAAS,IAC5CyV,EAAqB2D,GAA0BpZ,oBAAS,IAExDyY,EAAsBC,GAA2B1Y,mBAAS,OAE3D,6BAAE6H,EAA4B,gCAAEC,GAAoC8B,qBAAWpD,GAM/EohB,EAA4ClnB,UAC9C,GAAGlB,EAAMoT,qBAAqBmU,WAAW,CACrC3N,GAAuB,GACvB,MAAM3X,ONsGgCf,OAAOwS,EAAYM,KACjE,MAAM9H,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,wDAAAO,OAAuD4T,EAAU,eAAA5T,OAAckU,GAAa9H,GAC/HlK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,EM9G6BgmB,CAA0CroB,EAAMoT,qBAAqB2D,QAAQrD,WAAY1T,EAAMoT,qBAAqB2D,QAAQ/C,WACnJkF,EAAwBjX,GACxBjC,EAAMoT,qBAAqBuD,cAAgB1U,EAAS6Z,MAAM,GAAGlP,GAC7DgN,GAAuB,EAC3B,KACI,CACAA,GAAuB,GACvB,MAAM3X,QAAiBwR,GAAuCzT,EAAMoT,qBAAqB2D,QAAQrD,YACjGwF,EAAwBjX,GACxBjC,EAAMoT,qBAAqBuD,cAAgB1U,EAAS6Z,MAAM,GAAGlP,GAC7DgN,GAAuB,EAC3B,GAGE0O,EAAwBpnB,UAE1B,IAA6C,IAA1ClB,EAAMoT,qBAAqBmU,YAAoE,KAA7CvnB,EAAMoT,qBAAqBuD,cAE5E,IAA0C,IAAvCsC,EAAqBsP,eAAoE,IAAzCtP,EAAqBuP,SAASvL,OAAa,CAE1FrD,GAAuB,GACvB,MAAM3X,QAAiBiR,GAA0BlT,EAAMoT,sBAChC,MAApBnR,EAASI,cACFkR,KACHlL,GACCC,GAAgC,GAEpC/G,IAAMgB,QAAQN,EAASK,MACvB4W,EAAwB,MACxBlZ,EAAMyoB,uCAAsC,GAC5CzoB,EAAM+c,4BAA2B,GACjC/c,EAAM0oB,8BAA6B,GACnC1oB,EAAM2oB,oBAGNpnB,IAAMY,MAAMF,EAASK,KAAM,CAACb,QAAS,WAEzCmY,GAAuB,EAC3B,KAEI,CAEAA,GAAuB,GACvB,MAAM3X,QAAiBiR,GAA0BlT,EAAMoT,sBAChC,MAApBnR,EAASI,cACFkR,KACNhS,IAAMgB,QAAQN,EAASK,MACvB4W,EAAwB,MACxBlZ,EAAMyoB,uCAAsC,GAC5CzoB,EAAM+c,4BAA2B,GACjC/c,EAAM0oB,8BAA6B,GACnC1oB,EAAM2oB,oBAGNpnB,IAAMY,MAAMF,EAASK,KAAM,CAACb,QAAS,WAEzCmY,GAAuB,EAC3B,KAGA,CAEAA,GAAuB,GACvB,MAAM3X,ONzFYf,WAC1B,MAAMzB,EAAQC,aAAaC,QAAQ,OACnC,aAAamC,IAAMqR,KAAK,GAADrT,OAAIP,GAAU,yBAAyB6T,EAAsB,CAChFxT,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAGhCuC,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EM4E6B2mB,CAAsB5oB,EAAMoT,sBAE5B,MAApBnR,EAASI,cACFkR,KACNhS,IAAMgB,QAAQN,EAASK,MACvB4W,EAAwB,MACxBlZ,EAAM2oB,mBACN3oB,EAAMyoB,uCAAsC,GAC5CzoB,EAAM+c,4BAA2B,GACjC/c,EAAM0oB,8BAA6B,IAGnCnnB,IAAMY,MAAMF,EAASK,KAAM,CAACb,QAAS,WAEzCmY,GAAuB,EAC3B,GAOEiP,EAAoBA,KAC0B,KAA7C7oB,EAAMoT,qBAAqBuD,cAE1BpV,IAAMY,MAAM,+CAAyB,CAACV,QAAS,WAI/C6mB,GACJ,EAiBJ,OAdA9e,qBAAU,KAC+C,KAAlDxJ,EAAMoT,qBAAqB2D,QAAQrD,aAAyD,IAApC1T,EAAM8oB,2BAC7DV,GACJ,GACD,CAACpoB,EAAM8oB,4BAEVtf,qBAAU,MAC0C,IAA7CxJ,EAAM+oB,qCAELF,IACA7oB,EAAMyoB,uCAAsC,GAChD,GACD,CAACzoB,EAAM+oB,qCAGNpmB,eAAAF,WAAA,CAAAC,SAAA,CACKuW,EACGzW,cAAAC,WAAA,CAAAC,SACIC,eAACC,IAAM,CAACE,WAAW,EAAMD,SAAU,KAAME,KAAM/C,EAAM8oB,0BAA2B5lB,sBAAsB,EAAKR,SAAA,CACvGF,cAACW,IAAW,CACRC,GAAI,CAAEG,WAAY,SAAUC,SAAU,OAAQ4I,UAAW,SAAUlG,MAAO,QAAS8L,cAAe,aAActP,SAAA,GAAA5C,OAC5GE,EAAMoT,qBAAqB2D,QAAQjD,SAAQ,oCAAAhU,QACC,IAA9CE,EAAMoT,qBAAqB2D,QAAQG,OAAkB,MAAQ,UAAI,oCAAApX,OACjEmZ,EAAqB+P,eAG3BxmB,cAACiB,IAAU,CAACC,QAASA,IAAM,CAAC1D,EAAM0oB,8BAA6B,GAAQ1oB,EAAMoT,qBAAqBuD,cAAgB,GAAIuC,EAAwB,OAC1I9V,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACzCF,cAACsB,IAAS,CAACN,SAAS,aAG5BhB,cAACuB,IAAa,CAACC,UAAQ,EAACZ,GAAI,CAACqb,GAAI,MAAOC,GAAI,OAAOhc,SAC/CC,eAACsmB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAEzmB,SAAA,CAC1BF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,KAEf5mB,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAI1mB,SACfC,eAACiE,IAAG,CAACxD,GAAI,CAAC8hB,OAAQ,kBAAmB5hB,EAAG,EAAG2C,OAAQ,OAAQ8hB,SAAU,QAAQrlB,SAAA,CACzEF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACG,WAAY,UAAUb,SAAC,8BACpDuW,EAAqBuP,SAClBvP,EAAqBuP,SAASxX,KAAI,CAACqY,EAAaC,IAC5C9mB,cAACqE,IAAU,CAAoBnC,QAAQ,YAAWhC,SAAE2mB,EAAY3O,MAA/C4O,KAGrB,UAKZ9mB,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAI1mB,SACfF,cAACoE,IAAG,CAACxD,GAAI,CAAC8hB,OAAQ,gBAAiB5hB,EAAG,EAAG2C,OAAQ,QAAQvD,SACrDC,eAAA,OAAKyB,MAAO,CAACH,QAAS,OAAQua,SAAU,OAAQna,eAAgB,UAAU3B,SAAA,CACtEF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACG,WAAY,SAAU2C,MAAO,OAAOxD,SAAC,8BACnEF,cAAC+mB,KAAU,CAA2Dld,aAAc4M,EAAqB6C,MAAM,GAAGlP,GAAI9H,SAAWC,IAAMykB,OA3JlJxkB,EA2JsKD,EAAEI,OAAOH,WA1JxMhF,EAAMoT,qBAAqBuD,cAAgB3R,GADlBA,KA2JsL,EAAAtC,SACtKuW,EAAqB6C,MAAM9K,KAAI,CAACyY,EAAUC,IACvClnB,cAAC2f,KAAgB,CAAsBnd,MAAOykB,EAAS7c,GAAIwV,QAAS5f,cAACmnB,KAAK,IAAKllB,MAAOglB,EAAS/O,MAAK,GAAA5a,OAA1E4pB,OAC5B,GAAA5pB,OAHcE,EAAMoT,qBAAqB2D,QAAQnD,cAKvDpR,cAACwD,IAAM,CAACtB,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,IAAMpD,QAASA,IAAMmlB,IAAoBnmB,SAAC,6CAS3G,KASJF,cAACwT,GAAe,CACZC,oBAAqBA,EAAqB2D,uBAAwBA,MAIlF,ECoXegQ,OA7iBf,SAAoB5pB,GAEhB,MAAM6pB,EAAyC,CAACjW,YAAa,GAAIC,MAAO,GAAIC,SAAU,GAAIJ,WAAY,IAChGoW,EAA8C,CAChDlW,YAAa,CAAE4D,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrE9D,MAAO,CAAE2D,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC/D7D,SAAU,CAAE0D,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEjE,WAAY,CAAE8D,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,IAGlEW,EAAYC,iBAAO,OAElBwR,EAAqBC,GAA0BxpB,mBAAS,OACxDypB,EAAiCC,GAAsC1pB,mBAASqpB,IAChFM,EAAsCC,GAA2C5pB,mBAASspB,IAC1FpQ,EAAYC,GAAiBnZ,mBAAS,OACtCyV,EAAqB2D,GAA0BpZ,oBAAS,IACxD6pB,EAAkBC,GAAuB9pB,mBAAS,GAEnDgY,EAAeD,iBAAO,MACtBgS,EAAUhS,iBAAO,MACjBiS,EAAWjS,iBAAO,MAElBsB,EAAeC,aAAY,CAC7BC,WAAY,CACVC,WAAY,CACVC,aAAc,CACZC,UAAW,SACXC,OAAO,EACPC,gBAAiB,CACfC,QAAS,CACPjX,GAAI,CACFkX,QAAS,YAGbH,MAAO,CACL/W,GAAI,CACF8C,MAAO,kBASjBiP,EAAiBvU,IACd,QAAQoa,KAAKpa,EAAMiL,MAAsB,cAAdjL,EAAMiL,KAAqC,WAAdjL,EAAMiL,KAAkC,cAAdjL,EAAMiL,KAAqC,eAAdjL,EAAMiL,KAAsC,QAAdjL,EAAMiL,KAA+B,UAAdjL,EAAMiL,IAIzJ,UAAdjL,EAAMiL,KACV4e,EAAiB7pB,GAHjBA,EAAMmR,gBAIV,EAGEgJ,EAAaA,CAAC/V,EAAO6V,KACvB,GAAa,KAAV7V,GAA0B,eAAVA,EAAuB,CACtC,MAAM0lB,EAAwC,IAAIP,GACjC,gBAAdtP,GACIvC,EAAUqE,SACTwC,cAAc7G,EAAUqE,SAG5BrE,EAAUqE,QAAU3b,YAAW,KAC3B0pB,EAAsC9W,YAAY4D,MAAQ,GAC1DkT,EAAsC9W,YAAY8D,aAAc,EAChE0S,EAAwCM,EAAsC,GAC/E,IAEe,gBAAfhR,GACCC,EAAc,OAGA,eAAdkB,GACJ6P,EAAsChX,WAAW8D,MAAQ,GACzDkT,EAAsChX,WAAWgE,aAAc,EAC/D0S,EAAwCM,GACtB,eAAfhR,GACCC,EAAc,OAGA,UAAdkB,IACJ6P,EAAsC7W,MAAM2D,MAAQ,GACpDkT,EAAsC7W,MAAM6D,aAAc,EAC1D0S,EAAwCM,GACtB,UAAfhR,GACCC,EAAc,MAG1B,GA6LEgR,EAA6BA,CAAC/pB,EAAOC,KACpCA,GAAqB,kBAAXA,IAITqpB,EAAmCL,GACnCO,EAAwCN,GACxCE,EAAuB,MACvBM,EAAoB,GACpBtqB,EAAM4qB,wBAAuB,GACjC,EAuDEC,EAAuB3pB,gBACnB,IAAIC,SAAQC,GAAWJ,WAAWI,EAAS,OACjDwY,GAAuB,GACvB,MAAM3X,QAAiB0R,GAAkBsW,EAAgCrW,YAAaqW,EAAgCpW,MAAOoW,EAAgCnW,SAAUmW,EAAgCvW,YACvMkG,GAAuB,GACvBoQ,EAAuB/nB,GACvBioB,EAAmCL,GACnCO,EAAwCN,GA1DxCS,EAAQ5N,QAAQmO,QACDP,EAAQ5N,QAAQoO,iBAAiB,mBACzCC,SAAQ/L,GAASA,EAAMgM,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,OAC1ExR,EAAc,MAyDX1X,EAASgb,OAAS,GACjBuN,EAAS7N,QAAQhF,OACrB,EAGEyT,EAA4BA,KA3DjBC,MACb,MAAMX,EAAwC,IAAIP,GAClD,IAAI7oB,GAAU,EAwCd,MAtCmD,KAAhD2oB,EAAgCrW,aAAmE,KAA7CqW,EAAgCnW,UACtC,KAA/CmW,EAAgCvW,YAA+D,KAA1CuW,EAAgCpW,QAErF6W,EAAsC9W,YAAY6D,SAAU,EAC5DiT,EAAsC5W,SAAS2D,SAAU,EACzDiT,EAAsChX,WAAW+D,SAAU,EAC3DiT,EAAsC7W,MAAM4D,SAAU,EACtDnW,GAAU,GAGgD,KAA3D6oB,EAAqCvW,YAAY4D,QAC7C+E,OAAOC,OAAO2N,GAAsC1N,OAAMC,IAAuB,IAAfA,EAAK/E,UACtE+S,EAAsC9W,YAAY6D,SAAU,EAC5DiT,EAAsC9W,YAAY+D,OAAQ,EAC1DgC,EAAc,gBAElBrY,GAAU,GAG+C,KAA1D6oB,EAAqCzW,WAAW8D,QAC5C+E,OAAOC,OAAO2N,GAAsC1N,OAAMC,IAAuB,IAAfA,EAAK/E,UACtE+S,EAAsChX,WAAW+D,SAAU,EACvDe,EAAamE,SACbnE,EAAamE,QAAQhF,SAG7BrW,GAAU,GAG0C,KAArD6oB,EAAqCtW,MAAM2D,QACvC+E,OAAOC,OAAO2N,GAAsC1N,OAAMC,IAAuB,IAAfA,EAAK/E,UACtE+S,EAAsC7W,MAAM4D,SAAU,EACtDiT,EAAsC7W,MAAM8D,OAAQ,EACpDgC,EAAc,UAElBrY,GAAU,GAEd8oB,EAAwCM,GACjCppB,CAAO,EAkBX+pB,IACCR,GACJ,EAGEJ,EAAoB1lB,IACN,KAAZA,EAAE6Q,OAA2B,UAAX7Q,EAAE8Q,MACpBuV,GACJ,EAaEE,EAAmCpqB,UACrC0Y,GAAuB,GACvB,MAAMyN,QAAuCtT,GAA0BwX,EAAoBvX,WACrFsT,EAAoC,CACtC3Q,cAAe,GACf4Q,YAAY,EACZiE,4BAA4BD,EAAoB/U,SAChDvQ,OAAQ,GACR2Q,OAAQ,GACRC,kBAAmB,GACnBhW,OAAQ,GACRiW,YAAauQ,EAA+BvQ,YAC5C0Q,cAAeH,EAA+BG,cAC9CC,aAAc,GACd1Q,QAAS,CACL/C,UAAWuX,EAAoBvX,UAC/BJ,YAAa2X,EAAoB3X,YACjCoD,WAAYuU,EAAoBvU,WAChCC,QAASsU,EAAoBtU,QAC7BnD,SAAUyX,EAAoBzX,SAC9BJ,WAAY6X,EAAoB7X,WAChC8C,SAAU+U,EAAoB/U,SAC9BU,OAAQqU,EAAoBrU,OAC5BC,eAAgBoU,EAAoBpU,eACpCC,YAAamU,EAAoBnU,YACjCC,eAAgBkU,EAAoBlU,eACpCC,YAAaiU,EAAoBjU,cAGzCtX,EAAMyrB,wBAAwBnE,GAC9B1N,GAAuB,GACvB+Q,GAA4B,EAGhC,OACIhoB,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACC,IAAM,CAACE,WAAW,EAAMD,SAAU,KAAME,KAAM/C,EAAM0rB,oBAAqBzoB,QAASA,CAACrC,EAAOC,IAAW8pB,EAA2B/pB,EAAOC,GAASqC,sBAAsB,EAAME,GAAI,CAAC,0BAA2B,CAACP,SAAU,UAAUH,SAAA,CAC9NF,cAACW,IAAW,CAACC,GAAI,CAAEC,EAAG,EAAGC,EAAG,IAAKC,WAAY,SAAUC,SAAU,OAAQ4I,UAAW,UAAW1J,SAAC,6BAChGF,cAACiB,IAAU,CAACC,QAASA,IAAMinB,IAA6BvnB,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACjGF,cAACsB,IAAS,CAACN,SAAS,aAExBb,eAACoB,IAAa,CAACC,UAAQ,EAACZ,GAAI,CAACE,EAAG,aAAaZ,SAAA,CACzCC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,gBAAiBgO,UAAU,OAAOsZ,IAAKpB,EAAQ7nB,SAAA,CACtFF,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SAC/BF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEynB,EAAqCvW,YAAY4D,QAAazU,KAAMonB,EAAqCvW,YAAY8D,YAAYhV,SAC5KF,cAAC+B,IAAS,CACNnB,GAAI,CAAC,sBAAwB,CAACyb,UAAW,UACzC1c,OAA2E,IAA7DgoB,EAAqCvW,YAAY6D,QAC/DhT,MAAM,WAAQC,QAAQ,WAAW6c,KAAK,QACtC/c,WAAS,EACTwa,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpEmH,WAAY,CAAEC,UAAW,IACzBja,SAAWC,GAnVhBC,KACvB,GAAa,KAAVA,EAAa,CACZ,MAAMka,EAAala,EAChBsT,EAAUqE,SACTwC,cAAc7G,EAAUqE,SAG5BrE,EAAUqE,QAAU3b,YAAW,KAC3B,MAAM0pB,EAAwC,IAAIP,GAC/CnlB,EAAMiY,OAAS,GACdyN,EAAsC9W,YAAY4D,MAAQ,uEAC1DkT,EAAsC9W,YAAY6D,SAAU,EAC5DiT,EAAsC9W,YAAY8D,aAAc,EAChE0S,EAAwCM,KAItB,gBAAfhR,GACCC,EAAc,MAGlBuQ,GAAoC0B,IAChCA,EAAoChY,YAAcsL,EAC3C,IAAI0M,MAGflB,EAAsC9W,YAAY4D,MAAQ,GAC1DkT,EAAsC9W,YAAY6D,SAAU,EAC5DiT,EAAsC9W,YAAY8D,aAAc,EAChEgT,EAAsC9W,YAAY6D,SAAU,EAC5DiT,EAAsC5W,SAAS2D,SAAU,EACzDiT,EAAsChX,WAAW+D,SAAU,EAC3DiT,EAAsC7W,MAAM4D,SAAU,EACtD2S,EAAwCM,GAC5C,GACD,IACP,KACI,CACA,MAAMA,EAAwC,IAAIP,GAClDO,EAAsC9W,YAAY4D,MAAQ,GAC1DkT,EAAsC9W,YAAY8D,aAAc,EAChEgT,EAAsC9W,YAAY6D,SAAU,EAC5D2S,EAAwCM,EAC5C,GAwS6CmB,CAAkB9mB,EAAEI,OAAOH,OAC5C0a,OAAS3a,GAAMgW,EAAWhW,EAAEI,OAAOH,MAAO,eAC1C2Q,UAAWR,QAKvB3S,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SAC/BF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEynB,EAAqCrW,SAAS0D,QAAazU,KAAMonB,EAAqCrW,SAAS4D,YAAYhV,SACtKF,cAAC+B,IAAS,CACNnB,GAAI,CAAC,sBAAwB,CAACyb,UAAW,UACzCG,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjExV,OAAwE,IAA1DgoB,EAAqCrW,SAAS2D,QAC5DhT,MAAM,iBAASC,QAAQ,WAAW6c,KAAK,QACvCzc,SAAWC,GAnTjBC,KACJ,aAAf0U,GACCC,EAAc,MAGlBuQ,GAAoC0B,IAChCA,EAAoC9X,SAAW9O,EACxC,IAAI4mB,MAGf,MAAMlB,EAAwC,IAAIP,GAClDO,EAAsC9W,YAAY6D,SAAU,EAC5DiT,EAAsC5W,SAAS2D,SAAU,EACzDiT,EAAsChX,WAAW+D,SAAU,EAC3DiT,EAAsC7W,MAAM4D,SAAU,EACtD2S,EAAwCM,EAAsC,EAoSjCnL,CAAiBxa,EAAEI,OAAOH,OAC3C2Q,UAAY5Q,GAAM0lB,EAAiB1lB,SAK/CvC,cAACqd,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAItd,SAChEF,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SAC/BF,cAACyd,KAAa,CAAClG,WAAY,CAAC,cAAcrX,SACtCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEynB,EAAqCzW,WAAW8D,QAAazU,KAAMonB,EAAqCzW,WAAWgE,YAAYhV,SAC1KF,cAACoE,IAAG,CAACxD,GAAI,CAACwB,MAAO,KAAKlC,SAClBF,cAAC0d,KAAU,CAACzb,MAAM,eAAY0b,OAAO,aACjCE,eAAe,EAAMC,mBAAiB,EACtCpT,YAAcC,GAAW3K,cAAC+B,IAAS,IAAK4I,EAAQoU,KAAK,UACrDhH,UAAW,CACPgG,UACA,CACIvB,SAAUxG,EACVrW,OAA0E,IAA5DgoB,EAAqCzW,WAAW+D,QAC9D8J,KAAM,QACN7B,OAAS3a,GAAMgW,EAAWhW,EAAEI,OAAOH,MAAO,cAC1C2Q,UAAY5Q,GAAM0lB,EAAiB1lB,KAG3CD,SAAWE,GAzT3BA,KACxB,GAAGA,EAAM,CACL,MAAM8mB,EAAO9mB,EAAMwb,GACbC,EAAQ,IAAIvX,KACZwX,EAAkBD,EAAME,cAAgBmL,EAAKnL,cAC7CC,EAAmBH,EAAMI,WAAaiL,EAAKjL,WAC3CC,EAAiBL,EAAMM,UAAY+K,EAAK/K,UACxCC,EAAMP,EAAME,cAAgBmL,EAAKnL,cAEvC,IAAIM,EAAgC,GAAlBP,EAAuBE,EACrCM,EAAYJ,EAEZA,EAAiB,IACjBG,GAAe,EACfC,GAAa,IAGjB,MAAMwJ,EAAwC,IAAIP,GAElD,GAAG1J,EAAQqL,GAAQ3K,MAAMH,IAAQC,EAAc,IAAuB,KAAhBA,GAAsBC,EAAY,GACpFwJ,EAAsChX,WAAW8D,MAAQ,sFACzDkT,EAAsChX,WAAWgE,aAAc,EAC/DgT,EAAsChX,WAAW+D,SAAU,EAC3D2S,EAAwCM,OAEtC,CACF,MAAM7O,EAAgBuE,KAAO0L,GAAM3L,OAAO,cAC1C+J,GAAoC0B,IAChCA,EAAoClY,WAAamI,EAC1C,IAAI+P,MAGflB,EAAsChX,WAAW8D,MAAQ,GACzDkT,EAAsChX,WAAWgE,aAAc,EAC/DgT,EAAsC9W,YAAY6D,SAAU,EAC5DiT,EAAsC5W,SAAS2D,SAAU,EACzDiT,EAAsChX,WAAW+D,SAAU,EAC3DiT,EAAsC7W,MAAM4D,SAAU,EACtD2S,EAAwCM,EAC5C,CACJ,GAiR6DqB,CAAmB/mB,eAQhExC,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SAC/BF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAEynB,EAAqCtW,MAAM2D,QAAazU,KAAMonB,EAAqCtW,MAAM6D,YAAYhV,SAChKF,cAAC+B,IAAS,CACNnB,GAAI,CAAC,sBAAwB,CAACyb,UAAW,UACzCG,SAAWC,GAAUA,GAAwB,UAAfvF,GAA0BuF,EAAMtH,QAC9DxV,OAAqE,IAAvDgoB,EAAqCtW,MAAM4D,QACzDhT,MAAM,wCAAoBC,QAAQ,WAAW6c,KAAK,QAClDzC,WAAY,CAAEC,UAAW,IACzBja,SAAWC,GA9RpBC,KACnB,GAAa,KAAVA,EAAa,CACZ,MAAMka,EAAala,EAChBsT,EAAUqE,SACTwC,cAAc7G,EAAUqE,SAG5BrE,EAAUqE,QAAU3b,YAAW,KAC3B,MAAM0pB,EAAwC,IAAIP,GAC/CnlB,EAAMiY,OAAS,IACdyN,EAAsC7W,MAAM2D,MAAQ,sEACpDkT,EAAsC7W,MAAM4D,SAAU,EACtDiT,EAAsC7W,MAAM6D,aAAc,EAC1D0S,EAAwCM,KAItB,UAAfhR,GACCC,EAAc,MAGlBuQ,GAAoC0B,IAChCA,EAAoC/X,MAAQqL,EACrC,IAAI0M,MAGflB,EAAsC7W,MAAM2D,MAAQ,GACpDkT,EAAsC7W,MAAM6D,aAAc,EAC1DgT,EAAsC7W,MAAM4D,SAAU,EACtDiT,EAAsC9W,YAAY6D,SAAU,EAC5DiT,EAAsC5W,SAAS2D,SAAU,EACzDiT,EAAsChX,WAAW+D,SAAU,EAC3D2S,EAAwCM,GAC5C,GACD,IACP,KACI,CACA,MAAMA,EAAwC,IAAIP,GAClDO,EAAsC9W,YAAY4D,MAAQ,GAC1DkT,EAAsC9W,YAAY8D,aAAc,EAChEgT,EAAsC9W,YAAY6D,SAAU,EAC5D2S,EAAwCM,EAC5C,CAGA,GAAa,KAAV1lB,EAAa,CACZ,MAAM0lB,EAAwC,IAAIP,GAC/CnlB,EAAMiY,OAAS,IACdyN,EAAsC7W,MAAM2D,MAAQ,sEACpDkT,EAAsC7W,MAAM6D,aAAc,EAC1D0S,EAAwCM,GAExCR,GAAoC0B,IAChCA,EAAoC/X,MAAQ7O,EACrC,IAAI4mB,QAIG,UAAflS,GACCC,EAAc,MAElB+Q,EAAsC7W,MAAM2D,MAAQ,GACpDkT,EAAsC7W,MAAM6D,aAAc,EAC1DgT,EAAsC7W,MAAM4D,SAAU,EACtDiT,EAAsC9W,YAAY6D,SAAU,EAC5DiT,EAAsC5W,SAAS2D,SAAU,EACzDiT,EAAsChX,WAAW+D,SAAU,EAC3D2S,EAAwCM,GAEhD,KACI,CACA,MAAMA,EAAwC,IAAIP,GAClDO,EAAsC7W,MAAM2D,MAAQ,GACpDkT,EAAsC7W,MAAM6D,aAAc,EAC1DgT,EAAsC7W,MAAM4D,SAAU,EACtD2S,EAAwCM,EAC5C,GAkN6CsB,CAAcjnB,EAAEI,OAAOH,OACxC2Q,UAAWR,EACXuK,OAAS3a,GAAMgW,EAAWhW,EAAEI,OAAOH,MAAO,kBAO1DxC,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUyC,GAAI,KAAKpE,SAC1DF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,UAAUxC,QAASA,IAAM0nB,IAA4B1oB,SAAC,qBAG5FF,cAACoE,IAAG,CAAAlE,SAEIqnB,EACmC,IAA/BA,EAAoB9M,OACpBta,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAAC2jB,KAAc,CAAC9T,UAAW+T,KAAOhjB,GAAI,CAAC+hB,UAAW,EAAGre,GAAI,KAAMmlB,SAAU,EAAGtW,UAAY/U,GAtI5FA,KACN,cAAdA,EAAMiL,IACNye,GAAqB4B,GAAeC,KAAKC,IAAIF,EAAY,EAAGnC,EAAoB9M,OAAS,KACpE,YAAdrc,EAAMiL,IACbye,GAAqB4B,GAAeC,KAAKE,IAAIH,EAAY,EAAG,KACvC,UAAdtrB,EAAMiL,KAAwC,OAArBwe,GAChCiB,EAAiCvB,EAAoBM,GACzD,EA+H8HiC,CAAmB1rB,GAAQ+qB,IAAKnB,EAAS9nB,SACvIC,eAAC6jB,KAAK,CAACC,cAAY,EAAA/jB,SAAA,CACfF,cAACmkB,KAAS,CAAAjkB,SACNC,eAACikB,KAAQ,CAACxjB,GAAI,CAAC,OAAQ,CAAC8C,MAAO,mBAAoBO,gBAAiB,SAAS/D,SAAA,CACzEF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,aAChDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,mBAChDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,iBAChDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,sBAChDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,2BAChDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,gBAChDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,mCAGxDF,cAACukB,KAAS,CAAArkB,SACLqnB,EACGA,EAAoB/Y,KAAI,CAACua,EAAqBgB,IAC1C5pB,eAACikB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAAsC/jB,GAAI,CAACwiB,OAAQ,WACpE4G,SAAUnC,IAAqBkC,EAC/BnF,cAAeA,IAAMkE,EAAiCC,GAAqB7oB,SAAA,CAE3EF,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,SAAG6oB,EAAoB3X,cAC9CpR,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,SAAG6oB,EAAoBzX,WAC9CtR,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,SAAG0d,KAAOmL,EAAoB7X,YAAYyM,OAAO,gBACxE3d,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,UAAkC,IAA/B6oB,EAAoBrU,OAAkB,MAAQ,YACxE1U,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,SAAG6oB,EAAoB9G,cAC9CjiB,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,SAAG6oB,EAAoBpU,gBAAkBoU,EAAoBlU,iBACpF7U,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,SAAG6oB,EAAoBnU,aAAemU,EAAoBjU,gBAVhDiV,KAczC,YAKhB5pB,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACgJ,UAAW,SAAUtF,GAAI,IAAKvD,WAAY,SAAU2C,MAAO,SAASxD,SAAA,CAAC,oBAAUqnB,EAAoB9M,OAAO,2BAG/Iza,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACgJ,UAAW,SAAUtF,GAAI,IAAKvD,WAAY,SAAU2C,MAAO,OAAOxD,SAAC,gDAEhH,aAMhBF,cAACwT,GAAe,CACZC,oBAAqBA,EAAqB2D,uBAAwBA,MAIlF,EC5ce6S,OAtGf,SAA+BzsB,GAE3B,MAAOiW,EAAqB2D,GAA0BpZ,oBAAS,GAEzDksB,EAAgCA,CAAC9rB,EAAOC,KACvCA,GAAqB,kBAAXA,GAITb,EAAM2sB,2BAA0B,EACpC,EAsCJ,OACIhqB,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACC,IAAM,CAACE,WAAW,EAAMD,SAAU,KAAME,KAAM/C,EAAM4sB,uBAAwB3pB,QAASA,CAACrC,EAAOC,IAAW6rB,EAA8B9rB,EAAOC,GAASqC,sBAAsB,EAAME,GAAI,CAAC,0BAA2B,CAACP,SAAU,UAAUH,SAAA,CACpOF,cAACW,IAAW,CAACC,GAAI,CAACoC,QAAS,oBAAqBjC,WAAY,SAAUC,SAAU,OAAQ4I,UAAW,UAAW1J,SAAC,6HAC/GF,cAACiB,IAAU,CAACC,QAASA,IAAMgpB,IAAgCtpB,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACpGF,cAACsB,IAAS,CAACN,SAAS,aAExBhB,cAACuB,IAAa,CAACX,GAAI,CAACoC,QAAS,oBAAqBsB,GAAI,EAAGjC,GAAI,GAAGnC,SACnB,IAAxC1C,EAAM6sB,uBAAuB5P,OAC1Bza,cAAAC,WAAA,CAAAC,SACIF,cAAC2jB,KAAc,CAAC9T,UAAW+T,KAAOhjB,GAAI,CAAC+hB,UAAW,GAAGziB,SACjDC,eAAC6jB,KAAK,CAACC,cAAY,EAAA/jB,SAAA,CACfF,cAACmkB,KAAS,CAAAjkB,SACNC,eAACikB,KAAQ,CAACxjB,GAAI,CAAC,OAAQ,CAAC8C,MAAO,mBAAoBO,gBAAiB,SAAS/D,SAAA,CACzEF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,aAChDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,mBAChDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,iBAChDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,sBAChDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,2BAChDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,gBAChDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,QAAQd,SAAC,mCAGxDF,cAACukB,KAAS,CAAArkB,SAEF1C,EAAM6sB,uBAAuB7b,KAAI,CAACua,EAAqBgB,IACnD5pB,eAACikB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAAsC/jB,GAAI,CAACwiB,OAAQ,WAAYwB,cAAeA,IA7DtGlmB,WACrC0Y,GAAuB,GACvBA,GAAuB,GACvB,MAAMyN,QAAuCtT,GAA0BwX,EAAoBvX,WACrFsT,EAAoC,CACtC3Q,cAAe,GACf4Q,YAAY,EACZiE,4BAA4BD,EAAoB/U,SAChDvQ,OAAQ,GACR2Q,OAAQ,GACRC,kBAAmB,GACnBhW,OAAQ,GACRiW,YAAauQ,EAA+BvQ,YAC5C0Q,cAAeH,EAA+BG,cAC9CC,aAAc,GACd1Q,QAAS,CACL/C,UAAWuX,EAAoBvX,UAC/BJ,YAAa2X,EAAoB3X,YACjCoD,WAAYuU,EAAoBvU,WAChCC,QAASsU,EAAoBtU,QAC7BnD,SAAUyX,EAAoBzX,SAC9BJ,WAAY6X,EAAoB7X,WAChC8C,SAAU+U,EAAoB/U,SAC9BU,OAAQqU,EAAoBrU,OAC5BC,eAAgBoU,EAAoBpU,eACpCC,YAAamU,EAAoBnU,YACjCC,eAAgBkU,EAAoBlU,eACpCC,YAAaiU,EAAoBjU,cAGzCtX,EAAMyrB,wBAAwBnE,GAC9B1N,GAAuB,GACvB8S,GAA+B,EA6BkHpB,CAAiCC,GAAqB7oB,SAAA,CAC3JF,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,SAAG6oB,EAAoB3X,cAC9CpR,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,SAAG6oB,EAAoBzX,WAC9CtR,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,SAAG0d,KAAOmL,EAAoB7X,YAAYyM,OAAO,gBACxE3d,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,UAAkC,IAA/B6oB,EAAoBrU,OAAkB,MAAQ,YACxE1U,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,SAAG6oB,EAAoB9G,cAC9CjiB,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,SAAG6oB,EAAoBpU,gBAAkBoU,EAAoBlU,iBACpF7U,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,SAAG6oB,EAAoBnU,aAAemU,EAAoBjU,gBAPhDiV,cAgB7D,UAKZ/pB,cAACwT,GAAe,CACZC,oBAAqBA,EAAqB2D,uBAAwBA,MAIlF,E,UCy6DekT,OAhgEf,SAAqB9sB,GAEnB,MAAM+sB,EAA8B,CAClCpW,cAAe,GACf4Q,YAAY,EACZthB,OAAQ,GACR2Q,OAAQ,GACRC,kBAAmB,GACnBhW,OAAQ,GACRiW,aAAa,EACb0Q,cAAe,GACfC,aAAc,GACd1Q,QAAS,CACPnD,YAAa,GACboD,WAAY,GACZC,QAAS,GACTnD,SAAU,GACVJ,WAAY,GACZ8C,SAAU,GACVU,OAAQ,GACRC,eAAgB,GAChBC,YAAa,GACbC,eAAgB,GAChBC,YAAa,KAIX0V,EAA2B,CAC/BtZ,WAAY,KACZwD,OAAQ,CACNlS,MAAO,KACPqT,YAAY,GAEdR,SAAU,CACR7S,MAAO,KACPqT,YAAY,GAEdP,SAAU,CACR9S,MAAO,KACPqT,YAAY,GAEdN,KAAM,CACJ/S,MAAO,KACPqT,YAAY,GAEd4U,YAAa,CACXjoB,MAAO,KACPqT,YAAY,GAEdvB,aAAa,GAGToW,EAAmC,CACvClW,WAAY,CAAEQ,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpE/D,YAAa,CAAE4D,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrE7D,SAAU,CAAE0D,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEjE,WAAY,CAAE8D,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpET,OAAQ,CAAEM,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEE,SAAU,CAAEL,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEG,SAAU,CAAEN,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEI,KAAM,CAAEP,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC9DV,QAAS,CAAEO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACjER,eAAgB,CAAEK,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACxEP,YAAa,CAAEI,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrEL,YAAa,CAAEE,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrE1R,OAAQ,CAAEuR,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEf,OAAQ,CAAEY,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEd,kBAAmB,CAAEW,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC3EsV,YAAa,CAAEzV,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrE9W,OAAQ,CAAE2W,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,IAG5DK,EAAa,CACjB,CAACC,YAAa,EAAGC,WAAY,MAAOC,aAAa,GACjD,CAACF,YAAa,EAAGC,WAAY,UAAMC,aAAa,IAG5CgV,EAAkB,CACtB,CAACC,iBAAkB,EAAGC,gBAAiB,sCAA4B7F,cAAe,GAClF,CAAC4F,iBAAkB,EAAGC,gBAAiB,oCAAwB7F,cAAe,KAG1E,2BAAEtf,EAA0B,6BAAEG,EAA4B,2BAAEF,EAA0B,gCAAEG,GAAoC8B,qBAAWpD,IAEtI8hB,EAA2BJ,GAAgCloB,oBAAS,IACpEuoB,EAAoCN,GAAyCjoB,oBAAS,IAEtFkrB,EAAqBd,GAA0BpqB,oBAAS,IAExDosB,EAAwBD,GAA6BnsB,oBAAS,IAC9DqsB,EAAwBS,GAA6B9sB,mBAAS,KAE9DyV,EAAqB2D,GAA0BpZ,oBAAS,IAExD4S,EAAsBqY,GAA2BjrB,mBAASusB,IAC1DQ,EAA2BC,GAAgChtB,mBAAS0sB,IACpExT,EAAYC,GAAiBnZ,mBAAS,OAEtCitB,EAAmBC,GAAwBltB,mBAASwsB,IAEpD7T,EAAcC,GAAmB5Y,mBAAS,KAC1C6Y,EAAcC,GAAmB9Y,mBAAS,CAAC+Y,KAAM,GAAI9Y,SAAS,KAC9D+Y,EAAUC,GAAejZ,mBAAS,CAAC+Y,KAAM,GAAI9Y,SAAS,IAEvD8pB,EAAUhS,iBAAO,MACjBoV,EAAgBpV,iBAAO,MACvBC,EAAeD,iBAAO,MACtBD,EAAYC,iBAAO,MAEnBsB,EAAeC,aAAY,CAC/BC,WAAY,CACVC,WAAY,CACVC,aAAc,CACZC,UAAW,SACXC,OAAO,EACPC,gBAAiB,CACfC,QAAS,CACPjX,GAAI,CACFkX,QAAS,YAGbH,MAAO,CACL/W,GAAI,CACF8C,MAAO,aAIbqU,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN/N,QAAS,CACPgO,OAAQ,CAAC,GAAI,aAWzBxF,EAAgBA,CAACvU,EAAOgtB,KAC5B,IAAK,QAAQ5S,KAAKpa,EAAMiL,MAAsB,cAAdjL,EAAMiL,KAAqC,WAAdjL,EAAMiL,KAAkC,cAAdjL,EAAMiL,KAAqC,eAAdjL,EAAMiL,KAAsC,QAAdjL,EAAMiL,KAA+B,UAAdjL,EAAMiL,IAE7K,GAAiB,UAAdjL,EAAMiL,IAAgB,CACvBjL,EAAMmR,iBACN,IAAI8b,EAAY,KAEdA,EADCza,EAAqBoY,4BAA8C,oBAAhBoC,EACxCxY,SAAS0Y,eAAe,mBAE9B1a,EAAqBoY,4BAA8C,mBAAhBoC,EAC7CxY,SAAS0Y,eAAe,iBAGxB1Y,SAAS0Y,eAAeF,GAEnCC,IACDA,EAAUlW,QACVkW,EAAUE,SAEd,MAEEntB,EAAMmR,gBAEV,EAGIkJ,EAAgBA,CAACtO,EAAOvF,KAAsB,IAApB,WAAE8T,GAAY9T,EAC5C,MAAM+T,EAAkBD,EAAWE,cAG7B4S,EAA2BC,GAAOA,EAAIC,QAAQ,UAAM,KAE1D,OAAOvhB,EAAQ0O,QAAOtO,IAClB,MAAMuO,EAAqB0S,EAAyBjhB,EAAO+G,SAASsH,eAC9DG,EAAWyS,EAAyBjhB,EAAO+G,SAAS/K,MAAM,KAAKiI,KAAIwK,GAAQA,EAAK,KAAIC,KAAK,IAAIL,eAE7F+S,EAAkBH,EAAyB7S,GAEjD,OACIG,EAAmBI,SAASyS,IAC5B5S,EAASG,SAASyS,EAAgB,GAExC,EAGEvT,GAAeC,IACF,WAAdA,EACD6S,GAAqBU,IACnBA,EAAsBlX,OAAOmB,YAAa,EACnC,IACF+V,MAIa,aAAdvT,EACN6S,GAAqBU,IACnBA,EAAsBvW,SAASQ,YAAa,EACrC,IACF+V,MAIc,aAAdvT,EACP6S,GAAqBU,IACnBA,EAAsBtW,SAASO,YAAa,EACrC,IACF+V,MAIa,SAAdvT,EACN6S,GAAqBU,IACnBA,EAAsBrW,KAAKM,YAAa,EACjC,IACF+V,MAIa,gBAAdvT,GACN6S,GAAqBU,IACnBA,EAAsBnB,YAAY5U,YAAa,EACxC,IACF+V,KAGT,EAGIrT,GAAaA,CAAC/V,EAAO6V,KACzB,GAAa,KAAV7V,GAA0B,eAAVA,EAAuB,CACxC,MAAMqpB,EAA6B,IAAId,GACtB,eAAd1S,IACEvC,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAE1BrE,EAAUqE,QAAU3b,YAAW,KAC7BqtB,EAA2BrX,WAAWQ,MAAQ,GAC9C6W,EAA2BrX,WAAWU,aAAc,EACpD2W,EAA2BrX,WAAWS,SAAU,EAClD4W,EAA2BrX,WAAWW,OAAQ,EAC5C6V,EAA6Ba,EAA2B,GACvD,KAsCY,gBAAdxT,GACEvC,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAE1BrE,EAAUqE,QAAU3b,YAAW,KAC7BqtB,EAA2B/W,YAAYE,MAAQ,GAC/C6W,EAA2B/W,YAAYI,aAAc,EACrD2W,EAA2B/W,YAAYG,SAAU,EACjD4W,EAA2Bza,YAAY+D,OAAQ,EAC/C6V,EAA6Ba,EAA2B,GACvD,KAEiB,WAAdxT,EACN6S,GAAqBU,IACnBA,EAAsBlX,OAAOmB,YAAa,EACnC,IAAK+V,MAGM,aAAdvT,EACN6S,GAAqBU,IACnBA,EAAsBvW,SAASQ,YAAa,EACrC,IAAK+V,MAGM,aAAdvT,EACN6S,GAAqBU,IACnBA,EAAsBtW,SAASO,YAAa,EACrC,IAAK+V,MAGM,SAAdvT,EACN6S,GAAqBU,IACnBA,EAAsBrW,KAAKM,YAAa,EACjC,IAAK+V,MAGM,gBAAdvT,GACN6S,GAAqBU,IACnBA,EAAsBnB,YAAY5U,YAAa,EACxC,IAAK+V,KAGlB,KACkB,KAAVppB,IACW,WAAd6V,EACD6S,GAAqBU,IACnBA,EAAsBlX,OAAOmB,YAAa,EACnC,IAAK+V,MAGM,aAAdvT,EACN6S,GAAqBU,IACnBA,EAAsBvW,SAASQ,YAAa,EACrC,IAAK+V,MAGM,aAAdvT,EACN6S,GAAqBU,IACnBA,EAAsBtW,SAASO,YAAa,EACrC,IAAK+V,MAGM,SAAdvT,EACN6S,GAAqBU,IACnBA,EAAsBrW,KAAKM,YAAa,EACjC,IAAK+V,MAGM,gBAAdvT,GACN6S,GAAqBU,IACnBA,EAAsBnB,YAAY5U,YAAa,EACxC,IAAK+V,MAGlB,EAi8BI9F,GAAwBA,KAC5BtnB,YAAW,KAxOSqb,MACpB,IAAI/a,GAAU,EACd,MAAM+sB,EAA6B,IAAId,GAkOvC,MAhOkD,KAA/CA,EAA0BvW,WAAWQ,QACnC+E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2BrX,WAAWW,OAAQ,EAC9CgC,EAAc,eAEhBrY,GAAU,GAGoC,KAA7C8R,EAAqB2D,QAAQnD,cAC9Bya,EAA2Bza,YAAY4D,MAAQ,uDAC/C6W,EAA2Bza,YAAY8D,aAAc,EACrD2W,EAA2Bza,YAAY6D,SAAU,EAC9C8E,OAAOC,OAAO+Q,GAA2B9Q,OAAMC,IAAuB,IAAfA,EAAK/E,UAC7D0W,EAA2Bza,YAAY+D,OAAQ,EAC/CgC,EAAc,gBAEhBrY,GAAU,GAGuC,KAAhDisB,EAA0B3Z,YAAY4D,QACpC+E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2Bza,YAAY+D,OAAQ,EAC/CgC,EAAc,gBAEhBrY,GAAU,GAGiC,KAA1C8R,EAAqB2D,QAAQjD,WAC9Bua,EAA2Bva,SAAS0D,MAAQ,8CAC5C6W,EAA2Bva,SAAS4D,aAAc,EAClD2W,EAA2Bva,SAAS2D,SAAU,EAC3C8E,OAAOC,OAAO+Q,GAA2B9Q,OAAMC,IAAuB,IAAfA,EAAK/E,UAC7D0W,EAA2Bva,SAAS6D,OAAQ,EAC5CgC,EAAc,aAEhBrY,GAAU,GAGmC,KAA5C8R,EAAqB2D,QAAQrD,aAC9B2a,EAA2B3a,WAAW8D,MAAQ,4CAC9C6W,EAA2B3a,WAAWgE,aAAc,EACpD2W,EAA2B3a,WAAW+D,SAAU,EAC7C8E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2B3a,WAAWiE,OAAQ,EAC1Ca,EAAamE,SACfnE,EAAamE,QAAQhF,SAGzBrW,GAAU,GAGsC,KAA/CisB,EAA0B7Z,WAAW8D,QACnC+E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2B3a,WAAWiE,OAAQ,EAC1Ca,EAAamE,SACfnE,EAAamE,QAAQhF,SAGzBrW,GAAU,GAG+B,KAAxC8R,EAAqB2D,QAAQG,SAC9BmX,EAA2BnX,OAAOM,MAAQ,iDAC1C6W,EAA2BnX,OAAOQ,aAAc,EAChD2W,EAA2BnX,OAAOO,SAAU,EACzC8E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2BnX,OAAOS,OAAQ,EAC1C+V,GAAqBU,IACnBA,EAAsBlX,OAAOmB,YAAa,EACnC,IAAI+V,MAEfzU,EAAc,WAEdrY,GAAU,GAG4B,OAArCmsB,EAAkB5V,SAAS7S,QAC5BqpB,EAA2BxW,SAASL,MAAQ,kDAC5C6W,EAA2BxW,SAASH,aAAc,EAClD2W,EAA2BxW,SAASJ,SAAU,EAC3C8E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2BxW,SAASF,OAAQ,EAC5C+V,GAAqBU,IACnBA,EAAsBvW,SAASQ,YAAa,EACrC,IAAI+V,MAEbzU,EAAc,aAEhBrY,GAAU,GAG4B,OAArCmsB,EAAkB3V,SAAS9S,QAC5BqpB,EAA2BvW,SAASN,MAAQ,oDAC5C6W,EAA2BvW,SAASJ,aAAc,EAClD2W,EAA2BvW,SAASL,SAAU,EAC3C8E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2BvW,SAASH,OAAQ,EAC5C+V,GAAqBU,IACnBA,EAAsBtW,SAASO,YAAa,EACrC,IAAI+V,MAEbzU,EAAc,aAEhBrY,GAAU,GAGwB,OAAjCmsB,EAAkB1V,KAAK/S,QACxBqpB,EAA2BtW,KAAKP,MAAQ,sDACxC6W,EAA2BtW,KAAKL,aAAc,EAC9C2W,EAA2BtW,KAAKN,SAAU,EACvC8E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2BtW,KAAKJ,OAAQ,EACxC+V,GAAqBU,IACnBA,EAAsBrW,KAAKM,YAAa,EACjC,IAAI+V,MAEbzU,EAAc,SAEhBrY,GAAU,GAGgC,KAAzC8R,EAAqB2D,QAAQE,UAC9BoX,EAA2BpX,QAAQO,MAAQ,sDAC3C6W,EAA2BpX,QAAQS,aAAc,EACjD2W,EAA2BpX,QAAQQ,SAAU,EAC1C8E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2BpX,QAAQU,OAAQ,EAC3CgC,EAAc,YAEhBrY,GAAU,GAGuC,KAAhD8R,EAAqB2D,QAAQI,gBAAyE,KAAhD/D,EAAqB2D,QAAQM,iBACpFgX,EAA2BlX,eAAeK,MAAQ,qDAClD6W,EAA2BlX,eAAeO,aAAc,EACxD2W,EAA2BlX,eAAeM,SAAU,EACjD8E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2BlX,eAAeQ,OAAQ,EAClDgC,EAAc,mBAEhBrY,GAAU,GAGoC,KAA7C8R,EAAqB2D,QAAQK,aAAmE,KAA7ChE,EAAqB2D,QAAQO,cACjF+W,EAA2BjX,YAAYI,MAAQ,iEAC/C6W,EAA2BjX,YAAYM,aAAc,EACrD2W,EAA2BjX,YAAYK,SAAU,EAC9C8E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2BjX,YAAYO,OAAQ,EAC/CgC,EAAc,gBAEhBrY,GAAU,GAGuC,KAAhDisB,EAA0BnW,YAAYI,QACpC+E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2BjX,YAAYO,OAAQ,EAC/CgC,EAAc,gBAEhBrY,GAAU,GAGuC,KAAhDisB,EAA0BjW,YAAYE,QACpC+E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2B/W,YAAYK,OAAQ,EAC/CgC,EAAc,gBAEhBrY,GAAU,GAGuB,KAAhC8R,EAAqBwD,SACtByX,EAA2BzX,OAAOY,MAAQ,gDAC1C6W,EAA2BzX,OAAOc,aAAc,EAChD2W,EAA2BzX,OAAOa,SAAU,EACzC8E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2BzX,OAAOe,OAAQ,EAC1CgC,EAAc,WAEhBrY,GAAU,GAGuB,KAAhC8R,EAAqBnN,SACtBooB,EAA2BpoB,OAAOuR,MAAQ,8CAC1C6W,EAA2BpoB,OAAOyR,aAAc,EAChD2W,EAA2BpoB,OAAOwR,SAAU,EACzC8E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2BpoB,OAAO0R,OAAQ,EAC1CgC,EAAc,WAEhBrY,GAAU,GAGkC,KAA3C8R,EAAqByD,oBACtBwX,EAA2BxX,kBAAkBW,MAAQ,6DACrD6W,EAA2BxX,kBAAkBa,aAAc,EAC3D2W,EAA2BxX,kBAAkBY,SAAU,EACpD8E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2BxX,kBAAkBc,OAAQ,EACrDgC,EAAc,sBAEhBrY,GAAU,GAG8B,KAAvC8R,EAAqBoU,gBACtB6G,EAA2BpB,YAAYzV,MAAQ,yDAC/C6W,EAA2BpB,YAAYvV,aAAc,EACrD2W,EAA2BpB,YAAYxV,SAAU,EAC9C8E,OAAOC,OAAO6R,GAA4B5R,OAAMC,IAAuB,IAAfA,EAAK/E,UAC9D0W,EAA2BpB,YAAYtV,OAAQ,EAC/C+V,GAAqBU,IACnBA,EAAsBnB,YAAY5U,YAAa,EACxC,IAAI+V,MAEbzU,EAAc,gBAEhBrY,GAAU,GAQZksB,EAA6Ba,GACtB/sB,CAAO,EAKT+a,KACDsR,EAAchR,QAAQhF,QACnB3X,EAAMsuB,8BACPC,KAGA7F,GAA6B,GAEjC,GACC,IAAI,EAGH6F,GAA4BrtB,UAChC0Y,GAAuB,GACvB,MAAM4U,QAA0Ctb,GAA0BE,GAC1B,MAA7Cob,EAAkCnsB,QACnCd,IAAMgB,QAAQisB,EAAkClsB,KAAM,CAACb,QAAS,aAChEzB,EAAM+c,4BAA2B,GACjC4L,MAGApnB,IAAMY,MAAMqsB,EAAkClsB,KAAM,CAACb,QAAS,WAEhEmY,GAAuB,EAAM,EAiGzB+O,GAAmBA,KACvB4B,EAAQ5N,QAAQmO,QACDP,EAAQ5N,QAAQoO,iBAAiB,mBACzCC,SAAQ/L,GAASA,EAAMgM,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,OAE1EuC,EAAqBV,GAErB1T,GAAgB0C,IACdA,EAAiBvb,SAAU,EAC3Bub,EAAiBzC,KAAO,GACjB,IAAIyC,MAEbvC,GAAYwC,IACVA,EAAaxb,SAAU,EACvBwb,EAAa1C,KAAO,GACb,IAAI0C,MAGVjc,EAAMsuB,+BACPtuB,EAAM0nB,mCAGR/N,EAAc,MAEd,MAAM4N,IAAanU,EAAqBmU,WAExCkE,EAAwBsB,GACxBS,EAA6BN,GAE1B7kB,GACDC,GAAgC,GAG/Bif,EACDvmB,YAAW,KACT2sB,EAAchR,QAAQhF,OAAO,GAC5B,KAGHgW,EAAchR,QAAQhF,OACxB,EAGI8W,GAA4BA,KAChClE,EAAQ5N,QAAQmO,QACDP,EAAQ5N,QAAQoO,iBAAiB,mBACzCC,SAAQ/L,GAASA,EAAMgM,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,OAE1EuC,EAAqBV,GAErB1T,GAAgB0C,IACdA,EAAiBvb,SAAU,EAC3Bub,EAAiBzC,KAAO,GACjB,IAAIyC,MAEbvC,GAAYwC,IACVA,EAAaxb,SAAU,EACvBwb,EAAa1C,KAAO,GACb,IAAI0C,MAGVjc,EAAMsuB,+BACPtuB,EAAM0nB,mCAGR/N,EAAc,MAEdgU,EAAchR,QAAQhF,QAEnBtP,GACDC,GAAgC,GAGlCmjB,EAAwBsB,GACxBW,EAAqBV,GACrBQ,EAA6BN,GAC7BtC,GAAuB,EAAK,EAUxBC,GAAuB3pB,UAC3B,MAAMe,QAAiB0R,GAAkBP,EAAqB2D,QAAQnD,YAAaR,EAAqB2D,QAAQK,YAAchE,EAAqB2D,QAAQK,YAAchE,EAAqB2D,QAAQO,YAAalE,EAAqB2D,QAAQjD,SAAUV,EAAqB2D,QAAQrD,YAChQ,IAApBzR,EAASgb,SACVqQ,EAA0BrrB,GAC1B0qB,GAA0B,GAC5B,EAwDF,OArDAnjB,qBAAU,KAfoBtI,WAC5B,MAAMe,QAAiBiU,KACP,MAAbjU,GACDmX,EAAgBnX,EAClB,EAYAkb,GACAwQ,EAAchR,QAAQhF,OAAO,GAC5B,IAEHnO,qBAAU,MAC+B,IAApC4J,EAAqBmU,YAlMgBrmB,WACxC0Y,GAAuB,GACvBxE,SAAS0Y,eAAe,qBAAqB9oB,MAAQoO,EAAqB2D,QAAQC,WAClF5B,SAAS0Y,eAAe,eAAe9oB,MAAQoO,EAAqB2D,QAAQnD,YAC5EwB,SAAS0Y,eAAe,mBAAmB9oB,MAAQoO,EAAqB2D,QAAQjD,SAEhF,IAAI4a,EAAqB,IAAIjB,GAG7B,GAFAiB,EAAmBhb,WAAa0M,KAAOhN,EAAqB2D,QAAQrD,YAEjEN,EAAqB2D,QAAQP,SAAS,CACvC,MAAMvU,QAAiBsU,GAAuBnD,EAAqB2D,QAAQP,UACrEgH,QAA6BrH,GAAgBlU,EAASwb,cACtDC,QAAyBrH,GAAYpU,EAAS0b,cAE9CI,EAAoB5E,EAAanJ,WAAU6H,GAAYA,EAAShC,OAAS5T,EAASwb,eAClFO,EAAoBR,EAAqBxN,WAAU8H,GAAYA,EAASjC,OAAS5T,EAAS0b,eAC1FM,EAAgBP,EAAiB1N,WAAU+H,GAAQA,EAAKlC,OAAS5T,EAASic,WAEhFwQ,EAAmB7W,SAAS7S,MAAQmU,EAAa4E,GACjD2Q,EAAmB5W,SAAS9S,MAAQwY,EAAqBQ,GACzD0Q,EAAmB3W,KAAK/S,MAAQ0Y,EAAiBO,GACjDyQ,EAAmB5X,YAAc1D,EAAqB0D,WACxD,CAEA,MAAM6X,EAAkB3W,EAAWhI,WAAUkH,GAAUA,EAAOiB,cAAgB/E,EAAqB2D,QAAQG,SAC3GwX,EAAmBxX,OAAOlS,MAAQgT,EAAW2W,GAE7C,MAAMC,EAAuBzB,EAAgBnd,WAAUid,GAAeA,EAAYzF,gBAAkBpU,EAAqBoU,gBACzHkH,EAAmBzB,YAAYjoB,MAAQmoB,EAAgByB,GAEvDlB,EAAqBgB,GAErBpmB,GAAgC,GAEhC8M,SAAS0Y,eAAe,kBAAkB9oB,MAAQoO,EAAqB2D,QAAQE,QAC/E7B,SAAS0Y,eAAe,yBAAyB9oB,MAAQoO,EAAqB2D,QAAQI,eACtF/B,SAAS0Y,eAAe,sBAAsB9oB,MAAQoO,EAAqB2D,QAAQK,YACnFhC,SAAS0Y,eAAe,yBAAyB9oB,MAAQoO,EAAqB2D,QAAQM,eACtFjC,SAAS0Y,eAAe,sBAAsB9oB,MAAQoO,EAAqB2D,QAAQO,YAEhFlE,EAAqBoY,2BACtBxqB,YAAW,KACTwsB,EAA6BN,GAC7BtT,GAAuB,GAEvBD,EAAc,cAAc,GAC3B,MAGH6T,EAA6BN,GAC7BtT,GAAuB,GAEvBD,EAAc,UAChB,EA8IEkV,EACF,GACC,CAACzb,EAAqBmU,aAEzB/d,qBAAU,KACLxJ,EAAMsuB,gCACP7C,EAAwBzrB,EAAMsuB,+BAjJeptB,WAC/C0Y,GAAuB,GACvBxE,SAAS0Y,eAAe,qBAAqB9oB,MAAQhF,EAAMsuB,8BAA8BvX,QAAQC,WACjG5B,SAAS0Y,eAAe,eAAe9oB,MAAQhF,EAAMsuB,8BAA8BvX,QAAQnD,YAC3FwB,SAAS0Y,eAAe,mBAAmB9oB,MAAQhF,EAAMsuB,8BAA8BvX,QAAQjD,SAE/F,MAAM4a,EAAqB,IAAIjB,GAC/BiB,EAAmBhb,WAAa0M,KAAOpgB,EAAMsuB,8BAA8BvX,QAAQrD,YAEnF,MAAMzR,QAAiBsU,GAAuBvW,EAAMsuB,8BAA8BvX,QAAQP,UACpFgH,QAA6BrH,GAAgBlU,EAASwb,cACtDC,QAAyBrH,GAAYpU,EAAS0b,cAE9CgR,EAAkB3W,EAAWhI,WAAUkH,GAAUA,EAAOiB,cAAgBnY,EAAMsuB,8BAA8BvX,QAAQG,SACpH6G,EAAoB5E,EAAanJ,WAAU6H,GAAYA,EAAShC,OAAS5T,EAASwb,eAClFO,EAAoBR,EAAqBxN,WAAU8H,GAAYA,EAASjC,OAAS5T,EAAS0b,eAC1FM,EAAgBP,EAAiB1N,WAAU+H,GAAQA,EAAKlC,OAAS5T,EAASic,WAC1E0Q,EAAuBzB,EAAgBnd,WAAUid,GAAeA,EAAYzF,gBAAkBxnB,EAAMsuB,8BAA8B9G,gBAExIkH,EAAmBxX,OAAOlS,MAAQgT,EAAW2W,GAC7CD,EAAmB7W,SAAS7S,MAAQmU,EAAa4E,GACjD2Q,EAAmB5W,SAAS9S,MAAQwY,EAAqBQ,GACzD0Q,EAAmB3W,KAAK/S,MAAQ0Y,EAAiBO,GACjDyQ,EAAmBzB,YAAYjoB,MAAQmoB,EAAgByB,GACvDF,EAAmB5X,YAAc9W,EAAMsuB,8BAA8BxX,YACrE4W,EAAqBgB,GAErBtZ,SAAS0Y,eAAe,kBAAkB9oB,MAAQhF,EAAMsuB,8BAA8BvX,QAAQE,QAC9F7B,SAAS0Y,eAAe,yBAAyB9oB,MAAQhF,EAAMsuB,8BAA8BvX,QAAQI,eACrG/B,SAAS0Y,eAAe,sBAAsB9oB,MAAQhF,EAAMsuB,8BAA8BvX,QAAQK,YAClGhC,SAAS0Y,eAAe,yBAAyB9oB,MAAQhF,EAAMsuB,8BAA8BvX,QAAQM,eACrGjC,SAAS0Y,eAAe,sBAAsB9oB,MAAQhF,EAAMsuB,8BAA8BvX,QAAQO,YAElGkW,EAA6BN,GAC7BtT,GAAuB,GACvBD,EAAc,SAAS,EA+GrBmV,GACF,GACC,CAAC9uB,EAAMsuB,gCAEV9kB,qBAAU,MAC0B,IAA/BtB,IAAuE,IAA/BC,IACtCnI,EAAM+uB,aAC0B,IAA9BjG,IAA8D,IAAxB4C,GACvCjD,GAAsC,GACtCzoB,EAAMgvB,cAAa,KAGnB1G,KACAtoB,EAAMgvB,cAAa,KAIpBhvB,EAAMivB,aAC0B,IAA9BnG,IAA8D,IAAxB4C,GAIvC/C,KAHA3oB,EAAMkvB,cAAa,IAQpBlvB,EAAMmvB,aAC0B,IAA9BrG,IAA8D,IAAxB4C,GAIvC+C,KAHAzuB,EAAMovB,cAAa,IAOzB,GACC,CAACpvB,EAAM+uB,UAAW/uB,EAAMivB,UAAWjvB,EAAMmvB,UAAWjnB,EAA4BC,IAGjFxF,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACiQ,KAAS,CAACrP,GAAI,CAAC,4BAA6B,CAACsb,GAAI,GAAIzY,OAAQ,QAASvD,SACrEC,eAACiE,IAAG,CAACxD,GAAI,CAAEisB,UAAW,UAAW9Z,aAAc,OAAQ4P,UAAW,EAAG7G,GAAI,IAAKC,GAAI,IAAKE,GAAI,IAAKC,GAAI,KAAOhc,SAAA,CACzGF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACgJ,UAAW,SAAU7I,WAAY,SAAU2C,MAAO,QAAQxD,SAAC,8CACzFC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,gBAAiBma,SAAU,QAASnM,UAAU,OAAOsZ,IAAKpB,EAAQ7nB,SAAA,CAE7GF,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0BvW,WAAWQ,QAAazU,KAAMwqB,EAA0BvW,WAAWU,YAAawC,UAAU,OAAOoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAAM5D,SAC1MF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOia,UAAW,QAAQnc,SAC5CF,cAAC+B,IAAS,CAACpC,OAA+D,IAAjDorB,EAA0BvW,WAAWS,QAA0B8X,UAA8C,IAApCnc,EAAqBmU,WACrH9iB,MAAM,4BAAeC,QAAQ,WAAWkI,GAAG,oBAAoB4I,aAAa,MAC5EwJ,SAAyB,eAAftF,EAA+BuF,GAAUA,GAAwB,eAAfvF,GAA+BuF,EAAMtH,QAAUgW,EAC3G7oB,SAAWC,GAxtCCC,KAC1B,GAAa,KAAVA,EAAa,CACI,eAAf0U,GACDC,EAAc,MAGhB,MAAMuF,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAC7B,MAAMqtB,EAA6B,IAAId,GACpCrO,EAAWjC,OAAS,IACrBoR,EAA2BrX,WAAWQ,MAAQ,8DAC9C6W,EAA2BrX,WAAWU,aAAc,EACpD2W,EAA2BrX,WAAWS,SAAU,EAChD4W,EAA2BrX,WAAWW,OAAQ,EAC9C6V,EAA6Ba,KAG7B5C,GAAwBrM,IACtBA,EAAyBrI,QAAQC,WAAakI,EACvC,IAAKE,MAGdiP,EAA2BrX,WAAWQ,MAAQ,GAC9C6W,EAA2BrX,WAAWU,aAAc,EACpD2W,EAA2BrX,WAAWS,SAAU,EAChD4W,EAA2BrX,WAAWW,OAAQ,EAC9C6V,EAA6Ba,GAC/B,GACC,IACL,KACI,CACgB,eAAf3U,GACDC,EAAc,MAGhB,MAAM0U,EAA6B,IAAId,GACvCc,EAA2BrX,WAAWQ,MAAQ,GAC9C6W,EAA2BrX,WAAWU,aAAc,EACpD2W,EAA2BrX,WAAWS,SAAU,EAChD4W,EAA2BrX,WAAWW,OAAQ,EAC9C6V,EAA6Ba,EAC/B,GA2qC+BhP,CAAmBta,EAAEI,OAAOH,OAC7C2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,eACnC2a,OAAS3a,GAAMgW,GAAWhW,EAAEI,OAAOH,MAAO,cAC1C8Z,WAAY,CAAE1a,MAAO,CAAEorB,oBAAqBpc,EAAqBmU,WAAa,UAAa,SAAUxI,UAAW,IAChH0Q,iBAAqD,IAApCrc,EAAqBmU,WAAsB,CAACmI,OAAQ5gB,SAAQ,IAAU,aAM/FtM,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0B3Z,YAAY4D,QAAazU,KAAMwqB,EAA0B3Z,YAAY8D,YAAawC,UAAU,MAAMoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAAM5D,SAC3MF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOia,UAAW,QAAQnc,SAC5CF,cAAC+B,IAAS,CAACpC,OAAgE,IAAlDorB,EAA0B3Z,YAAY6D,QAA0B8X,UAA8C,IAApCnc,EAAqBmU,aAA2E,IAApDnU,EAAqBoY,2BAClK/mB,MAAM,WAAQC,QAAQ,WAAWkI,GAAG,cAAc4I,aAAa,MAC/DwJ,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpE7S,SAAWC,GAxrCAC,KACzB,GAAa,KAAVA,EAAa,CACd,MAAMka,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAC7B,MAAMqtB,EAA6B,IAAId,GACpCrO,EAAWjC,OAAS,GACrBoR,EAA2Bza,YAAY4D,MAAQ,wDAC/C6W,EAA2Bza,YAAY8D,aAAc,EACrD2W,EAA2Bza,YAAY6D,SAAU,EACjD4W,EAA2Bza,YAAY+D,OAAQ,EAC/C6V,EAA6Ba,KAGX,gBAAf3U,GACDC,EAAc,MAGhB8R,GAAwBrM,IACtBA,EAAyBrI,QAAQnD,YAAcsL,EACxC,IAAKE,MAGdiP,EAA2Bza,YAAY4D,MAAQ,GAC/C6W,EAA2Bza,YAAY8D,aAAc,EACrD2W,EAA2Bza,YAAY6D,SAAU,EACjD4W,EAA2Bza,YAAY+D,OAAQ,EAC/C6V,EAA6Ba,IAGwB,KAApDjb,EAAqB2D,QAAQnD,YAAYqJ,QAC1C4N,IACF,GACC,IACL,GAmpC+BgB,CAAkB9mB,EAAEI,OAAOH,OAC5C2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,mBACnC2a,OAAS3a,GAAMgW,GAAWhW,EAAEI,OAAOH,MAAO,aAC1C8Z,WAAY,CAAE1a,MAAO,CAAEorB,oBAAqBpc,EAAqBmU,WAAa,UAAa,SAAUxI,UAAW,IAChH0Q,iBAAqD,IAApCrc,EAAqBmU,WAAsB,CAACmI,OAAQ5gB,SAAQ,IAAU,aAM7FtM,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0BzZ,SAAS0D,QAAazU,KAAMwqB,EAA0BzZ,SAAS4D,YAAawC,UAAU,MAAMoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAC/LiU,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN/N,QAAS,CAAEgO,OAAQ,CAAC,IAAK,QAI/BjY,SAEFF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOX,QAAS,cAAe4a,UAAW,QAAQnc,SACpEF,cAAC+B,IAAS,CAACpC,OAA6D,IAA/CorB,EAA0BzZ,SAAS2D,QAA0B8X,UAA8C,IAApCnc,EAAqBmU,WACnH9iB,MAAM,iBAASC,QAAQ,WAAWkI,GAAG,kBAAkB4I,aAAa,MACpEwJ,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjE7S,SAAWC,GAnqCHC,KACxB,MAAMka,EAAala,EAEhBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAY7B,GAXAyqB,GAAwBrM,IACtBA,EAAyBrI,QAAQjD,SAAWoL,EACrC,IACFE,MAIW,aAAf1F,GACDC,EAAc,MAGb4T,EAA0BzZ,SAAS2D,QAAQ,CAC5C,MAAM4W,EAA6B,IAAId,GACvCc,EAA2Bva,SAAS0D,MAAQ,GAC5C6W,EAA2Bva,SAAS4D,aAAc,EAClD2W,EAA2Bva,SAAS2D,SAAU,EAC9C4W,EAA2Bva,SAAS6D,OAAQ,EAC5C6V,EAA6Ba,EAC/B,IACC,IAAI,EAwoC0B9O,CAAiBxa,EAAEI,OAAOH,OAC3C2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,qBACnC+Z,WAAY,CAAE1a,MAAO,CAAEorB,oBAAqBpc,EAAqBmU,WAAa,UAAa,UAC3FkI,iBAAqD,IAApCrc,EAAqBmU,WAAsB,CAACmI,OAAQ5gB,SAAQ,IAAU,aAM/FtM,cAACqd,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAItd,SAClEF,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACyd,KAAa,CAAClG,WAAY,CAAC,cAAcrX,SACxCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0B7Z,WAAW8D,QAAazU,KAAMwqB,EAA0B7Z,WAAWgE,YAAawC,UAAU,SAASoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAAM5D,SAC5MF,cAACoE,IAAG,CAACxD,GAAI,CAACwB,MAAO,IAAKkC,GAAI,mBAAmBpE,SAC3CF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,QAAUlC,SAC5BF,cAACmtB,KAAS,CAAClrB,MAAM,eACf0b,OAAO,aAAanb,MAAOyoB,EAAkB/Z,WAC7C6b,UAA8C,IAApCnc,EAAqBmU,WAC/BhN,UAAW,CACTgG,UACE,CACEvB,SAAUxG,EACV5L,GAAI,oBACJzK,OAA+D,IAAjDorB,EAA0B7Z,WAAW+D,QACnDiI,OAAS3a,GAAMgW,GAAWhW,EAAEI,OAAOH,MAAO,cAC1C5B,GAAI,CAAC,wBAAyB,CAAEosB,qBAAyD,IAApCpc,EAAqBmU,WAAsB,UAAY,OAGlHziB,SAAWE,GA3pCdA,KACnB,GAAGA,EAAM,CACP,MAAMka,EAAala,EAAMwb,GACtBlI,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAC7B,MAAMyf,EAAQ,IAAIvX,KACZwX,EAAkBD,EAAME,cAAgBzB,EAAWyB,cACnDC,EAAmBH,EAAMI,WAAa3B,EAAW2B,WACjDC,EAAiBL,EAAMM,UAAY7B,EAAW6B,UAC9CC,EAAMP,EAAME,cAAgBzB,EAAWyB,cAE7C,IAAIM,EAAgC,GAAlBP,EAAuBE,EACrCM,EAAYJ,EAEZA,EAAiB,IACnBG,GAAe,EACfC,GAAa,IAGf,MAAMmN,EAA6B,IAAId,GAEvC,GAAG9M,EAAQvB,GAAc8B,EAAM,GAAKG,MAAMH,IAAQC,EAAc,IAAuB,KAAhBA,GAAsBC,EAAY,GACvGmN,EAA2B3a,WAAW8D,MAAQ,sFAC9C6W,EAA2B3a,WAAWgE,aAAc,EACpD2W,EAA2B3a,WAAW+D,SAAU,EAChD4W,EAA2B3a,WAAWiE,OAAQ,EAC9C6V,EAA6Ba,GAE7BX,GAAqBU,IACnBA,EAAsB1a,WAAa1O,EAC5B,IACFopB,UAKL,CACgB,eAAf1U,GACDC,EAAc,MAGhB,MAAMkC,EAAgBuE,KAAOlB,GAAYiB,OAAO,cAChDsL,GAAwBrM,IACxBA,EAAyBrI,QAAQrD,WAAamI,EACrC,IACFuD,MAIPsO,GAAqBU,IACnBA,EAAsB1a,WAAa1O,EAC5B,IACFopB,MAIPC,EAA2B3a,WAAW8D,MAAQ,GAC9C6W,EAA2B3a,WAAWgE,aAAc,EACpD2W,EAA2B3a,WAAW+D,SAAU,EAChD4W,EAA2B3a,WAAWiE,OAAQ,EAC9C6V,EAA6Ba,EAC/B,IACC,IAKL,GAqlC2CjN,CAAYpc,GACjC2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,+BASjDvC,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0BrW,OAAOM,QAAazU,KAAMwqB,EAA0BrW,OAAOQ,YAAawC,UAAU,MAAMoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAAM5D,SACjMF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOia,UAAW,QAAQnc,SAC5CF,cAACkK,IAAY,CAACkjB,eAAa,EAAChjB,GAAG,gBAAgB2iB,UAA8C,IAApCnc,EAAqBmU,WAC5EviB,MAAOyoB,EAAkBvW,OAAOlS,MAChC2H,QAASqL,EACTlL,eAAiBC,GAAWA,EAAOmL,WACnClL,aAAcA,CAAChN,EAAO+M,IACpBvK,cAAA,SAAQxC,EAAK0C,SACVqK,EAAOmL,aAGZpT,SAAUA,CAACC,EAAGC,IAxmCTwa,EAACza,EAAGC,KAmBzB,GAlBkB,WAAf0U,GACDC,EAAc,MAGhB8R,GAAwBrM,IACtBA,EAAyBrI,QAAQG,OAASlS,EAAMmT,YACzC,IACFiH,MAIPsO,GAAqBU,IACnBA,EAAsBlX,OAAOlS,MAAQA,EAC9B,IACFopB,MAIJb,EAA0BrW,OAAOO,QAAQ,CAC1C,MAAM4W,EAA6B,IAAId,GACvCc,EAA2BnX,OAAOM,MAAQ,GAC1C6W,EAA2BnX,OAAOQ,aAAc,EAChD2W,EAA2BnX,OAAOO,SAAU,EAC5C4W,EAA2BnX,OAAOS,OAAQ,EAC1C6V,EAA6Ba,EAC/B,GA8kCwC7O,CAAeza,EAAGC,GAC1C2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,mBACnChC,KAAM0qB,EAAkBvW,OAAOmB,WAC/BoH,QAASA,IAAM7E,GAAY,UAC3B8E,OAAS3a,GAAMgW,GAAWhW,EAAEI,OAAOH,MAAO,UAC1CwQ,cAAc,EACdtI,YAAcC,GACZ3K,cAAC+B,IAAS,IAAK4I,EACb1I,MAAM,oBACNua,SAAWC,GAAUA,GAAwB,WAAfvF,GAA2BuF,EAAMtH,QAC/DxV,OAA2D,IAA7CorB,EAA0BrW,OAAOO,QAC/CrU,GAAI,CAAC,wBAAyB,CAAEosB,qBAAyD,IAApCpc,EAAqBmU,WAAsB,UAAY,OAGhH5H,kBAAgB,EAChBC,UAAW,aAQnBpd,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0B1V,SAASL,QAAazU,KAAMwqB,EAA0B1V,SAASH,YAAawC,UAAU,OAAOoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAAM5D,SACtMF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,QAASia,UAAW,QAAQnc,SAC9CF,cAACkK,IAAY,CAACkjB,eAAa,EAAChjB,GAAG,kBAAkB2iB,UAA8C,IAApCnc,EAAqBmU,aAA2E,IAApDnU,EAAqBoY,2BAC1HxmB,MAAOyoB,EAAkB5V,SAAS7S,MAClC2H,QAASwM,EACTkI,cAAe,wBACfpG,cAAeA,EACfnO,eAAiBC,GAAWA,EAAO2N,KACnC1N,aAAcA,CAAChN,EAAO+M,IACpBvK,cAAA,SAAQxC,EAAK0C,SACVqK,EAAO2N,OAGZ5V,SAAUA,CAACC,EAAGC,IA5mCR9D,OAAO6D,EAAGC,KA8BhC,GA7BkB,aAAf0U,GACDC,EAAc,MAGhB+T,GAAqBU,IACnBA,EAAsBvW,SAAS7S,MAAQA,EAChC,IACFopB,MAIiC,OAArCX,EAAkB3V,SAAS9S,OAC5B0oB,GAAqBU,IACnBA,EAAsBtW,SAAS9S,MAAQ,KAChC,IACFopB,MAK2B,OAAjCX,EAAkB1V,KAAK/S,OACxB0oB,GAAqBU,IACnBA,EAAsBrW,KAAK/S,MAAQ,KAC5B,IACFopB,MAKNb,EAA0B1V,SAASJ,QAAQ,CAC5C,MAAM4W,EAA6B,IAAId,GACvCc,EAA2BxW,SAASL,MAAQ,GAC5C6W,EAA2BxW,SAASH,aAAc,EAClD2W,EAA2BxW,SAASJ,SAAU,EAC9C4W,EAA2BxW,SAASF,OAAQ,EAC5C6V,EAA6Ba,EAC/B,CAEA5U,GAAYwC,IACVA,EAAa1C,KAAO,GACb,IAAI0C,MAGb3C,GAAgB0C,IACdA,EAAiBvb,SAAU,EACpB,IAAIub,MAGb,MAAMwB,QAA6BrH,GAAgBnR,EAAM6Q,MACzDyD,GAAgB0C,IACdA,EAAiBvb,SAAU,EAC3Bub,EAAiBzC,KAAOiE,EACjB,IAAIxB,KACX,EAsjCsCwF,CAAgBzc,EAAGC,GAC3C2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,mBACnChC,KAAM0qB,EAAkB5V,SAASQ,WACjCoH,QAASA,IAAM7E,GAAY,YAC3B8E,OAAS3a,GAAMgW,GAAWhW,EAAEI,OAAOH,MAAO,YAC1CwQ,cAAc,EACdtI,YAAcC,GACZ3K,cAAC+B,IAAS,IAAK4I,EACb1I,MAAM,oBACNua,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjExV,OAA6D,IAA/CorB,EAA0B1V,SAASJ,QACjDrU,GAAI,CAAC,wBAAyB,CAAEosB,qBAAyD,IAApCpc,EAAqBmU,WAAsB,UAAY,OAGhH5H,kBAAgB,EAChBC,UAAW,aAMnBpd,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0BzV,SAASN,QAAazU,KAAMwqB,EAA0BzV,SAASJ,YAAawC,UAAU,MAAMoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAAM5D,SACrMF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOia,UAAW,QAAQnc,SAC5CF,cAACkK,IAAY,CAACkjB,eAAa,EAAChjB,GAAG,kBAAkB2iB,UAA8C,IAApCnc,EAAqBmU,aAA2E,IAApDnU,EAAqBoY,2BAC1HxmB,MAAOyoB,EAAkB3V,SAAS9S,MAClC2H,QAAS0M,EAAaE,KACtB8H,cAAehI,EAAa5Y,QAAU,wBAAgB,GACtDsC,KAAM0qB,EAAkB3V,SAASO,WACjCoH,QAASA,IAAM7E,GAAY,YAC3B8E,OAAS3a,GAAMgW,GAAWhW,EAAEI,OAAOH,MAAO,YAC1CiW,cAAeA,EACfnO,eAAiBC,GAAWA,EAAO2N,KACnC1N,aAAcA,CAAChN,EAAO+M,IACpBvK,cAAA,SAAQxC,EAAK0C,SACVqK,EAAO+G,WAGZhP,SAAUA,CAACC,EAAGC,IAzlCP9D,OAAO6D,EAAGC,KAqBjC,GApBkB,aAAf0U,GACDC,EAAc,MAGhB+T,GAAqBU,IACnBA,EAAsBtW,SAAS9S,MAAQA,EAChC,IACFopB,MAI6B,OAAjCX,EAAkB1V,KAAK/S,OACxB0oB,GAAqBU,IACnBA,EAAsBrW,KAAK/S,MAAQ,KAC5B,IACFopB,MAKNb,EAA0BzV,SAASL,QAAQ,CAC5C,MAAM4W,EAA6B,IAAId,GACvCc,EAA2BvW,SAASN,MAAQ,GAC5C6W,EAA2BvW,SAASJ,aAAc,EAClD2W,EAA2BvW,SAASL,SAAU,EAC9C4W,EAA2BvW,SAASH,OAAQ,EAC5C6V,EAA6Ba,EAC/B,CAEA5U,GAAYwC,IACVA,EAAaxb,SAAU,EAChB,IAAIwb,MAGb,MAAMyB,QAAyBrH,GAAYrR,EAAM6Q,MACjD4D,GAAYwC,IACVA,EAAaxb,SAAU,EACvBwb,EAAa1C,KAAOmE,EACb,IAAIzB,KACX,EAijCsCwF,CAAiB1c,EAAGC,GAC5C2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,eACnCyQ,cAAc,EACdtI,YAAcC,GACZ3K,cAAC+B,IAAS,IAAK4I,EACb1I,MAAM,uBACNua,SAAWC,GAAUA,GAAwB,aAAfvF,GAA6BuF,EAAMtH,QACjExV,OAA6D,IAA/CorB,EAA0BzV,SAASL,QACjDrU,GAAI,CAAC,wBAAyB,CAAEosB,qBAAyD,IAApCpc,EAAqBmU,WAAsB,UAAY,KAC5GniB,WAAY,IACP+H,EAAO/H,WACVC,aACE1C,eAAAF,WAAA,CAAAC,SAAA,CACG2W,EAAa5Y,QAAU+B,cAAC8B,IAAgB,CAAC4B,MAAM,UAAUqb,KAAM,KAAS,KACxEpU,EAAO/H,WAAWC,mBAM7Bsa,kBAAgB,EAChBC,UAAW,aAMnBpd,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAAAC,WAAA,CAAAC,SACEF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0BxV,KAAKP,QAAazU,KAAMwqB,EAA0BxV,KAAKL,YAAawC,UAAU,SAASoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAAM5D,SAChMF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,QAASia,UAAW,QAAQnc,SAC9CF,cAACkK,IAAY,CAACkjB,eAAa,EAAChjB,GAAG,cAAc2iB,UAA8C,IAApCnc,EAAqBmU,aAA2E,IAApDnU,EAAqBoY,2BACtHxmB,MAAOyoB,EAAkB1V,KAAK/S,MAC9B2H,QAAS6M,EAASD,KAClB8H,cAAe7H,EAAS/Y,QAAU,wBAAgB,GAClDwa,cAAeA,EACfnO,eAAiBC,GAAWA,EAAO2N,KACnClF,cAAc,EACdxI,aAAcA,CAAChN,EAAO+M,IACpBvK,cAAA,SAAQxC,EAAK0C,SACVqK,EAAO+G,WAGZhP,SAAUA,CAACC,EAAGC,IAzlCb0c,EAAC3c,EAAGC,KAmBvB,GAlBkB,SAAf0U,GACDC,EAAc,MAGhB8R,GAAwBrM,IACtBA,EAAyBrI,QAAQP,SAAWxR,EAAM6Q,KAC3C,IACFuJ,MAIPsO,GAAqBU,IACnBA,EAAsBrW,KAAK/S,MAAQA,EAC5B,IACFopB,MAIJb,EAA0BxV,KAAKN,QAAQ,CACxC,MAAM4W,EAA6B,IAAId,GACvCc,EAA2BtW,KAAKP,MAAQ,GACxC6W,EAA2BtW,KAAKL,aAAc,EAC9C2W,EAA2BtW,KAAKN,SAAU,EAC1C4W,EAA2BtW,KAAKJ,OAAQ,EACxC6V,EAA6Ba,EAC/B,GA+jC0C3M,CAAa3c,EAAGC,GACxC2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,kBACnChC,KAAM0qB,EAAkB1V,KAAKM,WAC7BoH,QAASA,IAAM7E,GAAY,QAC3B8E,OAAS3a,GAAMgW,GAAWhW,EAAEI,OAAOH,MAAO,QAC1CkI,YAAcC,GACZ3K,cAAC+B,IAAS,IAAK4I,EACb1I,MAAM,yBACNua,SAAWC,GAAUA,GAAwB,SAAfvF,GAAyBuF,EAAMtH,QAC7DxV,OAAyD,IAA3CorB,EAA0BxV,KAAKN,QAC7CrU,GAAI,CAAC,wBAAyB,CAAEosB,qBAAyD,IAApCpc,EAAqBmU,WAAsB,UAAY,KAC5GniB,WAAY,IACP+H,EAAO/H,WACVC,aACE1C,eAAAF,WAAA,CAAAC,SAAA,CACG8W,EAAS/Y,QAAU+B,cAAC8B,IAAgB,CAAC4B,MAAM,UAAUqb,KAAM,KAAS,KACpEpU,EAAO/H,WAAWC,mBAM7Bsa,kBAAgB,EAChBC,UAAW,eAOrBpd,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0BtW,QAAQO,QAAazU,KAAMwqB,EAA0BtW,QAAQS,YAAawC,UAAU,SAASoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAAM5D,SACtMF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOX,QAAS,cAAe4a,UAAW,QAAQnc,SACpEF,cAAC+B,IAAS,CAACpC,OAA4D,IAA9CorB,EAA0BtW,QAAQQ,QAA0B8X,UAA8C,IAApCnc,EAAqBmU,WAClH9iB,MAAM,yBAAUC,QAAQ,WAAWkI,GAAG,iBAAiB4I,aAAa,MACpEwJ,SAAWC,GAAUA,GAAwB,YAAfvF,GAA4BuF,EAAMtH,QAChE7S,SAAWC,GA7lCJC,KACvB,MAAMka,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAY7B,GAXkB,YAAf0Y,GACDC,EAAc,MAGhB8R,GAAwBrM,IACtBA,EAAyBrI,QAAQE,QAAUiI,EACpC,IACFE,MAIJmO,EAA0BtW,QAAQQ,QAAQ,CAC3C,MAAM4W,EAA6B,IAAId,GACvCc,EAA2BpX,QAAQO,MAAQ,GAC3C6W,EAA2BpX,QAAQS,aAAc,EACjD2W,EAA2BpX,QAAQQ,SAAU,EAC7C4W,EAA2BpX,QAAQU,OAAQ,EAC3C6V,EAA6Ba,EAC/B,IACC,IAAI,EAmkC0B1M,CAAgB5c,EAAEI,OAAOH,OAC1C2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,yBACnC+Z,WAAY,CAAE1a,MAAO,CAAEorB,oBAAqBpc,EAAqBmU,WAAa,UAAa,UAC3FkI,iBAAqD,IAApCrc,EAAqBmU,WAAsB,CAACmI,OAAQ5gB,SAAQ,IAAU,aAM/FtM,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0BpW,eAAeK,QAAazU,KAAMwqB,EAA0BpW,eAAeO,YAAawC,UAAU,OAAOoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAAM5D,SAClNF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOX,QAAS,cAAe4a,UAAW,QAAQnc,SACpEF,cAAC+B,IAAS,CAACpC,OAAmE,IAArDorB,EAA0BpW,eAAeM,QAA0B8X,UAA8C,IAApCnc,EAAqBmU,WACzH9iB,MAAM,yBAAYC,QAAQ,WAAWkI,GAAG,wBAAwB4I,aAAa,MAC7EwJ,SAAWC,GAAUA,GAAwB,mBAAfvF,GAAmCuF,EAAMtH,QACvEnT,UAAW+oB,EAA0BpW,eAAeQ,MACpD7S,SAAWC,GAhlCGC,KAC9B,MAAMka,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAY7B,GAXkB,mBAAf0Y,GACDC,EAAc,MAGhB8R,GAAwBrM,IACtBA,EAAyBrI,QAAQI,eAAiB+H,EAC3C,IACFE,MAIJmO,EAA0BpW,eAAeM,QAAQ,CAClD,MAAM4W,EAA6B,IAAId,GACvCc,EAA2BlX,eAAeK,MAAQ,GAClD6W,EAA2BlX,eAAeO,aAAc,EACxD2W,EAA2BlX,eAAeM,SAAU,EACpD4W,EAA2BlX,eAAeQ,OAAQ,EAClD6V,EAA6Ba,EAC/B,IACC,IAAI,EAsjC0BzM,CAAuB7c,EAAEI,OAAOH,OACjD2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,sBACnC+Z,WAAY,CAAE1a,MAAO,CAAEorB,oBAAqBpc,EAAqBmU,WAAa,UAAa,UAC3FkI,iBAAqD,IAApCrc,EAAqBmU,WAAsB,CAACmI,OAAQ5gB,SAAQ,IAAU,aAM/FtM,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0BnW,YAAYI,QAAazU,KAAMwqB,EAA0BnW,YAAYM,YAAawC,UAAU,SAASoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAAM5D,SAC9MF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOia,UAAW,QAAQnc,SAC5CF,cAAC+B,IAAS,CAACpC,OAAgE,IAAlDorB,EAA0BnW,YAAYK,QAA0B8X,UAA8C,IAApCnc,EAAqBmU,WACtH9iB,MAAM,4BAAaC,QAAQ,WAAWkI,GAAG,qBAAqB4I,aAAa,MAC3EwJ,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpE7S,SAAWC,GAlkCAC,KAC3B,GAAa,KAAVA,EAAa,CACd,MAAMka,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KACX,gBAAf0Y,GACDC,EAAc,MAGhB,MAAM0U,EAA6B,IAAId,GACpCrO,EAAWjC,OAAS,IACrBoR,EAA2BjX,YAAYI,MAAQ,sEAC/C6W,EAA2BjX,YAAYM,aAAc,EACrD2W,EAA2BjX,YAAYK,SAAU,EACjD4W,EAA2BjX,YAAYO,OAAQ,EAC/C6V,EAA6Ba,KAG7B5C,GAAwBrM,IACtBA,EAAyBrI,QAAQK,YAAc8H,EACxC,IACFE,MAIPiP,EAA2BjX,YAAYI,MAAQ,GAC/C6W,EAA2BjX,YAAYM,aAAc,EACrD2W,EAA2BjX,YAAYK,SAAU,EACjD4W,EAA2BjX,YAAYO,OAAQ,EAE/C0W,EAA2B/W,YAAYE,MAAQ,GAC/C6W,EAA2B/W,YAAYI,aAAc,EACrD2W,EAA2B/W,YAAYG,SAAU,EACjD4W,EAA2B/W,YAAYK,OAAQ,EAC/C6V,EAA6Ba,GAC/B,GACC,IACL,KACI,CACF,MAAMA,EAA6B,IAAId,GACvCc,EAA2BjX,YAAYI,MAAQ,GAC/C6W,EAA2BjX,YAAYM,aAAc,EACrD2W,EAA2BjX,YAAYK,SAAU,EACjD4W,EAA2BjX,YAAYO,OAAQ,EAC/C6V,EAA6Ba,EAC/B,GAkhCiCxM,CAAoB9c,EAAEI,OAAOH,OAC9C2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,yBACnC2a,OAAS3a,GAAMgW,GAAWhW,EAAEI,OAAOH,MAAO,eAC1C8Z,WAAY,CAAE1a,MAAO,CAAEorB,oBAAqBpc,EAAqBmU,WAAa,UAAa,SAAUxI,UAAW,IAChH0Q,iBAAqD,IAApCrc,EAAqBmU,WAAsB,CAACmI,OAAQ5gB,SAAQ,IAAU,aAO/FtM,cAAC+B,IAAS,CAACE,MAAM,qBAAa8qB,UAA8C,IAApCnc,EAAqBmU,WAC3D7iB,QAAQ,WAAWkI,GAAG,wBAAwB4I,aAAa,MAC3DpS,GAAI,CAACwB,MAAO,QAAS,sBAAwB,CAACia,UAAW,SACzD/Z,SAAWC,GA1hCSC,KACZ,mBAAf0U,GACDC,EAAc,MAGhB,MAAMuF,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAQ7B,GAPAyqB,GAAwBrM,IACtBA,EAAyBrI,QAAQM,eAAiB6H,EAC3C,IACFE,MAIJmO,EAA0BpW,eAAeM,QAAQ,CAClD,MAAM4W,EAA6B,IAAId,GACvCc,EAA2BlX,eAAeK,MAAQ,GAClD6W,EAA2BlX,eAAeO,aAAc,EACxD2W,EAA2BlX,eAAeM,SAAU,EACpD4W,EAA2BlX,eAAeQ,OAAQ,EAClD6V,EAA6Ba,EAC/B,IACC,IAAI,EAggCoBvM,CAAuB/c,EAAEI,OAAOH,OACjD2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,sBACnC+Z,WAAY,CAAE1a,MAAO,CAAEorB,oBAAqBpc,EAAqBmU,WAAa,UAAa,UAC3FkI,iBAAqD,IAApCrc,EAAqBmU,WAAsB,CAACmI,OAAQ5gB,SAAQ,IAAU,OAGzFtM,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0BjW,YAAYE,QAAazU,KAAMwqB,EAA0BjW,YAAYI,YAAYhV,SACxJF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOia,UAAW,QAAQnc,SAC5CF,cAAC+B,IAAS,CAACE,MAAM,4BAAa8qB,UAA8C,IAApCnc,EAAqBmU,WAC3DvI,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpEjT,QAAQ,WAAWkI,GAAG,qBAAqB4I,aAAa,MACxD1Q,SAAWC,GAzgCDgd,EAAChd,EAAGC,KAK9B,GAJkB,gBAAf0U,GACDC,EAAc,MAGH,KAAV3U,EAAa,CACd,MAAMka,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAC7B,MAAMqtB,EAA6B,IAAId,GACpCrO,EAAWjC,OAAS,IACrBoR,EAA2B/W,YAAYE,MAAQ,sEAC/C6W,EAA2B/W,YAAYI,aAAc,EACrD2W,EAA2B/W,YAAYG,SAAU,EACjD4W,EAA2B/W,YAAYK,OAAQ,EAC/C6V,EAA6Ba,KAG7B5C,GAAwBrM,IACtBA,EAAyBrI,QAAQO,YAAc4H,EACxC,IACFE,MAIPiP,EAA2B/W,YAAYE,MAAQ,GAC/C6W,EAA2B/W,YAAYI,aAAc,EACrD2W,EAA2B/W,YAAYG,SAAU,EACjD4W,EAA2B/W,YAAYK,OAAQ,EAE/C0W,EAA2BjX,YAAYI,MAAQ,GAC/C6W,EAA2BjX,YAAYM,aAAc,EACrD2W,EAA2BjX,YAAYK,SAAU,EACjD4W,EAA2BjX,YAAYO,OAAQ,EAC/C6V,EAA6Ba,GAC/B,GACC,IACL,KACI,CACgB,gBAAf3U,GACDC,EAAc,MAGhB,MAAM0U,EAA6B,IAAId,GACvCc,EAA2B/W,YAAYE,MAAQ,GAC/C6W,EAA2B/W,YAAYI,aAAc,EACrD2W,EAA2B/W,YAAYG,SAAU,EACjD4W,EAA2B/W,YAAYK,OAAQ,EAC/C6V,EAA6Ba,EAC/B,GAq9BiCtM,CAAoBhd,EAAGA,EAAEI,OAAOH,OACjD2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,iBACnC2a,OAAS3a,GAAMgW,GAAWhW,EAAEI,OAAOH,MAAO,eAC1C8Z,WAAY,CAAE1a,MAAO,CAAEorB,oBAAqBpc,EAAqBmU,WAAa,UAAa,SAAUxI,UAAW,IAChH0Q,iBAAqD,IAApCrc,EAAqBmU,WAAsB,CAACmI,OAAQ5gB,SAAQ,IAAU,aAM/FtM,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0B3W,OAAOY,QAAazU,KAAMwqB,EAA0B3W,OAAOc,YAAa4X,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAAM5D,SACjLF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOia,UAAW,QAAQnc,SAC5CF,cAAC+B,IAAS,CAACE,MAAM,yBAAcC,QAAQ,WAAWkI,GAAG,gBAAgB4I,aAAa,MAAMrT,OAA2D,IAA7CorB,EAA0B3W,OAAOa,QACrIuH,SAAWC,GAAUA,GAAwB,WAAfvF,GAA2BuF,EAAMtH,QAC/DvS,WAAY,CAACC,aAAc7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAAC,UAC1DoC,SAAWC,GAj8BLC,KACtB,MAAMka,EAAala,EAEhBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAY7B,GAXkB,WAAf0Y,GACDC,EAAc,MAGhB8R,GAAwBrM,IACtBA,EAAyBxI,OAASsI,EAC3B,IACFE,MAIJmO,EAA0B3W,OAAOa,QAAQ,CAC1C,MAAM4W,EAA6B,IAAId,GACvCc,EAA2BzX,OAAOY,MAAQ,GAC1C6W,EAA2BzX,OAAOc,aAAc,EAChD2W,EAA2BzX,OAAOa,SAAU,EAC5C4W,EAA2BzX,OAAOe,OAAQ,EAC1C6V,EAA6Ba,EAC/B,IACC,IAAI,EAs6B0BpM,CAAeld,EAAEI,OAAOH,OACzC2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,yBAM3CvC,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0BtnB,OAAOuR,QAAazU,KAAMwqB,EAA0BtnB,OAAOyR,YAAawC,UAAU,OAAOoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAAM5D,SAClMF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOia,UAAW,QAAQnc,SAC5CF,cAAC+B,IAAS,CAACE,MAAM,uBAAeC,QAAQ,WAAWkI,GAAG,gBAAgB4I,aAAa,MAAMrT,OAA2D,IAA7CorB,EAA0BtnB,OAAOwR,QACtIuH,SAAWC,GAAUA,GAAwB,WAAfvF,GAA2BuF,EAAMtH,QAC/DvS,WAAY,CAACC,aAAc7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAAC,UAC1DoC,SAAWC,GA3+BLC,KACtB,MAAMka,EAAala,EAChBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAY7B,GAXkB,WAAf0Y,GACDC,EAAc,MAGhB8R,GAAwBrM,IACtBA,EAAyBnZ,OAASiZ,EAC3B,IACFE,MAIJmO,EAA0BtnB,OAAOwR,QAAQ,CAC1C,MAAM4W,EAA6B,IAAId,GACvCc,EAA2BpoB,OAAOuR,MAAQ,GAC1C6W,EAA2BpoB,OAAOyR,aAAc,EAChD2W,EAA2BpoB,OAAOwR,SAAU,EAC5C4W,EAA2BpoB,OAAO0R,OAAQ,EAC1C6V,EAA6Ba,EAC/B,IACC,IAAI,EAi9B0BrM,CAAejd,EAAEI,OAAOH,OACzC2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,oCAM3CvC,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0B1W,kBAAkBW,QAAazU,KAAMwqB,EAA0B1W,kBAAkBa,YAAawC,UAAU,YAAYoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IACvNiU,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN/N,QAAS,CAAEgO,OAAQ,CAAC,IAAK,QAI/BjY,SAEFF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,MAAOia,UAAW,QAAQnc,SAC5CF,cAAC+B,IAAS,CAACE,MAAM,8BAAcC,QAAQ,WAAWkI,GAAG,2BAA2B4I,aAAa,MAAMrT,OAAsE,IAAxDorB,EAA0B1W,kBAAkBY,QAC3JuH,SAAWC,GAAUA,GAAwB,sBAAfvF,GAAsCuF,EAAMtH,QAC1EvS,WAAY,CAACC,aAAc7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SAAC,UAC1DoC,SAAWC,GAx8BMC,KACjC,MAAMka,EAAala,EAEhBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAY7B,GAXkB,sBAAf0Y,GACDC,EAAc,MAGhB8R,GAAwBrM,IACtBA,EAAyBvI,kBAAoBqI,EACtC,IACFE,MAIJmO,EAA0B1W,kBAAkBY,QAAQ,CACrD,MAAM4W,EAA6B,IAAId,GACvCc,EAA2BxX,kBAAkBW,MAAQ,GACrD6W,EAA2BxX,kBAAkBa,aAAc,EAC3D2W,EAA2BxX,kBAAkBY,SAAU,EACvD4W,EAA2BxX,kBAAkBc,OAAQ,EACrD6V,EAA6Ba,EAC/B,IACC,IAAI,EA66B0BnM,CAA0Bnd,EAAEI,OAAOH,OACpD2Q,UAAY5Q,GAAMoQ,EAAcpQ,EAAG,8BAM3CvC,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0BN,YAAYzV,QAAazU,KAAMwqB,EAA0BN,YAAYvV,YAAawC,UAAU,SAASoV,YAAa,CAAClsB,GAAI,CAAEkD,OAAQ,IAAM5D,SAC9MF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,QAASia,UAAW,QAAQnc,SAC9CF,cAACkK,IAAY,CAACkjB,eAAa,EAAChjB,GAAG,qBAAqB2iB,UAA8C,IAApCnc,EAAqBmU,WACjFviB,MAAOyoB,EAAkBR,YAAYjoB,MACrC2H,QAASwgB,EACTrgB,eAAiBC,GAAWA,EAAOsgB,gBACnCrgB,aAAcA,CAAChN,EAAO+M,IACpBvK,cAAA,SAAQxC,EAAK0C,SACVqK,EAAOsgB,kBAGZvoB,SAAUA,CAACC,EAAGC,IA77BJ6qB,EAAC9qB,EAAGC,KAmB9B,GAlBkB,gBAAf0U,GACDC,EAAc,MAGhB8R,GAAwBrM,IACtBA,EAAyBoI,cAAgBxiB,EAAMwiB,cACxC,IACFpI,MAIPsO,GAAqBU,IACnBA,EAAsBnB,YAAYjoB,MAAQA,EACnC,IACFopB,MAIJb,EAA0BN,YAAYxV,QAAQ,CAC/C,MAAM4W,EAA6B,IAAId,GACvCc,EAA2BpB,YAAYzV,MAAQ,GAC/C6W,EAA2BpB,YAAYvV,aAAc,EACrD2W,EAA2BpB,YAAYxV,SAAU,EACjD4W,EAA2BpB,YAAYtV,OAAQ,EAC/C6V,EAA6Ba,EAC/B,GAm6BwCwB,CAAoB9qB,EAAGC,GAC/CjC,KAAM0qB,EAAkBR,YAAY5U,WACpCoH,QAASA,IAAM7E,GAAY,eAC3B8E,OAAS3a,GAAMgW,GAAWhW,EAAEI,OAAOH,MAAO,eAC1CwQ,cAAc,EACdtI,YAAcC,GACZ3K,cAAC+B,IAAS,IAAK4I,EACb1I,MAAM,4BACNua,SAAWC,GAAUA,GAAwB,gBAAfvF,GAAgCuF,EAAMtH,QACpExV,OAAgE,IAAlDorB,EAA0BN,YAAYxV,QACpDrU,GAAI,CACF,wBAAyB,CAAEosB,qBAAyD,IAApCpc,EAAqBmU,WAAsB,UAAY,IACvG,0OAA2O,CAACuI,YAAa,MAAOC,aAAc,OAC9Q,6NAA8N,CAACD,YAAa,MAAOC,aAAc,UAIvQpQ,kBAAgB,EAChBC,UAAW,aAMnBpd,cAACmc,KAAa,CAACpY,MAAOsT,EAAanX,SACjCF,cAACoc,KAAO,CAACpH,MAAOhV,cAAA,MAAI4B,MAAO,CAAE+B,OAAQ,OAAQzD,SAAE6qB,EAA0B1sB,OAAO2W,QAAazU,KAAMwqB,EAA0B1sB,OAAO6W,YAAYhV,SAC9IF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,QAASlC,SAC3BF,cAAC+B,IAAS,CAACzB,WAAS,EAAC2B,MAAM,mBAAaurB,WAAS,EAACC,KAAM,EAAGvrB,QAAQ,WAAWkI,GAAG,gBAAgB4I,aAAa,MAAMrT,OAA2D,IAA7CorB,EAA0B1sB,OAAO4W,QACjKrU,GAAI,CAAC,sBAAwB,CAACyb,UAAW,SACzC/Z,SAAWC,GA77BLC,KACtB,MAAMka,EAAala,EAEhBsT,EAAUqE,SACXwC,cAAc7G,EAAUqE,SAG1BrE,EAAUqE,QAAU3b,YAAW,KAC7ByqB,GAAwBrM,IACtBA,EAAyBve,OAASqe,EAC3B,IACFE,KAEL,GAOD,IAAI,EAy6B0B8Q,CAAenrB,EAAEI,OAAOH,eAMjDxC,cAAC2f,KAAgB,CAACC,QAAS5f,cAAC6f,KAAQ,CAACC,QAASmL,EAAkB3W,cAAgB1T,GAAI,CAACwB,MAAO,QAC1FH,MAAM,qDAAkCK,SAAWC,IAAMwd,OA76BxCC,EA66B4Dzd,EAAEI,OAAOmd,QA56BhGmJ,GAAwBrM,IACtBA,EAAyBtI,YAAc0L,EAChC,IACFpD,WAIPsO,GAAqBU,IACnBA,EAAsBtX,YAAc0L,EAC7B,IACF4L,MAXoB5L,KA66B8E,IAEjG7f,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUyC,GAAI,EAAGlC,MAAO,QAAQlC,SAAA,CACzEF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,UAAU9C,GAAI,CAACwN,GAAI,GAAIlN,QAASA,IAAM4kB,KAAwB5lB,SAAC,8BACjGF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,UAAUxC,QAASA,IAAMilB,KAAmBjmB,SAAC,yBAC/EF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,QAAQ9C,GAAI,CAACsP,GAAI,GAAIhP,QAASA,IAAM+qB,KAA4B/rB,SAAC,sCAM3GF,cAACylB,GAAgB,CACfa,0BAA2BA,EAA2BJ,6BAA8BA,EACpFC,iBAAkBA,GAAkB5L,2BAA4B/c,EAAM+c,2BACtEgM,mCAAoCA,EAAoCN,sCAAuCA,EAC/GrV,qBAAsBA,IAGxB5Q,cAAConB,GAAU,CACT8B,oBAAqBA,EAAqBd,uBAAwBA,EAClExX,qBAAsBA,EAAsBqY,wBAAyBA,IAGvEjpB,cAACiqB,GAAqB,CACpBG,uBAAwBA,EAAwBD,0BAA2BA,EAC3ElB,wBAAyBA,EACzBoB,uBAAwBA,EAAwBS,0BAA2BA,IAG7E9qB,cAACwT,GAAe,CACdC,oBAAqBA,EAAqB2D,uBAAwBA,MAI1E,EC36DeuW,OAxGf,WAEE,MAAM,KAAE1oB,EAAI,QAAEhH,GAAY2J,qBAAWpD,GAE/ByH,EAAUpH,wBAET+oB,EAAmBrL,GAAwBvkB,oBAAS,IAEpDykB,EAAyBlI,GAA8Bvc,oBAAS,IAChE8tB,EAA+B5G,GAAoClnB,sBAEnEmoB,EAAkB0H,GAAuB7vB,oBAAS,IAClD8vB,EAAiCC,GAAsC/vB,oBAAS,IAChFiuB,EAA2B+B,GAAgChwB,oBAAS,GAmD3E,OArCAgJ,qBAAU,MACO,IAAZ/I,GAAqBgH,EAAKD,SACF,YAAtBC,EAAKoF,cACN4B,EAAQ4B,KAAK,OAEjB,GACC,CAAC5P,EAASgH,IAEb+B,qBAAU,KACR,MAAM2L,EAAiBvU,IACA,MAAlBA,EAAMokB,SACPpkB,EAAMmR,iBAtBVwe,GAAmC,IA0BP,MAAlB3vB,EAAMokB,SACZpkB,EAAMmR,iBAvBVse,GAAoB,IA2BQ,MAAlBzvB,EAAMokB,UACZpkB,EAAMmR,iBAxBVye,GAA6B,GA8B3B,EAKF,OAFApb,SAASC,iBAAiB,UAAWF,GAE9B,KACLC,SAASE,oBAAoB,UAAWH,EAAc,CACvD,GACA,IAGD3S,cAAAC,WAAA,CAAAC,SACKF,cAACiQ,KAAS,CAAC5P,SAAS,KAAKO,GAAI,CAAC0D,GAAI,KAAKpE,SACpCF,cAACoE,IAAG,CAACxD,GAAI,CAAEkX,QAAS,OAAQrU,OAAQ,QAAQvD,SAC1CC,eAACsmB,KAAI,CAACC,WAAS,EAACpjB,QAAS,EAAG1C,GAAI,CAACqtB,WAAY,GAAG/tB,SAAA,CAC9CF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SACfF,cAACkgB,GAAoB,CACnBuC,wBAAyBA,EAAyBlI,2BAA4BA,EAC9EqT,kBAAmBA,EAAmBrL,qBAAsBA,EAC5DuJ,8BAA+BA,EAA+B5G,iCAAkCA,MAIpGllB,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SACd0tB,EACC5tB,cAAA,OAAK4B,MAAO,CAACqsB,WAAY,QAAQ/tB,SAC/BF,cAACkuB,KAAQ,CAAChsB,QAAQ,cAAcE,MAAM,OAAOqB,OAAQ,QAGvDzD,cAACsqB,GAAW,CACViC,UAAWuB,EAAiCtB,aAAcuB,EAC1DtB,UAAWtG,EAAkBuG,aAAcmB,EAC3ClB,UAAWV,EAA2BW,aAAcoB,EACpDvL,wBAAyBA,EAAyBlI,2BAA4BA,EAC9EuR,8BAA+BA,EAA+B5G,iCAAkCA,cActH,E,oDCqceiJ,OAnhBf,WACI,MAAM,KAAElpB,EAAI,QAAEhH,GAAY2J,qBAAWpD,GAE/ByH,EAAUpH,wBAETsb,EAAYC,GAAiBpiB,mBAAS,CAACqiB,UAAW,EAAGC,UAAW,6CAChE8N,EAAkC5N,GAA4BxiB,mBACjE,CACI,CAAEsiB,UAAW,0CAAyBG,YAAa,GACnD,CAAEH,UAAW,uCAAwBG,YAAa,GAClD,CAAEH,UAAW,wCAAuBG,YAAa,MAIlD4N,EAAiBC,GAAsBtwB,sBAEvC8iB,EAAqBC,GAA0B/iB,mBAAS,KAExDuwB,EAAqCC,GAA0CxwB,mBAAS,KACxFywB,EAAkCC,GAAuC1wB,sBACzE2wB,EAAiCC,GAAsC5wB,mBAAS,KAEhF6wB,EAAkBC,GAAuB9wB,oBAAS,IAElD+wB,EAAMC,GAAWhxB,mBAAS,IAC1BixB,EAAWC,GAAgBlxB,sBAE3BiU,EAAiBkd,GAAsBnxB,qBAExCoxB,EAAkBtvB,IAEpB,GAAGA,EAAK,CACJ,MAAMuvB,EAAsB1F,KAAK2F,KAAKxvB,EAAK2a,OAF1B,GAGX8U,EAHW,GAGGR,EAAO,GACrBS,EAAkB1vB,EAAK2vB,MAAMF,EAAYA,EAJ9B,GAMjBb,EAAoCc,GACpCZ,EAAmCY,GAEnCN,EAAaG,EACjB,KACI,CACA,MAAMA,EAAsB1F,KAAK2F,KAAKf,EAAoC9T,OAZzD,GAaX8U,EAbW,GAaGR,EAAO,GACrBS,EAAkBjB,EAAoCkB,MAAMF,EAAYA,EAd7D,GAgBjBb,EAAoCc,GACpCZ,EAAmCY,GAEnCN,EAAaG,EACjB,GA8IEhO,EAAiBA,CAACC,EAAUC,KAC9B,MAAMC,EAAsBD,EAAW3I,cACvC,OAAO0I,EAASzI,QAAO4I,IACrB,MAAM,UAAEjQ,EAAS,gBAAEuQ,EAAe,YAAEnN,EAAW,YAAEE,GAAgB2M,EACjE,OAAOjQ,EAAUoH,cAAcM,SAASsI,IAAwBO,EAAgBnJ,cAAcM,SAASsI,IAAwB5M,EAAYgE,cAAcM,SAASsI,IAAwB1M,EAAY8D,cAAcM,SAASsI,EAAoB,GACjP,EAGA1L,EAAYC,iBAAO,MAuBnB2Z,EAA0BhxB,UAC5BowB,GAAoB,GAEpB,MAAMa,EAAsB1d,EAAgBoJ,MAAKnB,GAAQA,EAAK/H,gBAAkBA,IAC1Eyd,QAAuC5d,GAAuB2d,EAAqB,GACzF,GAA6C,MAA1CC,EAA+B/vB,OAAe,CAE7C,MAAMgwB,QAAwChe,KAEnB,KAAxBiP,GACCC,EAAuB,IAG3BuN,EAAmBuB,GAEnB,MAAMC,EAA4BD,EAAgChX,QAAOqB,GAAkC,IAA1BA,EAAKhI,mBAC/E6d,EAAoCF,EAAgChX,QAAOqB,GAAkC,IAA1BA,EAAKhI,mBACzF8d,EAAoCH,EAAgChX,QAAOqB,GAAkC,IAA1BA,EAAKhI,mBAExF+d,EAAyC,CAC3C,CAAE3P,UAAW,0CAAyBG,YAAaqP,EAA0BrV,QAC7E,CAAE6F,UAAW,uCAAwBG,YAAasP,EAAkCtV,QACpF,CAAE6F,UAAW,wCAAuBG,YAAauP,EAAkCvV,SAKvF,GAFA+F,EAAyByP,GAEG,IAAzB9P,EAAWE,UAAgB,CAC1B,MAAM6P,EAA2BJ,EAA0BthB,KAAK0L,IAExD,CACI/H,cAAe+H,EAAK/H,cACpBC,gBAAiB8H,EAAK9H,oBAMlC+c,EAAmBe,GACnB1B,EAAuCsB,GACvCV,EAAeU,EACnB,MAEK,GAA4B,IAAzB3P,EAAWE,UAAgB,CAC/B,MAAM8P,EAAmCJ,EAAkCvhB,KAAK0L,IAExE,CACI/H,cAAe+H,EAAK/H,cACpBC,gBAAiB8H,EAAK9H,oBAMlC+c,EAAmBgB,GACnB3B,EAAuCuB,GACvCX,EAAeW,EACnB,KACI,CACA,MAAMK,EAAmCJ,EAAkCxhB,KAAK0L,IAExE,CACI/H,cAAe+H,EAAK/H,cACpBC,gBAAiB8H,EAAK9H,oBAMlC+c,EAAmBiB,GACnB5B,EAAuCwB,GACvCZ,EAAeY,EACnB,CAEAjxB,IAAMgB,QAAQ6vB,EAA+B9vB,KAAM,CAACb,QAAS,kCACjE,MAEIF,IAAMY,MAAMiwB,EAA+B9vB,KAAM,CAACb,QAAS,iCAE/D6vB,GAAoB,EAAM,EAGxBuB,EAA0B3xB,UAC5BowB,GAAoB,GAEpB,MAAMa,EAAsB1d,EAAgBoJ,MAAKnB,GAAQA,EAAK/H,gBAAkBA,IAC1Eyd,QAAuC5d,GAAuB2d,EAAqB,GACzF,GAA6C,MAA1CC,EAA+B/vB,OAAe,CAC7C,MAAMgwB,QAAwChe,KAEnB,KAAxBiP,GACCC,EAAuB,IAG3BuN,EAAmBuB,GAEnB,MAAMC,EAA4BD,EAAgChX,QAAOqB,GAAkC,IAA1BA,EAAKhI,mBAC/E6d,EAAoCF,EAAgChX,QAAOqB,GAAkC,IAA1BA,EAAKhI,mBACzF8d,EAAoCH,EAAgChX,QAAOqB,GAAkC,IAA1BA,EAAKhI,mBAExF+d,EAAyC,CAC3C,CAAE3P,UAAW,0CAAyBG,YAAaqP,EAA0BrV,QAC7E,CAAE6F,UAAW,uCAAwBG,YAAasP,EAAkCtV,QACpF,CAAE6F,UAAW,wCAAuBG,YAAauP,EAAkCvV,SAKvF,GAFA+F,EAAyByP,GAEG,IAAzB9P,EAAWE,UAAgB,CAC1B,MAAM6P,EAA2BJ,EAA0BthB,KAAK0L,IAExD,CACI/H,cAAe+H,EAAK/H,cACpBC,gBAAiB8H,EAAK9H,oBAMlC+c,EAAmBe,GACnB1B,EAAuCsB,GACvCV,EAAeU,EACnB,MAEK,GAA4B,IAAzB3P,EAAWE,UAAgB,CAC/B,MAAM8P,EAAmCJ,EAAkCvhB,KAAK0L,IAExE,CACI/H,cAAe+H,EAAK/H,cACpBC,gBAAiB8H,EAAK9H,oBAMlC+c,EAAmBgB,GACnB3B,EAAuCuB,GACvCX,EAAeW,EACnB,KACI,CACA,MAAMK,EAAmCJ,EAAkCxhB,KAAK0L,IAExE,CACI/H,cAAe+H,EAAK/H,cACpBC,gBAAiB8H,EAAK9H,oBAMlC+c,EAAmBiB,GACnB5B,EAAuCwB,GACvCZ,EAAeY,EACnB,CAEAjxB,IAAMgB,QAAQ6vB,EAA+B9vB,KAAM,CAACb,QAAS,kCACjE,MAEIF,IAAMY,MAAMiwB,EAA+B9vB,KAAM,CAACb,QAAS,iCAE/D6vB,GAAoB,EAAM,EAmB9B,OAhBA9nB,qBAAU,KAzU4BtI,WAClCowB,GAAoB,GACpB,MAAMe,QAAwChe,KAE9Cyc,EAAmBuB,GAEnB,MAAMC,EAA4BD,EAAgChX,QAAOqB,GAAkC,IAA1BA,EAAKhI,mBAC/E6d,EAAoCF,EAAgChX,QAAOqB,GAAkC,IAA1BA,EAAKhI,mBACzF8d,EAAoCH,EAAgChX,QAAOqB,GAAkC,IAA1BA,EAAKhI,mBAExF+d,EAAyC,CAC3C,CAAE3P,UAAW,0CAAyBG,YAAaqP,EAA0BrV,QAC7E,CAAE6F,UAAW,uCAAwBG,YAAasP,EAAkCtV,QACpF,CAAE6F,UAAW,wCAAuBG,YAAauP,EAAkCvV,SAKvF,GAFA+F,EAAyByP,GAEG,IAAzB9P,EAAWE,UAAgB,CAC1B,MAAM6P,EAA2BJ,EAA0BthB,KAAK0L,IAExD,CACI/H,cAAe+H,EAAK/H,cACpBC,gBAAiB8H,EAAK9H,oBAMlC+c,EAAmBe,GACnB1B,EAAuCsB,GACvCV,EAAeU,EACnB,MAEK,GAA4B,IAAzB3P,EAAWE,UAAgB,CAC/B,MAAM8P,EAAmCJ,EAAkCvhB,KAAK0L,IAExE,CACI/H,cAAe+H,EAAK/H,cACpBC,gBAAiB8H,EAAK9H,oBAMlC+c,EAAmBgB,GACnB3B,EAAuCuB,GACvCX,EAAeW,EACnB,KAEI,CACA,MAAMK,EAAmCJ,EAAkCxhB,KAAK0L,IAExE,CACI/H,cAAe+H,EAAK/H,cACpBC,gBAAiB8H,EAAK9H,oBAMlC+c,EAAmBiB,GACnB5B,EAAuCwB,GACvCZ,EAAeY,EACnB,CAEAlB,GAAoB,EAAM,EAwQ1BwB,EAA+B,GAChC,IAEHtpB,qBAAU,MACS,IAAZ/I,GAAqBgH,EAAKD,SACF,YAAtBC,EAAKoF,cACN4B,EAAQ4B,KAAK,OAEjB,GACC,CAAC5P,EAASgH,IAEf+B,qBAAU,KACNooB,GAAgB,GACjB,CAACL,IAGA5uB,eAAC8P,KAAS,CAAC5P,SAAS,KAAKO,GAAI,CAAC0D,GAAI,EAAGxD,EAAG,GAAIZ,SAAA,CACxCF,cAAC2jB,KAAc,CAAC9T,UAAW+T,KAAOhjB,GAAI,CAAC6C,OAAQorB,EAAmB,QAAU,OAAQ1tB,SAAU,YAAYjB,SACrG2uB,EACG7uB,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,SAAU+B,OAAQ,QAAQvD,SAAA,CAChHF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,mFAIrDC,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACiE,IAAG,CAAAlE,SAAA,CACAF,cAACqD,IAAK,CAACE,UAAU,MAAMD,QAAS,EAAG1C,GAAI,CAACiB,eAAgB,SAAUyC,GAAI,KAAKpE,SACtEkuB,EAAiC5f,KAAI,CAAC+hB,EAAkCC,IACrExwB,cAAC8iB,KAAK,CAACC,aAAcwN,EAAiC9P,YAAa/c,MAAM,QAAOxD,SAC5EF,cAACgjB,KAAI,CAAC/gB,MAAOsuB,EAAiCjQ,UAAW5c,MAAO8sB,IAAsCrQ,EAAWE,UAAY,UAAY,UACrInf,QAASA,IArStB+hB,EAACC,EAAW5C,KAEnC,GADAF,EAAc,CAACC,UAAW6C,EAAW5C,UAAWA,IAC/B,IAAd4C,EAAgB,CACf,MAAM4M,EAA4BzB,EAAgBxV,QAAOqB,GAAkC,IAA1BA,EAAKhI,mBAEhEge,EAA2BJ,EAA0BthB,KAAK0L,IAExD,CACI/H,cAAe+H,EAAK/H,cACpBC,gBAAiB8H,EAAK9H,oBAMlC+c,EAAmBe,GACnB1B,EAAuCsB,GACvCV,EAAeU,EACnB,MACK,GAAiB,IAAd5M,EAAgB,CACpB,MAAM6M,EAAoC1B,EAAgBxV,QAAOqB,GAAkC,IAA1BA,EAAKhI,mBAExEie,EAAmCJ,EAAkCvhB,KAAK0L,IAExE,CACI/H,cAAe+H,EAAK/H,cACpBC,gBAAiB8H,EAAK9H,oBAMlC+c,EAAmBgB,GACnB3B,EAAuCuB,GACvCX,EAAeW,EACnB,KACI,CACA,MAAMC,EAAoC3B,EAAgBxV,QAAOqB,GAAkC,IAA1BA,EAAKhI,mBAExEke,EAAmCJ,EAAkCxhB,KAAK0L,IAExE,CACI/H,cAAe+H,EAAK/H,cACpBC,gBAAiB8H,EAAK9H,oBAMlC+c,EAAmBiB,GACnB5B,EAAuCwB,GACvCZ,EAAeY,EACnB,GAiPmD/M,CAAmBuN,EAAmCD,EAAiCjQ,cAAc,qBAAAhjB,OAFjBkzB,QAOnHrwB,eAACkE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACgJ,UAAW,SAAU5I,SAAU,UAAWD,WAAY,UAAUb,SAAA,CAAC,gBAAWigB,EAAWG,UAAU,+BAE/HtgB,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUQ,GAAI,GAAGnC,SACxDF,cAAC+B,IAAS,CAACnB,GAAI,CAACwB,MAAO,IAAK,iCAAkC,CAACwH,UAAW,WAAYmV,KAAK,QACvF7c,QAAQ,WAAWqhB,YAAY,2FAA+C/gB,MAAOse,EAAqBxe,SAAWC,GAvPvHC,KAC1B,MAAMka,EAAala,EACnBue,EAAuBrE,GAGrBkS,EADW,KAAVpsB,EACkCisB,EAEApN,EAAeoN,EAAkC/R,GACtF,EA+OuJ8G,CAAqBjhB,EAAEI,OAAOH,OACzJI,WAAY,CACR6gB,eACIzjB,cAAC8C,IAAc,CAAC3B,SAAS,QAAOjB,SAACF,cAAC0jB,KAAU,MAEhD7gB,aACI7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SACD,KAAxB4gB,EACG9gB,cAACsB,IAAS,CAACV,GAAI,CAACwiB,OAAQ,WAAYC,YAAY,SAC5CniB,QAASA,IAAM,CAAC6f,EAAuB,IAAK6N,EAAmCH,MAGnF,eAS5BtuB,eAAC6jB,KAAK,CAACC,cAAY,EAAA/jB,SAAA,CACfF,cAACmkB,KAAS,CAAAjkB,SACNC,eAACikB,KAAQ,CAACxjB,GAAI,CAAC,OAAQ,CAAC8C,MAAO,mBAAoBO,gBAAiB,SAAS/D,SAAA,CACzEF,cAACqkB,KAAS,CAACC,MAAM,OAAMpkB,SAAE,4BACzBF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAUd,SAAC,mBAClDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAUd,SAAC,iBAElDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAUd,SAAC,2BAClDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAUd,SAAC,+BAClDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAUd,SAAC,sCAClDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAUd,SAAC,4BAClDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAUd,SAAC,mCAClDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAUd,SAAC,6BAClDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAUd,SAAC,mBAI1DF,cAACukB,KAAS,CAAArkB,SACLyuB,EAAgCngB,KAAI,CAACiiB,EAA6BC,IAC/DvwB,eAACikB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAA8C/jB,GAAI,CAAC,SAAU,CAACqD,gBAAiB,kCAAkC/D,SAAA,CAClIF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAAEuwB,EAA4Bjf,YAC9FxR,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAAEuwB,EAA4B1O,kBAC9F/hB,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAAE0d,KAAO6S,EAA4BzO,aAAarE,OAAO,gBAEzH3d,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAAC0kB,WAAY,SAAUC,SAAU,SAAUC,aAAc,WAAYnlB,SAAU,IAAKW,SAAU,UAAUd,SAChIF,cAACoc,KAAO,CAACpH,MAAOhV,cAACqE,IAAU,CAACnC,QAAQ,YAAWhC,SAAEuwB,EAA4BxO,cAA0B/hB,SACnGF,cAAA,QAAAE,SAAOuwB,EAA4BxO,kBAG3CjiB,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAAiD,KAA/CuwB,EAA4B5b,eAAwB4b,EAA4B5b,eAAiB4b,EAA4B9b,iBAC/L3U,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAA8C,KAA5CuwB,EAA4B3b,YAAqB2b,EAA4B3b,YAAc2b,EAA4B7b,cACzL5U,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAAEuwB,EAA4BE,cAC9F3wB,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAAEuwB,EAA4BG,eAC9F5wB,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,QAAQlC,SACxCF,cAACqd,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAItd,SAChEF,cAACyd,KAAa,CAAClG,WAAY,CAAC,cAAcrX,SACtCF,cAACoE,IAAG,CAACxD,GAAI,CAACwB,MAAO,KAAKlC,SAClBF,cAAA,OAAK4B,MAAO,CAACQ,MAAO,QAAQlC,SACxBF,cAAC0d,KAAU,CAACzb,MAAM,oCAAoB4uB,aAAW,EAACC,QAASlT,OACvDD,OAAO,aAAanb,MAAOob,KAAO6S,EAA4Bre,iBAC9D9P,SAAWE,GA/RvCuuB,EAAC5e,EAAeC,KAC5C,GAAGA,EAAgB,CACf,MAAMsK,EAAatK,EAAgB4L,GAEhClI,EAAUqE,SACTwC,cAAc7G,EAAUqE,SAG5BrE,EAAUqE,QAAU3b,YAAW,KAC3B,MAAMyf,EAAQ,IAAIvX,KACZipB,EAAsB1d,EAAgBoJ,MAAKnB,GAAQA,EAAK/H,gBAAkBA,IAC1E6e,EAA4C,IAAItqB,KAAKipB,EAAoBvd,kBAE5E6L,GAASvB,GAAcA,GAAcsU,KACpCrB,EAAoBvd,gBAAkBwL,KAAOlB,GAAYiB,OAAO,cACpE,GACD,IACP,GA8Q6EoT,CAAwBN,EAA4Bte,cAAe3P,eAOhHxC,cAACqkB,KAAS,CAACC,MAAwD,IAAjDmM,EAA4Bve,iBAAyB,OAAS,SAAUtR,GAAI,CAACwB,MAAO,OAAQpB,SAAU,UAAUd,SAC5E,IAAjDuwB,EAA4Bve,iBACzB/R,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACixB,KAAS,CAAC5N,YAAY,uCAAkBziB,GAAI,CAAC8C,MAAO,QAAS0f,OAAQ,UAAWhV,GAAI,IAAMlN,QAASA,IAAMwuB,EAAwBe,EAA4Bte,iBAC9JnS,cAACkxB,KAAU,CAAC7N,YAAY,qCAAmBziB,GAAI,CAAC8C,MAAO,MAAO0f,OAAQ,WAAYliB,QAASA,IAAMmvB,EAAwBI,EAA4Bte,oBAGzJnS,cAAAC,WAAA,CAAAC,SACsD,IAAjDuwB,EAA4Bve,iBACzBlS,cAACkxB,KAAU,CAAC7N,YAAY,qCAAmBziB,GAAI,CAAC8C,MAAO,MAAO0f,OAAQ,WAAYliB,QAASA,IAAMmvB,EAAwBI,EAA4Bte,iBAErJnS,cAACixB,KAAS,CAAC5N,YAAY,uCAAkBziB,GAAI,CAAC8C,MAAO,QAAS0f,OAAQ,UAAWhV,GAAI,IAAMlN,QAASA,IAAMwuB,EAAwBe,EAA4Bte,uBAvC7Iue,eAoDjB,IAA3C/B,EAAgClU,SAAqC,IAArBoU,EAC7C7uB,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUyC,GAAI,EAAGlC,MAAO,QAAQlC,SACvEF,cAACmxB,KAAU,CAACC,MAAOnC,EAAWF,KAAMA,EAAMzsB,SArdjC+uB,CAACjzB,EAAOoE,KAC7BwsB,EAAQxsB,EAAM,EAodoEkB,MAAM,gBAGhF,OAIhB,E,oBCpiBA,IAAI4tB,GAyOWC,OAhOf,SAAyB/zB,GACrB,MAAM,KAAEyH,GAAS2C,qBAAWpD,GAEtBgtB,EAAazb,iBAAO,OAEnB0b,EAAkBC,GAAuB1zB,sBACzC2zB,EAAqBC,GAA0B5zB,qBAehD6zB,GAbYC,aAAW,CACzBC,KAAM,CACF,iBAAkB,CACdruB,MAAO,WAEX,6BAA8B,CAC1BA,MAAO,aAKHsuB,GAEOC,2BAAgB,CACnCT,WAAYA,EACZU,aAAcA,KAENZ,IACAA,IAAe,EACnB,KA6CR,OAzBAtqB,qBAAU,KACN,GAAGxJ,EAAM20B,qBAAuB30B,EAAMm0B,qBAAuBn0B,EAAMi0B,iBAAiB,CAChF,GAAGj0B,EAAM40B,mBAAmB,CACxB,MACMC,EApBuBvyB,KACrC,MAAMwyB,EAAsBxyB,EAAKyyB,aAAa/jB,KAAIgkB,IAC9C,MAAMC,EAA0BD,EAASE,iBAAiBlkB,KAAImkB,IAE1D,MAAMC,EAAmBD,EAAQE,yBAAyBha,QAAOia,IAAiC,IAArBA,EAASC,UAEtF,OAAOH,EAAiBnY,OAAS,EAAI,IAAKkY,EAASE,yBAA0BD,GAAqB,IAAI,IACvG/Z,QAAO8Z,GAAuB,OAAZA,IAGrB,OAAOF,EAAwBhY,OAAS,EAAI,IAAK+X,EAAUE,iBAAkBD,GAA4B,IAAI,IAC9G5Z,QAAO2Z,GAAyB,OAAbA,IAEtB,MAAO,IAAK1yB,EAAMyyB,aAAcD,EAAqB,EAOZU,CADN5Y,KAAEW,UAAUvd,EAAM40B,qBAGvCa,EAAyB7Y,KAAEW,UAAUvd,EAAMm0B,qBAC3CuB,EAAmCb,EAAyBE,aAAaj1B,OAAOE,EAAMm0B,oBAAoBwB,YAEhHF,EAAuBE,WAAaD,EACpCtB,EAAuBqB,EAC3B,MAEIrB,EAAuBp0B,EAAMm0B,qBAGjCD,EAAoBl0B,EAAMi0B,kBAC1BjzB,YAAW,KACPhB,EAAM41B,wBAAuB,GAC7BvB,IACAD,GAAwB,GACzB,IACP,IACD,CAACp0B,EAAM20B,oBAAqB30B,EAAMm0B,oBAAqBn0B,EAAMi0B,iBAAkBj0B,EAAM61B,aAGpFrzB,cAACI,IAAM,CAACwB,MAAO,CAACH,QAAS,QAASnB,WAAW,EAAMD,SAAU,KAAME,KAAM/C,EAAM20B,oBAAqBvxB,GAAI,CAAC,0BAA2B,CAACP,SAAU,UAAUH,SAKrJF,cAACuB,IAAa,CAACX,GAAI,CAACoC,QAAS,oBAAqBsB,GAAI,EAAGjC,GAAI,GAAI8mB,IAAKqI,EAAWtxB,SAC7EF,cAACoE,IAAG,CAAAlE,SACCyxB,GAAuBF,EACpBtxB,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACG,WAAY,SAAU6I,UAAW,SAAU4F,cAAe,aAAatP,SAAC,iCACtGF,cAAA,OAAK+P,UAAU,gBAAgBnO,MAAO,CAACya,UAAW,OAAQiX,aAAc,SAASpzB,SAC7EC,eAACsmB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAG4M,cAAe,CAAE3M,GAAI,EAAG4M,GAAI,EAAGC,GAAI,GAAI7yB,GAAI,CAACa,QAAS,QAAQvB,SAAA,CACxFF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,GAAG1mB,SAACC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,CAAC,aAAOF,cAAA,QAAM4B,MAAO,CAAC+B,OAAQ,EAAGX,QAAS,EAAGjC,WAAY,UAAUb,SAAEuxB,EAAiBrgB,mBAErJpR,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SAACC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,CAAC,mBAAQF,cAAA,QAAM4B,MAAO,CAAC+B,OAAQ,EAAGX,QAAS,EAAGjC,WAAY,UAAUb,SAAEuxB,EAAiBiC,oBACrJ1zB,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SAACC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,CAAC,sBAAWF,cAAA,QAAM4B,MAAO,CAAC+B,OAAQ,EAAGX,QAAS,GAAG9C,UAAsC,IAApCuxB,EAAiBkC,eAA0B,MAAQ,iBAEpK3zB,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SAACC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,CAAC,iBAAWF,cAAA,QAAM4B,MAAO,CAAC+B,OAAQ,EAAGX,QAAS,EAAGjC,WAAY,UAAUb,SAAE0d,KAAO6T,EAAiBmC,aAAajW,OAAO,qBACnL3d,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SAACC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,CAAC,cAAMF,cAAA,QAAM4B,MAAO,CAAC+B,OAAQ,EAAGX,QAAS,EAAGjC,WAAY,UAAUb,SAAEuxB,EAAiBoC,yBAEnJ7zB,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,GAAG1mB,SAACC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,CAAC,2BAASF,cAAA,QAAM4B,MAAO,CAAC+B,OAAQ,EAAGX,QAAS,GAAG9C,SAAEuxB,EAAiBqC,uBAEjI9zB,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SAACC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,CAAC,gDAAsBF,cAAA,QAAM4B,MAAO,CAAC+B,OAAQ,EAAGX,QAAS,EAAGjC,WAAY,UAAUb,SAAEuxB,EAAiBsC,kBACnK/zB,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SAACC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,CAAC,aAAKF,cAAA,QAAM4B,MAAO,CAAC+B,OAAQ,EAAGX,QAAS,GAAG9C,SAAEuxB,EAAiBuC,qBAE5Hh0B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SAACC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,CAAC,mBAAWF,cAAA,QAAM4B,MAAO,CAAC+B,OAAQ,EAAGX,QAAS,GAAG9C,SAAEuxB,EAAiBwC,eAAiB,aACnJj0B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SAACC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,CAAC,qBAAUF,cAAA,QAAM4B,MAAO,CAAC+B,OAAQ,EAAGX,QAAS,GAAG9C,SAAEuxB,EAAiByC,eAAiB,aAClJl0B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SAACC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,CAAC,yBAASF,cAAA,QAAM4B,MAAO,CAAC+B,OAAQ,EAAGX,QAAS,GAAG9C,SAAEuxB,EAAiB0C,0BAA4B,aAE5Jn0B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,GAAIhlB,MAAO,CAAC6B,OAAQ,QAAQvD,SAACC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,CAAC,uBAAUF,cAAA,QAAM4B,MAAO,CAAC+B,OAAQ,EAAGX,QAAS,EAAGjC,WAAY,UAAUb,SAAEyxB,EAAoByC,uBAyF5Lp0B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACG,WAAY,SAAUmP,GAAI,EAAG5L,GAAI,GAAGpE,SAAC,gBAC1EC,eAAA,OAAK4P,UAAU,OAAOnO,MAAO,CAACH,QAAS,OAAQI,eAAgB,gBAAiBosB,WAAY,OAAO/tB,SAAA,CAC/FC,eAAA,OAAK4P,UAAU,mBAAmBnO,MAAO,CAACQ,MAAO,SAASlC,SAAA,CACtDC,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC4O,cAAe,YAAazO,WAAY,UAAUb,SAAA,CAAC,mBAAW0d,KAAO+T,EAAoBvf,iBAAiBuL,OAAO,iBAErJgU,EAAoB0C,eAEjBl0B,eAAA,OAAK4P,UAAU,cAAcnO,MAAO,CAACH,QAAS,SAASvB,SAAA,CACnDF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC4O,cAAe,YAAazO,WAAY,UAAUb,SAAC,wBACxFF,cAACqE,IAAU,CAACnC,QAAQ,YAAWhC,SAAEyxB,EAAoBrd,cACrDtU,cAACqE,IAAU,CAACnC,QAAQ,YAAWhC,SAAEyxB,EAAoB2C,wBAMjEn0B,eAAA,OAAK4P,UAAU,YAAW7P,SAAA,CACtBF,cAACqE,IAAU,CAACnC,QAAQ,YAAWhC,SAAA,GAAA5C,OAAKsgB,OAASD,OAAO,MAAK,cAAArgB,OAAUsgB,OAASD,OAAO,SACnF3d,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC4O,cAAe,YAAa5F,UAAW,UAAU1J,SAAC,qCACvFF,cAAA,OAAK+P,UAAU,mBAAmBnO,MAAO,CAACoB,QAAS,UACnDhD,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAK,CAACG,WAAY,SAAU6I,UAAW,UAAU1J,SAAE+E,EAAK+C,wBAKpG,UAMxB,E,+CCwIeusB,OAhWf,SAA2B/2B,GACvB,MAAOg3B,EAAgCC,GAAqCz2B,sBACrEyV,EAAqB2D,GAA0BpZ,oBAAS,IAExDm0B,EAAqBiB,GAA0Bp1B,oBAAS,GAEzD8X,EAAYC,iBAAO,MACnB2e,EAAc3e,iBAAO,MACrBC,EAAeD,iBAAO,MActB4e,EAXY7C,aAAW,CACzBC,KAAM,CACJ,iBAAkB,CAChBruB,MAAO,WAET,6BAA8B,CAC5BA,MAAO,aAKCsuB,GAEV4C,EAAoCA,CAACx2B,EAAOC,KAC3CA,GAAqB,kBAAXA,IAITo2B,IACAj3B,EAAMq3B,+BAA8B,GACxC,EA8BEC,EAAiCp2B,UACnC0Y,GAAuB,GAEvB,MAAM2d,EAAiC3a,KAAE4a,MAAMx3B,EAAMy3B,4BACrDF,EAA+B5B,WAAa4B,EAA+B5B,WAAW3kB,KAAI0mB,IAAc,IACjGA,EAEHxC,iBAAkBwC,EAAexC,iBAAiB7Z,QAAOsc,GAAwBA,EAAqBtC,yBAAyBpY,OAAS,QAGxI5B,QAAOqc,GAAkBA,EAAexC,iBAAiBjY,OAAS,IAEtE,MAAM2a,ObyHa12B,WACvB,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,oCAAAO,OAAmCqU,GAAqBjI,GAC3FlK,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EajIwC41B,CAAmB73B,EAAMy3B,2BAA2BtjB,mBAoB1F,GAlBsC,MAAnCyjB,EAAwBv1B,QACvBk1B,EAA+B3iB,gBAAkBgjB,EAAwBt1B,KAAKsS,gBAC9E2iB,EAA+B7S,WAAakT,EAAwBt1B,KAAKoiB,WACzE6S,EAA+BnE,aAAewE,EAAwBt1B,KAAK8wB,aAExEmE,EAA+BV,gBAC9BU,EAA+BT,gBAAkBc,EAAwBt1B,KAAKw0B,gBAC9ES,EAA+BO,SAAWF,EAAwBt1B,KAAKw1B,SACvEP,EAA+BzgB,YAAc8gB,EAAwBt1B,KAAKwU,cAI9EvV,IAAMY,MAAMy1B,EAAwBt1B,KAAM,CAACb,QAAS,WAGxDw1B,EAAkCM,GAElC3d,GAAuB,GAC4B,KAAhD5Z,EAAMy3B,2BAA2Bb,WAAkB,CAClD,MAAM3Z,EAASia,EAAYva,QAAQ3X,MAAMiY,OACzCia,EAAYva,QAAQob,kBAAkB9a,EAAQA,GAC9Cia,EAAYva,QAAQhF,OACxB,MAEIuf,EAAYva,QAAQhF,OACxB,EAGEqgB,EAA6B92B,UAC/B00B,GAAuB,SDnHtB,IAAIz0B,SAASC,IAClB0yB,GAAiB1yB,CAAO,GCmHQ,EAG1B62B,EAAuB/2B,UAEzB,GADA0Y,GAAuB,GACpByC,IAAgB,CACf,GAAG2a,EAA+BrB,WAAWuC,MAAKR,IAAmD,IAAjCA,EAAeS,gBAAwB,CACvG,MAAMpD,EAAeiC,EAA+BrB,WAAWta,QAAOqc,IAAmD,IAAjCA,EAAeS,gBACjG7kB,EAAkB,CAAEU,UAAWgjB,EAA+BhjB,UAAW+gB,aAAcA,SACvF1hB,GAAqBC,EAC/B,CACA,MAAM8kB,EAAkCpB,EAA+BrB,WAAWta,QAAOqc,IAAoD,IAAlCA,EAAeW,iBAC1HrB,EAA+BrB,WAAayC,EAC5C,MAAME,ObvEWp3B,WACzB,MAAMzB,EAAQC,aAAaC,QAAQ,OACnC,aAAamC,IAAMqR,KAAK,GAADrT,OAAIP,GAAU,+BAA+Bg5B,EAChE,CACI34B,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAIpCuC,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EawD2Cu2B,CAAqBxB,GACrB,MAAlCsB,EAAuBj2B,cAChB21B,IACNz2B,IAAMgB,QAAQ+1B,EAAuBh2B,KAAM,CAACb,QAAS,aACrDzB,EAAMy4B,qCACNxB,IACAj3B,EAAMq3B,+BAA8B,IAGpC91B,IAAMY,MAAMm2B,EAAuBh2B,KAAM,CAACb,QAAS,WAEvDzB,EAAMy4B,qCACNxB,IACAj3B,EAAMq3B,+BAA8B,EACxC,CACAzd,GAAuB,EAAM,EAG3ByC,EAAgBA,KAClB,IAAI/a,GAAU,EAkBd,OAjBiD,OAA9C01B,EAA+BJ,aAC9BM,EAAYva,QAAQhF,QACpBpW,IAAMY,MAAM,0DAA+B,CAACV,QAAS,WACrDH,GAAU,GAGwC,iBAAnD01B,EAA+BpiB,kBAC9B4D,EAAamE,QAAQhF,QACrBpW,IAAMY,MAAM,mDAA8B,CAACV,QAAS,WACpDH,GAAU,GAGwC,KAAnD01B,EAA+BpiB,kBAC9B4D,EAAamE,QAAQhF,QACrBpW,IAAMY,MAAM,sDAA+B,CAACV,QAAS,WACrDH,GAAU,GAEPA,CAAO,EASlB,OANAkI,qBAAU,KACHxJ,EAAM04B,4BACLpB,GACJ,GACD,CAACt3B,EAAM04B,6BAGN/1B,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACC,IAAM,CAACE,WAAW,EAAMD,SAAU,KAAME,KAAM/C,EAAM04B,2BAA4Bz1B,QAASA,CAACrC,EAAOC,IAAWu2B,EAAkCx2B,EAAOC,GAASqC,sBAAsB,EAAKR,SAAA,CACtLF,cAACW,IAAW,CAACC,GAAI,CAAEG,WAAY,SAAUC,SAAU,OAAQ4I,UAAW,SAAUlG,MAAO,MAAO8L,cAAe,aAActP,SAAC,4CAC5HF,cAACiB,IAAU,CAACC,QAASA,IAAM0zB,IAAqCh0B,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACzGF,cAACsB,IAAS,CAACN,SAAS,YAExBhB,cAACuB,IAAa,CAACC,UAAQ,EAACZ,GAAI,CAACqb,GAAI,OAAQC,GAAI,QAAQhc,SACjDF,cAACoE,IAAG,CAACxD,GAAI,CAACqb,GAAI,EAAGC,GAAI,GAAGhc,SACpBF,cAACm2B,KAAI,CAACv1B,GAAI,CAACE,EAAG,GAAGZ,SACbF,cAACoE,IAAG,CAAAlE,SACCs0B,GACwD,IAArDA,EAA+BrB,WAAW1Y,OACtCza,cAAA,OAAK+P,UAAU,8BAA6B7P,SACvCs0B,EAA+BrB,WAAW3kB,KAAI,CAAC0mB,EAAgBkB,IAC5Dj2B,eAAA,OAAAD,SAAA,CACIF,cAACqE,IAAU,CAACzD,GAAI,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,YAAYxD,SAAEg1B,EAAemB,eAC3FnB,EAAexC,iBAAiBlkB,KAAI,CAAC2mB,EAAsBmB,IACxDn2B,eAAA,OAAK4P,UAAU,oCAAoCnO,MAAO,CAAC0xB,aAAc,QAAQpzB,SAAA,CAC7EF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACG,WAAY,SAAUC,SAAU,OAAQ4I,UAAW,UAAU1J,SAAEi1B,EAAqBoB,uBAExHpB,EAAqBtC,yBAAyBrkB,KAAI,CAACgoB,EAAcC,IAC9Dz2B,cAAA,OAAAE,SACIC,eAACsmB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAEzmB,SAAA,CACP,IAAlBu2B,EACGt2B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BgU,YAAa,MAAO51B,EAAG,IAAKZ,SACrFF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAEi1B,EAAqBwB,wBAGvD,UAA7CH,EAAaI,4BACVz2B,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAKhmB,GAAI,CAAC8hB,OAAQ,6BAA8BgU,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQI,eAAgB,SAAUF,WAAY,UAAUzB,SAAA,CACxJF,cAAC62B,KAAY,CAACj2B,GAAI,CAACI,SAAU,SAAU0C,MAAO,OAAQ0K,GAAI,MAC1DpO,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAU+1B,WAAY,OAAO52B,SAAEi1B,EAAqB4B,0BAGxH/2B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAKhmB,GAAI,CAAC8hB,OAAQ,6BAA8B5hB,EAAG,IAAKZ,SACnEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAUmP,GAAI,IAAKhQ,SAAEi1B,EAAqB6B,2BAIlHh3B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8B5hB,EAAG,IAAKZ,SACjEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAEi1B,EAAqB6B,2BAK7G,KAGJ72B,eAACiE,IAAG,CAAuCxC,MAAO,CAACH,QAAS,OAAQW,MAAO,QAAQlC,SAAA,CAC/EF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BuU,UAAW,MAAOP,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQE,WAAY,UAAUzB,SAC9IF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACI,SAAU,QAAQd,SAAEs2B,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVz2B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAKhmB,GAAI,CAAC8hB,OAAQ,6BAA8BuU,UAAW,MAAOP,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQI,eAAgB,UAAU3B,SACpJF,cAAC6f,KAAQ,CAACkN,UAAQ,EAACjN,QAAS0W,EAAaW,sBACrCxC,QAAS,CAAE5C,KAAM4C,EAAQ5C,MACzBnxB,GAAI,CAAC,+BAAgC,CAACI,SAAU,WAAY0C,MAAM,YAI1E1D,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAI1mB,SACfF,cAAA,OAAK+P,UAAU,kBAAiB7P,SAC5BF,cAAA,OAAK+P,UAAU,eAAc7P,SACzBF,cAACo3B,KAAgB,CAACrnB,UAAU,oBAAoB0d,KAAM,EAAGV,UAAQ,EAACljB,aAAc2sB,EAAaa,+BAM7Gr3B,cAAAC,WAAA,CAAAC,SACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SACbF,cAAA,OAAK+P,UAAU,kBAAiB7P,SAC5BF,cAAA,OAAK+P,UAAU,eAAc7P,SACzBF,cAACo3B,KAAgB,CAACrnB,UAAU,oBAAoB0d,KAAM,EAAGV,UAAQ,EAACljB,aAAc2sB,EAAaa,gCAI1G,gBAAA/5B,OA/Bem5B,QAkCvB,gBAAAn5B,OA/Dem5B,QAiE5B,oBAAAn5B,OArEqGg5B,QAuE7G,kBAAAh5B,OA1EkB84B,QAiFxCp2B,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAU6I,UAAW,UAAU1J,SAAC,oFAO7GF,cAACigB,KAAa,CAACrf,GAAI,CAACq2B,UAAW,mBAAmB/2B,SAC7Cs0B,EACGr0B,eAAA,OAAKyB,MAAO,CAACQ,MAAO,OAAQY,QAAS,qBAAqB9C,SAAA,CACtDF,cAACo3B,KAAgB,CAAgE7T,YAAY,6CAAsB3hB,MAAO,CAACQ,MAAO,OAAQY,QAAS,OAAQhC,SAAU,QAASsB,SAAWC,IAAM+0B,OA5OlL90B,EA4O8MD,EAAEI,OAAOH,WA3OxPsT,EAAUqE,QAAU3b,YAAW,KAC3Bi2B,GAAkC8C,IAC9BA,EAAmCnD,WAAa5xB,EACzC,IAAI+0B,KACb,GACH,MAN8B/0B,KA4O8N,EAAC2mB,IAAKuL,EAAa7qB,aAAc2qB,EAA+BJ,YAAW,cAAA92B,OAAjRk3B,EAA+BhjB,YAE/DgjB,EAA+BH,cAC5Br0B,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAACyB,GAAI,IAAKnC,SAAA,CACiC,KAA/Cs0B,EAA+BlgB,aAAqE,OAA/CkgB,EAA+BlgB,YACjF,KAEAtU,cAAAC,WAAA,CAAAC,SACIF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,WAAY3C,WAAY,SAAUC,SAAU,UAAUd,SAAA,IAAA5C,OAAMk3B,EAA+BlgB,iBAIpF,KAAnDkgB,EAA+BF,iBAA6E,OAAnDE,EAA+BF,gBACrF,KAEAt0B,cAAAC,WAAA,CAAAC,SACIF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,WAAY3C,WAAY,SAAUC,SAAU,UAAUd,SAAA,IAAA5C,OAAMk3B,EAA+BF,qBAI3F,KAA5CE,EAA+Bc,UAAgE,OAA5Cd,EAA+Bc,SAC/E,KAEAt1B,cAAAC,WAAA,CAAAC,SACIF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,WAAY3C,WAAY,SAAUC,SAAU,UAAUd,SAAA,IAAA5C,OAAMk3B,EAA+Bc,mBAOhJ,KAGHd,EAA+BpiB,gBAChCpS,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUQ,GAAI,GAAGnC,SAAA,CACxDC,eAACkE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC0D,GAAI,OAAQjC,GAAI,OAAQ+L,GAAI,GAAGlO,SAAA,CAAC,mCAAmBF,cAAA,QAAM4B,MAAO,CAACb,WAAY,SAAU2C,MAAO,WAAWxD,SAAEs0B,EAA+B5D,kBACxK5wB,cAACqd,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAItd,SAChEF,cAACyd,KAAa,CAAClG,WAAY,CAAC,cAAcrX,SACtCF,cAAC0d,KAAU,CAACzb,MAAM,oCAAoB4uB,aAAW,EAC7ClT,OAAO,aAAa9T,aAAc+T,KAAO4W,EAA+BpiB,iBACxE9P,SAAWE,GA9Q1BA,KAC1BA,IACIsT,EAAUqE,SACTwC,cAAc7G,EAAUqE,SAE5BrE,EAAUqE,QAAU3b,YAAW,KAC3B,MAAMke,EAAala,EAAMwb,GACnB3E,EAAgBuE,KAAOlB,GAAYiB,OAAO,cAC3B,iBAAlBtE,GACCob,GAAkC8C,IAC9BA,EAAmCnlB,gBAAkBiH,EAC9C,IAAIke,KAEnB,GACD,KACP,EA+PiExG,CAAwBvuB,GAC7CuV,UAAW,CACPgG,UAAW,CAAEvB,SAAUxG,eAQ3C,KAGRhW,cAAA,OAAK4B,MAAO,CAACH,QAAS,OAAQI,eAAgB,UAAU3B,SACpDC,eAACkD,IAAK,CAACC,QAAS,EAAGC,UAAU,MAAKrD,SAAA,CAC9BF,cAACwD,IAAM,CAAC5C,GAAI,CAACI,SAAU,OAAQwO,cAAe,QAAStN,QAAQ,YAAYhB,QAASA,IAAMu0B,IAAuBv1B,SAAC,aAClHF,cAACwD,IAAM,CAAC5C,GAAI,CAACI,SAAU,OAAQwO,cAAe,QAAStN,QAAQ,YAAYwB,MAAO,QAASxC,QAASA,IAAM0zB,IAAoC10B,SAAC,yBAK3J,UAKZF,cAACwT,GAAe,CACZC,oBAAqBA,EAAqB2D,uBAAwBA,IAGtEpX,cAACuxB,GAAe,CACZY,oBAAqBA,EAAqBiB,uBAAwBA,EAClE3B,iBAAkBj0B,EAAMi0B,iBAAkBE,oBAAqB6C,EAC/DpC,mBAAoB50B,EAAM40B,uBAI1C,E,2EC1WAxU,KAAO4Z,OAAO,MA0UCC,OAxUf,SAA8Bj6B,GAC1B,MAOOk6B,EAAsBC,GAA2B35B,mBAPpB,CAChCu0B,aAAc,GACdqF,cAAe,CAAEC,gBAAiB,GAAIC,gBAAiB,GAAI1D,WAAY,GAAI2D,YAAa,IACxFC,aAAc,GACdC,gBAAiB,MAOdC,EAAoBC,GAAyBn6B,oBAAS,IAEtDo6B,EAA6BC,GAAkCr6B,mBAAS,KACxEs6B,EAA6BC,GAAkCv6B,mBAAS,IAazE22B,EAXY7C,aAAW,CACzBC,KAAM,CACJ,iBAAkB,CAChBruB,MAAO,WAET,6BAA8B,CAC5BA,MAAO,aAKCsuB,GAuFhB,OANAhrB,qBAAU,KACHxJ,EAAMg7B,mBAlDuB95B,WAChCy5B,GAAsB,GACtB,MAAMM,QAA4B/mB,GAAelU,EAAMg7B,kBAAkBZ,cAAcp6B,EAAMg7B,kBAAkBZ,cAAclC,MAAKgD,GAAyD,OAApCA,EAAkBvmB,gBAA0B,EAAI,GAAGR,mBAC1M,GAAGnU,EAAMg7B,kBAAkBG,eAAe,CACtC,MAAMC,EAAsB,IACrBp7B,EAAMg7B,kBAAkBZ,cAAcp6B,EAAMg7B,kBAAkBZ,cAAclC,MAAKgD,GAAyD,OAApCA,EAAkBvmB,gBAA0B,EAAI,GACzJ0mB,eAAgBJ,EAAoBV,YAAYc,eAChDzmB,gBAAiBqmB,EAAoBV,YAAY3lB,gBACjDwe,aAAc6H,EAAoBV,YAAYnH,aAC9CmH,YAAaU,EAAoBV,YAAY5E,YAGjDwE,EACI,CACIpF,aAAc,GACdqF,cAAegB,EACfE,sBAAuBt7B,EAAMg7B,kBAAkBM,sBAC/Cd,aAAcx6B,EAAMg7B,kBAAkBR,aACtCC,gBAAiBz6B,EAAMg7B,kBAAkBP,iBAGrD,KAEI,CACGz6B,EAAMg7B,kBAAkBjG,aAAa9X,OAAS,IAC7Cjd,EAAMg7B,kBAAkBjG,aAAe/0B,EAAMg7B,kBAAkBjG,aAAawG,MAAK,CAACC,EAAGC,IAAMD,EAAEE,cAAgBD,EAAEC,iBAGnH,MAAMN,EAAsB,IACrBp7B,EAAMg7B,kBAAkBZ,cAAcp6B,EAAMg7B,kBAAkBZ,cAAclC,MAAKgD,GAAyD,OAApCA,EAAkBvmB,gBAA0B,EAAI,GACzJ0mB,eAAgBJ,EAAoBV,YAAYc,eAChDzmB,gBAAiBqmB,EAAoBV,YAAY3lB,gBACjDwe,aAAc6H,EAAoBV,YAAYnH,aAC9CmH,YAAaU,EAAoBV,YAAY5E,YAGjDwE,EACI,CACIpF,aAAc/0B,EAAMg7B,kBAAkBjG,aACtCqF,cAAegB,EACfE,sBAAuBt7B,EAAMg7B,kBAAkBM,sBAC/Cd,aAAcx6B,EAAMg7B,kBAAkBR,aACtCC,gBAAiBz6B,EAAMg7B,kBAAkBP,iBAGrD,CACAE,GAAsB,EAAM,EAKxBgB,EACJ,GACD,CAAC37B,EAAMg7B,oBAGNx4B,cAAAC,WAAA,CAAAC,SACIF,cAACoE,IAAG,CAACxD,GAAI,CAAC6C,OAAQ,OAAQtC,SAAU,YAAYjB,SAC3Cg4B,EACG/3B,eAACiE,IAAG,CAACxD,GAAI,CAAC6C,OAAQ,OAAQhC,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,UAAUxB,SAAA,CAChHF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,8HAGjDC,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAAA,OAAK4P,UAAU,kCAAiC7P,SAAA,CAE5CC,eAACkE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACG,WAAY,SAAU6I,UAAW,SAAU5I,SAAU,UAAUd,SAAA,CAAC,gCACxEF,cAAA,QAAM4B,MAAO,CAAC8B,MAAO,OAAOxD,SAAEw3B,EAAqBE,cAAcC,qBAGvF13B,eAACg2B,KAAI,CAACv1B,GAAI,CAACE,EAAG,GAAGZ,SAAA,CACZw3B,EAAqBnF,aAAa/jB,KAAI,CAAC4qB,EAAiBC,IACrDl5B,eAAA,OAAAD,SAAA,CACIF,cAACs5B,KAAc,CAAC14B,GAAI,CAACkb,GAAI,MAAOC,GAAI,MAAOhJ,aAAc,MAAO,SAAU,CAAC9O,gBAAiB,uBACxF/C,QAASA,IAzGdm4B,KAC/BhB,GAAgCkB,IAC5B,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQH,IAAqBG,EAAQH,GAC9BG,CAAO,GAChB,EAoGiDC,CAA0BJ,GAAkBn5B,SAE3DC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQE,WAAY,UAAUzB,SAAA,CAC7CF,cAAC05B,KAAY,CAAC94B,GAAI,CAACsjB,SAAU,OAAQ,+BAAgC,CAACljB,SAAU,OAAQ0C,MAAO,UAAWi2B,WAA6D,IAAlDvB,EAA4BiB,GAA6B,gBAAkB,iBAAiBn5B,SAACF,cAAC45B,KAAQ,MAC3N55B,cAAC65B,KAAY,CAACC,QAASV,EAAgB/C,aAAcz1B,GAAI,CAAC,6BAA8B,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,oBAInJ1D,cAAC+5B,KAAQ,CAACC,GAAI5B,EAA4BiB,GAAmBY,QAAQ,OAAOC,eAAa,EAAAh6B,SACrFF,cAAA,OAAAE,SACKk5B,EAAgB1G,iBAAiBlkB,KAAI,CAAC2rB,EAAqCC,IACxEj6B,eAAA,OAAK4P,UAAU,yCAAyCnO,MAAO,CAAE0rB,YAAa,OAAQC,aAAc,OAAQ+F,aAAc,OAAQpzB,SAAA,CAC9HF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACG,WAAY,SAAUC,SAAU,OAAQ4I,UAAW,SAAUvH,GAAI83B,EAAoC5D,qBAAuB,EAAI,GAAIr2B,SAAEi6B,EAAoC5D,uBAE/Mv2B,cAACoE,IAAG,CAACxD,GAAI,CAACyB,GAAI,GAAGnC,SACZi6B,EAAoCtH,yBAAyBrkB,KAAI,CAACgoB,EAAcC,IAC7Ez2B,cAACoE,IAAG,CAAAlE,SACAC,eAACsmB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAEzmB,SAAA,CACP,IAAlBu2B,EACGt2B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BgU,YAAa,MAAO51B,EAAG,IAAKZ,SACrFF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAEi6B,EAAoCxD,wBAGtE,UAA7CH,EAAaI,4BACVz2B,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAKhmB,GAAI,CAAC8hB,OAAQ,6BAA8BgU,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQI,eAAgB,SAAUF,WAAY,UAAUzB,SAAA,CACxJF,cAAC62B,KAAY,CAACj2B,GAAI,CAACI,SAAU,SAAU0C,MAAO,OAAQ0K,GAAI,MAC1DpO,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAU+1B,WAAY,OAAO52B,SAAEi6B,EAAoCpD,0BAGvI/2B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAKhmB,GAAI,CAAC8hB,OAAQ,6BAA8B5hB,EAAG,IAAKZ,SACnEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAUmP,GAAI,IAAKhQ,SAAEi6B,EAAoCnD,2BAIjIh3B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8B5hB,EAAG,IAAKZ,SACjEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAEi6B,EAAoCnD,2BAK5H,KAGJ72B,eAACiE,IAAG,CAAuCxC,MAAO,CAACH,QAAS,OAAQW,MAAO,QAAQlC,SAAA,CAC/EF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BuU,UAAW,MAAOP,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQE,WAAY,UAAUzB,SAC9IF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACI,SAAU,QAAQd,SAAEs2B,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVz2B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAKhmB,GAAI,CAAC8hB,OAAQ,6BAA8BuU,UAAW,MAAOP,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQI,eAAgB,UAAU3B,SACpJF,cAAC6f,KAAQ,CAACkN,UAAQ,EAACjN,QAAS0W,EAAaW,sBAAuBxC,QAAS,CAAE5C,KAAM4C,EAAQ5C,MAAQnxB,GAAI,CAAC,+BAAgC,CAACI,SAAU,eAGrJhB,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAI1mB,SACfF,cAAA,OAAK+P,UAAU,kBAAiB7P,SAC5BF,cAAA,OAAK+P,UAAU,eAAc7P,SACzBF,cAACo3B,KAAgB,CAACrnB,UAAU,oBAAoB0d,KAAM,EAAGV,UAAQ,EAACvqB,MAAOg0B,EAAaa,+BAMtGr3B,cAAAC,WAAA,CAAAC,SACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SACbF,cAAA,OAAK+P,UAAU,kBAAiB7P,SAC5BF,cAAA,OAAK+P,UAAU,eAAc7P,SACzBF,cAACo3B,KAAgB,CAACrnB,UAAU,oBAAoB0d,KAAM,EAAGV,UAAQ,EAACvqB,MAAOg0B,EAAaa,gCAInG,gBAAA/5B,OA5Bem5B,QA+BvB,gBAAAn5B,OA5Dem5B,UA+D5B,wCAAAn5B,OApEsK88B,YAwEjL,mBAAA98B,OArFc+7B,MAyFhC3B,EAAqBE,cAAcG,YAAYvpB,KAAI,CAAC6rB,EAAkBC,IACnEn6B,eAAA,OAAAD,SAAA,CACIF,cAACs5B,KAAc,CAAC14B,GAAI,CAACkb,GAAI,MAAOC,GAAI,MAAOhJ,aAAc,MAAO,SAAU,CAAC9O,gBAAiB,uBACxF/C,QAASA,IA3Ldo5B,KAC/B/B,GAAgCgB,IAC5B,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQc,IAAqBd,EAAQc,GAC9Bd,CAAO,GAChB,EAsLiDe,CAA0BD,GAAkBp6B,SAE3DC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQE,WAAY,UAAUzB,SAAA,CAC7CF,cAAC05B,KAAY,CAAC94B,GAAI,CAACsjB,SAAU,OAAQ,+BAAgC,CAACljB,SAAU,OAAQ0C,MAAO,UAAWi2B,WAA6D,IAAlDrB,EAA4BgC,GAA6B,gBAAkB,iBAAiBp6B,SAACF,cAAC45B,KAAQ,MAC3N55B,cAAC65B,KAAY,CAACC,QAASO,EAAiBhE,aAAcz1B,GAAI,CAAC,6BAA8B,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,oBAIpJ1D,cAAC+5B,KAAQ,CAACC,GAAI1B,EAA4BgC,GAAmBL,QAAQ,OAAOC,eAAa,EAAAh6B,SACrFF,cAAA,OAAAE,SACKm6B,EAAiB3H,iBAAiBlkB,KAAI,CAACgsB,EAAiCC,IACrEt6B,eAAA,OAAK4P,UAAU,yCAAyCnO,MAAO,CAAE0rB,YAAa,OAAQC,aAAc,OAAQ+F,aAAc,OAAQpzB,SAAA,CAC9HF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACG,WAAY,SAAUC,SAAU,OAAQ4I,UAAW,SAAUvH,GAAIm4B,EAAgCjE,qBAAuB,EAAI,GAAIr2B,SAAEs6B,EAAgCjE,uBAEvMv2B,cAACoE,IAAG,CAACxD,GAAI,CAACyB,GAAI,GAAGnC,SACZs6B,EAAgC3H,yBAAyBrkB,KAAI,CAACgoB,EAAcC,IACzEz2B,cAACoE,IAAG,CAAAlE,SACAC,eAACsmB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAEzmB,SAAA,CACP,IAAlBu2B,EACGt2B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BgU,YAAa,MAAO51B,EAAG,IAAKZ,SACrFF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAEs6B,EAAgC7D,wBAGlE,UAA7CH,EAAaI,4BACVz2B,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAKhmB,GAAI,CAAC8hB,OAAQ,6BAA8BgU,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQI,eAAgB,SAAUF,WAAY,UAAUzB,SAAA,CACxJF,cAAC62B,KAAY,CAACj2B,GAAI,CAACI,SAAU,SAAU0C,MAAO,OAAQ0K,GAAI,MAC1DpO,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAU+1B,WAAY,OAAO52B,SAAEs6B,EAAgCzD,0BAGnI/2B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAKhmB,GAAI,CAAC8hB,OAAQ,6BAA8B5hB,EAAG,IAAKZ,SACnEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAUmP,GAAI,IAAKhQ,SAAEs6B,EAAgCxD,2BAI7Hh3B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8B5hB,EAAG,IAAKZ,SACjEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAEs6B,EAAgCxD,2BAKxH,KAGJ72B,eAACiE,IAAG,CAAuCxC,MAAO,CAACH,QAAS,OAAQW,MAAO,QAAQlC,SAAA,CAC/EF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BuU,UAAW,MAAOP,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQE,WAAY,UAAUzB,SAC9IF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACI,SAAU,QAAQd,SAAEs2B,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVz2B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAKhmB,GAAI,CAAC8hB,OAAQ,6BAA8BuU,UAAW,MAAOP,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQI,eAAgB,UAAU3B,SACpJF,cAAC6f,KAAQ,CAACkN,UAAQ,EAACjN,QAAS0W,EAAaW,sBAAuBxC,QAAS,CAAE5C,KAAM4C,EAAQ5C,MAAQnxB,GAAI,CAAC,+BAAgC,CAACI,SAAU,eAGrJhB,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,IAAI1mB,SACfF,cAAA,OAAK+P,UAAU,kBAAiB7P,SAC5BF,cAAA,OAAK+P,UAAU,eAAc7P,SACzBF,cAACo3B,KAAgB,CAACrnB,UAAU,oBAAoB0d,KAAM,EAAGV,UAAQ,EAACvqB,MAAOg0B,EAAaa,+BAMtGr3B,cAAAC,WAAA,CAAAC,SACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SACbF,cAAA,OAAK+P,UAAU,kBAAiB7P,SAC5BF,cAAA,OAAK+P,UAAU,eAAc7P,SACzBF,cAACo3B,KAAgB,CAACrnB,UAAU,oBAAoB0d,KAAM,EAAGV,UAAQ,EAACvqB,MAAOg0B,EAAaa,gCAInG,gBAAA/5B,OA5Bem5B,QA+BvB,gBAAAn5B,OA5Dem5B,UA+D5B,oCAAAn5B,OApEkKm9B,YAwE7K,oBAAAn9B,OArFeg9B,SA0FtCt6B,cAAA,OAAK+P,UAAU,aAAanO,MAAO,CAACqsB,WAAY,OAAQ5R,UAAW,OAAOnc,SACtEF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAA,uBAAA5C,OAAeo6B,EAAqBE,cAAcxD,mBAI7Hp0B,cAAA,OAAK+P,UAAU,iBAAiBnO,MAAO,CAACqsB,WAAY,OAAQ5R,UAAW,MAAOja,MAAO,OAAOlC,SACxFF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,UAAW3C,WAAY,SAAUC,SAAU,WAAWd,SAAA,GAAA5C,OAAKo6B,EAAqBE,cAAc8C,eAAc,MAAAp9B,OAAKsgB,KAAO8Z,EAAqBE,cAAcE,iBAAiBna,OAAO,mBAO3P,E,4SCy8Eegd,OA5tFf,WACI,MAAMC,EAAqC,CACvCC,IAAK,GACLzwB,GAAI,GACJ0wB,WAAY,GACZ1pB,YAAa,GACbsiB,aAAc,GACdE,YAAa,GACbC,kBAAmB,GACnBF,eAAgB,GAChBM,eAAgB,GAChBC,eAAgB,GAChBC,0BAA2B,GAC3BH,cAAe,GACfF,gBAAiB,GACjBC,WAAY,KAGV,KAAE9uB,EAAI,QAAEhH,EAAO,aAAEkH,EAAY,aAAEuC,EAAY,WAAE3B,EAAU,cAAEV,EAAa,2BAAEK,GAA+BkC,qBAAWpD,GAElHyH,EAAUpH,wBAETk2B,EAAaC,GAAkBh9B,oBAAS,IAGxCi9B,EAA6BC,GAAkCl9B,mBAAS48B,IAGxEO,EAAmBC,GAAwBp9B,mBAAS,KAGpDw6B,EAAmB6C,GAAwBr9B,sBAG3Cs9B,EAA2BC,GAAgCv9B,oBAAS,IAGpEw9B,EAA+BC,GAAoCz9B,mBAAS,KAG5E09B,EAA2BC,GAAgC39B,mBAAS,CAAC,IAGrE49B,EAAkCC,GAAuC79B,mBAAS,KAGlF89B,EAAuBC,GAA4B/9B,mBAAS,KAC5Dg+B,EAA8BC,GAAmCj+B,sBAGjEk+B,EAAoBC,GAAyBn+B,sBAC7Co+B,EAAuBC,GAA4Br+B,sBAEnDo0B,EAAoBkK,GAAyBt+B,sBAG7Ci3B,EAA6BsH,GAAkCv+B,mBAAS,CAAC,IAGzEw+B,EAAoBC,IAAyBz+B,sBAG7C0+B,GAAoBC,IAAyB3+B,sBAG7C4+B,GAAqBC,IAA0B7+B,sBAG/Ck4B,GAA4BrB,IAAiC72B,oBAAS,IAEtE8+B,GAA0BC,IAA+B/+B,oBAAS,IAClEg/B,GAAgBC,IAAqBj/B,oBAAS,IAC9Ck/B,GAAoBC,IAAyBn/B,oBAAS,IACtDo/B,GAA0BC,IAA+Br/B,oBAAS,IAClEs/B,GAA0BC,IAA+Bv/B,oBAAS,IAElE0iB,GAA0BC,IAA+B3iB,mBAAS,KAClE8iB,GAAqBC,IAA0B/iB,mBAAS,KAExDgjB,GAA+BC,IAAoCjjB,mBAAS,KAC5EkjB,GAA8BC,IAAmCnjB,mBAAS,KAE1EmiB,GAAYC,IAAiBpiB,mBAAS,CAACqiB,UAAW,EAAGC,UAAW,yBAChEC,GAAuBC,IAA4BxiB,mBACtD,CACI,CAAEsiB,UAAW,sBAAeG,YAAa,GACzC,CAAEH,UAAW,wBAAcG,YAAa,MAIzCtc,GAA6BsB,IAAkCzH,oBAAS,GA2BzEqjB,GAAiBA,CAACC,EAAUC,KAC9B,MAAMC,EAAsBD,EAAW3I,cACvC,OAAO0I,EAASzI,QAAO4I,IACvB,MAAM,YAAErQ,EAAW,SAAEE,EAAQ,YAAEsD,EAAW,YAAEE,GAAgB2M,EAAWlN,QACnE,OAAOnD,EAAYwH,cAAcM,SAASsI,IAAwBlQ,EAASsH,cAAcM,SAASsI,IAAwB5M,EAAYgE,cAAcM,SAASsI,IAAwB1M,EAAY8D,cAAcM,SAASsI,EAAoB,GAC9O,EAsBAgc,GAAwB9+B,UAC1Bu+B,IAAkB,GAClBE,IAAsB,GACtBE,IAA4B,GAC5BE,IAA4B,GAEL,aADAzrB,GAAmBmpB,EAA4B7wB,GAAI,EAA+C,IAA9C6wB,EAA4BwC,cAAyB,GAAsD,IAA7CxC,EAA4ByC,aAAwB,EAAI,KACrL79B,SACRd,IAAMgB,QAAQ,qDAADzC,OAA8B29B,EAA4BvH,cAAgB,CAACz0B,QAAS,aACjGi8B,EAA+BN,GAC/BQ,EAAqB,IACrBG,GAA6B,GAC7BE,EAAiC,IACjCE,EAA6B,CAAC,GAC9BE,EAAoC,IACpCE,EAAyB,IACzBE,IACAM,EAA8B,CAAC,GAC/BM,KACAZ,IACAQ,KACAN,IACAG,IACA5a,MAEJ2b,IAA4B,GAC5BE,IAA4B,EAAM,EAiChCI,GAAkCA,KACM,IAAvC1C,EAA4Bp7B,SAA8D,IAA9Co7B,EAA4BwC,cACvEG,KAE2C,IAAvC3C,EAA4Bp7B,OAChCg+B,MAAM,0EAADvgC,OAAgD29B,EAA4BvH,aAAY,gJAElD,IAAvCuH,EAA4Bp7B,SAA+D,IAA9Co7B,EAA4BwC,eAC7EK,IACJ,EAGEC,GAAqCA,KACvCt4B,IAA+B,GACW,IAAvCw1B,EAA4Bp7B,QAC3BrB,YAAW,KACPiH,IAA+B,GAC/BovB,IAA8B,EAAK,GACpC,IACP,EAiDEnT,GAA8BhjB,gBAC1B,IAAIC,SAAQC,GAAWJ,WAAWI,EAAS,OACjD,MAAMa,QAAiBuR,KACvB,GAAgB,MAAbvR,EAAiB,CAChB,IAAIu+B,EAAuBv+B,EAASsX,KACpC,MAAMknB,EAAqBD,EAAqB3iB,MAAKnB,GAAuB,IAAfA,EAAKnI,OAAemI,EAAK+K,eAAiBhgB,EAAK6C,SAC5G,GAAGm2B,EAAmB,CAClB,MAAMC,QAA8BzsB,GAAwBwsB,EAAmB7zB,IAC/E,GAAG8zB,EAAsBtG,cAAclC,MAAKgD,GAAyD,OAApCA,EAAkBvmB,gBAAwB,OACjGL,GAAmBmsB,EAAmB7zB,GAAmD,IAA/C8zB,EAAsBtG,cAAcnd,OAAe,EAAI,GACvG,MAAM0jB,EAAgBH,EAAqBxwB,WAAU0M,GAAQA,EAAK9P,KAAO6zB,EAAmB7zB,KAC5F4zB,EAAqBG,GAAepsB,MAAuD,IAA/CmsB,EAAsBtG,cAAcnd,OAAe,EAAI,CACvG,KACI,OACM3I,GAAmBmsB,EAAmB7zB,GAAI,GAChD,MAAM+zB,EAAgBH,EAAqBxwB,WAAU0M,GAAQA,EAAK9P,KAAO6zB,EAAmB7zB,KAC5F4zB,EAAqBG,GAAepsB,MAAQ,CAChD,CACJ,CAEA,MAAMqsB,EAA0BJ,EAAqBnlB,QAAOqB,GAAuB,IAAfA,EAAKnI,QAEzE4O,GAA4Byd,GAE5B,MAAMjc,EAA8Bic,EAAwBvlB,QAAOuJ,GAAuD,IAA/BA,EAAqBrQ,QAC1GuQ,EAA2B8b,EAAwBvlB,QAAOuJ,GAAuD,IAA/BA,EAAqBrQ,OAAeqQ,EAAqB6C,eAAiBhgB,EAAK6C,SAEvKqZ,GAAgCgB,GAChClB,GAAiCkB,GAEjC,MAAML,EAAc,CAChB,CAAExB,UAAW,sBAAeG,YAAa0B,EAA4B1H,QACrE,CAAE6F,UAAW,wBAAcG,YAAa6B,EAAyB7H,SAErE+F,GAAyBsB,EAC7B,CAEAmb,IAAkB,GAClBE,IAAsB,EAAM,EAsB1BkB,GAAyB3/B,UAC3B+G,IAA+B,GAC/B03B,IAAsB,GACtBJ,IAA4B,GACzBb,GAAoD,IAA9BA,EAAmBzhB,QACxC0hB,UAEEmC,GAA8BC,EAAiBn0B,IACrD,MAAMo0B,EAA+B,IAAIvD,GACzCuD,EAA6B3D,IAAM0D,EAAiBlZ,MACpDmZ,EAA6Bp0B,GAAKm0B,EAAiBn0B,GACnDo0B,EAA6B3+B,OAAS,EACtC2+B,EAA6B1D,WAAayD,EAAiBhqB,QAAQ/C,UACnEgtB,EAA6BptB,YAAcmtB,EAAiBhqB,QAAQnD,YACpEotB,EAA6B9K,aAAe6K,EAAiBhqB,QAAQjD,SACrEktB,EAA6B5K,YAAc2K,EAAiBhqB,QAAQrD,WACpEstB,EAA6B3K,kBAAoB0K,EAAiBhqB,QAAQiS,YAC1EgY,EAA6B7K,eAAiB4K,EAAiBhqB,QAAQG,OACvE8pB,EAA6BvK,eAAiBsK,EAAiB96B,OAC/D+6B,EAA6BtK,eAAiBqK,EAAiBnqB,OAC/DoqB,EAA6BrK,0BAA4BoK,EAAiBlqB,kBAC1EmqB,EAA6BrK,0BAA4BoK,EAAiBlqB,kBAC1EmqB,EAA6BzK,WAAawK,EAAiBhqB,QAAQI,eAAiB4pB,EAAiBhqB,QAAQI,eAAiB4pB,EAAiBhqB,QAAQM,eACvJ2pB,EAA6BxK,cAAgBuK,EAAiBhqB,QAAQK,YAAc2pB,EAAiBhqB,QAAQK,YAAc2pB,EAAiBhqB,QAAQO,YACpJ0pB,EAA6B1K,gBAAkByK,EAAiBhqB,QAAQ0N,YACxEuc,EAA6BlqB,aAA+C,IAAjCiqB,EAAiBjqB,YAC5DkqB,EAA6Bf,cAA2C,IAA3Bc,EAAiBxsB,MAC9DysB,EAA6Bd,aAA0C,IAA3Ba,EAAiBxsB,MAC7DysB,EAA6BC,gBAAiB,EAC9CvD,EAA+BsD,GAC/BrB,IAAsB,GACtBJ,IAA4B,GAC5Bt3B,IAA+B,EAAM,EAyBnCm4B,GAAkCl/B,UACpCu+B,IAAkB,GAClB,MAAMx9B,QAAiBqS,GAAmBmpB,EAA4B7wB,GAAI,GAC1E,GAAuB,MAApB3K,EAASI,OAAe,CACvB,MAAM2+B,EAA+B,IAAIvD,GAGzC,GAFAuD,EAA6B3+B,OAAS,EACtCq7B,EAA+BsD,GAC5BhG,EAAkBZ,cAAclC,MAAKgD,GAAyD,OAApCA,EAAkBvmB,gBAAwB,CAEhG8oB,EAA4ByC,eAC3Bb,GAAuBziB,KAAEW,UAAUyd,EAAkBjG,eAErDkK,GAAsBriB,KAAEW,UAAUyd,EAAkBjG,eACpD8J,EAAyBjiB,KAAEW,UAAUmhB,KAGzC,MAAMwC,EAA4B,IAAIhe,IAChCie,EAAmBD,EAA0BlxB,WAAU0M,GAAQA,EAAK9P,KAAO6wB,EAA4B7wB,KAC7Gs0B,EAA0BC,GAAkB5sB,MAAQ,EAEpD4O,GAA4B+d,GAE5B,MAAMvc,EAA8Buc,EAA0B7lB,QAAOuJ,GAAuD,IAA/BA,EAAqBrQ,OAA8C,IAA/BqQ,EAAqBrQ,OAA8C,IAA/BqQ,EAAqBrQ,QAC1LoP,GAAgCgB,GAChClB,GAAiCkB,SAE3Byc,KACN7/B,IAAMgB,QAAQ,2CAADzC,OAA4B29B,EAA4BvH,cAAgB,CAACz0B,QAAS,YACnG,KACI,CACA,MAAMy/B,EAA4B,IAAIhe,IAChCie,EAAmBD,EAA0BlxB,WAAU0M,GAAQA,EAAK9P,KAAO6wB,EAA4B7wB,KAC7Gs0B,EAA0BC,GAAkB5sB,MAAQ,EAEpD4O,GAA4B+d,GAE5B,MAAMvc,EAA8Buc,EAA0B7lB,QAAOuJ,GAAuD,IAA/BA,EAAqBrQ,OAA8C,IAA/BqQ,EAAqBrQ,OAA8C,IAA/BqQ,EAAqBrQ,QAE1LoP,GAAgCgB,GAChClB,GAAiCkB,SAE3B0c,IACV,CACJ,MAC4B,MAApBp/B,EAASI,QACbd,IAAMY,MAAMF,EAASK,KAAM,CAACb,QAAS,WAEzCg+B,IAAkB,EAAM,EAItB2B,GAA6BlgC,UAS/B,GARA2+B,IAA4B,GAC5B7E,EAAkBZ,cAAcpP,SAASkQ,IACE,OAApCA,EAAkBvmB,gBACjBumB,EAAkB3mB,MAAQ,EAC9B,KAI4C,IAA7CkpB,EAA4ByC,eAA8D,IAArClF,EAAkBG,eAAyB,CAC/F,MAEMmG,SAFqCltB,GAAqBqpB,EAA4BH,aAErBh7B,KAAK0O,KAAIuwB,IAC5E,MAAMC,EAA4BxG,EAAkBjG,aAAalX,MAAK4jB,GAAqCA,EAAkC/F,gBAAkB6F,EAAiC7F,gBAEhM,MAAO,IACA6F,EACHG,QAAQ,EACRxM,iBAAkBqM,EAAiCrM,iBAAiB7Z,QAAOsmB,GAChEH,GAA6BA,EAA0BtM,iBAAiBgD,MAAK0J,GAAYA,EAASC,uBAAyBF,EAASE,yBAC5I7wB,KAAI2wB,IACH,MAAMG,EAAmBN,EAA0BtM,iBAAiBrX,MAAK+jB,GAAYA,EAASC,uBAAyBF,EAASE,uBAChI,MAAO,IACAF,EACHI,oBAAoBD,EACpBJ,QAAQ,EACRrM,yBAA0ByM,EAAmBA,EAAiBzM,yBAA2B,GAC5F,IAER,IAGL2F,EAAkBjG,aAAeuM,EAEjCnC,GAAsB,CAClBnrB,UAAWypB,EAA4BH,WACvCvI,aAAc,KAGlB,MAAMiN,QAAqC9tB,GAAe8mB,EAAkBZ,cAAc,GAAGjmB,mBAE7F6mB,EAAkBZ,cAAc,GAAGzE,WAAaqM,EAA6BzH,YAAY5E,WAEzF,MAAMsM,EAA6CjH,EAAkBZ,cAAc,GAAGzE,WAAW3kB,KAAIgkB,IAAQ,CACzG6D,aAAc7D,EAAS6D,aACvBR,gBAAgB,EAChBnD,iBAAkBF,EAASE,iBAAiBlkB,KAAImkB,IAAO,IAClDA,EACHE,yBAA0B,WAK1B6M,EAAiC,CACnCluB,UAAWypB,EAA4BH,WACvCzG,cAAemE,EAAkBlkB,YACjC3C,kBAAmB6mB,EAAkBZ,cAAc,GAAGjmB,kBACtDyiB,WAAYoE,EAAkBZ,cAAc,GAAGxD,WAC/CjB,WAAYsM,GAGhB1D,EAAyB,CACrB4D,kBAAmBnH,EAAkBZ,cAAc,GAAGC,gBACtD+H,iBAAkBpH,EAAkBZ,cAAc,GAAGzE,aAGzD8I,EAAgC,CAC5B0D,kBAAmBnH,EAAkBZ,cAAc,GAAGC,gBACtD+H,iBAAkBpH,EAAkBZ,cAAc,GAAGzE,aAGzDiI,EAAqB5C,GACrB+D,EAA8BniB,KAAEW,UAAU2kB,IAC1CrE,GACJ,MAGK,IAAgD,IAA7CJ,EAA4ByC,eAA8D,IAArClF,EAAkBG,eAAwB,CACnG,MAAM6G,QAAqC9tB,GAAe8mB,EAAkBZ,cAAc,GAAGjmB,mBAE7F6mB,EAAkBZ,cAAc,GAAGzE,WAAaqM,EAA6BzH,YAAY5E,WAEzF,MAAMsM,EAA6CjH,EAAkBZ,cAAc,GAAGzE,WAAW3kB,KAAIgkB,IAAQ,CACzG6D,aAAc7D,EAAS6D,aACvBR,gBAAgB,EAChBnD,iBAAkBF,EAASE,iBAAiBlkB,KAAImkB,IAAO,IAClDA,EACHE,yBAA0B,WAK1B6M,EAAiC,CACnCluB,UAAWypB,EAA4BH,WACvCzG,cAAemE,EAAkBlkB,YACjC3C,kBAAmB6mB,EAAkBZ,cAAc,GAAGjmB,kBACtDyiB,WAAYoE,EAAkBZ,cAAc,GAAGxD,WAC/CjB,WAAYsM,GAGhB1D,EAAyB,CACrB4D,kBAAmBnH,EAAkBZ,cAAc,GAAGC,gBACtD+H,iBAAkBpH,EAAkBZ,cAAc,GAAGzE,aAGzD8I,EAAgC,CAC5B0D,kBAAmBnH,EAAkBZ,cAAc,GAAGC,gBACtD+H,iBAAkBpH,EAAkBZ,cAAc,GAAGzE,aAIzD,IAAI0M,EAAgCzlB,KAAEW,UAAUyd,EAAkBjG,cAElEsN,EAAgCA,EAA8BrxB,KAAK0L,IAC/D,MAAM4lB,EAAuB5lB,EAAKwY,iBAAiBlkB,KAAKuxB,IAC7C,CACHhJ,qBAAsBgJ,EAAqBhJ,qBAC3CJ,oBAAqBoJ,EAAqBpJ,oBAC1C0I,qBAAsBU,EAAqBV,qBAC3CrI,oBAAqB+I,EAAqB/I,oBAC1CT,qBAAsBwJ,EAAqBxJ,qBAC3C1D,yBAA0B,OAIlC,MAAO,CACHwD,aAAcnc,EAAKmc,aACnB6C,cAAehf,EAAKgf,cACpBxG,iBAAkBoN,EAClBnK,eAAe,EAClB,IAGL,MAAMqK,EAA8CH,EAA8BviC,OAAOoiC,EAA+BvM,YACxHuM,EAA+BvM,WAAa6M,EAE5C5E,EAAqB5C,GACrB+D,EAA8BniB,KAAEW,UAAU2kB,IAC1CrE,GACJ,KAGI,CACA,MAAM4E,EAAoCzH,EAAkBjG,aAAa/jB,KAAK4qB,IAC1E,MAAM8G,EAAgC9G,EAAgB1G,iBAAiBlkB,KAAK2mB,IAC/C,CACrBoB,qBAAsBpB,EAAqBoB,qBAC3CI,oBAAqBxB,EAAqBwB,oBAC1CI,qBAAsB5B,EAAqB4B,qBAC3CC,oBAAqB7B,EAAqB6B,oBAC1CqI,qBAAsBlK,EAAqBkK,qBAC3CxM,yBAA0B,OAYlC,MAP8B,CAC1BwD,aAAc+C,EAAgB/C,aAC9BV,eAAe,EACfuD,cAAeE,EAAgBF,cAC/BxG,iBAAkBwN,EAGM,IAG1BC,EAAqC3H,EAAkBZ,cAAcvc,MAAMqd,GAAsBA,EAAkBlnB,YAAcypB,EAA4BH,aAEnKyB,EAA8B,CAC1B/qB,UAAWypB,EAA4BH,WACvCzG,cAAemE,EAAkBlkB,YACjC3C,kBAAmBwuB,EAAmCxuB,kBACtDyiB,WAAY+L,EAAmC/L,WAC/CjB,WAAY8M,IAGhBzH,EAAkBjG,aAAa/J,SAAQ,CAAC4X,EAAkBC,KACtDD,EAAiB1N,iBAAmB0N,EAAiB1N,iBAAiBlkB,KAAK2mB,IAChE,IACAA,EACHmL,kBAAmBD,MAGpB,IACAD,MAIXhF,EAAqB5C,GACrB6C,GACJ,CACAgC,IAA4B,EAAM,EAIhCS,GAAsCp/B,UACxCu+B,IAAkB,GAElB,GAAuB,aADAnrB,GAAmBmpB,EAA4B7wB,GAAI,IAC9DvK,OAAe,CACvB,MAAM6+B,EAA4B,IAAIhe,IAChCie,EAAmBD,EAA0BlxB,WAAU0M,GAAQA,EAAK9P,KAAO6wB,EAA4B7wB,KAC7Gs0B,EAA0BC,GAAkB5sB,MAAQ,EAEpD4O,GAA4B+d,GAE5B,MAAMvc,EAA8Buc,EAA0B7lB,QAAOuJ,GAAuD,IAA/BA,EAAqBrQ,OAA8C,IAA/BqQ,EAAqBrQ,OAA8C,IAA/BqQ,EAAqBrQ,QAE1LoP,GAAgCgB,GAChClB,GAAiCkB,GAEjC,MAAMqc,EAA+B,IAAIvD,GACzCuD,EAA6B3+B,OAAS,EACtCq7B,EAA+BsD,SACzBK,KACNze,GAAc,CAACC,UAAW,EAAGC,UAAW,wBACxC2c,IAAkB,EACtB,GAIE4B,GAA+BngC,UACjC2+B,IAA4B,GAC5B,MAAMmC,OftgBe9gC,WACzB,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,sCAAAO,OAAqC6U,GAAiBzI,GACzFlK,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,Ee8f6C8gC,CAAqB/H,EAAkBZ,cAAc,GAAGzlB,eAEnG,GAA2C,MAAxCqtB,EAA6B3/B,OAAe,CAC3C,MAAM2+B,EAA+B,IAAIvD,GACzCuD,EAA6B3+B,OAAS,EACtCq7B,EAA+BsD,IAES,IAArChG,EAAkBG,iBACjBkE,GAAuBziB,KAAEW,UAAUyd,EAAkBjG,eAErDkK,GAAsBriB,KAAEW,UAAUyd,EAAkBjG,eACpD8J,EAAyBjiB,KAAEW,UAAUmhB,WAGnCsE,GAA6BhB,EAA6B1/B,MAChEf,IAAMgB,QAAQ,4DAADzC,OAAmC29B,EAA4BvH,cAAgB,CAACz0B,QAAS,YAC1G,MACgD,MAAxCugC,EAA6B3/B,QACjCd,IAAMY,MAAM6/B,EAA6B1/B,KAAM,CAACb,QAAS,WAE7Do+B,IAA4B,EAAM,EAIhCmD,GAA+B9hC,UACjC85B,EAAkBZ,cAAc,GAAG7lB,MAAQ,EAC3CymB,EAAkBZ,cAAc,GAAGzE,WAAasN,EAAiCtN,WAEjF,MAAMsM,EAA6CjH,EAAkBZ,cAAc,GAAGzE,WAAW3kB,KAAIgkB,IAAQ,CACzG6D,aAAc7D,EAAS6D,aACvBR,gBAAgB,EAChBnD,iBAAkBF,EAASE,iBAAiBlkB,KAAImkB,IAAO,IAClDA,EACHE,yBAA0B,WAK1B6M,EAAiC,CACnCluB,UAAWypB,EAA4BH,WACvCzG,cAAemE,EAAkBlkB,YACjC3C,kBAAmBspB,EAA4B7wB,KAAOouB,EAAkBZ,cAAc,GAAGjmB,kBAAoBspB,EAA4B7wB,GAAKouB,EAAkBZ,cAAc,GAAGjmB,kBACjLyiB,WAAYoE,EAAkBZ,cAAc,GAAGxD,WAC/CjB,WAAYsM,GAGhB1D,EAAyB,CACrB4D,kBAAmBnH,EAAkBZ,cAAc,GAAGC,gBACtD+H,iBAAkBpH,EAAkBZ,cAAc,GAAGzE,aAGzD8I,EAAgC,CAC5B0D,kBAAmBnH,EAAkBZ,cAAc,GAAGC,gBACtD+H,iBAAkBpH,EAAkBZ,cAAc,GAAGzE,aAIzD,IAAI0M,EAAgCzlB,KAAEW,UAAUyd,EAAkBZ,cAAc,GAAGzE,YAEnF0M,EAAgCA,EAA8BrxB,KAAIgkB,IAC9DA,EAASE,iBAAmBF,EAASE,iBAAiBlkB,KAAImkB,IACtD,MAAM+N,EAAY/N,EAAQE,yBAGpB8N,EAAUD,EAAUzmB,OAAM2mB,GAAiC,OAA5BA,EAAEzJ,uBAA4D,OAA1ByJ,EAAEvJ,sBAU3E,OANE1E,EAAQE,yBAFN8N,EAEiC,GAGAD,EAAU7nB,QAAO+nB,GAAiC,OAA5BA,EAAEzJ,uBAA4D,OAA1ByJ,EAAEvJ,sBAG1F1E,CAAO,IAGlBH,EAASqD,gBAAiB,EACnBrD,KAGXkN,EAA+BvM,WAAa0M,EAE5C,MAAMgB,QAAqCjvB,GAAqBqpB,EAA4BH,YAG5F,GAA2C,MAAxC+F,EAA6BhhC,OAChC,CACI,MAAMi/B,EAAoC+B,EAA6B/gC,KAAK0O,KAAIuwB,IAC5E,MAAMC,EAA4BxG,EAAkBjG,aAAalX,MAAK4jB,GAAqCA,EAAkC/F,gBAAkB6F,EAAiC7F,gBAEhM,MAAO,IACA6F,EACHG,QAAQ,EACRxM,iBAAkBqM,EAAiCrM,iBAAiB7Z,QAAOsmB,GAChEH,GAA6BA,EAA0BtM,iBAAiBgD,MAAK0J,GAAYA,EAASC,uBAAyBF,EAASE,yBAC5I7wB,KAAI2wB,IACH,MAAMG,EAAmBN,EAA0BtM,iBAAiBrX,MAAK+jB,GAAYA,EAASC,uBAAyBF,EAASE,uBAChI,MAAO,IACAF,EACHI,oBAAoBD,EACpBJ,QAAQ,EACRrM,yBAA0ByM,EAAmBA,EAAiBzM,yBAA2B,GAC5F,IAER,IAGL2F,EAAkBjG,aAAeuM,EAEjCnC,GAAsB,CAClBnrB,UAAWypB,EAA4BH,WACvCvI,aAAc,KAGlB6I,EAAqB5C,GACrB6C,GACJ,KAGI,CAEA,IAAIwE,EAAgCzlB,KAAEW,UAAUyd,EAAkBjG,cAElEsN,EAAgCA,EAA8BrxB,KAAK0L,IAC/D,MAAM4lB,EAAuB5lB,EAAKwY,iBAAiBlkB,KAAKuxB,IAC7C,CACHhJ,qBAAsBgJ,EAAqBhJ,qBAC3CJ,oBAAqBoJ,EAAqBpJ,oBAC1C0I,qBAAsBU,EAAqBV,qBAC3CrI,oBAAqB+I,EAAqB/I,oBAC1CT,qBAAsBwJ,EAAqBxJ,qBAC3C1D,yBAA0B,OAIlC,MAAO,CACHwD,aAAcnc,EAAKmc,aACnB6C,cAAehf,EAAKgf,cACpBxG,iBAAkBoN,EAClBnK,eAAe,EAClB,IAGL,MAAMqK,EAA8CH,EAA8BviC,OAAOoiC,EAA+BvM,YACxHuM,EAA+BvM,WAAa6M,EAE5C5E,EAAqB5C,GACrB6C,GACJ,CAEAkB,EAA8BniB,KAAEW,UAAU2kB,GAAgC,EAgIxEoB,GAAwDA,CAACxK,EAAuBG,EAAej0B,KACjG,MAAMka,EAAala,EAEhBsT,GAAUqE,SACTwC,cAAc7G,GAAUqE,SAG5BrE,GAAUqE,QAAU3b,YAAW,KAC3B,MAAMuiC,EAA6B,IAAIrF,GACvCqF,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAeY,oBAAsB3a,EACjIif,EAA6BoF,GAE7BA,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAe1D,SAAU,EAErHiO,GACI1K,EACAyK,EAA2BrO,iBAAiB4D,GAAuB+I,qBACnE0B,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAC5F/Z,EACH,GACF,EAAE,EAGHskB,GAA6DA,CAAC1K,EAAuB+I,EAAsB4B,EAAyBvkB,KACtI,MAAMwkB,EAAsCxE,GAAmBnK,aAAalX,MAAK8lB,GAAsCA,EAAmCjI,gBAAkBwC,EAA0BxC,gBAEtM,GAAGgI,EAAoC,CAEnC,MAAME,EAAyCF,EAAoCxO,iBAAiBrX,MAAKgmB,GAA0CA,EAAuChC,uBAAyBA,IAEnN,GAAG+B,EAAuC,CAEtC,MAAM3K,EAAgB2K,EAAuCvO,yBAAyBrlB,WAAU8zB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,8BAA+C,KAAf7kB,IACpR8kB,EAAsBJ,EAAuCvO,yBAAyBrlB,WAAU8zB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,8BAA+C,KAAf7kB,KAE1Q,IAAnB+Z,GAEC2K,EAAuCvO,yBAAyB4D,GAAeY,oBAAsB3a,EACjG0kB,EAAuCvO,yBAAyB4D,GAAe1D,UAC/EqO,EAAuCvO,yBAAyB4D,GAAe1D,SAAU,KAIhE,IAAzByO,EAEJJ,EAAuCvO,yBAAyB4O,OAAOD,EAAqB,GAK5FJ,EAAuCvO,yBAAyBhlB,KAAKozB,EAE7E,KAEI,CAEA,MAAMS,EAAqC,CACvC3K,qBAAsB2E,EAA0BhJ,iBAAiB4D,GAAuBS,qBACxFJ,oBAAqB+E,EAA0BhJ,iBAAiB4D,GAAuBK,oBACvF0I,qBAAsB3D,EAA0BhJ,iBAAiB4D,GAAuB+I,qBACxFxM,yBAA0B,CAACoO,GAC3BjK,oBAAqB0E,EAA0BhJ,iBAAiB4D,GAAuBU,oBACvFT,qBAAsBmF,EAA0BhJ,iBAAiB4D,GAAuBC,sBAE5F2K,EAAoCxO,iBAAiB7kB,KAAK6zB,EAC9D,CACJ,KAEI,CAEA,MAAMA,EAAqC,CACvC3K,qBAAsB2E,EAA0BhJ,iBAAiB4D,GAAuBS,qBACxFJ,oBAAqB+E,EAA0BhJ,iBAAiB4D,GAAuBK,oBACvF0I,qBAAsB3D,EAA0BhJ,iBAAiB4D,GAAuB+I,qBACxFxM,yBAA0B,CAACoO,GAC3BjK,oBAAqB0E,EAA0BhJ,iBAAiB4D,GAAuBU,oBACvFT,qBAAsBmF,EAA0BhJ,iBAAiB4D,GAAuBC,sBAGtFoL,EAAiC,CACnCzI,cAAewC,EAA0BxC,cACzC7C,aAAcqF,EAA0BrF,aACxCuL,eAAgBlG,EAA0BkG,eAC1ClP,iBAAkB,CAACgP,IAGvBhF,GAAmBnK,aAAa1kB,KAAK8zB,EACzC,CAEAE,GAA6BZ,EAAwB,EAGnDa,GAAwDA,CAACxL,EAAuB+I,EAAsB4B,EAAyBvkB,EAAYqlB,KAC7I,GAAGA,EAAW,CAEV,IAAqD,IAAlDd,EAAwB9J,uBAA0F,UAAxD8J,EAAwBrK,6BAAiE,IAAtBla,EAAWjC,OAAa,CACpJ,MAAMymB,EAAsCxE,GAAmBnK,aAAalX,MAAK8lB,GAAsCA,EAAmCjI,gBAAkBwC,EAA0BxC,gBAEtM,GAAGgI,EAAoC,CAEnC,MAAME,EAAyCF,EAAoCxO,iBAAiBrX,MAAKgmB,GAA0CA,EAAuChC,uBAAyBA,IAEnN,GAAG+B,EAAuC,CAEtC,MAAM3K,EAAgB2K,EAAuCvO,yBAAyBrlB,WAAU8zB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,gCACpO,IAAnB9K,IAEC2K,EAAuCvO,yBAAyB4D,GAAeY,oBAAsB3a,EACjG0kB,EAAuCvO,yBAAyB4D,GAAe1D,UAC/EqO,EAAuCvO,yBAAyB4D,GAAe1D,SAAU,GAGrG,CACJ,CACJ,CAGA,IAAqD,IAAlDkO,EAAwB9J,uBAA0F,UAAxD8J,EAAwBrK,6BAAiE,IAAtBla,EAAWjC,OAAa,CACpJ,MAAMymB,EAAsCxE,GAAmBnK,aAAalX,MAAK8lB,GAAsCA,EAAmCjI,gBAAkBwC,EAA0BxC,gBAEtM,GAAGgI,EAAoC,CAEnC,MAAME,EAAyCF,EAAoCxO,iBAAiBrX,MAAKgmB,GAA0CA,EAAuChC,uBAAyBA,IAEnN,GAAG+B,EAAuC,CAEtC,MAAM3K,EAAgB2K,EAAuCvO,yBAAyBrlB,WAAU8zB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,gCACpO,IAAnB9K,IAEC2K,EAAuCvO,yBAAyB4D,GAAeY,oBAAsB,KACjG+J,EAAuCvO,yBAAyB4D,GAAe1D,UAC/EqO,EAAuCvO,yBAAyB4D,GAAe1D,SAAU,GAGrG,CACJ,CACJ,CAGA,GAAqD,OAAlDkO,EAAwB9J,uBAA0F,UAAxD8J,EAAwBrK,6BAAiE,IAAtBla,EAAWjC,OAAa,CACpJ,MAAMymB,EAAsCxE,GAAmBnK,aAAalX,MAAK8lB,GAAsCA,EAAmCjI,gBAAkBwC,EAA0BxC,gBAEtM,GAAGgI,EAAoC,CAEnC,MAAME,EAAyCF,EAAoCxO,iBAAiBrX,MAAKgmB,GAA0CA,EAAuChC,uBAAyBA,IAEnN,GAAG+B,EAAuC,CAEtC,MAAM3K,EAAgB2K,EAAuCvO,yBAAyBrlB,WAAU8zB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,gCACpO,IAAnB9K,GAEC2K,EAAuCvO,yBAAyB4D,GAAeY,oBAAsB3a,EACjG0kB,EAAuCvO,yBAAyB4D,GAAe1D,UAC/EqO,EAAuCvO,yBAAyB4D,GAAe1D,SAAU,IAI7FqO,EAAuCvO,yBAAyBhlB,KAAKozB,EAE7E,KACI,CAEA,MAAMS,EAAqC,CACvC3K,qBAAsB2E,EAA0BhJ,iBAAiB4D,GAAuBS,qBACxFJ,oBAAqB+E,EAA0BhJ,iBAAiB4D,GAAuBK,oBACvF0I,qBAAsB3D,EAA0BhJ,iBAAiB4D,GAAuB+I,qBACxFxM,yBAA0B,CAACoO,GAC3BjK,oBAAqB0E,EAA0BhJ,iBAAiB4D,GAAuBU,oBACvFT,qBAAsBmF,EAA0BhJ,iBAAiB4D,GAAuBC,sBAE5F2K,EAAoCxO,iBAAiB7kB,KAAK6zB,EAC9D,CACJ,KACI,CAEA,MAAMA,EAAqC,CACvC3K,qBAAsB2E,EAA0BhJ,iBAAiB4D,GAAuBS,qBACxFJ,oBAAqB+E,EAA0BhJ,iBAAiB4D,GAAuBK,oBACvF0I,qBAAsB3D,EAA0BhJ,iBAAiB4D,GAAuB+I,qBACxFxM,yBAA0B,CAACoO,GAC3BjK,oBAAqB0E,EAA0BhJ,iBAAiB4D,GAAuBU,oBACvFT,qBAAsBmF,EAA0BhJ,iBAAiB4D,GAAuBC,sBAGtFoL,EAAiC,CACnCzI,cAAewC,EAA0BxC,cACzC7C,aAAcqF,EAA0BrF,aACxCuL,eAAgBlG,EAA0BkG,eAC1ClP,iBAAkB,CAACgP,IAGvBhF,GAAmBnK,aAAa1kB,KAAK8zB,EACzC,CACJ,CAGA,GAAqD,OAAlDV,EAAwB9J,uBAA0F,UAAxD8J,EAAwBrK,6BAAiE,IAAtBla,EAAWjC,OAAa,CACpJ,MAAMymB,EAAsCxE,GAAmBnK,aAAalX,MAAK8lB,GAAsCA,EAAmCjI,gBAAkBwC,EAA0BxC,gBAEtM,GAAGgI,EAAoC,CAEnC,MAAME,EAAyCF,EAAoCxO,iBAAiBrX,MAAKgmB,GAA0CA,EAAuChC,uBAAyBA,IAEnN,GAAG+B,EAAuC,CAEtC,MAAM3K,EAAgB2K,EAAuCvO,yBAAyBrlB,WAAU8zB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,gCACpO,IAAnB9K,GAEC2K,EAAuCvO,yBAAyB4O,OAAOhL,EAAe,EAE9F,CACJ,CACJ,CAEJ,KAEI,CAEA,IAAqD,IAAlDwK,EAAwB9J,uBAA0F,UAAxD8J,EAAwBrK,4BAAwC,CACzH,MAAMsK,EAAsCxE,GAAmBnK,aAAalX,MAAK8lB,GAAsCA,EAAmCjI,gBAAkBwC,EAA0BxC,gBAEtM,GAAGgI,EAAoC,CAEnC,MAAME,EAAyCF,EAAoCxO,iBAAiBrX,MAAKgmB,GAA0CA,EAAuChC,uBAAyBA,IAEnN,GAAG+B,EAAuC,CACtC,MAAM3K,EAAgB2K,EAAuCvO,yBAAyBrlB,WAAU8zB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,8BAAuG,KAAvED,EAA+CjK,uBACnT,IAAnBZ,GAEC2K,EAAuCvO,yBAAyB4D,GAAeU,uBAAwB,EACnGiK,EAAuCvO,yBAAyB4D,GAAe1D,UAC/EqO,EAAuCvO,yBAAyB4D,GAAe1D,SAAU,IAK7FqO,EAAuCvO,yBAAyBhlB,KAAKozB,EAE7E,KACI,CAEA,MAAMS,EAAqC,CACvC3K,qBAAsB2E,EAA0BhJ,iBAAiB4D,GAAuBS,qBACxFJ,oBAAqB+E,EAA0BhJ,iBAAiB4D,GAAuBK,oBACvF0I,qBAAsB3D,EAA0BhJ,iBAAiB4D,GAAuB+I,qBACxFxM,yBAA0B,CAACoO,GAC3BjK,oBAAqB0E,EAA0BhJ,iBAAiB4D,GAAuBU,oBACvFT,qBAAsBmF,EAA0BhJ,iBAAiB4D,GAAuBC,sBAE5F2K,EAAoCxO,iBAAiB7kB,KAAK6zB,EAC9D,CACJ,KACI,CAEA,MAAMA,EAAqC,CACvC3K,qBAAsB2E,EAA0BhJ,iBAAiB4D,GAAuBS,qBACxFJ,oBAAqB+E,EAA0BhJ,iBAAiB4D,GAAuBK,oBACvF0I,qBAAsB3D,EAA0BhJ,iBAAiB4D,GAAuB+I,qBACxFxM,yBAA0B,CAACoO,GAC3BjK,oBAAqB0E,EAA0BhJ,iBAAiB4D,GAAuBU,oBACvFT,qBAAsBmF,EAA0BhJ,iBAAiB4D,GAAuBC,sBAGtFoL,EAAiC,CACnCzI,cAAewC,EAA0BxC,cACzC7C,aAAcqF,EAA0BrF,aACxCuL,eAAgBlG,EAA0BkG,eAC1ClP,iBAAkB,CAACgP,IAGvBhF,GAAmBnK,aAAa1kB,KAAK8zB,EACzC,CACJ,CAGA,GAAqD,OAAlDV,EAAwB9J,uBAA0F,UAAxD8J,EAAwBrK,4BAAwC,CACzH,MAAMsK,EAAsCxE,GAAmBnK,aAAalX,MAAK8lB,GAAsCA,EAAmCjI,gBAAkBwC,EAA0BxC,gBAEtM,GAAGgI,EAAoC,CAEnC,MAAME,EAAyCF,EAAoCxO,iBAAiBrX,MAAKgmB,GAA0CA,EAAuChC,uBAAyBA,IAEnN,GAAG+B,EAAuC,CAEtC,MAAMY,EAA4BZ,EAAuCvO,yBAAyBrlB,WAAU8zB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,8BAAuG,OAAvED,EAA+CjK,sBACrV,IAAkC,IAA/B2K,EAECZ,EAAuCvO,yBAAyB4O,OAAOO,EAA2B,OAElG,CACA,MAAMvL,EAAgB2K,EAAuCvO,yBAAyBrlB,WAAU8zB,GAAkDA,EAA+CC,+BAAiCN,EAAwBM,+BAC1PH,EAAuCvO,yBAAyB4D,GAAeU,sBAAwB,KACnGiK,EAAuCvO,yBAAyB4D,GAAe1D,UAC/EqO,EAAuCvO,yBAAyB4D,GAAe1D,SAAU,EAEjG,CACJ,CACJ,CACJ,CACJ,CAEA8O,GAA6BZ,EAAyBc,EAAW,EAmF/DE,GAA+BvjC,MAAOwjC,EAAwBC,KAChE,MAAMC,QAAqCvxB,GAAqBqxB,GAChE,GAA2C,MAAxCE,EAA6BviC,OAAe,CAE3C,MAAMwiC,EAAqB,IAAIlH,GAE/BkH,EAAmB9P,aAAa/J,SAAS4X,IAClCA,EAAiBlH,gBAAkBiJ,EAAuBjJ,gBACzDkH,EAAiB1N,iBAAmByP,EAAuBzP,iBAC3D0N,EAAiB1N,iBAAiBlK,SAAS2M,IACvCA,EAAqB+J,QAAS,CAAI,IAEgB,IAAnDiD,EAAuBzP,iBAAiBjY,OACvC2lB,EAAiBwB,gBAAiB,EAElCxB,EAAiBwB,gBAAiB,EAEtCxB,EAAiBlB,QAAS,GAG9BkB,EAAiB1N,iBAAmB0N,EAAiB1N,iBAAiB7Z,QAAOqB,GAAiD,IAAzCA,EAAK2Y,yBAAyBpY,QAAa,IAGpI2gB,EAAqBiH,GAErB,MAAMC,EAA4BD,EAAmB9P,aAAalX,MAAK+kB,GAAoBA,EAAiBlH,gBAAkBiJ,EAAuBjJ,gBAErJiD,EAAsBD,GACtBG,EAAyBH,GAEzBn9B,IAAMgB,QAAQ,4DAA4B,CAACd,QAAS,wCAEpDsjC,GAA0BD,EAC9B,MAEIvjC,IAAMY,MAAMyiC,EAA6BtiC,KAAM,CAACb,QAAS,sCAE7DwG,IAA+B,EAAM,EAInC64B,GAAgC5/B,UAClC,MAAMw/B,QAA8BzsB,GAAwBrH,GAC5DixB,EAAqB6C,GAErB,MACMsE,EAD4BtE,EAAsB3L,aAAa1Z,QAAOqB,IAAgC,IAAxBA,EAAK0nB,iBAChCa,SAAQvoB,GAC7DA,EAAKwY,iBAAiB+P,SAAQ9P,GAC1BA,EAAQE,yBAAyBrkB,KAAIskB,IAAQ,CACzCyO,6BAA8BzO,EAASyO,6BACvCrK,4BAA6BpE,EAASoE,4BACtCN,4BAA6B9D,EAAS8D,4BACtCO,sBAAuBrE,EAASqE,sBAChCE,oBAAqBvE,EAASuE,oBAC9BqL,uBAAwB5P,EAAS4P,uBACjCxJ,cAAehf,EAAKgf,sBAIhCiD,EAAsBqG,EAAuB,EAI3CD,GAA4B7jC,WACG,IAA9B48B,GACCC,GAA8BD,GAGgC,SAA/DM,EAAiC+G,2BAAyE,IAAjC7G,EAAsBrhB,QAC9FohB,EAAoC,IAGJ,IAAjCC,EAAsBrhB,QACrBshB,EAAyB,IAG7BJ,EACI,IACOiH,IAKX/G,EAAoC,GAAG,EA4ErCgH,GAAmBnkC,MAAOiT,EAAmBkmB,EAAiBiL,KAChE,MAAMrK,QAA4B/mB,GAAeC,GAgBjD,GAdAoqB,EAAyB,CACrB4D,kBAAmB9H,EACnBgB,eAAgBJ,EAAoBV,YAAYc,eAChDzE,WAAYqE,EAAoBV,YAAY3D,WAC5CwL,iBAAkBnH,EAAoBV,YAAY5E,aAGtD8I,EAAgC,CAC5B0D,kBAAmB9H,EACnBgB,eAAgBJ,EAAoBV,YAAYc,eAChDzE,WAAYqE,EAAoBV,YAAY3D,WAC5CwL,iBAAkBnH,EAAoBV,YAAY5E,aAG5B,IAAvB2P,GAAuE,IAA3C3H,EAAkBvD,cAAcnd,QAAqE,OAArD0gB,EAAkBvD,cAAc,GAAGzlB,cAAuB,CACrI,MAAM4wB,EAAyCtK,EAAoBV,YAAY5E,WAAW3kB,KAAI,CAAC0mB,EAAgBkB,KAC3G,MAAM8J,EAAgChL,EAAexC,iBAAiBlkB,KAAK2mB,IAC9C,CACrBoB,qBAAsBpB,EAAqBoB,qBAC3CI,oBAAqBxB,EAAqBwB,oBAC1CI,qBAAsB5B,EAAqB4B,qBAC3CC,oBAAqB7B,EAAqB6B,oBAC1CnE,yBAA0B,OAWlC,MAN8B,CAC1BwD,aAAcnB,EAAemB,aAC7BR,gBAAgB,EAChBnD,iBAAkBwN,EAGM,IAG1B8C,EAA8B,IAAI/N,GACxC8N,EAAuCv0B,KAAKy0B,GAA2CD,EAA4B7P,WAAWtlB,KAAKo1B,KACnI1G,EAA8ByG,EAClC,GA4EEltB,GAAYC,iBAAO,MA2BnBmtB,GAA4BA,CAAC5M,EAAuBG,EAAej0B,KACrE,MAAMka,EAAala,EAEhBsT,GAAUqE,SACTwC,cAAc7G,GAAUqE,SAG5BrE,GAAUqE,QAAU3b,YAAW,KAE3B,MAAMuiC,EAA6B,IAAIrF,GACvCqF,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAeY,oBAAsB3a,EACjIif,EAA6BoF,GAG7BoC,GACIpC,EAA2B1K,cAFT,EAIlB0K,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAC5FsK,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAe8K,6BAC3GR,EAA2BrO,iBAAiB4D,GAAuBC,qBACtE,GACF,EAAE,EAmDH6M,GAAuCA,CAACC,EAAuBC,EAA+B7M,EAAej0B,KAC/G,MAAMka,EAAala,EAEhBsT,GAAUqE,SACTwC,cAAc7G,GAAUqE,SAG5BrE,GAAUqE,QAAU3b,YAAW,KAC3B,MAAM+kC,EAAyB,IAAIzH,GACnCyH,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+BzQ,yBAAyB4D,GAAeY,oBAAsB3a,EAC7Kqf,EAAyBwH,GAIzBJ,GACII,EAAuB3D,iBAAiByD,GAAuBhN,cAF7C,EAIlBkN,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+BzQ,yBAAyB4D,GACxI8M,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+BzQ,yBAAyB4D,GAAe8K,6BACvJgC,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+B/M,sBAPhG,EASlB,GACF,EAAE,EAGH4M,GAAgDA,CAAC9M,EAAcV,EAAesL,EAAyBuC,EAAejN,EAAsBwL,KAC9I,GAA2D,UAAxDd,EAAwBrK,6BACvB,GAAGmL,GACC,GAAmD,KAAhDd,EAAwB5J,oBAA2B,CAClD,MAAM2L,EAA8B,IAAI/N,GAEpC+N,EAA4B7P,WAAW3K,SAAQ0M,IACxCA,EAAemB,eAAiBA,GAE/BnB,EAAexC,iBAAiBlK,SAAQ2M,IACpC,GAAGA,EAAqBoB,uBAAyBA,EAE7C,GAAIpB,EAAqBtC,yBAAyBpY,OAAS,EAAG,CAE1D,MAAMgpB,EAAmBtO,EAAqBtC,yBAAyBxX,MAAKyX,GACxEA,EAASoE,8BAAgC+J,EAAwB/J,8BAGjEuM,EAEAA,EAAiBpM,oBAAsB4J,EAAwB5J,oBAG/DlC,EAAqBtC,yBAAyBhlB,KAAKozB,EAG3D,MAEI9L,EAAqBtC,yBAAyBhlB,KAAKozB,EAE3D,GAER,IAGR1E,EAA8ByG,EAClC,MAEK,GAAmD,KAAhD/B,EAAwB5J,oBAA2B,CACvD,MAAM2L,EAA8B,IAAI/N,GACxC+N,EAA4B7P,WAAW3K,SAAQ0M,IACxCA,EAAemB,eAAiBA,GAC/BnB,EAAexC,iBAAiBlK,SAAQ2M,IACjCA,EAAqBoB,uBAAyBA,GAC7CpB,EAAqBtC,yBAAyBrK,SAAQkb,IACQ,OAAvDA,EAA6BvM,wBAAyF,IAAvDuM,EAA6BvM,wBAC3FhC,EAAqBtC,yBAA2BsC,EAAqBtC,yBAAyBha,QAAO6qB,GAAgCA,EAA6BnC,+BAAiCN,EAAwBM,+BAC/N,GAER,GAER,IAGJhF,EAA8ByG,EAClC,OAIA,IAAqD,IAAlD/B,EAAwB9J,uBAA0F,UAAxD8J,EAAwBrK,4BAAwC,CACzH,MAAMoM,EAA8B,IAAI/N,GAEpC+N,EAA4B7P,WAAW3K,SAAQ0M,IACxCA,EAAemB,eAAiBA,GAE/BnB,EAAexC,iBAAiBlK,SAAQ2M,IACpC,GAAGA,EAAqBoB,uBAAyBA,EAE7C,GAAIpB,EAAqBtC,yBAAyBpY,OAAS,EAAG,CAE1D,MAAMgpB,EAAmBtO,EAAqBtC,yBAAyBxX,MAAKyX,GACxEA,EAASoE,8BAAgC+J,EAAwB/J,8BAGjEuM,EAEAA,EAAiBtM,sBAAwB8J,EAAwB9J,sBAGjEhC,EAAqBtC,yBAAyBhlB,KAAKozB,EAG3D,MAEI9L,EAAqBtC,yBAAyBhlB,KAAKozB,EAE3D,GAER,IAGR1E,EAA8ByG,EAClC,MAGK,IAAqD,IAAlD/B,EAAwB9J,uBAA2F,UAAxD8J,EAAwBrK,4BAAwC,CAC/H,MAAMoM,EAA8B,IAAI/N,GACxC+N,EAA4B7P,WAAW3K,SAAQ,CAAC0M,EAAgBkB,KACzDlB,EAAemB,eAAiBA,GAC/BnB,EAAexC,iBAAiBlK,SAAQ2M,IACjCA,EAAqBoB,uBAAyBA,GAC7CpB,EAAqBtC,yBAAyBrK,SAAQkb,IACM,OAArDA,EAA6BrM,qBAAqF,KAArDqM,EAA6BrM,sBACzFlC,EAAqBtC,yBAA2BsC,EAAqBtC,yBAAyBha,QAAO6qB,GAAgCA,EAA6BnC,+BAAiCN,EAAwBM,+BAC/N,GAER,GAER,IAEJhF,EAA8ByG,EAClC,OAMJ,GAAmD,KAAhD/B,EAAwB5J,qBAAsF,WAAxD4J,EAAwBrK,4BAAyC,CACtH,MAAMoM,EAA8B,IAAI/N,GAExC+N,EAA4B7P,WAAW3K,SAAQ0M,IACxCA,EAAemB,eAAiBA,GAE/BnB,EAAexC,iBAAiBlK,SAAQ2M,IACpC,GAAGA,EAAqBoB,uBAAyBA,EAE7C,GAAIpB,EAAqBtC,yBAAyBpY,OAAS,EAAG,CAE1D,MAAMgpB,EAAmBtO,EAAqBtC,yBAAyBxX,MAAKyX,GACxEA,EAASoE,8BAAgC+J,EAAwB/J,8BAGjEuM,EAEAA,EAAiBpM,oBAAsB4J,EAAwB5J,oBAG/DlC,EAAqBtC,yBAAyBhlB,KAAKozB,EAG3D,MAEI9L,EAAqBtC,yBAAyBhlB,KAAKozB,EAE3D,GAER,IAGJ1E,EAA8ByG,EAClC,MAEK,GAAmD,KAAhD/B,EAAwB5J,qBAAsF,WAAxD4J,EAAwBrK,4BAAyC,CAC3H,MAAMoM,EAA8B,IAAI/N,GACxC+N,EAA4B7P,WAAW3K,SAAQ0M,IACxCA,EAAemB,eAAiBA,GAC/BnB,EAAexC,iBAAiBlK,SAAQ2M,IACjCA,EAAqBoB,uBAAyBA,IAC7CpB,EAAqBtC,yBAA2BsC,EAAqBtC,yBAAyBha,QAAO6qB,GAAgCA,EAA6BxM,8BAAgC+J,EAAwB/J,8BAC9N,GAER,IAGJqF,EAA8ByG,EAClC,EAGiB,IAAlBrN,GACCkM,GAA6BZ,EAAyBc,EAC1D,EAIEF,GAA+BA,CAACZ,EAAyBc,KAC3D,GAAG7F,GAAoD,IAA9BA,EAAmBzhB,OAAa,CACrD,IAAIkpB,EAAsB,IAAIzH,GAE9B,MAAM0H,EAAeD,EAAoBtoB,MAAKnB,GAAQA,EAAKgd,8BAAgC+J,EAAwB/J,8BACnH,GAAG0M,GACC,GAAgD,WAA7CA,EAAahN,6BACZ,GAAmD,KAAhDqK,EAAwB5J,oBACvBsM,EAAsBzH,EAAmBrjB,QAAOqB,GAAQA,EAAKgd,8BAAgC+J,EAAwB/J,mCAEpH,GAAmD,KAAhD+J,EAAwB5J,oBAA2B,CACvD,MAAMoM,EAAmBvH,EAAmB7gB,MAAKyX,GAAYA,EAASoE,8BAAgC+J,EAAwB/J,8BAC3HuM,EACCA,EAAiBpM,oBAAsB4J,EAAwB5J,qBAG/D4J,EAAwB/H,cAAgBwC,EAA0BxC,cAClEyK,EAAoB91B,KAAKozB,GAEjC,OAEC,GAAgD,UAA7C2C,EAAahN,4BACjB,GAAGmL,GACC,GAAmD,KAAhDd,EAAwB5J,oBAA2B,CAClD,MAAMoM,EAAmBvH,EAAmB7gB,MAAKyX,GAAYA,EAASoE,8BAAgC+J,EAAwB/J,8BAAkE,IAAnCpE,EAASqE,wBACnKsM,EACCA,EAAiBpM,oBAAsB4J,EAAwB5J,oBAGV,OAAlD4J,EAAwB9J,wBAAoF,IAAlD8J,EAAwB9J,wBACjFwM,EAAsBA,EAAoB9qB,QAAOia,GAAYA,EAASoE,8BAAgC+J,EAAwB/J,8BAG1I,MAEK,GAAmD,KAAhD+J,EAAwB5J,oBAA2B,CACvD,MAAMoM,EAAmBvH,EAAmB7gB,MAAKyX,GAAYA,EAASoE,8BAAgC+J,EAAwB/J,8BAC3HuM,EACCA,EAAiBpM,oBAAsB4J,EAAwB5J,qBAG/D4J,EAAwB/H,cAAgBwC,EAA0BxC,cAClEyK,EAAoB91B,KAAKozB,GAEjC,OAIA,IAAqD,IAAlDA,EAAwB9J,uBAAqF,OAAlD8J,EAAwB9J,sBAA+B,CACjH,MAAMsM,EAAmBvH,EAAmB7gB,MAAKyX,GAAYA,EAASoE,8BAAgC+J,EAAwB/J,8BAC3HuM,IAC6C,KAAzCA,EAAiBpM,qBAAuE,OAAzCoM,EAAiBpM,oBAC/DsM,EAAsBA,EAAoB9qB,QAAOia,GAAYA,EAASoE,8BAAgC+J,EAAwB/J,8BAEjF,KAAzCuM,EAAiBpM,qBAAuE,OAAzCoM,EAAiBpM,sBACpEoM,EAAiBtM,sBAAwB8J,EAAwB9J,uBAG7E,MAEK,IAAqD,IAAlD8J,EAAwB9J,sBAA+B,CAC3D,MAAMsM,EAAmBvH,EAAmB7gB,MAAKyX,GAAYA,EAASoE,8BAAgC+J,EAAwB/J,8BAC3HuM,GAA6D,KAAzCA,EAAiBpM,qBAAuE,OAAzCoM,EAAiBpM,oBACnFoM,EAAiBtM,sBAAwB8J,EAAwB9J,uBAGjE8J,EAAwB/H,cAAgBwC,EAA0BxC,cAClEyK,EAAoB91B,KAAKozB,GAEjC,OAMRA,EAAwB/H,cAAgBwC,EAA0BxC,cAClEyK,EAAoB91B,KAAKozB,GAE7B9E,EAAsBwH,EAC1B,MAGIxH,EAAsB,CAAC8E,GAC3B,EAcEtM,GAXY7C,aAAW,CACzBC,KAAM,CACJ,iBAAkB,CAChBruB,MAAO,WAET,6BAA8B,CAC5BA,MAAO,aAKCsuB,GA6LhB,OA3LAhrB,qBAAU,KAEN,MAAM68B,EAAwBC,KACI,IAA3BA,GAAsE,KAAnC7I,EAA4B7wB,KAC9D6yB,IAAkB,GAClBvb,KACJ,EAOJ,OAJA7W,GAAuB3N,aAAaC,QAAQ,MAAO0mC,IAEnDj4B,GAAiBi4B,GAEV,MAEN,GACF,IAEH78B,qBAAU,KACN,GAA0C,IAAvCi0B,EAA4Bp7B,QAAgBsF,EAAa,CAC9B4+B,OAAOC,QAAQ,oDAAD1mC,OAAgC29B,EAA4BvH,aAAY,0EAExG5sB,eAAeqC,QAAQ,8BAA+B/C,KAAKmD,UAAU0xB,IACrEn0B,eAAeqC,QAAQ,6BAA8B/C,KAAKmD,UAAU0rB,IACpEnuB,eAAeqC,QAAQ,oBAAqB/C,KAAKmD,UAAU4xB,IAExDa,GACCl1B,eAAeqC,QAAQ,+BAAgC/C,KAAKmD,UAAUyyB,IAGvEY,IACC91B,eAAeqC,QAAQ,sBAAuB/C,KAAKmD,UAAUqzB,KAG9DJ,GACC11B,eAAeqC,QAAQ,qBAAsB/C,KAAKmD,UAAUizB,IAEhE90B,KAGA3B,GAEZ,KAEK,IAAGk1B,EAA4Bp7B,OAAO,CACvCm7B,GAAe,GAEf,MAAMiJ,EAAsB1hC,IACxB,MAAM2hC,EAAsB,gFAE5B,OADA3hC,EAAE4hC,YAAcD,EACTA,CAAmB,EAGxBE,EAAUn4B,EAAQo4B,OAAM,CAACt4B,EAAU0B,KACrC,GAAIstB,EAAa,CAIb,IAHqBgJ,OAAOC,QACxB,iKA0BA,OAAO,EAxBO,CACd,MAAMM,EAA4BpjB,GAA6BrI,QAAOqB,GAAuB,IAAfA,EAAKnI,QAEnFjL,eAAeqC,QAAQ,2BAA4B/C,KAAKmD,UAAU+6B,IAClEx9B,eAAeqC,QAAQ,8BAA+B/C,KAAKmD,UAAU0xB,IACrEn0B,eAAeqC,QAAQ,6BAA8B/C,KAAKmD,UAAU0rB,IACpEnuB,eAAeqC,QAAQ,oBAAqB/C,KAAKmD,UAAU4xB,IAExDa,GACCl1B,eAAeqC,QAAQ,+BAAgC/C,KAAKmD,UAAUyyB,IAGvEY,IACC91B,eAAeqC,QAAQ,sBAAuB/C,KAAKmD,UAAUqzB,KAG9DJ,GACC11B,eAAeqC,QAAQ,qBAAsB/C,KAAKmD,UAAUizB,IAGhE4H,IACAn4B,EAAQ4B,KAAK9B,EAASwB,SAE1B,CAGJ,CACA,OAAO,CAAI,IAGTg3B,EAAeA,KACjB,MAAMD,EAA4BpjB,GAA6BrI,QAAOqB,GAAuB,IAAfA,EAAKnI,QAEnFjL,eAAeqC,QAAQ,2BAA4B/C,KAAKmD,UAAU+6B,IAElEx9B,eAAeqC,QAAQ,8BAA+B/C,KAAKmD,UAAU0xB,IACrEn0B,eAAeqC,QAAQ,6BAA8B/C,KAAKmD,UAAU0rB,IACpEnuB,eAAeqC,QAAQ,oBAAqB/C,KAAKmD,UAAU4xB,IAExDa,GACCl1B,eAAeqC,QAAQ,+BAAgC/C,KAAKmD,UAAUyyB,IAGvEY,IACC91B,eAAeqC,QAAQ,sBAAuB/C,KAAKmD,UAAUqzB,KAG9DJ,GACC11B,eAAeqC,QAAQ,qBAAsB/C,KAAKmD,UAAUizB,GAChE,EAMJ,OAHAuH,OAAOlxB,iBAAiB,eAAgBoxB,GACxCF,OAAOlxB,iBAAiB,SAAU0xB,GAE3B,KACHR,OAAOjxB,oBAAoB,eAAgBmxB,GAC3CG,IACAL,OAAOjxB,oBAAoB,SAAUyxB,EAAa,CAE1D,CAEQp/B,GACJuC,GACJ,IACD,CAACuzB,EAA6BE,EAAmBa,EAA8B/G,EAA4B9vB,EAAcuC,EAAc3B,EAAYV,EAAe4G,EAAS8uB,IAE9K/zB,qBAAU,MACS,IAAZ/I,GAAqBgH,EAAKD,UACA,WAAtBC,EAAKoF,aACJ4B,EAAQ4B,KAAK,QAGV/G,eAAem0B,4BA/2DMv8B,WAChC+G,IAA+B,GAE/B,MAAM++B,EAA6Bp+B,KAAKC,MAAMS,eAAe29B,0BACvDC,EAAgCt+B,KAAKC,MAAMS,eAAem0B,6BAC1D0J,EAAsBv+B,KAAKC,MAAMS,eAAeq0B,mBAChDyJ,EAA+Bx+B,KAAKC,MAAMS,eAAemuB,4BAU/D,GARA9T,GAAgCqjB,GAEhCE,EAA8BjG,gBAAiB,EAE/CvD,EAA+B9gB,KAAEW,UAAU2pB,IAC3CtJ,EAAqBhhB,KAAEW,UAAU4pB,IACjCpI,EAA8BniB,KAAEW,UAAU6pB,IAEvC99B,eAAek1B,6BAA6B,CAC3C,MAAM6I,EAAiCz+B,KAAKC,MAAMS,eAAek1B,8BACjED,EAAyB3hB,KAAEW,UAAU8pB,IACrC5I,EAAgC7hB,KAAEW,UAAU8pB,GAChD,CAEA,GAAG/9B,eAAe81B,oBAAoB,CAClC,MAAMkI,EAAwB1+B,KAAKC,MAAMS,eAAe81B,qBACxDC,GAAuBziB,KAAEW,UAAU+pB,GACvC,CAEA,GAAGh+B,eAAe01B,mBAAmB,CACjC,MAAMuI,EAAuB3+B,KAAKC,MAAMS,eAAe01B,oBACvDC,GAAsBriB,KAAEW,UAAUgqB,GACtC,CAEApI,GAAsB,CAClBnrB,UAAWypB,EAA4BH,WACvCvI,aAAc,KAGlBzrB,eAAeC,QAEfk2B,IAAkB,GAClBE,IAAsB,GACtB13B,IAA+B,EAAM,EAu0DzBu/B,GAGAtjB,KAGZ,GACD,CAACzjB,EAASgH,IAEb+B,qBAAU,KACN,IAAkC,IAA/BtB,EAAqC,CACpC,MAAMiN,EAAiBvU,IACE,MAAlBA,EAAMokB,SACLpkB,EAAMmR,iBAGoC,KAA3C0rB,EAA4BH,aAAqD,IAAhC32B,KAAwE,IAA/B+xB,IAA0D,MAAlB93B,EAAMokB,UAClH,MAAlBpkB,EAAMokB,SAA0D,IAAvCyY,EAA4Bp7B,QACpDzB,EAAMmR,iBACNiuB,MAGsB,MAAlBp/B,EAAMokB,SAAmBgW,EACa,IAAvCyC,EAA4Bp7B,SAA8D,IAA9Co7B,EAA4BwC,cACvEG,KAE2C,IAAvC3C,EAA4Bp7B,OAChCg+B,MAAM,0EAADvgC,OAAgD29B,EAA4BvH,aAAY,gJAElD,IAAvCuH,EAA4Bp7B,SAA+D,IAA9Co7B,EAA4BwC,eAC7EK,KAIkB,MAAlB1/B,EAAMokB,UACd/c,IAA+B,GACe,IAAvCw1B,EAA4Bp7B,QAC3BrB,YAAW,KACPiH,IAA+B,GAC/BovB,IAA8B,EAAK,GACpC,MAGf,EAKJ,OAFAjiB,SAASC,iBAAiB,UAAWF,GAE9B,KACHC,SAASE,oBAAoB,UAAWH,EAAc,CAE9D,IAED,CAACsoB,EAA6B/E,GAA4B/xB,GAA6B+xB,GAA4BxwB,IAGlHvF,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACiQ,KAAS,CAAC5P,SAAS,KAAKO,GAAI,CAAC0D,GAAI,KAAKpE,SACnCF,cAACoE,IAAG,CAACxD,GAAI,CAAEkX,QAAS,OAAQrU,OAAQ,QAAQvD,SACxCC,eAACsmB,KAAI,CAACC,WAAS,EAACpjB,QAAS,EAAG1C,GAAI,CAACqb,GAAI,GAAKC,GAAI,IAAKhc,SAAA,CAE/CC,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SAAA,CAEbF,cAAC2jB,KAAc,CAAC9T,UAAW+T,KAAOhjB,GAAI,CAAE6C,OAAQ,QAASkf,UAAW,EAAG5P,aAAc,QAAS7S,SACzF88B,GACGh9B,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,SAAUuC,gBAAiB,UAAWR,OAAQ,QAAQvD,SAAA,CAC5IF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,mFAIrDC,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACiE,IAAG,CAAAlE,SAAA,CACAF,cAACqD,IAAK,CAACE,UAAU,MAAMD,QAAS,EAAG1C,GAAI,CAACiB,eAAgB,SAAUyC,GAAI,KAAKpE,SACtEqgB,GAAsB/R,KAAI,CAACoU,EAAuBC,IAC/C7iB,cAAC8iB,KAAK,CAACC,aAAcH,EAAsBnC,YAAa/c,MAAM,QAAOxD,SACjEF,cAACgjB,KAAI,CAAC/gB,MAAO2gB,EAAsBtC,UAAW5c,MAAOmf,IAA2B1C,GAAWE,UAAY,UAAY,UACnHnf,QAASA,IAnkElC+hB,EAACC,EAAW5C,KAEnC,GADAF,GAAc,CAACC,UAAW6C,EAAW5C,UAAWA,IAC/B,IAAd4C,EAAgB,CACjB,MAAMf,EAA8BzB,GAAyB7H,QAAOuJ,GAAuD,IAA/BA,EAAqBrQ,OAA8C,IAA/BqQ,EAAqBrQ,OAA8C,IAA/BqQ,EAAqBrQ,QACzLoP,GAAgCgB,GAChClB,GAAiCkB,EACnC,MACK,GAAiB,IAAde,EAAgB,CACpB,MAAMZ,EAA2B5B,GAAyB7H,QAAOuJ,GAAuD,IAA/BA,EAAqBrQ,OAAeqQ,EAAqB6C,eAAiBhgB,EAAK6C,SACxKqZ,GAAgCmB,GAChCrB,GAAiCqB,EACrC,GAwjE+DW,CAAmBJ,EAAwBD,EAAsBtC,cAAc,qBAAAhjB,OAFFulB,QAOxG1iB,eAACiE,IAAG,CAACxD,GAAI,CAAC0D,GAAI,GAAKnD,SAAU,WAAYM,QAAS,OAAQI,eAAgB,SAAUH,cAAe,UAAUxB,SAAA,CACjE,IAAvC+6B,EAA4Bp7B,OACzBM,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACgJ,UAAW,SAAUtF,GAAI,GAAKtD,SAAU,QAAQd,SAAC,2HACtFF,cAACmjB,KAAU,CAACviB,GAAI,CAAC8C,MAAO,QAAS3C,WAAY,SAAUI,SAAU,WAAYC,MAAO,GAAIC,IAAK,GAAIL,SAAU,SAAUoiB,OAAQ,WAAYC,YAAY,oBAAUniB,QAASA,IAj3DlLxC,WACtCu+B,IAAkB,GAClBE,IAAsB,GACtBjC,EAA+BN,GAC/BQ,EAAqB,IACrBG,GAA6B,GAC7BE,EAAiC,IACjCE,EAA6B,CAAC,GAC9BE,EAAoC,IACpCE,EAAyB,IACzBE,IACAM,EAA8B,CAAC,GAC/BM,KACAZ,IACAQ,KACAN,IACAza,IAA6B,EAi2DiM4B,QAGlL,KAEJnjB,eAACkE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACgJ,UAAW,SAAU5I,SAAU,WAAWd,SAAA,CAAC,gBAAWigB,GAAWG,UAAU,YAAO1C,OAASD,OAAO,oBAGpI3d,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUV,SAAU,YAAYjB,SACvEF,cAAC+B,IAAS,CAACnB,GAAI,CAACyB,GAAI,GAAKD,MAAO,IAAK,iCAAkC,CAACwH,UAAW,WAAYmV,KAAK,QAChG7c,QAAQ,WAAWqhB,YAAY,+CAA4B/gB,MAAOse,GAAqBxe,SAAWC,GAxkEpHC,KAC1B,MAAMka,EAAala,EACnBue,GAAuBrE,GAGrByE,GADW,KAAV3e,EAC+Bwe,GAEAK,GAAeL,GAA+BtE,GAChF,EAgkEoJ8G,CAAqBjhB,EAAEI,OAAOH,OACtII,WAAY,CACR6gB,eACIzjB,cAAC8C,IAAc,CAAC3B,SAAS,QAAOjB,SAACF,cAAC0jB,KAAU,MAEhD7gB,aACI7C,cAAC8C,IAAc,CAAC3B,SAAS,MAAKjB,SACD,KAAxB4gB,GACG9gB,cAACsB,IAAS,CAACV,GAAI,CAACwiB,OAAQ,WAAYC,YAAY,SAC5CniB,QAASA,IAAM,CAAC6f,GAAuB,IAAKI,GAAgCH,OAGhF,eAS5B7gB,eAAC6jB,KAAK,CAACC,cAAY,EAAA/jB,SAAA,CACfF,cAACmkB,KAAS,CAAAjkB,SACNC,eAACikB,KAAQ,CAACxjB,GAAI,CAAC,OAAQ,CAAC8C,MAAO,mBAAoBO,gBAAiB,SAAS/D,SAAA,CACzEF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,WAAWd,SAAC,QACnDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,WAAWd,SAAC,4BACnDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,WAAWd,SAAC,wBAG3DF,cAACukB,KAAS,CAAArkB,SACLghB,GAA6B1S,KAAI,CAAC+vB,EAAkB0G,IACjD9kC,eAACikB,KAAQ,CAACM,OAAK,EAACC,KAAK,WACjB/jB,GAAI,CAAEwiB,OAAQ,UAAWnf,gBAA4C,IAA3Bs6B,EAAiBxsB,MAAc,UAAY,OACrF,SAAU,CAAC9N,gBAA4C,IAA3Bs6B,EAAiBxsB,MAAc,qBAAuB,kCAClF7Q,QAASA,IAt2DvBxC,WACJ,IAA3B6/B,EAAiBxsB,OAAekpB,EAA4BvH,eAAiB6K,EAAiBhqB,QAAQjD,UAAuC,IAA3BitB,EAAiBxsB,OAAekpB,EAA4BvH,eAAiB6K,EAAiBhqB,QAAQjD,SACzK,KAA3C2pB,EAA4BH,YAAgE,KAA3CG,EAA4BH,YAA4D,IAAvCG,EAA4Bp7B,aACvHw+B,GAAuBE,GAG7BV,MAAM,0EAADvgC,OAAgD29B,EAA4BvH,aAAY,6HAIlE,IAA3B6K,EAAiBxsB,OAAekpB,EAA4BvH,eAAiB6K,EAAiBhqB,QAAQjD,WAC5D,KAA3C2pB,EAA4BH,YAA4D,IAAvCG,EAA4Bp7B,OAC5Eg+B,MAAM,0EAADvgC,OAAgD29B,EAA4BvH,aAAY,mIAGvF2K,GAAuBE,GAErC,EAq1D+D2G,CAA8B3G,GAAkBr+B,SAAA,CAE/DF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,QAAQlC,SAAEq+B,EAAiBlZ,QAC/DrlB,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,SAASlC,SAAEq+B,EAAiBhqB,QAAQnD,cACxEpR,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,SAASlC,SAAEq+B,EAAiBhqB,QAAQjD,aAPvCitB,EAAiBlZ,mBAiB9ErlB,cAACoE,IAAG,CAACxC,MAAO,CAACQ,MAAO,OAAQia,UAAW,OAAQtJ,aAAc,OAAQ2P,OAAQ,gBAAiBjf,OAAQ,QAAS8hB,SAAU,QAAQrlB,SAE5F,IAA7Bi7B,EAAkB1gB,SAA6C,IAA7B2iB,KAA4D,IAAtB5E,EACpE,KAEJx4B,cAAAC,WAAA,CAAAC,SACKk9B,GACGj9B,eAACiE,IAAG,CAACxD,GAAI,CAACqD,gBAAiB,UAAW8O,aAAc,OAAQtP,OAAQ,OAAQhC,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,UAAUxB,SAAA,CAClKF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,kHAGjDF,cAAAC,WAAA,CAAAC,SACIF,cAAA,OAAK+P,UAAU,qBAAoB7P,SAC/BC,eAACg2B,KAAI,CAACv1B,GAAI,CAACE,EAAG,EAAGW,QAAS,eAAevB,SAAA,CACpCi7B,EAAkB5I,aAAa/jB,KAAI,CAAC4qB,EAAiBC,IAClDl5B,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC9BF,cAACs5B,KAAc,CACX14B,GAAI,CACJwB,MAAO,aAAc0Z,GAAI,MAAOC,GAAI,MAAOhJ,aAAc,MAAO,SAAU,CAAC9O,gBAAiBy3B,EAA0BrF,eAAiB+C,EAAgB/C,aAAe,UAAY,sBAClLpyB,gBAAiBy3B,EAA0BrF,eAAiB+C,EAAgB/C,aAAe,UAAY,IACvGn1B,QAASA,IAAMqhC,GAA0BnJ,GAAiBl5B,SAE1DC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQE,WAAY,UAAUzB,SAAA,CAC7CF,cAAC05B,KAAY,CAAC94B,GAAI,CAACsjB,SAAU,OAAQ,+BAAgC,CAACljB,SAAU,SAAU0C,MAAO,YAAYxD,SAACF,cAAC45B,KAAQ,MACvH55B,cAAC65B,KAAY,CAACC,QAASV,EAAgB/C,aAAcz1B,GAAI,CAAC,6BAA8B,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,qBAI/G,IAAnC01B,EAAgBwI,iBAA8D,IAAnCxI,EAAgBT,eACxD,KAEAx4B,eAAAF,WAAA,CAAAC,SAAA,EACwC,IAAnCk5B,EAAgBwI,eACb5hC,cAAAC,WAAA,CAAAC,SACIF,cAACmlC,KAAe,CAACvkC,GAAI,CAAC8C,MAAO,QAAS1C,SAAU,SAAU2C,OAAQ,QAAS0f,YAAY,6BAG3F,KAGH8X,EAAkBxC,eACf,MAE2B,IAA3BS,EAAgB8F,OACZl/B,cAAAC,WAAA,CAAAC,SACIF,cAACiB,IAAU,CAACmkC,KAAK,MAAMxkC,GAAI,CAACsP,GAAI,GAAKpM,OAAQ,KAAM5C,QAASA,IAj+C1GxC,OAAO23B,EAAc6C,KACnDzzB,IAA+B,GAE/B,MAEM4/B,SAFqCzzB,GAAqBqpB,EAA4BH,aAEjCh7B,KAAKub,MAAK0jB,GAAoCA,EAAiC7F,gBAAkBA,IAE5JiC,EAAkB5I,aAAa/J,SAAS4X,IACjCA,EAAiBlH,gBAAkBmM,EAAsBnM,gBACxDkH,EAAiB1N,iBAAmB2S,EAAsB3S,iBAC1D0N,EAAiB1N,iBAAiBlK,SAAS2M,IACvCA,EAAqB+J,QAAS,CAAK,IAEvCkB,EAAiBlB,QAAS,EAC9B,IAGJ,MAAMoD,EAA4BnH,EAAkB5I,aAAalX,MAAK+kB,GAAoBA,EAAiBlH,gBAAkBA,IAEzHwD,GAAmBnK,aAAamD,MAAK0K,GAAoBA,EAAiB/J,eAAiBA,MAC3FqG,GAAmBnK,aAAeqK,IAGtC2F,GAA0BD,GAE1B78B,IAA+B,EAAM,EAw8CyG6/B,CAA0BlM,EAAgB/C,aAAc+C,EAAgBF,eAAeh5B,SACrJF,cAACulC,KAAQ,CAAC3kC,GAAI,CAAC8C,MAAO,OAAQ1C,SAAU,UAAWqiB,YAAY,iBAKvEljB,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACiB,IAAU,CAACmkC,KAAK,MAAMxkC,GAAI,CAACsP,GAAI,GAAKpM,OAAQ,KAAM5C,QAASA,KAAMskC,OA3jCtGtM,EA2jCyIE,EAAgBF,cA1jCjMoD,EAAsBliB,KAAEW,UAAU2hB,KAClCj3B,IAA+B,QAC/BjH,YAAW,KACP,MAAM2jC,EAAyBzF,GAAmBnK,aAAalX,MAAKsmB,GAAkCA,EAA+BzI,gBAAkBA,IAEjJuM,EAAsCjJ,EAAmBnhB,MAAKqqB,GAA0BA,EAAuBxM,gBAAkBiJ,EAAuBjJ,gBAE3JuM,EAECtD,EAAuBzP,iBAAiBlK,SAAQmd,IAE5C,IAAIhT,EAAU8S,EAAoC/S,iBAAiBrX,MAAKuqB,GAA8CA,EAA2CvG,uBAAyBsG,EAA2CtG,uBAElO1M,GAECA,EAAQE,yBAA2BF,EAAQE,yBAAyBha,QAAO+nB,GACvE+E,EAA2C9S,yBAAyB6C,MAAKmQ,GAAQA,EAAKtE,+BAAiCX,EAAEW,iCAI3C,IAA/EoE,EAA2C9S,yBAAyBpY,OACnEkrB,EAA2C9S,yBAAyBrK,SAAQsd,IACxE,GAAgE,OAA7DA,EAAmC3O,uBAA6F,OAA3D2O,EAAmCzO,qBAAmG,UAAnEyO,EAAmClP,4BAE1KjE,EAAQE,yBAA2BF,EAAQE,yBAAyBha,QAAO+nB,GAAKA,EAAEW,+BAAiCuE,EAAmCvE,oCAGrJ,GAA8D,OAA3DuE,EAAmCzO,qBAAmG,WAAnEyO,EAAmClP,4BAC1GjE,EAAQE,yBAA2BF,EAAQE,yBAAyBha,QAAO+nB,GAAKA,EAAEW,+BAAiCuE,EAAmCvE,mCAGtJ,CACA,MAAM9K,EAAgB9D,EAAQE,yBAAyBrlB,WAAUozB,GAAKA,EAAEW,+BAAiCuE,EAAmCvE,gCAErH,IAAnB9K,EAEA9D,EAAQE,yBAAyB4D,GAAiBqP,EAKlDnT,EAAQE,yBAAyBhlB,KAAKi4B,EAE9C,KAIJL,EAAoC/S,iBAAmB+S,EAAoC/S,iBAAiB7Z,QAAOktB,GAA+BA,EAA4B1G,uBAAyBsG,EAA2CtG,wBAItPoG,EAAoC/S,iBAAiB7kB,KAAK83B,EAC9D,IAKJnJ,EAAmB3uB,KAAKs0B,GAG5B3F,EAAmBhU,SAASkd,IACxBA,EAAuBhT,iBAAmBgT,EAAuBhT,iBAAiB7Z,QAAOsc,GAAiF,IAAzDA,EAAqBtC,yBAAyBpY,QAAa,IAGhL,MAAMurB,EAAuCxJ,EAAmBhvB,WAAU0M,GAAyC,IAAjCA,EAAKwY,iBAAiBjY,UAC3D,IAA1CurB,GACCxJ,EAAmBiF,OAAOuE,EAAsC,GAGpE,MAAM9D,EAAyB,CAC3B1wB,UAAWkrB,GAAmBlrB,UAC9B+gB,aAAciK,GAGlByF,GAA6BC,EAAwBC,EAAuB,GAC7E,KA5EqCjJ,KA2jCwK,EAAAh5B,SAChIF,cAACimC,KAAY,CAACrlC,GAAI,CAAC8C,MAAO,MAAO1C,SAAU,UAAWqiB,YAAY,eAGtErjB,cAACiB,IAAU,CAACmkC,KAAK,MAAMxkC,GAAI,CAACsP,GAAI,GAAKpM,OAAQ,KAAM5C,QAASA,KAAMglC,OAAgC9M,EAAgB/C,aA/8C3I6C,EA+8CyJE,EAAgBF,cA98C5NzzB,IAA+B,QAE/BjH,YAAW,KACP,MAAM2nC,EAAwC3J,EAAmBnhB,MAAK+qB,GAA2BA,EAAwBlN,gBAAkBA,IAE3I,GAAGiN,EACChL,EAAkB5I,aAAa/J,SAAS4X,IACjCA,EAAiBlH,gBAAkBiN,EAAsCjN,gBACxEkH,EAAiB1N,iBAAmByT,EAAsCzT,iBAC1E0N,EAAiB1N,iBAAiBlK,SAAS2M,IACvCA,EAAqB+J,QAAS,CAAI,IAEtCkB,EAAiBlB,QAAS,EAC9B,IAGJxC,GAAmBnK,aAAa/J,SAAS2Y,IAClCA,EAAmCjI,gBAAkBiN,EAAsCjN,gBAC1FiI,EAAmCzO,iBAAmByT,EAAsCzT,iBAChG,QAGJ,CACAyI,EAAkB5I,aAAa/J,SAAS4X,IACjCA,EAAiBlH,gBAAkBA,IAClCkH,EAAiB1N,iBAAmB,GACpC0N,EAAiBlB,QAAS,EAC9B,IAGJ,MACMmH,EADsB,IAAI3J,IACsBnK,aAAa1Z,QAAOunB,GAAoBA,EAAiBlH,gBAAkBA,IACjIwD,GAAmBnK,aAAe8T,CACtC,CAEAxJ,GAAuBziB,KAAEW,UAAUyhB,IAEnC,MAAM8F,EAA4BnH,EAAkB5I,aAAalX,MAAK+kB,GAAoBA,EAAiBlH,gBAAkBA,IAC7HqJ,GAA0BD,GAE1B,MAAMgE,EAAwClK,EAAsBvjB,QAAOqB,GAAQA,EAAKgf,gBAAkBA,IACpGqN,EAA2CrK,EAAmBrjB,QAAOqB,GAAQA,EAAKgf,gBAAkBA,IAEpGsN,EAAwBF,EAAsChpC,OAAOipC,GAC3EpK,EAAsBqK,GAEtB/gC,IAA+B,EAAM,GACtC,KAhDiCygC,IAAehN,CA+8CwL,EAAAh5B,SAC3JF,cAACkxB,KAAU,CAACtwB,GAAI,CAAC8C,MAAO,MAAO1C,SAAU,UAAWqiB,YAAY,uBAIjF,YAAA/lB,OA9CyC+7B,MAmDxDl5B,eAACm5B,KAAc,CACX14B,GAAI,CAACkb,GAAI,MAAOC,GAAI,MAAOhJ,aAAc,MAAO9O,gBAA4D,+BAA3Cy3B,EAA0BrF,aAAiC,UAAY,GACpI,SAAU,CAACpyB,gBAA4D,+BAA3Cy3B,EAA0BrF,aAAiC,UAAY,uBACvGn1B,QAASA,KAAMulC,OAt6BpC7O,EAs6B8DuD,EAAkBvD,eAr6B9E,IAA9B0D,GACCC,GAA8BD,GAGE,IAAjCQ,EAAsBrhB,QACrBshB,EAAyB,IAG7BJ,EACI,CACItF,aAAc,6BACd3D,iBAAkBkF,SAI1BiE,EACI,CACI8G,0BAA2B,OAC3BjQ,iBAAkBkF,IAnBKA,KAs6B+F,EAAA13B,SAAA,CAE1EF,cAAC05B,KAAY,CAAC94B,GAAI,CAACsjB,SAAU,OAAQ,+BAAgC,CAACljB,SAAU,SAAU0C,MAAO,YAAYxD,SACzGF,cAAC45B,KAAQ,CAACh5B,GAAI,CAAC+4B,UAAsD,+BAA3C+B,EAA0BrF,aAAiC,gBAAkB,oBAG3Gr2B,cAAC65B,KAAY,CAACC,QAAS,6BAAel5B,GAAI,CAAC,6BAA8B,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,kBAGhI1D,cAAC+5B,KAAQ,CAACC,GAAIsB,EAA2BrB,QAAQ,OAAOC,eAAa,EAAAh6B,SACjEF,cAAA,OAAK4B,MAAO,CAAE0rB,YAAa,QAASptB,SAC/Bi7B,EAAkBvD,cAAcppB,KAAI,CAACkqB,EAAmBgO,IACrDvmC,eAACm5B,KAAc,CAA6C14B,GAAI,CAACkb,GAAI,MAAOC,GAAI,MAAO3Z,MAAO,OAAQ2Q,aAAc,MAAO,SAAU,CAAC9O,gBAAiB,uBACnJ/C,QAASA,IA15BvCxC,OAAOiT,EAAmBkmB,EAAiBiL,KAC7Er9B,IAA+B,GAC/B83B,IAA4B,GAGzBvB,EACIF,EAAsB6D,oBAAsB9H,IACjB,IAAvBiL,QACOD,GAAiBlxB,EAAmBkmB,EAAiBiL,GAEhC,IAAvBA,GAA4B7H,EAA4BwC,eAAwC,IAAvBqF,GAA4B7H,EAA4ByC,cACrI3B,EAAyB,CACrB4D,kBAAmB9H,EACnBgB,gBAAgB,EAChBzE,WAAY+G,EAAkBvD,cAAc,GAAGxD,WAC/CwL,iBAAkBzE,EAAkBvD,cAAc,GAAGzE,aAGzD8I,EAAgC,CAC5B0D,kBAAmB9H,EACnBgB,gBAAgB,EAChBzE,WAAY+G,EAAkBvD,cAAc,GAAGxD,WAC/CwL,iBAAkBzE,EAAkBvD,cAAc,GAAGzE,cAG9B,IAAvB2P,GAAuE,IAA3C3H,EAAkBvD,cAAcnd,QAIrC,IAAvBqoB,GAAuE,IAA3C3H,EAAkBvD,cAAcnd,QAAgBwgB,EAA4BwD,gBAH5G1C,EAAyBC,GACzBC,EAAgCD,UAO1B6G,GAAiBlxB,EAAmBkmB,EAAiBiL,UAM7DD,GAAiBlxB,EAAmBkmB,EAAiBiL,GAG/DvF,IAA4B,GAC5B93B,IAA+B,EAAM,EA82B0CkhC,CAA8BjO,EAAkB/mB,kBAAmB+mB,EAAkBb,gBAAiBa,EAAkB3mB,OAAO7R,SAAA,CAC9IF,cAAC05B,KAAY,CAAC94B,GAAI,CAACsjB,SAAU,OAAQ,+BAAgC,CAACljB,SAAU,SAAU0C,MAAmC,IAA5Bg1B,EAAkB3mB,MAAc,MAAQ,YAAY7R,SACjJF,cAAC4mC,KAAqB,CAAChmC,GAAI,CAAC+4B,UAAsD,+BAA3C+B,EAA0BrF,aAAiC,gBAAkB,oBAExHr2B,cAAC65B,KAAY,CAACC,QAASpB,EAAkBb,gBAAiBj3B,GAAI,CAAC,6BAA8B,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,iBAAe,iBAAApG,OAL7HopC,qBAiBpD,IAAzBvmB,GAAWE,YAAiE,IAA9C4a,EAA4BwC,cACvDt9B,eAAA,OAAK4P,UAAU,cAAcnO,MAAO,CAACH,QAAS,OAAQI,eAAgB,gBAAiBwa,UAAW,SAASnc,SAAA,CACvGF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,QAAQxC,QAASA,IAAMs8B,KAAwBt9B,SAAC,0BAClFF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,YAAYxC,QAASA,IAAMy8B,KAAkCz9B,SAAC,wCAChGF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,UAAUxC,QAASA,IAAM68B,KAAqC79B,SAAC,qCAGlE,KAAnC+6B,EAA4B7wB,GACxB,KAEmC,KAAnC6wB,EAA4B7wB,IAAoD,IAAvC6wB,EAA4Bp7B,OACjEG,cAAA,OAAK+P,UAAU,cAAcnO,MAAO,CAACH,QAAS,OAAQ4a,UAAW,SAASnc,SAEtEF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,YAAYxC,QAASA,IAAMy8B,KAAkCz9B,SAAC,kCAGpGC,eAAA,OAAK4P,UAAU,cAAcnO,MAAO,CAACH,QAAS,OAAQ4a,UAAW,SAASnc,SAAA,CACtEF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,QAAQ9C,GAAI,CAACwN,GAAI,GAAIlN,QAASA,IAAMs8B,KAAwBt9B,SAAC,qCAC/FF,cAACwD,IAAM,CAACtB,QAAQ,YAAYwB,MAAM,UAAUxC,QAASA,IAAM68B,KAAqC79B,SAAC,wCAKrHC,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SAAA,CAEbC,eAACiE,IAAG,CAACxD,GAAI,CAAC+hB,UAAW,EAAG5P,aAAc,OAAQ2P,OAAQ,iBAAkBjf,OAAQ,QAASpB,GAAI,MAAOkjB,SAAU,QAAQrlB,SAAA,CAClHF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,OAAQY,GAAI,GAAKjC,GAAI,GAAKtB,WAAY,SAAUC,SAAU,SAAU4I,UAAW,UAAU1J,SAAC,mCAC/HF,cAACoE,IAAG,CAACxD,GAAI,CAACqb,GAAI,IAAKC,GAAI,IAAK5X,GAAI,GAAGpE,SAC9Bg9B,GACG/8B,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,SAAU4C,GAAI,GAAGpE,SAAA,CACvGF,cAAC8B,IAAgB,CAAC4B,MAAM,YACxB1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,8FAGjDF,cAAAC,WAAA,CAAAC,SACIC,eAACsmB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAG4M,cAAe,CAAE3M,GAAI,EAAG4M,GAAI,EAAGC,GAAI,GAAGvzB,SAAA,CAEjEC,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAAC6mC,KAAO,CAACjmC,GAAI,CAAC8C,MAAO,YAAY1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,aAAA5C,OAAY29B,EAA4B7pB,aAAe,SAExIjR,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAAC8mC,KAAU,CAAClmC,GAAI,CAAC8C,MAAO,YAAY1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,mBAAA5C,OAAa29B,EAA4BvH,cAAgB,SAE7IvzB,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAACa,QAAS,eAAevB,SAAA,EACK,IAA/C+6B,EAA4BtH,eAA0B3zB,cAAC+mC,KAAQ,CAACnmC,GAAI,CAAC8C,MAAO,QAAS1C,SAAU,UAAahB,cAACgnC,KAAU,CAACpmC,GAAI,CAAC8C,MAAO,QAAS1C,SAAU,UACxJhB,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,sBAAA5C,OACsB,KAA/C29B,EAA4BtH,gBAAuE,IAA/CsH,EAA4BtH,eAA0B,MAAQ,UAAO,SAIhJxzB,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAACinC,KAAiB,CAACrmC,GAAI,CAAC8C,MAAO,YAAYvD,eAACkE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,CAAC,iBAAY+6B,EAA4BrH,YAAchW,KAAOqd,EAA4BrH,aAAajW,OAAO,cAAgB,SAEzNxd,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAACknC,KAAQ,CAACtmC,GAAI,CAAC8C,MAAO,YAAY1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,uBAAA5C,OAAiB29B,EAA4BpH,mBAAqB,SAEpJ1zB,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAACmnC,KAAS,CAACvmC,GAAI,CAAC8C,MAAO,YAAY1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,QAAA5C,OAAU29B,EAA4BjH,eAAiB,SAG1I7zB,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAAConC,KAAY,CAACxlC,MAAO,CAAC8B,MAAO,SAAU1C,SAAU,UAAWitB,WAAY,SACxEjuB,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,IAAKhQ,SAAA,mBAAA5C,OAC3B29B,EAA4BhH,eAAiBgH,EAA4BhH,eAAiB,MAAQ,SAGzH9zB,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAACqnC,KAAa,CAACzlC,MAAO,CAAC8B,MAAO,SAAU1C,SAAU,aAClDhB,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,qBAAA5C,OAC1B29B,EAA4B/G,eAAiB+G,EAA4B/G,eAAiB,MAAQ,SAIxH/zB,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC3CF,cAACsnC,KAAc,CAAC1lC,MAAO,CAAC8B,MAAO,SAAU1C,SAAU,aACnDhB,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,0BAAA5C,OAC1B29B,EAA4B9G,0BAA4B8G,EAA4B9G,0BAA4B,MAAQ,SAI9Ih0B,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,GAAIhmB,GAAI,CAACa,QAAS,eAAevB,SAAA,CAC5CF,cAACgQ,KAAI,CAACpP,GAAI,CAAC8C,MAAO,YAAY1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAGhQ,SAAA,2BAAA5C,OAAc29B,EAA4BnH,iBAAmB,SAG1IoI,EACGl8B,cAAAC,WAAA,CAAAC,SACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,GAAG1mB,SACdF,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQua,SAAU,QAAQ9b,SACxCg8B,EAAmB1tB,KAAI,CAAC0L,EAAMqtB,IAC3BvnC,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACsP,GAAI,GAAKlP,SAAU,SAAU0C,MAAO,aAAc3C,WAAY,UAAUb,SAAA,GAAA5C,OAAkB4c,EAAKgd,4BAA2B,MAAA55B,OAAK4c,EAAKid,sBAAwB,QAAO,GAAE,KAAA75B,OAAiC,OAA7B4c,EAAKmd,oBAA4B,GAAA/5B,OAAM4c,EAAKmd,qBAAwB,GAAE,OAAjKkQ,WAOnI,eASxBpnC,eAAA,OAAK4P,UAAU,8BAA6B7P,SAAA,CAEpC48B,GACI98B,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAAC6C,OAAQ,OAAQhC,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,UAAUxB,SAAA,CAChHF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,sHAIzDs4B,EAC+C,IAA3CA,EAAkBZ,cAAcnd,QAAqE,OAArD+d,EAAkBZ,cAAc,GAAGzlB,cAC/EnS,cAACoE,IAAG,CAACxD,GAAI,CAAC6C,OAAQ,OAAQhC,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,UAAUxB,SAChHF,cAACqE,IAAU,CAACnC,QAAQ,KAAIhC,SAAC,uEAG7BF,cAAA,OAAK+P,UAAU,oBAAmB7P,SAACF,cAACy3B,GAAoB,CAACe,kBAAmBA,MAEhF,KAGPkD,EAA0BhJ,iBACvB1yB,cAAAC,WAAA,CAAAC,SACIF,cAAA,OAAK+P,UAAU,oBAAmB7P,SAC7Bo9B,GACGt9B,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAAC6C,OAAQ,OAAQhC,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,UAAUxB,SAAA,CAChHF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,6GAIrDF,cAAAC,WAAA,CAAAC,UACkD,IAA7Cw7B,EAA0BkG,iBAAgE,IAArClG,EAA0BwD,OAC5El/B,cAACoE,IAAG,CAACxD,GAAI,CAAC6C,OAAQ,OAAQhC,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,UAAUxB,SAChHF,cAACqE,IAAU,CAACnC,QAAQ,KAAIhC,SAAC,2HAGkC,SAA/D07B,EAAiC+G,2BAAyE,IAAjC7G,EAAsBrhB,SAA+D,IAA/CwgB,EAA4BwD,eACvI/C,EAA0BhJ,iBAAiBlkB,KAAI,CAAC2mB,EAAsBmB,IAClEn2B,eAACiE,IAAG,CAA6BxD,GAAkD,OAA9Cu0B,EAAqBoB,qBAAgC,CAACla,UAAW,QAAU,CAAC,EAAEnc,SAAA,CAE/GF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACG,WAAY,SAAU6I,UAAW,SAAU5I,SAAU,SAAUqB,GAAI,IAAKnC,SAAEi1B,EAAqBoB,sBAAwB,KACpJpB,EAAqBtC,yBAAyBrkB,KAAI,CAACgoB,EAAcC,IAC9Dz2B,cAACoE,IAAG,CAAAlE,SACAC,eAACsmB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAEzmB,SAAA,CACP,IAAlBu2B,EACGt2B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BgU,YAAa,MAAO51B,EAAG,IAAKZ,SACrFF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAEi1B,EAAqBwB,wBAGvD,UAA7CH,EAAaI,4BACVz2B,eAAAF,WAAA,CAAAC,SAAA,CACIC,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BgU,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQI,eAAgB,SAAUF,WAAY,UAAUzB,SAAA,CACtJF,cAAC62B,KAAY,CAACj2B,GAAI,CAACI,SAAU,UAAW0C,MAAO,UAAU1D,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAU4C,OAAQ,OAAQmzB,WAAY,OAAO52B,SAAEi1B,EAAqB4B,0BAGjM/2B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8B5hB,EAAG,IAAKZ,SACjEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAUmP,GAAI,IAAKhQ,SAAEi1B,EAAqB6B,2BAI9Gh3B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8B5hB,EAAG,IAAKZ,SACjEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAEi1B,EAAqB6B,2BAKjH,KAGJh3B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BuU,UAAW,MAAOP,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQE,WAAY,UAAUzB,SAC9IF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACI,SAAU,UAAUd,SAAEs2B,EAAaU,gCAG9B,UAA7CV,EAAaI,4BACVz2B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BuU,UAAW,MAAOP,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQI,eAAgB,UAAU3B,SAClJF,cAAC6f,KAAQ,CAACkN,UAA+C,IAArC2O,EAA0BwD,OAC9Cpf,SAAgD,IAAvC0W,EAAaW,sBACtBxC,QAAS,CAAE5C,KAAM4C,GAAQ5C,MAAQruB,MAAM,QACvC9C,GAAI,CAAC,+BAAgC,CAACI,SAAU,WAChDE,QAASA,KACyC,IAA9C+5B,EAA4BwC,gBAAuE,IAA7C/B,EAA0BkG,iBAAyE,IAA7C3G,EAA4ByC,eAAsE,IAA7ChC,EAA0BkG,eAjoDvN4F,EAAClR,EAAuBG,EAAegR,KACnG,GAAc,OAAXA,EAAgB,CACf,MAAM1G,EAA6B,IAAIrF,GACvCqF,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAeU,uBAAwB,EACnIwE,EAA6BoF,GAE7BA,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAe1D,SAAU,EAErH+O,GAAsDxL,EAAuByK,EAA2BrO,iBAAiB4D,GAAuB+I,qBAAsB0B,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GACtQ,MACK,IAAc,IAAXgR,EAAgB,CACpB,MAAM1G,EAA6B,IAAIrF,GACvCqF,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAeU,sBAAwB,KACnIwE,EAA6BoF,GAE7BA,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAe1D,SAAU,EAErH+O,GAAsDxL,EAAuByK,EAA2BrO,iBAAiB4D,GAAuB+I,qBAAsB0B,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GACtQ,GA+mD8S+Q,CAAwDlR,EAAuBG,EAAeD,EAAaW,uBAh/B3XuQ,EAACpR,EAAuBG,EAAegR,KAErE,GAAc,OAAXA,EAAgB,CACf,MAAM1G,EAA6B,IAAIrF,GACvCqF,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAeU,uBAAwB,EACnIwE,EAA6BoF,GAE7B,MAAMpL,GAAgB,EACtBwN,GACIpC,EAA2B1K,aAC3BV,EACAoL,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAC5FsK,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAe8K,6BAC3GR,EAA2BrO,iBAAiB4D,GAAuBC,qBAE3E,MACK,IAAc,IAAXkR,EAAgB,CACpB,MAAM1G,EAA6B,IAAIrF,GACvCqF,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAeU,uBAAwB,EACnIwE,EAA6BoF,GAE7B,MAAMpL,GAAgB,EACtBwN,GACIpC,EAA2B1K,aAC3BV,EACAoL,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAC5FsK,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAe8K,6BAC3GR,EAA2BrO,iBAAiB4D,GAAuBC,qBAE3E,KACI,CACA,MAAMwK,EAA6B,IAAIrF,GACvCqF,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAeU,uBAAwB,EACnIwE,EAA6BoF,GAE7B,MAAMpL,GAAgB,EACtBwN,GACIpC,EAA2B1K,aAC3BV,EACAoL,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAC5FsK,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAe8K,6BAC3GR,EAA2BrO,iBAAiB4D,GAAuBC,qBAE3E,GAq8BkbmR,CAA0BpR,EAAuBG,EAAeD,EAAaW,2BAG/an3B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SACbF,cAAA,OAAK+P,UAAU,uBAAsB7P,SACjCF,cAAA,OAAK+P,UAAU,eAAc7P,SACzBF,cAACo3B,KAAgB,CAACrnB,UAAU,oBAAoB0d,KAAM,EAAGV,UAA+C,IAArC2O,EAA0BwD,OAAgCt9B,MAAO,CAAEZ,SAAU,UAC5IsB,SAAWC,IAAoD,IAA9C04B,EAA4BwC,gBAAuE,IAA7C/B,EAA0BkG,iBAAyE,IAA7C3G,EAA4ByC,eAAsE,IAA7ChC,EAA0BkG,eAlnDlP+F,EAACrR,EAAuBG,EAAej0B,KACjG,MAAMka,EAAala,EAGhBsT,GAAUqE,SACTwC,cAAc7G,GAAUqE,SAG5BrE,GAAUqE,QAAU3b,YAAW,KAC3B,MAAMuiC,EAA6B,IAAIrF,GACvCqF,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAeY,oBAAsB3a,EACjIif,EAA6BoF,GAE7BA,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAe1D,SAAU,EAErH+O,GAAsDxL,EAAuByK,EAA2BrO,iBAAiB4D,GAAuB+I,qBAAsB0B,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAgB/Z,GAbnQ,EAa0R,GAC1S,EAAE,EAkmDkUirB,CAAsDrR,EAAuBG,EAAel0B,EAAEI,OAAOH,OAv8BhZolC,EAACtR,EAAuBG,EAAej0B,KACnE,MAAMka,EAAala,EAEhBsT,GAAUqE,SACTwC,cAAc7G,GAAUqE,SAG5BrE,GAAUqE,QAAU3b,YAAW,KAC3B,MAAMuiC,EAA6B,IAAIrF,GACvCqF,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAeY,oBAAsB3a,EACjIif,EAA6BoF,GAI7BoC,GACIpC,EAA2B1K,cAFT,EAIlB0K,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAC5FsK,EAA2BrO,iBAAiB4D,GAAuBzD,yBAAyB4D,GAAe8K,6BAC3GR,EAA2BrO,iBAAiB4D,GAAuBC,sBAPpD,EASlB,GACF,EAAE,EAi7BgbqR,CAAwBtR,EAAuBG,EAAel0B,EAAEI,OAAOH,OAC5ZqH,aAAc2sB,EAAaa,uBAC7B,YAAA/5B,OAJyCm5B,EAAa,gBAAAn5B,OAAeo+B,EAA0BxC,cAAa,yBAAA57B,OAAwBs+B,EAAiC0E,kBAAiB,4BAAAhjC,OAA2Bg5B,EAAqB,cAAAh5B,OAAas+B,EAAiCsD,OAAM,qBAAA5hC,OAAoBk5B,EAAa+K,sCAU7UvhC,cAAAC,WAAA,CAAAC,SACiD,IAA5Cw7B,EAA0BxC,cACvBl5B,cAAAC,WAAA,CAAAC,SACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SACbF,cAAA,OAAK+P,UAAU,uBAAsB7P,SACjCF,cAAA,OAAK+P,UAAU,eAAc7P,SACzBF,cAACo3B,KAAgB,CAACrnB,UAAU,oBAAoB0d,KAAM,EAAGV,UAA+C,IAArC2O,EAA0BwD,OAAgCt9B,MAAO,CAAEZ,SAAU,UAC5IsB,SAAWC,IAAoD,IAA9C04B,EAA4BwC,gBAAuE,IAA7C/B,EAA0BkG,iBAAyE,IAA7C3G,EAA4ByC,eAAsE,IAA7ChC,EAA0BkG,eAA2Bd,GAAsDxK,EAAuBG,EAAel0B,EAAEI,OAAOH,OAAS0gC,GAA0B5M,EAAuBG,EAAel0B,EAAEI,OAAOH,OAC9ZqH,aAAc2sB,EAAaa,uBAC7B,YAAA/5B,OAJyCm5B,EAAa,gBAAAn5B,OAAeo+B,EAA0BxC,cAAa,yBAAA57B,OAAwBs+B,EAAiC0E,kBAAiB,4BAAAhjC,OAA2Bg5B,EAAqB,cAAAh5B,OAAas+B,EAAiCsD,OAAM,qBAAA5hC,OAAoBk5B,EAAa+K,qCAU7UvhC,cAAAC,WAAA,CAAAC,SACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SACbF,cAAA,OAAK+P,UAAU,uBAAsB7P,SACjCF,cAAA,SAAOmC,KAAK,OAAO4qB,UAA+C,IAArC2O,EAA0BwD,OACnDnvB,UAAU,mBACVzN,SAAWC,IAAoD,IAA9C04B,EAA4BwC,gBAAuE,IAA7C/B,EAA0BkG,iBAAyE,IAA7C3G,EAA4ByC,eAAsE,IAA7ChC,EAA0BkG,eAA2Bd,GAAsDxK,EAAuBG,EAAel0B,EAAEI,OAAOH,OAAS0gC,GAA0B5M,EAAuBG,EAAel0B,EAAEI,OAAOH,OAC9ZqH,aAAc2sB,EAAaa,uBAC7B,YAAA/5B,OALiDm5B,EAAa,gBAAAn5B,OAAeo+B,EAA0BxC,cAAa,yBAAA57B,OAAwBs+B,EAAiC0E,kBAAiB,cAAAhjC,OAAas+B,EAAiCsD,OAAM,qBAAA5hC,OAAoBk5B,EAAa+K,yCAa1S,+BAAAjkC,OArF8Bm5B,QAJvCH,KA+FiD,SAA/DsF,EAAiC+G,2BAAyE,IAAjC7G,EAAsBrhB,SAA+D,IAA/CwgB,EAA4BwD,eACvIt+B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACG,WAAY,SAAU6I,UAAW,SAAU5I,SAAU,SAAUqB,GAAI,IAAKnC,SAAC,wEACvGF,cAAC2jB,KAAc,CAAC9T,UAAW+T,KAAM1jB,SAC7BC,eAAC6jB,KAAK,CAACC,cAAY,EAAA/jB,SAAA,CACfF,cAACmkB,KAAS,CAAAjkB,SACNC,eAACikB,KAAQ,CAACxjB,GAAI,CAAC,OAAQ,CAAC8C,MAAO,mBAAoBO,gBAAiB,SAAS/D,SAAA,CACzEF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,SAAU0C,MAAO,SAASxD,SAAC,oBAClEF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAUd,SAAC,uBAClDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAUd,SAAC,oBAClDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAUd,SAAC,2BAClDF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACI,SAAU,UAAUd,SAAC,4BAG1DF,cAACukB,KAAS,CAAC3jB,GAAI,CAACmS,aAAc,OAAO7S,SAChC07B,EAAiClJ,iBAAiBlkB,KAAI,CAACkqB,EAAmBgO,KACvEvmC,sBAACikB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAAUzkB,SAAA,CAC3BC,eAACkkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,SAASlC,SAAA,CAACF,cAAC6nC,KAAe,CAACjnC,GAAI,CAACwN,GAAI,GAAK/L,GAAI,GAAKqB,MAAO,gBAAiBg1B,EAAkBb,mBAChI73B,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,SAASlC,UAvkChGL,EAukC0H64B,EAAkB3mB,MAtkC7J,IAAXlS,EAECG,cAAA,OAAK+P,UAAU,mBAAkB7P,SAACF,cAAA,KAAG+P,UAAU,YAAW7P,SAAC,oCAG5C,IAAXL,EAEJG,cAAA,OAAK+P,UAAU,kBAAiB7P,SAACF,cAAA,KAAG+P,UAAU,YAAW7P,SAAC,oCAK1DF,cAAA,OAAK+P,UAAU,iBAAgB7P,SAACF,cAAA,KAAG+P,UAAU,YAAW7P,SAAC,wCA2jCqBF,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,SAASlC,SAAE0d,KAAO8a,EAAkBoP,cAAcnqB,OAAO,gBAC7F3d,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,SAASlC,SAAEw4B,EAAkBgC,iBACjE16B,cAACqkB,KAAS,CAACC,MAAM,OAAO1jB,GAAI,CAACwB,MAAO,QAAQlC,SAAEw4B,EAAkBtE,eAL/BsS,GArkCpF7mC,KA4kC4C,cAOjBM,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACG,WAAY,SAAU6I,UAAW,SAAU5I,SAAU,SAAU81B,WAAY,EAAGxyB,GAAI,GAAGpE,SAAE87B,EAA+BA,EAA6B2D,kBAAoB,KACrMx/B,eAAA,OAAK4P,UAAU,wBAAuB7P,SAAA,CACjC87B,EACGh8B,cAACm2B,KAAI,CAACv1B,GAAI,CAACE,EAAG,GAAGZ,SACZ87B,EAA6B4D,iBAAiBpxB,KAAI,CAACu5B,EAAsB1E,IACtEljC,eAAA,OAAAD,SAAA,CACIF,cAACs5B,KAAc,CACX14B,GAAI,CAACkb,GAAI,MAAOC,GAAI,MAAOhJ,aAAc,MAAO,SAAU,CAAC9O,gBAAiB,uBAC5E/C,QAASA,IApmC5DmiC,KACjC5H,GAAkClC,IAC9B,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQ6J,IAA0B7J,EAAQ6J,GACnC7J,CAAO,GAChB,EA+lCiGwO,CAA4B3E,GAAuBnjC,SAElEC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQE,WAAY,UAAUzB,SAAA,CAC7CF,cAAC05B,KAAY,CAAC94B,GAAI,CAACsjB,SAAU,OAAQ,+BAAgC,CAACljB,SAAU,OAAQ0C,MAAO,UAAWi2B,WAAoE,IAAzD6B,EAA8B6H,GAAkC,gBAAkB,iBAAiBnjC,SAACF,cAAC45B,KAAQ,MAClO55B,cAAC65B,KAAY,CAACC,QAASiO,EAAqB1R,aAAcz1B,GAAI,CAAC,6BAA8B,CAACI,SAAU,UAAWD,WAAY,SAAU2C,MAAO,oBAIxJ1D,cAAC+5B,KAAQ,CAACC,GAAIwB,EAA8B6H,GAAwBpJ,QAAQ,OAAOC,eAAa,EAAAh6B,SAC3F6nC,EAAqBrV,iBAAiBlkB,KAAI,CAACy5B,EAA8B3E,IACtEnjC,eAAA,OAAK4P,UAAU,uBAA2DnO,MAAO,CAACya,UAAW,OAAQiX,aAAc,OAAQ5Q,OAAQ,oBAAqB3P,aAAc,QAAQ7S,SAAA,CAC1KF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACG,WAAY,SAAU6I,UAAW,UAAU1J,SAAE+nC,EAA6B1R,uBAE/Gv2B,cAAA,OAAK+P,UAAU,wBAAwBnO,MAAO,CAACoB,QAAS,QAAQ9C,SAC5DC,eAACsmB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAEzmB,SAAA,CAC1BF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BgU,YAAa,MAAO51B,EAAG,IAAKZ,SACrFF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAE+nC,EAA6BtR,wBAG7Gx2B,eAACsmB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BgU,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQI,eAAgB,SAAUF,WAAY,UAAUzB,SAAA,CACtJF,cAAC62B,KAAY,CAACj2B,GAAI,CAACI,SAAU,SAAU0C,MAAO,OAAQ0K,GAAI,MAC1DpO,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAU+1B,WAAY,OAAO52B,SAAE+nC,EAA6BlR,0BAGhI/2B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8B5hB,EAAG,IAAKZ,SACjEF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,SAAUmP,GAAI,IAAKhQ,SAAE+nC,EAA6BjR,wBAGrHiR,EAA6BpV,yBAAyBrkB,KAAI,CAACgoB,EAAcC,IACtEt2B,eAACiE,IAAG,CAA+GxC,MAAO,CAACH,QAAS,OAAQW,MAAO,QAAQlC,SAAA,CACvJF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BuU,UAAW,MAAOP,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQE,WAAY,UAAUzB,SAC9IF,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAACI,SAAU,QAAQd,SAAEs2B,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVz2B,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAGhmB,GAAI,CAAC8hB,OAAQ,6BAA8BuU,UAAW,MAAOP,YAAa,MAAO51B,EAAG,GAAKW,QAAS,OAAQI,eAAgB,UAAU3B,SAClJF,cAAC6f,KAAQ,CAAC8U,QAAS,CAAE5C,KAAM4C,GAAQ5C,MAAQjS,SAAgD,IAAvC0W,EAAaW,sBAC7DpK,UAA0D,IAAhDiP,EAA6BnD,eACvCj4B,GAAI,CAAC,+BAAgC,CAACI,SAAU,WAAY0C,MAAM,QAClExC,QAAUqB,GAjhC3F2lC,EAAC7E,EAAuBC,EAA+B7M,EAAegR,KACjH,GAAc,OAAXA,EAAgB,CACf,MAAMlE,EAAyB,IAAIzH,GACnCyH,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+BzQ,yBAAyB4D,GAAeU,uBAAwB,EAC/K4E,EAAyBwH,GAEzB,MAAM5N,GAAgB,EACtBwN,GACII,EAAuB3D,iBAAiByD,GAAuBhN,aAC/DV,EACA4N,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+BzQ,yBAAyB4D,GACxI8M,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+BzQ,yBAAyB4D,GAAe8K,6BACvJgC,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+B/M,qBAEvH,MAEK,IAAc,IAAXkR,EAAgB,CACpB,MAAMlE,EAAyB,IAAIzH,GACnCyH,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+BzQ,yBAAyB4D,GAAeU,uBAAwB,EAC/K4E,EAAyBwH,GAEzB,MAAM5N,GAAgB,EACtBwN,GACII,EAAuB3D,iBAAiByD,GAAuBhN,aAC/DV,EACA4N,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+BzQ,yBAAyB4D,GACxI8M,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+BzQ,yBAAyB4D,GAAe8K,6BACvJgC,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+B/M,qBAEvH,KAEI,CACA,MAAMgN,EAAyB,IAAIzH,GACnCyH,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+BzQ,yBAAyB4D,GAAeU,uBAAwB,EAC/K4E,EAAyBwH,GAEzB,MAAM5N,GAAgB,EACtBwN,GACII,EAAuB3D,iBAAiByD,GAAuBhN,aAC/DV,EACA4N,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+BzQ,yBAAyB4D,GACxI8M,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+BzQ,yBAAyB4D,GAAe8K,6BACvJgC,EAAuB3D,iBAAiByD,GAAuB3Q,iBAAiB4Q,GAA+B/M,qBAEvH,GAq+B4I2R,CAAuC7E,EAAuBC,EAA+B7M,EAAeD,EAAaW,2BAIjJn3B,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SACbF,cAAA,OAAK+P,UAAU,kBAAiB7P,SAC5BF,cAAA,OAAK+P,UAAU,eAAc7P,SACzBF,cAACo3B,KAAgB,CAACrnB,UAAU,oBAAoB0d,KAAM,EAAG5jB,aAAc2sB,EAAaa,oBAChFtK,UAA0D,IAAhDiP,EAA6BnD,eACvCv2B,SAAWC,GAAM6gC,GAAqCC,EAAuBC,EAA+B7M,EAAel0B,EAAEI,OAAOH,UACtI,WAAAlF,OAJwCyqC,EAAqBI,4BAA2B,KAAA7qC,OAAIm5B,EAAa,qBAAAn5B,OAAoB0+B,EAA6B2D,2BAU5K3/B,cAAAC,WAAA,CAAAC,SACIF,cAACymB,KAAI,CAACvM,MAAI,EAAC0M,GAAI,EAAE1mB,SACbF,cAAA,OAAK+P,UAAU,kBAAiB7P,SAC5BF,cAAA,OAAK+P,UAAU,eAAc7P,SACzBF,cAACo3B,KAAgB,CAACrnB,UAAU,oBAAoB0d,KAAM,EAAG5jB,aAAc2sB,EAAaa,oBAChFtK,UAA0D,IAAhDiP,EAA6BnD,eACvCv2B,SAAWC,GAAM6gC,GAAqCC,EAAuBC,EAA+B7M,EAAel0B,EAAEI,OAAOH,UACtI,WAAAlF,OAJwCyqC,EAAqBI,4BAA2B,KAAA7qC,OAAIm5B,EAAa,qBAAAn5B,OAAoB0+B,EAA6B2D,4BAQzK,gBAAAriC,OAtCem5B,EAAa,uBAAAn5B,OAAsBs+B,EAAiC+D,6BAnBnE2D,SAiE5C,oBAAAhmC,OA9EmB+lC,QAmFtC,KAIHrH,GAC+C,OAA5CA,EAA6B5H,WAC7Bp0B,cAAAC,WAAA,CAAAC,SACIF,cAAA,OAAK+P,UAAU,aAAanO,MAAO,CAACqsB,WAAY,OAAQ5R,UAAW,OAAOnc,SACtEF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAAC8C,MAAO,OAAQ3C,WAAY,UAAUb,SAAA,+CAAA5C,OAA0B0+B,EAA6B5H,kBAMlI,iBAYxC,kBAQxBp0B,cAACu0B,GAAiB,CAAC2B,2BAA4BA,GAA4BrB,8BAA+BA,GACtGoB,mCAllF+BA,KACvCgH,IAAkB,GAClBl+B,IAAMgB,QAAQ,6DAADzC,OAAmC29B,EAA4BvH,cAAgB,CAACz0B,QAAS,aACtGi8B,EAA+BN,GAC/BQ,EAAqB,IACrBG,GAA6B,GAC7BE,EAAiC,IACjCE,EAA6B,CAAC,GAC9BE,EAAoC,IACpCE,EAAyB,IACzBQ,EAA8B,CAAC,GAC/BM,KACAZ,IACAQ,KACAN,IACAG,IACA5a,IAA6B,EAkkFmDuT,2BAA4BA,EAA4BxD,iBAAkBwJ,EAClJ7I,mBAAoBA,IAExBpyB,cAAC4D,EAAuB,CACpBO,4BAA6BA,GAA6BD,kBAAkB,MAO5F,E,gFCtyFA,MAAMnH,GAAa,gCAEbC,GAAeA,KACjB,MAAMC,EAAQC,aAAaC,QAAQ,OAOnC,MALe,CACbC,QAAS,CACPC,cAAc,UAADC,OAAYL,IAGhB,EAcXmrC,GAAc1pC,UAChB,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,oCAAoC2M,GACvElK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,ECmLSwoC,OA7Lf,WACI,MAAM,KAAEpjC,EAAI,QAAEhH,GAAY2J,qBAAWpD,GAE/ByH,EAAUpH,wBAETyjC,EAAoBC,GAAyBvqC,mBAAS,CAACwqC,UAAW,GAAIC,QAAS,MAC/EC,EAAmBC,GAAwB3qC,mBAAS,KACpD4qC,EAAsBC,GAA2B7qC,oBAAS,GAE3D8X,EAAYC,iBAAO,MAuFnB+yB,EAAyBpqC,UAC3BmqC,GAAwB,SAClB,IAAIlqC,SAAQC,GAAWJ,WAAWI,EAAS,OACjD,MAAMmqC,OD5GWrqC,WACrB,MAAMgL,EAAS1M,KACf,aAAasC,IAAMqK,IAAI,GAADrM,OAAIP,GAAU,0CAAAO,OAAyCgrC,EAAmBE,UAAS,aAAAlrC,OAAYgrC,EAAmBG,SAAW/+B,GAClJlK,MAAK,SAAUC,GACZ,OAAOA,EAASK,IACpB,IACCJ,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASI,MAC1B,GAAE,ECoGyCmpC,CAAiBV,GAClDW,EAAwBF,EAAyBv6B,KAAK0L,IAC9B,CACtB1I,UAAW0I,EAAK1I,UAChBF,SAAU4I,EAAK5I,SACf43B,QAAStrB,KAAO1D,EAAKgvB,SAASvrB,OAAO,cACrCjJ,OAAQwF,EAAKxF,OAAS,MAAQ,UAC9BxD,WAAY0M,KAAO1D,EAAKhJ,YAAYyM,OAAO,cAC3CwrB,SAAUjvB,EAAKivB,SACf93B,MAAO6I,EAAK7I,MACZiE,SAAU4E,EAAK5E,SACfD,SAAU6E,EAAK7E,SACfZ,QAASyF,EAAKzF,YAItBk0B,EAAqBM,GACrBJ,GAAwB,EAAM,EAiBlC,OAdA7hC,qBAAU,MACS,IAAZ/I,GAAqBgH,EAAKD,SACA,UAAtBC,EAAKoF,cACJ4B,EAAQ4B,KAAK,OAErB,GACD,CAAC5P,EAASgH,IAEb+B,qBAAU,KAC8B,KAAjCshC,EAAmBE,WAAmD,KAA/BF,EAAmBG,SACzDK,GACJ,GACD,CAACR,IAGAnoC,eAAC8P,KAAS,CAAC5P,SAAS,KAAKO,GAAI,CAAC0D,GAAI,GAAGpE,SAAA,CACjCF,cAACoE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,UAAU3B,SACjDF,cAACqd,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAItd,SAChEC,eAACsd,KAAa,CAAClG,WAAY,CAAC,cAAcrX,SAAA,CACtCF,cAAC0d,KAAU,CAACzb,MAAM,kBAAU0b,OAAO,aAAaE,eAAa,EAACvb,SAAWE,GA1ElEA,KACvB,GAAGA,EAAM,CACL,MAAMka,EAAala,EAAMwb,GAEtBlI,EAAUqE,SACTwC,cAAc7G,EAAUqE,SAG5BrE,EAAUqE,QAAU3b,YAAW,KAC3B,MAAM4qC,EAAsB,IAAId,GAChCc,EAAoBZ,UAAY5qB,KAAOlB,GAAYiB,OAAO,cAC1D4qB,EAAsBa,EAAoB,GAC3C,IACP,GA6DmGC,CAAkB7mC,KACrGxC,cAAC0d,KAAU,CAACzb,MAAM,wBAAW0b,OAAO,aAAaE,eAAa,EAACvb,SAAWE,GA3DrEA,KACrB,GAAGA,EAAM,CACL,MAAMka,EAAala,EAAMwb,GAEtBlI,EAAUqE,SACTwC,cAAc7G,EAAUqE,SAG5BrE,EAAUqE,QAAU3b,YAAW,KAC3B,MAAM4qC,EAAsB,IAAId,GAChCc,EAAoBX,QAAU7qB,KAAOlB,GAAYiB,OAAO,cACxD4qB,EAAsBa,EAAoB,GAC3C,IACP,GA8CoGE,CAAgB9mC,GAAQsuB,QAASlT,KAAO0qB,EAAmBE,oBAK3JxoC,cAACoE,IAAG,CAACxD,GAAI,CAAE6C,OAAQ,IAAKrB,MAAO,OAAQkC,GAAI,KAAMpE,SAC5C0oC,EACG5oC,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,SAAU+B,OAAQ,OAAOvD,SAAA,CAC/GF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,mFAIpB,IAA7BwoC,EAAkBjuB,OACdza,cAAAC,WAAA,CAAAC,SACIF,cAACupC,KAAQ,CACL3nC,MAAO,CAAEZ,SAAU,QACnBwoC,WAAYC,KAAKlyB,WAAWmyB,YAAYjyB,aAAa+xB,WACrD/b,KAAMib,EAAkBl6B,KAAI,CAACm7B,EAAKpC,KAAK,IAChCoC,EACHv/B,GAAIm9B,EAAQ,MAEhBqC,QAvJhB,CACZ,CAAEC,MAAO,KAAMC,WAAY,MAAO1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,QAC1E,CAAEF,MAAO,WAAYC,WAAY,iBAAU1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,QACnF,CAAEF,MAAO,UAAWC,WAAY,kBAAa1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,OAAQ5nC,KAAM,QACnG,CAAE0nC,MAAO,SAAUC,WAAY,oBAAa1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,QACpF,CAAEF,MAAO,aAAcC,WAAY,eAAa1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,OAAQ5nC,KAAM,QACtG,CAAE0nC,MAAO,WAAYC,WAAY,kBAAW1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,QACpF,CAAEF,MAAO,QAASC,WAAY,4BAAc1nC,MAAO,IAAKD,KAAM,SAAUmiB,MAAO,OAAQylB,YAAa,QACpG,CAAEF,MAAO,WAAYC,WAAY,uBAAc1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,QACvF,CAAEF,MAAO,WAAYC,WAAY,8BAAkB1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,QAC3F,CAAEF,MAAO,UAAWC,WAAY,yBAAW1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,SA8IvDC,gBAAiB,CAAC,GAClBzyB,WAAY,CACRxJ,QAjHdnJ,IAA4B,IAA3B,kBAAEqlC,GAAmBrlC,EACxC,OACIzE,eAAC+pC,KAAoB,CAAAhqC,SAAA,CAEjBF,cAACmqC,KAAwB,CAACvpC,GAAI,CAACI,SAAU,UACzChB,cAACoqC,KAAuB,CAACxpC,GAAI,CAACI,SAAU,UACxChB,cAACqqC,KAA0B,CAACzpC,GAAI,CAACI,SAAU,UAC3ChB,cAACwD,IAAM,CAACtB,QAAQ,OAAOooC,UAAWtqC,cAAEuqC,KAAgB,IAAIrpC,QAAS+oC,EAAmBrpC,GAAI,CAACI,SAAU,QAAQd,SAAC,sBACzF,GA2GC0X,gBAAiB,CACb4yB,QAAS,CAAEP,kBA/IrBA,KAEtB,MAAMQ,EAAgB/B,EAAkBl6B,KAAI,CAACm7B,EAAKpC,KAAK,CACnD,IAAOA,EAAQ,EACf,iBAAUoC,EAAIr4B,SACd,kBAAaq4B,EAAIT,QACjB,oBAAaS,EAAIj1B,OACjB,eAAai1B,EAAIz4B,WACjB,kBAAWy4B,EAAIR,SACf,4BAAcQ,EAAIt4B,MAClB,uBAAcs4B,EAAIr0B,SAClB,8BAAkBq0B,EAAIt0B,SACtB,yBAAWs0B,EAAIl1B,YAIbi2B,EAAKC,KAAWC,cAAcH,GAG9BI,EAAKF,KAAWG,WACtBH,KAAWI,kBAAkBF,EAAIH,EAAI,QAGrCC,KAAeE,EAAG,4DAADvtC,OAAsCsgB,KAAO0qB,EAAmBE,WAAW7qB,OAAO,cAAa,mBAAArgB,OAAQsgB,KAAO0qB,EAAmBG,SAAS9qB,OAAO,cAAa,SAAQ,IA0H3JqtB,4BAA0B,EAC1BpqC,GAAI,CACA,kCAAmC,CAC/B0yB,aAAc,OAElB,oCAAqC,CACjCA,aAAc,YAM/BtzB,cAAA,MAAI4B,MAAO,CAACgI,UAAW,SAAUlG,MAAO,QAAQxD,SAAC,8GAK5E,ECrFe+qC,OA9Gf,SAAiBztC,GACf,MAAOS,EAASC,GAAcF,oBAAS,IAE9BktC,EAAaC,GAAkBntC,mBACpC,CACE+J,SAAU,GACVC,aAAc,GACdojC,aAAc,SACdnjC,UAAW,GACXC,aAAc,KAIZmjC,EAA0BA,CAACjtC,EAAOC,KACnCA,GAAqB,kBAAXA,GAIXb,EAAM8tC,qBAAoB,EAC5B,EAmCIC,EAAgB7sC,UACpBR,GAAW,GACX,MAAMstC,O9B7CI9sC,WACd,MAAMzB,EAAQC,aAAaC,QAAQ,OACnC,aAAamC,IAAMqR,KAAK,GAADrT,OAAIP,EAAU,4BAA4BmuC,EAAa,CAC5E9tC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAG5BuC,MAAK,SAAUC,GAEZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACf,OAAOA,EAAMF,QACf,GAAE,E8B+BgCgsC,CAAQP,GACR,MAA3BM,EAAgB3rC,QACjBd,IAAMgB,QAAQyrC,EAAgB1rC,KAAM,CAACb,QAAS,mBAC9CzB,EAAMuL,oBAAmB,IAGzBhK,IAAMY,MAAM6rC,EAAgB1rC,KAAM,CAACb,QAAS,iBAE9Cf,GAAW,EAAM,EAGnB,OACE8B,cAAAC,WAAA,CAAAC,SACEF,cAACI,IAAM,CAACC,SAAU,KAAMC,WAAW,EAAMC,KAAM/C,EAAMkuC,iBAAkBjrC,QAASA,CAACrC,EAAOC,IAAWgtC,EAAwBjtC,EAAOC,GAASqC,sBAAsB,EAAKR,SACnKjC,EACC+B,cAAAC,WAAA,CAAAC,SACEF,cAAA,OAAK4B,MAAO,CAACH,QAAS,OAAQI,eAAgB,SAAU4B,OAAQ,QAAS9B,WAAY,UAAUzB,SAC7FF,cAAC8B,IAAgB,QAIrB3B,eAAAF,WAAA,CAAAC,SAAA,CACEF,cAACW,IAAW,CAACC,GAAI,CAAEC,EAAG,EAAGC,EAAG,IAAKC,WAAY,SAAUC,SAAU,QAASd,SAAC,+BAC3EF,cAACiB,IAAU,CAACC,QAASA,IAAMmqC,IAA2BzqC,GAAI,CAACO,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGnB,SACjGF,cAACsB,IAAS,CAACN,SAAS,aAGtBb,eAACoB,IAAa,CAACC,UAAQ,EAAAtB,SAAA,CACrBF,cAAC+B,IAAS,CAACE,MAAM,iBAASC,QAAQ,WAAWF,WAAS,EAACpB,GAAI,CAAEwB,MAAO,OAAQC,GAAI,KAAOC,SAAWC,IAAMopC,OAzDtFnpC,EAyD2GD,EAAEI,OAAOH,WAxDhJ2oC,GAAeS,IACN,IACFA,EACH5jC,aAAcxF,MAJUA,KAyD2H,IAC7IxC,cAACkK,IAAY,CACXC,QAhEO,CACnB,CAACC,GAAI,IAAKC,aAAc,kBACxB,CAACD,GAAI,IAAKC,aAAc,wBA+DZC,eAAiBC,GAAWA,EAAOF,aACnCG,aAAcA,CAAChN,EAAO+M,IACpBvK,cAAA,SAAQxC,EAAK0C,SACVqK,EAAOF,eAGZ/H,SAAUA,CAACC,EAAGC,IAzDHiI,EAAClI,EAAGC,KAC3B2oC,GAAeS,IACN,IACFA,EACH1jC,aAAc1F,EAAM4H,MAEtB,EAmDkCK,CAAiBlI,EAAGC,GAC5CkI,YAAcC,GAAW3K,cAAC+B,IAAS,IAAK4I,EAAQ1I,MAAM,mBACtDrB,GAAI,CAAEwB,MAAO,UAAWC,GAAI,OAE9BrC,cAAC+B,IAAS,CAACE,MAAM,2BAAgBC,QAAQ,WAAWtB,GAAI,CAAEwB,MAAO,OAAQC,GAAI,KAAOC,SAAWC,IAAMyH,OApDvFxH,EAoDwGD,EAAEI,OAAOH,WAnDzI2oC,GAAeS,IACN,IACFA,EACH7jC,SAAUvF,MAJUA,KAoDwH,IACtIxC,cAACqD,IAAK,CAACC,QAAS,EAAGC,UAAU,SAAQrD,SACnCF,cAACwD,IAAM,CAAC5C,GAAI,CAAE6C,OAAQ,MAAOrB,MAAO,QAAUF,QAAQ,YAAYwB,MAAM,UAAU9B,MAAO,CAAE+B,OAAQ,QAAUzC,QAASA,IAAMqqC,IAAgBrrC,SAAC,0CAS/J,E,oBC2Ee2rC,OA/Kf,WACI,MAAM,KAAE5mC,EAAI,QAAEhH,GAAY2J,qBAAWpD,IAE9BsnC,EAAiB/iC,GAAsB/K,oBAAS,IAChD+tC,EAAiBC,GAAsBhuC,oBAAS,IAChDiuC,EAAUC,GAAeluC,mBAAS,KAElC0tC,EAAkBJ,GAAuBttC,oBAAS,IAClDyK,EAAyBD,GAA8BxK,oBAAS,IAEhE0K,EAAcC,GAAmB3K,qBAElCiO,EAAUpH,uBAEVsnC,EAAqBztC,MAAON,EAAO0B,KACrCksC,GAAmB,GAEnB,GAAuC,Y/ByCtBttC,OAAOoJ,EAAQskC,KACtC,MAAMnvC,EAAQC,aAAaC,QAAQ,OACjC,aAAamC,IAAMC,IAAI,GAADjC,OAAIP,EAAU,6CAAAO,OAA4CwK,EAAM,cAAAxK,OAAa8uC,GAAY,CAAC,EAAG,CAC/GhvC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAGhCuC,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,E+BvDyC4sC,CAAiBvsC,EAAKgI,OAAQ1J,EAAMuE,OAAOmd,UACtDjgB,OAAe,CACvC,MACMysC,SAD4BlE,MACe55B,KAAK0L,IAClD,MAAMqyB,EAAiB,CACnBzkC,OAAQoS,EAAKpS,OACbC,SAAUmS,EAAKnS,SACfC,aAAckS,EAAKlS,aACnBC,UAAWiS,EAAKjS,UAChBoC,aAAc6P,EAAK7P,aACnBmiC,aAActyB,EAAKsyB,cAUvB,MAPyB,WAAtBtyB,EAAK7P,aACJkiC,EAAeliC,aAAe,iBAEJ,YAAtB6P,EAAK7P,eACTkiC,EAAeliC,aAAe,uBAG3BkiC,CAAc,IAEzBL,EAAYI,GAEZvtC,IAAMgB,SAAiC,IAAzB3B,EAAMuE,OAAOmd,QAAgB,6DAAAxiB,OAAgCwC,EAAKkI,cAAY,iEAAA1K,OAAoCwC,EAAKkI,cACzI,CACAgkC,GAAmB,EAAM,EAGvBpC,EAAU,CACZ,CAAEC,MAAO,WAAYC,WAAY,kCAAiB1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,QAC1F,CAAEF,MAAO,eAAgBC,WAAY,iBAAU1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,QACvF,CAAEF,MAAO,YAAaC,WAAY,QAAS1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,QACnF,CAAEF,MAAO,eAAgBC,WAAY,iBAAU1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,QACvF,CAAEF,MAAO,eAAgBC,WAAY,qBAAc1nC,MAAO,IAAKkiB,MAAO,OAAQylB,YAAa,OAAQ0C,WAAa9hC,GAAWA,EAAOg/B,IAAI6C,aAAexsC,cAAC0sC,KAAM,CAAC5sB,SAAS,EAAMxd,SAAWC,GAAM4pC,EAAmB5pC,EAAGoI,EAAOg/B,OAAW3pC,cAAC0sC,KAAM,CAAC5sB,SAAS,EAAOxd,SAAWC,GAAM4pC,EAAmB5pC,EAAGoI,EAAOg/B,SAyBzSgD,EAAoBjuC,UACtBstC,GAAmB,GACnB,MACMM,SAD4BlE,MACe55B,KAAK0L,IAClD,MAAMqyB,EAAiB,CACnBzkC,OAAQoS,EAAKpS,OACbC,SAAUmS,EAAKnS,SACfC,aAAckS,EAAKlS,aACnBC,UAAWiS,EAAKjS,UAChBoC,aAAc6P,EAAK7P,aACnBmiC,aAActyB,EAAKsyB,cAUvB,MAPyB,WAAtBtyB,EAAK7P,aACJkiC,EAAeliC,aAAe,iBAEJ,YAAtB6P,EAAK7P,eACTkiC,EAAeliC,aAAe,uBAG3BkiC,CAAc,IAEzBL,EAAYI,GACZN,GAAmB,GAEhBF,GACC/iC,GAAmB,EACvB,EAqBJ,OAlBA/B,qBAAU,KACN2lC,GAAmB,GACpB,IAEH3lC,qBAAU,KACH8kC,GACCa,GACJ,GACD,CAACb,IAEJ9kC,qBAAU,MACS,IAAZ/I,GAAqBgH,EAAKD,SACA,UAAtBC,EAAKoF,cACJ4B,EAAQ4B,KAAK,OAErB,GACD,CAAC5P,EAASgH,IAGT9E,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACiQ,KAAS,CAAC5P,SAAS,KAAKO,GAAI,CAAC0D,GAAI,GAAGpE,SACjCF,cAACoE,IAAG,CAACxD,GAAI,CAAE6C,OAAQ,IAAKrB,MAAO,OAAQkC,GAAI,KAAMpE,SAC5C6rC,EACG/rC,cAAAC,WAAA,CAAAC,SACIC,eAACiE,IAAG,CAACxD,GAAI,CAACa,QAAS,OAAQI,eAAgB,SAAUF,WAAY,SAAUD,cAAe,SAAU+B,OAAQ,QAAQvD,SAAA,CAChHF,cAAC8B,IAAgB,IACjB9B,cAACqE,IAAU,CAACnC,QAAQ,YAAYtB,GAAI,CAAC0D,GAAI,GAAGpE,SAAC,mFAIrDC,eAAAF,WAAA,CAAAC,SAAA,CACIF,cAACqE,IAAU,CAACnC,QAAQ,KAAKtB,GAAI,CAACgJ,UAAW,SAAUvH,GAAI,EAAGtB,WAAY,SAAU2C,MAAO,OAAOxD,SAAC,yCAC/FF,cAACupC,KAAQ,CACL3nC,MAAO,CAAEZ,SAAU,OAAQitB,WAAY,OAAQ2e,YAAa,QAC5DpD,WAAYC,KAAKlyB,WAAWmyB,YAAYjyB,aAAa+xB,WACrD/b,KAAMwe,EAASz9B,KAAI,CAACm7B,EAAKpC,KAAK,IACvBoC,EACHv/B,GAAIm9B,EAAQ,MAEhBqC,QAASA,EACTI,gBAAiB,CAAC,GAClBzyB,WAAY,CACRxJ,QA7FVnJ,IAAiC,IAAhC,uBAAEioC,GAAwBjoC,EAC7C,OACIzE,eAAC+pC,KAAoB,CAAAhqC,SAAA,CAEjBF,cAACmqC,KAAwB,CAACvpC,GAAI,CAACI,SAAU,UACzChB,cAACoqC,KAAuB,CAACxpC,GAAI,CAACI,SAAU,UACxChB,cAACqqC,KAA0B,CAACzpC,GAAI,CAACI,SAAU,UAC3ChB,cAACwD,IAAM,CAACtB,QAAQ,OAAOooC,UAAWtqC,cAAC8sC,KAAS,IAAI5rC,QAAS2rC,EAAwBjsC,GAAI,CAACI,SAAU,QAAQd,SAAC,sCACtF,GAuFH0X,gBAAiB,CACb4yB,QAAS,CAAEqC,uBApFZA,KAC3BvB,GAAoB,EAAK,IAqFDyB,kBAAoBxqC,GAlFjBA,KAC3BoG,EAAgBpG,EAAEonC,KAClBnhC,GAA2B,EAAK,EAgFkBwkC,CAAsBzqC,GAChDyoC,4BAA0B,EAC1BpqC,GAAI,CACA,kCAAmC,CAAE0yB,aAAc,OACnD,oCAAqC,CAAEA,aAAc,iBAQ7EtzB,cAACirC,GAAO,CAACS,iBAAkBA,EAAkBJ,oBAAqBA,EAAqBviC,mBAAoBA,IAC3G/I,cAAC2H,EAAc,CACXe,aAAcA,EACdC,gBAAiBA,EAAiBF,wBAAyBA,EAC3DD,2BAA4BA,EAC5BO,mBAAoBA,MAIpC,ECrKekkC,OApBIzvC,GAEfwC,cAAAC,WAAA,CAAAC,SACEF,cAACktC,IAAU,CAAAhtC,SAETC,eAACusC,SAAM,CAAAxsC,SAAA,CACLF,cAAC4P,QAAK,CAACH,OAAK,EAACJ,KAAK,IAAGnP,SAACF,cAACgQ,GAAI,MAC3BhQ,cAAC4P,QAAK,CAACP,KAAK,SAAQnP,SAACF,cAACqS,GAAK,MAC3BrS,cAAC0P,GAAa,CAACL,KAAK,mBAAmBQ,UAAW8d,KAClD3tB,cAAC0P,GAAa,CAACL,KAAK,oBAAoBQ,UAAW8qB,KACnD36B,cAAC0P,GAAa,CAACL,KAAK,oBAAoBQ,UAAWse,KACnDnuB,cAAC0P,GAAa,CAACL,KAAK,aAAaQ,UAAWw4B,KAC5CroC,cAAC0P,GAAa,CAACL,KAAK,eAAeQ,UAAWg8B,KAC9C1rC,eAACyP,QAAK,CAACP,KAAK,IAAGnP,SAAA,CAACF,cAAC8P,GAAO,IAAI,cCavBq9B,OA9Bf,WAEE,OACEhtC,eAAAF,WAAA,CAAAC,SAAA,CACEC,eAAC+sC,IAAU,CAAAhtC,SAAA,CACTF,cAAA,OAAK+P,UAAU,mBAAkB7P,SAC/BF,cAACotC,GAAM,MAGTptC,cAAA,OAAK+P,UAAU,gBAAe7P,SAC5BF,cAACitC,GAAS,SAIdjtC,cAACqtC,IAAc,CACblsC,SAAS,gBACTmsC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZ9pC,MAAM,YAId,ECxBe+pC,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxuC,MAAKoF,IAAkD,IAAjD,OAAEqpC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASzpC,EACpEqpC,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,E,OCDFO,IAASC,OAEPvuC,cAACyE,IAAM+pC,WAAU,CAAAtuC,SACfF,cAAC2E,EAAY,CAAAzE,SACXF,cAACmtC,GAAG,QAIRv6B,SAAS0Y,eAAe,SAM1BwiB,I","file":"static/js/main.e411c900.chunk.js","sourcesContent":["import axios from \"axios\";\r\n//import SignalService from \"./SignalService.jsx\"\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\nconst userLogin = async (userName, password) => {\r\n  return await axios.post(`${backendURL}/api/UserAccount/Login`, { userName, password })\r\n  .then(function (response) {\r\n    //SignalService.startSignalRConnection(response.data.tokenDTO.token)\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n};\r\n\r\nconst addUser = async (dataAddUser) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  return await axios.post(`${backendURL}/api/UserAccount/AddUser`, dataAddUser, { \r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n  },\r\n  })\r\n  .then(function (response) {\r\n    //SignalService.startSignalRConnection(response.data.tokenDTO.token)\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n}\r\n\r\nconst getUserLogin = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetUserLogin`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst getGetListDoctor = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetDoctors`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst updatePassword = async (inputPayloadPassword) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/UserAccount/ChangePassword`, inputPayloadPassword, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateActiveUser = async (userId, isActive) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/UserAccount/EditIsActiveUser?userId=${userId}&isActive=${isActive}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst editUserLogin = async (dataUpdateUser) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  return await axios.put(`${backendURL}/api/UserAccount/EditUserLogin?`, dataUpdateUser, {\r\n      headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n      },\r\n  })\r\n  .then(function (response) {\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n      return error.response\r\n  })\r\n}\r\n\r\nconst updateUserAccount = async (dataUpdateUser) => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/UserAccount/UpdateUserAccount?`, dataUpdateUser, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    userLogin, addUser,\r\n    getUserLogin, getGetListDoctor,\r\n    updatePassword, updateActiveUser, editUserLogin, updateUserAccount\r\n}\r\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { toast } from 'react-toastify';\r\n//api\r\nimport { updatePassword } from '../../Service/UserService';\r\n\r\nfunction ChangePassword(props) {\r\n    const inputPasswordDefault = {\r\n        currentPassword: '',\r\n        openCurrentPassword: false,\r\n        newPassword: '',\r\n        openNewPassword: false\r\n    }\r\n\r\n    const [inputPassword, setInputPassword] = useState(inputPasswordDefault);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleCloseModalChangePassword = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            props.setIsDialogChangePasswordOpen(false);\r\n            props.setOpenModalChangePassword(false);\r\n            setTimeout(() => {\r\n                setInputPassword(inputPasswordDefault);\r\n            }, 200)\r\n        }\r\n    }\r\n\r\n    const handleClickShowCurrentPassword = () => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.openCurrentPassword = !inputPassword.openCurrentPassword\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const handleClickShowNewPassword = () => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.openNewPassword = !inputPassword.openNewPassword\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const onChangeCurrentPassword = (value) => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.currentPassword = value\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const onChangeNewPassword = (value) => {\r\n        const _inputPassword = {...inputPassword};\r\n        _inputPassword.newPassword = value\r\n        setInputPassword(_inputPassword);\r\n    }\r\n\r\n    const handleValidate = () => {\r\n        let isValid = true;\r\n        if(inputPassword.currentPassword === ''){\r\n            toast.warning('Bạn chưa nhập mật khẩu hiện tại!', {toastId: 'validateCurrentPassword'})\r\n            isValid = false;\r\n        }\r\n        \r\n        if(inputPassword.newPassword === ''){\r\n            toast.warning('Bạn chưa nhập mật khẩu mới!', {toastId: 'validateNewPassword'})\r\n            isValid = false\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    const handleChangePassword = async () => {\r\n        setLoading(true);\r\n        await new Promise(resolve => setTimeout(resolve, 2 * 100));\r\n        if(handleValidate()){\r\n            const inputPayloadPassword = { password: inputPassword.newPassword, passwordOld: inputPassword.currentPassword }\r\n            const responseUpdatePassword = await updatePassword(inputPayloadPassword);\r\n\r\n            if(responseUpdatePassword.status === 400 && responseUpdatePassword.data === 'Tài khoản hoặc mật khẩu không chính xác !'){\r\n                toast.error('Mật khẩu hiện tại không chính xác.', {toastId: 'handleChangePasswordError1'})\r\n            }\r\n            else if(responseUpdatePassword.status === 400){\r\n                toast.error(responseUpdatePassword.data, {toastId: 'handleChangePasswordError2'})\r\n            }\r\n            else if(responseUpdatePassword.status === 200){\r\n                toast.success(responseUpdatePassword.data, {toastId: 'handleChangePasswordSuccess'})\r\n                handleCloseModalChangePassword();\r\n            }\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalChangePassword} onClose={(event, reason) => handleCloseModalChangePassword(event, reason)} disableEscapeKeyDown={true} >\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Đổi mật khẩu</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalChangePassword()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                \r\n                <DialogContent dividers sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                    {loading ? \r\n                        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                            <CircularProgress />\r\n                        </div>\r\n                    :\r\n                        <>\r\n                            <TextField autoFocus={true} label=\"Mật khẩu mới\" variant=\"outlined\" type={inputPassword.openNewPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeNewPassword(e.target.value)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={handleClickShowNewPassword} sx={{padding: '1px'}}> {inputPassword.openNewPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n\r\n                            <TextField label=\"Mật khẩu hiện tại\" variant=\"outlined\" type={inputPassword.openCurrentPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeCurrentPassword(e.target.value)} \r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={handleClickShowCurrentPassword} sx={{padding: '1px'}}> {inputPassword.openCurrentPassword  ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleChangePassword()}>Đổi mật khẩu</Button>\r\n                            </Stack>\r\n                        </>\r\n                    }\r\n\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChangePassword","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessingBackdrop(props) {\r\n    return (\r\n        <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: props.changeBackground ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.6)' }} open={props.openAlertProcessingBackdrop}>\r\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <CircularProgress color='inherit' />\r\n                <Typography sx={{mt: 1.4,}} variant='subtitle1'>{props.alertTitle}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n\r\nexport default AlertProcessingBackdrop\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//modal\r\nimport AlertProcessingBackdrop from '../components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const userDefault = {\r\n        isAuthenticated: false,\r\n        isLogin: false,\r\n        token: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(userDefault);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [isLogOutClick, setIsLogOutClick] = useState(false);\r\n    const [onConfirm, setOnConfirm] = useState(null);\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [isDialogChangePasswordOpen, setIsDialogChangePasswordOpen] = useState(false);\r\n\r\n    const [isDialogChangeInfoUserOpen, setIsDialogChangeInfoUserOpen] = useState(false);\r\n\r\n    const [isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard] = useState(false);\r\n\r\n    const loginContext = (userContextLogin) => {\r\n        setUser({ ...userContextLogin });\r\n        setLoading(false);\r\n    };\r\n\r\n    const triggerAlert = (confirmCallback) => {\r\n        setAlertVisible(true);\r\n        setIsLogOutClick(true);\r\n        setOnConfirm(() => confirmCallback);\r\n    };\r\n\r\n    const confirmAlert = () => {\r\n        if (onConfirm) onConfirm();\r\n        setIsLogOutClick(false);\r\n        resetAlert();\r\n    };\r\n\r\n    const resetAlert = () => {\r\n        setAlertVisible(false);\r\n        setIsLogOutClick(false);\r\n        setOnConfirm(null);\r\n    };\r\n\r\n    const logoutContext = () => {\r\n        setUser({ ...userDefault });\r\n    }\r\n\r\n    const loadingContext = (loading) => {\r\n        setLoading(...loading);\r\n    }\r\n\r\n    // const fetchUser = async () => {\r\n    //     setOpenAlertProcessingBackdrop(true);\r\n    //     const response = await getUserLogin();\r\n    //     setUser({\r\n    //             isAuthenticated: true, \r\n    //             isLogin: true,\r\n    //             userId: response.userId,\r\n    //             userFullName: response.userFullName,\r\n    //             positionName: response.positionName\r\n    //         }) \r\n    //     setLoading(false);\r\n    //     setOpenAlertProcessingBackdrop(false);\r\n    // }\r\n\r\n    const parseJwt = (token) => {\r\n        try {\r\n          return JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n    };\r\n\r\n    const checkJWTExpire = () => {\r\n        let result = false;\r\n        let getJWT = localStorage.getItem('jwt');\r\n        if(getJWT){\r\n            let decodeJWT = parseJwt(getJWT);\r\n            let currentDate = new Date();\r\n            if(decodeJWT.exp * 1000 < currentDate.getTime()) {\r\n                //console.log('Token đã hết hạn hoặc không tồn tại')\r\n                localStorage.removeItem('jwt'); //xóa localStorage\r\n                localStorage.removeItem('userLogin');\r\n                sessionStorage.clear();\r\n                return result \r\n            }\r\n            else{\r\n                //console.log('token còn hạn');\r\n                result = true;\r\n                return result\r\n            }\r\n        }\r\n        else{\r\n            localStorage.removeItem('userLogin');\r\n            return result\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\r\n        //setUser(getUserLogin);\r\n        const getToken = localStorage.getItem('jwt')\r\n        if(getUserLogin && getToken){\r\n            const result = checkJWTExpire();\r\n            if(result){\r\n                setUser(getUserLogin);\r\n            }\r\n            else if(result === false){\r\n                setUser(userDefault);\r\n            }\r\n        }else{\r\n            localStorage.removeItem('jwt'); //xóa localStorage\r\n            localStorage.removeItem('userLogin');\r\n            setUser(userDefault);\r\n        }\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <UserContext.Provider \r\n                value={{ user, loading, loadingContext, loginContext, \r\n                    logoutContext, alertVisible, triggerAlert, confirmAlert, resetAlert, isLogOutClick,\r\n                    isDialogChangePasswordOpen, setIsDialogChangePasswordOpen,\r\n                    isDialogChangeInfoUserOpen, setIsDialogChangeInfoUserOpen,\r\n                    isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard\r\n                }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop}\r\n                alertTitle={'Đang tải thông tin người dùng'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { toast } from 'react-toastify';\r\n//api\r\nimport { getUserLogin, editUserLogin, updateUserAccount } from '../../Service/UserService';\r\n\r\nfunction ChangeUserInfo(props) {\r\n    const { loginContext } = useContext(UserContext);\r\n\r\n    const inputUserInfoDefault = {\r\n        userId: '',\r\n        userName: '',\r\n        userFullName: '',\r\n        userEmail: '',\r\n        userPosition: '',\r\n    }\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n    const [dataUserInfoDefault, setDataUserInfoDefault] = useState(inputUserInfoDefault);\r\n    const [newDataUserInfo, setNewDataUserInfo] = useState({});\r\n\r\n    const listPosition = [\r\n        {id: '2', positionName: 'Bác sĩ'},\r\n        {id: '3', positionName: 'Tiếp nhận'},\r\n    ]\r\n    \r\n    const handleCloseModalChangeUserInfo = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            props.setOpenModalChangeUserInfo(false);\r\n            if(props.openModalChangeUserInfo && !props.dataUserInfo){\r\n                props.setIsDialogChangeInfoUserOpen(false);\r\n            }else{\r\n                props.setDataUserInfo();\r\n            }\r\n            setNewDataUserInfo({});\r\n            setDataUserInfoDefault(inputUserInfoDefault);\r\n        }\r\n    }\r\n\r\n    const onChangeName = (value) => {\r\n        setNewDataUserInfo(prevNewDataUserInfo => {\r\n            prevNewDataUserInfo.userFullName = value\r\n            return {...prevNewDataUserInfo}\r\n        })\r\n    }\r\n\r\n    const onChangeUserName = (value) => {\r\n        setNewDataUserInfo(prevNewDataUserInfo => {\r\n            prevNewDataUserInfo.userName = value\r\n            return {...prevNewDataUserInfo}\r\n        })\r\n    }\r\n\r\n    const onChangeEmail = (value) => {\r\n        setNewDataUserInfo(prevNewDataUserInfo => {\r\n            prevNewDataUserInfo.userEmail = value\r\n            return {...prevNewDataUserInfo}\r\n        })\r\n    }\r\n\r\n    const onSelectPosition = (e, value) => {\r\n        setNewDataUserInfo(prevNewDataUserInfo => {\r\n            prevNewDataUserInfo.userPosition = value.id\r\n            return {...prevNewDataUserInfo}\r\n        })\r\n    }\r\n\r\n    const handleChangeUserInfoByAdmin = async () => {\r\n        setLoading(true);\r\n        newDataUserInfo.userId = dataUserInfoDefault.userId;\r\n        const responseUpdateUserAccount = await updateUserAccount(newDataUserInfo);\r\n        if(responseUpdateUserAccount.status === 200){\r\n            toast.success('Cập nhật thành công', {toastId: 'successUpdateUserAccount'});\r\n            props.setReloadComponent(true);\r\n            handleCloseModalChangeUserInfo();\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    const handleChangeUserInfo = async () => {\r\n        setLoading(true);\r\n        const responseEditUserLogin = await editUserLogin(newDataUserInfo);\r\n        if(responseEditUserLogin.status === 200){\r\n            if(responseEditUserLogin.data.token){\r\n                localStorage.setItem('jwt', responseEditUserLogin.data.token);\r\n            }\r\n\r\n            setTimeout(() => {\r\n                const _dataUserInfoDefault = {...dataUserInfoDefault}\r\n                for (const key in newDataUserInfo) {\r\n                    if (_dataUserInfoDefault.hasOwnProperty(key)) {\r\n                        _dataUserInfoDefault[key] = newDataUserInfo[key];\r\n                    }\r\n                }\r\n                \r\n                setDataUserInfoDefault(_dataUserInfoDefault);\r\n                loginContext(_dataUserInfoDefault);\r\n                localStorage.setItem('userLogin', JSON.stringify({isAuthenticated: true, isLogin: true, ..._dataUserInfoDefault}));\r\n\r\n                toast.success('Cập nhật thành công', {toastId: 'successEditUserLogin'})\r\n\r\n                setLoading(false);\r\n            }, 500)\r\n        }\r\n        else{\r\n            toast.error(responseEditUserLogin.data, {toastId: 'errorEditUserLogin'})\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleGetUser = async () => {\r\n        setLoading(true);\r\n        const responseGetUserLogin = await getUserLogin();\r\n        setDataUserInfoDefault(responseGetUserLogin);\r\n        setLoading(false); \r\n    }\r\n\r\n    const handleGetUserByAdmin = () => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            setDataUserInfoDefault(props.dataUserInfo);\r\n            setLoading(false);\r\n        }, 500)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalChangeUserInfo === true){\r\n            if(props.dataUserInfo){\r\n                handleGetUserByAdmin();\r\n            }\r\n            else{\r\n                handleGetUser();\r\n            }\r\n        }\r\n    }, [props.openModalChangeUserInfo, props.dataUserInfo])\r\n\r\n    return (\r\n        <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalChangeUserInfo} onClose={(event, reason) => handleCloseModalChangeUserInfo(event, reason)} disableEscapeKeyDown={true} >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Đổi thông tin</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalChangeUserInfo()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                \r\n            <DialogContent dividers sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                {loading ? \r\n                    <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                        <CircularProgress />\r\n                    </div>\r\n                :\r\n                    <>\r\n                        <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} defaultValue={dataUserInfoDefault.userFullName} onChange={(e) => onChangeName(e.target.value)}/>\r\n                        <TextField label=\"Tên đăng nhập\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} defaultValue={dataUserInfoDefault.userName} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                        <TextField label=\"Email\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} defaultValue={dataUserInfoDefault.userEmail} onChange={(e) => onChangeEmail(e.target.value)}/>\r\n\r\n                        {dataUserInfoDefault.userPosition === 'Admin' ? \r\n                            <>\r\n                                <Autocomplete \r\n                                    options={listPosition} \r\n                                    getOptionLabel={(option) => option.positionName}\r\n                                    renderOption={(props, option) => (\r\n                                        <li {...props}>\r\n                                            {option.positionName}\r\n                                        </li>\r\n                                    )}\r\n                                    onChange={(e, value) => onSelectPosition(e, value)}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} \r\n                                    sx={{ width: '45.95ch', mb: 2.5 }}\r\n                                />\r\n                            </>\r\n                            :\r\n                            null\r\n                        }\r\n\r\n                        <Stack spacing={2} direction=\"column\">\r\n                            <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => props.dataUserInfo ? handleChangeUserInfoByAdmin() : handleChangeUserInfo()}>Đổi thông tin</Button>\r\n                        </Stack>\r\n                    </>\r\n                }\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ChangeUserInfo","export default __webpack_public_path__ + \"static/media/logo.e5a4a234.png\";","import * as signalR from '@microsoft/signalr';\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nlet connection = null; // Biến toàn cục lưu trữ kết nối SignalR\r\n\r\n// Hàm khởi tạo và kết nối SignalR\r\nconst startSignalRConnection = async (token) => {\r\n    if (connection) {\r\n        //console.log('SignalR connection already established.');\r\n        return connection;\r\n    }\r\n\r\n    connection = new signalR.HubConnectionBuilder()\r\n        .withUrl(`${backendURL}/notificationHub`, {\r\n            accessTokenFactory: () => token,\r\n            transport: signalR.HttpTransportType.WebSockets |\r\n                        signalR.HttpTransportType.ServerSentEvents |\r\n                        signalR.HttpTransportType.LongPolling\r\n        })\r\n        .withAutomaticReconnect([0, 2000, 10000, 30000])\r\n        .configureLogging(signalR.LogLevel.Information)\r\n        .build();\r\n\r\n    // Khởi tạo kết nối, trả về promise để xử lý sau\r\n    try {\r\n        await connection.start(); // Bắt đầu kết nối\r\n        //console.log(\"Connected to SignalR hub.\");\r\n\r\n        // Đăng ký sự kiện nhận tin nhắn, gọi callback khi nhận được tin nhắn\r\n        connection.on(\"ReceiveMessage\", (message) => {\r\n            //console.log(\"Received message:\", message);\r\n            if (onReceiveMessage) {\r\n                onReceiveMessage(message); // Gọi callback được truyền vào\r\n            }\r\n        });\r\n\r\n    } catch (error) {\r\n        //console.error(\"Error connecting to SignalR hub:\", error);\r\n        setTimeout(() => startSignalRConnection(token, onReceiveMessage), 5000); // Thử kết nối lại sau 5 giây nếu gặp lỗi\r\n    }\r\n};\r\n\r\n// Hàm đăng ký sự kiện ReceiveMessage\r\nconst onReceiveMessage = (callback) => {\r\n    if (connection) {\r\n        connection.on(\"ReceiveMessage\", callback);\r\n    } else {\r\n        //console.error(\"Connection has not been established yet.\");\r\n    }\r\n};\r\n\r\n// Hàm dừng kết nối SignalR\r\nconst stopSignalRConnection = async () => {\r\n    if (connection) {\r\n        try {\r\n            await connection.stop();\r\n            //console.log(\"Disconnected from SignalR hub.\");\r\n            connection = null;\r\n        } catch (error) {\r\n            //console.error(\"Error disconnecting from SignalR hub:\", error);\r\n        }\r\n    }\r\n};\r\n\r\nconst removeFromGroup = async () => {\r\n    if (connection) {\r\n        try {\r\n            await connection.invoke('RemoveFromGroup');\r\n            //console.log(\"User đã logout SignalR.\");\r\n        } catch (error) {\r\n            //console.error(`Failed to remove user from group: ${error}`);\r\n        }\r\n    } else {\r\n        //console.error(\"Connection has not been established yet.\");\r\n    }\r\n};\r\n\r\n// Hàm kiểm tra nếu đã kết nối\r\nconst isConnected = () => {\r\n    return connection !== null;\r\n};\r\n\r\nexport {\r\n    startSignalRConnection , stopSignalRConnection, onReceiveMessage, removeFromGroup, isConnected\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n//modal\r\n//import UserManual from '../ManageUserManual/UserManual';\r\nimport ChangePassword from '../ManageChangePassword/ChangePassword';\r\nimport ChangeUserInfo from '../ManageUserInfo/ChangeUserInfo';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//icon\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport SettingsSuggestIcon from '@mui/icons-material/SettingsSuggest';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//real-time\r\nimport {removeFromGroup} from '../../Service/SignalService';\r\n\r\nfunction Header(props) {\r\n\r\n  const { user, logoutContext, triggerAlert, setIsDialogChangePasswordOpen, setIsDialogChangeInfoUserOpen, isOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  // const [openModalUserManual, setOpenModalUserManual] = useState(false);\r\n  const [openModalChangePassword, setOpenModalChangePassword] = useState(false);\r\n  const [openModalChangeUserInfo, setOpenModalChangeUserInfo] = useState(false);\r\n\r\n  //mui state menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [anchorElManageMenuIcon, setAnchorElManageMenuIcon] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  \r\n  const open = Boolean(anchorEl);\r\n  const openManageMenuIcon = Boolean(anchorElManageMenuIcon)\r\n  \r\n  const handleClick = (event) => {\r\n    if(isOldDiseaseWithNullCodeWard === true){\r\n      event.preventDefault();\r\n    }else{\r\n      setAnchorEl(event.currentTarget)\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOpenManageMenuIcon = (event, key) => {\r\n    if(key === 'manage'){\r\n      setAnchorElManageMenuIcon(event.currentTarget);\r\n    }\r\n  }\r\n\r\n  const handleCloseManageMenuIcon = () => {\r\n    setAnchorElManageMenuIcon(null)\r\n  }\r\n\r\n  const handleMenuItemClick = (path) => {\r\n    history.push(path); // Điều hướng tới đường dẫn mới\r\n    handleCloseManageMenuIcon(); // Đóng Menu\r\n  };\r\n\r\n  const actionNursing = [\r\n    { key: 'medicalRegister', maxWidth: '114px', label: 'Đăng ký khám', icon: <LocalHospitalIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/medicalregister\" },\r\n    { key: 'remind-examining', maxWidth: '95px', label: 'Nhắc khám', icon: <LocalPhoneIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/remind-examining\" },\r\n  ]\r\n\r\n  const actionDoctor = [\r\n    { key: 'examining', maxWidth: '100px', label: 'Khám bệnh', icon: <MedicationLiquidIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/doctor-examining\" },\r\n  ]\r\n\r\n  const actionAdmin = [\r\n    { key: 'statistical', maxWidth: '83px', label: 'Thống kê', icon: <BarChartIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/dashboard\" },\r\n    { key: 'manage', maxWidth: '83px', label: 'Quản lý', icon: <SettingsSuggestIcon sx={{fontSize: 30}}/> },\r\n  ]\r\n\r\n  const [userAction, setUserAction] = useState([]);\r\n\r\n  const handleChangeURL = (pathname) => {\r\n    const actionIndex = userAction.findIndex(action => action.to === pathname);\r\n    return actionIndex;\r\n  }\r\n\r\n  const value = handleChangeURL(props.location.pathname);\r\n\r\n  const handleLogout = () => {\r\n    const pathname = props.location.pathname;\r\n    if(user.positionName === 'Doctor' && pathname === 'doctor-examining'){\r\n      triggerAlert(async () => {\r\n        await removeFromGroup();\r\n        localStorage.removeItem('jwt');\r\n        localStorage.removeItem('userLogin');\r\n        logoutContext();\r\n        setAnchorEl(null);\r\n        history.push('/login');\r\n      });\r\n    }\r\n    \r\n    else{\r\n      localStorage.removeItem('jwt'); //xóa localStorage\r\n      localStorage.removeItem('userLogin');\r\n      logoutContext();\r\n      setAnchorEl(null);\r\n      history.push('/login');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n  }, [isOldDiseaseWithNullCodeWard])\r\n  \r\n  useEffect(() => {\r\n    if(user){\r\n      if(user.positionName === 'Nursing'){        \r\n        setUserAction(actionNursing);\r\n      }\r\n      else if(user.positionName === 'Doctor'){\r\n        setUserAction(actionDoctor);\r\n      }\r\n      else if(user.positionName === 'Admin'){\r\n        setUserAction(actionAdmin);\r\n      }\r\n    }  \r\n  }, [user])\r\n  \r\n  if(location.pathname !== '/login'){\r\n    return (\r\n      <>\r\n        <Box sx={{ width: '100%'}} >\r\n          <AppBar sx={{position: 'unset'}}>\r\n            <Toolbar sx={{backgroundColor: '#cfe8fc', height: '78px'}}>\r\n              <Link to=\"/\">\r\n                <Avatar src={Logo} sx={{ width: 62, height: 62, mt: 'auto', mb: 'auto', mr: 4 }} />\r\n              </Link>\r\n              {user && token ? \r\n                <>\r\n                  <BottomNavigation showLabels value={value}\r\n                    sx={{display: 'flex', justifyContent: 'flex-start', backgroundColor: '#cfe8fc', flexGrow: 1}}>\r\n                    {userAction.map(actionItem => (\r\n                      <BottomNavigationAction\r\n                        key={actionItem.key}\r\n                        label={actionItem.label}\r\n                        icon={actionItem.icon}\r\n                        LinkComponent={actionItem.LinkComponent || 'div'}\r\n                        to={actionItem.to || undefined}\r\n                        onClick={(event) => handleOpenManageMenuIcon(event, actionItem.key)}\r\n                        sx={{color: '#000', maxWidth: actionItem.maxWidth}}\r\n                      />\r\n                    ))}  \r\n                  </BottomNavigation>\r\n\r\n                  <Menu anchorEl={anchorElManageMenuIcon} open={Boolean(openManageMenuIcon)} onClose={() => handleCloseManageMenuIcon()} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }} transformOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n                    <MenuItem onClick={() => handleMenuItemClick('/manage-user')}>Người dùng</MenuItem>\r\n                  </Menu>\r\n\r\n                  <Button onClick={(e) => handleClick(e)} sx={{color: '#000', textTransform: 'none'}}>{user.userFullName}</Button>\r\n                  <Menu anchorEl={anchorEl} open={open} onClose={() => handleClose()}>\r\n                    <MenuItem onClick={() => [setOpenModalChangePassword(true), setIsDialogChangePasswordOpen(true), setAnchorEl(null)]}>Đổi mật khẩu</MenuItem>\r\n                    <MenuItem onClick={() => [setOpenModalChangeUserInfo(true), setIsDialogChangeInfoUserOpen(true), setAnchorEl(null)]}>Đổi thông tin</MenuItem>\r\n                    <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                  </Menu>\r\n\r\n                  {/* <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} /> */}\r\n                </>\r\n              :\r\n                <>\r\n                  <Box sx={{position: 'absolute', right: 22}}>\r\n                    <NavLink exact to=\"/login\"><Button sx={{textTransform: 'none', color: '#000'}}>Đăng nhập</Button></NavLink>\r\n                    {/* <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} /> */}\r\n                  </Box>\r\n                </>\r\n              }            \r\n            </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n  \r\n        {/* <UserManual openModalUserManual={openModalUserManual} setOpenModalUserManual={setOpenModalUserManual}/> */}\r\n        <ChangePassword openModalChangePassword={openModalChangePassword} setOpenModalChangePassword={setOpenModalChangePassword} setIsDialogChangePasswordOpen={setIsDialogChangePasswordOpen}/>\r\n        <ChangeUserInfo openModalChangeUserInfo={openModalChangeUserInfo} setOpenModalChangeUserInfo={setOpenModalChangeUserInfo} setIsDialogChangeInfoUserOpen={setIsDialogChangeInfoUserOpen}/>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, Redirect } from \"react-router-dom\";\n\nconst PrivateRoutes = (props) => {\n\n  const parseJwt = (token) => {\n    try {\n      return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n      return null;\n    }\n  };\n\n  const checkJWTExpire = () => {\n    let result = false;\n    const getJWT = localStorage.getItem('jwt');\n    if (getJWT) {\n      let decodeJWT = parseJwt(getJWT);\n      let currentDate = new Date();\n      if (decodeJWT.exp * 1000 < currentDate.getTime()) {\n        //console.log('Token đã hết hạn hoặc không tồn tại')\n        localStorage.removeItem('jwt'); //xóa localStorage\n        localStorage.removeItem('userLogin');\n        sessionStorage.clear();\n        return result\n      }\n      else {\n        //console.log('token còn hạn');\n        result = true;\n        return result\n      }\n    }\n    else {\n      localStorage.removeItem('jwt'); //xóa localStorage\n      localStorage.removeItem('userLogin');\n      return result\n    }\n  }\n\n  const getToken = localStorage.getItem('jwt');\n  const getUserLogin = JSON.parse(localStorage.getItem('userLogin'));\n\n  if (getUserLogin && getToken) {\n    const result = checkJWTExpire();\n    if (result === false) {\n      return (\n        <>\n          <Redirect to='/login'></Redirect>\n        </>\n      )\n    }\n    else {\n      return (\n        <>\n          <Route path={props.path} component={props.component}></Route>\n        </>\n      );\n    }\n  }\n  else {\n    localStorage.removeItem('jwt'); //xóa localStorage\n    localStorage.removeItem('userLogin');\n    return (\n      <>\n        <Redirect to='/login'></Redirect>\n      </>\n    )\n  }\n};\nexport default PrivateRoutes;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../ErrorPage/Page500.scss\";\n\nconst Page404 = () => {\n\n  let history = useHistory();\n\n  return (\n    <div>\n      <div className=\"section\">\n        <h1 className=\"error\">404</h1>\n        <div className=\"page\">Trang mà bạn đang truy cập không tồn tại.</div>\n      </div>\n    </div>\n  );\n};\nexport default Page404;\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nfunction Home() {\r\n\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    return (\r\n        <Container> \r\n            <Box sx={{mt: 1}}>\r\n                {loading === false && user && user.isLogin ?\r\n                    user.positionName === 'Nursing' ? \r\n                        <>\r\n                            <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>Nếu bạn thấy dòng chữ này hãy nhấn vào <span style={{fontWeight: 'bolder', color: 'blue'}}>\"Đăng ký khám\"</span> ở thanh menu có logo của bệnh viện để chuyển về trang đăng ký khám</Typography>\r\n                        </>\r\n                    :\r\n                        user.positionName === 'Doctor' ? \r\n                            <>\r\n                                <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>{`Kiểm tra thanh menu (có logo của bệnh viện) bên góc phải có hiện tên người dùng`}</Typography> \r\n                                <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>Nếu đúng tên bác sĩ đang khám hãy nhấn vào <span style={{fontWeight: 'bolder', color: 'blue'}}>\"Khám bệnh\"</span> để chuyển về trang khám bệnh</Typography>\r\n                                <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>Nếu sai tên bác sĩ đang khám hãy nhấn vào tên người dùng đó sẽ hiện ra menu nhỏ, nhấn đăng xuất</Typography>       \r\n                            </>\r\n                        :\r\n                            null\r\n                :\r\n                    <Typography variant='subtitle1' sx={{ml: 2, fontSize: '1.35rem'}}>Nhấn vào <span style={{fontWeight: 'bolder', color: 'blue'}}>\"Đăng nhập\"</span> trên thanh menu (có logo của bệnh viện) bên góc phải</Typography> \r\n                }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState, useContext, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CreateAccount = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleCloseModalRegister = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalRegister(false);\r\n      }\r\n    }\r\n\r\n    const position = [\r\n      {id: '1', positionName: 'Điều dưỡng'},\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n          <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalRegister} onClose={(event, reason) => handleCloseModalRegister(event, reason)} disableEscapeKeyDown={true}  >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n            <IconButton onClick={() => handleCloseModalRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n              <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} />\r\n              <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }}/>\r\n              <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '46ch', mb: 2.5 }} \r\n                InputProps={{ // <-- This is where the toggle button is added.\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <Autocomplete options={position.map((option) => option.positionName)} renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} sx={{ width: '45.95ch', mb: 2.5 }}/>\r\n              <Stack spacing={2} direction=\"column\">\r\n                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleCloseModalRegister()}>Tạo tài khoản</Button>\r\n              </Stack>\r\n            \r\n            </DialogContent>\r\n          </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAccount","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst createMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/Register`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createMedicalBackRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/BackRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createCurrentDoctorExamining = async (userIdDoctor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/SetDoctorExaming/${userIdDoctor}`, \r\n        {}, // Body của request, có thể là {} hoặc object\r\n        {\r\n            headers: {\r\n                \"content-type\": \"text/plain; charset=utf-8\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddPredecessor = async (dataPredecessor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddPredecessor`, dataPredecessor,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddMedicalBook = async (dataMedicalBook) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddMedicalBook`, dataMedicalBook,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createNotificationForMedicalRegister = async () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const medicalRegisterMessage = true\r\n    return await axios.post(`${backendURL}/api/Notification/SendSignalRGroup?groupId=doctor`, medicalRegisterMessage,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getRegistersByDateNow = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetRegistersByDateNow`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveRegister = async (dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveOldRegister = async (dayOfBirth, patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}&patientId=${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListOldDisease = async (patientCode, phone, fullName, dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/SearchPatients?patientCode=${patientCode}&phone=${phone}&fullName=${fullName}&dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getVaccinationByPatientId = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetVaccinationByPatientId/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getCurrentDoctorExamining = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetDoctorExamining`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalDetailPatient = async (id) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/DetailPatient/${id}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalBook = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetMediacalBook?medicalRegisterId=${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdatePredecessor = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdatePredecessor/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdateMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdateMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentDate = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentDate/${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentsNextWeek = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsNextWeek`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getAppointmentsToday = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsToday`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst updateMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/EditRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateMedicalState = async (id, state) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateState?id=${id}&state=${state}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateStateAppointment = async (dataAppointment, stateAppointment) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateStateAppointment/${dataAppointment.medicalBookId}?appointmentDate=${dataAppointment.appointmentDate}&stateAppointment=${stateAppointment}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst deleteMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.delete(`${backendURL}/api/Medical/DeleteMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    createMedicalRegister, createMedicalBackRegister, createCurrentDoctorExamining, createAddPredecessor, createAddMedicalBook, createNotificationForMedicalRegister,\r\n    getRegistersByDateNow, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister, getListOldDisease, getVaccinationByPatientId, getCurrentDoctorExamining, getMedicalDetailPatient, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook, getAppointmentDate, getAppointmentsNextWeek, getAppointmentsToday,\r\n    updateMedicalRegister, updateMedicalState, updateStateAppointment,\r\n    deleteMedicalBook\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Register from '../ManageRegister/Register';\r\nimport { toast } from 'react-toastify';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//api\r\nimport { userLogin } from '../../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n//signal\r\nimport { startSignalRConnection } from '../../Service/SignalService';\r\n\r\nconst Login = () => {\r\n    const { user, loginContext } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [userAccount, setUserAccount] = useState({userName: '', password: ''})\r\n    const [openModalRegister, setOpenModalRegister] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const onChangeUserName = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                userName: value\r\n            }\r\n        }) \r\n    }\r\n\r\n    const onChangeUserPassword = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                password: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if(userAccount.userName === ''){\r\n            toast.error('Bạn chưa nhập tài khoản!')\r\n        }\r\n        else if(userAccount.password === ''){\r\n            toast.error('Bạn chưa nhập mật khẩu!');\r\n        }\r\n        else{\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const response = await userLogin(userAccount.userName, userAccount.password);\r\n            if(response.status !== 200){\r\n                toast.error(response.data);\r\n                setOpenAlertProcessingBackdrop(false);\r\n            }\r\n            else{\r\n                if(response.data.positionName === 'Doctor'){\r\n                    await startSignalRConnection(response.data.tokenDTO.token);\r\n                }\r\n\r\n                localStorage.setItem('jwt', response.data.tokenDTO.token)\r\n                const userLogin = {\r\n                    isAuthenticated: true, \r\n                    isLogin: true, \r\n                    userId: response.data.userId,\r\n                    userName: response.data.userName, \r\n                    userFullName: response.data.userFullName, \r\n                    userEmail: response.data.userEmail,\r\n                    positionName: response.data.positionName\r\n                }\r\n\r\n                localStorage.setItem('userLogin', JSON.stringify(userLogin))\r\n                loginContext(userLogin);\r\n                   \r\n                if(response.data.positionName === 'Nursing'){\r\n                    history.push('/medicalregister');\r\n                }\r\n                else if(response.data.positionName === 'Doctor'){\r\n                    history.push('/doctor-examining');\r\n                }\r\n                else if(response.data.positionName === 'Admin'){\r\n                    history.push('/dashboard');\r\n                }\r\n                setOpenAlertProcessingBackdrop(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleLogin();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAuthenticated === true) {\r\n            history.push('/');\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        const userLogin = localStorage.getItem('userLogin');\r\n        if (token && userLogin) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(openAlertProcessingBackdrop){\r\n                event.preventDefault();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [openAlertProcessingBackdrop])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box sx={{ mt: 3, borderRadius: '25px' }} >\r\n                    <Box sx={{ p: 7.6 }}>\r\n                        <Avatar src={Logo} sx={{ width: 120, height: 120, ml: 'auto', mr: 'auto', mb: 2 }} />\r\n                        <Typography sx={{ textAlign: 'center', textTransform: 'uppercase', fontWeight: 'bolder', fontSize: '1.15rem', mb: 2, color: '#4caf50' }} variant=\"h5\">Chương trình khám nhi khoa phát triển</Typography>\r\n                        <Box component=\"form\" autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                            <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                            <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 3 }} \r\n                            onChange={(e) => onChangeUserPassword(e.target.value)} onKeyDown={(e) => handlePressEnter(e)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6.5vh', width: '28ch' }} variant=\"contained\" style={{ margin: 'auto' }} onClick={(e) => handleLogin()}>Đăng nhập</Button>\r\n                                {/* <Typography sx={{textAlign: 'center', color: 'red', fontSize: '18px'}} variant=\"subtitle1\"><strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Quên mật khẩu</strong></Typography> */}\r\n                                {/* <Typography sx={{textAlign: 'center', mt: '10px !important'}} variant=\"subtitle1\">Chưa có tài khoản? <strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Đăng ký</strong></Typography> */}\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Register\r\n                openModalRegister={openModalRegister} setOpenModalRegister={setOpenModalRegister}\r\n            />\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang đăng nhập'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessing(props) {\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={props.openAlertProcessing} disableEscapeKeyDown={true}>\r\n                <DialogContent>\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <CircularProgress/>\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang xử lý...</Typography>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertProcessing","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getListProvince = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/ListProvince`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListDistrict = async (provinceId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListDistrictByIdProvince/${provinceId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListWard = async (districtId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListWardByIdDistrict/${districtId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getFullAddressByIdWard = async (codeWard) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetFullAddressByIdWard/${codeWard}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getListProvince, getListDistrict, getListWard, getFullAddressByIdWard\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport { Autocomplete } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//lodash\r\nimport _ from 'lodash';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { updateMedicalRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalService';\r\n\r\nfunction ManageInfoPantients(props) {\r\n  const dataPatientInfoDefault = {\r\n    examinationId: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    headCircumference: \"\",\r\n    reason: \"\",\r\n    vaccination: false,\r\n    id: \"\",\r\n    patient: {\r\n      identifier: \"\",\r\n      address: \"\",\r\n      fullName: \"\",\r\n      dayOfBirth: null,\r\n      codeWard: \"\",\r\n      gender: true,\r\n      fullNameMother: \"\",\r\n      phoneMother: \"\",\r\n      fullNameFather: \"\",\r\n      phoneFather: \"\",\r\n      patientId: \"\"\r\n    }\r\n  }\r\n\r\n  const dataPatientInfoErrorDefault = {\r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    examiningSession: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n  } \r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const selectedAutoCompleteDefault = { \r\n    gender: { value: null, openOption: false }, \r\n    examiningSession: {value: null, openOption: false, loading: false},\r\n    province: { value: null, openOption: false }, \r\n    district: { value: null, openOption: false }, \r\n    ward: { value: null, openOption: false },\r\n  }\r\n\r\n  const typingRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  const [dataPatientInfoNotEdit, setDataPatientInfoNotEdit] = useState();\r\n  const [dataPatientInfo, setDataPatientInfo] = useState(dataPatientInfoDefault);\r\n  const [dataPatientInfoError, setDataPatientInfoError] = useState(dataPatientInfoErrorDefault);\r\n    \r\n  const [selectedAutoComplete, setSelectedAutoComplete] = useState(selectedAutoCompleteDefault);\r\n\r\n  const [listExaminingSession, setListExaminingSession] = useState([]);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f',\r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -8],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.gender.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'ExaminingSession'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.examiningSession.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else{\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      //const _dataPatientInfoError = {...dataPatientInfoError};\r\n      // if(fieldName === 'patientId'){\r\n      //   _dataPatientInfoError.patientId.title = '';\r\n      //   _dataPatientInfoError.patientId.openTooltip = false;\r\n      //   setDataPatientInfoError(_dataPatientInfoError);\r\n      // }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.dayOfBirth.title = '';\r\n      //     _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientInfoError.dayOfBirth.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneMother.title = '';\r\n      //     _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneMother.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneFather'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneFather.title = '';\r\n      //     _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneFather.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'Gender'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.gender.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'ExaminingSession'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n      //     prevSelectedAutoComplete.examiningSession.openOption = false\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Province'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.province.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'District'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.district.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Ward'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.ward.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.gender.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'ExaminingSession'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n          prevSelectedAutoComplete.examiningSession.openOption = false\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.district.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.ward.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n  \r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n  \r\n      return (lowercasedFullName.includes(lowercasedInput) || initials.includes(lowercasedInput));\r\n    });\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientInfoError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientInfoError.identifier.openTooltip = true;\r\n          _dataPatientInfoError.identifier.isError = true;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n        else{\r\n          setDataPatientInfo(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientInfoError.identifier.title = '';\r\n          _dataPatientInfoError.identifier.openTooltip = false;\r\n          _dataPatientInfoError.identifier.isError = false;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.identifier.title = '';\r\n      _dataPatientInfoError.identifier.openTooltip = false;\r\n      _dataPatientInfoError.identifier.isError = false;\r\n      _dataPatientInfoError.identifier.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n    \r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.fullName = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n    \r\n      if(dataPatientInfoError.fullName.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullName.title = '';\r\n        _dataPatientInfoError.fullName.openTooltip = false;\r\n        _dataPatientInfoError.fullName.isError = false;\r\n        _dataPatientInfoError.fullName.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = async (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n    \r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n            \r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n    \r\n        if(today < takenValue || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientInfoError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n          _dataPatientInfoError.dayOfBirth.isError = true;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n    \r\n        else{\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.dayOfBirth = formattedDate\r\n            return {...prevDataPatientInfo}\r\n          })\r\n    \r\n          _dataPatientInfoError.dayOfBirth.title = '';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n          _dataPatientInfoError.dayOfBirth.isError = false;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n\r\n          onChangeDOBToGetExaminingSession(formattedDate);\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onChangeDOBToGetExaminingSession = async (formattedDate) => {\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.value = null\r\n      return {...prevSelectedAutoComplete}\r\n    })\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = true\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(formattedDate);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = false\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.patient.gender = value.genderValue\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n    \r\n    if(dataPatientInfoError.gender.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.gender.isError = false;\r\n      _dataPatientInfoError.gender.title = '';\r\n      _dataPatientInfoError.gender.openTooltip = false;\r\n      _dataPatientInfoError.gender.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectExaminingSession = (e, value) => {\r\n    if(focusField === 'examiningSession'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.examinationId = value.id\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.examiningSession.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(dataPatientInfoError.examiningSession.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.examiningSession.isError = false;\r\n      _dataPatientInfoError.examiningSession.title = '';\r\n      _dataPatientInfoError.examiningSession.openTooltip = false;\r\n      _dataPatientInfoError.examiningSession.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.province.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(selectedAutoComplete.district.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.province.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.province.isError = false;\r\n      _dataPatientInfoError.province.title = '';\r\n      _dataPatientInfoError.province.openTooltip = false;\r\n      _dataPatientInfoError.province.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.district.value = value;\r\n      return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.district.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.district.isError = false;\r\n      _dataPatientInfoError.district.title = '';\r\n      _dataPatientInfoError.district.openTooltip = false;\r\n      _dataPatientInfoError.district.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n\r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.codeWard = value.code\r\n      return { ...prevDataPatientInfo }\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.ward.value = value;\r\n        return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(dataPatientInfoError.ward.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.ward.isError = false;\r\n      _dataPatientInfoError.ward.title = '';\r\n      _dataPatientInfoError.ward.openTooltip = false;\r\n      _dataPatientInfoError.ward.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    if(focusField === 'address'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.address = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.address.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.address.isError = false;\r\n        _dataPatientInfoError.address.title = '';\r\n        _dataPatientInfoError.address.openTooltip = false;\r\n        _dataPatientInfoError.address.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    if(focusField === 'fullNameMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameMother = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(focusField === 'phoneMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneMother.openTooltip = true;\r\n          _dataPatientInfoError.phoneMother.isError = true;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n          \r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneMother = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n      \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n      \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 10)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneMother.title = '';\r\n      _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      _dataPatientInfoError.phoneMother.isError = false;\r\n      _dataPatientInfoError.phoneMother.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameFather = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneFather.openTooltip = true;\r\n          _dataPatientInfoError.phoneFather.isError = true;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n\r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneFather = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n                \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n                \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneFather.title = '';\r\n      _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      _dataPatientInfoError.phoneFather.isError = false;\r\n      _dataPatientInfoError.phoneFather.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    if(focusField === 'height'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.height = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.height.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.height.title = '';\r\n        _dataPatientInfoError.height.openTooltip = false;\r\n        _dataPatientInfoError.height.isError = false;\r\n        _dataPatientInfoError.height.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    if(focusField === 'weight'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.weight = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.weight.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.weight.title = '';\r\n        _dataPatientInfoError.weight.openTooltip = false;\r\n        _dataPatientInfoError.weight.isError = false;\r\n        _dataPatientInfoError.weight.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    if(focusField === 'headCircumference'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.headCircumference = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.headCircumference.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.headCircumference.title = '';\r\n        _dataPatientInfoError.headCircumference.openTooltip = false;\r\n        _dataPatientInfoError.headCircumference.isError = false;\r\n        _dataPatientInfoError.headCircumference.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.vaccination = bool\r\n      return {...prevDataPatientInfo}\r\n    })\r\n  }\r\n\r\n  const handleCloseModalInfoPantients = (event, reason) => {\r\n    if(reason && reason === \"backdropClick\"){\r\n      return;\r\n    }\r\n    else{\r\n      setListDistrict(prevListDistrict => {\r\n        prevListDistrict.loading = false\r\n        prevListDistrict.list = []\r\n        return {...prevListDistrict}\r\n      })\r\n      setListWard(prevListWard => {\r\n        prevListWard.loading = false\r\n        prevListWard.list = []\r\n        return {...prevListWard}\r\n      })\r\n      setListExaminingSession([]);\r\n      setSelectedAutoComplete(selectedAutoCompleteDefault);\r\n      setDataPatientInfo(dataPatientInfoDefault);\r\n      setDataPatientInfoNotEdit('');\r\n      setDataPatientInfoError(dataPatientInfoErrorDefault);\r\n      setLoading(true);\r\n      props.setSelectedPantientInfo();\r\n      props.setOpenModalInfoPantients(false);\r\n    }\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const responseListProvince = await getListProvince();\r\n    setListProvince(responseListProvince);\r\n  }\r\n\r\n  const handleApplyPantientDataToField = async () => {\r\n    setOpenAlertProcessing(true);   \r\n      \r\n    const editPropsDataPatientInfo = {...dataPatientInfo};\r\n    editPropsDataPatientInfo.examinationId = props.selectedPantientInfo.examinationId\r\n    editPropsDataPatientInfo.height = props.selectedPantientInfo.height\r\n    editPropsDataPatientInfo.weight = props.selectedPantientInfo.weight\r\n    editPropsDataPatientInfo.headCircumference = props.selectedPantientInfo.headCircumference\r\n    editPropsDataPatientInfo.reason = props.selectedPantientInfo.reason\r\n    editPropsDataPatientInfo.vaccination = props.selectedPantientInfo.vaccination\r\n    editPropsDataPatientInfo.id = props.selectedPantientInfo.id\r\n    editPropsDataPatientInfo.patient.identifier = props.selectedPantientInfo.patient.identifier\r\n    editPropsDataPatientInfo.patient.address = props.selectedPantientInfo.patient.address\r\n    editPropsDataPatientInfo.patient.fullName = props.selectedPantientInfo.patient.fullName\r\n    editPropsDataPatientInfo.patient.dayOfBirth = props.selectedPantientInfo.patient.dayOfBirth\r\n    editPropsDataPatientInfo.patient.codeWard = props.selectedPantientInfo.patient.codeWard\r\n    editPropsDataPatientInfo.patient.gender = props.selectedPantientInfo.patient.gender\r\n    editPropsDataPatientInfo.patient.fullNameMother = props.selectedPantientInfo.patient.fullNameMother\r\n    editPropsDataPatientInfo.patient.phoneMother = props.selectedPantientInfo.patient.phoneMother\r\n    editPropsDataPatientInfo.patient.fullNameFather = props.selectedPantientInfo.patient.fullNameFather\r\n    editPropsDataPatientInfo.patient.phoneFather = props.selectedPantientInfo.patient.phoneFather\r\n    editPropsDataPatientInfo.patient.patientId = props.selectedPantientInfo.patient.patientId\r\n\r\n    setDataPatientInfo(_.cloneDeep(editPropsDataPatientInfo));\r\n    setDataPatientInfoNotEdit(_.cloneDeep(editPropsDataPatientInfo));\r\n        \r\n    const response = await getFullAddressByIdWard(props.selectedPantientInfo.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.list = responseListDistrict;\r\n      return {...prevListDistrict}\r\n    });\r\n    const responseListWard = await getListWard(response.districtCode);\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = responseListWard;\r\n      return {...prevListWard}\r\n    });\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(props.selectedPantientInfo.patient.dayOfBirth);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n     \r\n    const selectedGender = listGender.find(gender => gender.genderValue === props.selectedPantientInfo.patient.gender);\r\n    const indexListExamining = responseListMedicalExaminationsGiveRegister.exams.findIndex(examiningSession => examiningSession.id === props.selectedPantientInfo.examinationId)\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = selectedGender\r\n      prevSelectedAutoComplete.examiningSession.value = responseListMedicalExaminationsGiveRegister.exams[indexListExamining];\r\n      prevSelectedAutoComplete.province.value = listProvince[indexListProvince];\r\n      prevSelectedAutoComplete.district.value = responseListDistrict[indexListDistrict];\r\n      prevSelectedAutoComplete.ward.value = responseListWard[indexListWard];\r\n      return prevSelectedAutoComplete\r\n    })\r\n\r\n    setLoading(false);\r\n    setOpenAlertProcessing(false);   \r\n  }\r\n\r\n  const checkValidate = () => {\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      let isValid = true;\r\n\r\n      if(dataPatientInfoError.identifier.title !== ''){\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.identifier.focus = true;\r\n          setFocusField('identifier');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullName === ''){\r\n        _dataPatientInfoError.fullName.title = 'Bạn chưa nhập họ tên';\r\n        _dataPatientInfoError.fullName.openTooltip = true;\r\n        _dataPatientInfoError.fullName.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullName.focus = true;\r\n          setFocusField('fullName');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(dataPatientInfo.patient.gender === ''){\r\n        _dataPatientInfoError.gender.title = 'Bạn chưa chọn giới tính';\r\n        _dataPatientInfoError.gender.isError = true;\r\n        _dataPatientInfoError.gender.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.gender.focus = true;\r\n          setFocusField('gender');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.dayOfBirth === ''){\r\n        _dataPatientInfoError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfoError.dayOfBirth.title !== ''){\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.examiningSession.value === null){\r\n        _dataPatientInfoError.examiningSession.title = 'Bạn chưa chọn lại kỳ khám';\r\n        _dataPatientInfoError.examiningSession.isError = true;\r\n        _dataPatientInfoError.examiningSession.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.examiningSession.focus = true;\r\n          setFocusField('examiningSession');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.province.value === null){\r\n        _dataPatientInfoError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n        _dataPatientInfoError.province.isError = true;\r\n        _dataPatientInfoError.province.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.province.focus = true;\r\n          setFocusField('province');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.district.value === null){\r\n        _dataPatientInfoError.district.title = 'Bạn chưa chọn quận huyện';\r\n        _dataPatientInfoError.district.isError = true;\r\n        _dataPatientInfoError.district.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.district.focus = true;\r\n          setFocusField('district');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.ward.value === null){\r\n        _dataPatientInfoError.ward.title = 'Bạn chưa chọn phường xã';\r\n        _dataPatientInfoError.ward.isError = true;\r\n        _dataPatientInfoError.ward.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.ward.focus = true;\r\n          setFocusField('ward');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.address === ''){\r\n        _dataPatientInfoError.address.title = 'Bạn chưa nhập địa chỉ';\r\n        _dataPatientInfoError.address.isError = true;\r\n        _dataPatientInfoError.address.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.address.focus = true;\r\n          setFocusField('address');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullNameMother === '' && dataPatientInfo.patient.fullNameFather === ''){\r\n        _dataPatientInfoError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n        _dataPatientInfoError.fullNameMother.isError = true;\r\n        _dataPatientInfoError.fullNameMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullNameMother.focus = true;\r\n          setFocusField('fullNameMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.phoneMother === '' && dataPatientInfo.patient.phoneFather === ''){\r\n        _dataPatientInfoError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        _dataPatientInfoError.phoneMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneMother.title !== ''){\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneFather.title !== ''){\r\n        _dataPatientInfoError.phoneFather.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneFather.focus = true;\r\n          setFocusField('phoneFather');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.height === ''){\r\n        _dataPatientInfoError.height.title = 'Bạn chưa nhập chiều cao';\r\n        _dataPatientInfoError.height.isError = true;\r\n        _dataPatientInfoError.height.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.height.focus = true;\r\n          setFocusField('height');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.weight === ''){\r\n        _dataPatientInfoError.weight.title = 'Bạn chưa nhập cân nặng';\r\n        _dataPatientInfoError.weight.isError = true;\r\n        _dataPatientInfoError.weight.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.weight.focus = true;\r\n          setFocusField('weight');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.headCircumference === ''){\r\n        _dataPatientInfoError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n        _dataPatientInfoError.headCircumference.isError = true;\r\n        _dataPatientInfoError.headCircumference.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.headCircumference.focus = true;\r\n          setFocusField('headCircumference');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      // if(dataPatientInfo.reason === ''){\r\n      //   _dataPatientInfoError.reason.isError = true;\r\n      //   isValid = false;\r\n      // }\r\n\r\n      if(_.isEqual(dataPatientInfo, dataPatientInfoNotEdit) === true){\r\n        toast.warning('Hiện không có gì để cập nhật', {toastId: 'warning1'});\r\n        isValid = false;\r\n      }\r\n\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n      return isValid;\r\n  }\r\n\r\n  const handleUpdateMedicalRegister = async () => {\r\n    if(checkValidate()){\r\n      setOpenAlertProcessing(true);\r\n      const response = await updateMedicalRegister(dataPatientInfo);\r\n      if(response.status === 200){\r\n        toast.success(response.data, {toastId: 'success1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        props.setIsEditedInfo(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      else{\r\n        toast.error(response.data, {toastId: 'error1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      setOpenAlertProcessing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(listProvince.length === 0){\r\n      handleGetListProvince();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.selectedPantientInfo){\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n      handleApplyPantientDataToField();\r\n    }\r\n  }, [props.selectedPantientInfo])\r\n\r\n  useEffect(() => {\r\n    if(props.openModalInfoPantients && props.isContinueUpdateMedicalRegister && loading === false){\r\n      handleUpdateMedicalRegister();\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n    }\r\n  }, [props.isContinueUpdateMedicalRegister, loading])\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth={true} maxWidth='md' open={props.openModalInfoPantients} onClose={(event, reason) => handleCloseModalInfoPantients(event, reason)} >\r\n        <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center', color: 'blue' }}>Thông tin bệnh nhân</DialogTitle>\r\n        <IconButton onClick={() => handleCloseModalInfoPantients()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n          <CloseIcon fontSize='medium'/>\r\n        </IconButton>\r\n        <DialogContent dividers sx={{pt: 1.5, pb: 1.5}}>\r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', pl: 4.2, pr: 4.2, mb: 0.8}}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.identifier.title}</h6>} open={dataPatientInfoError.identifier.openTooltip} placement='left'> \r\n              <TextField error={true ? dataPatientInfoError.identifier.isError === true : false}\r\n                label=\"Mã định danh\" variant=\"outlined\" \r\n                sx={{width: '18%', '&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                inputProps={{ maxLength: 12 }}\r\n                inputRef={(input) => input && focusField === 'identifier' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.identifier}\r\n                onChange={(e) => onChangeIdentifier(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n                      \r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullName.title}</h6>} open={dataPatientInfoError.fullName.openTooltip} placement='top'\r\n              slotProps={{\r\n                popper: {\r\n                  modifiers: [\r\n                    {\r\n                      name: 'offset',\r\n                      options: { offset: [-10, -6], },\r\n                    },\r\n                  ],\r\n                },\r\n              }} \r\n            > \r\n              <TextField error={true ? dataPatientInfoError.fullName.isError === true : false}\r\n                label=\"Họ tên\" variant=\"outlined\" \r\n                sx={{width: '32%', '&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.fullName}\r\n                onChange={(e) => onChangeFullName(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.gender.title}</h6>} open={dataPatientInfoError.gender.openTooltip} placement='top'>\r\n              <Autocomplete \r\n                sx={{width: '12%', marginTop: '7.5px'}}\r\n                options={listGender} \r\n                getOptionLabel={(option) => option.genderName}\r\n                value={selectedAutoComplete.gender.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.genderName}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectGender(e, value)}\r\n                open={selectedAutoComplete.gender.openOption}\r\n                onFocus={() => handleFocus('Gender')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Giới tính\" \r\n                    inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                    error={true ? dataPatientInfoError.gender.isError === true : false}                     \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <DemoContainer components={['DatePicker']}>  \r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.dayOfBirth.title}</h6>} open={dataPatientInfoError.dayOfBirth.openTooltip}>    \r\n                  <Box sx={{width: 110}}>\r\n                    <DatePicker label=\"Ngày sinh\" \r\n                      format='DD/MM/YYYY' defaultValue={moment(dataPatientInfo.patient.dayOfBirth)}\r\n                      disableFuture={true} disableOpenPicker \r\n                      slotProps={{ \r\n                        textField: \r\n                          { \r\n                            inputRef: dateFieldRef,\r\n                            error: true ? dataPatientInfoError.dayOfBirth.isError === true : false,\r\n                            onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                          }\r\n                        }}\r\n                      onChange={(value) => onChangeDOB(value)}\r\n                    />\r\n                  </Box>\r\n                </Tooltip>\r\n              </DemoContainer>\r\n            </ThemeProvider>\r\n          </LocalizationProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.examiningSession.title}</h6>} open={dataPatientInfoError.examiningSession.openTooltip} placement='right'>\r\n              <Autocomplete \r\n                sx={{width: '18%', mt: '7.5px'}}\r\n                options={listExaminingSession} \r\n                noOptionsText={selectedAutoComplete.examiningSession.loading ? 'Đang tải...' : ''}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.examiningSession.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectExaminingSession(e, value)}\r\n                open={selectedAutoComplete.examiningSession.openOption}\r\n                onFocus={() => handleFocus('ExaminingSession')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'ExaminingSession')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Kỳ khám\" \r\n                    inputRef={(input) => input && focusField === 'examiningSession' && input.focus()}\r\n                    error={true ? dataPatientInfoError.examiningSession.isError === true : false} \r\n                    sx={{'& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot': {pl: '6px', pr: '6px'}}}\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      endAdornment: (\r\n                        <>\r\n                          {selectedAutoComplete.examiningSession.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </>\r\n                      ),\r\n                    }} \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.province.title}</h6>} open={dataPatientInfoError.province.openTooltip} placement='left'>\r\n              <Autocomplete \r\n                sx={{width: '20%', mt: 2}}\r\n                options={listProvince} \r\n                filterOptions={filterOptions}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.province.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectProvine(e, value)}\r\n                open={selectedAutoComplete.province.openOption}\r\n                onFocus={() => handleFocus('Province')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Thành phố\"\r\n                    inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                    error={true ? dataPatientInfoError.province.isError === true : false}  \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.district.title}</h6>} open={dataPatientInfoError.district.openTooltip} placement='top'>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listDistrict.list} \r\n                  noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.district.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectDistrict(e, value)}\r\n                  open={selectedAutoComplete.district.openOption}\r\n                  onFocus={() => handleFocus('District')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Quận/huyện\" \r\n                      inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                      error={true ? dataPatientInfoError.district.isError === true : false} \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.ward.title}</h6>} open={dataPatientInfoError.ward.openTooltip}>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listWard.list}\r\n                  noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.ward.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectWard(e, value)}\r\n                  open={selectedAutoComplete.ward.openOption}\r\n                  onFocus={() => handleFocus('Ward')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Phường/Xã\" \r\n                      inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                      error={true ? dataPatientInfoError.ward.isError === true : false}  \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.address.title}</h6>} open={dataPatientInfoError.address.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.address.isError === true : false}\r\n                  label=\"Địa chỉ\" variant=\"outlined\" \r\n                  sx={{width: '36%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.address}\r\n                  onChange={(e) => onChangeAddress(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullNameMother.title}</h6>} open={dataPatientInfoError.fullNameMother.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.fullNameMother.isError === true : false}\r\n                  label=\"Họ tên mẹ\" variant=\"outlined\" \r\n                  sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.fullNameMother}\r\n                  onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                />    \r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneMother.title}</h6>} open={dataPatientInfoError.phoneMother.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.phoneMother.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneMother}\r\n                  onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <TextField \r\n              label=\"Họ tên cha\" variant=\"outlined\" sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n              defaultValue={dataPatientInfo.patient.fullNameFather}\r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n            />\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneFather.title}</h6>} open={dataPatientInfoError.phoneFather.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.phoneFather.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneFather}\r\n                  onChange={(e) => onChangePhoneFather(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.height.title}</h6>} open={dataPatientInfoError.height.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.height.isError === true : false}\r\n                  label='Chiều cao' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.height}\r\n                  onChange={(e) => onChangeHeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.weight.title}</h6>} open={dataPatientInfoError.weight.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.weight.isError === true : false}\r\n                  label='Cân nặng' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(kg)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.weight}\r\n                  onChange={(e) => onChangeWeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.headCircumference.title}</h6>} open={dataPatientInfoError.headCircumference.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.headCircumference.isError === true : false}\r\n                  label='Vòng đầu' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.headCircumference}\r\n                  onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <FormControlLabel sx={{width: '30%', mt: 2}} control={<Checkbox checked={dataPatientInfo.vaccination}/>} \r\n              label=\"Có tham gia tiêm ngừa\"\r\n              onChange={(e) => onChangeVaccination(e.target.checked)}\r\n            />  \r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{justifyContent: 'center'}}>\r\n          <Button variant=\"contained\" onClick={() => handleUpdateMedicalRegister()}>Sửa (F1)</Button>\r\n          <Button variant=\"contained\" color='secondary' onClick={(event, reason) => handleCloseModalInfoPantients(event, reason)}>Đóng (ESC)</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <AlertProcessing openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageInfoPantients","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//info pantients modal\r\nimport ManageInfoPantients from '../ManageInfoPantients/ManageInfoPantients';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//mui theme\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CachedIcon from '@mui/icons-material/Cached';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getRegistersByDateNow, getAppointmentsToday, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction ListPatientsRegister(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n  const [listPantientChipState, setListPantientChipState] = useState(\r\n    [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n    ]\r\n  )\r\n\r\n  const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n  \r\n  const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n  const [listDataPatientsAppointmentsToday, setListDataPatientsAppointmentsToday] = useState([]); \r\n  \r\n  const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n  const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n  const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n  const [selectedPantientInfo, setSelectedPantientInfo] = useState();\r\n  const [openModalInfoPantients, setOpenModalInfoPantients] = useState(false);\r\n  const [isContinueUpdateMedicalRegister, setIsContinueUpdateMedicalRegister] = useState();\r\n\r\n  const [isEditedInfo, setIsEditedInfo] = useState(false);\r\n\r\n  const renderPatientsStatus = (state) => {\r\n    if(state === 0 || state === 3){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterWaiting' />\r\n        </>\r\n      )\r\n    }\r\n    else if(state === 1){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterExamining' />\r\n        </>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterDone' />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSelectedChip = (chipIndex, chipLabel) => {\r\n    setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n    if(chipIndex === 0){\r\n      const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n      setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n    }\r\n    else if(chipIndex === 1){\r\n      const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n      setListDataPatientsRegisterState(listPantientRegisterDone);\r\n    }\r\n    else if(chipIndex === 2){\r\n      setListDataPatientsRegisterSort(listDataPatientsAppointmentsToday);\r\n      setListDataPatientsRegisterState(listDataPatientsAppointmentsToday);\r\n    }\r\n  };\r\n\r\n  const handleSearchPantient = (value) => {\r\n    const takenValue = value;\r\n    setSearchPatientsQuery(takenValue);\r\n\r\n    if(value === ''){\r\n      setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n    }else{\r\n      setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n    }\r\n  }\r\n\r\n  const searchPatients = (patients, searchTerm) => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return patients.filter(patientObj => {\r\n      const { patientCode, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n      return patientCode.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n    });\r\n  }\r\n\r\n  const handleSelectedPantientInfo = (patientsRegisterSortItem) => {\r\n    setSelectedPantientInfo(patientsRegisterSortItem);\r\n    setIsContinueUpdateMedicalRegister(true);\r\n    setOpenModalInfoPantients(true);\r\n  }\r\n\r\n  const handleSelectedPantientAppointmentsToday = async (patientsRegisterSortItem) => {\r\n    setOpenAlertProcessingBackdrop(true);\r\n    const responseVaccinationByPatientId = await getVaccinationByPatientId(patientsRegisterSortItem.patient.patientId);\r\n    const dataPantientOldOldDiseaseRegister = {\r\n      examinationId: patientsRegisterSortItem.patient.nextExamId,\r\n      oldDisease: true,\r\n      height: '', \r\n      weight: '',\r\n      headCircumference: '',\r\n      reason: '',\r\n      vaccination: responseVaccinationByPatientId.vaccination,\r\n      medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n      userIdDoctor: '',\r\n      patient: patientsRegisterSortItem.patient\r\n    }\r\n    props.setDataPantientAppointmentsToday(dataPantientOldOldDiseaseRegister)\r\n    setOpenAlertProcessingBackdrop(false);\r\n  }\r\n\r\n  const handleGetRegistersByDateNow = async () => {\r\n    setLoading(true);\r\n\r\n    const response = await getRegistersByDateNow();\r\n    const responseGetAppointmentsToday = await getAppointmentsToday();\r\n\r\n    let updatedList = [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: responseGetAppointmentsToday.length }\r\n    ]\r\n\r\n    let _listDataPatientsAppointmentsToday\r\n    if(responseGetAppointmentsToday.length > 0){\r\n      _listDataPatientsAppointmentsToday = responseGetAppointmentsToday.map((item) => {\r\n        const result = {\r\n          patient : {\r\n            identifier: item.identifier,\r\n            patientId: item.patientId,\r\n            patientCode: item.patientCode,\r\n            fullName: item.patientFullName,\r\n            gender: item.gender,\r\n            dayOfBirth: item.dateOfBirth,\r\n            fullNameMother: item.fullNameMother,\r\n            phoneMother: item.phoneMother,\r\n            fullNameFather: item.fullNameFather,\r\n            phoneFather: item.phoneFather,\r\n            address: item.address,\r\n            fullAddress: item.fullAddress,\r\n            codeWard: item.codeWard,\r\n            nextExamId: item.nextExamId\r\n          }\r\n        }\r\n        return result;\r\n      })\r\n      setListDataPatientsAppointmentsToday(_listDataPatientsAppointmentsToday);\r\n    }\r\n    else{\r\n      setListDataPatientsAppointmentsToday(responseGetAppointmentsToday)\r\n    }\r\n\r\n    if(response !== 400){\r\n      if(response.list.length !== 0){\r\n        setListDataPatientsRegister(response.list);\r\n        if(activeChip.chipOrder === 0){\r\n          const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám và tái khám\r\n          setListDataPatientsRegisterSort(_.cloneDeep(listPantientRegisterWaiting));\r\n          setListDataPatientsRegisterState(_.cloneDeep(listPantientRegisterWaiting));\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(_.cloneDeep(listPantientRegisterDone));\r\n          setListDataPatientsRegisterState(_.cloneDeep(listPantientRegisterDone));\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 2){\r\n          setListDataPatientsRegisterSort(_.cloneDeep(_listDataPatientsAppointmentsToday));\r\n          setListDataPatientsRegisterState(_.cloneDeep(_listDataPatientsAppointmentsToday));\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n      }\r\n    }\r\n    setListPantientChipState(updatedList);\r\n\r\n    if(isEditedInfo){\r\n      setIsEditedInfo(false);\r\n    }\r\n\r\n    props.setComponent1Loading(false);\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleReloadGetRegistersByDateNow = async () => {\r\n    props.setComponent1Loading(true);\r\n    await handleGetRegistersByDateNow();\r\n    props.setComponent1Loading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetRegistersByDateNow();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(openModalInfoPantients){\r\n      const handleKeyDown = (event) => {\r\n        if(event.keyCode === 112){\r\n          event.preventDefault()\r\n          setIsContinueUpdateMedicalRegister(true);\r\n          //nhấn F1 để sửa thông tin đăng ký khám\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [openModalInfoPantients, isContinueUpdateMedicalRegister]);\r\n\r\n  useEffect(() => {\r\n    if(isEditedInfo){\r\n      handleGetRegistersByDateNow();\r\n    }\r\n  }, [isEditedInfo, listDataPatientsRegister, listDataPatientsRegisterSort])\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true && isEditedInfo === false){\r\n      setListDataPatientsRegister([]);\r\n      setListDataPatientsRegisterSort([]);\r\n      setListDataPatientsRegisterState([]);\r\n      handleGetRegistersByDateNow();\r\n      props.setCompleteMedicalRegister(false);\r\n    }\r\n  }, [props.completeMedicalRegister, listDataPatientsRegister, listDataPatientsRegisterSort])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{p: 0}}>\r\n        {/* <Typography variant='h6' sx={{color: 'red', mb: 0, fontWeight: 'bolder', fontSize: '1.16rem', marginBottom: '5px'}}>\r\n          {loading ? \r\n            <Skeleton /> \r\n          : \r\n            <div style={{display: 'flex', height: '30px'}}>\r\n              {props.currentDoctorExamining.userIdDoctor !== '' ?\r\n              <>\r\n                <Typography variant='subbtitle1'>{`Bác sĩ khám hôm nay: ${props.currentDoctorExamining.userFullName}`}</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Sửa'/>\r\n              </>\r\n              :\r\n              <>\r\n                <Typography variant='subbtitle1'>Chưa chọn bác sĩ khám hôm nay</Typography> <EditIcon sx={{color: '#2e7d32', fontSize: '26px', ml: 1, cursor: 'pointer'}} onClick={() => props.setOpenSelectedDoctorExaminingModal(true)} titleAccess='Thêm'/>\r\n              </>}\r\n            </div>\r\n          }\r\n        </Typography> */}\r\n\r\n        <div className='container' style={{border: '1px solid #fff', borderRadius: '10px', height: '590px', padding: 0, boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)'}}>\r\n          {loading ? \r\n             <>\r\n              <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                <CircularProgress/>\r\n                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n              </Box>        \r\n            </>\r\n          :\r\n            <>\r\n              <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                  <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                    <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                      onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                  </Badge>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Box sx={{mt: 0.2, position: 'relative', display: 'flex', justifyContent: 'center', flexDirection: 'column'}}> \r\n                <Typography variant=\"subtitle2\" sx={{textAlign: 'center', mt: 0.2, fontSize: '1rem'}}>Nếu không tìm thấy bệnh nhân, hãy nhấn nút tải lại phía dưới</Typography>\r\n                <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                <CachedIcon sx={{color: 'brown', fontWeight: 'bolder', position: 'absolute', right: 75, top: 30, fontSize: '2.5rem', cursor: 'pointer'}} titleAccess='Tải lại' onClick={() => handleReloadGetRegistersByDateNow()}/>\r\n              </Box>\r\n            \r\n              <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                <TextField sx={{mt: 0.2, mb: 1, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                  variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc SĐT' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    startAdornment: (\r\n                      <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                    ),\r\n                    endAdornment: (\r\n                      <InputAdornment position='end'>\r\n                        {searchPatientsQuery !== '' ? \r\n                          <CloseIcon sx={{cursor: 'pointer'}} \r\n                            titleAccess='Xóa'\r\n                            onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                          /> \r\n                        : \r\n                          null\r\n                        }\r\n                      </InputAdornment>  \r\n                    )\r\n                  }}>\r\n                </TextField>\r\n              </Box>\r\n\r\n              <TableContainer component={Paper} sx={{ height: '440px', overflowX: 'scroll', borderBottomLeftRadius: '10px', borderBottomRightRadius: '10px' }}>\r\n                <Table stickyHeader sx={{ minWidth: 1200 }}>\r\n                  <TableHead>\r\n                    <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                      {activeChip.chipOrder === 2 ? \r\n                        null\r\n                      :\r\n                        <>\r\n                          <TableCell align=\"left\" sx={{fontSize: '0.95rem', p: '10px'}}>Trạng thái</TableCell>\r\n                          <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                        </>\r\n                      }\r\n                      <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                      <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {listDataPatientsRegisterSort.length !== 0 ?\r\n                      <>\r\n                        {listDataPatientsRegisterSort.map((patientsRegisterSortItem, patientsRegisterSortIndex) => (\r\n                          <TableRow hover role=\"checkbox\" key={patientsRegisterSortIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => activeChip.chipOrder === 2 ? handleSelectedPantientAppointmentsToday(patientsRegisterSortItem) : handleSelectedPantientInfo(patientsRegisterSortItem)}>\r\n                            {activeChip.chipOrder === 2 ? \r\n                              null\r\n                            :\r\n                              <>\r\n                                <TableCell align='center' sx={{width: '90px'}}>\r\n                                  <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.state === 0 || patientsRegisterSortItem.state === 3 ? 'Chờ khám' : patientsRegisterSortItem.state === 2 ? 'Đã khám' : 'Đang khám'}</Typography>} >\r\n                                    <span>{renderPatientsStatus(patientsRegisterSortItem.state)}</span>\r\n                                  </Tooltip>\r\n                                </TableCell>\r\n                                <TableCell align='left' sx={{width: '20px'}}>{patientsRegisterSortItem.order}</TableCell>\r\n                              </>\r\n                            }\r\n                            <TableCell align='left' sx={{width: '150px'}}>{patientsRegisterSortItem.patient.patientCode}</TableCell>\r\n                            <TableCell align='left' sx={{width: '200px'}}>{patientsRegisterSortItem.patient.fullName}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{patientsRegisterSortItem.patient.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                            <TableCell align='left' sx={{width: '110px'}}>{moment(patientsRegisterSortItem.patient.dayOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                            <TableCell align='left' sx={{width: '140px'}}>{patientsRegisterSortItem.patient.phoneMother !== '' ? patientsRegisterSortItem.patient.phoneMother : patientsRegisterSortItem.patient.phoneFather}</TableCell>\r\n                            <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 120}}>\r\n                              <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.patient.fullAddress}</Typography>} >\r\n                                <span>{patientsRegisterSortItem.patient.fullAddress}</span>\r\n                              </Tooltip>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))} \r\n                      </>\r\n                    :\r\n                      null\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </>\r\n          }\r\n        </div>\r\n      </Box>\r\n      \r\n      <AlertProcessingBackdrop openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n      />\r\n\r\n      <ManageInfoPantients \r\n        openModalInfoPantients={openModalInfoPantients} setOpenModalInfoPantients={setOpenModalInfoPantients}\r\n        selectedPantientInfo={selectedPantientInfo} setSelectedPantientInfo={setSelectedPantientInfo}\r\n        isContinueUpdateMedicalRegister={isContinueUpdateMedicalRegister} setIsContinueUpdateMedicalRegister={setIsContinueUpdateMedicalRegister}\r\n        setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        setIsEditedInfo={setIsEditedInfo}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListPatientsRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//modal\r\n// import AlertConfirmModal from '../ManageAlertConfirm/AlertConfirm';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//api\r\nimport { createMedicalRegister, createMedicalBackRegister, createNotificationForMedicalRegister, getListMedicalExaminationsGiveRegister, getListMedicalExaminationsGiveOldRegister } from '../../Service/MedicalService';\r\n\r\nfunction ExaminingSession(props) {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [listExaminingSession, setListExaminingSession] = useState(null);\r\n\r\n    const { isOldDiseaseWithNullCodeWard, setIsOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n    const onChangeRadioSelect = (value) => {\r\n        props.dataPatientsRegister.examinationId = value;\r\n    }\r\n\r\n    const handleListMedicalExaminationsGiveRegister = async () =>  {\r\n        if(props.dataPatientsRegister.oldDisease){\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveOldRegister(props.dataPatientsRegister.patient.dayOfBirth, props.dataPatientsRegister.patient.patientId);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n        else{\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListMedicalExaminationsGiveRegister(props.dataPatientsRegister.patient.dayOfBirth);\r\n            setListExaminingSession(response);\r\n            props.dataPatientsRegister.examinationId = response.exams[0].id;\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    const handleMedicalRegister = async () => {\r\n        // //bệnh cũ\r\n        if(props.dataPatientsRegister.oldDisease === true && props.dataPatientsRegister.examinationId !== ''){\r\n            //là bênh mới đã đăng ký nhưng chưa từng khám bao giờ\r\n            if(listExaminingSession.isAppointment === false && listExaminingSession.oldExams.length === 0){\r\n                //setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                if(response.status === 200){\r\n                    await createNotificationForMedicalRegister();\r\n                    if(isOldDiseaseWithNullCodeWard){\r\n                        setIsOldDiseaseWithNullCodeWard(false);\r\n                    }\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n                setOpenAlertProcessing(false);\r\n            }\r\n            //có hẹn khám nhưng không nhắc khám hoặc đến trễ ngày hẹn khám\r\n            else{\r\n                //setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                if(response.status === 200){\r\n                    await createNotificationForMedicalRegister();\r\n                    toast.success(response.data);\r\n                    setListExaminingSession(null);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n                setOpenAlertProcessing(false);\r\n            }\r\n        }\r\n        //bệnh mới\r\n        else{\r\n            //setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalRegister(props.dataPatientsRegister);\r\n\r\n            if(response.status === 200){\r\n                await createNotificationForMedicalRegister();\r\n                toast.success(response.data);\r\n                setListExaminingSession(null);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    const handleCloseConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n      };\r\n\r\n    const handleOpenConfirm = () => {\r\n        if(props.dataPatientsRegister.examinationId === ''){\r\n            // setIsConfirmOpen(false);\r\n            toast.error('Bạn chưa chọn kỳ khám', {toastId: 'error1'});\r\n        }\r\n        else{\r\n            //setIsConfirmOpen(true);\r\n            handleMedicalRegister();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.dataPatientsRegister.patient.dayOfBirth !== '' && props.openModalExaminingSession === true){\r\n            handleListMedicalExaminationsGiveRegister();\r\n        }\r\n    }, [props.openModalExaminingSession])\r\n\r\n    useEffect(() => {\r\n        if(props.isContinueSelectedExaminingSession === true){\r\n            //nhấn F2 để hoàn tất đăng ký khám\r\n            handleOpenConfirm();\r\n            props.setIsContinueSelectedExaminingSession(false);\r\n        }\r\n    }, [props.isContinueSelectedExaminingSession])\r\n\r\n    return (\r\n        <>\r\n            {listExaminingSession ? \r\n                <>\r\n                    <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalExaminingSession} disableEscapeKeyDown={true}>\r\n                        <DialogTitle \r\n                            sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'green', textTransform: 'uppercase' }}>\r\n                            {`${props.dataPatientsRegister.patient.fullName}, \r\n                            ${props.dataPatientsRegister.patient.gender === true ? 'Nam' : 'Nữ'}, \r\n                            ${listExaminingSession.monthsOfAge}`}\r\n                        </DialogTitle>\r\n\r\n                        <IconButton onClick={() => [props.setOpenModalExaminingSession(false), props.dataPatientsRegister.examinationId = '', setListExaminingSession(null)]} \r\n                            sx={{position: 'absolute', right: 5, top: 7}}>\r\n                                <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n\r\n                        <DialogContent dividers sx={{pl: '0px', pr: '0px'}}>\r\n                            <Grid container rowSpacing={0}>\r\n                                <Grid item xs={0.5}/>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid black', p: 1, height: '50vh', overflow: 'auto'}}>\r\n                                        <Typography variant='h6' sx={{fontWeight: 'bolder'}}>Lịch sử khám</Typography>\r\n                                        {listExaminingSession.oldExams ?\r\n                                            listExaminingSession.oldExams.map((oldExamItem, oldExamIndex) => (\r\n                                                <Typography key={oldExamIndex} variant='subtitle1'>{oldExamItem.name}</Typography>\r\n                                            ))\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </Box>  \r\n                                </Grid>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid red', p: 1, height: '50vh'}}>\r\n                                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', color: 'red'}}>Chọn kỳ khám</Typography>\r\n                                            <RadioGroup key={`${props.dataPatientsRegister.patient.patientCode}`} defaultValue={listExaminingSession.exams[0].id} onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                {listExaminingSession.exams.map((examItem, examIndex) => (\r\n                                                    <FormControlLabel key={`${examIndex}`} value={examItem.id} control={<Radio />} label={examItem.name} />\r\n                                                ))}\r\n                                            </RadioGroup>\r\n                                            <Button variant='contained' sx={{mt: 0.5}} onClick={() => handleOpenConfirm()}>Tiếp tục (F2)</Button> \r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </>\r\n            :\r\n                null\r\n            }\r\n\r\n            {/* <AlertConfirmModal \r\n                openAlertConfirmModal={isConfirmOpen} onCloseAlertConfirmModal={handleCloseConfirm} \r\n                onConfirmAlertConfirmModal={handleMedicalRegister} \r\n                titleConfirm=\"Đăng ký khám cho bệnh nhân?\"\r\n            /> */}\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExaminingSession","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListOldDisease, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDisease(props) {\r\n\r\n    const dataPatientsForSearchOldDiseaseDefault = {patientCode: '', phone: '', fullName: '', dayOfBirth: ''}\r\n    const dataPatientsForSearchOldDiseaseErrorDefault = {\r\n        patientCode: { title: '', isError: false, openTooltip: false, focus: false},\r\n        phone: { title: '', isError: false, openTooltip: false, focus: false },\r\n        fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n        dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n    \r\n    const [listFoundOldDisease, setListFoundOldDisease] = useState(null);\r\n    const [dataPatientsForSearchOldDisease, setDataPatientsForSearchOldDisease] = useState(dataPatientsForSearchOldDiseaseDefault);\r\n    const [dataPatientsForSearchOldDiseaseError, setDataPatientsForSearchOldDiseaseError] = useState(dataPatientsForSearchOldDiseaseErrorDefault);\r\n    const [focusField, setFocusField] = useState(null);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n\r\n    const dateFieldRef = useRef(null);\r\n    const formRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n    const tooltipTheme = createTheme({\r\n        components: {\r\n          MuiTooltip: {\r\n            defaultProps: {\r\n              placement: 'bottom',\r\n              arrow: true,\r\n              componentsProps: {\r\n                tooltip: {\r\n                  sx: {\r\n                    bgcolor: '#d32f2f',\r\n                  },\r\n                },\r\n                arrow: {\r\n                  sx: {\r\n                    color: '#d32f2f',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n    });\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key !== 'Enter') \r\n        {\r\n            event.preventDefault();\r\n        }\r\n        else if(event.key === 'Enter'){\r\n            handleEnterPress(event);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (value, fieldName) => {\r\n        if(value === '' || value === 'DD/MM/YYYY'){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(fieldName === 'patientCode'){\r\n                if(typingRef.current){\r\n                    clearInterval(typingRef.current);\r\n                }\r\n                \r\n                typingRef.current = setTimeout(() => {  \r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }, 10)\r\n                \r\n                if(focusField === 'patientCode'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'dayOfBirth'){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'dayOfBirth'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'phone'){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const onChangePatientId = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 8){\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.title = 'Mã bệnh nhân phải từ 8 đến 14 số';\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'patientCode'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.patientCode = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n    }\r\n\r\n    const onChangeFullName = (value) => {\r\n        if(focusField === 'fullName'){\r\n            setFocusField(null);\r\n        }\r\n\r\n        setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n            prevDataPatientsForSearchOldDisease.fullName = value;\r\n            return {...prevDataPatientsForSearchOldDisease}\r\n        })\r\n\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);      \r\n    }\r\n\r\n    const onChangeDayOfBirth = (value) => {\r\n        if(value){            \r\n            const date = value._d;\r\n            const today = new Date();\r\n            const yearsDifference = today.getFullYear() - date.getFullYear();\r\n            const monthsDifference = today.getMonth() - date.getMonth();\r\n            const daysDifference = today.getDate() - date.getDate();\r\n            const age = today.getFullYear() - date.getFullYear();\r\n\r\n            let totalMonths = yearsDifference * 12 + monthsDifference;\r\n            let totalDays = daysDifference;\r\n\r\n            if (daysDifference < 0) {\r\n                totalMonths -= 1;\r\n                totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n            }\r\n\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n\r\n            if(today < date || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = true;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n              }\r\n              else{\r\n                const formattedDate = moment(date).format('YYYY-MM-DD');\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.dayOfBirth = formattedDate;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangePhone = (value) => {\r\n        if(value !== ''){\r\n            const takenValue = value\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n                if(value.length < 10){\r\n                    _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n\r\n                else{\r\n                    if(focusField === 'phone'){\r\n                        setFocusField(null);\r\n                    }\r\n\r\n                    setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                        prevDataPatientsForSearchOldDisease.phone = takenValue;\r\n                        return {...prevDataPatientsForSearchOldDisease}\r\n                    })\r\n\r\n                    _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                    _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                    _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                    _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                    setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                }\r\n            }, 100)\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n\r\n\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 10){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.phone = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        }\r\n    }\r\n\r\n    const handleCloseModalOldDisease = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n          else{\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            setListFoundOldDisease(null);\r\n            setSelectedRowIndex(0);\r\n            props.setOpenModalOldDisease(false);\r\n        }\r\n    }\r\n\r\n    const handleResetField = () => {\r\n        formRef.current.reset();\r\n        const inputs = formRef.current.querySelectorAll('input, textarea');\r\n        inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n        setFocusField(null);\r\n    }\r\n\r\n    const validate = () => {\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        let isValid = true;\r\n\r\n        if(dataPatientsForSearchOldDisease.patientCode === '' && dataPatientsForSearchOldDisease.fullName === '' && \r\n            dataPatientsForSearchOldDisease.dayOfBirth === '' && dataPatientsForSearchOldDisease.phone === '')\r\n        {\r\n            _dataPatientsForSearchOldDiseaseError.patientCode.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.fullName.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.patientCode.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientCode.focus = true;\r\n                setFocusField('patientCode');\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.dayOfBirth.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                if (dateFieldRef.current) {\r\n                    dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n                }\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.phone.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.phone.focus = true;\r\n                setFocusField('phone');\r\n            }\r\n            isValid = false;\r\n        }\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        return isValid;\r\n    }\r\n\r\n    const handleFindOldDisease = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        setOpenAlertProcessing(true);\r\n        const response = await getListOldDisease(dataPatientsForSearchOldDisease.patientCode, dataPatientsForSearchOldDisease.phone, dataPatientsForSearchOldDisease.fullName, dataPatientsForSearchOldDisease.dayOfBirth, '');\r\n        setOpenAlertProcessing(false);\r\n        setListFoundOldDisease(response);\r\n        setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n        setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n        handleResetField();\r\n        if(response.length > 0){\r\n            tableRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleClickFindOldDisease = () => {\r\n        if(validate()){\r\n            handleFindOldDisease()\r\n        }\r\n    }\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleClickFindOldDisease();\r\n        }\r\n    }\r\n\r\n    const handleTableKeyDown = (event) => {\r\n        if (event.key === 'ArrowDown') {\r\n            setSelectedRowIndex((prevIndex) => (Math.min(prevIndex + 1, listFoundOldDisease.length - 1)));\r\n        } else if (event.key === 'ArrowUp') {\r\n            setSelectedRowIndex((prevIndex) => (Math.max(prevIndex - 1, 0)));\r\n        } else if (event.key === 'Enter' && selectedRowIndex !== null){\r\n            handleApplyDataPatientOldDisease(listFoundOldDisease[selectedRowIndex])\r\n        }\r\n    };\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            oldDiseaseWithNullCodeWard: foundOldDiseaseItem.codeWard ? false : true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientId: foundOldDiseaseItem.patientId,\r\n                patientCode: foundOldDiseaseItem.patientCode,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseModalOldDisease();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalOldDisease} onClose={(event, reason) => handleCloseModalOldDisease(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Tìm bệnh cũ</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalOldDisease()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{p: '10px 24px'}}>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around'}} component=\"form\" ref={formRef}>\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.patientCode.title}</h6>} open={dataPatientsForSearchOldDiseaseError.patientCode.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.patientCode.isError === true : false}\r\n                                    label=\"Mã BN\" variant=\"outlined\" size='small'\r\n                                    autoFocus\r\n                                    inputRef={(input) => input && focusField === 'patientCode' && input.focus()}\r\n                                    inputProps={{ maxLength: 14 }}\r\n                                    onChange={(e) => onChangePatientId(e.target.value)}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'patientCode')}\r\n                                    onKeyDown={handleKeyDown} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.fullName.title}</h6>} open={dataPatientsForSearchOldDiseaseError.fullName.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.fullName.isError === true : false}\r\n                                    label=\"Họ tên\" variant=\"outlined\" size='small'\r\n                                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                                    onKeyDown={(e) => handleEnterPress(e)} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                            <ThemeProvider theme={tooltipTheme}>\r\n                                <DemoContainer components={['DatePicker']}>\r\n                                    <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.dayOfBirth.title}</h6>} open={dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip}>    \r\n                                        <Box sx={{width: 222}}>\r\n                                            <DatePicker label=\"Ngày sinh\" format='DD/MM/YYYY' \r\n                                                disableFuture={true} disableOpenPicker \r\n                                                renderInput={(params) => <TextField {...params} size='small' />}\r\n                                                slotProps={{  \r\n                                                    textField: \r\n                                                    { \r\n                                                        inputRef: dateFieldRef,\r\n                                                        error: true ? dataPatientsForSearchOldDiseaseError.dayOfBirth.isError === true : false, \r\n                                                        size: 'small', \r\n                                                        onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                                        onKeyDown: (e) => handleEnterPress(e)\r\n                                                    }, \r\n                                                }}\r\n                                                onChange={(value) => onChangeDayOfBirth(value)}\r\n                                            />\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                </DemoContainer>\r\n                            </ThemeProvider>      \r\n                        </LocalizationProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.phone.title}</h6>} open={dataPatientsForSearchOldDiseaseError.phone.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                                    inputRef={(input) => input && focusField === 'phone' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.phone.isError === true : false}\r\n                                    label=\"Điện thoại cha/mẹ\" variant=\"outlined\" size='small'\r\n                                    inputProps={{ maxLength: 10 }}\r\n                                    onChange={(e) => onChangePhone(e.target.value)}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'phone')}\r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 1.6}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleClickFindOldDisease()}>Tìm (Enter)</Button>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        {\r\n                            listFoundOldDisease ? \r\n                                listFoundOldDisease.length !== 0 ? \r\n                                <>\r\n                                    <TableContainer component={Paper} sx={{boxShadow: 4, mt: 1.4}} tabIndex={0} onKeyDown={(event) => handleTableKeyDown(event)} ref={tableRef}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Điện thoại</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listFoundOldDisease ? \r\n                                                    listFoundOldDisease.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                        <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} \r\n                                                            selected={selectedRowIndex === foundOldDiseaseIndex} \r\n                                                            onDoubleClick={() => handleApplyDataPatientOldDisease(foundOldDiseaseItem)}\r\n                                                        >\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.patientCode}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                            <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.phoneMother || foundOldDiseaseItem.phoneFather}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'green'}}>Tìm thấy {listFoundOldDisease.length} bệnh nhân</Typography>\r\n                                </>\r\n                                : \r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'red'}}>Không tìm thấy bệnh nhân</Typography>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Box>  \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDisease","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDiseaseForRegister(props) {\r\n\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const handleCloseOldDiseaseRegister = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            props.setOpenOldDiseaseRegister(false);\r\n        }\r\n    }\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            oldDiseaseWithNullCodeWard: foundOldDiseaseItem.codeWard ? false : true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientId: foundOldDiseaseItem.patientId,\r\n                patientCode: foundOldDiseaseItem.patientCode,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseOldDiseaseRegister();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openOldDiseaseRegister} onClose={(event, reason) => handleCloseOldDiseaseRegister(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{padding: '10px 0px 10px 0px', fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Bệnh nhân đã tham gia khám định kỳ thuộc danh sách dưới đây?</DialogTitle>\r\n                <IconButton onClick={() => handleCloseOldDiseaseRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent sx={{padding: '0px 18px 0px 18px', mt: 0, mb: 3}}>\r\n                    {props.listOldDiseaseRegister.length !== 0 ?\r\n                        <>\r\n                            <TableContainer component={Paper} sx={{boxShadow: 4}}>\r\n                                <Table stickyHeader>\r\n                                    <TableHead>\r\n                                        <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                            <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                            <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Điện thoại</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            props.listOldDiseaseRegister.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => handleApplyDataPatientOldDisease(foundOldDiseaseItem)}>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.patientCode}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                    <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                    <TableCell align='left' >{foundOldDiseaseItem.phoneMother || foundOldDiseaseItem.phoneFather}</TableCell>\r\n                                                </TableRow>\r\n                                            ))\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </>\r\n                    :\r\n                        null\r\n                    }\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDiseaseForRegister","import React, { useContext, useState, useEffect, useRef } from 'react';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//ExaminingSessios modal\r\nimport ExaminingSession from '../ManageExaminingSession/ExaminingSession';\r\n//old disease modal\r\nimport OldDisease from '../ManageOldDisease/OldDisease';\r\nimport OldDiseaseForRegister from '../ManageOldDisease/OldDiseaseForRegister';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateField } from '@mui/x-date-pickers/DateField';\r\n//lodash\r\nimport _ from 'lodash';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { createMedicalBackRegister, getListOldDisease } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction BookMedical(props) {\r\n\r\n  const dataPatientsRegisterDefault = {\r\n    examinationId: '',\r\n    oldDisease: false,\r\n    height: '',\r\n    weight: '',\r\n    headCircumference: '',\r\n    reason: '',\r\n    vaccination: false,\r\n    medicalTypeId: '',\r\n    userIdDoctor: '',\r\n    patient: {\r\n      patientCode: '',\r\n      identifier: '',\r\n      address: '',\r\n      fullName: '',\r\n      dayOfBirth: '',\r\n      codeWard: '',\r\n      gender: '',\r\n      fullNameMother: '',\r\n      phoneMother: '',\r\n      fullNameFather: '',\r\n      phoneFather: ''\r\n    }\r\n  }\r\n\r\n  const autocompleteValueDefault = { \r\n    dayOfBirth: null, \r\n    gender: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    province: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    district: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    ward: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    medicalType: {\r\n      value: null,\r\n      openOption: false\r\n    },\r\n    vaccination: false \r\n  }\r\n\r\n  const dataPatientsRegisterErrorDefault = { \r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    patientCode: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n    medicalType: { title: '', isError: false, openTooltip: false, focus: false },\r\n    reason: { title: '', isError: false, openTooltip: false, focus: false }\r\n  }\r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const listMedicalType = [\r\n    {medicalTypeOrder: 1, medicalTypeName: 'Khám Nhi khoa phát triển', medicalTypeId: 1},\r\n    {medicalTypeOrder: 2, medicalTypeName: 'Khám trẻ nguy cơ cao', medicalTypeId: 2},\r\n  ]\r\n\r\n  const { isDialogChangePasswordOpen, isOldDiseaseWithNullCodeWard, isDialogChangeInfoUserOpen, setIsOldDiseaseWithNullCodeWard } = useContext(UserContext);\r\n\r\n  const [openModalExaminingSession, setOpenModalExaminingSession] = useState(false);\r\n  const [isContinueSelectedExaminingSession, setIsContinueSelectedExaminingSession] = useState(false);\r\n\r\n  const [openModalOldDisease, setOpenModalOldDisease] = useState(false);\r\n\r\n  const [openOldDiseaseRegister, setOpenOldDiseaseRegister] = useState(false);\r\n  const [listOldDiseaseRegister, setListOldDiseaseRegister] = useState([]);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const [dataPatientsRegister, setDataPatientsRegister] = useState(dataPatientsRegisterDefault);\r\n  const [dataPatientsRegisterError, setDataPatientsRegisterError] = useState(dataPatientsRegisterErrorDefault);\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [autocompleteValue, setAutocompleteValue] = useState(autocompleteValueDefault);\r\n\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const formRef = useRef(null);\r\n  const firstFocusRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n  const typingRef = useRef(null);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f', \r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -7],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleKeyDown = (event, nextFieldId) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key === 'Enter') \r\n    {\r\n      if(event.key === 'Enter'){\r\n        event.preventDefault();\r\n        let nextField = null;\r\n        if(dataPatientsRegister.oldDiseaseWithNullCodeWard && nextFieldId === 'patientFullName'){\r\n          nextField = document.getElementById('patientProvince');\r\n        }\r\n        else if(dataPatientsRegister.oldDiseaseWithNullCodeWard && nextFieldId === 'patientAddress'){\r\n          nextField = document.getElementById('patientWeight');\r\n        }\r\n        else{\r\n          nextField = document.getElementById(nextFieldId);\r\n        }\r\n        if(nextField) {\r\n          nextField.focus();\r\n          nextField.select(); // Đảm bảo con trỏ chuột xuất hiện\r\n        }\r\n      }\r\n      else{\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  \r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n\r\n    // Xử lý đặc biệt cho \"d\" và \"đ\"\r\n    const replaceSpecialCharacters = str => str.replace(/đ/g, 'd');\r\n\r\n    return options.filter(option => {\r\n        const lowercasedFullName = replaceSpecialCharacters(option.fullName.toLowerCase());\r\n        const initials = replaceSpecialCharacters(option.fullName.split(' ').map(word => word[0]).join('').toLowerCase());\r\n\r\n        const normalizedInput = replaceSpecialCharacters(lowercasedInput);\r\n\r\n        return (\r\n            lowercasedFullName.includes(normalizedInput) ||\r\n            initials.includes(normalizedInput)\r\n        );\r\n    });\r\n  };\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.gender.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.province.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Ward'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'MedicalType'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.medicalType.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n      if(fieldName === 'Identifier'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n        _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.dayOfBirth.title = '';\r\n      //     _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n      //   _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PatientId'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.patientCode.title = '';\r\n      //     _dataPatientsRegisterError.patientCode.openTooltip = false;\r\n      //     _dataPatientsRegisterError.patientCode.isError = false;\r\n      //     _dataPatientsRegisterError.patientCode.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.phoneMother.title = '';\r\n      //     _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      //     _dataPatientsRegisterError.phoneMother.isError = false;\r\n      //     _dataPatientsRegisterError.phoneFather.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      if(fieldName === 'PhoneFather'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.patientCode.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      else if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientsRegisterError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientsRegisterError.identifier.openTooltip = true;\r\n          _dataPatientsRegisterError.identifier.isError = true;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.identifier.title = '';\r\n      _dataPatientsRegisterError.identifier.openTooltip = false;\r\n      _dataPatientsRegisterError.identifier.isError = false;\r\n      _dataPatientsRegisterError.identifier.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangePatientId = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 8){\r\n          _dataPatientsRegisterError.patientCode.title = 'Mã BN phải từ 8 đến 14 số';\r\n          _dataPatientsRegisterError.patientCode.openTooltip = true;\r\n          _dataPatientsRegisterError.patientCode.isError = true;\r\n          _dataPatientsRegisterError.patientCode.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          if(focusField === 'patientCode'){\r\n            setFocusField(null);\r\n          }\r\n          \r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.patientCode = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.patientCode.title = '';\r\n          _dataPatientsRegisterError.patientCode.openTooltip = false;\r\n          _dataPatientsRegisterError.patientCode.isError = false;\r\n          _dataPatientsRegisterError.patientCode.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        \r\n        if(dataPatientsRegister.patient.patientCode.length === 14){\r\n          handleFindOldDisease()\r\n        }\r\n      }, 100)\r\n    }\r\n    // else{\r\n    //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n    //   _dataPatientsRegisterError.patientCode.title = '';\r\n    //   _dataPatientsRegisterError.patientCode.openTooltip = false;\r\n    //   _dataPatientsRegisterError.patientCode.isError = false;\r\n    //   _dataPatientsRegisterError.patientCode.focus = false;\r\n    //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    // }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullName = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      if(dataPatientsRegisterError.fullName.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullName.title = '';\r\n        _dataPatientsRegisterError.fullName.openTooltip = false;\r\n        _dataPatientsRegisterError.fullName.isError = false;\r\n        _dataPatientsRegisterError.fullName.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n\r\n    // setTimeout(() => {\r\n    //   if(dataPatientsRegister.patient.fullName !== ''){\r\n    //     handleFindOldDisease()\r\n    //   }\r\n    // }, 500)\r\n  }\r\n\r\n  const onChangeDOB = (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n\r\n        if(today < takenValue || age > 2 || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientsRegisterError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n        }\r\n\r\n        else{\r\n          if(focusField === 'dayOfBirth'){\r\n            setFocusField(null);\r\n          }\r\n\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n          prevDataPatientsRegister.patient.dayOfBirth = formattedDate\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.dayOfBirth.title = '';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n\r\n      // if(dataPatientsRegister.patient.dayOfBirth !== ''){\r\n      //   handleFindOldDisease()\r\n      // }\r\n    }  \r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.gender = value.genderValue\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.gender.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.gender.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.gender.title = '';\r\n      _dataPatientsRegisterError.gender.openTooltip = false;\r\n      _dataPatientsRegisterError.gender.isError = false;\r\n      _dataPatientsRegisterError.gender.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n    //   handleFindOldDisease();\r\n    // }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.province.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.district.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.province.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.province.title = '';\r\n      _dataPatientsRegisterError.province.openTooltip = false;\r\n      _dataPatientsRegisterError.province.isError = false;\r\n      _dataPatientsRegisterError.province.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.district.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.district.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.district.title = '';\r\n      _dataPatientsRegisterError.district.openTooltip = false;\r\n      _dataPatientsRegisterError.district.isError = false;\r\n      _dataPatientsRegisterError.district.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n    \r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.codeWard = value.code\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.ward.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.ward.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.ward.title = '';\r\n      _dataPatientsRegisterError.ward.openTooltip = false;\r\n      _dataPatientsRegisterError.ward.isError = false;\r\n      _dataPatientsRegisterError.ward.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeFolk = (value) => {\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'address'){\r\n        setFocusField(null);\r\n      }\r\n      \r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.address = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.address.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.address.title = '';\r\n        _dataPatientsRegisterError.address.openTooltip = false;\r\n        _dataPatientsRegisterError.address.isError = false;\r\n        _dataPatientsRegisterError.address.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'fullNameMother'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameMother = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        if(focusField === 'phoneMother'){\r\n          setFocusField(null);\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneMother.isError = true;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneMother = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneMother.title = '';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneMother.isError = false;\r\n      _dataPatientsRegisterError.phoneMother.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    } \r\n    // if(dataPatientsRegister.patient.phoneMother.length === 10){\r\n    //   handleFindOldDisease()\r\n    // }\r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    if(focusField === 'fullNameFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameFather = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (e, value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneFather.isError = true;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneFather = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'phoneFather'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneFather.title = '';\r\n      _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneFather.isError = false;\r\n      _dataPatientsRegisterError.phoneFather.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.phoneFather.length === 10){\r\n    //   handleFindOldDisease()\r\n    // }\r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'height'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.height = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.height.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.height.title = '';\r\n        _dataPatientsRegisterError.height.openTooltip = false;\r\n        _dataPatientsRegisterError.height.isError = false;\r\n        _dataPatientsRegisterError.height.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'weight'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.weight = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.weight.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.weight.title = '';\r\n        _dataPatientsRegisterError.weight.openTooltip = false;\r\n        _dataPatientsRegisterError.weight.isError = false;\r\n        _dataPatientsRegisterError.weight.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'headCircumference'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.headCircumference = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.headCircumference.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.headCircumference.title = '';\r\n        _dataPatientsRegisterError.headCircumference.openTooltip = false;\r\n        _dataPatientsRegisterError.headCircumference.isError = false;\r\n        _dataPatientsRegisterError.headCircumference.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onSelectMedicalType = (e, value) => {\r\n    if(focusField === 'medicalType'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.medicalTypeId = value.medicalTypeId\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.medicalType.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.medicalType.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.medicalType.title = '';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = false;\r\n      _dataPatientsRegisterError.medicalType.isError = false;\r\n      _dataPatientsRegisterError.medicalType.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeReason = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.reason = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      // if(dataPatientsRegisterError.reason.isError){\r\n      //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      //   _dataPatientsRegisterError.reason.isError = false;\r\n      //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.vaccination = bool\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.vaccination = bool\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkValidate = () => {\r\n    let isValid = true;\r\n    const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n\r\n    if(dataPatientsRegisterError.identifier.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.identifier.focus = true;\r\n        setFocusField('identifier');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.patientCode === ''){\r\n      _dataPatientsRegisterError.patientCode.title = 'Bạn chưa nhập mã bệnh nhân';\r\n      _dataPatientsRegisterError.patientCode.openTooltip = true;\r\n      _dataPatientsRegisterError.patientCode.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientCode.focus = true;\r\n        setFocusField('patientCode');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.patientCode.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientCode.focus = true;\r\n        setFocusField('patientCode');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullName === ''){\r\n      _dataPatientsRegisterError.fullName.title = 'Bạn chưa nhập họ tên';\r\n      _dataPatientsRegisterError.fullName.openTooltip = true;\r\n      _dataPatientsRegisterError.fullName.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullName.focus = true;\r\n        setFocusField('fullName');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.dayOfBirth === ''){\r\n      _dataPatientsRegisterError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n      _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n      _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.dayOfBirth.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.gender === ''){\r\n      _dataPatientsRegisterError.gender.title = 'Bạn chưa chọn giới tính';\r\n      _dataPatientsRegisterError.gender.openTooltip = true;\r\n      _dataPatientsRegisterError.gender.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.gender.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n      setFocusField('gender');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.province.value === null){\r\n      _dataPatientsRegisterError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n      _dataPatientsRegisterError.province.openTooltip = true;\r\n      _dataPatientsRegisterError.province.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.province.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('province');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.district.value === null){\r\n      _dataPatientsRegisterError.district.title = 'Bạn chưa chọn quận huyện';\r\n      _dataPatientsRegisterError.district.openTooltip = true;\r\n      _dataPatientsRegisterError.district.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.district.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('district');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.ward.value === null){\r\n      _dataPatientsRegisterError.ward.title = 'Bạn chưa chọn phường xã';\r\n      _dataPatientsRegisterError.ward.openTooltip = true;\r\n      _dataPatientsRegisterError.ward.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.ward.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('ward');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.address === ''){\r\n      _dataPatientsRegisterError.address.title = 'Bạn chưa nhập địa chỉ';\r\n      _dataPatientsRegisterError.address.openTooltip = true;\r\n      _dataPatientsRegisterError.address.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.address.focus = true;\r\n        setFocusField('address');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullNameMother === '' && dataPatientsRegister.patient.fullNameFather === ''){\r\n      _dataPatientsRegisterError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n      _dataPatientsRegisterError.fullNameMother.openTooltip = true;\r\n      _dataPatientsRegisterError.fullNameMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullNameMother.focus = true;\r\n        setFocusField('fullNameMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.phoneMother === '' && dataPatientsRegister.patient.phoneFather === ''){\r\n      _dataPatientsRegisterError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n      _dataPatientsRegisterError.phoneMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneMother.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneFather.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneFather.focus = true;\r\n        setFocusField('phoneFather');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.weight === ''){\r\n      _dataPatientsRegisterError.weight.title = 'Bạn chưa nhập cân nặng';\r\n      _dataPatientsRegisterError.weight.openTooltip = true;\r\n      _dataPatientsRegisterError.weight.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.weight.focus = true;\r\n        setFocusField('weight');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.height === ''){\r\n      _dataPatientsRegisterError.height.title = 'Bạn chưa nhập chiều cao';\r\n      _dataPatientsRegisterError.height.openTooltip = true;\r\n      _dataPatientsRegisterError.height.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.height.focus = true;\r\n        setFocusField('height');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.headCircumference === ''){\r\n      _dataPatientsRegisterError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n      _dataPatientsRegisterError.headCircumference.openTooltip = true;\r\n      _dataPatientsRegisterError.headCircumference.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.headCircumference.focus = true;\r\n        setFocusField('headCircumference');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.medicalTypeId === ''){\r\n      _dataPatientsRegisterError.medicalType.title = 'Bạn chưa chọn loại hình khám';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = true;\r\n      _dataPatientsRegisterError.medicalType.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.medicalType.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('medicalType');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    // if(dataPatientsRegister.reason === ''){\r\n    //   _dataPatientsRegisterError.reason.isError = true;\r\n    //   isValid = false;\r\n    // }\r\n\r\n    setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    return isValid;\r\n  }\r\n\r\n  const handleMedicalRegister = () => {\r\n    setTimeout(() => {\r\n      if(checkValidate()){\r\n        firstFocusRef.current.focus();\r\n        if(props.dataPantientAppointmentsToday){\r\n          handleMedicalBackRegister();\r\n        }\r\n        else{\r\n          setOpenModalExaminingSession(true);\r\n        }\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const handleMedicalBackRegister = async () => {\r\n    setOpenAlertProcessing(true);\r\n    const responseCreateMedicalBackRegister = await createMedicalBackRegister(dataPatientsRegister);\r\n    if(responseCreateMedicalBackRegister.status === 200){\r\n      toast.success(responseCreateMedicalBackRegister.data, {toastId: 'success5'})\r\n      props.setCompleteMedicalRegister(true);\r\n      handleResetField();\r\n    }\r\n    else{\r\n      toast.error(responseCreateMedicalBackRegister.data, {toastId: 'error5'})\r\n    }\r\n    setOpenAlertProcessing(false);\r\n  }\r\n\r\n  const handleApplyPantientOldDiseaseData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = dataPatientsRegister.patient.identifier;\r\n    document.getElementById('patientCode').value = dataPatientsRegister.patient.patientCode;\r\n    document.getElementById('patientFullName').value = dataPatientsRegister.patient.fullName;\r\n\r\n    let _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(dataPatientsRegister.patient.dayOfBirth);\r\n\r\n    if(dataPatientsRegister.patient.codeWard){\r\n      const response = await getFullAddressByIdWard(dataPatientsRegister.patient.codeWard);\r\n      const responseListDistrict = await getListDistrict(response.provinceCode);\r\n      const responseListWard = await getListWard(response.districtCode);\r\n  \r\n      const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n      const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n      const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n      \r\n      _autocompleteValue.province.value = listProvince[indexListProvince];\r\n      _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n      _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n      _autocompleteValue.vaccination = dataPatientsRegister.vaccination;\r\n    }\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === dataPatientsRegister.patient.gender);\r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === dataPatientsRegister.medicalTypeId);\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    setIsOldDiseaseWithNullCodeWard(true);\r\n    \r\n    document.getElementById('patientAddress').value = dataPatientsRegister.patient.address;\r\n    document.getElementById('patientFullNameMother').value = dataPatientsRegister.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = dataPatientsRegister.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = dataPatientsRegister.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = dataPatientsRegister.patient.phoneFather;\r\n\r\n    if(dataPatientsRegister.oldDiseaseWithNullCodeWard){\r\n      setTimeout(() => {\r\n        setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n        setOpenAlertProcessing(false);\r\n\r\n        setFocusField('patientCode');\r\n      }, 300)\r\n    }\r\n    else{\r\n      setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n      setOpenAlertProcessing(false);\r\n      \r\n      setFocusField('weight');\r\n    }\r\n  }\r\n\r\n  const handleApplyPantientAppointmentsTodayData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = props.dataPantientAppointmentsToday.patient.identifier;\r\n    document.getElementById('patientCode').value = props.dataPantientAppointmentsToday.patient.patientCode;\r\n    document.getElementById('patientFullName').value = props.dataPantientAppointmentsToday.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(props.dataPantientAppointmentsToday.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(props.dataPantientAppointmentsToday.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === props.dataPantientAppointmentsToday.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === props.dataPantientAppointmentsToday.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = props.dataPantientAppointmentsToday.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = props.dataPantientAppointmentsToday.patient.address;\r\n    document.getElementById('patientFullNameMother').value = props.dataPantientAppointmentsToday.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = props.dataPantientAppointmentsToday.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = props.dataPantientAppointmentsToday.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = props.dataPantientAppointmentsToday.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('weight');\r\n  }\r\n\r\n  const handleResetField = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n    const oldDisease = dataPatientsRegister.oldDisease ? true : false\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n\r\n    if(isOldDiseaseWithNullCodeWard){\r\n      setIsOldDiseaseWithNullCodeWard(false);\r\n    }\r\n\r\n    if(oldDisease){\r\n      setTimeout(() => {\r\n        firstFocusRef.current.focus();\r\n      }, 100)\r\n    }\r\n    else{\r\n      firstFocusRef.current.focus();\r\n    }\r\n  }\r\n\r\n  const handleOpenModalOldDisease = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n    firstFocusRef.current.focus();\r\n\r\n    if(isOldDiseaseWithNullCodeWard){\r\n      setIsOldDiseaseWithNullCodeWard(false);\r\n    }\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const response = await getListProvince();\r\n    if(response !== 400){\r\n      setListProvince(response);\r\n    }\r\n  }\r\n\r\n  const handleFindOldDisease = async () => {\r\n    const response = await getListOldDisease(dataPatientsRegister.patient.patientCode, dataPatientsRegister.patient.phoneMother ? dataPatientsRegister.patient.phoneMother : dataPatientsRegister.patient.phoneFather, dataPatientsRegister.patient.fullName, dataPatientsRegister.patient.dayOfBirth);\r\n    if(response.length !== 0){\r\n      setListOldDiseaseRegister(response);\r\n      setOpenOldDiseaseRegister(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetListProvince();\r\n    firstFocusRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(dataPatientsRegister.oldDisease === true){\r\n      handleApplyPantientOldDiseaseData();\r\n    }\r\n  }, [dataPatientsRegister.oldDisease])\r\n\r\n  useEffect(() => {\r\n    if(props.dataPantientAppointmentsToday){\r\n      setDataPatientsRegister(props.dataPantientAppointmentsToday);\r\n      handleApplyPantientAppointmentsTodayData();\r\n    }\r\n  }, [props.dataPantientAppointmentsToday]) \r\n\r\n  useEffect(() => {\r\n    if(isDialogChangePasswordOpen === false && isDialogChangeInfoUserOpen === false){\r\n      if(props.onF2Press){\r\n        if(openModalExaminingSession === true && openModalOldDisease === false){\r\n          setIsContinueSelectedExaminingSession(true);\r\n          props.setOnF2Press(false);\r\n        }\r\n        else{\r\n          handleMedicalRegister();\r\n          props.setOnF2Press(false);\r\n        }\r\n      }\r\n      \r\n      if(props.onF4Press){\r\n        if(openModalExaminingSession === true || openModalOldDisease === true){\r\n          props.setOnF4Press(false);\r\n        }\r\n        else{\r\n          handleResetField();\r\n          props.setOnF4Press(false);\r\n        }\r\n      }\r\n\r\n      if(props.onF8Press){\r\n        if(openModalExaminingSession === true || openModalOldDisease === true){\r\n          props.setOnF8Press(false);\r\n        }\r\n        else{\r\n          handleOpenModalOldDisease();\r\n          props.setOnF8Press(false);\r\n        }\r\n      }\r\n    }\r\n  }, [props.onF2Press, props.onF4Press, props.onF8Press, isDialogChangePasswordOpen, isDialogChangeInfoUserOpen])\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{'&.MuiContainer-maxWidthLg': {pr: 0}, height: '100%',}}>\r\n        <Box sx={{ minHeight: '36.8rem', borderRadius: '20px', boxShadow: 5, pt: 1.2, pb: 1.2, pl: 1.8, pr: 1.8, }}>\r\n          <Typography variant='h6' sx={{textAlign: 'center', fontWeight: 'bolder', color: 'blue'}}>Thông tin đăng ký khám</Typography> \r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}} component=\"form\" ref={formRef}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.identifier.title}</h6>} open={dataPatientsRegisterError.identifier.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.identifier.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã định danh\" variant=\"outlined\" id='patientIdentifier' autoComplete='off'\r\n                  inputRef={focusField === 'identifier' ? (input) => input && focusField === 'identifier' && input.focus() : firstFocusRef}\r\n                  onChange={(e) => onChangeIdentifier(e.target.value)}\r\n                  onKeyDown={(e) => handleKeyDown(e, 'patientCode')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Identifier')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.patientCode.title}</h6>} open={dataPatientsRegisterError.patientCode.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '19%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.patientCode.isError === true : false} disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                  label=\"Mã BN\" variant=\"outlined\" id='patientCode' autoComplete='off'\r\n                  inputRef={(input) => input && focusField === 'patientCode' && input.focus()}\r\n                  onChange={(e) => onChangePatientId(e.target.value)}\r\n                  onKeyDown={(e) => handleKeyDown(e, 'patientFullName')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'PatientId')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 14 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullName.title}</h6>} open={dataPatientsRegisterError.fullName.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }} \r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [37, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              > \r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullName.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên\" variant=\"outlined\" id=\"patientFullName\" autoComplete='off'                \r\n                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientDayOfBirth')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  /> \r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n      \r\n            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n              <ThemeProvider theme={tooltipTheme}>\r\n                <DemoContainer components={['DatePicker']} >\r\n                  <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.dayOfBirth.title}</h6>} open={dataPatientsRegisterError.dayOfBirth.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>    \r\n                    <Box sx={{width: 142, mt: '12px !important'}}>\r\n                      <div style={{width: '100%', }}>\r\n                        <DateField label=\"Ngày sinh\" \r\n                          format='DD/MM/YYYY' value={autocompleteValue.dayOfBirth}\r\n                          disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                          slotProps={{ \r\n                            textField: \r\n                              { \r\n                                inputRef: dateFieldRef,\r\n                                id: 'patientDayOfBirth',\r\n                                error: true ? dataPatientsRegisterError.dayOfBirth.isError === true : false,\r\n                                onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                sx: {'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } },\r\n                              }\r\n                          }}\r\n                          onChange={(value) => onChangeDOB(value)}\r\n                          onKeyDown={(e) => handleKeyDown(e, 'patientGender')}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  </Tooltip>\r\n                </DemoContainer>\r\n              </ThemeProvider>      \r\n            </LocalizationProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.gender.title}</h6>} open={dataPatientsRegisterError.gender.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '12%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientGender' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.gender.value}\r\n                    options={listGender} \r\n                    getOptionLabel={(option) => option.genderName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.genderName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectGender(e, value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientProvince')}\r\n                    open={autocompleteValue.gender.openOption}\r\n                    onFocus={() => handleFocus('Gender')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Giới tính\" \r\n                        inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.gender.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n             \r\n            {/* <TextField label=\"Dân tộc\" variant=\"outlined\" sx={{width: '12%', '&.MuiTextField-root' : {marginTop: '15px'}}}/> */}\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.province.title}</h6>} open={dataPatientsRegisterError.province.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '19.2%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientProvince' disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                    value={autocompleteValue.province.value}\r\n                    options={listProvince} \r\n                    noOptionsText={'Đang tải...'}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectProvine(e, value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientDistrict')}\r\n                    open={autocompleteValue.province.openOption}\r\n                    onFocus={() => handleFocus('Province')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Thành phố\" \r\n                        inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.province.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.district.title}</h6>} open={dataPatientsRegisterError.district.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '24%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientDistrict' disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                    value={autocompleteValue.district.value}\r\n                    options={listDistrict.list} \r\n                    noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                    open={autocompleteValue.district.openOption}\r\n                    onFocus={() => handleFocus('District')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.fullName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectDistrict(e, value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientWard')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Quận/Huyện\" \r\n                        inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.district.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <>\r\n                              {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <>\r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.ward.title}</h6>} open={dataPatientsRegisterError.ward.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                  <div style={{width: '23.5%', marginTop: '20px'}}>\r\n                    <Autocomplete disablePortal id='patientWard' disabled={dataPatientsRegister.oldDisease === true && dataPatientsRegister.oldDiseaseWithNullCodeWard === false ? true : false}\r\n                      value={autocompleteValue.ward.value}\r\n                      options={listWard.list} \r\n                      noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                      filterOptions={filterOptions}\r\n                      getOptionLabel={(option) => option.name}\r\n                      autoComplete={false}\r\n                      renderOption={(props, option) => (\r\n                        <li {...props}>\r\n                          {option.fullName}\r\n                        </li>\r\n                      )}\r\n                      onChange={(e, value) => onSelectWard(e, value)}\r\n                      onKeyDown={(e) => handleKeyDown(e, 'patientAddress')}\r\n                      open={autocompleteValue.ward.openOption}\r\n                      onFocus={() => handleFocus('Ward')}\r\n                      onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} \r\n                          label=\"Phường/Xã\" \r\n                          inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                          error={true ? dataPatientsRegisterError.ward.isError === true : false} \r\n                          sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                              <>\r\n                                {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                              </>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      disableClearable // Bỏ icon xóa\r\n                      popupIcon={null} // Bỏ icon dropdown\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.address.title}</h6>} open={dataPatientsRegisterError.address.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.address.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Địa chỉ\" variant=\"outlined\" id='patientAddress' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                    onChange={(e) => onChangeAddress(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientFullNameMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullNameMother.title}</h6>} open={dataPatientsRegisterError.fullNameMother.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullNameMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên mẹ\" variant=\"outlined\" id='patientFullNameMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                    autoFocus={dataPatientsRegisterError.fullNameMother.focus}\r\n                    onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientPhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneMother.title}</h6>} open={dataPatientsRegisterError.phoneMother.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.phoneMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Điện thoại\" variant=\"outlined\" id='patientPhoneMother' autoComplete='off'\r\n                    inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                    onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientFullNameFather')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n\r\n            <TextField label=\"Họ tên cha\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n              variant=\"outlined\" id='patientFullNameFather' autoComplete='off'\r\n              sx={{width: '30.4%', '&.MuiTextField-root' : {marginTop: '20px'}}} \r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n              onKeyDown={(e) => handleKeyDown(e, 'patientPhoneFather')}\r\n              inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n              InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n            />\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneFather.title}</h6>} open={dataPatientsRegisterError.phoneFather.openTooltip}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField label=\"Điện thoại\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                    variant=\"outlined\" id='patientPhoneFather' autoComplete='off'\r\n                    onChange={(e) => onChangePhoneFather(e, e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientWeight')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneFather')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.weight.title}</h6>} open={dataPatientsRegisterError.weight.openTooltip} PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Cân nặng bé\" variant=\"outlined\" id='patientWeight' autoComplete='off' error={true ? dataPatientsRegisterError.weight.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(kg)</InputAdornment>}}\r\n                    onChange={(e) => onChangeWeight(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientHeight')}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.height.title}</h6>} open={dataPatientsRegisterError.height.openTooltip} placement='left' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Chiều cao bé\" variant=\"outlined\" id='patientHeight' autoComplete='off' error={true ? dataPatientsRegisterError.height.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeight(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientHeadCircumference')}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider> \r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.headCircumference.title}</h6>} open={dataPatientsRegisterError.headCircumference.openTooltip} placement='top-start' PopperProps={{sx: { zIndex: 2 } }}\r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [70, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              >\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Vòng đầu bé\" variant=\"outlined\" id='patientHeadCircumference' autoComplete='off' error={true ? dataPatientsRegisterError.headCircumference.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                    onKeyDown={(e) => handleKeyDown(e, 'patientMedicalType')}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.medicalType.title}</h6>} open={dataPatientsRegisterError.medicalType.openTooltip} placement='bottom' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30.5%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientMedicalType' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.medicalType.value}\r\n                    options={listMedicalType} \r\n                    getOptionLabel={(option) => option.medicalTypeName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.medicalTypeName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectMedicalType(e, value)}\r\n                    open={autocompleteValue.medicalType.openOption}\r\n                    onFocus={() => handleFocus('MedicalType')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'MedicalType')}\r\n                    autoComplete={false}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Loại hình khám\" \r\n                        inputRef={(input) => input && focusField === 'medicalType' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.medicalType.isError === true : false} \r\n                        sx={{\r\n                          '& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } ,\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.Mui-disabled.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'},\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'}\r\n                        }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.reason.title}</h6>} open={dataPatientsRegisterError.reason.openTooltip} >\r\n                <div style={{width: '100%' }}>\r\n                  <TextField fullWidth label=\"Lý do khám\" multiline rows={3} variant=\"outlined\" id='patientReason' autoComplete='off' error={true ? dataPatientsRegisterError.reason.isError === true : false}\r\n                    sx={{'&.MuiTextField-root' : {marginTop: '20px'}}} \r\n                    onChange={(e) => onChangeReason(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <FormControlLabel control={<Checkbox checked={autocompleteValue.vaccination}/>} sx={{width: '100%'}}\r\n              label=\"Bệnh nhân có tham gia tiêm ngừa\" onChange={(e) => onChangeVaccination(e.target.checked)}/>  \r\n\r\n            <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n              <Button variant=\"contained\" color=\"primary\" sx={{mr: 1}} onClick={() => handleMedicalRegister()}>Đăng ký (f2)</Button>\r\n              <Button variant=\"contained\" color=\"warning\" onClick={() => handleResetField()}>Làm mới (f4)</Button>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => handleOpenModalOldDisease()}>Bệnh cũ (f8)</Button>\r\n            </Box>\r\n          </Box>         \r\n        </Box>\r\n      </Container>\r\n\r\n      <ExaminingSession \r\n        openModalExaminingSession={openModalExaminingSession} setOpenModalExaminingSession={setOpenModalExaminingSession} \r\n        handleResetField={handleResetField} setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        isContinueSelectedExaminingSession={isContinueSelectedExaminingSession} setIsContinueSelectedExaminingSession={setIsContinueSelectedExaminingSession}\r\n        dataPatientsRegister={dataPatientsRegister} \r\n      />\r\n\r\n      <OldDisease \r\n        openModalOldDisease={openModalOldDisease} setOpenModalOldDisease={setOpenModalOldDisease}\r\n        dataPatientsRegister={dataPatientsRegister} setDataPatientsRegister={setDataPatientsRegister}\r\n      />\r\n\r\n      <OldDiseaseForRegister\r\n        openOldDiseaseRegister={openOldDiseaseRegister} setOpenOldDiseaseRegister={setOpenOldDiseaseRegister}\r\n        setDataPatientsRegister={setDataPatientsRegister}\r\n        listOldDiseaseRegister={listOldDiseaseRegister} setListOldDiseaseRegister={setListOldDiseaseRegister}\r\n      />\r\n\r\n      <AlertProcessing\r\n        openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookMedical","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//modal\r\nimport SelectedDoctorExamining from '../ManageSelectedDoctorExamining/SelectedDoctorExamining';\r\n//components\r\nimport ListPatientsRegister from './ListPatientsRegister';\r\nimport BookMedical from './BookMedical';\r\n//api\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nfunction MainMedicalRegister() {\r\n\r\n  const { user, loading } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [component1Loading, setComponent1Loading] = useState(true);\r\n\r\n  const [completeMedicalRegister, setCompleteMedicalRegister] = useState(false);\r\n  const [dataPantientAppointmentsToday, setDataPantientAppointmentsToday] = useState();\r\n\r\n  const [handleResetField, setHandleResetField] = useState(false); //F2\r\n  const [handleOpenModalExaminingSession, setHandleOpenModalExaminingSession] = useState(false); //F4\r\n  const [handleOpenModalOldDisease, setHandleOpenModalOldDisease] = useState(false); //F8\r\n\r\n  const handleF2Press = () => {\r\n    setHandleOpenModalExaminingSession(true);\r\n  }\r\n\r\n  const handleF4Press = () => {\r\n    setHandleResetField(true);\r\n  }\r\n\r\n  const handleF8Press = () => {\r\n    setHandleOpenModalOldDisease(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(loading === false && user.isLogin){\r\n      if(user.positionName !== 'Nursing'){\r\n        history.push('/404');\r\n      }\r\n    }\r\n  }, [loading, user])\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if(event.keyCode === 113){\r\n        event.preventDefault()\r\n        //nhấn F2 để đăng ký khám\r\n        handleF2Press();\r\n      }\r\n      else if(event.keyCode === 115){\r\n        event.preventDefault()\r\n        //nhấn F4 để reset các input field \r\n        handleF4Press();\r\n      }\r\n      else if(event.keyCode === 119){\r\n        event.preventDefault()\r\n        //nhấn F8 để tìm bệnh cũ\r\n        handleF8Press();\r\n      }\r\n      else{\r\n\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n              <Grid container spacing={0} sx={{marginLeft: 0}}>\r\n                <Grid item xs={5}>  \r\n                  <ListPatientsRegister \r\n                    completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                    component1Loading={component1Loading} setComponent1Loading={setComponent1Loading}\r\n                    dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                  />\r\n                </Grid>\r\n            \r\n                <Grid item xs={7} >\r\n                  {component1Loading ?\r\n                    <div style={{marginLeft: '18px'}}>\r\n                      <Skeleton variant='rectangular' width=\"100%\" height={590} />\r\n                    </div>\r\n                  :\r\n                    <BookMedical \r\n                      onF2Press={handleOpenModalExaminingSession} setOnF2Press={setHandleOpenModalExaminingSession}\r\n                      onF4Press={handleResetField} setOnF4Press={setHandleResetField}\r\n                      onF8Press={handleOpenModalOldDisease} setOnF8Press={setHandleOpenModalOldDisease}\r\n                      completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                      dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                    />\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n         {/* <SelectedDoctorExamining \r\n          openSelectedDoctorExaminingModal={openSelectedDoctorExaminingModal} setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n          currentDoctorExamining={currentDoctorExamining} setCurrentDoctorExamining={setCurrentDoctorExamining}\r\n         /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainMedicalRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//user context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getAppointmentsNextWeek, updateStateAppointment } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainAppointmentExamining() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chưa nhắc hẹn khám'});\r\n    const [listPantientAppointmentChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: 0 },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [listAppointment, setListAppointment] = useState();\r\n    \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n    const [listDataPatientsAppointmentPaginate, setListDataPatientsAppointmentPaginate] = useState([]);\r\n    const [listDataPatientsAppointmentState, setListDataPatientsAppointmentState] = useState();\r\n    const [listDataPatientsAppointmentSort, setListDataPatientsAppointmentSort] = useState([]);\r\n    \r\n    const [loadingComponent, setLoadingComponent] = useState(false);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [pageCount, setPageCount] = useState();\r\n\r\n    const [dataAppointment, setDataAppointment] = useState();\r\n\r\n    const handlePaginate = (data) => {\r\n        const itemsPerPage = 5;\r\n        if(data){\r\n            const calculatedPageCount = Math.ceil(data.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = data.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n        else{\r\n            const calculatedPageCount = Math.ceil(listDataPatientsAppointmentPaginate.length / itemsPerPage);\r\n            const startIndex = (page - 1) * itemsPerPage;\r\n            const newCurrentItems = listDataPatientsAppointmentPaginate.slice(startIndex, startIndex + itemsPerPage);\r\n          \r\n            setListDataPatientsAppointmentState(newCurrentItems);\r\n            setListDataPatientsAppointmentSort(newCurrentItems);\r\n    \r\n            setPageCount(calculatedPageCount);\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    }\r\n\r\n    const handleGetAppointmentsNextWeek = async () => {\r\n        setLoadingComponent(true);\r\n        const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n        setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n        const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n        const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n        const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n        const updateListPantientAppointmentChipState = [\r\n            { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n            { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n            { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n        ]\r\n\r\n        setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n        if(activeChip.chipOrder === 0){\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind)\r\n        }\r\n\r\n        else if(activeChip.chipOrder === 1){\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n            handlePaginate(_listAppointmentAcceptReExamining)\r\n        }\r\n\r\n        else{\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n            handlePaginate(_listAppointmentRejectReExamining)\r\n        }\r\n\r\n        setLoadingComponent(false);\r\n    }\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n            const _listAppointmentNotRemind = listAppointment.filter(item => item.stateAppointment === 0);\r\n\r\n            const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                const createNewDataAppointmentNotRemind = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentNotRemind\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentNotRemind);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind);\r\n            handlePaginate(_listAppointmentNotRemind);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const _listAppointmentAcceptReExamining = listAppointment.filter(item => item.stateAppointment === 1);\r\n\r\n            const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                const createNewDataAppointmentAcceptReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentAcceptReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentAcceptReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining);\r\n            handlePaginate(_listAppointmentAcceptReExamining);\r\n        }\r\n        else{\r\n            const _listAppointmentRejectReExamining = listAppointment.filter(item => item.stateAppointment === 2);\r\n\r\n            const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                const createNewDataAppointmentRejectReExamining = \r\n                    {\r\n                        medicalBookId: item.medicalBookId,\r\n                        appointmentDate: item.appointmentDate\r\n                    }\r\n                \r\n                return createNewDataAppointmentRejectReExamining\r\n            })\r\n\r\n            setDataAppointment(dataAppointmentRejectReExamining);\r\n            setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining);\r\n            handlePaginate(_listAppointmentRejectReExamining);\r\n        }\r\n    }\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsAppointmentSort(listDataPatientsAppointmentState);\r\n        }else{\r\n          setListDataPatientsAppointmentSort(searchPatients(listDataPatientsAppointmentState, takenValue));\r\n        }\r\n    }\r\n\r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, patientFullName, phoneMother, phoneFather } = patientObj;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || patientFullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const onChangeAppointmentDate = (medicalBookId, appointmentDate) => {\r\n        if(appointmentDate){\r\n            const takenValue = appointmentDate._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const today = new Date();\r\n                const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n                const convertAppointmentDateFindDataAppointment = new Date(findDataAppointment.appointmentDate)\r\n\r\n                if(today <= takenValue || takenValue >= convertAppointmentDateFindDataAppointment){\r\n                    findDataAppointment.appointmentDate = moment(takenValue).format('YYYY-MM-DD');\r\n                }\r\n            }, 100) \r\n        }\r\n        \r\n    }\r\n\r\n    const handleAcceptReExamining = async (medicalBookId) => {\r\n        setLoadingComponent(true);\r\n\r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 1);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            \r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoadingComponent(false);\r\n    }\r\n\r\n    const handleRejectReExamining = async (medicalBookId) => {\r\n        setLoadingComponent(true);\r\n        \r\n        const findDataAppointment = dataAppointment.find(item => item.medicalBookId === medicalBookId);\r\n        const responseUpdateStateAppointment = await updateStateAppointment(findDataAppointment, 2);\r\n        if(responseUpdateStateAppointment.status === 200){\r\n            const responseGetAppointmentsNextWeek = await getAppointmentsNextWeek();\r\n\r\n            if(searchPatientsQuery !== \"\"){\r\n                setSearchPatientsQuery(\"\");\r\n            }\r\n\r\n            setListAppointment(responseGetAppointmentsNextWeek);\r\n\r\n            const _listAppointmentNotRemind = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 0);\r\n            const  _listAppointmentAcceptReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 1);\r\n            const _listAppointmentRejectReExamining = responseGetAppointmentsNextWeek.filter(item => item.stateAppointment === 2);\r\n\r\n            const updateListPantientAppointmentChipState = [\r\n                { chipLabel: 'BN chưa nhắc hẹn khám', chipContent: _listAppointmentNotRemind.length },\r\n                { chipLabel: 'BN xác nhận hẹn khám', chipContent: _listAppointmentAcceptReExamining.length },\r\n                { chipLabel: 'BN từ chối hẹn khám', chipContent: _listAppointmentRejectReExamining.length }\r\n            ]\r\n\r\n            setListPantientChipState(updateListPantientAppointmentChipState);\r\n\r\n            if(activeChip.chipOrder === 0){\r\n                const dataAppointmentNotRemind = _listAppointmentNotRemind.map((item) => {\r\n                    const createNewDataAppointmentNotRemind = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentNotRemind\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentNotRemind);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentNotRemind)\r\n                handlePaginate(_listAppointmentNotRemind)\r\n            }\r\n\r\n            else if(activeChip.chipOrder === 1){\r\n                const dataAppointmentAcceptReExamining = _listAppointmentAcceptReExamining.map((item) => {\r\n                    const createNewDataAppointmentAcceptReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentAcceptReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentAcceptReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentAcceptReExamining)\r\n                handlePaginate(_listAppointmentAcceptReExamining)\r\n            }\r\n            else{\r\n                const dataAppointmentRejectReExamining = _listAppointmentRejectReExamining.map((item) => {\r\n                    const createNewDataAppointmentRejectReExamining = \r\n                        {\r\n                            medicalBookId: item.medicalBookId,\r\n                            appointmentDate: item.appointmentDate\r\n                        }\r\n                    \r\n                    return createNewDataAppointmentRejectReExamining\r\n                })\r\n    \r\n                setDataAppointment(dataAppointmentRejectReExamining);\r\n                setListDataPatientsAppointmentPaginate(_listAppointmentRejectReExamining)\r\n                handlePaginate(_listAppointmentRejectReExamining)\r\n            }\r\n\r\n            toast.success(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingSuccess'});\r\n        }\r\n        else{\r\n            toast.error(responseUpdateStateAppointment.data, {toastId: 'handleAcceptReExaminingError'});\r\n        }\r\n        setLoadingComponent(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetAppointmentsNextWeek();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n          if(user.positionName !== 'Nursing'){\r\n            history.push('/404');\r\n          }\r\n        }\r\n      }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        handlePaginate();\r\n    }, [page]);\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1, p: 0 }}>\r\n            <TableContainer component={Paper} sx={{height: loadingComponent ? '40rem' : 'auto', position: 'relative'}}>\r\n                {loadingComponent ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>        \r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Box>\r\n                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                {listPantientAppointmentChipState.map((pantientAppointmentChipStateItem, pantientAppointmentChipStateIndex) => (\r\n                                    <Badge badgeContent={pantientAppointmentChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientAppointmentChipStateIndex}`}> \r\n                                        <Chip label={pantientAppointmentChipStateItem.chipLabel} color={pantientAppointmentChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                            onClick={() => handleSelectedChip(pantientAppointmentChipStateIndex, pantientAppointmentChipStateItem.chipLabel)} />  \r\n                                    </Badge>\r\n                                ))}\r\n                            </Stack>\r\n\r\n                            <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.15rem', fontWeight: 'bolder'}}>Danh sách {activeChip.chipLabel} trong 6 ngày tới</Typography>\r\n\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', mb: 1}}>\r\n                                <TextField sx={{width: 500, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc Số điện thoại' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                        startAdornment: (\r\n                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                        ),\r\n                                        endAdornment: (\r\n                                            <InputAdornment position='end'>\r\n                                                {searchPatientsQuery !== '' ? \r\n                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsAppointmentSort(listDataPatientsAppointmentState)]}\r\n                                                    /> \r\n                                                : \r\n                                                    null\r\n                                                }\r\n                                            </InputAdornment>  \r\n                                        )\r\n                                    }}>\r\n                                </TextField>\r\n                            </Box>\r\n                        </Box>\r\n\r\n                        <Table stickyHeader >\r\n                            <TableHead>\r\n                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                    <TableCell align='left' >Mã bệnh nhân</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày sinh</TableCell>\r\n                                    {/* <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Giới tính</TableCell> */}\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Địa chỉ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Họ tên Cha/Mẹ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Số điện thoại</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám cũ</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kỳ khám tiếp theo</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày hẹn khám</TableCell>\r\n                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Nhấn</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {listDataPatientsAppointmentSort.map((dataPantientAppointmentItem, dataPantientAppointmentIndex) => (\r\n                                    <TableRow hover role=\"checkbox\" key={dataPantientAppointmentIndex} sx={{':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1) !important'}}}>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientId}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.patientFullName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{moment(dataPantientAppointmentItem.dateOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                        {/* <TableCell align='left' sx={{width: 'auto', fontSize: '0.95rem'}}>{dataPantientAppointmentItem.gender === true ? 'Nam' : 'Nữ'}</TableCell> */}\r\n                                        <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 240, fontSize: '0.9rem'}}>\r\n                                            <Tooltip title={<Typography variant='subtitle2'>{dataPantientAppointmentItem.fullAddress}</Typography>} >\r\n                                                <span>{dataPantientAppointmentItem.fullAddress}</span>\r\n                                            </Tooltip>\r\n                                        </TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.fullNameFather !== '' ? dataPantientAppointmentItem.fullNameFather : dataPantientAppointmentItem.fullNameMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.phoneFather !== '' ? dataPantientAppointmentItem.phoneFather : dataPantientAppointmentItem.phoneMother}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.examNameOld}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto', fontSize: '0.9rem'}}>{dataPantientAppointmentItem.nextExamName}</TableCell>\r\n                                        <TableCell align='left' sx={{width: 'auto'}}>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                                <DemoContainer components={['DatePicker']}> \r\n                                                    <Box sx={{width: 145}}>\r\n                                                        <div style={{width: '100%'}}>\r\n                                                            <DatePicker label=\"Ngày khám dự kiến\" disablePast minDate={moment()}\r\n                                                                format='DD/MM/YYYY' value={moment(dataPantientAppointmentItem.appointmentDate)}\r\n                                                                onChange={(value) => onChangeAppointmentDate(dataPantientAppointmentItem.medicalBookId, value)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Box> \r\n                                                </DemoContainer>\r\n                                            </LocalizationProvider>\r\n                                        </TableCell>                                                                                                \r\n                                        <TableCell align={dataPantientAppointmentItem.stateAppointment === 0 ? 'left' : 'center'} sx={{width: 'auto', fontSize: '0.9rem'}}>\r\n                                            {dataPantientAppointmentItem.stateAppointment === 0 ?\r\n                                                <>   \r\n                                                    <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {dataPantientAppointmentItem.stateAppointment === 1 ?\r\n                                                        <CancelIcon titleAccess='Từ chối hẹn khám' sx={{color: 'red', cursor: 'pointer'}} onClick={() => handleRejectReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    :\r\n                                                        <CheckIcon titleAccess='Đồng ý hẹn khám' sx={{color: 'green', cursor: 'pointer', mr: 0.5}} onClick={() => handleAcceptReExamining(dataPantientAppointmentItem.medicalBookId)}/>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </>\r\n                }\r\n            </TableContainer>\r\n\r\n            {listDataPatientsAppointmentSort.length !== 0 && loadingComponent === false ?\r\n                <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n                    <Pagination count={pageCount} page={page} onChange={handlePageChange} color=\"secondary\" />\r\n                </Box>\r\n            :\r\n                null\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainAppointmentExamining","import React, { forwardRef, useImperativeHandle, useState, useContext, useEffect, useRef  } from 'react';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { useReactToPrint } from \"react-to-print\";\r\n//moment\r\nimport moment from 'moment';\r\n//lodash\r\nimport _ from \"lodash\";\r\n\r\nlet resolvePromise; // Biến toàn cục lưu hàm `resolve`\r\n\r\nexport const waitForPrintComplete = () => {\r\n  // Hàm trả về một Promise\r\n  return new Promise((resolve) => {\r\n    resolvePromise = resolve; // Gán hàm resolve để có thể gọi sau khi in xong\r\n  });\r\n};\r\n\r\nfunction ConclusionPaper(props) {\r\n    const { user } = useContext(UserContext);\r\n\r\n    const contentRef = useRef(null);\r\n\r\n    const [dataPantientInfo, setDataPantientInfo] = useState();\r\n    const [dataConclusionPaper, setDataConclusionPaper] = useState();\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            '&.Mui-disabled': {\r\n                color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n            },\r\n            '&.Mui-checked.Mui-disabled': {\r\n                color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n            },\r\n        },\r\n    });\r\n    \r\n    const classes = useStyles();\r\n\r\n    const reactToPrintFn = useReactToPrint({ \r\n        contentRef: contentRef,\r\n        onAfterPrint: () => {\r\n            //console.log(\"Hoàn tất in\");\r\n            if (resolvePromise) {\r\n                resolvePromise(true); // Đánh dấu Promise đã hoàn thành\r\n            }\r\n        },\r\n    });\r\n\r\n    const handleEditDataConclusionToPrint = (data) => {\r\n        const updatedCategoryPres = data.categoryPres.map(category => {\r\n            const updatedCategoryContents = category.categoryContents.map(content => {\r\n                // Lọc các câu hỏi có `hasEdit: true`\r\n                const updatedQuestions = content.categoryContentQuestions.filter(question => question.hasEdit === true);\r\n                // Trả về object mới nếu có ít nhất 1 câu hỏi được giữ lại\r\n                return updatedQuestions.length > 0 ? { ...content, categoryContentQuestions: updatedQuestions } : null;\r\n            }).filter(content => content !== null); // Loại bỏ các object null\r\n\r\n            // Trả về object lớn nếu có ít nhất 1 `categoryContent` được giữ lại\r\n            return updatedCategoryContents.length > 0 ? { ...category, categoryContents: updatedCategoryContents } : null;\r\n        }).filter(category => category !== null); // Loại bỏ các object null\r\n\r\n        return { ...data, categoryPres: updatedCategoryPres };\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openConclusionPaper && props.dataConclusionPaper && props.dataPantientInfo){\r\n            if(props.predecessorToPrint){\r\n                const predecessorToPrint = _.cloneDeep(props.predecessorToPrint);\r\n                const updatePredecessorToPrint = handleEditDataConclusionToPrint(predecessorToPrint);\r\n\r\n                const newDataConclusionPaper = _.cloneDeep(props.dataConclusionPaper);\r\n                const newDataConclusionPaperCategories = updatePredecessorToPrint.categoryPres.concat(props.dataConclusionPaper.categories);\r\n\r\n                newDataConclusionPaper.categories = newDataConclusionPaperCategories;\r\n                setDataConclusionPaper(newDataConclusionPaper)\r\n            }\r\n            else{\r\n                setDataConclusionPaper(props.dataConclusionPaper);\r\n            }\r\n            \r\n            setDataPantientInfo(props.dataPantientInfo);\r\n            setTimeout(() => {\r\n                props.setOpenConclusionPaper(false);\r\n                reactToPrintFn();\r\n                setDataConclusionPaper();\r\n            }, 300)\r\n        }\r\n    }, [props.openConclusionPaper, props.dataConclusionPaper, props.dataPantientInfo, props.onComplete])\r\n\r\n    return (\r\n        <Dialog style={{display: 'none'}} fullWidth={true} maxWidth={'md'} open={props.openConclusionPaper} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n            {/* <DialogTitle sx={{padding: '10px 0px 10px 0px', fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Template In</DialogTitle> */}\r\n            {/* <IconButton onClick={() => handleCloseModalConclusionPaper()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                <CloseIcon fontSize='medium'/>\r\n            </IconButton> */}\r\n            <DialogContent sx={{padding: '0px 18px 0px 18px', mt: 4, mb: 2}} ref={contentRef}>\r\n                <Box>\r\n                    {dataConclusionPaper && dataPantientInfo ? \r\n                        <>\r\n                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', textTransform: 'uppercase'}}>Giấy kết luận</Typography>\r\n                            <div className='pantient-info' style={{marginTop: '20px', marginBottom: '100px'}}>\r\n                                <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}} sx={{display: 'flex'}}>\r\n                                    <Grid item xs={12}><Typography variant='subtitle2' sx={{ml: 1}}>Mã BN: <span style={{margin: 0, padding: 0, fontWeight: 'bolder'}}>{dataPantientInfo.patientCode}</span></Typography></Grid>\r\n\r\n                                    <Grid item xs={7}><Typography variant='subtitle2' sx={{ml: 1}}>Họ tên: <span style={{margin: 0, padding: 0, fontWeight: 'bolder'}}>{dataPantientInfo.patientsName}</span></Typography></Grid>\r\n                                    <Grid item xs={5}><Typography variant='subtitle2' sx={{ml: 1}}>Giới tính: <span style={{margin: 0, padding: 0}}>{dataPantientInfo.patientsGender === true ? 'Nam' : 'Nữ'}</span></Typography></Grid>\r\n\r\n                                    <Grid item xs={7}><Typography variant='subtitle2' sx={{ml: 1}}>Ngày sinh: <span style={{margin: 0, padding: 0, fontWeight: 'bolder'}}>{moment(dataPantientInfo.patientsDOB).format(\"DD/MM/YYYY\")}</span></Typography></Grid>\r\n                                    <Grid item xs={5}><Typography variant='subtitle2' sx={{ml: 1}}>Tuổi: <span style={{margin: 0, padding: 0, fontWeight: 'bolder'}}>{dataPantientInfo.patientsMonthsOld}</span></Typography></Grid>\r\n                                    \r\n                                    <Grid item xs={12}><Typography variant='subtitle2' sx={{ml: 1}}>Địa chỉ: <span style={{margin: 0, padding: 0}}>{dataPantientInfo.patientsAddress}</span></Typography></Grid>\r\n\r\n                                    <Grid item xs={7}><Typography variant='subtitle2' sx={{ml: 1}}>Cha mẹ/người giám hộ: <span style={{margin: 0, padding: 0, fontWeight: 'bolder'}}>{dataPantientInfo.parentName}</span></Typography></Grid>\r\n                                    <Grid item xs={5}><Typography variant='subtitle2' sx={{ml: 1}}>SĐT: <span style={{margin: 0, padding: 0}}>{dataPantientInfo.patientsPhone}</span></Typography></Grid>\r\n\r\n                                    <Grid item xs={4}><Typography variant='subtitle2' sx={{ml: 1}}>Chiều cao: <span style={{margin: 0, padding: 0}}>{dataPantientInfo.patientsHeight + ' cm'}</span></Typography></Grid>\r\n                                    <Grid item xs={4}><Typography variant='subtitle2' sx={{ml: 1}}>Cân nặng: <span style={{margin: 0, padding: 0}}>{dataPantientInfo.patientsWeight + ' kg'}</span></Typography></Grid>\r\n                                    <Grid item xs={4}><Typography variant='subtitle2' sx={{ml: 1}}>Vòng đầu <span style={{margin: 0, padding: 0}}>{dataPantientInfo.patientsHeadCircumference + ' cm'}</span></Typography></Grid>\r\n\r\n                                    <Grid item xs={12} style={{height: '70px'}}><Typography variant='subtitle2' sx={{ml: 1}}>Kết luận: <span style={{margin: 0, padding: 0, fontWeight: 'bolder'}}>{dataConclusionPaper.conclusion}</span></Typography></Grid>\r\n                                </Grid>\r\n                            </div>\r\n                       \r\n                            {/* <div className='category-examining' style={{marginBottom: '50px'}}>\r\n                                {dataConclusionPaper.categories.length !== 0 ?\r\n                                    dataConclusionPaper.categories.map((categoriesItem, categoriesIndex) => (\r\n                                        <div key={`categoriesItem ${categoriesIndex}`}>\r\n                                            <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                    <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                        \r\n                                                        {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                            <div key={`questionItem ${questionIndex}`}>\r\n                                                                <Grid container rowSpacing={0}>\r\n                                                                    {questionIndex === 0 ?\r\n                                                                        <>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                            </Grid> \r\n\r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                        <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                    </Grid>\r\n                                                                \r\n                                                                                    <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            : \r\n                                                                                <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                </Grid>\r\n                                                                            }   \r\n                                                                        </>\r\n                                                                    :\r\n                                                                        null\r\n                                                                    }\r\n\r\n                                                                    <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                            <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                        </Grid>\r\n                                                        \r\n                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                            <>\r\n                                                                                <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                    <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                        classes={{ root: classes.root }}\r\n                                                                                        sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                    />\r\n                                                                                </Grid>\r\n\r\n                                                                                <Grid item xs={5.5} >\r\n                                                                                    <div className='note-for-answer'>\r\n                                                                                        <div className='suggest-note'>                                                                          \r\n                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </Grid>\r\n                                                                            </>\r\n                                                                        :   \r\n                                                                            <>\r\n                                                                                <Grid item xs={8} >\r\n                                                                                    <div className='note-for-answer'>\r\n                                                                                        <div className='suggest-note'>                                                                          \r\n                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </Grid>\r\n                                                                            </>\r\n                                                                        }                                                                                                                                                                          \r\n                                                                    </Box>\r\n                                                                </Grid>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                ))}\r\n                                        </div>\r\n                                    ))\r\n                                :\r\n                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>                               \r\n                                }\r\n                            </div> */}\r\n\r\n                            <Typography variant='subtitle2' sx={{fontWeight: 'bolder', ml: 1, mt: 2}}>Ghi chú:</Typography>\r\n                            <div className='note' style={{display: 'flex', justifyContent: 'space-between', marginLeft: '8px'}}>\r\n                                <div className='appointment-date' style={{width: '270px'}}>\r\n                                    <Typography variant='subtitle2' sx={{textTransform: 'uppercase', fontWeight: 'bolder'}}>Tái khám: {moment(dataConclusionPaper.appointmentDate).format(\"DD/MM/YYYY\")}</Typography>\r\n\r\n                                    {dataConclusionPaper.isVaccination && (\r\n                                        \r\n                                        <div className='vaccination' style={{display: 'block'}}>\r\n                                            <Typography variant='subtitle2' sx={{textTransform: 'uppercase', fontWeight: 'bolder'}}>Tiêm ngừa: </Typography>\r\n                                            <Typography variant='subtitle2'>{dataConclusionPaper.vaccination}</Typography>\r\n                                            <Typography variant='subtitle2'>{dataConclusionPaper.nextVaccination}</Typography>\r\n                                        </div>\r\n                                            \r\n                                    )\r\n                                    }\r\n                                </div>\r\n                                <div className='exam-info'>\r\n                                    <Typography variant='subtitle2'>{`${moment().format('LT')}, Ngày ${moment().format('LL')}`}</Typography>\r\n                                    <Typography variant='subtitle2' sx={{textTransform: 'uppercase', textAlign: 'center'}}>Bác sĩ khám bệnh</Typography>\r\n                                    <div className='doctor-signature' style={{padding: '50px'}}></div>\r\n                                    <Typography variant='subtitle1' sx ={{fontWeight: 'bolder', textAlign: 'center'}}>{user.userFullName}</Typography>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    :\r\n                        null\r\n                    }\r\n                </Box>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ConclusionPaper","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport _ from 'lodash'\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\nimport ConclusionPaper, {waitForPrintComplete} from '../ManageConclusionPaper/ConclusionPaper';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DialogActions } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//other\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n//css\r\nimport './SCSS/CompleteExamining.scss';\r\n//api\r\nimport { createAddPredecessor, createAddMedicalBook, getAppointmentDate } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CompleteExamining(props) {\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState();\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [openConclusionPaper, setOpenConclusionPaper] = useState(false);\r\n\r\n    const typingRef = useRef(null);\r\n    const textareaRef = useRef(null);\r\n    const dateFieldRef = useRef(null);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleCloseModalCompleteExamining = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n          return;\r\n        }\r\n        else{\r\n            setMainDataExaminingForConclusion();\r\n            props.setOpenModalCompleteExamining(false);\r\n        }\r\n      }\r\n\r\n    const onChangeExaminingConclusion = (value) => {\r\n        typingRef.current = setTimeout(() => {\r\n            setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                prevMainDataExaminingForConclusion.conclusion = value;\r\n                return {...prevMainDataExaminingForConclusion}\r\n            })\r\n        }, 300)\r\n    }\r\n\r\n    const onChangeAppointmentDate = (value) => {\r\n        if(value){\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n            typingRef.current = setTimeout(() => {\r\n                const takenValue = value._d;\r\n                const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n                if(formattedDate !== 'Invalid date'){\r\n                    setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                        prevMainDataExaminingForConclusion.appointmentDate = formattedDate;\r\n                        return {...prevMainDataExaminingForConclusion}\r\n                    })\r\n                }\r\n            }, 200)   \r\n        }\r\n    }\r\n\r\n    const handleSetDataCompleteExamining = async () => {\r\n        setOpenAlertProcessing(true);\r\n\r\n        const editDataExaminingForConclusion = _.clone(props.dataExaminingForConclusion);\r\n        editDataExaminingForConclusion.categories = editDataExaminingForConclusion.categories.map(categoriesItem => ({\r\n            ...categoriesItem,\r\n            // Lọc các categoryContents để giữ lại những phần tử có categoryContentQuestions không rỗng\r\n            categoryContents: categoriesItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length > 0)\r\n\r\n            // Loại bỏ các categories nếu tất cả categoryContents của nó đều bị loại bỏ\r\n        })).filter(categoriesItem => categoriesItem.categoryContents.length > 0);\r\n\r\n        const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n        if(responseAppointmentDate.status === 200){\r\n            editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n            editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n            editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n\r\n            if(editDataExaminingForConclusion.isVaccination){\r\n                editDataExaminingForConclusion.nextVaccination = responseAppointmentDate.data.nextVaccination\r\n                editDataExaminingForConclusion.reminder = responseAppointmentDate.data.reminder\r\n                editDataExaminingForConclusion.vaccination = responseAppointmentDate.data.vaccination\r\n            }\r\n\r\n        }else{\r\n            toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n        }\r\n \r\n        setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n\r\n        setOpenAlertProcessing(false);\r\n        if(props.dataExaminingForConclusion.conclusion !== ''){\r\n            const length = textareaRef.current.value.length;\r\n            textareaRef.current.setSelectionRange(length, length);\r\n            textareaRef.current.focus();\r\n        }\r\n        else{\r\n            textareaRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const handleWaitingPrintComplete = async () => {\r\n        setOpenConclusionPaper(true);\r\n        await waitForPrintComplete(); // Đợi in xong\r\n    }\r\n\r\n    const handleAddMedicalBook = async () => {\r\n        setOpenAlertProcessing(true);\r\n        if(checkValidate()){\r\n            if(mainDataExaminingForConclusion.categories.some(categoriesItem => categoriesItem.isPredecessor === true)){\r\n                const categoryPres = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isPredecessor === true)\r\n                const dataPredecessor = { patientId: mainDataExaminingForConclusion.patientId, categoryPres: categoryPres }\r\n                await createAddPredecessor(dataPredecessor);\r\n            }\r\n            const categoriesHealthRecordExamining = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isHealthRecord === true)\r\n            mainDataExaminingForConclusion.categories = categoriesHealthRecordExamining\r\n            const responseAddMedicalBook = await createAddMedicalBook(mainDataExaminingForConclusion);\r\n            if(responseAddMedicalBook.status === 200){   \r\n                await handleWaitingPrintComplete();\r\n                toast.success(responseAddMedicalBook.data, {toastId: 'success3'});\r\n                props.handleCompleteExaminingForPantient();\r\n                setMainDataExaminingForConclusion();\r\n                props.setOpenModalCompleteExamining(false);\r\n            }\r\n            else{\r\n                toast.error(responseAddMedicalBook.data, {toastId: 'error1'});\r\n            }\r\n            props.handleCompleteExaminingForPantient();\r\n            setMainDataExaminingForConclusion();\r\n            props.setOpenModalCompleteExamining(false);\r\n        }\r\n        setOpenAlertProcessing(false);\r\n    }\r\n\r\n    const checkValidate = () => {\r\n        let isValid = true;\r\n        if(mainDataExaminingForConclusion.conclusion === null){\r\n            textareaRef.current.focus();\r\n            toast.error('Bạn chưa nhập kết luận khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === 'Invalid date'){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Ngày tái khám không hợp lệ', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === ''){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Bạn chưa chọn ngày tái khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalCompleteExamining){\r\n            handleSetDataCompleteExamining();\r\n        }\r\n    }, [props.openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalCompleteExamining} onClose={(event, reason) => handleCloseModalCompleteExamining(event, reason)} disableEscapeKeyDown={true}>\r\n                <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Tóm tắt quá trình khám</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalCompleteExamining()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='large'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                    <Box sx={{pl: 6, pr: 6}}>\r\n                        <List sx={{p: 0}}>\r\n                            <Box>\r\n                                {mainDataExaminingForConclusion ? \r\n                                    mainDataExaminingForConclusion.categories.length !== 0 ? \r\n                                        <div className='category-complete-examining'>\r\n                                            {mainDataExaminingForConclusion.categories.map((categoriesItem, categoriesIndex) => (\r\n                                                <div key={`categoriesItem ${categoriesIndex}`}>\r\n                                                    <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                        {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                            <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                                \r\n                                                                {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                    <div key={`questionItem ${questionIndex}`}>\r\n                                                                        <Grid container rowSpacing={0}>\r\n                                                                            {questionIndex === 0 ?\r\n                                                                                <>\r\n                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                    </Grid> \r\n\r\n                                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                        <>\r\n                                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                            </Grid>\r\n                                                                        \r\n                                                                                            <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                        </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    }   \r\n                                                                                </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n                                                                \r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                                classes={{ root: classes.root }}\r\n                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                            />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={5.5} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                :   \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={8} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                }                                                                                                                                                                          \r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    :\r\n                                        <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                :\r\n                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không phát hiện gì bất thường khi khám.</Typography>\r\n                                }\r\n                            </Box>\r\n                        </List>\r\n                    </Box>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{borderTop: '1px solid black'}}>\r\n                    {mainDataExaminingForConclusion ? \r\n                        <div style={{width: '100%', padding: '8px 50px 8px 50px'}}>\r\n                            <TextareaAutosize key={`pantientId ${mainDataExaminingForConclusion.patientId}`} placeholder='Kết luận của bác sĩ' style={{width: '100%', padding: '15px', fontSize: '17px'}} onChange={(e) => onChangeExaminingConclusion(e.target.value)} ref={textareaRef} defaultValue={mainDataExaminingForConclusion.conclusion} /> \r\n                            \r\n                                {mainDataExaminingForConclusion.isVaccination ? \r\n                                    <>\r\n                                        <Box sx={{mb: 0.4}}>\r\n                                            {mainDataExaminingForConclusion.vaccination === '' || mainDataExaminingForConclusion.vaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.vaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.nextVaccination === '' || mainDataExaminingForConclusion.nextVaccination === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.nextVaccination}`}</Typography>\r\n                                                </>\r\n                                            }\r\n\r\n                                            {mainDataExaminingForConclusion.reminder === '' ||  mainDataExaminingForConclusion.reminder === null?\r\n                                                null\r\n                                                :\r\n                                                <>\r\n                                                    <Typography variant='h6' sx={{color: 'deeppink', fontWeight: 'bolder', fontSize: '1.2rem'}}>{` ${mainDataExaminingForConclusion.reminder}`}</Typography>\r\n                                                </>\r\n                                            }\r\n                                        </Box>\r\n                                            \r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n\r\n                                {mainDataExaminingForConclusion.appointmentDate ? \r\n                                <>\r\n                                    <Box sx={{display: 'flex', justifyContent: 'center', mb: 2}}>\r\n                                        <Typography variant='h6' sx={{mt: 'auto', mb: 'auto', mr: 2}}>Kỳ khám tiếp theo: <span style={{fontWeight: 'bolder', color: '#ff1744'}}>{mainDataExaminingForConclusion.nextExamName}</span></Typography>\r\n                                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                            <DemoContainer components={['DatePicker']}>  \r\n                                                <DatePicker label=\"Ngày khám dự kiến\" disablePast\r\n                                                    format='DD/MM/YYYY' defaultValue={moment(mainDataExaminingForConclusion.appointmentDate)}\r\n                                                    onChange={(value) => onChangeAppointmentDate(value)}\r\n                                                    slotProps={{ \r\n                                                        textField: { inputRef: dateFieldRef, }\r\n                                                    }}\r\n                                                />\r\n                                            </DemoContainer>\r\n                                        </LocalizationProvider>\r\n                                    </Box>\r\n                                </>\r\n                                :\r\n                                    null\r\n                                }\r\n                        \r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <Stack spacing={1} direction=\"row\">\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' onClick={() => handleAddMedicalBook()}>Lưu</Button>\r\n                                    <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' color={'error'} onClick={() => handleCloseModalCompleteExamining()}>Đóng</Button>\r\n                                </Stack>\r\n                            </div>\r\n                        </div>   \r\n                    :\r\n                        null            \r\n                    }             \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n\r\n            <ConclusionPaper \r\n                openConclusionPaper={openConclusionPaper} setOpenConclusionPaper={setOpenConclusionPaper} \r\n                dataPantientInfo={props.dataPantientInfo} dataConclusionPaper={mainDataExaminingForConclusion}\r\n                predecessorToPrint={props.predecessorToPrint}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//scss\r\nimport './SCSS/PreviewLastExamining.scss'; \r\n//api\r\nimport { getMedicalBook } from '../../Service/MedicalService';\r\n//moment\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi'; \r\nmoment.locale('vi');\r\n\r\nfunction PreviewLastExamining(props) {\r\n    const previewDataExaminingDefault = {\r\n        categoryPres: [],\r\n        healthRecords: { examinationName: '', timeUpdateState: '', conclusion: '', medicakBook: [] },\r\n        nutritionals: [],\r\n        vaccinationBook: [] \r\n    }\r\n\r\n    const [previewDataExamining, setPreviewDataExamining] = useState(previewDataExaminingDefault);\r\n    // const [fullDataPredecessor, setFullDataPredecessor] = useState();\r\n    // const [fullDataHealthRecord, setFullDataHealthRecord] = useState();\r\n    \r\n    const [loadingMedicalBook, setLoadingMedicalBook] = useState(false);\r\n\r\n    const [openCollapsePredecessorItem, setOpenCollapsePredecessorItem] = useState([]);\r\n    const [openCollapseMedicakBookItem, setOpenCollapseMedicakBookItem] = useState([]);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpenPredecessorItem = (predecessorIndex) => {\r\n        setOpenCollapsePredecessorItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[predecessorIndex] = !newOpen[predecessorIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleOpenMedicakBookItem = (medicakBookIndex) => {\r\n        setOpenCollapseMedicakBookItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[medicakBookIndex] = !newOpen[medicakBookIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    // const handeOnChangePagePredecessor = (e, page, indexPredecessor) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].categoryContents = fullDataPredecessor[indexPredecessor].categoryContents[page - 1];\r\n    //     _previewDataExamining.categoryPres[indexPredecessor].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    // const handeOnChangePageHealthRecords = (e, page, indexMedicakbook) => {\r\n    //     const _previewDataExamining = {...previewDataExamining}\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].categoryContents = fullDataHealthRecord[indexMedicakbook].categoryContents[page - 1];\r\n    //     _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].currentContent = page\r\n    //     setPreviewDataExamining(_previewDataExamining)\r\n    // }\r\n\r\n    const handleEditPrevDataExamining = async () => {\r\n        setLoadingMedicalBook(true);\r\n        const responseMedicalBook = await getMedicalBook(props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0].medicalRegisterId);\r\n        if(props.prevDataExamining.newPredecessor){\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n             \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: [],\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n\r\n        else{\r\n            if(props.prevDataExamining.categoryPres.length > 1){\r\n                props.prevDataExamining.categoryPres = props.prevDataExamining.categoryPres.sort((a, b) => a.categoryOrder - b.categoryOrder);\r\n            }\r\n\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: responseMedicalBook.medicakBook.categories\r\n            }\r\n            \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: props.prevDataExamining.categoryPres,\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n        setLoadingMedicalBook(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.prevDataExamining){\r\n            handleEditPrevDataExamining();\r\n        }\r\n    }, [props.prevDataExamining])\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{height: '100%', position: 'relative'}}>\r\n                {loadingMedicalBook ? \r\n                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                        <CircularProgress />\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh gần nhất, hãy chờ một chút...</Typography>\r\n                    </Box>\r\n                :\r\n                    <>\r\n                        <div className='preview-last-examining-contents' >\r\n\r\n                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem'}}>\r\n                                Thông tin tóm tắt <span style={{color: 'red'}}>{previewDataExamining.healthRecords.examinationName}</span>\r\n                            </Typography>\r\n\r\n                            <List sx={{p: 0}}>\r\n                                {previewDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                    <div key={`predecessorItem ${predecessorIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenPredecessorItem(predecessorIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapsePredecessorItem[predecessorIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapsePredecessorItem[predecessorIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {predecessorItem.categoryContents.map((predecessorItemCategoryContentsItem, predecessorItemCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`predecessorItemCategoryContentsIndex ${predecessorItemCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: predecessorItemCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{predecessorItemCategoryContentsItem.categoryContentTitle}</Typography>\r\n                                                    \r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {predecessorItemCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{predecessorItemCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={6.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItemCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                                    \r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={6.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))} \r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                {previewDataExamining.healthRecords.medicakBook.map((medicakBookItems, medicakBookIndex) => (\r\n                                    <div key={`medicakBookItems ${medicakBookIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenMedicakBookItem(medicakBookIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseMedicakBookItem[medicakBookIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={medicakBookItems.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapseMedicakBookItem[medicakBookIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div>\r\n                                                {medicakBookItems.categoryContents.map((medicakBookCategoryContentsItem, medicakBookCategoryContentsIndex) => (\r\n                                                    <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', marginBottom: '6px' }} key={`medicakBookCategoryContentsIndex ${medicakBookCategoryContentsIndex}`}>\r\n                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: medicakBookCategoryContentsItem.categoryContentTitle ? 0 : 2 }}>{medicakBookCategoryContentsItem.categoryContentTitle}</Typography>\r\n\r\n                                                        <Box sx={{mb: 2}}>\r\n                                                            {medicakBookCategoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`questionItem ${questionIndex}`} >\r\n                                                                    <Grid container rowSpacing={0} >\r\n                                                                        {questionIndex === 0 ?\r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentName}</Typography>\r\n                                                                                </Grid> \r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{medicakBookCategoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                                    \r\n                                                                                        <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                : \r\n                                                                                    <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookCategoryContentsItem.categoryContentText}</Typography>\r\n                                                                                    </Grid>\r\n                                                                                }   \r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                            </Grid>\r\n                                                                                            \r\n                                                                            {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                <>\r\n                                                                                    <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                        <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                                    </Grid>\r\n\r\n                                                                                    <Grid item xs={5.5} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            :   \r\n                                                                                <>\r\n                                                                                    <Grid item xs={8} >\r\n                                                                                        <div className='note-for-answer'>\r\n                                                                                            <div className='suggest-note'>                                                                          \r\n                                                                                                <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </Grid>\r\n                                                                                </>\r\n                                                                            }  \r\n                                                                        </Box>\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))}\r\n                                                        </Box>\r\n                                                    </div>\r\n                                                ))}             \r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n                            </List>\r\n\r\n                            <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận: ${previewDataExamining.healthRecords.conclusion}`}</Typography>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='time-examining' style={{marginLeft: '16px', marginTop: '4px', width: '99%'}}>\r\n                            <Typography variant='subtitle1' sx={{color: '#009688', fontWeight: 'bolder', fontSize: '1.08rem'}}>{`${previewDataExamining.healthRecords.doctorFullName}, ${moment(previewDataExamining.healthRecords.timeUpdateState).format('LLLL')}`}</Typography>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Box>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default PreviewLastExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//lodash\r\nimport _, { cloneDeep, constant } from \"lodash\";\r\n//modal\r\nimport CompleteExamining from '../ManageCompleteExamining/CompleteExamining';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//components\r\nimport PreviewLastExamining from './PreviewLastExamining';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { GiWeightScale } from \"react-icons/gi\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport { TbRulerMeasure } from \"react-icons/tb\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport BeenhereIcon from '@mui/icons-material/Beenhere';\r\nimport VaccinesIcon from '@mui/icons-material/Vaccines';\r\nimport CachedIcon from '@mui/icons-material/Cached';\r\n//moment\r\nimport moment from 'moment';\r\n//scss\r\nimport './SCSS/DoctorExamining.scss';\r\n//real-time\r\nimport {startSignalRConnection, onReceiveMessage} from '../../Service/SignalService';\r\n//api\r\nimport { \r\n    createAddPredecessor,\r\n    getMedicalDetailPatient,\r\n    getRegistersByDateNow, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook,\r\n    updateMedicalState,\r\n    deleteMedicalBook\r\n} from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainDoctorExamining() {\r\n    const dataPantientsReadyExaminingDefault = {\r\n        stt: '',\r\n        id: '',\r\n        patientsId: '',\r\n        patientCode: '',\r\n        patientsName: '',\r\n        patientsDOB: '',\r\n        patientsMonthsOld: '',\r\n        patientsGender: '',\r\n        patientsHeight: '',\r\n        patientsWeight: '',\r\n        patientsHeadCircumference: '',\r\n        patientsPhone: '',\r\n        patientsAddress: '',\r\n        parentName: ''\r\n    }\r\n\r\n    const { user, loading, alertVisible, confirmAlert, resetAlert, isLogOutClick, isDialogChangePasswordOpen } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isFormDirty, setIsFormDirty] = useState(false);\r\n\r\n    //state thông tin bệnh nhân ban đầu \r\n    const [dataPantientsReadyExamining, setDataPantientsReadyExamining] = useState(dataPantientsReadyExaminingDefault);\r\n\r\n    //state các category gồm tiêu đề nội dung khám và câu hỏi khám ban đầu\r\n    const [mainDataExamining, setMainDataExamining] = useState([]);\r\n\r\n    //state lưu tạm data các kỳ khám \r\n    const [prevDataExamining, setPrevDataExamining] = useState();\r\n\r\n    //state đóng mở cây thư mục khám của sổ khám bệnh\r\n    const [openCollapseHealthRecords, setOpenCollapseHealthRecords] = useState(false);\r\n\r\n    //state đóng mở chi tiết nội dung của sổ khám bệnh\r\n    const [openCollapseHealthRecordsItem, setOpenCollapseHealthRecordsItem] = useState([]);\r\n\r\n    //state chọn danh mục khám ban đầu\r\n    const [categorySelectedExamining, setCategorySelectedExamining] = useState({});\r\n\r\n    //state chọn danh mục bao gồm nội dung bên trong ban đầu\r\n    const [contentCategorySelectedExamining, setContentCategorySelectedExamining] = useState([]);\r\n\r\n    //state lưu tạm nội dung chi tiết của sổ khám bệnh\r\n    const [healthRecordsContents, setHealthRecordsContents] = useState([]);\r\n    const [currentHealthRecordExamining, setCurrentHealthRecordExamining] = useState();\r\n\r\n    //tiền căn show ở thông tin bệnh nhân\r\n    const [previewPredecessor, setPreviewPredecessor] = useState();\r\n    const [oldPreviewPredecessor, setOldPreviewPredecessor] = useState();\r\n    //tiền căn mới đã được lưu lại, dùng để hiển thị trên giấy kết luận\r\n    const [predecessorToPrint, setPredecessorToPrint] = useState();\r\n\r\n    //state các câu hỏi được bác sĩ khám tích hoặc gõ vào\r\n    const [dataExaminingForConclusion , setDataExaminingForConclusion ] = useState({});\r\n\r\n    //state lưu tạm các data tiền căn của getUpdatePredecessor (bao gồm những data tiền căn đã chọn và chưa chọn)\r\n    const [oldDataPredecessor, setOldDataPredecessor] = useState();\r\n\r\n    //dùng khi tái khám hoặc mở khám lại cho bệnh nhân có tiền căn đã đụng\r\n    const [newDataPredecessor, setNewDataPredecessor] = useState();\r\n\r\n    //state lưu data tiền căn cũ (những data tiền căn đã chọn)  \r\n    const [prevDataPredecessor, setPrevDataPredecessor] = useState();\r\n\r\n    //state quản lý modal kết thúc khám\r\n    const [openModalCompleteExamining, setOpenModalCompleteExamining] = useState(false);\r\n\r\n    const [loadingPrevDataExamining, setLoadingPrevDataExamining] = useState(false);\r\n    const [loadingPatient, setLoadingPatient] = useState(true);\r\n    const [loadingInfoPatient, setLoadingInfoPatient] = useState(true);\r\n    const [loadingCategoryExamining, setLoadingCategoryExamining] = useState(false);\r\n    const [loadingContentsExamining, setLoadingContentsExamining] = useState(false);\r\n\r\n    const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n  \r\n    const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n    const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n    const [listPantientChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n            { chipLabel: 'BN đã khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n          const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n            setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n            setListDataPatientsRegisterState(listPantientRegisterDone);\r\n        }\r\n    };\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n        }else{\r\n          setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n        }\r\n    }\r\n    \r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n        const { patientCode, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n            return patientCode.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const handleCompleteExaminingForPantient = () => {\r\n        setLoadingPatient(true);\r\n        toast.success(`Đã kết thúc khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        setPreviewPredecessor();\r\n        setPredecessorToPrint();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleCancelExamining = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingCategoryExamining(true);\r\n        setLoadingContentsExamining(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, [dataPantientsReadyExamining.editExamining === true ? 2 : 0 || dataPantientsReadyExamining.backRegister === true ? 3 : 0]);\r\n        if(response.status === 200){\r\n            toast.success(`Đã hủy khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success2'});    \r\n            setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n            setMainDataExamining([]);\r\n            setOpenCollapseHealthRecords(false);\r\n            setOpenCollapseHealthRecordsItem([]);\r\n            setCategorySelectedExamining({});\r\n            setContentCategorySelectedExamining([]);\r\n            setHealthRecordsContents([]);\r\n            setCurrentHealthRecordExamining();\r\n            setDataExaminingForConclusion({});\r\n            setPrevDataPredecessor();\r\n            setCurrentHealthRecordExamining();\r\n            setOldDataPredecessor();\r\n            setPreviewPredecessor();\r\n            setPredecessorToPrint();\r\n            handleGetRegistersByDateNow();\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    const handleDeleteExamining = async () => {\r\n        const confirmLeave = window.confirm(\r\n            'Chức năng này sẽ xóa tất cả dữ liệu của kỳ khám hiện tại và đặt bệnh nhân về trạng thái chưa khám. Bạn có muốn xóa không?'\r\n        );\r\n        if (confirmLeave) {\r\n            setLoadingPatient(true);\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const responseDeleteMedicalBook = await deleteMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n            if(responseDeleteMedicalBook.status === 200){\r\n                toast.success(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingSuccess'});\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    await updateMedicalState(dataPantientsReadyExamining.id, 3);\r\n                }\r\n                setPrevDataExamining();\r\n                if(previewPredecessor && previewPredecessor.length !== 0){\r\n                    setPreviewPredecessor();\r\n                }\r\n                setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n                setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n                handleGetRegistersByDateNow();\r\n            }\r\n            else{\r\n                toast.error(responseDeleteMedicalBook.data, {toastId: 'handleDeleteExaminingError'});\r\n            }\r\n            setOpenAlertProcessingBackdrop(false);\r\n        } else {\r\n            return false; // Ngăn điều hướng\r\n        }\r\n    }\r\n\r\n    const handleStartExaminingButtonClick = () => {\r\n        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n            handleBeginExaminingForPantient();\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 1){\r\n            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n        }\r\n        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n            handleBeginEditExaminingForPantient();\r\n        }\r\n    }\r\n\r\n    const handleCompleteExaminingButtonClick = () => {\r\n        setOpenAlertProcessingBackdrop(true)\r\n        if(dataPantientsReadyExamining.status === 1){\r\n            setTimeout(() => {\r\n                setOpenAlertProcessingBackdrop(false)\r\n                setOpenModalCompleteExamining(true);\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    //hàm này dùng khi user đang khám mà bị ngáo lỡ nhấn f5\r\n    const handleReloadUIWhenExamining = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        const reDataPatientsRegisterSort = JSON.parse(sessionStorage.dataPatientsRegisterSort)\r\n        const reDataPantientsReadyExamining = JSON.parse(sessionStorage.dataPantientsReadyExamining);\r\n        const reMainDataExamining = JSON.parse(sessionStorage.mainDataExamining);\r\n        const reDataExaminingForConclusion = JSON.parse(sessionStorage.dataExaminingForConclusion);\r\n\r\n        setListDataPatientsRegisterSort(reDataPatientsRegisterSort);\r\n        \r\n        reDataPantientsReadyExamining.isContinueExam = true;\r\n        \r\n        setDataPantientsReadyExamining(_.cloneDeep(reDataPantientsReadyExamining));\r\n        setMainDataExamining(_.cloneDeep(reMainDataExamining));\r\n        setDataExaminingForConclusion(_.cloneDeep(reDataExaminingForConclusion));\r\n\r\n        if(sessionStorage.currentHealthRecordExamining){\r\n            const reCurrentHealthRecordExamining = JSON.parse(sessionStorage.currentHealthRecordExamining);\r\n            setHealthRecordsContents(_.cloneDeep(reCurrentHealthRecordExamining));\r\n            setCurrentHealthRecordExamining(_.cloneDeep(reCurrentHealthRecordExamining));\r\n        }\r\n\r\n        if(sessionStorage.prevDataPredecessor){\r\n            const rePrevDataPredecessor = JSON.parse(sessionStorage.prevDataPredecessor);\r\n            setPrevDataPredecessor(_.cloneDeep(rePrevDataPredecessor));\r\n        }\r\n\r\n        if(sessionStorage.oldDataPredecessor){\r\n            const reOldDataPredecessor = JSON.parse(sessionStorage.oldDataPredecessor);\r\n            setOldDataPredecessor(_.cloneDeep(reOldDataPredecessor));\r\n        }\r\n        \r\n        setNewDataPredecessor({\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            categoryPres: []\r\n        })\r\n        \r\n        sessionStorage.clear();\r\n\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //lấy danh sách đăng ký khám trong ngày\r\n    const handleGetRegistersByDateNow = async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 1 * 1000));\r\n        const response = await getRegistersByDateNow();\r\n        if(response !== 400){\r\n            let responseListPantient = response.list;\r\n            const findPantientIsExam = responseListPantient.find(item => item.state === 1 && item.userIdDoctor === user.userId);\r\n            if(findPantientIsExam){\r\n                const responseDataExamining = await getMedicalDetailPatient(findPantientIsExam.id);\r\n                if(responseDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n                    await updateMedicalState(findPantientIsExam.id, responseDataExamining.healthRecords.length === 1 ? 0 : 3);    \r\n                    const indexPantient = responseListPantient.findIndex(item => item.id === findPantientIsExam.id)\r\n                    responseListPantient[indexPantient].state = responseDataExamining.healthRecords.length === 1 ? 0 : 3\r\n                }\r\n                else{\r\n                    await updateMedicalState(findPantientIsExam.id, 2);  \r\n                    const indexPantient = responseListPantient.findIndex(item => item.id === findPantientIsExam.id)\r\n                    responseListPantient[indexPantient].state = 2        \r\n                }\r\n            }\r\n\r\n            const findListPantientNotExam = responseListPantient.filter(item => item.state !== 1)\r\n\r\n            setListDataPatientsRegister(findListPantientNotExam);\r\n\r\n            const listPantientRegisterWaiting = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state !== 2) //chờ khám và đang khám\r\n            const listPantientRegisterDone = findListPantientNotExam.filter(patientsRegisterItem => patientsRegisterItem.state === 2 && patientsRegisterItem.userIdDoctor === user.userId) //đã khám\r\n \r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const updatedList = [\r\n                { chipLabel: 'BN chờ khám', chipContent: listPantientRegisterWaiting.length },\r\n                { chipLabel: 'BN đã khám', chipContent: listPantientRegisterDone.length }\r\n            ]\r\n            setListPantientChipState(updatedList);\r\n        }\r\n\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n    }\r\n\r\n    const handleReloadGetRegistersByDateNow = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setCurrentHealthRecordExamining();\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        setPreviewPredecessor();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleAppyPantientData = async (dataPantientItem) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingPrevDataExamining(true);\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            setPreviewPredecessor();\r\n        }\r\n        await handleGetMedicalDetailPatient(dataPantientItem.id);\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.stt = dataPantientItem.order;\r\n        _dataPantientsReadyExamining.id = dataPantientItem.id;\r\n        _dataPantientsReadyExamining.status = 0;\r\n        _dataPantientsReadyExamining.patientsId = dataPantientItem.patient.patientId;\r\n        _dataPantientsReadyExamining.patientCode = dataPantientItem.patient.patientCode;\r\n        _dataPantientsReadyExamining.patientsName = dataPantientItem.patient.fullName;\r\n        _dataPantientsReadyExamining.patientsDOB = dataPantientItem.patient.dayOfBirth;\r\n        _dataPantientsReadyExamining.patientsMonthsOld = dataPantientItem.patient.monthsOfAge;\r\n        _dataPantientsReadyExamining.patientsGender = dataPantientItem.patient.gender;\r\n        _dataPantientsReadyExamining.patientsHeight = dataPantientItem.height;\r\n        _dataPantientsReadyExamining.patientsWeight = dataPantientItem.weight;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.parentName = dataPantientItem.patient.fullNameMother ? dataPantientItem.patient.fullNameMother : dataPantientItem.patient.fullNameFather;\r\n        _dataPantientsReadyExamining.patientsPhone = dataPantientItem.patient.phoneMother ? dataPantientItem.patient.phoneMother : dataPantientItem.patient.phoneFather;\r\n        _dataPantientsReadyExamining.patientsAddress = dataPantientItem.patient.fullAddress;\r\n        _dataPantientsReadyExamining.vaccination = dataPantientItem.vaccination === true ? true : false;\r\n        _dataPantientsReadyExamining.editExamining = dataPantientItem.state === 2 ? true : false;\r\n        _dataPantientsReadyExamining.backRegister = dataPantientItem.state === 3 ? true : false;\r\n        _dataPantientsReadyExamining.isContinueExam = false;\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n        setLoadingInfoPatient(false);\r\n        setLoadingPrevDataExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //nhấn chọn bệnh nhân để load vào ô thông tin bn\r\n    const handleSelectPantientExamining = async (dataPantientItem) => {\r\n        if(dataPantientItem.state === 0 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName || dataPantientItem.state === 3 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId === '' || dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 0){\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n            else{\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n        }\r\n        \r\n        else if(dataPantientItem.state === 2 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 1){\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n            else{\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    //bắt đầu khám bệnh cho bệnh nhân\r\n    const handleBeginExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            if(prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n\r\n                if(dataPantientsReadyExamining.backRegister){\r\n                    setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                    //backup prevDataPredecessor để khi cần dùng\r\n                    setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres))\r\n                    setOldPreviewPredecessor(_.cloneDeep(previewPredecessor));\r\n                }\r\n\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleSetMainDataExamining();\r\n                toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n            }\r\n            else{\r\n                const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n                const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n                _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n                setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n                const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n                setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n                await handleGetCategoryReExamining();\r\n            }\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error(response.data, {toastId: 'error1'});\r\n        }\r\n        setLoadingPatient(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu khám cho bệnh nhân khám mới\r\n    const handleSetMainDataExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        prevDataExamining.healthRecords.forEach((healthRecordsItem) => {\r\n            if(healthRecordsItem.medicalBookId === null){\r\n                healthRecordsItem.state = 1\r\n            }\r\n        })\r\n        \r\n        //tái khám và có tiền căn đã đụng\r\n        if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === false){\r\n            const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //tái khám và có tiền căn chưa đụng\r\n        else if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === true){\r\n            const responseGetUpdateMedicalBook = await getMedicalBook(prevDataExamining.healthRecords[0].medicalRegisterId);\r\n\r\n            prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBook.medicakBook.categories\r\n\r\n            const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n                categoryName: category.categoryName,\r\n                isHealthRecord: true,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                  ...content,\r\n                  categoryContentQuestions: []\r\n                })) \r\n            }))\r\n    \r\n            //demo truớc data kết luận\r\n            const demoDataExaminingForConclusion = {\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: prevDataExamining.healthRecords[0].medicalRegisterId,\r\n                conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n                categories: updateHealthRecordsCategoriesForConclusion\r\n            }\r\n    \r\n            setHealthRecordsContents({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n                categoryPatients: prevDataExamining.healthRecords[0].categories\r\n            })\r\n\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n\r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //khám mới hoàn toàn\r\n        else{\r\n            const editDataCategoryPresForConclusion = prevDataExamining.categoryPres.map((predecessorItem) => {\r\n                const mainCategoryContentsExamining = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentOrder: categoryContentsItem.categoryContentOrder,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n    \r\n                const mainCategoryExamining = {\r\n                    categoryName: predecessorItem.categoryName,\r\n                    isPredecessor: true,\r\n                    categoryOrder: predecessorItem.categoryOrder,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n    \r\n                return mainCategoryExamining\r\n            })\r\n    \r\n            const editDataHealthRecordsForConclusion = prevDataExamining.healthRecords.find((healthRecordsItem) => healthRecordsItem.patientId === dataPantientsReadyExamining.patientsId)\r\n    \r\n            setDataExaminingForConclusion({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                isVaccination: prevDataExamining.vaccination,\r\n                medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n                conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n                categories: editDataCategoryPresForConclusion,\r\n            });\r\n    \r\n            prevDataExamining.categoryPres.forEach((categoryPresItem, categoryPresIndex) => {\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.map((categoryContentsItem) => {\r\n                    return {\r\n                        ...categoryContentsItem,\r\n                        categoryPresOrder: categoryPresIndex\r\n                    }\r\n                })\r\n                return {\r\n                    ...categoryPresItem,\r\n                }\r\n            })\r\n            \r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //bắt đầu sửa dữ liệu khám bệnh\r\n    const handleBeginEditExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _listDataPatientsRegister = [...listDataPatientsRegister];\r\n            const findIndexPatient = _listDataPatientsRegister.findIndex(item => item.id === dataPantientsReadyExamining.id);\r\n            _listDataPatientsRegister[findIndexPatient].state = 1;\r\n\r\n            setListDataPatientsRegister(_listDataPatientsRegister);\r\n\r\n            const listPantientRegisterWaiting = _listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n\r\n            setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n            setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            await handleGetCategoryReExamining();\r\n            setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n            setLoadingPatient(false);\r\n        }\r\n    }\r\n\r\n    //lấy dữ liệu cây thư mục khám lại\r\n    const handleGetCategoryReExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        const responseGetUpdateMedicalBook = await getUpdateMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n\r\n        if(responseGetUpdateMedicalBook.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n\r\n            if(prevDataExamining.newPredecessor === false){\r\n                setPrevDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                //backup prevDataPredecessor để khi cần dùng\r\n                setOldDataPredecessor(_.cloneDeep(prevDataExamining.categoryPres));\r\n                setOldPreviewPredecessor(_.cloneDeep(previewPredecessor));\r\n            }\r\n            \r\n            await handleSetMainDataReExamining(responseGetUpdateMedicalBook.data);\r\n            toast.success(`Đang mở khám lại cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        }\r\n        else if(responseGetUpdateMedicalBook.status === 400){\r\n            toast.error(responseGetUpdateMedicalBook.data, {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu cây thư mục khám của chức năng mở khám lại\r\n    const handleSetMainDataReExamining = async (responseGetUpdateMedicalBookData) => {\r\n        prevDataExamining.healthRecords[0].state = 1\r\n        prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBookData.categories\r\n\r\n        const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n            categoryName: category.categoryName,\r\n            isHealthRecord: true,\r\n            categoryContents: category.categoryContents.map(content => ({\r\n              ...content,\r\n              categoryContentQuestions: []\r\n            })) \r\n        }))\r\n\r\n        //demo truớc data kết luận\r\n        const demoDataExaminingForConclusion = {\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            isVaccination: prevDataExamining.vaccination,\r\n            medicalRegisterId: dataPantientsReadyExamining.id !== prevDataExamining.healthRecords[0].medicalRegisterId ? dataPantientsReadyExamining.id : prevDataExamining.healthRecords[0].medicalRegisterId,\r\n            conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n            categories: updateHealthRecordsCategoriesForConclusion\r\n        }\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        //sửa categories của conclusion phần sổ khám bệnh\r\n        let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.healthRecords[0].categories);\r\n\r\n        updateCategoriesForConclusion = updateCategoriesForConclusion.map(category => {\r\n            category.categoryContents = category.categoryContents.map(content => {\r\n                const questions = content.categoryContentQuestions;\r\n    \r\n                // Check if all questions have both categoryContentAnswer and categoryContentNote as null\r\n                const allNull = questions.every(q => q.categoryContentAnswer === null && q.categoryContentNote === null);\r\n                    \r\n                if (allNull) {\r\n                  // Set categoryContentQuestions to an empty array\r\n                  content.categoryContentQuestions = [];                    \r\n                } else {\r\n                  // Filter out questions with both categoryContentAnswer and categoryContentNote as null\r\n                  content.categoryContentQuestions = questions.filter(q => q.categoryContentAnswer !== null || q.categoryContentNote !== null);\r\n                }\r\n                    \r\n                return content;\r\n            });\r\n                  \r\n            category.isHealthRecord = true\r\n            return category;\r\n        })\r\n\r\n        demoDataExaminingForConclusion.categories = updateCategoriesForConclusion\r\n\r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        //tiền căn đợt trước đã đụng (newPredecessor = false)\r\n        if(responseGetUpdatePredecessor.status === 200)\r\n        {   \r\n            const editPrevDataExaminingCategoryPres = responseGetUpdatePredecessor.data.map(responseGetUpdatePredecessorItem => {\r\n                const matchingPrevDataExamining = prevDataExamining.categoryPres.find(prevDataExaminingCategoryPresItem => prevDataExaminingCategoryPresItem.categoryOrder === responseGetUpdatePredecessorItem.categoryOrder);\r\n\r\n                return {\r\n                    ...responseGetUpdatePredecessorItem,\r\n                    isLock: true,\r\n                    categoryContents: responseGetUpdatePredecessorItem.categoryContents.filter(content2 => {\r\n                        return matchingPrevDataExamining && matchingPrevDataExamining.categoryContents.some(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                    }).map(content2 => {\r\n                        const matchingContent1 = matchingPrevDataExamining.categoryContents.find(content1 => content1.categoryContentOrder === content2.categoryContentOrder);\r\n                        return {\r\n                            ...content2,\r\n                            isNullCategoryPres: matchingContent1 ? false : true,\r\n                            isLock: true,\r\n                            categoryContentQuestions: matchingContent1 ? matchingContent1.categoryContentQuestions : []\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n\r\n            prevDataExamining.categoryPres = editPrevDataExaminingCategoryPres\r\n\r\n            setNewDataPredecessor({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                categoryPres: []\r\n            })\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        \r\n        //tiền căn đợt trước chưa đụng (newPredecessor = true) \r\n        else{\r\n            //thêm tiền căn vào categories của conclusion\r\n            let updateCategoriesForConclusion = _.cloneDeep(prevDataExamining.categoryPres);\r\n\r\n            updateCategoriesForConclusion = updateCategoriesForConclusion.map((item) => {\r\n                const editCategoryContents = item.categoryContents.map((itemCategoryContents) => {\r\n                    return {\r\n                        categoryContentCheck: itemCategoryContents.categoryContentCheck,\r\n                        categoryContentName: itemCategoryContents.categoryContentName,\r\n                        categoryContentOrder: itemCategoryContents.categoryContentOrder,\r\n                        categoryContentText: itemCategoryContents.categoryContentText,\r\n                        categoryContentTitle: itemCategoryContents.categoryContentTitle,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                })\r\n\r\n                return {\r\n                    categoryName: item.categoryName,\r\n                    categoryOrder: item.categoryOrder,\r\n                    categoryContents: editCategoryContents,\r\n                    isPredecessor: true\r\n                }\r\n            })\r\n        \r\n            const newCategoriesDemoDataExaminingForConclusion = updateCategoriesForConclusion.concat(demoDataExaminingForConclusion.categories);\r\n            demoDataExaminingForConclusion.categories = newCategoriesDemoDataExaminingForConclusion\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        setDataExaminingForConclusion(_.cloneDeep(demoDataExaminingForConclusion));\r\n    }\r\n\r\n    //sửa dữ liệu tiền căn cho mở khám lại hoặc tái khám\r\n    const handleEditDataPredecessor = async (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        \r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n        const findUpdatePredecessor = responseGetUpdatePredecessor.data.find(responseGetUpdatePredecessorItem => responseGetUpdatePredecessorItem.categoryOrder === categoryOrder);\r\n\r\n        mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n            if(categoryPresItem.categoryOrder === findUpdatePredecessor.categoryOrder){\r\n                categoryPresItem.categoryContents = findUpdatePredecessor.categoryContents\r\n                categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                    categoryContentsItem.isLock = false\r\n                })\r\n                categoryPresItem.isLock = false\r\n            }\r\n        })\r\n\r\n        const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n        \r\n        if(!newDataPredecessor.categoryPres.some(categoryPresItem => categoryPresItem.categoryName === categoryName)){\r\n            newDataPredecessor.categoryPres = prevDataPredecessor\r\n        }\r\n\r\n        handleSelectCategoryClick(selectCategoryReExamining);\r\n\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //huỷ không sửa dữ liệu tiền căn nữa\r\n    const handleCancelEditDataPredecessor = (categoryName, categoryOrder) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        setTimeout(() => {\r\n            const findPrevDataPredecessorByCategoryName = oldDataPredecessor.find(prevDataPredecessorItem => prevDataPredecessorItem.categoryOrder === categoryOrder);\r\n\r\n            if(findPrevDataPredecessorByCategoryName){\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        categoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                        categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                            categoryContentsItem.isLock = true\r\n                        })\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                newDataPredecessor.categoryPres.forEach((newDataPredecessorCategoryPresItem) => {\r\n                    if(newDataPredecessorCategoryPresItem.categoryOrder === findPrevDataPredecessorByCategoryName.categoryOrder){\r\n                        newDataPredecessorCategoryPresItem.categoryContents = findPrevDataPredecessorByCategoryName.categoryContents\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                    if(categoryPresItem.categoryOrder === categoryOrder){\r\n                        categoryPresItem.categoryContents = [];\r\n                        categoryPresItem.isLock = true\r\n                    }\r\n                })\r\n\r\n                const _newDataPredecessor = {...newDataPredecessor};\r\n                const removeCategoryPredecessor = _newDataPredecessor.categoryPres.filter(categoryPresItem => categoryPresItem.categoryOrder !== categoryOrder);\r\n                newDataPredecessor.categoryPres = removeCategoryPredecessor\r\n            }\r\n\r\n            setPrevDataPredecessor(_.cloneDeep(oldDataPredecessor));\r\n\r\n            const selectCategoryReExamining = mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === categoryOrder);\r\n            handleSelectCategoryClick(selectCategoryReExamining)\r\n\r\n            const findOldDataPredecessorByCategoryOrder = oldPreviewPredecessor.filter(item => item.categoryOrder === categoryOrder);\r\n            const findPreviewPredecessorNotByCategoryOrder = previewPredecessor.filter(item => item.categoryOrder !== categoryOrder);\r\n\r\n            const newPreviewPredecessor = findOldDataPredecessorByCategoryOrder.concat(findPreviewPredecessorNotByCategoryOrder);\r\n            setPreviewPredecessor(newPreviewPredecessor);\r\n   \r\n            setOpenAlertProcessingBackdrop(false);\r\n        }, 300)       \r\n    }\r\n\r\n    //tạo data tiền căn để lưu lại khi tái khám hoặc mở khám lại\r\n    //câu trả lời dạng check chọn true false\r\n    const handleAnswerCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].hasEdit = true;\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].hasEdit = true;\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex])\r\n        }\r\n    }\r\n\r\n    //câu trả lời dạng check chọn true false, sửa lại note\r\n    const handleNoteCheckQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n        const isEditNote = true;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].hasEdit = true;\r\n\r\n            createSelectedQuestionsPredecessorForReExamOrBackExam(categoryContentsIndex, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], takenValue, isEditNote)\r\n        }, 0)\r\n    }\r\n\r\n    //câu trả lời dạng giá trị, sửa lại note\r\n    const handleNoteValueQuestionPredecessorForReExamOrBackExam = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].hasEdit = true;\r\n\r\n            createSelectedQuestionsValuePredecessorForReExamOrBackExam(\r\n                categoryContentsIndex,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder, \r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex], \r\n                takenValue\r\n            )\r\n        }, 0)\r\n    }\r\n\r\n    const createSelectedQuestionsValuePredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue) => {\r\n        const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n        if(findNewDataPredecessorCategoryOrder){\r\n            // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n            const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n            if(findNewDataPredecessorCategoryContents){\r\n                // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue !== '');\r\n                const questionIndexRemove = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && takenValue === '');\r\n\r\n                if(questionIndex !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value khác rỗng => gán note cũ bằng note mới\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n                    if(!findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].hasEdit){\r\n                        findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].hasEdit = true;\r\n                    }\r\n                }\r\n\r\n                else if(questionIndexRemove !== -1){\r\n                    // nếu tìm thấy câu hỏi cũ, và taken value bằng rỗng => bỏ note đó\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexRemove, 1);\r\n                }\r\n\r\n                else{\r\n                    //nếu không tìm thấy, đẩy note mới vào\r\n                    findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                }\r\n            }\r\n\r\n            else{\r\n                // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                const newDataPredecessorCategoryContents = {\r\n                    categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                    categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                    categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                    categoryContentQuestions: [categoryContentQuestion],\r\n                    categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                    categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                }\r\n                findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n            }\r\n        }\r\n\r\n        else{\r\n            // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n            const newDataPredecessorCategoryContents = {\r\n                categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                categoryContentQuestions: [categoryContentQuestion],\r\n                categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n            }\r\n\r\n            const newDataPredecessorCategoryPres = {\r\n                categoryOrder: categorySelectedExamining.categoryOrder,\r\n                categoryName: categorySelectedExamining.categoryName,\r\n                newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                categoryContents: [newDataPredecessorCategoryContents]\r\n            }\r\n\r\n            newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n        }   \r\n        \r\n        createPreviewDataPredecessor(categoryContentQuestion);\r\n    }\r\n\r\n    const createSelectedQuestionsPredecessorForReExamOrBackExam = (categoryContentsIndex, categoryContentOrder, categoryContentQuestion, takenValue, isEditNote) => {\r\n        if(isEditNote){\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                            if(!findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].hasEdit){\r\n                                findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].hasEdit = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là true, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){       \r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng rỗng\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = null\r\n                            if(!findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].hasEdit){\r\n                                findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].hasEdit = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n         \r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note khác rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length !== 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n                            if(!findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].hasEdit){\r\n                                findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].hasEdit = true;\r\n                            }\r\n                        }\r\n                        else{\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents);\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check answer đang là null, chỉ sửa note bằng rỗng\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check' && takenValue.length === 0){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                        if(questionIndex !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndex, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        else{\r\n            //câu hỏi là dạng check câu trả lời là true\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote !== '');\r\n                        if(questionIndex !== -1){\r\n                            // thay thế ghi chú bằng ghi chú mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n                            if(!findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].hasEdit){\r\n                                findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].hasEdit = true;\r\n                            }\r\n                        }\r\n                        else{\r\n                            // Nếu tìm thấy categoryContentOrder, thêm câu hỏi mới\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.push(categoryContentQuestion);\r\n                        }       \r\n                    }\r\n                    else{\r\n                        // Nếu không tìm thấy categoryContentOrder, thêm content mới\r\n                        const newDataPredecessorCategoryContents = {\r\n                            categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                            categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                            categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                            categoryContentQuestions: [categoryContentQuestion],\r\n                            categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                            categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                        }\r\n                        findNewDataPredecessorCategoryOrder.categoryContents.push(newDataPredecessorCategoryContents)\r\n                    }\r\n                }\r\n                else{\r\n                    // Nếu không tìm thấy categoryOrder, thêm mới categoryOrder\r\n                    const newDataPredecessorCategoryContents = {\r\n                        categoryContentCheck: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentCheck,\r\n                        categoryContentName: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentName,\r\n                        categoryContentOrder: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentOrder,\r\n                        categoryContentQuestions: [categoryContentQuestion],\r\n                        categoryContentText: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentText,\r\n                        categoryContentTitle: categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle\r\n                    }\r\n\r\n                    const newDataPredecessorCategoryPres = {\r\n                        categoryOrder: categorySelectedExamining.categoryOrder,\r\n                        categoryName: categorySelectedExamining.categoryName,\r\n                        newCategoryPre: categorySelectedExamining.newCategoryPre,\r\n                        categoryContents: [newDataPredecessorCategoryContents]\r\n                    }\r\n\r\n                    newDataPredecessor.categoryPres.push(newDataPredecessorCategoryPres)\r\n                }\r\n            }\r\n\r\n            //câu hỏi là dạng check câu trả lời là false\r\n            if(categoryContentQuestion.categoryContentAnswer === null && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const findNewDataPredecessorCategoryOrder = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPresItem => newDataPredecessorCategoryPresItem.categoryOrder === categorySelectedExamining.categoryOrder);\r\n\r\n                if(findNewDataPredecessorCategoryOrder){\r\n                    // Nếu tìm thấy categoryOrder, tìm kiếm tiếp categoryContentOrder\r\n                    const findNewDataPredecessorCategoryContents = findNewDataPredecessorCategoryOrder.categoryContents.find(newDataPredecessorCategoryContentsItem => newDataPredecessorCategoryContentsItem.categoryContentOrder === categoryContentOrder)\r\n\r\n                    if(findNewDataPredecessorCategoryContents){\r\n                        // Nếu tìm thấy categoryContentOrder, kiểm tra xem có categoryContentQuestionOrder trùng không\r\n                        const questionIndexNoteDontExit = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder && newDataPredecessorcategoryContentQuestionsItem.categoryContentNote === null);\r\n                        if(questionIndexNoteDontExit !== -1){\r\n                            // Loại bỏ câu hỏi cũ nếu tìm thấy\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions.splice(questionIndexNoteDontExit, 1);\r\n                        }\r\n                        else{\r\n                            const questionIndex = findNewDataPredecessorCategoryContents.categoryContentQuestions.findIndex(newDataPredecessorcategoryContentQuestionsItem => newDataPredecessorcategoryContentQuestionsItem.categoryContentQuestionOrder === categoryContentQuestion.categoryContentQuestionOrder);\r\n                            findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].categoryContentAnswer = null\r\n                            if(!findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].hasEdit){\r\n                                findNewDataPredecessorCategoryContents.categoryContentQuestions[questionIndex].hasEdit = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n    }\r\n\r\n    //lưu dữ liệu tiền căn khi sửa xong\r\n    const handleEditDataPredecessorForSaving = (categoryOrder) => {\r\n        setPredecessorToPrint(_.cloneDeep(newDataPredecessor));\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setTimeout(() => {\r\n            const findNewDataPredecessor = newDataPredecessor.categoryPres.find(newDataPredecessorCategoryPres => newDataPredecessorCategoryPres.categoryOrder === categoryOrder)\r\n\r\n            const findOldDataPredecessorCategoryOrder = oldDataPredecessor.find(oldDataPredecessorItem => oldDataPredecessorItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n\r\n            if(findOldDataPredecessorCategoryOrder){\r\n                // Nếu tìm thấy categoryOrder, duyệt qua categoryContents của findNewDataPredecessor\r\n                findNewDataPredecessor.categoryContents.forEach(findNewDataPredecessorCategoryContentsItem => {\r\n\r\n                    let content = findOldDataPredecessorCategoryOrder.categoryContents.find(findOldDataPredecessorCategoryContentsItem => findOldDataPredecessorCategoryContentsItem.categoryContentOrder === findNewDataPredecessorCategoryContentsItem.categoryContentOrder);\r\n\r\n                    if(content){\r\n                        // Loại bỏ các categoryContentQuestions trong content nếu không tồn tại trong findNewDataPredecessorCategoryContentsItem\r\n                        content.categoryContentQuestions = content.categoryContentQuestions.filter(q =>\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.some(newQ => newQ.categoryContentQuestionOrder === q.categoryContentQuestionOrder)\r\n                        );\r\n\r\n                        // Nếu tìm thấy categoryContentOrder, duyệt qua categoryContentQuestions\r\n                        if(findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.length !== 0){\r\n                            findNewDataPredecessorCategoryContentsItem.categoryContentQuestions.forEach(findNewDataPredecessorQuestionItem => {\r\n                                if(findNewDataPredecessorQuestionItem.categoryContentAnswer === null && findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'check'){\r\n                                    // Nếu categoryContentAnswer là false và categoryContentNote là null, loại bỏ question đó\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else if(findNewDataPredecessorQuestionItem.categoryContentNote === null && findNewDataPredecessorQuestionItem.categoryContentQuestionType === 'string'){\r\n                                    content.categoryContentQuestions = content.categoryContentQuestions.filter(q => q.categoryContentQuestionOrder !== findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n                                }\r\n\r\n                                else{\r\n                                    const questionIndex = content.categoryContentQuestions.findIndex(q => q.categoryContentQuestionOrder === findNewDataPredecessorQuestionItem.categoryContentQuestionOrder);\r\n\r\n                                    if (questionIndex !== -1) {\r\n                                        // Thay thế question nếu trùng khớp\r\n                                        content.categoryContentQuestions[questionIndex] = findNewDataPredecessorQuestionItem;\r\n                                    }\r\n\r\n                                    else {\r\n                                        // Thêm question mới nếu không trùng khớp\r\n                                        content.categoryContentQuestions.push(findNewDataPredecessorQuestionItem);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        }else{\r\n                            findOldDataPredecessorCategoryOrder.categoryContents = findOldDataPredecessorCategoryOrder.categoryContents.filter(contentCategoryContentsItem => contentCategoryContentsItem.categoryContentOrder !== findNewDataPredecessorCategoryContentsItem.categoryContentOrder)\r\n                        }\r\n                        \r\n                    }else{\r\n                        findOldDataPredecessorCategoryOrder.categoryContents.push(findNewDataPredecessorCategoryContentsItem);\r\n                    }\r\n\r\n                })\r\n            }else{\r\n                // Thêm toàn bộ object2 nếu không tìm thấy findNewDataPredecessor\r\n                oldDataPredecessor.push(findNewDataPredecessor)\r\n            }\r\n\r\n            oldDataPredecessor.forEach((oldDataPredecessorItem) => {\r\n                oldDataPredecessorItem.categoryContents = oldDataPredecessorItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length !== 0)\r\n            }) \r\n\r\n            const removeOldDataPredecessorCategoryPres = oldDataPredecessor.findIndex(item => item.categoryContents.length === 0);\r\n            if(removeOldDataPredecessorCategoryPres !== -1){\r\n                oldDataPredecessor.splice(removeOldDataPredecessorCategoryPres, 1);\r\n            }\r\n\r\n            const saveNewDataPredecessor = {\r\n                patientId: newDataPredecessor.patientId,\r\n                categoryPres: oldDataPredecessor\r\n            }\r\n\r\n            handleSaveNewDataPredecessor(saveNewDataPredecessor, findNewDataPredecessor)            \r\n        }, 500)\r\n    }\r\n\r\n    const handleSaveNewDataPredecessor = async (saveNewDataPredecessor, findNewDataPredecessor) => {\r\n        const responseCreateAddPredecessor = await createAddPredecessor(saveNewDataPredecessor);\r\n        if(responseCreateAddPredecessor.status === 200){\r\n\r\n            const _mainDataExamining = {...mainDataExamining};\r\n\r\n            _mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                if(categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder){\r\n                    categoryPresItem.categoryContents = findNewDataPredecessor.categoryContents\r\n                    categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                        categoryContentsItem.isLock = true\r\n                    })\r\n                    if(findNewDataPredecessor.categoryContents.length === 0){\r\n                        categoryPresItem.newCategoryPre = true\r\n                    }else{\r\n                        categoryPresItem.newCategoryPre = false\r\n                    }\r\n                    categoryPresItem.isLock = true\r\n                }\r\n\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.filter(item => item.categoryContentQuestions.length !== 0);\r\n            })\r\n\r\n            setMainDataExamining(_mainDataExamining);\r\n\r\n            const selectCategoryReExamining = _mainDataExamining.categoryPres.find(categoryPresItem => categoryPresItem.categoryOrder === findNewDataPredecessor.categoryOrder);\r\n\r\n            setPreviewPredecessor(previewPredecessor);\r\n            setOldPreviewPredecessor(previewPredecessor);\r\n            \r\n            toast.success('Đã cập nhật lại tiền căn', {toastId: 'handleSaveNewDataPredecessorSuccess'});\r\n            \r\n            handleSelectCategoryClick(selectCategoryReExamining);\r\n        }\r\n        else{\r\n            toast.error(responseCreateAddPredecessor.data, {toastId: 'handleSaveNewDataPredecessorError'});\r\n        }\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //tìm danh mục khám gồm tiền căn, sổ sức khỏe, dinh dưỡng...\r\n    const handleGetMedicalDetailPatient = async (id) => {\r\n        const responseDataExamining = await getMedicalDetailPatient(id);\r\n        setPrevDataExamining(responseDataExamining);\r\n\r\n        const findNewCategoryPreIsFalse = responseDataExamining.categoryPres.filter(item => item.newCategoryPre === false);\r\n        const previewDataPredecessor = findNewCategoryPreIsFalse.flatMap(item => \r\n            item.categoryContents.flatMap(content => \r\n                content.categoryContentQuestions.map(question => ({\r\n                    categoryContentQuestionOrder: question.categoryContentQuestionOrder,\r\n                    categoryContentQuestionName: question.categoryContentQuestionName,\r\n                    categoryContentQuestionType: question.categoryContentQuestionType,\r\n                    categoryContentAnswer: question.categoryContentAnswer,\r\n                    categoryContentNote: question.categoryContentNote,\r\n                    categoryContentDefauls: question.categoryContentDefauls,\r\n                    categoryOrder: item.categoryOrder // Thêm categoryOrder từ cấp trên\r\n                }))\r\n            )\r\n        )\r\n        setPreviewPredecessor(previewDataPredecessor);\r\n    }\r\n\r\n    //chọn mục lục để khám\r\n    const handleSelectCategoryClick = async (categoryIncludeCotent) => {\r\n        if(openCollapseHealthRecords === true){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }\r\n\r\n        if(contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length !== 0){\r\n            setContentCategorySelectedExamining([]);\r\n        }\r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                ...categoryIncludeCotent,\r\n                //contentQuantity: categoryIncludeCotent.categoryContents.length\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining([]);\r\n    }\r\n\r\n    //chọn cây thư mục khám sổ sức khỏe\r\n    const handleSelectHealthRecords = (healthRecords) => {\r\n        if(openCollapseHealthRecords === false){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }        \r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                categoryName: 'Sổ sức khỏe',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(\r\n            {\r\n                healthRecordsContentsType: 'tree',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n    }\r\n\r\n    //chọn chỉ định một sổ khám bệnh (tìm chi tiết một sổ khám bệnh)\r\n    const handleSelectHealthRecordsItem = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingContentsExamining(true);\r\n\r\n        //dùng cho tái khám (có tiền căn đã đụng), mở khám lại\r\n        if(currentHealthRecordExamining){\r\n            if(healthRecordsContents.healthRecordsName !== examinationName){\r\n                if(healthRecordsState === 2){\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n                else if(healthRecordsState === 1 && dataPantientsReadyExamining.editExamining || healthRecordsState === 1 && dataPantientsReadyExamining.backRegister){\r\n                    setHealthRecordsContents({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    })\r\n\r\n                    setCurrentHealthRecordExamining({\r\n                        healthRecordsName: examinationName,\r\n                        newMedicalBook: true,\r\n                        conclusion: mainDataExamining.healthRecords[0].conclusion,\r\n                        categoryPatients: mainDataExamining.healthRecords[0].categories\r\n                    });\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && dataPantientsReadyExamining.isContinueExam){\r\n                    setHealthRecordsContents(currentHealthRecordExamining);\r\n                    setCurrentHealthRecordExamining(currentHealthRecordExamining);\r\n                }\r\n                else{\r\n                    await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n                }\r\n            }\r\n        }\r\n        //dùng cho tái khám (tiền căn chưa đụng), khám mới hoàn toàn\r\n        else{\r\n            await findHealthRecord(medicalRegisterId, examinationName, healthRecordsState);\r\n        }\r\n\r\n        setLoadingContentsExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const findHealthRecord = async (medicalRegisterId, examinationName, healthRecordsState) => {\r\n        const responseMedicalBook = await getMedicalBook(medicalRegisterId);\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: examinationName,\r\n            newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n            conclusion: responseMedicalBook.medicakBook.conclusion,\r\n            categoryPatients: responseMedicalBook.medicakBook.categories\r\n        });\r\n\r\n        if(healthRecordsState === 1 && mainDataExamining.healthRecords.length === 1 && mainDataExamining.healthRecords[0].medicalBookId === null){\r\n            const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n                \r\n                const mainCategoryExamining = {\r\n                    categoryName: categoriesItem.categoryName,\r\n                    isHealthRecord: true,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n\r\n                return mainCategoryExamining\r\n            })\r\n\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    //chọn loại mục khám của một sổ khám bệnh\r\n    const handleOpenHealthRecordsItem = (categoryPatientsIndex) => {\r\n        setOpenCollapseHealthRecordsItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryPatientsIndex] = !newOpen[categoryPatientsIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleAnswerCheckQuestion = (categoryContentsIndex, questionIndex, answer) => {\r\n        //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng check\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }\r\n        else{\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }   \r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const handleNoteCheckQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            )\r\n        }, 0)\r\n    }\r\n\r\n    const handleAnswerValueQuestion = (categoryContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            const isPredecessor = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                isPredecessor,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[categoryContentsIndex].categoryContentTitle,\r\n            )\r\n        }, 0)\r\n    }\r\n\r\n    const handleAnswerCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else if(answer === true){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = false;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n\r\n        else{\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle\r\n            );\r\n        }\r\n    }\r\n    \r\n    //trả lời câu hỏi của mục sổ khám bệnh\r\n    const handleNoteCheckQuestionHealthRecords = (categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            const isEditNote = true;\r\n            const isPredecessor = false;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                isPredecessor,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[categoryPatientsContentsIndex].categoryContentTitle,\r\n                isEditNote\r\n            );\r\n        }, 0)\r\n    }\r\n\r\n    const createSelectedQuestionsExaminingForConclusion = (categoryName, isPredecessor, categoryContentQuestion, questionOrder, categoryContentTitle, isEditNote) => {\r\n        if(categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            if(isEditNote){\r\n                if(categoryContentQuestion.categoryContentNote !== ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n\r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n\r\n                else if(categoryContentQuestion.categoryContentNote === ''){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentAnswer === null || categoryContentQuestionsItem.categoryContentAnswer === false){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n            }\r\n            else{\r\n                //question dạng check nhưng answer là true\r\n                if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                        // Duyệt qua từng categoriesItem trong categories\r\n                        _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                            if(categoriesItem.categoryName === categoryName){\r\n                                // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                                categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                    if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                        // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                        if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                            // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                            const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                                question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                            );\r\n                            \r\n                                            if (existingQuestion) {\r\n                                                // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                            } else {\r\n                                                // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                            }\r\n    \r\n                                        } else {\r\n                                        // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                            categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                        }\r\n                                    }\r\n                                });        \r\n                            }\r\n                        });\r\n    \r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n                }\r\n    \r\n                //question dạng check nhưng answer là false\r\n                else if(categoryContentQuestion.categoryContentAnswer === false && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                    const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                    _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                        if(categoriesItem.categoryName === categoryName){\r\n                            categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                                if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                    categoryContentsItem.categoryContentQuestions.forEach(categoryContentQuestionsItem => {\r\n                                        if(categoryContentQuestionsItem.categoryContentNote === null || categoryContentQuestionsItem.categoryContentNote === ''){\r\n                                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionOrder !== categoryContentQuestion.categoryContentQuestionOrder                                )\r\n                                        }\r\n                                    })                 \r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                    setDataExaminingForConclusion(_dataExaminingForConclusion)\r\n                }\r\n            }\r\n        }\r\n\r\n        else{\r\n            //question dạng giá trị nhưng khác rỗng\r\n            if(categoryContentQuestion.categoryContentNote !== '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                // Duyệt qua từng categoriesItem trong categories\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                                if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                    // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                    const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                        question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                    );\r\n                    \r\n                                    if (existingQuestion) {\r\n                                        // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                        existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                    } else {\r\n                                        // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                        categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                    }\r\n\r\n                                } else {\r\n                                // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                    categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                }\r\n                            }\r\n                        });        \r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n            //question dạng giá trị nhưng là rỗng\r\n            else if(categoryContentQuestion.categoryContentNote === '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                            if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                                categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n        }\r\n\r\n        if(isPredecessor === true){\r\n            createPreviewDataPredecessor(categoryContentQuestion, isEditNote);\r\n        }\r\n            \r\n    }\r\n\r\n    const createPreviewDataPredecessor = (categoryContentQuestion, isEditNote) => {\r\n        if(previewPredecessor && previewPredecessor.length !== 0){\r\n            let _previewPredecessor = [...previewPredecessor];\r\n\r\n            const findQuestion = _previewPredecessor.find(item => item.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n            if(findQuestion){\r\n                if(findQuestion.categoryContentQuestionType === 'string'){\r\n                    if(categoryContentQuestion.categoryContentNote === ''){\r\n                        _previewPredecessor = previewPredecessor.filter(item => item.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName);\r\n                    }\r\n                    else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                        const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                        if(existingQuestion){\r\n                            existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                        }\r\n                        else{\r\n                            categoryContentQuestion.categoryOrder = categorySelectedExamining.categoryOrder\r\n                            _previewPredecessor.push(categoryContentQuestion);\r\n                        }\r\n                    }\r\n                }\r\n                else if(findQuestion.categoryContentQuestionType === 'check'){\r\n                    if(isEditNote){\r\n                        if(categoryContentQuestion.categoryContentNote === ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName && question.categoryContentAnswer === true);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                if(categoryContentQuestion.categoryContentAnswer === null || categoryContentQuestion.categoryContentAnswer === false){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentNote !== ''){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                            }\r\n                            else{\r\n                                categoryContentQuestion.categoryOrder = categorySelectedExamining.categoryOrder\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }                       \r\n                    }\r\n\r\n                    else{\r\n                        if(categoryContentQuestion.categoryContentAnswer === false || categoryContentQuestion.categoryContentAnswer === null){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion){\r\n                                if(existingQuestion.categoryContentNote === '' || existingQuestion.categoryContentNote === null){\r\n                                    _previewPredecessor = _previewPredecessor.filter(question => question.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                                }\r\n                                else if(existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                    existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                                }               \r\n                            }\r\n                        }\r\n\r\n                        else if(categoryContentQuestion.categoryContentAnswer === true){\r\n                            const existingQuestion = previewPredecessor.find(question => question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName);\r\n                            if(existingQuestion || existingQuestion.categoryContentNote !== '' || existingQuestion.categoryContentNote !== null){\r\n                                existingQuestion.categoryContentAnswer = categoryContentQuestion.categoryContentAnswer;\r\n                            }\r\n                            else{\r\n                                categoryContentQuestion.categoryOrder = categorySelectedExamining.categoryOrder\r\n                                _previewPredecessor.push(categoryContentQuestion);\r\n                            }\r\n                        }        \r\n                    }\r\n                }\r\n            }\r\n\r\n            else{\r\n                categoryContentQuestion.categoryOrder = categorySelectedExamining.categoryOrder\r\n                _previewPredecessor.push(categoryContentQuestion);\r\n            }\r\n            setPreviewPredecessor(_previewPredecessor)\r\n        }\r\n\r\n        else{\r\n            setPreviewPredecessor([categoryContentQuestion])\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        // Đăng ký sự kiện nhận thông báo bn đăng ký khám khi component được mount\r\n        const handleReceiveMessage = (medicalRegisterMessage) => {\r\n            if(medicalRegisterMessage === true && dataPantientsReadyExamining.id === ''){\r\n                setLoadingPatient(true);\r\n                handleGetRegistersByDateNow();\r\n            }\r\n        };\r\n\r\n        startSignalRConnection(localStorage.getItem('jwt', handleReceiveMessage))\r\n\r\n        onReceiveMessage(handleReceiveMessage);\r\n\r\n        return () => {\r\n            // Dừng lắng nghe sự kiện nếu cần khi component Chat unmount\r\n        };\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(dataPantientsReadyExamining.status === 1 && alertVisible){\r\n                const userConfirmed = window.confirm(`Bạn đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, có chắc là muốn đăng xuất không?`);\r\n                if(userConfirmed){\r\n                    sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                    sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                    sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n\r\n                    if(currentHealthRecordExamining){\r\n                        sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                    }\r\n\r\n                    if(prevDataPredecessor){\r\n                        sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                    }\r\n\r\n                    if(oldDataPredecessor){\r\n                        sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                    }\r\n                    confirmAlert();\r\n                }\r\n                else{\r\n                    resetAlert();\r\n                }\r\n        }\r\n\r\n        else if(dataPantientsReadyExamining.status){\r\n            setIsFormDirty(true)\r\n\r\n            const handleBeforeUnload = (e) => {\r\n                const confirmationMessage = 'Bạn có chắc chắn muốn rời khỏi trang này?';\r\n                e.returnValue = confirmationMessage; // Hiển thị thông báo cảnh báo\r\n                return confirmationMessage;\r\n            };\r\n\r\n            const unblock = history.block((location, action) => {\r\n                if (isFormDirty) {\r\n                    const confirmLeave = window.confirm(\r\n                        'Bạn có chắc chắn muốn rời khỏi trang này? Những thay đổi sẽ không được lưu....'\r\n                    );\r\n                    if (confirmLeave) {\r\n                        const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                        sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                        sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                        sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                        sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                        if(currentHealthRecordExamining){\r\n                            sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                        }\r\n    \r\n                        if(prevDataPredecessor){\r\n                            sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                        }\r\n    \r\n                        if(oldDataPredecessor){\r\n                            sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                        }\r\n\r\n                        unblock(); // Hủy chặn để điều hướng\r\n                        history.push(location.pathname); // Điều hướng đến trang mới\r\n                        \r\n                    } else {\r\n                        return false; // Ngăn điều hướng\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n    \r\n            const handleUnload = () => {                \r\n                const _dataPatientsRegisterSort = listDataPatientsRegisterSort.filter(item => item.state === 1)\r\n\r\n                sessionStorage.setItem('dataPatientsRegisterSort', JSON.stringify(_dataPatientsRegisterSort));\r\n                \r\n                sessionStorage.setItem('dataPantientsReadyExamining', JSON.stringify(dataPantientsReadyExamining));\r\n                sessionStorage.setItem('dataExaminingForConclusion', JSON.stringify(dataExaminingForConclusion));\r\n                sessionStorage.setItem('mainDataExamining', JSON.stringify(mainDataExamining))\r\n    \r\n                if(currentHealthRecordExamining){\r\n                    sessionStorage.setItem('currentHealthRecordExamining', JSON.stringify(currentHealthRecordExamining))\r\n                }\r\n    \r\n                if(prevDataPredecessor){\r\n                    sessionStorage.setItem('prevDataPredecessor', JSON.stringify(prevDataPredecessor))\r\n                }\r\n    \r\n                if(oldDataPredecessor){\r\n                    sessionStorage.setItem('oldDataPredecessor', JSON.stringify(oldDataPredecessor))\r\n                }\r\n            };\r\n            \r\n            window.addEventListener('beforeunload', handleBeforeUnload);\r\n            window.addEventListener('unload', handleUnload);\r\n            \r\n            return () => {\r\n                window.removeEventListener('beforeunload', handleBeforeUnload);\r\n                unblock();\r\n                window.removeEventListener('unload', handleUnload);                \r\n            };\r\n        }\r\n\r\n        else if(alertVisible){\r\n            confirmAlert();\r\n        }\r\n    }, [dataPantientsReadyExamining, mainDataExamining, currentHealthRecordExamining, dataExaminingForConclusion, alertVisible, confirmAlert, resetAlert, isLogOutClick, history, isFormDirty])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Doctor'){\r\n                history.push('/404');\r\n            }\r\n            else{\r\n                if(sessionStorage.dataPantientsReadyExamining){\r\n                    handleReloadUIWhenExamining();\r\n                }\r\n                else{\r\n                    handleGetRegistersByDateNow();\r\n                }\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(isDialogChangePasswordOpen === false){\r\n            const handleKeyDown = (event) => {\r\n                if(event.keyCode === 112){\r\n                    event.preventDefault();\r\n                }\r\n\r\n                if(dataPantientsReadyExamining.patientsId !== '' && openAlertProcessingBackdrop === false && openModalCompleteExamining === false && event.keyCode !== 116){\r\n                    if(event.keyCode === 112 && dataPantientsReadyExamining.status === 1){\r\n                        event.preventDefault();\r\n                        handleCancelExamining();\r\n                    }\r\n\r\n                    else if(event.keyCode === 113 && prevDataExamining){\r\n                        if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n                            handleBeginExaminingForPantient();\r\n                        }\r\n                        else if(dataPantientsReadyExamining.status === 1){\r\n                            alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n                        }\r\n                        else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n                            handleBeginEditExaminingForPantient();\r\n                        }\r\n                    }\r\n\r\n                    else if(event.keyCode === 115){\r\n                    setOpenAlertProcessingBackdrop(true)\r\n                        if(dataPantientsReadyExamining.status === 1){\r\n                            setTimeout(() => {\r\n                                setOpenAlertProcessingBackdrop(false)\r\n                                setOpenModalCompleteExamining(true);\r\n                            }, 1000)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            document.addEventListener('keydown', handleKeyDown);\r\n\r\n            return () => {\r\n                document.removeEventListener('keydown', handleKeyDown);\r\n            };\r\n        }\r\n        \r\n    }, [dataPantientsReadyExamining, openModalCompleteExamining, openAlertProcessingBackdrop, openModalCompleteExamining, isDialogChangePasswordOpen])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 2.5}}>\r\n                <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                    <Grid container spacing={2} sx={{pl: 0.6, pr: 0.6}}>\r\n\r\n                        <Grid item xs={5}>\r\n                            {/* <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{`${moment().format('dddd')}, ${moment().format('LL')}`}</Typography> */}\r\n                            <TableContainer component={Paper} sx={{ height: '330px', boxShadow: 5, borderRadius: '10px' }}>\r\n                                {loadingPatient ?\r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                                            <CircularProgress />\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                                        </Box>        \r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Box>\r\n                                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                                                    <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                                                        <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                                        onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                                                    </Badge>\r\n                                                ))}\r\n                                            </Stack>\r\n\r\n                                            <Box sx={{mt: 0.2, position: 'relative', display: 'flex', justifyContent: 'center', flexDirection: 'column'}}>\r\n                                                {dataPantientsReadyExamining.status !== 1 ?\r\n                                                    <>\r\n                                                        <Typography variant=\"subtitle2\" sx={{textAlign: 'center', mt: 0.2, fontSize: '1rem'}}>Nếu không tìm thấy bệnh nhân, hãy nhấn nút tải lại phía dưới</Typography>\r\n                                                        <CachedIcon sx={{color: 'brown', fontWeight: 'bolder', position: 'absolute', right: 55, top: 30, fontSize: '2.5rem', cursor: 'pointer'}} titleAccess='Tải lại' onClick={() => handleReloadGetRegistersByDateNow()}/>\r\n                                                    </>\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                                <Typography variant=\"h6\" sx={{textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                                            </Box>\r\n                                            \r\n                                            <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                                                <TextField sx={{mb: 0.6, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                                        startAdornment: (\r\n                                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                                        ),\r\n                                                        endAdornment: (\r\n                                                            <InputAdornment position='end'>\r\n                                                                {searchPatientsQuery !== '' ? \r\n                                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                                                                    /> \r\n                                                                : \r\n                                                                    null\r\n                                                                }\r\n                                                            </InputAdornment>  \r\n                                                        )\r\n                                                    }}>\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Box>\r\n                                \r\n                                        <Table stickyHeader >\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listDataPatientsRegisterSort.map((dataPantientItem, dataPantientIndex) => (\r\n                                                    <TableRow hover role=\"checkbox\" key={dataPantientItem.order}\r\n                                                        sx={{ cursor: 'pointer', backgroundColor: dataPantientItem.state === 1 ? '#26c6da' : '#fff', \r\n                                                        ':hover': {backgroundColor: dataPantientItem.state === 1 ? '#00bcd4 !important' : 'rgba(0, 0, 0, 0.1) !important'} }} \r\n                                                        onClick={() => handleSelectPantientExamining(dataPantientItem)}\r\n                                                    >\r\n                                                        <TableCell align='left' sx={{width: '20px'}}>{dataPantientItem.order}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '150px'}}>{dataPantientItem.patient.patientCode}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '240px'}}>{dataPantientItem.patient.fullName}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </>\r\n                                }\r\n                            </TableContainer>\r\n\r\n                            {/* cây thư mục khám */}\r\n                            <Box style={{width: '100%', marginTop: '10px', borderRadius: '10px', border: '2px solid red', height: '300px', overflow: 'auto'}} >\r\n                                {\r\n                                    mainDataExamining.length === 0 && loadingCategoryExamining === false || prevDataExamining === false ?\r\n                                        null\r\n                                    :\r\n                                    <>\r\n                                        {loadingCategoryExamining ?\r\n                                            <Box sx={{backgroundColor: '#e0e0e0', borderRadius: '10px', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu cây thư mục khám, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <>\r\n                                                <div className='category-scrollbar'>\r\n                                                    <List sx={{p: 0, display: 'inline-grid'}}>\r\n                                                        {mainDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                                            <Box sx={{display: 'inline-flex'}} key={`category ${predecessorIndex}`}>\r\n                                                                <ListItemButton\r\n                                                                    sx={{\r\n                                                                    width: 'fitContent', pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'},\r\n                                                                    backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffd54f' : ''}} \r\n                                                                    onClick={() => handleSelectCategoryClick(predecessorItem)}\r\n                                                                >\r\n                                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                        <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </Box>\r\n                                                                </ListItemButton>\r\n\r\n                                                                {predecessorItem.newCategoryPre === true && predecessorItem.newPredecessor === true ? \r\n                                                                    null\r\n                                                                :\r\n                                                                    <>\r\n                                                                        {predecessorItem.newCategoryPre === false  ?\r\n                                                                            <>  \r\n                                                                                <CheckCircleIcon sx={{color: 'green', fontSize: '1.4rem', margin: 'auto'}} titleAccess='đã theo dõi'/>\r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        {mainDataExamining.newPredecessor ? \r\n                                                                            null\r\n                                                                        :\r\n                                                                            predecessorItem.isLock === true ?\r\n                                                                                <>  \r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <EditIcon sx={{color: 'blue', fontSize: '1.6rem'}} titleAccess='Sửa'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>\r\n                                                                            \r\n                                                                            :\r\n                                                                                <>\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessorForSaving(predecessorItem.categoryOrder)}>\r\n                                                                                        <BeenhereIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Lưu'/>\r\n                                                                                    </IconButton>\r\n\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleCancelEditDataPredecessor(predecessorItem.categoryName, predecessorItem.categoryOrder)}>\r\n                                                                                        <CancelIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='Hủy'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>   \r\n                                                                        }                                  \r\n                                                                    </>\r\n                                                                }\r\n                                                            </Box>\r\n                                                        ))}\r\n\r\n                                                        <ListItemButton \r\n                                                            sx={{pt: '4px', pb: '4px', borderRadius: '8px', backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffd54f' : '',\r\n                                                                ':hover': {backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                            onClick={() => handleSelectHealthRecords(mainDataExamining.healthRecords)}\r\n                                                        >\r\n                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}>\r\n                                                                <SendIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                            </ListItemIcon>\r\n\r\n                                                            <ListItemText primary={'Sổ sức khỏe'} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>                                                    \r\n                                                        </ListItemButton>\r\n\r\n                                                        <Collapse in={openCollapseHealthRecords} timeout=\"auto\" unmountOnExit>\r\n                                                            <div style={{ paddingLeft: '24px' }}>\r\n                                                                {mainDataExamining.healthRecords.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                    <ListItemButton key={`healthRecords ${healthRecordsIndex}`} sx={{pt: '0px', pb: '0px', width: 'auto', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                                        onClick={() => handleSelectHealthRecordsItem(healthRecordsItem.medicalRegisterId, healthRecordsItem.examinationName, healthRecordsItem.state)}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: healthRecordsItem.state === 1 ? 'red' : '#009688'}}}>\r\n                                                                            <FiberManualRecordIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={healthRecordsItem.examinationName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </ListItemButton>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </Collapse>\r\n                                                    </List>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </Box>\r\n                            {activeChip.chipOrder === 0 && dataPantientsReadyExamining.editExamining === false ?\r\n                                <div className='instruction' style={{display: 'flex', justifyContent: 'space-between', marginTop: '4.5px'}}>\r\n                                    <Button variant=\"contained\" color=\"error\" onClick={() => handleCancelExamining()}>Hủy khám (f1)</Button>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Bắt đầu khám (f2)</Button>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                </div>\r\n                            :\r\n                                dataPantientsReadyExamining.id === '' ?\r\n                                    null\r\n                                :\r\n                                    dataPantientsReadyExamining.id !== '' && dataPantientsReadyExamining.status === 0 ? \r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            {/* <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleDeleteExamining()}>Xóa khám (f1)</Button> */}\r\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={() => handleStartExaminingButtonClick()}>Sửa đổi (f2)</Button>\r\n                                        </div>\r\n                                    :\r\n                                        <div className='instruction' style={{display: 'flex', marginTop: '4.5px'}}>\r\n                                            <Button variant=\"contained\" color=\"error\" sx={{mr: 2}} onClick={() => handleCancelExamining()}>Hủy thay đổi (f1)</Button>\r\n                                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleCompleteExaminingButtonClick()}>Kết thúc khám (f4)</Button>\r\n                                        </div>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            {/* thông tin bệnh nhân */}\r\n                            <Box sx={{boxShadow: 4, borderRadius: '20px', border: '2px solid blue', height: '230px', mb: '8px', overflow: 'auto'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', mt: 0.6, mb: 0.6, fontWeight: 'bolder', fontSize: '1.2rem', textAlign: 'center'}}>Thông tin bệnh nhân</Typography>\r\n                                <Box sx={{pl: 2.8, pr: 2.8, mt: 1}}>\r\n                                    {loadingInfoPatient ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', mt: 4}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải thông tin bệnh nhân, hãy chờ một chút...</Typography>\r\n                                        </Box>\r\n                                    :\r\n                                        <>\r\n                                            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Mã BN: ${dataPantientsReadyExamining.patientCode || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Họ tên: ${dataPantientsReadyExamining.patientsName || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    {dataPantientsReadyExamining.patientsGender === true ? <MaleIcon sx={{color: 'coral', fontSize: '27px'}}/> : <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/>}\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Giới tính: ${dataPantientsReadyExamining.patientsGender !== '' ? dataPantientsReadyExamining.patientsGender === true ? 'Nam' : 'Nữ' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: {dataPantientsReadyExamining.patientsDOB ? moment(dataPantientsReadyExamining.patientsDOB).format(\"DD/MM/YYYY\") : ''}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Tháng tuổi: ${dataPantientsReadyExamining.patientsMonthsOld || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Sdt: ${dataPantientsReadyExamining.patientsPhone || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiBodyHeight style={{color: 'tomato', fontSize: '1.42rem', marginLeft: '2px'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 0.8}}>\r\n                                                        {`Chiều cao: ${dataPantientsReadyExamining.patientsHeight ? dataPantientsReadyExamining.patientsHeight + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Cân nặng: ${dataPantientsReadyExamining.patientsWeight ? dataPantientsReadyExamining.patientsWeight + ' kg' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <TbRulerMeasure style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Vòng đầu: ${dataPantientsReadyExamining.patientsHeadCircumference ? dataPantientsReadyExamining.patientsHeadCircumference + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={12} sx={{display: 'inline-flex'}}>\r\n                                                    <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Địa chỉ: ${dataPantientsReadyExamining.patientsAddress || ''}`}</Typography>\r\n                                                </Grid> \r\n\r\n                                                {previewPredecessor ? \r\n                                                    <>\r\n                                                        <Grid item xs={12} >\r\n                                                            <Box sx={{display: 'flex', flexWrap: 'wrap'}}>\r\n                                                                {previewPredecessor.map((item, index) => (\r\n                                                                    <Typography variant='subtitle1' sx={{ml: 0.5, fontSize: '1.1rem', color: 'mediumblue', fontWeight: 'bolder'}} key={index} >{`${item.categoryContentQuestionName}: ${item.categoryContentAnswer ? 'có' : ''} ${item.categoryContentNote !== null ? `${item.categoryContentNote}` : ''}, `}</Typography>\r\n                                                                ))}\r\n                                                            </Box>\r\n                                                            \r\n                                                        </Grid> \r\n                                                    </>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </Grid>\r\n                                        </>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {/* nội dung khám */}\r\n                            <div className='container-content-examining'>\r\n                                {\r\n                                    loadingPrevDataExamining ? \r\n                                        <>\r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu kỳ khám gần nhất, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    :\r\n                                    prevDataExamining ? \r\n                                        prevDataExamining.healthRecords.length === 1 && prevDataExamining.healthRecords[0].medicalBookId === null ? \r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <Typography variant='h6'>Bệnh nhân không có kỳ khám trước</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <div className='content-examining'><PreviewLastExamining prevDataExamining={prevDataExamining} /></div>\r\n                                    :\r\n                                        null\r\n                                }\r\n                                \r\n                                {categorySelectedExamining.categoryContents ? \r\n                                    <>\r\n                                        <div className='content-examining'>\r\n                                            {loadingContentsExamining ? \r\n                                                <>\r\n                                                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                        <CircularProgress />\r\n                                                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh, hãy chờ một chút...</Typography>\r\n                                                    </Box>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    {categorySelectedExamining.newCategoryPre === true && categorySelectedExamining.isLock === true ? \r\n                                                        <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                            <Typography variant='h6'>Bệnh nhân không có tiền căn đang được theo dõi ở mục này</Typography>\r\n                                                        </Box>\r\n                                                    :\r\n                                                        contentCategorySelectedExamining.healthRecordsContentsType !== 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                            categorySelectedExamining.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                                <Box key={categoryContentsIndex} sx={categoryContentsItem.categoryContentTitle === null ? {marginTop: '30px'} : {}}>\r\n\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>{categoryContentsItem.categoryContentTitle || ''}</Typography>\r\n                                                                    {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                        <Box key={`categoryContentQuestionName ${questionIndex}`}>\r\n                                                                            <Grid container rowSpacing={0}>\r\n                                                                                {questionIndex === 0 ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                        </Grid>\r\n\r\n                                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                    <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                </Grid>\r\n\r\n                                                                                                <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            : \r\n                                                                                                <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                                </Grid>\r\n                                                                                        }                                                                             \r\n                                                                                    </> \r\n                                                                                    : \r\n                                                                                    null\r\n                                                                                }\r\n                                                                                \r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1.2rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled={categorySelectedExamining.isLock === true ? true : false} \r\n                                                                                            checked={questionItem.categoryContentAnswer === true ? true : false } \r\n                                                                                            classes={{ root: classes.root }} color='error' \r\n                                                                                            sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} \r\n                                                                                            onClick={() => \r\n                                                                                                dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleAnswerCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer) : handleAnswerCheckQuestion(categoryContentsIndex, questionIndex, questionItem.categoryContentAnswer)} />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={7} >\r\n                                                                                            <div className='textfield-for-answer'>\r\n                                                                                                <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                        onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteCheckQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleNoteCheckQuestion(categoryContentsIndex, questionIndex, e.target.value)}\r\n                                                                                                        defaultValue={questionItem.categoryContentNote}\r\n                                                                                                    />\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>   \r\n                                                                                    :\r\n                                                                                    <>\r\n                                                                                        {categorySelectedExamining.categoryOrder === 4 ? \r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8} >\r\n                                                                                                    <div className='textfield-for-answer'>\r\n                                                                                                        <div className='suggest-note' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - categoryContentOrder ${categoryContentsIndex} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >                                                                          \r\n                                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled={categorySelectedExamining.isLock === true ? true : false} style={{ fontSize: '1.2rem'}}\r\n                                                                                                                onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                                defaultValue={questionItem.categoryContentNote}\r\n                                                                                                            />\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                            :\r\n                                                                                            <>\r\n                                                                                                <Grid item xs={8}>\r\n                                                                                                    <div className='textfield-for-answer' key={`question ${questionIndex} - category ${categorySelectedExamining.categoryOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - isLock ${contentCategorySelectedExamining.isLock} - questionOrder ${questionItem.categoryContentQuestionOrder}`} >\r\n                                                                                                        <input type='text' disabled={categorySelectedExamining.isLock === true ? true : false}\r\n                                                                                                            className='value-for-answer' \r\n                                                                                                            onChange={(e) => dataPantientsReadyExamining.editExamining === true && categorySelectedExamining.newCategoryPre === false || dataPantientsReadyExamining.backRegister === true && categorySelectedExamining.newCategoryPre === false ? handleNoteValueQuestionPredecessorForReExamOrBackExam(categoryContentsIndex, questionIndex, e.target.value) : handleAnswerValueQuestion(categoryContentsIndex, questionIndex, e.target.value)} \r\n                                                                                                            defaultValue={questionItem.categoryContentNote} \r\n                                                                                                        />\r\n                                                                                                    </div>\r\n                                                                                                </Grid>\r\n                                                                                            </>\r\n                                                                                        }\r\n                                                                                    </>\r\n                                                                                }\r\n                                                                                \r\n                                                                            </Grid>\r\n                                                                        </Box>\r\n                                                                    ))}\r\n                                                                </Box>\r\n                                                            ))\r\n                                                        :\r\n                                                            contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length === 0 && dataPantientsReadyExamining.isContinueExam === false ? \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n                                                                    <TableContainer component={Paper}>\r\n                                                                        <Table stickyHeader>\r\n                                                                            <TableHead>\r\n                                                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                                                    <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n                                                                                </TableRow>\r\n                                                                            </TableHead>\r\n                                                                            <TableBody sx={{borderRadius: '0px'}}>\r\n                                                                                {contentCategorySelectedExamining.categoryContents.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                                    <TableRow hover role=\"checkbox\" key={healthRecordsIndex}>\r\n                                                                                        <TableCell align='left' sx={{width: '158px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{healthRecordsItem.examinationName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '144px'}}>{handleRenderExamsStatus(healthRecordsItem.state)}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '108px'}}>{moment(healthRecordsItem.timeRegister).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '115px'}}>{healthRecordsItem.doctorFullName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: 'auto'}}>{healthRecordsItem.conclusion}</TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                ))}\r\n                                                                            </TableBody>\r\n                                                                        </Table>\r\n                                                                    </TableContainer>\r\n                                                                </>\r\n                                                            :\r\n                                                                \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', lineHeight: 1, mt: 1}}>{currentHealthRecordExamining ? currentHealthRecordExamining.healthRecordsName : ''}</Typography>\r\n                                                                    <div className='health-record-content'>\r\n                                                                        {currentHealthRecordExamining ? \r\n                                                                            <List sx={{p: 0}}>\r\n                                                                                {currentHealthRecordExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => (\r\n                                                                                    <div key={`categoryPatients ${categoryPatientsIndex}`}>\r\n                                                                                        <ListItemButton     \r\n                                                                                            sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                                                                            onClick={() => handleOpenHealthRecordsItem(categoryPatientsIndex)}\r\n                                                                                        >\r\n                                                                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff', transform: openCollapseHealthRecordsItem[categoryPatientsIndex] === true ? 'rotate(90deg)' : 'rotate(0deg)'}}}><SendIcon /></ListItemIcon>\r\n                                                                                                <ListItemText primary={categoryPatientsItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                                            </Box>\r\n                                                                                        </ListItemButton>\r\n\r\n                                                                                        <Collapse in={openCollapseHealthRecordsItem[categoryPatientsIndex]} timeout=\"auto\" unmountOnExit>\r\n                                                                                            {categoryPatientsItem.categoryContents.map((categoryPatientsContentsItem, categoryPatientsContentsIndex) => (\r\n                                                                                                <div className='header-health-record' key={categoryPatientsContentsIndex} style={{marginTop: '15px', marginBottom: '15px', border: '2px solid #00bcd4', borderRadius: '20px'}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{fontWeight: 'bolder', textAlign: 'center'}}>{categoryPatientsContentsItem.categoryContentTitle}</Typography>\r\n                                                                                                \r\n                                                                                                    <div className='content-health-record' style={{padding: '10px'}} >  \r\n                                                                                                        <Grid container rowSpacing={0}>\r\n                                                                                                            <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryPatientsContentsItem.categoryContentName}</Typography>\r\n                                                                                                            </Grid>\r\n\r\n                                                                                                            <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryPatientsContentsItem.categoryContentCheck}</Typography>\r\n                                                                                                            </Grid>\r\n                                                                                                        \r\n                                                                                                            <Grid item xs={5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryPatientsContentsItem.categoryContentText}</Typography>\r\n                                                                                                            </Grid> \r\n\r\n                                                                                                            {categoryPatientsContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                                                                <Box key={`questionItem ${questionIndex} healthRecordsName ${contentCategorySelectedExamining.healthRecordsName}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                                                        <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                                                    </Grid>    \r\n\r\n                                                                                                                    {questionItem.categoryContentQuestionType === 'check' ?\r\n                                                                                                                        <>\r\n                                                                                                                            <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                                                                <Checkbox classes={{ root: classes.root }} checked={questionItem.categoryContentAnswer === true ? true : false }\r\n                                                                                                                                    disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                    sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                                                                    onClick={(e) => handleAnswerCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, questionItem.categoryContentAnswer)} \r\n                                                                                                                                />\r\n                                                                                                                            </Grid>\r\n                                                                                                                    \r\n                                                                                                                            <Grid item xs={5} >\r\n                                                                                                                                <div className='note-for-answer'>\r\n                                                                                                                                    <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                            disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                            onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                        />\r\n                                                                                                                                    </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </Grid>\r\n                                                                                                                        </>\r\n                                                                                                                    :\r\n                                                                                                                        <>\r\n                                                                                                                            <Grid item xs={8} >\r\n                                                                                                                                <div className='note-for-answer'>\r\n                                                                                                                                    <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex} examinationName ${currentHealthRecordExamining.healthRecordsName}`}>                                                                          \r\n                                                                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                            disabled={currentHealthRecordExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                            onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsContentsIndex, questionIndex, e.target.value)}    \r\n                                                                                                                                        />\r\n                                                                                                                                    </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            </Grid>\r\n                                                                                                                        </>\r\n                                                                                                                    }\r\n                                                                                                                </Box>\r\n                                                                                                            ))}\r\n                                                                                                        </Grid>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        ))}\r\n                                                                                    </Collapse>\r\n                                                                                </div>\r\n                                                                            ))}\r\n                                                                            </List>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                        \r\n\r\n                                                                        {currentHealthRecordExamining ?\r\n                                                                            currentHealthRecordExamining.conclusion !== null ?\r\n                                                                            <>  \r\n                                                                                <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                                                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận của bác sĩ: ${currentHealthRecordExamining.conclusion}`}</Typography>\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n                                                                        \r\n                                                                    </div>\r\n\r\n                                                                </>\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n\r\n            <CompleteExamining openModalCompleteExamining={openModalCompleteExamining} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n                handleCompleteExaminingForPantient={handleCompleteExaminingForPantient} dataExaminingForConclusion={dataExaminingForConclusion} dataPantientInfo={dataPantientsReadyExamining}\r\n                predecessorToPrint={predecessorToPrint}\r\n            />\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n            />\r\n            {/* <AlertConfirm openAlertConfirmModal={openAlertConfirmModal.open} onCloseAlertConfirmModal={setOpenAlertConfirmModal} \r\n                titleConfirm={openAlertConfirmModal.title} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDoctorExamining","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://beknkpt2.dvtien.id.vn';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getReportPatient = async (dateSelectedReport) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Admin/GetReportPatient?dateStart=${dateSelectedReport.dateStart}&dateEnd=${dateSelectedReport.dateEnd}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListUser = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/UserAccount/GetUserAccounts`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getReportPatient, getListUser\r\n}","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridToolbarExport, GridToolbarColumnsButton, GridToolbarDensitySelector, GridToolbarFilterButton, GridToolbarContainer, viVN } from '@mui/x-data-grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//icon\r\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\r\n//moment\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\n//api\r\nimport { getReportPatient } from '../../Service/StatisticsService';\r\n\r\nfunction MainDashboard() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const [dateSelectedReport, setDateSelectedReport] = useState({dateStart: '', dateEnd: ''})\r\n    const [mainDataDashboard, setMainDataDashboard] = useState([]);\r\n    const [loadingDataDashboard, setLoadingDataDashboard] = useState(false);\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'STT', width: 120, align: 'left', headerAlign: 'left', },\r\n        { field: 'fullName', headerName: 'Họ tên', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'dayExam', headerName: 'Ngày khám', width: 180, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'gender', headerName: 'Giới tính', width: 140, align: 'left', headerAlign: 'left' },\r\n        { field: 'dayOfBirth', headerName: 'Ngày sinh', width: 165, align: 'left', headerAlign: 'left', type: 'date' },\r\n        { field: 'examName', headerName: 'Kỳ khám', width: 170, align: 'left', headerAlign: 'left' },\r\n        { field: 'phone', headerName: 'Điện thoại', width: 170, type: 'number', align: 'left', headerAlign: 'left'},\r\n        { field: 'district', headerName: 'Quận/Huyện', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'province', headerName: 'Tỉnh/Thành phố', width: 185, align: 'left', headerAlign: 'left' },\r\n        { field: 'address', headerName: 'Địa chỉ', width: 700, align: 'left', headerAlign: 'left' },\r\n    ];\r\n\r\n    // Hàm xử lý xuất file Excel\r\n    const handleExportExcel = () => {\r\n        // Tạo lại dữ liệu với các tiêu đề cột tùy chỉnh\r\n        const formattedRows = mainDataDashboard.map((row, index) => ({\r\n            'STT': index + 1,\r\n            'Họ tên': row.fullName, \r\n            'Ngày khám': row.dayExam,\r\n            'Giới tính': row.gender,\r\n            'Ngày sinh': row.dayOfBirth,\r\n            'Kỳ khám': row.examName,\r\n            'Điện thoại': row.phone,\r\n            'Quận/Huyện': row.district,\r\n            'Tỉnh/Thành phố': row.province,\r\n            'Địa chỉ': row.address\r\n          }));\r\n\r\n        // Tạo worksheet từ dữ liệu đã định dạng\r\n        const ws = XLSX.utils.json_to_sheet(formattedRows);\r\n\r\n        // Tạo workbook và thêm worksheet vào đó\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Data');\r\n\r\n        // Xuất file Excel\r\n        XLSX.writeFile(wb, `Danh sách bệnh nhân khám bệnh từ ${moment(dateSelectedReport.dateStart).format('DD-MM-YYYY')} đến ${moment(dateSelectedReport.dateEnd).format('DD-MM-YYYY')}.xlsx`);\r\n    };\r\n\r\n    // Custom toolbar bao gồm nút xuất Excel\r\n    const CustomToolbar = ({ handleExportExcel }) => {\r\n        return (\r\n            <GridToolbarContainer >\r\n                {/* Các chức năng của GridToolbar mặc định */}\r\n                <GridToolbarColumnsButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarFilterButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarDensitySelector sx={{fontSize: '16px'}}/>\r\n                <Button variant=\"text\" startIcon={< RiFileExcel2Fill/>} onClick={handleExportExcel} sx={{fontSize: '16px'}}>Xuất Excel</Button>\r\n            </GridToolbarContainer>\r\n        );\r\n    };\r\n\r\n    const onChangeDateStart = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateStart = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const onChangeDateEnd = (value) => {\r\n        if(value){\r\n            const takenValue = value._d;\r\n\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n\r\n            typingRef.current = setTimeout(() => {\r\n                const _dateSelectedReport = {...dateSelectedReport};\r\n                _dateSelectedReport.dateEnd = moment(takenValue).format('YYYY-MM-DD');\r\n                setDateSelectedReport(_dateSelectedReport);\r\n            }, 200) \r\n        }\r\n    }\r\n\r\n    const handleGetReportPatient = async () => {\r\n        setLoadingDataDashboard(true);\r\n        await new Promise(resolve => setTimeout(resolve, 5 * 100));\r\n        const responseGetReportPatient = await getReportPatient(dateSelectedReport);\r\n        const editMainDataDashboard = responseGetReportPatient.map((item) => {\r\n            const dataReportPatient = {\r\n                patientId: item.patientId,\r\n                fullName: item.fullName,\r\n                dayExam: moment(item.dayExam).format('DD/MM/YYYY'),\r\n                gender: item.gender ? 'Nam' : 'Nữ',\r\n                dayOfBirth: moment(item.dayOfBirth).format('DD/MM/YYYY'),\r\n                examName: item.examName,\r\n                phone: item.phone,\r\n                district: item.district,\r\n                province: item.province,\r\n                address: item.address\r\n            }\r\n            return dataReportPatient\r\n        })\r\n        setMainDataDashboard(editMainDataDashboard);\r\n        setLoadingDataDashboard(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Admin'){\r\n                history.push('/404');\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        if(dateSelectedReport.dateStart !== '' && dateSelectedReport.dateEnd !== ''){\r\n            handleGetReportPatient();\r\n        }\r\n    }, [dateSelectedReport])\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" sx={{mt: 1}}>\r\n            <Box sx={{display: 'flex', justifyContent: 'center'}}>\r\n                <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                    <DemoContainer components={['DatePicker']}> \r\n                        <DatePicker label=\"Từ ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateStart(value)}/> \r\n                        <DatePicker label=\"Đến ngày\" format='DD/MM/YYYY' disableFuture onChange={(value) => onChangeDateEnd(value)} minDate={moment(dateSelectedReport.dateStart)}/>                                   \r\n                    </DemoContainer>\r\n                </LocalizationProvider>\r\n            </Box>\r\n\r\n            <Box sx={{ height: 600, width: '100%', mt: 1.2 }}>\r\n                {loadingDataDashboard ? \r\n                    <>\r\n                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '80%'}}>\r\n                            <CircularProgress />\r\n                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                        </Box>  \r\n                    </>\r\n                    :\r\n                        mainDataDashboard.length !== 0 ?\r\n                            <>       \r\n                                <DataGrid \r\n                                    style={{ fontSize: '18px' }}\r\n                                    localeText={viVN.components.MuiDataGrid.defaultProps.localeText}\r\n                                    rows={mainDataDashboard.map((row, index) => ({\r\n                                        ...row,\r\n                                        id: index + 1,\r\n                                    }))}\r\n                                    columns={columns}\r\n                                    pageSizeOptions={[1]}\r\n                                    components={{\r\n                                        Toolbar: CustomToolbar, // Chèn toolbar vào đây\r\n                                      }}\r\n                                    componentsProps={{\r\n                                        toolbar: { handleExportExcel }, // Truyền hàm export vào props của toolbar\r\n                                    }}\r\n                                    disableRowSelectionOnClick\r\n                                    sx={{\r\n                                        '.MuiTablePagination-selectLabel': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                        '.MuiTablePagination-displayedRows': {\r\n                                            marginBottom: '3px',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        :\r\n                           <h5 style={{textAlign: 'center', color: 'blue'}}>Hãy chọn khoảng ngày khám để lấy dữ liệu thống kê</h5>\r\n                }\r\n            </Box>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MainDashboard","import React, { useState, useContext, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//api\r\nimport { addUser } from '../../Service/UserService';\r\n\r\nfunction AddUser(props) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n    const [dataAddUser, setDataAddUser] = useState( \r\n      {\r\n        userName: \"\",\r\n        userFullName: \"\",\r\n        userPassword: \"123456\",\r\n        userEmail: \"\",\r\n        userPosition: \"\"\r\n      }\r\n    )\r\n\r\n    const handleCloseModalAddUser = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalAddUser(false);\r\n      }\r\n    }\r\n\r\n    const listPosition = [\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n      {id: '3', positionName: 'Tiếp nhận'},\r\n    ]\r\n\r\n    const onChangeUserFullName = (value) => {\r\n      setDataAddUser(prevDataAddUser => {\r\n        return {\r\n          ...prevDataAddUser,\r\n          userFullName: value\r\n        }\r\n      })\r\n    }\r\n\r\n    const onSelectPosition = (e, value) => {\r\n      setDataAddUser(prevDataAddUser => {\r\n        return {\r\n          ...prevDataAddUser,\r\n          userPosition: value.id\r\n        }\r\n      })\r\n    }\r\n\r\n    const onChangeUserName = (value) => {\r\n      setDataAddUser(prevDataAddUser => {\r\n        return {\r\n          ...prevDataAddUser,\r\n          userName: value\r\n        }\r\n      })\r\n    }\r\n\r\n    const handleAddUser = async () => {\r\n      setLoading(true);\r\n      const responseAddUser = await addUser(dataAddUser);\r\n      if(responseAddUser.status === 200){\r\n        toast.success(responseAddUser.data, {toastId: 'AddUserSuccess'})\r\n        props.setReloadComponent(true);\r\n      }\r\n      else{\r\n        toast.error(responseAddUser.data, {toastId: 'AddUserError'})\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalAddUser} onClose={(event, reason) => handleCloseModalAddUser(event, reason)} disableEscapeKeyDown={true} >\r\n          {loading ? \r\n            <>\r\n              <div style={{display: 'flex', justifyContent: 'center', height: '100px', alignItems: 'center'}}>\r\n                <CircularProgress />\r\n              </div>\r\n            </>\r\n          :\r\n            <>     \r\n              <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n              <IconButton onClick={() => handleCloseModalAddUser()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                <CloseIcon fontSize='medium'/>\r\n              </IconButton>\r\n\r\n              <DialogContent dividers>\r\n                <TextField label=\"Họ tên\" variant=\"outlined\" autoFocus sx={{ width: '46ch', mb: 2.5 }} onChange={(e) => onChangeUserFullName(e.target.value)}/>\r\n                <Autocomplete \r\n                  options={listPosition} \r\n                  getOptionLabel={(option) => option.positionName}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.positionName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectPosition(e, value)}\r\n                  renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} \r\n                  sx={{ width: '45.95ch', mb: 2.5 }}\r\n                />\r\n                <TextField label=\"Tên tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                <Stack spacing={2} direction=\"column\">\r\n                  <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleAddUser()}>Tạo tài khoản</Button>\r\n                </Stack>\r\n              \r\n              </DialogContent>\r\n            </>\r\n          }\r\n        </Dialog>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default AddUser","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport _ from \"lodash\";\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//modal add user\r\nimport AddUser from '../ManageAddUser/AddUser';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridToolbarExport, GridToolbarColumnsButton, GridToolbarDensitySelector, GridToolbarFilterButton, GridToolbarContainer, viVN } from '@mui/x-data-grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Switch from '@mui/material/Switch';\r\n//icon\r\nimport { HiUserAdd } from \"react-icons/hi\";\r\n//api\r\nimport { getListUser } from '../../Service/StatisticsService';\r\nimport { updateActiveUser } from '../../Service/UserService';\r\nimport { toast } from 'react-toastify';\r\nimport ChangeUserInfo from '../ManageUserInfo/ChangeUserInfo';\r\n\r\n\r\nfunction MainListUser() {\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    const [reloadComponent, setReloadComponent] = useState(false);\r\n    const [loadingListUser, setLoadingListUser] = useState(false);\r\n    const [listUser, setListUser] = useState([]);\r\n\r\n    const [openModalAddUser, setOpenModalAddUser] = useState(false);\r\n    const [openModalChangeUserInfo, setOpenModalChangeUserInfo] = useState(false);\r\n\r\n    const [dataUserInfo, setDataUserInfo] = useState();\r\n\r\n    const history = useHistory();\r\n\r\n    const onChangeActiveUser = async (event, data) => {\r\n        setLoadingListUser(true);\r\n        const responseUpdateActiveUser = await updateActiveUser(data.userId, event.target.checked);\r\n        if(responseUpdateActiveUser.status === 200){\r\n            const responseGetListUser = await getListUser();\r\n            const editMainDataListUser = responseGetListUser.map((item) => {\r\n                const dataReportUser = {\r\n                    userId: item.userId,\r\n                    userName: item.userName,\r\n                    userFullName: item.userFullName,\r\n                    userEmail: item.userEmail,\r\n                    positionName: item.positionName,\r\n                    userIsActive: item.userIsActive\r\n                }\r\n\r\n                if(item.positionName === 'Doctor'){\r\n                    dataReportUser.positionName = 'Bác sĩ'\r\n                }\r\n                else if(item.positionName === 'Nursing'){\r\n                    dataReportUser.positionName = 'Tiếp nhận'\r\n                }\r\n\r\n                return dataReportUser\r\n            })\r\n            setListUser(editMainDataListUser);\r\n            \r\n            toast.success(event.target.checked === true ? `Đã vô hiệu hóa người dùng ${data.userFullName}` : `Đã kích hoạt lại người dùng ${data.userFullName}`)\r\n        }\r\n        setLoadingListUser(false);\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'userName', headerName: 'Tên đăng nhập', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'userFullName', headerName: 'Họ tên', width: 240, align: 'left', headerAlign: 'left', },\r\n        { field: 'userEmail', headerName: 'Email', width: 340, align: 'left', headerAlign: 'left', },\r\n        { field: 'positionName', headerName: 'Vị trí', width: 200, align: 'left', headerAlign: 'left' },\r\n        { field: 'userIsActive', headerName: 'Trạng thái', width: 165, align: 'left', headerAlign: 'left', renderCell: (params) => params.row.userIsActive ? <Switch checked={true} onChange={(e) => onChangeActiveUser(e, params.row)} /> : <Switch checked={false} onChange={(e) => onChangeActiveUser(e, params.row)}/> },\r\n    ];\r\n\r\n    // Custom toolbar bao gồm nút thêm user\r\n    const CustomToolbar = ({ handleOpenModalAddUser }) => {\r\n        return (\r\n            <GridToolbarContainer >\r\n                {/* Các chức năng của GridToolbar mặc định */}\r\n                <GridToolbarColumnsButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarFilterButton sx={{fontSize: '16px'}}/>\r\n                <GridToolbarDensitySelector sx={{fontSize: '16px'}}/>\r\n                <Button variant=\"text\" startIcon={<HiUserAdd/>} onClick={handleOpenModalAddUser} sx={{fontSize: '16px'}}>Thêm người dùng</Button>\r\n            </GridToolbarContainer>\r\n        );\r\n    };\r\n\r\n    const handleOpenModalAddUser = () => {\r\n        setOpenModalAddUser(true);\r\n    }\r\n\r\n    const handleDoubleClickUser = (e) => {\r\n        setDataUserInfo(e.row);\r\n        setOpenModalChangeUserInfo(true);\r\n    }\r\n\r\n    const handleGetListUser = async () => {\r\n        setLoadingListUser(true);\r\n        const responseGetListUser = await getListUser();\r\n        const editMainDataListUser = responseGetListUser.map((item) => {\r\n            const dataReportUser = {\r\n                userId: item.userId,\r\n                userName: item.userName,\r\n                userFullName: item.userFullName,\r\n                userEmail: item.userEmail,\r\n                positionName: item.positionName,\r\n                userIsActive: item.userIsActive\r\n            }\r\n\r\n            if(item.positionName === 'Doctor'){\r\n                dataReportUser.positionName = 'Bác sĩ'\r\n            }\r\n            else if(item.positionName === 'Nursing'){\r\n                dataReportUser.positionName = 'Tiếp nhận'\r\n            }\r\n\r\n            return dataReportUser\r\n        })\r\n        setListUser(editMainDataListUser);\r\n        setLoadingListUser(false);\r\n\r\n        if(reloadComponent){\r\n            setReloadComponent(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetListUser();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(reloadComponent){\r\n            handleGetListUser();\r\n        }\r\n    }, [reloadComponent])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user.isLogin){\r\n            if(user.positionName !== 'Admin'){\r\n                history.push('/404');\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 1}}>\r\n                <Box sx={{ height: 600, width: '100%', mt: 1.2 }}>\r\n                    {loadingListUser ? \r\n                        <>\r\n                            <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: '100%'}}>\r\n                                <CircularProgress />\r\n                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                            </Box>  \r\n                        </>\r\n                    :\r\n                        <>  \r\n                            <Typography variant='h5' sx={{textAlign: 'center', mb: 1, fontWeight: 'bolder', color: 'red'}}>Danh sách người dùng</Typography>     \r\n                            <DataGrid \r\n                                style={{ fontSize: '18px', marginLeft: '50px', marginRight: '50px' }}\r\n                                localeText={viVN.components.MuiDataGrid.defaultProps.localeText}\r\n                                rows={listUser.map((row, index) => ({\r\n                                    ...row,\r\n                                    id: index + 1,\r\n                                }))}\r\n                                columns={columns}\r\n                                pageSizeOptions={[1]}\r\n                                components={{\r\n                                    Toolbar: CustomToolbar, // Chèn toolbar vào đây\r\n                                  }}\r\n                                componentsProps={{\r\n                                    toolbar: { handleOpenModalAddUser },\r\n                                }}\r\n                                onCellDoubleClick={(e) => handleDoubleClickUser(e)}\r\n                                disableRowSelectionOnClick\r\n                                sx={{ \r\n                                    '.MuiTablePagination-selectLabel': { marginBottom: '3px', }, \r\n                                    '.MuiTablePagination-displayedRows': { marginBottom: '3px', },\r\n                                }}\r\n                            />\r\n                        </>\r\n                    }\r\n                </Box>\r\n            </Container>\r\n            \r\n            <AddUser openModalAddUser={openModalAddUser} setOpenModalAddUser={setOpenModalAddUser} setReloadComponent={setReloadComponent}/>\r\n            <ChangeUserInfo \r\n                dataUserInfo={dataUserInfo} \r\n                setDataUserInfo={setDataUserInfo} openModalChangeUserInfo={openModalChangeUserInfo} \r\n                setOpenModalChangeUserInfo={setOpenModalChangeUserInfo}\r\n                setReloadComponent={setReloadComponent}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainListUser","import { BrowserRouter, Route, Link, Switch, NavLink, HashRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport Header from \"../components/Nav/Header.jsx\";\nimport Page404 from \"../components/ErrorPage/Page404\";\nimport Home from \"../components/Home/Home.jsx\";\nimport Login from \"../components/LoginAccount/Log-in\";\nimport MainMedicalRegister from \"../components/MedicalRegister/MainMedicalRegister.jsx\";\nimport MainAppointmentExamining from \"../components/MedicalAppointment/MainAppointmentExamining.jsx\";\nimport MainDoctorExamining from \"../components/DoctorExamining/MainDoctorExamining.jsx\";\nimport MainDashboard from \"../components/Dashboard/MainDashboard.jsx\";\nimport MainListUser from \"../components/Dashboard/MainListUser.jsx\";\n\nconst AppRoutes = (props) => {\n  return (\n    <>\n      <HashRouter>\n        {/* <Header />{\" \"} */}\n        <Switch>\n          <Route exact path=\"/\"><Home /></Route>\n          <Route path=\"/login\"><Login /></Route>\n          <PrivateRoutes path=\"/medicalregister\" component={MainMedicalRegister}></PrivateRoutes>\n          <PrivateRoutes path=\"/doctor-examining\" component={MainDoctorExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/remind-examining\" component={MainAppointmentExamining}></PrivateRoutes>\n          <PrivateRoutes path=\"/dashboard\" component={MainDashboard}></PrivateRoutes>\n          <PrivateRoutes path=\"/manage-user\" component={MainListUser}></PrivateRoutes>\n          <Route path=\"*\"><Page404 />{\" \"}</Route>\n          {/* <PrivateRoutes path=\"/users\" component={Users} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\nexport default AppRoutes;\n","import \"./App.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Nav/Header\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <div className=\"header-container\">\n          <Header />\n        </div>\n\n        <div className=\"app-container\">\n          <AppRoutes />\n        </div>\n      </HashRouter>\n\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}