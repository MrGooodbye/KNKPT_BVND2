{"version":3,"sources":["components/ManageUserManual/UserManual.jsx","assets/image/logo.png","components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop.jsx","Service/UserService.jsx","Service/MedicalService.jsx","context/UserContext.jsx","components/Nav/Header.jsx","routes/PrivateRoutes.js","components/ErrorPage/Page404.js","components/ManageRegister/Register.jsx","components/LoginAccount/Log-in.jsx","components/ManageSelectedDoctorExamining/SelectedDoctorExamining.jsx","components/ManageAlertProcessing/AlertProcessing.jsx","Service/PlaceService.jsx","components/ManageInfoPantients/ManageInfoPantients.jsx","components/MedicalRegister/ListPatientsRegister.jsx","components/ManageExaminingSession/ExaminingSession.jsx","components/ManageOldDisease/OldDisease.jsx","components/MedicalRegister/BookMedical.jsx","components/MedicalRegister/MainMedicalRegister.jsx","components/ManageCompleteExamining/CompleteExamining.jsx","components/DoctorExamining/PreviewLastExamining.jsx","components/DoctorExamining/MainDoctorExamining.jsx","routes/AppRoutes.js","App.js","reportWebVitals.js","index.js"],"names":["UserManual","props","_jsxs","Dialog","fullWidth","maxWidth","open","openModalUserManual","disableEscapeKeyDown","children","_jsx","DialogTitle","sx","fontWeight","fontSize","textAlign","color","textTransform","IconButton","onClick","setOpenModalUserManual","position","right","top","CloseIcon","DialogContent","dividers","pl","pr","Typography","variant","Box","AlertProcessingBackdrop","Backdrop","zIndex","theme","drawer","backgroundColor","changeBackground","openAlertProcessingBackdrop","display","flexDirection","alignItems","CircularProgress","mt","alertTitle","backendURL","createConfig","token","localStorage","getItem","headers","Authorization","concat","createMedicalRegister","async","axios","post","dataPatientsRegister","then","response","catch","error","createMedicalBackRegister","createAddPredecessor","dataPredecessor","createAddMedicalBook","dataMedicalBook","getRegistersByDateNow","config","get","data","status","getListMedicalExaminationsGiveRegister","dayOfBirth","getVaccinationByPatientId","patientId","getCurrentDoctorExamining","getMedicalDetailPatient","id","getMedicalBook","medicalBookId","getUpdatePredecessor","getUpdateMedicalBook","updateMedicalState","state","put","UserContext","React","createContext","UserProvider","_ref","userDefault","isAuthenticated","isLogin","user","setUser","useState","loading","setLoading","setOpenAlertProcessingBackdrop","fetchUser","getUserLogin","positionName","responseCurrentDoctorExamining","userId","userFullName","isCurrentDoctorExamining","userIdDoctor","checkJWTExpire","result","getJWT","decodeJWT","JSON","parse","atob","split","e","parseJwt","currentDate","Date","exp","getTime","removeItem","useEffect","_Fragment","Provider","value","loadingContext","loginContext","userContextLogin","logoutContext","withRouter","useContext","location","useLocation","history","useHistory","anchorEl","setAnchorEl","Boolean","handleClick","event","currentTarget","handleClose","actionNursing","key","label","icon","LocalHospitalIcon","LinkComponent","NavLink","to","LocalPhoneIcon","actionDoctor","MedicationLiquidIcon","actionAdmin","BarChartIcon","userAction","setUserAction","pathname","findIndex","action","handleLogout","push","width","AppBar","Toolbar","height","Link","Avatar","src","Logo","mb","mr","BottomNavigation","showLabels","justifyContent","flexGrow","map","actionItem","BottomNavigationAction","Button","Menu","onClose","MenuItem","HelpIcon","titleAccess","cursor","exact","PrivateRoutes","Route","path","component","Redirect","Page404","className","CreateAccount","showPassword","setShowPassword","handleCloseModalRegister","reason","setOpenModalRegister","openModalRegister","m","p","TextField","type","InputProps","endAdornment","InputAdornment","handleClickShowPassword","padding","VisibilityIcon","VisibilityOffIcon","Autocomplete","options","option","renderInput","params","Stack","spacing","direction","style","margin","Login","userAccount","setUserAccount","password","handleLogin","userName","toast","userLogin","setItem","tokenDTO","Container","borderRadius","ml","autoComplete","onChange","onChangeUserName","target","prevUserAccount","onChangeUserPassword","onKeyDown","which","code","handlePressEnter","Register","SelectedDoctorExamining","listDoctor","setListDoctor","selectedDoctor","setSelectedDoctor","handleCreateCurrentDoctorExamining","toastId","_","isEqual","currentDoctorExamining","warning","createCurrentDoctorExamining","success","setCurrentDoctorExamining","setOpenSelectedDoctorExaminingModal","handleGetGetListDoctor","getGetListDoctor","indexResponseListDoctor","openSelectedDoctorExaminingModal","length","handleCloseSelectedDoctorExaminingModal","marginBottom","PopperComponent","Popper","clientWidth","undefined","placement","getOptionLabel","renderOption","onSelectDoctor","disableClearable","popupIcon","AlertProcessing","openAlertProcessing","getListProvince","getListDistrict","provinceId","getListWard","districtId","getFullAddressByIdWard","codeWard","ManageInfoPantients","dataPatientInfoDefault","examinationId","weight","headCircumference","vaccination","patient","identifier","address","fullName","gender","fullNameMother","phoneMother","fullNameFather","phoneFather","dataPatientInfoErrorDefault","title","isError","openTooltip","focus","examiningSession","province","district","ward","listGender","genderOrder","genderName","genderValue","selectedAutoCompleteDefault","openOption","typingRef","useRef","dateFieldRef","dataPatientInfoNotEdit","setDataPatientInfoNotEdit","dataPatientInfo","setDataPatientInfo","dataPatientInfoError","setDataPatientInfoError","selectedAutoComplete","setSelectedAutoComplete","listExaminingSession","setListExaminingSession","listProvince","setListProvince","listDistrict","setListDistrict","list","listWard","setListWard","focusField","setFocusField","setOpenAlertProcessing","tooltipTheme","createTheme","components","MuiTooltip","defaultProps","arrow","componentsProps","tooltip","bgcolor","slotProps","popper","modifiers","name","offset","handleFocus","fieldName","prevSelectedAutoComplete","handleBlur","handleKeyDown","test","preventDefault","filterOptions","inputValue","lowercasedInput","toLowerCase","filter","lowercasedFullName","initials","word","join","includes","onChangeDOBToGetExaminingSession","responseListMedicalExaminationsGiveRegister","formattedDate","exams","handleCloseModalInfoPantients","prevListDistrict","prevListWard","setSelectedPantientInfo","setOpenModalInfoPantients","handleUpdateMedicalRegister","checkValidate","_dataPatientInfoError","isValid","Object","values","every","item","current","updateMedicalRegister","setCompleteMedicalRegister","responseListProvince","handleGetListProvince","selectedPantientInfo","setIsContinueUpdateMedicalRegister","editPropsDataPatientInfo","cloneDeep","responseListDistrict","provinceCode","responseListWard","districtCode","selectedGender","find","indexListExamining","indexListProvince","indexListDistrict","indexListWard","wardCode","handleApplyPantientDataToField","openModalInfoPantients","isContinueUpdateMedicalRegister","pt","pb","flexWrap","ThemeProvider","Tooltip","marginTop","inputProps","maxLength","inputRef","input","defaultValue","takenValue","clearInterval","setTimeout","prevDataPatientsRegister","onChangeIdentifier","prevDataPatientInfo","onChangeFullName","onSelectGender","onFocus","onBlur","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DemoContainer","DatePicker","format","moment","disableFuture","disableOpenPicker","textField","_d","today","yearsDifference","getFullYear","monthsDifference","getMonth","daysDifference","getDate","age","totalMonths","totalDays","isNaN","onChangeDOB","noOptionsText","onSelectExaminingSession","size","onSelectProvine","onSelectDistrict","onSelectWard","onChangeAddress","onChangeFullNameMother","onChangePhoneMother","onChangeFullNameFather","onChangePhoneFather","onChangeHeight","onChangeWeight","onChangeHeadCircumference","FormControlLabel","control","Checkbox","checked","onChangeVaccination","bool","DialogActions","ListPatientsRegister","activeChip","setActiveChip","chipOrder","chipLabel","listPantientChipState","setListPantientChipState","chipContent","listDataPatientsRegister","setListDataPatientsRegister","listDataPatientsAppointmentsToday","setListDataPatientsAppointmentsToday","searchPatientsQuery","setSearchPatientsQuery","listDataPatientsRegisterState","setListDataPatientsRegisterState","listDataPatientsRegisterSort","setListDataPatientsRegisterSort","searchPatients","patients","searchTerm","lowerCaseSearchTerm","patientObj","handleGetRegistersByDateNow","responseGetAppointmentsToday","getAppointmentsToday","_listDataPatientsAppointmentsToday","updatedList","patientFullName","dateOfBirth","fullAddress","nextExamId","listPantientRegisterWaiting","patientsRegisterItem","listCountState","listPantientRegisterDone","setComponent1Loading","keyCode","document","addEventListener","removeEventListener","completeMedicalRegister","Skeleton","EditIcon","TableContainer","Paper","boxShadow","overflowX","pantientChipStateItem","pantientChipStateIndex","Badge","badgeContent","Chip","handleSelectedChip","chipIndex","placeholder","handleSearchPantient","startAdornment","SearchIcon","Table","stickyHeader","minWidth","TableHead","TableRow","TableCell","align","TableBody","patientsRegisterSortItem","patientsRegisterSortIndex","hover","role","onDoubleClick","responseVaccinationByPatientId","dataPantientOldOldDiseaseRegister","oldDisease","medicalTypeId","setDataPantientAppointmentsToday","handleSelectedPantientAppointmentsToday","handleSelectedPantientInfo","order","whiteSpace","overflow","textOverflow","ExaminingSession","isConfirmOpen","setIsConfirmOpen","onChangeRadioSelect","handleOpenConfirm","isAppointment","setIsContinueSelectedExaminingSession","setOpenModalExaminingSession","handleResetField","handleMedicalRegister","openModalExaminingSession","handleListMedicalExaminationsGiveRegister","isContinueSelectedExaminingSession","monthsOfAge","Grid","container","rowSpacing","xs","border","oldExams","oldExamItem","oldExamIndex","RadioGroup","examItem","examIndex","Radio","disabled","OldDisease","dataPatientsForSearchOldDiseaseDefault","phone","dataPatientsForSearchOldDiseaseErrorDefault","listFoundOldDisease","setListFoundOldDisease","dataPatientsForSearchOldDisease","setDataPatientsForSearchOldDisease","dataPatientsForSearchOldDiseaseError","setDataPatientsForSearchOldDiseaseError","selectedRowIndex","setSelectedRowIndex","formRef","tableRef","handleEnterPress","_dataPatientsForSearchOldDiseaseError","handleCloseModalOldDisease","setOpenModalOldDisease","handleFindOldDisease","validate","getListOldDisease","reset","querySelectorAll","forEach","dispatchEvent","Event","bubbles","handleApplyDataPatientOldDisease","foundOldDiseaseItem","setDataPatientsRegister","openModalOldDisease","ref","autoFocus","prevDataPatientsForSearchOldDisease","onChangePatientId","date","onChangeDayOfBirth","onChangePhone","tabIndex","prevIndex","Math","min","max","handleTableKeyDown","foundOldDiseaseIndex","selected","BookMedical","dataPatientsRegisterDefault","autocompleteValueDefault","medicalType","dataPatientsRegisterErrorDefault","listMedicalType","medicalTypeOrder","medicalTypeName","dataPatientsRegisterError","setDataPatientsRegisterError","autocompleteValue","setAutocompleteValue","firstFocusRef","prevAutocompleteValue","_dataPatientsRegisterError","dataPantientAppointmentsToday","handleMedicalBackRegister","responseCreateMedicalBackRegister","handleOpenModalOldDisease","getElementById","_autocompleteValue","indexListGender","indexListMedicalType","handleApplyPantientOldDiseaseData","handleApplyPantientAppointmentsTodayData","onF2Press","setOnF2Press","onF4Press","setOnF4Press","onF8Press","setOnF8Press","minHeight","PopperProps","WebkitTextFillColor","InputLabelProps","shrink","DateField","disablePortal","onSelectMedicalType","paddingLeft","paddingRight","multiline","rows","onChangeReason","MainMedicalRegister","component1Loading","currentDoctorExaminingDefault","setHandleResetField","handleOpenModalExaminingSession","setHandleOpenModalExaminingSession","setHandleOpenModalOldDisease","handleGetCurrentDoctorExamining","marginLeft","CompleteExamining","mainDataExaminingForConclusion","setMainDataExaminingForConclusion","textareaRef","classes","makeStyles","root","useStyles","handleCloseModalCompleteExamining","setOpenModalCompleteExamining","handleSetDataCompleteExamining","editDataExaminingForConclusion","clone","dataExaminingForConclusion","categories","categoriesItem","categoryContents","categoryContentsItem","categoryContentQuestions","responseAppointmentDate","medicalRegisterId","getAppointmentDate","appointmentDate","nextExamName","conclusion","setSelectionRange","openModalCompleteExamining","List","categoriesIndex","categoryName","categoryContentsIndex","categoryContentTitle","questionItem","questionIndex","borderRight","categoryContentName","categoryContentQuestionType","CheckBoxIcon","lineHeight","categoryContentCheck","categoryContentText","borderTop","categoryContentQuestionName","categoryContentAnswer","TextareaAutosize","categoryContentNote","onChangeExaminingConclusion","prevMainDataExaminingForConclusion","disablePast","onChangeAppointmentDate","oldDataPredecessor","cat2","isPredecessor","matchedCategory","cat1","content2","matchedContent","content1","question2","matchedQuestion","question1","categoryPres","categoriesHealthRecordExamining","isHealthRecord","responseAddMedicalBook","handleCompleteExaminingForPantient","some","handleAddMedicalBook","locale","PreviewLastExamining","previewDataExamining","setPreviewDataExamining","healthRecords","examinationName","timeUpdateState","medicakBook","nutritionals","vaccinationBook","fullDataPredecessor","setFullDataPredecessor","fullDataHealthRecord","setFullDataHealthRecord","loadingMedicalBook","setLoadingMedicalBook","openCollapsePredecessorItem","setOpenCollapsePredecessorItem","openCollapseMedicakBookItem","setOpenCollapseMedicakBookItem","prevDataExamining","responseMedicalBook","healthRecordsItem","newPredecessor","healthRecordUpdatePagination","categoriesHealthRecordItem","contentLength","currentContent","categoryPresItem","healthRecordsUpdate","newMedicalBook","medicalBookIdRecently","sort","a","b","categoryOrder","categoryPresUpdatePagination","handleEditPrevDataExamining","predecessorItem","predecessorIndex","ListItemButton","prevOpen","newOpen","handleOpenPredecessorItem","ListItemIcon","SendIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","Pagination","count","page","handeOnChangePagePredecessor","indexPredecessor","_previewDataExamining","medicakBookItems","medicakBookIndex","handleOpenMedicakBookItem","handeOnChangePageHealthRecords","indexMedicakbook","doctorFullName","MainDoctorExamining","dataPantientsReadyExaminingDefault","stt","patientsId","patientsName","patientsDOB","patientsMonthsOld","patientsGender","patientsHeight","patientsWeight","patientsHeadCircumference","patientsPhone","patientsAddress","dataPantientsReadyExamining","setDataPantientsReadyExamining","mainDataExamining","setMainDataExamining","setPrevDataExamining","prevDataExaminingWithoutOldPredecessor","setPrevDataExaminingWithoutOldPredecessor","openCollapseHealthRecords","setOpenCollapseHealthRecords","openCollapseHealthRecordsItem","setOpenCollapseHealthRecordsItem","categorySelectedExamining","setCategorySelectedExamining","contentCategorySelectedExamining","setContentCategorySelectedExamining","healthRecordsContents","setHealthRecordsContents","currentHealthRecordExamining","setCurrentHealthRecordExamining","currentContentExamining","setCurrentContentExamining","setDataExaminingForConclusion","setOldDataPredecessor","prevDataPredecessor","setPrevDataPredecessor","prevDataHealthRecords","setPrevDataHealthRecords","loadingPrevDataExamining","setLoadingPrevDataExamining","loadingPatient","setLoadingPatient","loadingInfoPatient","setLoadingInfoPatient","loadingCategoryExamining","setLoadingCategoryExamining","loadingContentsExamining","setLoadingContentsExamining","editExamining","index","handleAppyPantientData","handleGetMedicalDetailPatient","dataPantientItem","_dataPantientsReadyExamining","backRegister","handleSetMainDataExamining","_oldDataPredecessor","responseGetUpdatePredecessor","_oldDataPredecessorUpdate","category","content","q","_responseGetUpdatePredecessor","categoryPresOrder","isLock","editDataHealthRecordsForConclusion","editDataCategoryPresForConclusion","mainCategoryContentsExamining","categoryPresIndex","handleGetCategoryReExamining","responseGetUpdateMedicalBook","handleSetMainDataReExamining","responseGetUpdateMedicalBookData","updateHealthRecordsCategoriesForConclusion","demoDataExaminingForConclusion","healthRecordsName","categoryPatients","responseGetMedicalDetailPatient","responseDataExamining","handleSelectCategoryClick","categoryIncludeCotent","contentQuantity","editNewCategoryPreForContentCategorySelectedExamining","newCategoryPre","findHealthRecord","healthRecordsState","editHealthRecordsContent","categoryPatientsItem","categoryPatientsIndex","currentHealthRecordsContent","updateHealthRecordsContent","editDataHealthRecordsItemForConclusion","_dataExaminingForConclusion","dataHealthRecordsItemForConclusionItem","handleNoteCheckQuestionHealthRecords","_healthRecordsContents","createSelectedQuestionsExaminingForConclusion","currentCategory","categoryContentQuestion","questionOrder","isEditNote","categoryContentQuestionOrder","removeSelectedQuestion","existingQuestion","question","categoryContentQuestionsItem","handleCancelExamining","handleBeginExaminingForPantient","alert","handleBeginEditExaminingForPantient","dataPantientIndex","handleSelectPantientExamining","CheckCircleIcon","edge","findDataPredecessor","dataPredecessorItem","updatePredecessorCategoriesForConclusion","unshift","handleEditDataPredecessor","handleCancelEditDataPredecessor","findDataWithoutNewPredecessor","CancelIcon","handleSelectHealthRecords","healthRecordsContentsType","transform","healthRecordsIndex","handleSelectHealthRecordsItem","FiberManualRecordIcon","columnSpacing","sm","md","PinIcon","PersonIcon","MaleIcon","FemaleIcon","CalendarMonthIcon","InfoIcon","PhoneIcon","GiBodyHeight","GiWeightScale","TbRulerMeasure","Home","handleAnswerCheckQuestion","answer","_categorySelectedExamining","handleNoteCheckQuestion","categoryContentOrder","handleAnswerValueQuestion","DescriptionIcon","timeRegister","handleOpenHealthRecordsItem","handleAnswerCheckQuestionHealthRecords","categoryIndex","_contentCategorySelectedExamining","handeOnChangePageOldHealthRecords","handleOnChangePage","AppRoutes","HashRouter","Switch","App","Header","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2aAgDeA,MArCf,SAAoBC,GAEhB,OACIC,eAACC,IAAM,CAACC,WAAW,EAAMC,SAAU,KAAMC,KAAML,EAAMM,oBAAqBC,sBAAsB,EAAKC,SAAA,CACjGC,cAACC,IAAW,CAACC,GAAI,CAAEC,WAAY,SAAUC,SAAU,OAAQC,UAAW,SAAUC,MAAO,MAAOC,cAAe,aAAcR,SAAC,+CAC5HC,cAACQ,IAAU,CAACC,QAASA,IAAMlB,EAAMmB,wBAAuB,GAAQR,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACzGC,cAACc,IAAS,CAACV,SAAS,aAExBZ,eAACuB,IAAa,CAACC,UAAQ,EAACd,GAAI,CAACe,GAAI,OAAQC,GAAI,QAAQnB,SAAA,CACjDC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAC,mCAChEP,eAAC6B,IAAG,CAACnB,GAAI,CAACe,GAAI,MAAOC,GAAI,OAAOnB,SAAA,CAC5BC,cAACmB,IAAU,CAACjB,GAAI,CAACI,MAAO,QAASH,WAAY,UAAUJ,SAAC,iCACxDC,cAACmB,IAAU,CAAApB,SAAC,sFACZC,cAACmB,IAAU,CAACjB,GAAI,CAACI,MAAO,QAASH,WAAY,UAAUJ,SAAC,mEACxDC,cAACmB,IAAU,CAAApB,SAAC,iFACZC,cAACmB,IAAU,CAACjB,GAAI,CAACI,MAAO,QAASH,WAAY,UAAUJ,SAAC,6BACxDC,cAACmB,IAAU,CAAApB,SAAC,gTACZC,cAACmB,IAAU,CAACjB,GAAI,CAACI,MAAO,QAASH,WAAY,UAAUJ,SAAC,4CACxDC,cAACmB,IAAU,CAAApB,SAAC,mKAEpBC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAC,mBAChEP,eAAC6B,IAAG,CAACnB,GAAI,CAACe,GAAI,MAAOC,GAAI,OAAOnB,SAAA,CAC5BC,cAACmB,IAAU,CAACjB,GAAI,CAACI,MAAO,QAASH,WAAY,UAAUJ,SAAC,sBACxDC,cAACmB,IAAU,CAAApB,SAAC,iFACZC,cAACmB,IAAU,CAAApB,SAAC,+EACZC,cAACmB,IAAU,CAAApB,SAAC,yEACZC,cAACmB,IAAU,CAACjB,GAAI,CAACI,MAAO,QAASH,WAAY,UAAUJ,SAAC,wFAIhEC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAC,eAKpF,E,6CC9Ce,MAA0B,iC,uICiB1BuB,MAXf,SAAiC/B,GAC7B,OACIS,cAACuB,IAAQ,CAACrB,GAAI,CAAEI,MAAO,OAAQkB,OAASC,GAAUA,EAAMD,OAAOE,OAAS,EAAGC,gBAAiBpC,EAAMqC,iBAAmB,qBAAuB,sBAAwBhC,KAAML,EAAMsC,4BAA4B9B,SACxMP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAUjC,SAAA,CACtEC,cAACiC,IAAgB,CAAC3B,MAAM,YACxBN,cAACmB,IAAU,CAACjB,GAAI,CAACgC,GAAI,KAAOd,QAAQ,YAAWrB,SAAER,EAAM4C,iBAIvE,E,iBCbA,MAAMC,EAAa,gCAEbC,EAAeA,KACnB,MAAMC,EAAQC,aAAaC,QAAQ,OAOnC,MALe,CACbC,QAAS,CACPC,cAAc,UAADC,OAAYL,IAGhB,ECVTF,EAAa,gCAEbC,EAAeA,KACjB,MAAMC,EAAQC,aAAaC,QAAQ,OAOnC,MALe,CACbC,QAAS,CACPC,cAAc,UAADC,OAAYL,IAGhB,EAGXM,EAAwBC,UAC1B,MAAMP,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAMC,KAAK,GAADJ,OAAIP,EAAU,yBAAyBY,EAAsB,CAChFP,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAGhCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGAG,EAA4BR,UAC9B,MAAMP,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAMC,KAAK,GAADJ,OAAIP,EAAU,6BAA6BY,EAAsB,CACpFP,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAGhCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAsBAI,EAAuBT,UACzB,MAAMP,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAMC,KAAK,GAADJ,OAAIP,EAAU,+BAA+BmB,EAChE,CACId,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAIpCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGAM,EAAuBX,UACzB,MAAMP,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAMC,KAAK,GAADJ,OAAIP,EAAU,+BAA+BqB,EAChE,CACIhB,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAIpCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGAQ,EAAwBb,UAC1B,MAAMc,EAAStB,IACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,EAAU,sCAAsCuB,GACzEV,MAAK,SAAUC,GACZ,OAAOA,EAASW,IACpB,IACCV,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASY,MAC1B,GAAE,EAGAC,GAAyClB,UAC3C,MAAMc,EAAStB,IACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,EAAU,wDAAAO,OAAuDqB,GAAcL,GACxGV,MAAK,SAAUC,GACZ,OAAOA,EAASW,IACpB,IACCV,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASY,MAC1B,GAAE,EAcAG,GAA4BpB,UAC9B,MAAMc,EAAStB,IACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,EAAU,2CAAAO,OAA0CuB,GAAaP,GAC1FV,MAAK,SAAUC,GACZ,OAAOA,EAASW,IACpB,IACCV,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASY,MAC1B,GAAE,EAGAK,GAA4BtB,UAC9B,MAAMc,EAAStB,IACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,EAAU,mCAAmCuB,GACtEV,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASY,MAC1B,GAAE,EAGAM,GAA0BvB,UAC5B,MAAMc,EAAStB,IACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,EAAU,+BAAAO,OAA8B0B,GAAMV,GACvEV,MAAK,SAAUC,GACZ,OAAOA,EAASW,IACpB,IACCV,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASY,MAC1B,GAAE,EAGAQ,GAAiBzB,UACnB,MAAMc,EAAStB,IACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,EAAU,+CAAAO,OAA8C4B,GAAiBZ,GAClGV,MAAK,SAAUC,GACZ,OAAOA,EAASW,IACpB,IACCV,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGAsB,GAAuB3B,UACzB,MAAMc,EAAStB,IACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,EAAU,sCAAAO,OAAqCuB,GAAaP,GACrFV,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAGAuB,GAAuB5B,UACzB,MAAMc,EAAStB,IACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,EAAU,sCAAAO,OAAqC4B,GAAiBZ,GACzFV,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EAyCAwB,GAAqB7B,MAAOwB,EAAIM,KAClC,MAAMrC,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAM8B,IAAI,GAADjC,OAAIP,EAAU,gCAAAO,OAA+B0B,EAAE,WAAA1B,OAAUgC,GAAS,CAAC,EAAG,CACxFlC,QAAS,CACL,eAAgB,4BAChBC,cAAc,UAADC,OAAYL,MAGhCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,ECrPA2B,GAAcC,IAAMC,cAAc,MAElCC,GAAeC,IAAmB,IAAlB,SAAElF,GAAUkF,EAE9B,MAAMC,EAAc,CAChBC,iBAAiB,EACjBC,SAAS,EACT9C,MAAO,KAGJ+C,EAAMC,GAAWC,mBAASL,IAC1BM,EAASC,GAAcF,oBAAS,IAChC1D,EAA6B6D,GAAkCH,oBAAS,GAezEI,EAAY9C,UACd6C,GAA+B,GAC/B,MAAMxC,OFXOL,WACnB,MAAMc,EAAStB,IACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,EAAU,iCAAiCuB,GACpEV,MAAK,SAAUC,GACd,OAAOA,EAASW,IAClB,IACCV,OAAM,SAAUC,GACf,OAAOA,EAAMF,SAASY,MACxB,GAAE,EEG2B8B,GACvB,GAA6B,WAA1B1C,EAAS2C,aAA0B,CAClC,MAAMC,QAAuC3B,KACA,MAA1C2B,EAA+BhC,OAC9BwB,EAAQ,CACJH,iBAAiB,EACjBC,SAAS,EACTW,OAAQ7C,EAAS6C,OACjBC,aAAc9C,EAAS8C,aACvBH,aAAc3C,EAAS2C,aACvBI,yBAA0B/C,EAAS6C,SAAWD,EAA+BjC,KAAKqC,eAItFZ,EAAQ,CACJH,iBAAiB,EACjBC,SAAS,EACTW,OAAQ7C,EAAS6C,OACjBC,aAAc9C,EAAS8C,aACvBH,aAAc3C,EAAS2C,aACvBI,0BAA0B,GAGtC,MAEIX,EAAQ,CACJH,iBAAiB,EACjBC,SAAS,EACTW,OAAQ7C,EAAS6C,OACjBC,aAAc9C,EAAS8C,aACvBH,aAAc3C,EAAS2C,eAG/BJ,GAAW,GACXC,GAA+B,EAAM,EAWnCS,EAAiBA,KACnB,IAAIC,GAAS,EACTC,EAAS9D,aAAaC,QAAQ,OAClC,GAAG6D,EAAO,CACN,IAAIC,EAZMhE,KACd,IACE,OAAOiE,KAAKC,MAAMC,KAAKnE,EAAMoE,MAAM,KAAK,IAC1C,CAAE,MAAOC,GACP,OAAO,IACT,GAOoBC,CAASP,GACrBQ,EAAe,IAAIC,KAEvB,OAAmB,IAAhBR,EAAUS,IAAaF,EAAYG,WAElCzE,aAAa0E,WAAW,OACjBb,IAIPA,GAAS,EACFA,EAEf,CAEI,OAAOA,CACX,EAaJ,OAVAc,qBAAU,KACSf,IAEXR,IAGAL,EAAQJ,EACZ,GACD,IAGC1F,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAAC6E,GAAYuC,SAAQ,CAACC,MAAO,CAAEhC,OAAMG,UAAS8B,eAtF9B9B,IACpBC,KAAcD,EAAQ,EAqF4C+B,aA/FhDC,IAClBlC,EAAQ,IAAKkC,IACb/B,GAAW,EAAM,EA6F+DgC,cA1F9DA,KAClBnC,EAAQ,IAAKJ,GAAc,GAyFqEnF,SACvFA,IAGLC,cAACsB,EAAuB,CACpBO,4BAA6BA,EAC7BM,WAAY,8DAEjB,ECkBIuF,6BArHf,SAAgBnI,GAEd,MAAM,KAAE8F,EAAI,cAAEoC,GAAkBE,qBAAW9C,IAErC+C,EAAWC,wBACXC,EAAUC,wBAETlI,EAAqBa,GAA0B6E,oBAAS,IAGxDyC,EAAUC,GAAe1C,mBAAS,MAEnCjD,EAAQC,aAAaC,QAAQ,OAE7B5C,EAAOsI,QAAQF,GACfG,EAAeC,IACnBH,EAAYG,EAAMC,cAAc,EAG5BC,EAAcA,KAClBL,EAAY,KAAK,EAGbM,EAAgB,CACpB,CAAEC,IAAK,kBAAmB7I,SAAU,QAAS8I,MAAO,+BAAgBC,KAAM1I,cAAC2I,IAAiB,CAACzI,GAAI,CAACE,SAAU,MAAQwI,cAAeC,IAASC,GAAI,oBAChJ,CAAEN,IAAK,eAAgB7I,SAAU,OAAQ8I,MAAO,oBAAaC,KAAM1I,cAAC+I,IAAc,CAAC7I,GAAI,CAACE,SAAU,MAAQwI,cAAeC,IAASC,GAAI,oBAGlIE,EAAe,CACnB,CAAER,IAAK,YAAa7I,SAAU,QAAS8I,MAAO,oBAAaC,KAAM1I,cAACiJ,IAAoB,CAAC/I,GAAI,CAACE,SAAU,MAAQwI,cAAeC,IAASC,GAAI,sBAGtII,EAAc,CAClB,CAAEV,IAAK,cAAe7I,SAAU,OAAQ8I,MAAO,mBAAYC,KAAM1I,cAACmJ,IAAY,CAACjJ,GAAI,CAACE,SAAU,MAAQwI,cAAeC,IAASC,GAAI,gBAG7HM,EAAYC,GAAiB9D,mBAAS,IAOvC8B,GALmBiC,EAKK/J,EAAMqI,SAAS0B,SAJvBF,EAAWG,WAAUC,GAAUA,EAAOV,KAAOQ,KAD1CA,MAOzB,MAAMG,EAAeA,KACnBlH,aAAa0E,WAAW,OACxBQ,IACAQ,EAAY,MACZH,EAAQ4B,KAAK,SAAS,EAexB,OAZAxC,qBAAU,KACiB,YAAtB7B,EAAKQ,aACNwD,EAAcd,GAEc,WAAtBlD,EAAKQ,aACXwD,EAAcL,GAEc,UAAtB3D,EAAKQ,cACXwD,EAAcH,EAChB,GACC,CAAC7D,IAEqB,WAAtBuC,EAAS0B,SAER9J,eAAA2H,WAAA,CAAApH,SAAA,CACEC,cAACqB,IAAG,CAACnB,GAAI,CAAEyJ,MAAO,OAAQhJ,SAAU,QAASE,IAAK,GAAGd,SACnDC,cAAC4J,IAAM,CAAA7J,SACLP,eAACqK,IAAO,CAAC3J,GAAI,CAACyB,gBAAiB,UAAWmI,OAAQ,QAAQ/J,SAAA,CACxDC,cAAC+J,IAAI,CAACjB,GAAG,IAAG/I,SACVC,cAACgK,IAAM,CAACC,IAAKC,EAAMhK,GAAI,CAAEyJ,MAAO,GAAIG,OAAQ,GAAI5H,GAAI,OAAQiI,GAAI,OAAQC,GAAI,QAElD,IAAzB/E,EAAKF,iBAA4B7C,EAChC9C,eAAA2H,WAAA,CAAApH,SAAA,CACEC,cAACqK,IAAgB,CAACC,YAAU,EAACjD,MAAOA,EAClCnH,GAAI,CAAC4B,QAAS,OAAQyI,eAAgB,aAAc5I,gBAAiB,UAAW6I,SAAU,GAAGzK,SAC5FqJ,EAAWqB,KAAIC,GACd1K,cAAC2K,IAAsB,CAErBlC,MAAOiC,EAAWjC,MAClBC,KAAMgC,EAAWhC,KACjBE,cAAe8B,EAAW9B,cAC1BE,GAAI4B,EAAW5B,GACf5I,GAAI,CAACI,MAAO,OAAQX,SAAU+K,EAAW/K,WALpC+K,EAAWlC,SAUtBxI,cAAC4K,IAAM,CAACnK,QAAS0H,EAAajI,GAAI,CAACI,MAAO,OAAQC,cAAe,QAAQR,SAAEsF,EAAKW,eAChFxG,eAACqL,IAAI,CAAC7C,SAAUA,EAAUpI,KAAMA,EAAMkL,QAASxC,EAAYvI,SAAA,CACzDC,cAAC+K,IAAQ,CAAAhL,SAAC,qCACVC,cAAC+K,IAAQ,CAACtK,QAASgJ,EAAa1J,SAAC,gCAEnCC,cAACgL,IAAQ,CAACC,YAAY,2BAAY/K,GAAI,CAACI,MAAO,QAASF,SAAU,OAAQ8K,OAAQ,WAAYzK,QAASA,IAAMC,GAAuB,QAGnIV,cAAAmH,WAAA,CAAApH,SACEP,eAAC6B,IAAG,CAACnB,GAAI,CAACS,SAAU,WAAYC,MAAO,IAAIb,SAAA,CACzCC,cAAC6I,IAAO,CAACsC,OAAK,EAACrC,GAAG,SAAQ/I,SAACC,cAAC4K,IAAM,CAAC1K,GAAI,CAACK,cAAe,OAAQD,MAAO,QAAQP,SAAC,+BAC/EC,cAACgL,IAAQ,CAACC,YAAY,2BAAY/K,GAAI,CAACI,MAAO,QAASF,SAAU,OAAQ8K,OAAQ,WAAYzK,QAASA,IAAMC,GAAuB,iBAQnJV,cAACV,EAAU,CAACO,oBAAqBA,EAAqBa,uBAAwBA,OAK3EV,cAAAmH,WAAA,GAEX,ICtHeiE,OAlBQ7L,GACPgD,aAAaC,QAAQ,OAI/BxC,cAAAmH,WAAA,CAAApH,SACEC,cAACqL,QAAK,CAACC,KAAM/L,EAAM+L,KAAMC,UAAWhM,EAAMgM,cAM5CvL,cAAAmH,WAAA,CAAApH,SACEC,cAACwL,WAAQ,CAAC1C,GAAG,a,OCON2C,OArBCA,KACd,IAAI3D,EAAUC,uBAId,OACE/H,cAAA,OAAAD,SACEP,eAAA,OAAKkM,UAAU,UAAS3L,SAAA,CACtBC,cAAA,MAAI0L,UAAU,QAAO3L,SAAC,QACtBC,cAAA,OAAK0L,UAAU,OAAM3L,SAAC,0DAGtBC,cAAA,OAAAD,SACEC,cAAA,KAAG0L,UAAU,YAAYjL,QAASA,KAVxCqH,EAAQ4B,KAAK,IAU8C,EAAA3J,SAAC,uBAKtD,E,4FC0CK4L,OAjDQpM,IACnB,MAAOqM,EAAcC,GAAmBtG,oBAAS,GAI3CuG,EAA2BA,CAAC1D,EAAO2D,KACpCA,GAAqB,kBAAXA,GAIXxM,EAAMyM,sBAAqB,EAC7B,EAQF,OACIhM,cAAAmH,WAAA,CAAApH,SACEP,eAACC,IAAM,CAACE,SAAU,KAAMD,WAAW,EAAME,KAAML,EAAM0M,kBAAmBnB,QAASA,CAAC1C,EAAO2D,IAAWD,EAAyB1D,EAAO2D,GAASjM,sBAAsB,EAAKC,SAAA,CACtKC,cAACC,IAAW,CAACC,GAAI,CAAEgM,EAAG,EAAGC,EAAG,IAAKhM,WAAY,SAAUC,SAAU,QAASL,SAAC,+BAC3EC,cAACQ,IAAU,CAACC,QAASA,IAAMqL,IAA2B5L,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACjGC,cAACc,IAAS,CAACV,SAAS,aAEtBZ,eAACuB,IAAa,CAACC,UAAQ,EAAAjB,SAAA,CACrBC,cAACoM,KAAS,CAAC3D,MAAM,iBAASrH,QAAQ,WAAWlB,GAAI,CAAEyJ,MAAO,OAAQQ,GAAI,OACtEnK,cAACoM,KAAS,CAAC3D,MAAM,oBAAYrH,QAAQ,WAAWlB,GAAI,CAAEyJ,MAAO,OAAQQ,GAAI,OACzEnK,cAACoM,KAAS,CAAC3D,MAAM,qBAAWrH,QAAQ,WAAWiL,KAAMT,EAAe,OAAS,WAAY1L,GAAI,CAAEyJ,MAAO,OAAQQ,GAAI,KAChHmC,WAAY,CACVC,aACEvM,cAACwM,KAAc,CAAC7L,SAAS,MAAKZ,SAC5BP,eAACgB,IAAU,CAACC,QA9BEgM,IAAMZ,GAAiBD,GA8BS1L,GAAI,CAACwM,QAAS,OAAO3M,SAAA,CAAC,IAAE6L,EAAe5L,cAAC2M,KAAc,IAAM3M,cAAC4M,KAAiB,YAKpI5M,cAAC6M,KAAY,CAACC,QAxBP,CACf,CAACzI,GAAI,IAAKwB,aAAc,kCACxB,CAACxB,GAAI,IAAKwB,aAAc,mBAsBgB4E,KAAKsC,GAAWA,EAAOlH,eAAemH,YAAcC,GAAWjN,cAACoM,KAAS,IAAKa,EAAQxE,MAAM,mBAAavI,GAAI,CAAEyJ,MAAO,UAAWQ,GAAI,OACrKnK,cAACkN,KAAK,CAACC,QAAS,EAAGC,UAAU,SAAQrN,SACnCC,cAAC4K,IAAM,CAAC1K,GAAI,CAAE4J,OAAQ,MAAOH,MAAO,QAAUvI,QAAQ,YAAYd,MAAM,UAAU+M,MAAO,CAAEC,OAAQ,QAAU7M,QAASA,IAAMqL,IAA2B/L,SAAC,wCAK7J,EC6GIwN,OA9IDA,KACV,MAAM,KAAElI,EAAI,eAAEiC,EAAc,aAAEC,GAAiBI,qBAAW9C,IACpDiD,EAAUC,wBAETlG,EAA6B6D,GAAkCH,oBAAS,IAExEiI,EAAaC,GAAkBlI,mBAAS,CAACQ,OAAQ,GAAI2H,SAAU,MAC/DzB,EAAmBD,GAAwBzG,oBAAS,IACpDqG,EAAcC,GAAmBtG,oBAAS,GAsB3CoI,EAAc9K,UAChB,GAA4B,KAAzB2K,EAAYI,SACXC,IAAMzK,MAAM,wDAEX,GAA4B,KAAzBoK,EAAYE,SAChBG,IAAMzK,MAAM,wDAEZ,CACAsC,GAA+B,GAC/B,MAAMxC,OPlDAL,OAAOkD,EAAQ2H,UAClB5K,IAAMC,KAAK,GAADJ,OAAIP,EAAU,0BAA0B,CAAE2D,SAAQ2H,aACxEzK,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACf,OAAOA,EAAMF,QACf,IO2CiC4K,CAAUN,EAAYzH,OAAQyH,EAAYE,UAEjE,GADAhI,GAA+B,GACR,MAApBxC,EAASY,OACR+J,IAAMzK,MAAMF,EAASW,UAErB,CAEA,GADAtB,aAAawL,QAAQ,MAAO7K,EAASW,KAAKmK,SAAS1L,OACjB,WAA/BY,EAASW,KAAKgC,aAA0B,CACvC,MAAMC,QAAuC3B,KACA,MAA1C2B,EAA+BhC,OAC9ByD,EACI,CACIpC,iBAAiB,EACjBC,SAAS,EACTW,OAAQ7C,EAASW,KAAKkC,OACtBC,aAAc9C,EAASW,KAAKmC,aAC5BH,aAAc3C,EAASW,KAAKgC,aAC5BI,yBAA0B/C,EAASW,KAAKkC,SAAWD,EAA+BjC,KAAKqC,eAK/FqB,EACI,CAAEpC,iBAAiB,EAAMC,SAAS,EAAMW,OAAQ7C,EAASW,KAAKkC,OAAQC,aAAc9C,EAASW,KAAKmC,aAAcH,aAAc3C,EAASW,KAAKgC,aAAcI,0BAA0B,GAGhM,MAEIsB,EACI,CAAEpC,iBAAiB,EAAMC,SAAS,EAAMW,OAAQ7C,EAASW,KAAKkC,OAAQC,aAAc9C,EAASW,KAAKmC,aAAcH,aAAc3C,EAASW,KAAKgC,eAIlH,YAA/B3C,EAASW,KAAKgC,aACbiC,EAAQ4B,KAAK,oBAEsB,WAA/BxG,EAASW,KAAKgC,aAClBiC,EAAQ4B,KAAK,qBAGb5B,EAAQ4B,KAAK,IAErB,CACJ,GAoBJ,OAXAxC,qBAAU,KACF7B,IAAiC,IAAzBA,EAAKF,iBACb2C,EAAQ4B,KAAK,KAGHnH,aAAaC,QAAQ,QAE/BsF,EAAQ4B,KAAK,IACjB,GACD,IAGClK,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACiO,KAAS,CAACtO,SAAS,KAAII,SACpBC,cAACqB,IAAG,CAACnB,GAAI,CAAEgC,GAAI,EAAGgM,aAAc,QAASnO,SACrCP,eAAC6B,IAAG,CAACnB,GAAI,CAAEiM,EAAG,KAAMpM,SAAA,CAChBC,cAACgK,IAAM,CAACC,IAAKC,EAAMhK,GAAI,CAAEyJ,MAAO,IAAKG,OAAQ,IAAKqE,GAAI,OAAQ/D,GAAI,OAAQD,GAAI,KAC9EnK,cAACmB,IAAU,CAACjB,GAAI,CAAEG,UAAW,SAAUE,cAAe,YAAaJ,WAAY,SAAUC,SAAU,UAAW+J,GAAI,EAAG7J,MAAO,WAAac,QAAQ,KAAIrB,SAAC,kEACtJP,eAAC6B,IAAG,CAACkK,UAAU,OAAO6C,aAAa,MAAMf,MAAO,CAAEhN,UAAW,UAAWN,SAAA,CACpEC,cAACoM,KAAS,CAAC3D,MAAM,oBAAYrH,QAAQ,WAAWlB,GAAI,CAAEyJ,MAAO,OAAQQ,GAAI,KAAOkE,SAAW1H,IAAM2H,OAlG/FjH,EAkGgHV,EAAE4H,OAAOlH,WAjG/IoG,GAAee,IACJ,IACAA,EACHzI,OAAQsB,MAJMA,KAkGgI,IAClIrH,cAACoM,KAAS,CAAC3D,MAAM,qBAAWrH,QAAQ,WAAWiL,KAAMT,EAAe,OAAS,WAAY1L,GAAI,CAAEyJ,MAAO,OAAQQ,GAAI,GAClHkE,SAAW1H,IAAM8H,OA3FXpH,EA2FgCV,EAAE4H,OAAOlH,WA1FnEoG,GAAee,IACJ,IACAA,EACHd,SAAUrG,MAJQA,KA2FgD,EAACqH,UAAY/H,GA3BjEA,KACN,KAAZA,EAAEgI,OAA2B,UAAXhI,EAAEiI,MACpBjB,GACJ,EAwB6FkB,CAAiBlI,GACtF2F,WAAY,CACRC,aACIvM,cAACwM,KAAc,CAAC7L,SAAS,MAAKZ,SAC9BP,eAACgB,IAAU,CAACC,QA1GhBgM,IAAMZ,GAAiBD,GA0G2B1L,GAAI,CAACwM,QAAS,OAAO3M,SAAA,CAAC,IAAE6L,EAAe5L,cAAC2M,KAAc,IAAM3M,cAAC4M,KAAiB,YAKxIpN,eAAC0N,KAAK,CAACC,QAAS,EAAGC,UAAU,SAAQrN,SAAA,CACjCC,cAAC4K,IAAM,CAAC1K,GAAI,CAAE4J,OAAQ,QAASH,MAAO,QAAUvI,QAAQ,YAAYiM,MAAO,CAAEC,OAAQ,QAAU7M,QAAUkG,GAAMgH,IAAc5N,SAAC,6BAC9HP,eAAC2B,IAAU,CAACjB,GAAI,CAACG,UAAW,UAAWe,QAAQ,YAAWrB,SAAA,CAAC,sCAAmBC,cAAA,UAAQqN,MAAO,CAACnC,OAAQ,WAAYzK,QAASA,IAAMuL,GAAqB,GAAMjM,SAAC,yCAOjLC,cAAC8O,GAAQ,CACL7C,kBAAmBA,EAAmBD,qBAAsBA,IAGhEhM,cAACsB,EAAuB,CACpBO,4BAA6BA,EAA6B6D,+BAAgCA,EAC1FvD,WAAY,yCAEjB,E,kDC9BI4M,OA/Gf,SAAiCxP,GAC7B,MAAOiG,EAASC,GAAcF,oBAAS,IAChCyJ,EAAYC,GAAiB1J,mBAAS,KACtC2J,EAAgBC,GAAqB5J,mBAAS,MAoB/C6J,EAAqCvM,UACvC,GAAsB,OAAnBqM,EACCrB,IAAMzK,MAAM,uDAA8B,CAACiM,QAAS,gBAGpD,GAAGC,KAAEC,QAAQhQ,EAAMiQ,uBAAwBN,GACvCrB,IAAM4B,QAAQ,uDAA2B,CAACJ,QAAS,iBAEnD,CACA,MAAMnM,OPReL,WACjC,MAAMP,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAMC,KAAK,GAADJ,OAAIP,EAAU,kCAAAO,OAAiCuD,GAClE,CAAC,EACD,CACIzD,QAAS,CACL,eAAgB,4BAChBC,cAAc,UAADC,OAAYL,MAIpCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EORiCwM,CAA6BR,EAAehJ,cACnE2H,IAAM8B,QAAQzM,EAASW,KAAM,CAACwL,QAAS,aACvC9P,EAAMqQ,0BAA0BV,GAChC3P,EAAMsQ,qCAAoC,EAC9C,CACJ,EAGEC,EAAyBjN,UAC3B,MAAMK,OR5BWL,WACvB,MAAMc,EAAStB,IACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,EAAU,+BAA+BuB,GAClEV,MAAK,SAAUC,GACd,OAAOA,EAASW,IAClB,IACCV,OAAM,SAAUC,GACf,OAAOA,EAAMF,SAASY,MACxB,GAAE,EQoB2BiM,GAEvB,GADAd,EAAc/L,GACmC,KAA9C3D,EAAMiQ,uBAAuBtJ,aAAoB,CAChD,MAAM8J,EAA0B9M,EAASqG,WAAUyF,GAAcA,EAAWjJ,SAAWxG,EAAMiQ,uBAAuBtJ,eACpHiJ,EAAkBjM,EAAS8M,GAC/B,GAiBJ,OAdA9I,qBAAU,KAEN,GADAzB,GAAW,GACRlG,EAAM0Q,iCACL,GAAyB,IAAtBjB,EAAWkB,OACVJ,QAEA,CACA,MAAME,EAA0BhB,EAAWzF,WAAUyF,GAAcA,EAAWjJ,SAAWxG,EAAMiQ,uBAAuBtJ,eACtHiJ,EAAkBH,EAAWgB,GACjC,CAEJvK,GAAW,EAAM,GAClB,CAAClG,EAAMiQ,uBAAwBjQ,EAAM0Q,mCAGpCjQ,cAAAmH,WAAA,CAAApH,SACIP,eAACC,IAAM,CAACC,WAAW,EAAMC,SAAS,KAAKC,KAAML,EAAM0Q,iCAAkCnF,QAASA,CAAC1C,EAAO2D,IApD9DoE,EAAC/H,EAAO2D,KACjDA,GAAqB,kBAAXA,IAITxM,EAAMsQ,qCAAoC,GAC1CV,EAAkB,MACtB,EA6CqHgB,CAAwC/H,EAAO2D,GAASjM,sBAAsB,EAAKC,SAAA,CAChMC,cAACC,IAAW,CAACC,GAAI,CAAEgM,EAAG,EAAGC,EAAG,IAAKhM,WAAY,SAAUC,SAAU,QAASL,SAAER,EAAMiQ,uBAAyB,4CAAyB,qCACpIxP,cAACQ,IAAU,CAACC,QAASA,IAAMlB,EAAMsQ,qCAAoC,GAAO3P,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACrHC,cAACc,IAAS,CAACV,SAAS,aAExBJ,cAACe,IAAa,CAACC,UAAQ,EAAAjB,SAClByF,EACGxF,cAACiC,IAAgB,IAEjBjC,cAAAmH,WAAA,CAAApH,SACIP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4J,OAAQ,QAAQ/J,SAAA,CACtBC,cAAC6M,KAAY,CACTxF,MAAO6H,EACPhP,GAAI,CAACkQ,aAAc,QACnBtD,QAASkC,EACTqB,gBA3EV9Q,GACXS,cAACsQ,KAAM,IAAK/Q,EAAO8N,MAAO,CAAE1D,MAAOpK,EAAMyI,SAAWzI,EAAMyI,SAASuI,iBAAcC,GAAaC,UAAU,iBA2EnFC,eAAiB3D,GAAWA,EAAO/G,aACnC2K,aAAcA,CAACpR,EAAOwN,IAClB/M,cAAA,SAAQT,EAAKQ,SACRgN,EAAO/G,eAGhBqI,SAAUA,CAAC1H,EAAGU,IA9EvBuJ,EAACjK,EAAGU,KACvB8H,EAAmB,CAAEnJ,aAAcqB,EAAMrB,aAAcE,aAAcmB,EAAMtB,QAAU,EA6EjC6K,CAAejK,EAAGU,GAC1C2F,YAAcC,GACVjN,cAACoM,KAAS,IAAKa,EACXxE,MAAO,sCAGfoI,kBAAgB,EAChBC,UAAW,OAGf9Q,cAACkN,KAAK,CAACC,QAAS,EAAGC,UAAU,SAAQrN,SACjCC,cAAC4K,IAAM,CAAC1K,GAAI,CAAEyJ,MAAO,QAAUvI,QAAQ,YAAYd,MAAM,UAAU+M,MAAO,CAAEC,OAAQ,QAChF7M,QAASA,IAAM2O,IAAqCrP,SAAC,0BAU7F,EC9GegR,OAff,SAAyBxR,GACrB,OACIS,cAAAmH,WAAA,CAAApH,SACIC,cAACP,IAAM,CAACC,WAAW,EAAMC,SAAU,KAAMC,KAAML,EAAMyR,oBAAqBlR,sBAAsB,EAAKC,SACjGC,cAACe,IAAa,CAAAhB,SACVP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQyI,eAAgB,SAAUxI,cAAe,SAAUC,WAAY,UAAUjC,SAAA,CAChGC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,uCAMrE,E,wHClBA,MAAMqC,GAAa,gCAEbC,GAAeA,KACjB,MAAMC,EAAQC,aAAaC,QAAQ,OAOnC,MALe,CACbC,QAAS,CACPC,cAAc,UAADC,OAAYL,IAGhB,EAGX2O,GAAkBpO,UACpB,MAAMc,EAAStB,KACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,GAAU,oCAAoCuB,GACvEV,MAAK,SAAUC,GACZ,OAAOA,EAASW,IACpB,IACCV,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASY,MAC1B,GAAE,EAGAoN,GAAkBrO,UACpB,MAAMc,EAAStB,KACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,GAAU,oDAAAO,OAAmDwO,GAAcxN,GACpGV,MAAK,SAAUC,GACZ,OAAOA,EAASW,IACpB,IACCV,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASY,MAC1B,GAAE,EAGAsN,GAAcvO,UAChB,MAAMc,EAAStB,KACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,GAAU,gDAAAO,OAA+C0O,GAAc1N,GAChGV,MAAK,SAAUC,GACZ,OAAOA,EAASW,IACpB,IACCV,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASY,MAC1B,GAAE,EAGAwN,GAAyBzO,UAC3B,MAAMc,EAAStB,KACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,GAAU,+CAAAO,OAA8C4O,GAAY5N,GAC7FV,MAAK,SAAUC,GACZ,OAAOA,EAASW,IACpB,IACCV,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASY,MAC1B,GAAE,EC6+CS0N,OAlgDf,SAA6BjS,GAC3B,MAAMkS,EAAyB,CAC7BC,cAAe,GACf5H,OAAQ,GACR6H,OAAQ,GACRC,kBAAmB,GACnB7F,OAAQ,GACR8F,aAAa,EACbxN,GAAI,GACJyN,QAAS,CACPC,WAAY,GACZC,QAAS,GACTC,SAAU,GACVjO,WAAY,KACZuN,SAAU,GACVW,QAAQ,EACRC,eAAgB,GAChBC,YAAa,GACbC,eAAgB,GAChBC,YAAa,GACbpO,UAAW,KAITqO,EAA8B,CAClCR,WAAY,CAAES,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpEV,SAAU,CAAEO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClET,OAAQ,CAAEM,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChE3O,WAAY,CAAEwO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpEC,iBAAkB,CAAEJ,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC1EE,SAAU,CAAEL,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEG,SAAU,CAAEN,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEI,KAAM,CAAEP,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC9DX,QAAS,CAAEQ,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACjER,eAAgB,CAAEK,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACxEP,YAAa,CAAEI,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrEL,YAAa,CAAEE,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrE7I,OAAQ,CAAE0I,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEhB,OAAQ,CAAEa,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEf,kBAAmB,CAAEY,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,IAGvEK,EAAa,CACjB,CAACC,YAAa,EAAGC,WAAY,MAAOC,aAAa,GACjD,CAACF,YAAa,EAAGC,WAAY,UAAMC,aAAa,IAG5CC,EAA8B,CAClClB,OAAQ,CAAE7K,MAAO,KAAMgM,YAAY,GACnCT,iBAAkB,CAACvL,MAAO,KAAMgM,YAAY,EAAO7N,SAAS,GAC5DqN,SAAU,CAAExL,MAAO,KAAMgM,YAAY,GACrCP,SAAU,CAAEzL,MAAO,KAAMgM,YAAY,GACrCN,KAAM,CAAE1L,MAAO,KAAMgM,YAAY,IAG7BC,EAAYC,iBAAO,MACnBC,EAAeD,iBAAO,OAErB/N,EAASC,GAAcF,sBAEvBkO,EAAwBC,GAA6BnO,sBACrDoO,EAAiBC,GAAsBrO,mBAASkM,IAChDoC,EAAsBC,GAA2BvO,mBAASgN,IAE1DwB,EAAsBC,GAA2BzO,mBAAS6N,IAE1Da,EAAsBC,GAA2B3O,mBAAS,KAC1D4O,EAAcC,GAAmB7O,mBAAS,KAC1C8O,EAAcC,GAAmB/O,mBAAS,CAACgP,KAAM,GAAI/O,SAAS,KAC9DgP,EAAUC,GAAelP,mBAAS,CAACgP,KAAM,GAAI/O,SAAS,KAEtDkP,EAAYC,GAAiBpP,mBAAS,OAEtCyL,EAAqB4D,GAA0BrP,oBAAS,GAEzDsP,EAAeC,aAAY,CAC/BC,WAAY,CACVC,WAAY,CACVC,aAAc,CACZxE,UAAW,SACXyE,OAAO,EACPC,gBAAiB,CACfC,QAAS,CACPlV,GAAI,CACFmV,QAAS,YAGbH,MAAO,CACLhV,GAAI,CACFI,MAAO,aAIbgV,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN3I,QAAS,CACP4I,OAAQ,CAAC,GAAI,aAWzBC,EAAeC,IAEjB5B,EADe,WAAd4B,EACuBC,IACtBA,EAAyB3D,OAAOmB,YAAa,EACtC,IAAIwC,IAGO,qBAAdD,EACkBC,IACtBA,EAAyBjD,iBAAiBS,YAAa,EAChD,IAAIwC,IAGO,aAAdD,EACkBC,IACtBA,EAAyBhD,SAASQ,YAAa,EACxC,IAAIwC,IAGQ,aAAdD,EACiBC,IACtBA,EAAyB/C,SAASO,YAAa,EACxC,IAAIwC,IAIWA,IACtBA,EAAyB9C,KAAKM,YAAa,EACpC,IAAIwC,IAEf,EAGIC,EAAaA,CAACzO,EAAOuO,KACZ,KAAVvO,GAA0B,eAAVA,GAuED,KAAVA,IACW,WAAduO,EACD5B,GAAwB6B,IACtBA,EAAyB3D,OAAOmB,YAAa,EACtC,IAAIwC,MAGO,qBAAdD,EACN5B,GAAwB6B,IACtBA,EAAyBjD,iBAAiBS,YAAa,EAChD,IAAIwC,MAGO,aAAdD,EACN5B,GAAwB6B,IACxBA,EAAyBhD,SAASQ,YAAa,EACtC,IAAIwC,MAGO,aAAdD,EACN5B,GAAwB6B,IACtBA,EAAyB/C,SAASO,YAAa,EACxC,IAAIwC,MAGO,SAAdD,GACN5B,GAAwB6B,IACtBA,EAAyB9C,KAAKM,YAAa,EACpC,IAAIwC,MAGjB,EAGIE,EAAiB3N,IAChB,QAAQ4N,KAAK5N,EAAMI,MAAsB,cAAdJ,EAAMI,KAAqC,WAAdJ,EAAMI,KAAkC,cAAdJ,EAAMI,KAAqC,eAAdJ,EAAMI,KAAsC,QAAdJ,EAAMI,KAEtJJ,EAAM6N,gBACR,EAGIC,EAAgBA,CAACpJ,EAAO7H,KAAsB,IAApB,WAAEkR,GAAYlR,EAC5C,MAAMmR,EAAkBD,EAAWE,cAEnC,OAAOvJ,EAAQwJ,QAAOvJ,IACpB,MAAMwJ,EAAqBxJ,EAAOkF,SAASoE,cACrCG,EAAWzJ,EAAOkF,SAASvL,MAAM,KAAK+D,KAAIgM,GAAQA,EAAK,KAAIC,KAAK,IAAIL,cAE1E,OAAQE,EAAmBI,SAASP,IAAoBI,EAASG,SAASP,EAAgB,GAC1F,EAkIEQ,EAAmC/T,UACvCmR,GAAwB6B,IACtBA,EAAyBjD,iBAAiBvL,MAAQ,KAC3C,IAAIwO,MAGb7B,GAAwB6B,IACtBA,EAAyBjD,iBAAiBpN,SAAU,EAC7C,IAAIqQ,MAGb,MAAMgB,QAAoD9S,GAAuC+S,GACjG5C,EAAwB2C,EAA4CE,OAEpE/C,GAAwB6B,IACtBA,EAAyBjD,iBAAiBpN,SAAU,EAC7C,IAAIqQ,KACX,EAobEmB,EAAgCA,CAAC5O,EAAO2D,KACzCA,GAAqB,kBAAXA,IAIXuI,GAAgB2C,IACdA,EAAiBzR,SAAU,EAC3ByR,EAAiB1C,KAAO,GACjB,IAAI0C,MAEbxC,GAAYyC,IACVA,EAAa1R,SAAU,EACvB0R,EAAa3C,KAAO,GACb,IAAI2C,MAEbhD,EAAwB,IACxBF,EAAwBZ,GACxBQ,EAAmBnC,GACnBiC,EAA0B,IAC1BI,EAAwBvB,GACxB9M,GAAW,GACXlG,EAAM4X,0BACN5X,EAAM6X,2BAA0B,GAClC,EA2QIC,EAA8BxU,UAClC,GAzMoByU,MAClB,MAAMC,EAAwB,IAAI1D,GAClC,IAAI2D,GAAU,EAmMd,MAjM6C,KAA1C3D,EAAqB9B,WAAWS,QAC9BiF,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBxF,WAAWY,OAAQ,EACzCgC,EAAc,eAEhB6C,GAAU,GAG4B,KAArC7D,EAAgB7B,QAAQG,WACzBsF,EAAsBtF,SAASO,MAAQ,8CACvC+E,EAAsBtF,SAASS,aAAc,EAC7C6E,EAAsBtF,SAASQ,SAAU,EACtCgF,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBtF,SAASU,OAAQ,EACvCgC,EAAc,aAEhB6C,GAAU,GAG0B,KAAnC7D,EAAgB7B,QAAQI,SACzBqF,EAAsBrF,OAAOM,MAAQ,iDACrC+E,EAAsBrF,OAAOO,SAAU,EACvC8E,EAAsBrF,OAAOQ,aAAc,EACxC+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBrF,OAAOS,OAAQ,EACrCgC,EAAc,WAEhB6C,GAAU,GAG8B,KAAvC7D,EAAgB7B,QAAQ9N,aACzBuT,EAAsBvT,WAAWwO,MAAQ,4CACzC+E,EAAsBvT,WAAWyO,SAAU,EAC3C8E,EAAsBvT,WAAW0O,aAAc,EAC5C+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBvT,WAAW2O,OAAQ,EACrCa,EAAaqE,SACfrE,EAAaqE,QAAQlF,SAGzB6E,GAAU,GAGiC,KAA1C3D,EAAqB7P,WAAWwO,QACjC+E,EAAsBvT,WAAWyO,SAAU,EACxCgF,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBvT,WAAW2O,OAAQ,EACrCa,EAAaqE,SACfrE,EAAaqE,QAAQlF,SAGzB6E,GAAU,GAGuC,OAAhDzD,EAAqBnB,iBAAiBvL,QACvCkQ,EAAsB3E,iBAAiBJ,MAAQ,wDAC/C+E,EAAsB3E,iBAAiBH,SAAU,EACjD8E,EAAsB3E,iBAAiBF,aAAc,EAClD+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsB3E,iBAAiBD,OAAQ,EAC/CgC,EAAc,qBAEhB6C,GAAU,GAG+B,OAAxCzD,EAAqBlB,SAASxL,QAC/BkQ,EAAsB1E,SAASL,MAAQ,kDACvC+E,EAAsB1E,SAASJ,SAAU,EACzC8E,EAAsB1E,SAASH,aAAc,EAC1C+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsB1E,SAASF,OAAQ,EACvCgC,EAAc,aAEhB6C,GAAU,GAG+B,OAAxCzD,EAAqBjB,SAASzL,QAC/BkQ,EAAsBzE,SAASN,MAAQ,oDACvC+E,EAAsBzE,SAASL,SAAU,EACzC8E,EAAsBzE,SAASJ,aAAc,EAC1C+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBzE,SAASH,OAAQ,EACvCgC,EAAc,aAEhB6C,GAAU,GAG2B,OAApCzD,EAAqBhB,KAAK1L,QAC3BkQ,EAAsBxE,KAAKP,MAAQ,sDACnC+E,EAAsBxE,KAAKN,SAAU,EACrC8E,EAAsBxE,KAAKL,aAAc,EACtC+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBxE,KAAKJ,OAAQ,EACnCgC,EAAc,SAEhB6C,GAAU,GAG2B,KAApC7D,EAAgB7B,QAAQE,UACzBuF,EAAsBvF,QAAQQ,MAAQ,sDACtC+E,EAAsBvF,QAAQS,SAAU,EACxC8E,EAAsBvF,QAAQU,aAAc,EACzC+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBvF,QAAQW,OAAQ,EACtCgC,EAAc,YAEhB6C,GAAU,GAGkC,KAA3C7D,EAAgB7B,QAAQK,gBAAoE,KAA3CwB,EAAgB7B,QAAQO,iBAC1EkF,EAAsBpF,eAAeK,MAAQ,qDAC7C+E,EAAsBpF,eAAeM,SAAU,EAC/C8E,EAAsBpF,eAAeO,aAAc,EAChD+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBpF,eAAeQ,OAAQ,EAC7CgC,EAAc,mBAEhB6C,GAAU,GAG+B,KAAxC7D,EAAgB7B,QAAQM,aAA8D,KAAxCuB,EAAgB7B,QAAQQ,cACvEiF,EAAsBnF,YAAYI,MAAQ,iEAC1C+E,EAAsBnF,YAAYK,SAAU,EAC5C8E,EAAsBnF,YAAYM,aAAc,EAC7C+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBnF,YAAYO,OAAQ,EAC1CgC,EAAc,gBAEhB6C,GAAU,GAGmC,KAA5CD,EAAsBnF,YAAYI,QACnC+E,EAAsBnF,YAAYK,SAAU,EACzCgF,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBnF,YAAYO,OAAQ,EAC1CgC,EAAc,gBAEhB6C,GAAU,GAGmC,KAA5CD,EAAsBjF,YAAYE,QACnC+E,EAAsBjF,YAAYG,SAAU,EACzCgF,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBjF,YAAYK,OAAQ,EAC1CgC,EAAc,gBAEhB6C,GAAU,GAGkB,KAA3B7D,EAAgB7J,SACjByN,EAAsBzN,OAAO0I,MAAQ,8CACrC+E,EAAsBzN,OAAO2I,SAAU,EACvC8E,EAAsBzN,OAAO4I,aAAc,EACxC+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsBzN,OAAO6I,OAAQ,EACrCgC,EAAc,WAEhB6C,GAAU,GAGkB,KAA3B7D,EAAgBhC,SACjB4F,EAAsB5F,OAAOa,MAAQ,gDACrC+E,EAAsB5F,OAAOc,SAAU,EACvC8E,EAAsB5F,OAAOe,aAAc,EACxC+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsB5F,OAAOgB,OAAQ,EACrCgC,EAAc,WAEhB6C,GAAU,GAG6B,KAAtC7D,EAAgB/B,oBACjB2F,EAAsB3F,kBAAkBY,MAAQ,6DAChD+E,EAAsB3F,kBAAkBa,SAAU,EAClD8E,EAAsB3F,kBAAkBc,aAAc,EACnD+E,OAAOC,OAAOH,GAAuBI,OAAMC,IAAuB,IAAfA,EAAKjF,UACzD4E,EAAsB3F,kBAAkBe,OAAQ,EAChDgC,EAAc,sBAEhB6C,GAAU,IAQ8C,IAAvDlI,KAAEC,QAAQoE,EAAiBF,KAC5B5F,IAAM4B,QAAQ,iEAAgC,CAACJ,QAAS,aACxDmI,GAAU,GAGZ1D,EAAwByD,GACjBC,CAAO,EAIbF,GAAgB,CACjB1C,GAAuB,GACvB,MAAM1R,OVx7BkBL,WAC1B,MAAMP,EAAQC,aAAaC,QAAQ,OACnC,aAAaM,IAAM8B,IAAI,GAADjC,OAAIP,EAAU,6BAA6BY,EAAsB,CACnFP,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAADC,OAAYL,MAGhCW,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EU26BuB4U,CAAsBnE,GACtB,MAApBzQ,EAASY,QACV+J,IAAM8B,QAAQzM,EAASW,KAAM,CAACwL,QAAS,aACvC9P,EAAMwY,4BAA2B,GACjCf,MAGAnJ,IAAMzK,MAAMF,EAASW,KAAM,CAACwL,QAAS,WACrC9P,EAAMwY,4BAA2B,GACjCf,KAEFpC,GAAuB,EACzB,GAuBF,OApBA1N,qBAAU,KACmB,IAAxBiN,EAAajE,QA3RYrN,WAC5B,MAAMmV,QAA6B/G,KACnCmD,EAAgB4D,EAAqB,EA0RnCC,EACF,GACC,IAEH/Q,qBAAU,KACL3H,EAAM2Y,uBACP3Y,EAAM4Y,oCAAmC,GA7RNtV,WACrC+R,GAAuB,GAEvB,MAAMwD,EAA2B,IAAIzE,GACrCyE,EAAyB1G,cAAgBnS,EAAM2Y,qBAAqBxG,cACpE0G,EAAyBtO,OAASvK,EAAM2Y,qBAAqBpO,OAC7DsO,EAAyBzG,OAASpS,EAAM2Y,qBAAqBvG,OAC7DyG,EAAyBxG,kBAAoBrS,EAAM2Y,qBAAqBtG,kBACxEwG,EAAyBrM,OAASxM,EAAM2Y,qBAAqBnM,OAC7DqM,EAAyBvG,YAActS,EAAM2Y,qBAAqBrG,YAClEuG,EAAyB/T,GAAK9E,EAAM2Y,qBAAqB7T,GACzD+T,EAAyBtG,QAAQC,WAAaxS,EAAM2Y,qBAAqBpG,QAAQC,WACjFqG,EAAyBtG,QAAQE,QAAUzS,EAAM2Y,qBAAqBpG,QAAQE,QAC9EoG,EAAyBtG,QAAQG,SAAW1S,EAAM2Y,qBAAqBpG,QAAQG,SAC/EmG,EAAyBtG,QAAQ9N,WAAazE,EAAM2Y,qBAAqBpG,QAAQ9N,WACjFoU,EAAyBtG,QAAQP,SAAWhS,EAAM2Y,qBAAqBpG,QAAQP,SAC/E6G,EAAyBtG,QAAQI,OAAS3S,EAAM2Y,qBAAqBpG,QAAQI,OAC7EkG,EAAyBtG,QAAQK,eAAiB5S,EAAM2Y,qBAAqBpG,QAAQK,eACrFiG,EAAyBtG,QAAQM,YAAc7S,EAAM2Y,qBAAqBpG,QAAQM,YAClFgG,EAAyBtG,QAAQO,eAAiB9S,EAAM2Y,qBAAqBpG,QAAQO,eACrF+F,EAAyBtG,QAAQQ,YAAc/S,EAAM2Y,qBAAqBpG,QAAQQ,YAClF8F,EAAyBtG,QAAQ5N,UAAY3E,EAAM2Y,qBAAqBpG,QAAQ5N,UAEhF0P,EAAmBtE,KAAE+I,UAAUD,IAC/B1E,EAA0BpE,KAAE+I,UAAUD,IAEtC,MAAMlV,QAAiBoO,GAAuB/R,EAAM2Y,qBAAqBpG,QAAQP,UAC3E+G,QAA6BpH,GAAgBhO,EAASqV,cAC5DjE,GAAgB2C,IACdA,EAAiB1C,KAAO+D,EACjB,IAAIrB,MAEb,MAAMuB,QAAyBpH,GAAYlO,EAASuV,cACpDhE,GAAYyC,IACVA,EAAa3C,KAAOiE,EACb,IAAItB,MAEb,MAAML,QAAoD9S,GAAuCxE,EAAM2Y,qBAAqBpG,QAAQ9N,YACpIkQ,EAAwB2C,EAA4CE,OAEpE,MAAM2B,EAAiB1F,EAAW2F,MAAKzG,GAAUA,EAAOiB,cAAgB5T,EAAM2Y,qBAAqBpG,QAAQI,SACrG0G,EAAqB/B,EAA4CE,MAAMxN,WAAUqJ,GAAoBA,EAAiBvO,KAAO9E,EAAM2Y,qBAAqBxG,gBACxJmH,EAAoB1E,EAAa5K,WAAUsJ,GAAYA,EAASjE,OAAS1L,EAASqV,eAClFO,EAAoBR,EAAqB/O,WAAUuJ,GAAYA,EAASlE,OAAS1L,EAASuV,eAC1FM,EAAgBP,EAAiBjP,WAAUwJ,GAAQA,EAAKnE,OAAS1L,EAAS8V,WAEhFhF,GAAyB6B,IACvBA,EAAyB3D,OAAO7K,MAAQqR,EACxC7C,EAAyBjD,iBAAiBvL,MAAQwP,EAA4CE,MAAM6B,GACpG/C,EAAyBhD,SAASxL,MAAQ8M,EAAa0E,GACvDhD,EAAyB/C,SAASzL,MAAQiR,EAAqBQ,GAC/DjD,EAAyB9C,KAAK1L,MAAQmR,EAAiBO,GAChDlD,KAGTpQ,GAAW,GACXmP,GAAuB,EAAM,EAsO3BqE,GACF,GACC,CAAC1Z,EAAM2Y,uBAEVhR,qBAAU,KACL3H,EAAM2Z,wBAA0B3Z,EAAM4Z,kCAA+C,IAAZ3T,IAC1E6R,IACA9X,EAAM4Y,oCAAmC,GAC3C,GACC,CAAC5Y,EAAM4Z,gCAAiC3T,IAGzChG,eAAA2H,WAAA,CAAApH,SAAA,CACEP,eAACC,IAAM,CAACC,WAAW,EAAMC,SAAS,KAAKC,KAAML,EAAM2Z,uBAAwBpO,QAASA,CAAC1C,EAAO2D,IAAWiL,EAA8B5O,EAAO2D,GAAQhM,SAAA,CAClJC,cAACC,IAAW,CAACC,GAAI,CAAEiM,EAAG,EAAGhM,WAAY,SAAUC,SAAU,OAAQC,UAAW,SAAUC,MAAO,QAASP,SAAC,mCACvGC,cAACQ,IAAU,CAACC,QAASA,IAAMuW,IAAiC9W,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACvGC,cAACc,IAAS,CAACV,SAAS,aAEtBJ,cAACe,IAAa,CAACC,UAAQ,EAACd,GAAI,CAACkZ,GAAI,IAAKC,GAAI,KAAKtZ,SAC7CP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQyI,eAAgB,gBAAiB+O,SAAU,OAAQrY,GAAI,IAAKC,GAAI,IAAKiJ,GAAI,IAAKpK,SAAA,CAEzGC,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqB9B,WAAWS,QAAa5S,KAAMiU,EAAqB9B,WAAWW,YAAajC,UAAU,OAAM1Q,SAC7JC,cAACoM,KAAS,CAAChJ,OAA0D,IAA5CyQ,EAAqB9B,WAAWU,QACvDhK,MAAM,4BAAerH,QAAQ,WAC7BlB,GAAI,CAACyJ,MAAO,MAAO,sBAAwB,CAAC8P,UAAW,UACvDC,WAAY,CAAEC,UAAW,IACzBC,SAAWC,GAAUA,GAAwB,eAAfnF,GAA+BmF,EAAMlH,QACnEmH,aAAcnG,EAAgB7B,QAAQC,WACtC1D,SAAW1H,GA95BGU,KAC1B,GAAa,KAAVA,EAAa,CACI,eAAfqN,GACDC,EAAc,MAGhB,MAAMoF,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAC7B,MAAM1C,EAAwB,IAAI1D,GAC/BkG,EAAW7J,OAAS,IACrBqH,EAAsBxF,WAAWS,MAAQ,8DACzC+E,EAAsBxF,WAAWW,aAAc,EAC/C6E,EAAsBxF,WAAWU,SAAU,EAC3C8E,EAAsBxF,WAAWY,OAAQ,EACzCmB,EAAwByD,KAGxB3D,GAAmBsG,IACjBA,EAAyBpI,QAAQC,WAAagI,EACvC,IAAKG,MAGd3C,EAAsBxF,WAAWS,MAAQ,GACzC+E,EAAsBxF,WAAWW,aAAc,EAC/C6E,EAAsBxF,WAAWU,SAAU,EAC3C8E,EAAsBxF,WAAWY,OAAQ,EACzCmB,EAAwByD,GAC1B,GACC,IACL,KACI,CACgB,eAAf7C,GACDC,EAAc,MAGhB,MAAM4C,EAAwB,IAAI1D,GAClC0D,EAAsBxF,WAAWS,MAAQ,GACzC+E,EAAsBxF,WAAWW,aAAc,EAC/C6E,EAAsBxF,WAAWU,SAAU,EAC3C8E,EAAsBxF,WAAWY,OAAQ,EACzCmB,EAAwByD,EAC1B,GAi3B6B4C,CAAmBxT,EAAE4H,OAAOlH,aAKnDrH,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqB5B,SAASO,QAAa5S,KAAMiU,EAAqB5B,SAASS,YAAajC,UAAU,MACnJ6E,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN3I,QAAS,CAAE4I,OAAQ,EAAE,IAAK,QAIhC3V,SAEFC,cAACoM,KAAS,CAAChJ,OAAwD,IAA1CyQ,EAAqB5B,SAASQ,QACrDhK,MAAM,iBAASrH,QAAQ,WACvBlB,GAAI,CAACyJ,MAAO,MAAO,sBAAwB,CAAC8P,UAAW,UACvDG,SAAWC,GAAUA,GAAwB,aAAfnF,GAA6BmF,EAAMlH,QACjEmH,aAAcnG,EAAgB7B,QAAQG,SACtC5D,SAAW1H,GAr4BCU,KACxB,MAAM0S,EAAa1S,EAEhBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAU7B,GATArG,GAAmBwG,IACnBA,EAAoBtI,QAAQG,SAAW8H,EAC9B,IAAIK,MAGK,aAAf1F,GACDC,EAAc,MAGbd,EAAqB5B,SAASQ,QAAQ,CACvC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBtF,SAASO,MAAQ,GACvC+E,EAAsBtF,SAASS,aAAc,EAC7C6E,EAAsBtF,SAASQ,SAAU,EACzC8E,EAAsBtF,SAASU,OAAQ,EACvCmB,EAAwByD,EAC1B,IACC,IAAI,EA42BsB8C,CAAiB1T,EAAE4H,OAAOlH,aAKjDrH,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqB3B,OAAOM,QAAa5S,KAAMiU,EAAqB3B,OAAOQ,YAAajC,UAAU,MAAK1Q,SACpJC,cAAC6M,KAAY,CACX3M,GAAI,CAACyJ,MAAO,MAAO8P,UAAW,SAC9B3M,QAASkG,EACTtC,eAAiB3D,GAAWA,EAAOmG,WACnC7L,MAAO0M,EAAqB7B,OAAO7K,MACnCsJ,aAAcA,CAACpR,EAAOwN,IACpB/M,cAAA,SAAQT,EAAKQ,SACVgN,EAAOmG,aAGZ7E,SAAUA,CAAC1H,EAAGU,IAnzBLiT,EAAC3T,EAAGU,KAezB,GAdkB,WAAfqN,GACDC,EAAc,MAGhBf,GAAmBwG,IACjBA,EAAoBtI,QAAQI,OAAS7K,EAAM8L,YACpC,IAAIiH,MAGbpG,GAAyB6B,IACvBA,EAAyB3D,OAAO7K,MAAQA,EAClC,IAAIwO,MAGThC,EAAqB3B,OAAOO,QAAQ,CACrC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBrF,OAAOO,SAAU,EACvC8E,EAAsBrF,OAAOM,MAAQ,GACrC+E,EAAsBrF,OAAOQ,aAAc,EAC3C6E,EAAsBrF,OAAOS,OAAQ,EACrCmB,EAAwByD,EAC1B,GA6xBoC+C,CAAe3T,EAAGU,GAC1CzH,KAAMmU,EAAqB7B,OAAOmB,WAClCkH,QAASA,IAAM5E,EAAY,UAC3B6E,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,UAC1C2F,YAAcC,GACZjN,cAACoM,KAAS,IAAKa,EACbxE,MAAM,oBACNmR,SAAWC,GAAUA,GAAwB,WAAfnF,GAA2BmF,EAAMlH,QAC/DvP,OAAsD,IAAxCyQ,EAAqB3B,OAAOO,UAG9C5B,kBAAgB,EAChBC,UAAW,WAKjB9Q,cAACya,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAI7a,SAClEC,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAAC6a,KAAa,CAAC9F,WAAY,CAAC,cAAchV,SACxCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqB7P,WAAWwO,QAAa5S,KAAMiU,EAAqB7P,WAAW0O,YAAY3S,SAC5IC,cAACqB,IAAG,CAACnB,GAAI,CAACyJ,MAAO,KAAK5J,SACpBC,cAAC8a,KAAU,CAACrS,MAAM,eAChBsS,OAAO,aAAajB,aAAckB,KAAOrH,EAAgB7B,QAAQ9N,YACjEiX,eAAe,EAAMC,mBAAiB,EACtC5F,UAAW,CACT6F,UACE,CACEvB,SAAUpG,EACVpQ,OAA0D,IAA5CyQ,EAAqB7P,WAAWyO,QAC9C+H,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,gBAGhDgH,SAAWhH,GA35BXxE,WAClB,GAAGwE,EAAM,CACP,MAAM0S,EAAa1S,EAAM+T,GACtB9H,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAC7B,MAAMoB,EAAQ,IAAIvU,KACZwU,EAAkBD,EAAME,cAAgBxB,EAAWwB,cACnDC,EAAmBH,EAAMI,WAAa1B,EAAW0B,WACjDC,EAAiBL,EAAMM,UAAY5B,EAAW4B,UAC9CC,EAAMP,EAAME,cAAgBxB,EAAWwB,cAE7C,IAAIM,EAAgC,GAAlBP,EAAuBE,EACrCM,EAAYJ,EAEZA,EAAiB,IACnBG,GAAe,EACfC,GAAa,IAGf,MAAMvE,EAAwB,IAAI1D,GAElC,GAAGwH,EAAQtB,GAAcgC,MAAMH,IAAQC,EAAc,IAAuB,KAAhBA,GAAsBC,EAAY,GAC5FvE,EAAsBvT,WAAWwO,MAAQ,sFACzC+E,EAAsBvT,WAAW0O,aAAc,EAC/C6E,EAAsBvT,WAAWyO,SAAU,EAC3C8E,EAAsBvT,WAAW2O,OAAQ,EACzCmB,EAAwByD,OAGtB,CACF,MAAMT,EAAgBkE,KAAOjB,GAAYgB,OAAO,cAChDnH,GAAmBwG,IACjBA,EAAoBtI,QAAQ9N,WAAa8S,EAClC,IAAIsD,MAGb7C,EAAsBvT,WAAWwO,MAAQ,GACzC+E,EAAsBvT,WAAW0O,aAAc,EAC/C6E,EAAsBvT,WAAWyO,SAAU,EAC3C8E,EAAsBvT,WAAW2O,OAAQ,EACzCmB,EAAwByD,GAExBX,EAAiCE,EACnC,IACC,IACL,GA22BuCkF,CAAY3U,eAQ7CrH,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqBjB,iBAAiBJ,QAAa5S,KAAMiU,EAAqBjB,iBAAiBF,YAAajC,UAAU,QAAO1Q,SAC1KC,cAAC6M,KAAY,CACX3M,GAAI,CAACyJ,MAAO,MAAOzH,GAAI,SACvB4K,QAASmH,EACTgI,cAAelI,EAAqBnB,iBAAiBpN,QAAU,wBAAgB,GAC/EkL,eAAiB3D,GAAWA,EAAO0I,KACnCpO,MAAO0M,EAAqBnB,iBAAiBvL,MAC7CsJ,aAAcA,CAACpR,EAAOwN,IACpB/M,cAAA,SAAQT,EAAKQ,SACVgN,EAAO0I,OAGZpH,SAAUA,CAAC1H,EAAGU,IAh1BK6U,EAACvV,EAAGU,KAenC,GAdkB,qBAAfqN,GACDC,EAAc,MAGhBf,GAAmBwG,IACjBA,EAAoB1I,cAAgBrK,EAAMhD,GACnC,IAAI+V,MAGbpG,GAAyB6B,IACvBA,EAAyBjD,iBAAiBvL,MAAQA,EAC5C,IAAIwO,MAGThC,EAAqBjB,iBAAiBH,QAAQ,CAC/C,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsB3E,iBAAiBH,SAAU,EACjD8E,EAAsB3E,iBAAiBJ,MAAQ,GAC/C+E,EAAsB3E,iBAAiBF,aAAc,EACrD6E,EAAsB3E,iBAAiBD,OAAQ,EAC/CmB,EAAwByD,EAC1B,GA0zBoC2E,CAAyBvV,EAAGU,GACpDzH,KAAMmU,EAAqBnB,iBAAiBS,WAC5CkH,QAASA,IAAM5E,EAAY,oBAC3B6E,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,oBAC1C2F,YAAcC,GACZjN,cAACoM,KAAS,IAAKa,EACbxE,MAAM,kBACNmR,SAAWC,GAAUA,GAAwB,qBAAfnF,GAAqCmF,EAAMlH,QACzEvP,OAAgE,IAAlDyQ,EAAqBjB,iBAAiBH,QACpDvS,GAAI,CAAC,yKAA0K,CAACe,GAAI,MAAOC,GAAI,QAC/LoL,WAAY,IACPW,EAAOX,WACVC,aACE/M,eAAA2H,WAAA,CAAApH,SAAA,CACGgU,EAAqBnB,iBAAiBpN,QAAUxF,cAACiC,IAAgB,CAAC3B,MAAM,UAAU6b,KAAM,KAAS,KACjGlP,EAAOX,WAAWC,mBAM7BsE,kBAAgB,EAChBC,UAAW,WAKjB9Q,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqBhB,SAASL,QAAa5S,KAAMiU,EAAqBhB,SAASH,YAAajC,UAAU,OAAM1Q,SACzJC,cAAC6M,KAAY,CACX3M,GAAI,CAACyJ,MAAO,MAAOzH,GAAI,GACvB4K,QAASqH,EACT+B,cAAeA,EACfxF,eAAiB3D,GAAWA,EAAO0I,KACnCpO,MAAO0M,EAAqBlB,SAASxL,MACrCsJ,aAAcA,CAACpR,EAAOwN,IACpB/M,cAAA,SAAQT,EAAKQ,SACVgN,EAAO0I,OAGZpH,SAAUA,CAAC1H,EAAGU,IA/1BJxE,OAAO8D,EAAGU,KAwBhC,GAvBkB,aAAfqN,GACDC,EAAc,MAGhBX,GAAyB6B,IACvBA,EAAyBhD,SAASxL,MAAQA,EACpC,IAAIwO,MAG+B,OAAxC9B,EAAqBjB,SAASzL,OAC/B2M,GAAwB6B,IACtBA,EAAyB/C,SAASzL,MAAQ,KACnC,IAAIwO,MAIwB,OAApC9B,EAAqBhB,KAAK1L,OAC3B2M,GAAwB6B,IACtBA,EAAyB9C,KAAK1L,MAAQ,KAC/B,IAAIwO,MAIZhC,EAAqBhB,SAASJ,QAAQ,CACvC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsB1E,SAASJ,SAAU,EACzC8E,EAAsB1E,SAASL,MAAQ,GACvC+E,EAAsB1E,SAASH,aAAc,EAC7C6E,EAAsB1E,SAASF,OAAQ,EACvCmB,EAAwByD,EAC1B,CAEA9C,GAAYyC,IACVA,EAAa3C,KAAO,GACb,IAAI2C,MAGb5C,GAAgB2C,IACdA,EAAiBzR,SAAU,EACpB,IAAIyR,MAGb,MAAMqB,QAA6BpH,GAAgB7J,EAAMuH,MACzD0F,GAAgB2C,IACdA,EAAiBzR,SAAU,EAC3ByR,EAAiB1C,KAAO+D,EACjB,IAAIrB,KACX,EA+yBkCmF,CAAgBzV,EAAGU,GAC3CzH,KAAMmU,EAAqBlB,SAASQ,WACpCkH,QAASA,IAAM5E,EAAY,YAC3B6E,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,YAC1C2F,YAAcC,GACZjN,cAACoM,KAAS,IAAKa,EACbxE,MAAM,oBACNmR,SAAWC,GAAUA,GAAwB,aAAfnF,GAA6BmF,EAAMlH,QACjEvP,OAAwD,IAA1CyQ,EAAqBhB,SAASJ,UAGhD5B,kBAAgB,EAChBC,UAAW,WAKf9Q,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqBf,SAASN,QAAa5S,KAAMiU,EAAqBf,SAASJ,YAAajC,UAAU,MAAK1Q,SACxJC,cAAC6M,KAAY,CACX3M,GAAI,CAACyJ,MAAO,MAAOzH,GAAI,GACvB4K,QAASuH,EAAaE,KACtB0H,cAAe5H,EAAa7O,QAAU,wBAAgB,GACtD0Q,cAAeA,EACfxF,eAAiB3D,GAAWA,EAAO0I,KACnCpO,MAAO0M,EAAqBjB,SAASzL,MACrCsJ,aAAcA,CAACpR,EAAOwN,IACpB/M,cAAA,SAAQT,EAAKQ,SACVgN,EAAOkF,WAGZ5D,SAAUA,CAAC1H,EAAGU,IA30BLxE,OAAO8D,EAAGU,KAiBjC,GAhBkB,aAAfqN,GACDC,EAAc,MAGhBX,GAAyB6B,IACvBA,EAAyB/C,SAASzL,MAAQA,EACpC,IAAKwO,MAG0B,OAApC9B,EAAqBhB,KAAK1L,OAC3B2M,GAAwB6B,IACtBA,EAAyB9C,KAAK1L,MAAQ,KAC/B,IAAIwO,MAIZhC,EAAqBf,SAASL,QAAQ,CACvC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBzE,SAASL,SAAU,EACzC8E,EAAsBzE,SAASN,MAAQ,GACvC+E,EAAsBzE,SAASJ,aAAc,EAC7C6E,EAAsBzE,SAASH,OAAQ,EACvCmB,EAAwByD,EAC1B,CAEA9C,GAAYyC,IACVA,EAAa1R,SAAU,EAChB,IAAI0R,MAGb,MAAMsB,QAAyBpH,GAAY/J,EAAMuH,MACjD6F,GAAYyC,IACVA,EAAa1R,SAAU,EACvB0R,EAAa3C,KAAOiE,EACb,IAAItB,KACX,EAuyBoCmF,CAAiB1V,EAAGU,GAC5CzH,KAAMmU,EAAqBjB,SAASO,WACpCkH,QAASA,IAAM5E,EAAY,YAC3B6E,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,YAC1C2F,YAAcC,GACZjN,cAACoM,KAAS,IAAKa,EACbxE,MAAM,uBACNmR,SAAWC,GAAUA,GAAwB,aAAfnF,GAA6BmF,EAAMlH,QACjEvP,OAAwD,IAA1CyQ,EAAqBf,SAASL,QAC5CnG,WAAY,IACPW,EAAOX,WACVC,aACE/M,eAAA2H,WAAA,CAAApH,SAAA,CACGsU,EAAa7O,QAAUxF,cAACiC,IAAgB,CAAC3B,MAAM,UAAU6b,KAAM,KAAS,KACxElP,EAAOX,WAAWC,mBAM7BsE,kBAAgB,EAChBC,UAAW,WAKjB9Q,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqBd,KAAKP,QAAa5S,KAAMiU,EAAqBd,KAAKL,YAAY3S,SAChIC,cAAC6M,KAAY,CACX3M,GAAI,CAACyJ,MAAO,MAAOzH,GAAI,GACvB4K,QAAS0H,EAASD,KAClB0H,cAAezH,EAAShP,QAAU,wBAAgB,GAClD0Q,cAAeA,EACfxF,eAAiB3D,GAAWA,EAAO0I,KACnCpO,MAAO0M,EAAqBhB,KAAK1L,MACjCsJ,aAAcA,CAACpR,EAAOwN,IACpB/M,cAAA,SAAQT,EAAKQ,SACVgN,EAAOkF,WAGZ5D,SAAUA,CAAC1H,EAAGU,IA50BTiV,EAAC3V,EAAGU,KAevB,GAdkB,SAAfqN,GACDC,EAAc,MAGhBf,GAAmBwG,IACjBA,EAAoBtI,QAAQP,SAAWlK,EAAMuH,KACtC,IAAKwL,MAGdpG,GAAyB6B,IACvBA,EAAyB9C,KAAK1L,MAAQA,EAC9B,IAAKwO,MAGZhC,EAAqBd,KAAKN,QAAQ,CACnC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBxE,KAAKN,SAAU,EACrC8E,EAAsBxE,KAAKP,MAAQ,GACnC+E,EAAsBxE,KAAKL,aAAc,EACzC6E,EAAsBxE,KAAKJ,OAAQ,EACnCmB,EAAwByD,EAC1B,GAszBsC+E,CAAa3V,EAAGU,GACxCzH,KAAMmU,EAAqBhB,KAAKM,WAChCkH,QAASA,IAAM5E,EAAY,QAC3B6E,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,QAC1C2F,YAAcC,GACZjN,cAACoM,KAAS,IAAKa,EACbxE,MAAM,yBACNmR,SAAWC,GAAUA,GAAwB,SAAfnF,GAAyBmF,EAAMlH,QAC7DvP,OAAoD,IAAtCyQ,EAAqBd,KAAKN,QACxCnG,WAAY,IACPW,EAAOX,WACVC,aACE/M,eAAA2H,WAAA,CAAApH,SAAA,CACGyU,EAAShP,QAAUxF,cAACiC,IAAgB,CAAC3B,MAAM,UAAU6b,KAAM,KAAS,KACpElP,EAAOX,WAAWC,mBAM7BsE,kBAAgB,EAChBC,UAAW,WAKjB9Q,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqB7B,QAAQQ,QAAa5S,KAAMiU,EAAqB7B,QAAQU,YAAajC,UAAU,QAAO1Q,SACxJC,cAACoM,KAAS,CAAChJ,OAAuD,IAAzCyQ,EAAqB7B,QAAQS,QACpDhK,MAAM,yBAAUrH,QAAQ,WACxBlB,GAAI,CAACyJ,MAAO,MAAO,sBAAwB,CAACzH,GAAI,IAChD0X,SAAWC,GAAUA,GAAwB,YAAfnF,GAA4BmF,EAAMlH,QAChEmH,aAAcnG,EAAgB7B,QAAQE,QACtC3D,SAAW1H,GAp1BFU,KACL,YAAfqN,GACDC,EAAc,MAGhB,MAAMoF,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAM7B,GALArG,GAAmBwG,IACjBA,EAAoBtI,QAAQE,QAAU+H,EAC/B,IAAKK,MAGXvG,EAAqB7B,QAAQS,QAAQ,CACtC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBvF,QAAQS,SAAU,EACxC8E,EAAsBvF,QAAQQ,MAAQ,GACtC+E,EAAsBvF,QAAQU,aAAc,EAC5C6E,EAAsBvF,QAAQW,OAAQ,EACtCmB,EAAwByD,EAC1B,IACC,IAAI,EA4zBwBgF,CAAgB5V,EAAE4H,OAAOlH,aAKhDrH,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqB1B,eAAeK,QAAa5S,KAAMiU,EAAqB1B,eAAeO,YAAajC,UAAU,OAAM1Q,SACrKC,cAACoM,KAAS,CAAChJ,OAA8D,IAAhDyQ,EAAqB1B,eAAeM,QAC3DhK,MAAM,yBAAYrH,QAAQ,WAC1BlB,GAAI,CAACyJ,MAAO,MAAO,sBAAwB,CAACzH,GAAI,IAChD0X,SAAWC,GAAUA,GAAwB,mBAAfnF,GAAmCmF,EAAMlH,QACvEmH,aAAcnG,EAAgB7B,QAAQK,eACtC9D,SAAW1H,GAr0BKU,KACZ,mBAAfqN,GACDC,EAAc,MAGhB,MAAMoF,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAM7B,GALArG,GAAmBwG,IACjBA,EAAoBtI,QAAQK,eAAiB4H,EACtC,IAAKK,MAGXvG,EAAqB1B,eAAeM,QAAQ,CAC7C,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBpF,eAAeM,SAAU,EAC/C8E,EAAsBpF,eAAeK,MAAQ,GAC7C+E,EAAsBpF,eAAeO,aAAc,EACnD6E,EAAsBpF,eAAeQ,OAAQ,EAC7CmB,EAAwByD,EAC1B,IACC,IAAI,EA6yBwBiF,CAAuB7V,EAAE4H,OAAOlH,aAKvDrH,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqBzB,YAAYI,QAAa5S,KAAMiU,EAAqBzB,YAAYM,YAAY3S,SAC9IC,cAACoM,KAAS,CAAChJ,OAA2D,IAA7CyQ,EAAqBzB,YAAYK,QACxDhK,MAAM,oCAAgBrH,QAAQ,WAC9BlB,GAAI,CAACyJ,MAAO,MAAO,sBAAwB,CAACzH,GAAI,IAChDwX,WAAY,CAAEC,UAAW,IACzBC,SAAWC,GAAUA,GAAwB,gBAAfnF,GAAgCmF,EAAMlH,QACpEmH,aAAcnG,EAAgB7B,QAAQM,YACtC/D,SAAW1H,GAvzBEU,KAK3B,GAJkB,gBAAfqN,GACDC,EAAc,MAGH,KAAVtN,EAAa,CACd,MAAM0S,EAAa1S,EAEhBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAC7B,MAAM1C,EAAwB,IAAI1D,GAC/BkG,EAAW7J,OAAS,IACrBqH,EAAsBnF,YAAYI,MAAQ,sEAC1C+E,EAAsBnF,YAAYM,aAAc,EAChD6E,EAAsBnF,YAAYK,SAAU,EAC5C8E,EAAsBnF,YAAYO,OAAQ,EAC1CmB,EAAwByD,KAIxB3D,GAAmBwG,IACjBA,EAAoBtI,QAAQM,YAAc2H,EACnC,IAAIK,MAGb7C,EAAsBnF,YAAYI,MAAQ,GAC1C+E,EAAsBnF,YAAYM,aAAc,EAChD6E,EAAsBnF,YAAYK,SAAU,EAC5C8E,EAAsBnF,YAAYO,OAAQ,EAE1C4E,EAAsBjF,YAAYE,MAAQ,GAC1C+E,EAAsBjF,YAAYI,aAAc,EAChD6E,EAAsBjF,YAAYG,SAAU,EAC5C8E,EAAsBjF,YAAYK,OAAQ,EAC1CmB,EAAwByD,GAC1B,GACC,GACL,KAEI,CACF,MAAMA,EAAwB,IAAI1D,GAClC0D,EAAsBnF,YAAYI,MAAQ,GAC1C+E,EAAsBnF,YAAYM,aAAc,EAChD6E,EAAsBnF,YAAYK,SAAU,EAC5C8E,EAAsBnF,YAAYO,OAAQ,EAC1CmB,EAAwByD,EAC1B,GAswB+BkF,CAAoB9V,EAAE4H,OAAOlH,OAC9CqH,UAAWqH,QAKjB/V,cAACoM,KAAS,CACR3D,MAAM,qBAAarH,QAAQ,WAAWlB,GAAI,CAACyJ,MAAO,MAAO,sBAAwB,CAACzH,GAAI,IACtF4X,aAAcnG,EAAgB7B,QAAQO,eACtChE,SAAW1H,GA5wBSU,KAC9B,MAAM0S,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAM7B,GALArG,GAAmBwG,IACjBA,EAAoBtI,QAAQO,eAAiB0H,EACtC,IAAIK,MAGVvG,EAAqB1B,eAAeM,QAAQ,CAC7C,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBpF,eAAeM,SAAU,EAC/C8E,EAAsBpF,eAAeK,MAAQ,GAC7C+E,EAAsBpF,eAAeO,aAAc,EACnD6E,EAAsBpF,eAAeQ,OAAQ,EAC7CmB,EAAwByD,EAC1B,IACC,IAAI,EAwvBoBmF,CAAuB/V,EAAE4H,OAAOlH,SAGnDrH,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqBvB,YAAYE,QAAa5S,KAAMiU,EAAqBvB,YAAYI,YAAajC,UAAU,QAAO1Q,SAChKC,cAACoM,KAAS,CAAChJ,OAA2D,IAA7CyQ,EAAqBvB,YAAYG,QACxDhK,MAAM,oCAAgBrH,QAAQ,WAC9BlB,GAAI,CAACyJ,MAAO,MAAO,sBAAwB,CAACzH,GAAI,IAChDwX,WAAY,CAAEC,UAAW,IACzBC,SAAWC,GAAUA,GAAwB,gBAAfnF,GAAgCmF,EAAMlH,QACpEmH,aAAcnG,EAAgB7B,QAAQQ,YACtCjE,SAAW1H,GAhwBEU,KAK3B,GAJkB,gBAAfqN,GACDC,EAAc,MAGH,KAAVtN,EAAa,CACd,MAAM0S,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAC7B,MAAM1C,EAAwB,IAAI1D,GAC/BkG,EAAW7J,OAAS,IACrBqH,EAAsBjF,YAAYE,MAAQ,sEAC1C+E,EAAsBjF,YAAYI,aAAc,EAChD6E,EAAsBjF,YAAYG,SAAU,EAC5C8E,EAAsBjF,YAAYK,OAAQ,EAC1CmB,EAAwByD,KAIxB3D,GAAmBwG,IACjBA,EAAoBtI,QAAQQ,YAAcyH,EACnC,IAAIK,MAGb7C,EAAsBjF,YAAYE,MAAQ,GAC1C+E,EAAsBjF,YAAYI,aAAc,EAChD6E,EAAsBjF,YAAYG,SAAU,EAC5C8E,EAAsBjF,YAAYK,OAAQ,EAE1C4E,EAAsBnF,YAAYI,MAAQ,GAC1C+E,EAAsBnF,YAAYM,aAAc,EAChD6E,EAAsBnF,YAAYK,SAAU,EAC5C8E,EAAsBnF,YAAYO,OAAQ,EAC1CmB,EAAwByD,GAC1B,GACC,IACL,KAEI,CACF,MAAMA,EAAwB,IAAI1D,GAClC0D,EAAsBjF,YAAYE,MAAQ,GAC1C+E,EAAsBjF,YAAYI,aAAc,EAChD6E,EAAsBjF,YAAYG,SAAU,EAC5C8E,EAAsBjF,YAAYK,OAAQ,EAC1CmB,EAAwByD,EAC1B,GAgtB+BoF,CAAoBhW,EAAE4H,OAAOlH,OAC9CqH,UAAWqH,QAKjB/V,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqB/J,OAAO0I,QAAa5S,KAAMiU,EAAqB/J,OAAO4I,YAAajC,UAAU,OAAM1Q,SACrJC,cAACoM,KAAS,CAAChJ,OAAsD,IAAxCyQ,EAAqB/J,OAAO2I,QACnDhK,MAAM,iBACNvI,GAAI,CAACyJ,MAAO,MAAO,sBAAwB,CAACzH,GAAI,IAChD0X,SAAWC,GAAUA,GAAwB,WAAfnF,GAA2BmF,EAAMlH,QAC/DrG,WAAY,CAACC,aAAcvM,cAACwM,KAAc,CAAC7L,SAAS,MAAKZ,SAAE,UAC3D+Z,aAAcnG,EAAgB7J,OAC9BuE,SAAW1H,GA3tBHU,KACJ,WAAfqN,GACDC,EAAc,MAGhB,MAAMoF,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAM7B,GALArG,GAAmBwG,IACjBA,EAAoBtQ,OAASiQ,EACtB,IAAIK,MAGVvG,EAAqB/J,OAAO2I,QAAQ,CACrC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsBzN,OAAO0I,MAAQ,GACrC+E,EAAsBzN,OAAO4I,aAAc,EAC3C6E,EAAsBzN,OAAO2I,SAAU,EACvC8E,EAAsBzN,OAAO6I,OAAQ,EACrCmB,EAAwByD,EAC1B,IACC,IAAI,EAmsBwBqF,CAAejW,EAAE4H,OAAOlH,aAK/CrH,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqBlC,OAAOa,QAAa5S,KAAMiU,EAAqBlC,OAAOe,YAAY3S,SACpIC,cAACoM,KAAS,CAAChJ,OAAsD,IAAxCyQ,EAAqBlC,OAAOc,QACnDhK,MAAM,mBACNvI,GAAI,CAACyJ,MAAO,MAAO,sBAAwB,CAACzH,GAAI,IAChD0X,SAAWC,GAAUA,GAAwB,WAAfnF,GAA2BmF,EAAMlH,QAC/DrG,WAAY,CAACC,aAAcvM,cAACwM,KAAc,CAAC7L,SAAS,MAAKZ,SAAE,UAC3D+Z,aAAcnG,EAAgBhC,OAC9BtD,SAAW1H,GA7sBHU,KACJ,WAAfqN,GACDC,EAAc,MAGhB,MAAMoF,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAM7B,GALArG,GAAmBwG,IACjBA,EAAoBzI,OAASoI,EACtB,IAAIK,MAGVvG,EAAqBlC,OAAOc,QAAQ,CACrC,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsB5F,OAAOa,MAAQ,GACrC+E,EAAsB5F,OAAOe,aAAc,EAC3C6E,EAAsB5F,OAAOc,SAAU,EACvC8E,EAAsB5F,OAAOgB,OAAQ,EACrCmB,EAAwByD,EAC1B,IACC,IAAI,EAqrBwBsF,CAAelW,EAAE4H,OAAOlH,aAK/CrH,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE8T,EAAqBjC,kBAAkBY,QAAa5S,KAAMiU,EAAqBjC,kBAAkBc,YAAajC,UAAU,QAAO1Q,SAC5KC,cAACoM,KAAS,CAAChJ,OAAiE,IAAnDyQ,EAAqBjC,kBAAkBa,QAC9DhK,MAAM,wBACNvI,GAAI,CAACyJ,MAAO,MAAO,sBAAwB,CAACzH,GAAI,IAChD0X,SAAWC,GAAUA,GAAwB,sBAAfnF,GAAsCmF,EAAMlH,QAC1ErG,WAAY,CAACC,aAAcvM,cAACwM,KAAc,CAAC7L,SAAS,MAAKZ,SAAE,UAC3D+Z,aAAcnG,EAAgB/B,kBAC9BvD,SAAW1H,GA/rBQU,KACf,sBAAfqN,GACDC,EAAc,MAGhB,MAAMoF,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAM7B,GALArG,GAAmBwG,IACjBA,EAAoBxI,kBAAoBmI,EACjC,IAAIK,MAGVvG,EAAqBjC,kBAAkBa,QAAQ,CAChD,MAAM8E,EAAwB,IAAI1D,GAClC0D,EAAsB3F,kBAAkBY,MAAQ,GAChD+E,EAAsB3F,kBAAkBc,aAAc,EACtD6E,EAAsB3F,kBAAkBa,SAAU,EAClD8E,EAAsB3F,kBAAkBe,OAAQ,EAChDmB,EAAwByD,EAC1B,IACC,IAAI,EAuqBwBuF,CAA0BnW,EAAE4H,OAAOlH,aAK1DrH,cAAC+c,KAAgB,CAAC7c,GAAI,CAACyJ,MAAO,MAAOzH,GAAI,GAAI8a,QAAShd,cAACid,KAAQ,CAACC,QAASvJ,EAAgB9B,cACvFpJ,MAAM,mCACN4F,SAAW1H,IAAMwW,OA3qBAC,EA2qBoBzW,EAAE4H,OAAO2O,aA1qBxDtJ,GAAmBwG,IACjBA,EAAoBvI,YAAcuL,EAC3B,IAAIhD,MAHcgD,KA2qBsC,SAI7D5d,eAAC6d,KAAa,CAACnd,GAAI,CAACqK,eAAgB,UAAUxK,SAAA,CAC5CC,cAAC4K,IAAM,CAACxJ,QAAQ,YAAYX,QAASA,IAAM4W,IAA8BtX,SAAC,kBAC1EC,cAAC4K,IAAM,CAACxJ,QAAQ,YAAYd,MAAM,YAAYG,QAASA,CAAC2H,EAAO2D,IAAWiL,EAA8B5O,EAAO2D,GAAQhM,SAAC,6BAI5HC,cAAC+Q,GAAe,CAACC,oBAAqBA,EAAqB4D,uBAAwBA,MAGzF,E,2IC5qCe0I,OArVf,SAA8B/d,GAE5B,MAAOiG,EAASC,GAAcF,oBAAS,IAEhCgY,EAAYC,GAAiBjY,mBAAS,CAACkY,UAAW,EAAGC,UAAW,yBAChEC,EAAuBC,GAA4BrY,mBACxD,CACE,CAAEmY,UAAW,sBAAeG,YAAa,GACzC,CAAEH,UAAW,wBAAcG,YAAa,GACxC,CAAEH,UAAW,sBAAeG,YAAa,MAItChc,EAA6B6D,GAAkCH,oBAAS,IAExEuY,EAA0BC,GAA+BxY,mBAAS,KAClEyY,EAAmCC,GAAwC1Y,mBAAS,KAEpF2Y,EAAqBC,GAA0B5Y,mBAAS,KAExD6Y,EAA+BC,GAAoC9Y,mBAAS,KAC5E+Y,EAA8BC,GAAmChZ,mBAAS,KAE1E2S,EAAsBf,GAA2B5R,sBACjD2T,EAAwB9B,GAA6B7R,oBAAS,IAC9D4T,EAAiChB,GAAsC5S,qBAuDxEiZ,EAAiBA,CAACC,EAAUC,KAChC,MAAMC,EAAsBD,EAAWrI,cACvC,OAAOoI,EAASnI,QAAOsI,IACrB,MAAM,UAAE1a,EAAS,SAAE+N,EAAQ,YAAEG,EAAW,YAAEE,GAAgBsM,EAAW9M,QACrE,OAAO5N,EAAUmS,cAAcM,SAASgI,IAAwB1M,EAASoE,cAAcM,SAASgI,IAAwBvM,EAAYiE,cAAcM,SAASgI,IAAwBrM,EAAY+D,cAAcM,SAASgI,EAAoB,GAC1O,EA4BEE,EAA8Bhc,UAClC4C,GAAW,GAEX,MAAMvC,QAAiBQ,IACjBob,OX6DmBjc,WACzB,MAAMc,EAAStB,IACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,EAAU,qCAAqCuB,GACxEV,MAAK,SAAUC,GACZ,OAAOA,EAASW,IACpB,IACCV,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASY,MAC1B,GAAE,EWrEyCib,GAE3C,IAMIC,EANAC,EAAc,CAChB,CAAEvB,UAAW,sBAAeG,YAAa,GACzC,CAAEH,UAAW,wBAAcG,YAAa,GACxC,CAAEH,UAAW,sBAAeG,YAAaiB,EAA6B5O,SA+BxE,GA3BG4O,EAA6B5O,OAAS,GACvC8O,EAAqCF,EAA6BrU,KAAKmN,IACtD,CACb9F,QAAU,CACRC,WAAY6F,EAAK7F,WACjB7N,UAAW0T,EAAK1T,UAChB+N,SAAU2F,EAAKsH,gBACfhN,OAAQ0F,EAAK1F,OACblO,WAAY4T,EAAKuH,YACjBhN,eAAgByF,EAAKzF,eACrBC,YAAawF,EAAKxF,YAClBC,eAAgBuF,EAAKvF,eACrBC,YAAasF,EAAKtF,YAClBN,QAAS4F,EAAK5F,QACdoN,YAAaxH,EAAKwH,YAClB7N,SAAUqG,EAAKrG,SACf8N,WAAYzH,EAAKyH,gBAKvBpB,EAAqCe,IAGrCf,EAAqCa,GAGvB,MAAb5b,GAC2B,IAAzBA,EAASqR,KAAKrE,OAEf,GADA6N,EAA4B7a,EAASqR,MACT,IAAzBgJ,EAAWE,UAAgB,CAC5B,MAAM6B,EAA8Bpc,EAASqR,KAAK+B,QAAOiJ,GAAuD,IAA/BA,EAAqB5a,OAA8C,IAA/B4a,EAAqB5a,OAA8C,IAA/B4a,EAAqB5a,QAC9K4Z,EAAgCe,GAChCjB,EAAiCiB,GACjCL,EAAY,GAAGpB,YAAc3a,EAASsc,eAAe,GACrDP,EAAY,GAAGpB,YAAc3a,EAASsc,eAAe,EACvD,MACK,GAA4B,IAAzBjC,EAAWE,UAAgB,CACjC,MAAMgC,EAA2B3B,EAAyBxH,QAAOiJ,GAAuD,IAA/BA,EAAqB5a,QAC9G4Z,EAAgCkB,GAChCpB,EAAiCoB,GACjCR,EAAY,GAAGpB,YAAc3a,EAASsc,eAAe,GACrDP,EAAY,GAAGpB,YAAc3a,EAASsc,eAAe,EACvD,MACiC,IAAzBjC,EAAWE,YACjBc,EAAgCS,GAChCX,EAAiCW,GACjCC,EAAY,GAAGpB,YAAc3a,EAASsc,eAAe,GACrDP,EAAY,GAAGpB,YAAc3a,EAASsc,eAAe,IAI3D5B,EAAyBqB,GACzB1f,EAAMmgB,sBAAqB,GAC3Bja,GAAW,EAAM,EAgCnB,OA7BAyB,qBAAU,KACR2X,GAA6B,GAC5B,IAEH3X,qBAAU,KACR,GAAGgS,EAAuB,CACxB,MAAMnD,EAAiB3N,IACA,MAAlBA,EAAMuX,UACPvX,EAAM6N,iBACNkC,GAAmC,GAErC,EAKF,OAFAyH,SAASC,iBAAiB,UAAW9J,GAE9B,KACL6J,SAASE,oBAAoB,UAAW/J,EAAc,CAE1D,IACC,CAACmD,EAAwBC,IAE5BjS,qBAAU,MAC6B,IAAlC3H,EAAMwgB,0BACPlB,IACAtf,EAAMwY,4BAA2B,GACnC,GACC,CAACxY,EAAMwgB,0BAGRvgB,eAAA2H,WAAA,CAAApH,SAAA,CACEP,eAAC6B,IAAG,CAACnB,GAAI,CAACiM,EAAG,GAAGpM,SAAA,CACdC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,MAAO6J,GAAI,EAAGhK,WAAY,SAAUC,SAAU,WAAWL,SAC3FyF,EACCxF,cAACggB,KAAQ,IAEqC,KAA9CzgB,EAAMiQ,uBAAuBtJ,aAC3B1G,eAAA2H,WAAA,CAAApH,SAAA,uCAAA4C,OAC2BpD,EAAMiQ,uBAAuBxJ,cAAe,IAACxG,eAACgB,IAAU,CAACC,QAASA,IAAMlB,EAAMsQ,qCAAoC,GAAM9P,SAAA,CAAC,IAACC,cAACigB,KAAQ,CAAC/f,GAAI,CAACI,MAAO,UAAWF,SAAU,gBAGhMZ,eAAA2H,WAAA,CAAApH,SAAA,0DACoC,IAACP,eAACgB,IAAU,CAACC,QAASA,IAAMlB,EAAMsQ,qCAAoC,GAAM9P,SAAA,CAAC,IAACC,cAACigB,KAAQ,CAAC/f,GAAI,CAACI,MAAO,UAAWF,SAAU,kBAIjKJ,cAACkgB,KAAc,CAAC3U,UAAW4U,KAAOjgB,GAAI,CAAE4J,OAAQ,QAASoE,aAAc,OAAQkS,UAAW,EAAGC,UAAW,UAAWtgB,SAClHyF,EACCxF,cAAAmH,WAAA,CAAApH,SACEP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQyI,eAAgB,SAAUvI,WAAY,SAAUD,cAAe,SAAUJ,gBAAiB,UAAWmI,OAAQ,QAAQ/J,SAAA,CAC9IC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,mFAIjDP,eAAA2H,WAAA,CAAApH,SAAA,CACEC,cAACkN,KAAK,CAACE,UAAU,MAAMD,QAAS,EAAGjN,GAAI,CAACqK,eAAgB,SAAUrI,GAAI,KAAKnC,SACxE4d,EAAsBlT,KAAI,CAAC6V,EAAuBC,IACjDvgB,cAACwgB,KAAK,CAACC,aAAcH,EAAsBzC,YAAavd,MAAM,QAAOP,SACnEC,cAAC0gB,KAAI,CAACjY,MAAO6X,EAAsB5C,UAAWpd,MAAOigB,IAA2BhD,EAAWE,UAAY,UAAY,UACjHhd,QAASA,IAhMFkgB,EAACC,EAAWlD,KAErC,GADAF,EAAc,CAACC,UAAWmD,EAAWlD,UAAWA,IAC/B,IAAdkD,EAAgB,CACjB,MAAMtB,EAA8BxB,EAAyBxH,QAAOiJ,GAAuD,IAA/BA,EAAqB5a,OAA8C,IAA/B4a,EAAqB5a,OAA8C,IAA/B4a,EAAqB5a,QACzL4Z,EAAgCe,GAChCjB,EAAiCiB,EACnC,MACK,GAAiB,IAAdsB,EAAgB,CACtB,MAAMnB,EAA2B3B,EAAyBxH,QAAOiJ,GAAuD,IAA/BA,EAAqB5a,QAC9G4Z,EAAgCkB,GAChCpB,EAAiCoB,EACnC,MACsB,IAAdmB,IACNrC,EAAgCP,GAChCK,EAAiCL,GACnC,EAiLiC2C,CAAmBJ,EAAwBD,EAAsB5C,cAAc,qBAAA/a,OAFF4d,QAOpG/gB,eAAC2B,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACgC,GAAI,GAAK7B,UAAW,SAAUD,SAAU,WAAWL,SAAA,CAAC,gBAAWwd,EAAWG,UAAU,YAAO1C,OAASD,OAAO,iBAEzI/a,cAACqB,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQyI,eAAgB,SAAU5J,SAAU,YAAYZ,SACzEC,cAACoM,KAAS,CAAClM,GAAI,CAACgC,GAAI,GAAKiI,GAAI,EAAGR,MAAO,IAAK,iCAAkC,CAACtJ,UAAW,WAAY8b,KAAK,QACzG/a,QAAQ,WAAWyf,YAAY,kEAAqCxZ,MAAO6W,EAAqB7P,SAAW1H,GAvL7FU,KAC5B,MAAM0S,EAAa1S,EACnB8W,EAAuBpE,GAGrBwE,EADW,KAAVlX,EAC+B+W,EAEAI,EAAeJ,EAA+BrE,GAChF,EA+K+H+G,CAAqBna,EAAE4H,OAAOlH,OAC/IiF,WAAY,CACRyU,eACE/gB,cAACwM,KAAc,CAAC7L,SAAS,QAAOZ,SAACC,cAACghB,KAAU,MAE9CzU,aACEvM,cAACwM,KAAc,CAAC7L,SAAS,MAAKZ,SACH,KAAxBme,EACCle,cAACc,IAAS,CAACZ,GAAI,CAACgL,OAAQ,WACtBD,YAAY,SACZxK,QAASA,IAAM,CAAC0d,EAAuB,IAAKI,EAAgCH,MAG9E,YAQd5e,eAACyhB,KAAK,CAACC,cAAY,EAAChhB,GAAI,CAAEihB,SAAU,MAAOphB,SAAA,CACzCC,cAACohB,KAAS,CAAArhB,SACRP,eAAC6hB,KAAQ,CAACnhB,GAAI,CAAC,OAAQ,CAACI,MAAO,mBAAoBqB,gBAAiB,SAAS5B,SAAA,CACjD,IAAzBwd,EAAWE,UACV,KAEAje,eAAA2H,WAAA,CAAApH,SAAA,CACEC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,UAAW+L,EAAG,QAAQpM,SAAC,uBAC9DC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,WAAWL,SAAC,WAGvDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,WAAWL,SAAC,4BACnDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,WAAWL,SAAC,mBACnDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,WAAWL,SAAC,sBACnDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,WAAWL,SAAC,iBACnDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,WAAWL,SAAC,sCACnDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,WAAWL,SAAC,gCAGvDC,cAACwhB,KAAS,CAAAzhB,SACiC,IAAxCue,EAA6BpO,OAC5BlQ,cAAAmH,WAAA,CAAApH,SACGue,EAA6B7T,KAAI,CAACgX,EAA0BC,KAC3DliB,sBAAC6hB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAA2C1hB,GAAI,CAACgL,OAAQ,WAAY2W,cAAeA,IAA+B,IAAzBtE,EAAWE,UA1M/F5a,WAC9C6C,GAA+B,GAC/B,MAAMoc,QAAuC7d,GAA0Bwd,EAAyB3P,QAAQ5N,WAClG6d,EAAoC,CACxCrQ,cAAe+P,EAAyB3P,QAAQuN,WAChD2C,YAAY,EACZlY,OAAQ,GACR6H,OAAQ,GACRC,kBAAmB,GACnB7F,OAAQ,GACR8F,YAAaiQ,EAA+BjQ,YAC5CoQ,cAAeH,EAA+BG,cAC9C/b,aAAc,GACd4L,QAAS2P,EAAyB3P,SAEpCvS,EAAM2iB,iCAAiCH,GACvCrc,GAA+B,EAAM,EA0L0Hyc,CAAwCV,GAhNrKA,KAClCtK,EAAwBsK,GACxBtJ,GAAmC,GACnCf,GAA0B,EAAK,EA6MoMgL,CAA2BX,GAA0B1hB,SAAA,CACxO,IAAzBwd,EAAWE,UACV,KAEAje,eAAA2H,WAAA,CAAApH,SAAA,CACEC,cAACshB,KAAS,CAACC,MAAM,SAASrhB,GAAI,CAACyJ,MAAO,QAAQ5J,UAlR5C4E,EAkRmE8c,EAAyB9c,MAjR3G,IAAVA,GAAyB,IAAVA,EAEd3E,cAAAmH,WAAA,CAAApH,SACEC,cAAA,QAAM0L,UAAU,iCAIJ,IAAV/G,EAEJ3E,cAAAmH,WAAA,CAAApH,SACEC,cAAA,QAAM0L,UAAU,mCAMlB1L,cAAAmH,WAAA,CAAApH,SACEC,cAAA,QAAM0L,UAAU,iCAiQI1L,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,QAAQ5J,SAAE0hB,EAAyBY,WAG3EriB,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,SAAS5J,SAAE0hB,EAAyB3P,QAAQ5N,YAChFlE,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,SAAS5J,SAAE0hB,EAAyB3P,QAAQG,WAChFjS,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,SAAS5J,UAA8C,IAA5C0hB,EAAyB3P,QAAQI,OAAkB,MAAQ,YAC1GlS,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,SAAS5J,SAAEib,KAAOyG,EAAyB3P,QAAQ9N,YAAY+W,OAAO,gBAC1G/a,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,SAAS5J,SAAmD,KAAjD0hB,EAAyB3P,QAAQM,YAAqBqP,EAAyB3P,QAAQM,YAAcqP,EAAyB3P,QAAQQ,cACrLtS,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACoiB,WAAY,SAAUC,SAAU,SAAUC,aAAc,WAAY7iB,SAAU,KAAKI,SAC9GC,cAACwZ,KAAO,CAAChH,MAAOxS,cAACmB,IAAU,CAACC,QAAQ,YAAWrB,SAAE0hB,EAAyB3P,QAAQsN,cAA0Brf,SAC1GC,cAAA,QAAAD,SAAO0hB,EAAyB3P,QAAQsN,oBAhBTsC,GA7Q7B/c,KAiST,MAGD,kBAShB3E,cAACsB,EAAuB,CAACO,4BAA6BA,EAA6BD,kBAAkB,IAGrG5B,cAACwR,GAAmB,CAClB0H,uBAAwBA,EAAwB9B,0BAA2BA,EAC3Ec,qBAAsBA,EAAsBf,wBAAyBA,EACrEgC,gCAAiCA,EAAiChB,mCAAoCA,EACtGJ,2BAA4BxY,EAAMwY,+BAI1C,E,oBCtKe0K,OAvLf,SAA0BljB,GACtB,MAAOmjB,EAAeC,GAAoBpd,oBAAS,IAC5CyL,EAAqB4D,GAA0BrP,oBAAS,IAExD0O,EAAsBC,GAA2B3O,mBAAS,MAE3Dqd,EAAuBvb,IACzB9H,EAAMyD,qBAAqB0O,cAAgBrK,CAAK,EA2E9Cwb,EAAoBA,KAC0B,KAA7CtjB,EAAMyD,qBAAqB0O,cAE1B7D,IAAMzK,MAAM,+CAAyB,CAACiM,QAAS,WAjEzBxM,WAE1B,IAA6C,IAA1CtD,EAAMyD,qBAAqBgf,WAE1B,IAA0C,IAAvC/N,EAAqB6O,cAAwB,CAC5CH,GAAiB,GACjB/N,GAAuB,GACvB,MAAM1R,QAAiBN,EAAsBrD,EAAMyD,sBACnD4R,GAAuB,GACA,MAApB1R,EAASY,QACR+J,IAAM8B,QAAQzM,EAASW,MACvBtE,EAAMwjB,uCAAsC,GAC5CxjB,EAAMwY,4BAA2B,GACjCxY,EAAMyjB,8BAA6B,GACnCzjB,EAAM0jB,oBAGNpV,IAAMzK,MAAMF,EAASW,KAAM,CAACwL,QAAS,UAE7C,KAEI,CACAsT,GAAiB,GACjB/N,GAAuB,GACvB,MAAM1R,QAAiBG,EAA0B9D,EAAMyD,sBACvD4R,GAAuB,GACA,MAApB1R,EAASY,QACR+J,IAAM8B,QAAQzM,EAASW,MACvBtE,EAAMwjB,uCAAsC,GAC5CxjB,EAAMwY,4BAA2B,GACjCxY,EAAMyjB,8BAA6B,GACnCzjB,EAAM0jB,oBAGNpV,IAAMzK,MAAMF,EAASW,KAAM,CAACwL,QAAS,UAE7C,KAGA,CACAsT,GAAiB,GACjB/N,GAAuB,GACvB,MAAM1R,QAAiBN,EAAsBrD,EAAMyD,sBACnD4R,GAAuB,GAEA,MAApB1R,EAASY,QACR+J,IAAM8B,QAAQzM,EAASW,MACvBtE,EAAM0jB,mBACN1jB,EAAMwjB,uCAAsC,GAC5CxjB,EAAMwY,4BAA2B,GACjCxY,EAAMyjB,8BAA6B,IAGnCnV,IAAMzK,MAAMF,EAASW,KAAM,CAACwL,QAAS,UAE7C,GAcI6T,EACJ,EAiBJ,OAdAhc,qBAAU,KAC+C,KAAlD3H,EAAMyD,qBAAqB8O,QAAQ9N,aAAyD,IAApCzE,EAAM4jB,2BAjFnBtgB,WAC9C+R,GAAuB,GACvB,MAAM1R,QAAiBa,GAAuCxE,EAAMyD,qBAAqB8O,QAAQ9N,YACjG4Q,GAAuB,GACvBV,EAAwBhR,EAAS,EA8E7BkgB,EACJ,GACD,CAAC7jB,EAAM4jB,4BAEVjc,qBAAU,MAC0C,IAA7C3H,EAAM8jB,qCAELR,IACAtjB,EAAMwjB,uCAAsC,GAChD,GACD,CAACxjB,EAAM8jB,qCAGN7jB,eAAA2H,WAAA,CAAApH,SAAA,CACKkU,EACGjU,cAAAmH,WAAA,CAAApH,SACIP,eAACC,IAAM,CAACC,WAAW,EAAMC,SAAU,KAAMC,KAAML,EAAM4jB,0BAA2BrjB,sBAAsB,EAAKC,SAAA,CACvGC,cAACC,IAAW,CACRC,GAAI,CAAEC,WAAY,SAAUC,SAAU,OAAQC,UAAW,SAAUC,MAAO,QAASC,cAAe,aAAcR,SAAA,GAAA4C,OAC5GpD,EAAMyD,qBAAqB8O,QAAQG,SAAQ,oCAAAtP,QACC,IAA9CpD,EAAMyD,qBAAqB8O,QAAQI,OAAkB,MAAQ,UAAI,oCAAAvP,OACjEsR,EAAqBqP,eAG3BtjB,cAACQ,IAAU,CAACC,QAASA,IAAM,CAAClB,EAAMyjB,8BAA6B,GAAQzjB,EAAMyD,qBAAqB0O,cAAgB,IAC9GxR,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACzCC,cAACc,IAAS,CAACV,SAAS,aAG5BJ,cAACe,IAAa,CAACC,UAAQ,EAACd,GAAI,CAACe,GAAI,MAAOC,GAAI,OAAOnB,SAC/CP,eAAC+jB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAE1jB,SAAA,CAC1BC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,KAEf1jB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAI3jB,SACfP,eAAC6B,IAAG,CAACnB,GAAI,CAACyjB,OAAQ,kBAAmBxX,EAAG,EAAGrC,OAAQ,OAAQyY,SAAU,QAAQxiB,SAAA,CACzEC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACC,WAAY,UAAUJ,SAAC,8BACpDkU,EAAqB2P,SAClB3P,EAAqB2P,SAASnZ,KAAI,CAACoZ,EAAaC,IAC5C9jB,cAACmB,IAAU,CAAoBC,QAAQ,YAAWrB,SAAE8jB,EAAYpO,MAA/CqO,KAGrB,UAKZ9jB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAI3jB,SACfC,cAACqB,IAAG,CAACnB,GAAI,CAACyjB,OAAQ,gBAAiBxX,EAAG,EAAGrC,OAAQ,QAAQ/J,SACrDP,eAAA,OAAK6N,MAAO,CAACvL,QAAS,OAAQwX,SAAU,OAAQ/O,eAAgB,UAAUxK,SAAA,CACtEC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACC,WAAY,SAAUG,MAAO,OAAOP,SAAC,8BAClEkU,EAAqB8C,QAAgD,IAAvC9C,EAAqB6O,cAChD9iB,cAAC+jB,KAAU,CAAC1V,SAAW1H,GAAMic,EAAoBjc,EAAE4H,OAAOlH,OAAOtH,SAC5DkU,EAAqB8C,MAAMtM,KAAI,CAACuZ,EAAUC,IACvCjkB,cAAC+c,KAAgB,CAAiB1V,MAAO2c,EAAS3f,GAAI2Y,QAAShd,cAACkkB,KAAK,IAAKzb,MAAOub,EAASvO,MAAnEwO,OAI/BjkB,cAAC+jB,KAAU,CAAC1V,SAAW1H,GAAMic,EAAoBjc,EAAE4H,OAAOlH,OAAOtH,SAC5DkU,EAAqB2P,SAASnZ,KAAI,CAACuZ,EAAUC,IAC1CjkB,cAAC+c,KAAgB,CAAiB1V,MAAO2c,EAAS3f,GAAI2Y,QAAShd,cAACkkB,KAAK,IAAKzb,MAAOub,EAASvO,KAAM0O,SAAwB,IAAdF,GAAnFA,OAInCjkB,cAAC4K,IAAM,CAACxJ,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,IAAMzB,QAASA,IAAMoiB,IAAoB9iB,SAAC,6CAS3G,KASJC,cAAC+Q,GAAe,CACZC,oBAAqBA,EAAqB4D,uBAAwBA,MAIlF,ECsTewP,OAnef,SAAoB7kB,GAEhB,MAAM8kB,EAAyC,CAACngB,UAAW,GAAIogB,MAAO,GAAIrS,SAAU,GAAIjO,WAAY,IAC9FugB,EAA8C,CAChDrgB,UAAW,CAAEsO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACnE2R,MAAO,CAAE9R,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC/DV,SAAU,CAAEO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClE3O,WAAY,CAAEwO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,KAGjE6R,EAAqBC,GAA0Blf,mBAAS,OACxDmf,EAAiCC,GAAsCpf,mBAAS8e,IAChFO,EAAsCC,GAA2Ctf,mBAASgf,IAC1F7P,EAAYC,GAAiBpP,mBAAS,OACtCyL,EAAqB4D,GAA0BrP,oBAAS,IACxDuf,EAAkBC,GAAuBxf,mBAAS,GAEnDiO,EAAeD,iBAAO,MACtByR,EAAUzR,iBAAO,MACjB0R,EAAW1R,iBAAO,MAElBsB,EAAeC,aAAY,CAC7BC,WAAY,CACVC,WAAY,CACVC,aAAc,CACZxE,UAAW,SACXyE,OAAO,EACPC,gBAAiB,CACfC,QAAS,CACPlV,GAAI,CACFmV,QAAS,YAGbH,MAAO,CACLhV,GAAI,CACFI,MAAO,kBASjByV,EAAiB3N,IACd,QAAQ4N,KAAK5N,EAAMI,MAAsB,cAAdJ,EAAMI,KAAqC,WAAdJ,EAAMI,KAAkC,cAAdJ,EAAMI,KAAqC,eAAdJ,EAAMI,KAAsC,QAAdJ,EAAMI,KAA+B,UAAdJ,EAAMI,IAIzJ,UAAdJ,EAAMI,KACV0c,EAAiB9c,GAHjBA,EAAM6N,gBAIV,EAGEH,EAAaA,CAACzO,EAAOuO,KACvB,GAAa,KAAVvO,GAA0B,eAAVA,EAAuB,CACtC,MAAM8d,EAAwC,IAAIP,GACjC,cAAdhP,GACCuP,EAAsCjhB,UAAUsO,MAAQ,GACxD2S,EAAsCjhB,UAAUwO,aAAc,EAC9DmS,EAAwCM,GACtB,cAAfzQ,GACCC,EAAc,OAGA,eAAdiB,GACJuP,EAAsCnhB,WAAWwO,MAAQ,GACzD2S,EAAsCnhB,WAAW0O,aAAc,EAC/DmS,EAAwCM,GACtB,eAAfzQ,GACCC,EAAc,OAGA,UAAdiB,IACJuP,EAAsCb,MAAM9R,MAAQ,GACpD2S,EAAsCb,MAAM5R,aAAc,EAC1DmS,EAAwCM,GACtB,UAAfzQ,GACCC,EAAc,MAG1B,GAuIEyQ,EAA6BA,CAAChd,EAAO2D,KACpCA,GAAqB,kBAAXA,IAIT4Y,EAAmCN,GACnCQ,EAAwCN,GACxCE,EAAuB,MACvBM,EAAoB,GACpBxlB,EAAM8lB,wBAAuB,GACjC,EAuDEC,EAAuBziB,UACzB,GA9Ca0iB,MACb,MAAMJ,EAAwC,IAAIP,GAClD,IAAIpN,GAAU,EAwCd,MAtCiD,KAA9CkN,EAAgCxgB,WAAiE,KAA7CwgB,EAAgCzS,UACpC,KAA/CyS,EAAgC1gB,YAA+D,KAA1C0gB,EAAgCJ,QAErFa,EAAsCjhB,UAAUuO,SAAU,EAC1D0S,EAAsClT,SAASQ,SAAU,EACzD0S,EAAsCnhB,WAAWyO,SAAU,EAC3D0S,EAAsCb,MAAM7R,SAAU,EACtD+E,GAAU,GAG8C,KAAzDoN,EAAqC1gB,UAAUsO,QAC3CiF,OAAOC,OAAOkN,GAAsCjN,OAAMC,IAAuB,IAAfA,EAAKjF,UACtEwS,EAAsCjhB,UAAUuO,SAAU,EAC1D0S,EAAsCjhB,UAAUyO,OAAQ,EACxDgC,EAAc,cAElB6C,GAAU,GAG+C,KAA1DoN,EAAqC5gB,WAAWwO,QAC5CiF,OAAOC,OAAOkN,GAAsCjN,OAAMC,IAAuB,IAAfA,EAAKjF,UACtEwS,EAAsCnhB,WAAWyO,SAAU,EACvDe,EAAaqE,SACbrE,EAAaqE,QAAQlF,SAG7B6E,GAAU,GAG0C,KAArDoN,EAAqCN,MAAM9R,QACvCiF,OAAOC,OAAOkN,GAAsCjN,OAAMC,IAAuB,IAAfA,EAAKjF,UACtEwS,EAAsCb,MAAM7R,SAAU,EACtD0S,EAAsCb,MAAM3R,OAAQ,EACpDgC,EAAc,UAElB6C,GAAU,GAEdqN,EAAwCM,GACjC3N,CAAO,EAIX+N,GAAW,CACV3Q,GAAuB,GACvB,MAAM1R,ObhMQL,OAAOqB,EAAWogB,EAAOrS,EAAUjO,EAAYkO,KACrE,MAAMvO,EAAStB,IACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,EAAU,0CAAAO,OAAyCuB,EAAS,WAAAvB,OAAU2hB,EAAK,cAAA3hB,OAAasP,EAAQ,gBAAAtP,OAAeqB,EAAU,YAAArB,OAAWuP,GAAUvO,GACvKV,MAAK,SAAUC,GACZ,OAAOA,EAASW,IACpB,IACCV,OAAM,SAAUC,GACb,OAAOA,EAAMF,SAASY,MAC1B,GAAE,EawL6B0hB,CAAkBd,EAAgCxgB,UAAWwgB,EAAgCJ,MAAOI,EAAgCzS,SAAUyS,EAAgC1gB,WAAY,IACjN4Q,GAAuB,GACvB6P,EAAuBvhB,GACvByhB,EAAmCN,GACnCQ,EAAwCN,GA1D5CS,EAAQnN,QAAQ4N,QACDT,EAAQnN,QAAQ6N,iBAAiB,mBACzCC,SAAQ9L,GAASA,EAAM+L,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,OAC1EnR,EAAc,MAyDPzR,EAASgN,OAAS,GACjB+U,EAASpN,QAAQlF,OAEzB,GAGEuS,EAAoBve,IACN,KAAZA,EAAEgI,OAA2B,UAAXhI,EAAEiI,MACpB0W,GACJ,EAaES,EAAmCljB,UACrC+R,GAAuB,GACvB,MAAMkN,QAAuC7d,GAA0B+hB,EAAoB9hB,WACrF6d,EAAoC,CACtCrQ,cAAe,GACfsQ,YAAY,EACZlY,OAAQ,GACR6H,OAAQ,GACRC,kBAAmB,GACnB7F,OAAQ,GACR8F,YAAaiQ,EAA+BjQ,YAC5CoQ,cAAeH,EAA+BG,cAC9C/b,aAAc,GACd4L,QAAS,CACL5N,UAAW8hB,EAAoB9hB,UAC/B6N,WAAYiU,EAAoBjU,WAChCC,QAASgU,EAAoBhU,QAC7BC,SAAU+T,EAAoB/T,SAC9BjO,WAAYgiB,EAAoBhiB,WAChCuN,SAAUyU,EAAoBzU,SAC9BW,OAAQ8T,EAAoB9T,OAC5BC,eAAgB6T,EAAoB7T,eACpCC,YAAa4T,EAAoB5T,YACjCC,eAAgB2T,EAAoB3T,eACpCC,YAAa0T,EAAoB1T,cAGzC/S,EAAM0mB,wBAAwBlE,GAC9BnN,GAAuB,GACvBwQ,GAA4B,EAGhC,OACI5lB,eAAA2H,WAAA,CAAApH,SAAA,CACIP,eAACC,IAAM,CAACC,WAAW,EAAMC,SAAU,KAAMC,KAAML,EAAM2mB,oBAAqBpb,QAASA,CAAC1C,EAAO2D,IAAWqZ,EAA2Bhd,EAAO2D,GAASjM,sBAAsB,EAAMI,GAAI,CAAC,0BAA2B,CAACP,SAAU,UAAUI,SAAA,CAC9NC,cAACC,IAAW,CAACC,GAAI,CAAEgM,EAAG,EAAGC,EAAG,IAAKhM,WAAY,SAAUC,SAAU,OAAQC,UAAW,UAAWN,SAAC,6BAChGC,cAACQ,IAAU,CAACC,QAASA,IAAM2kB,IAA6BllB,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACjGC,cAACc,IAAS,CAACV,SAAS,aAExBZ,eAACuB,IAAa,CAACC,UAAQ,EAACd,GAAI,CAACiM,EAAG,aAAapM,SAAA,CACzCP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQyI,eAAgB,gBAAiBgB,UAAU,OAAO4a,IAAKnB,EAAQjlB,SAAA,CACtFC,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SAC/BC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE6kB,EAAqC1gB,UAAUsO,QAAa5S,KAAMglB,EAAqC1gB,UAAUwO,YAAY3S,SACxKC,cAACoM,KAAS,CACNlM,GAAI,CAAC,sBAAwB,CAACuZ,UAAW,UACzCrW,OAAyE,IAA3DwhB,EAAqC1gB,UAAUuO,QAC7DhK,MAAM,WAAQrH,QAAQ,WAAW+a,KAAK,QACtCiK,WAAS,EACTxM,SAAWC,GAAUA,GAAwB,cAAfnF,GAA8BmF,EAAMlH,QAClE+G,WAAY,CAAEC,UAAW,IACzBtL,SAAW1H,GAtRhBU,KACvB,GAAa,KAAVA,EAAa,CACZ,MAAM8d,EAAwC,IAAIP,GAC/Cvd,EAAM6I,OAAS,GACdiV,EAAsCjhB,UAAUsO,MAAQ,uEACxD2S,EAAsCjhB,UAAUuO,SAAU,EAC1D0S,EAAsCjhB,UAAUwO,aAAc,EAC9DmS,EAAwCM,GACxCR,GAAoC0B,IAChCA,EAAoCniB,UAAYmD,EACzC,IAAIgf,QAIG,cAAf3R,GACCC,EAAc,MAElBwQ,EAAsCjhB,UAAUsO,MAAQ,GACxD2S,EAAsCjhB,UAAUuO,SAAU,EAC1D0S,EAAsCjhB,UAAUwO,aAAc,EAC9DyS,EAAsCjhB,UAAUuO,SAAU,EAC1D0S,EAAsClT,SAASQ,SAAU,EACzD0S,EAAsCnhB,WAAWyO,SAAU,EAC3D0S,EAAsCb,MAAM7R,SAAU,EACtDoS,EAAwCM,GAEhD,KACI,CACA,MAAMA,EAAwC,IAAIP,GAClDO,EAAsCjhB,UAAUsO,MAAQ,GACxD2S,EAAsCjhB,UAAUwO,aAAc,EAC9DyS,EAAsCjhB,UAAUuO,SAAU,EAC1DoS,EAAwCM,EAC5C,GAqP6CmB,CAAkB3f,EAAE4H,OAAOlH,OAC5CmT,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,aAC1CqH,UAAWqH,QAKvB/V,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SAC/BC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE6kB,EAAqC3S,SAASO,QAAa5S,KAAMglB,EAAqC3S,SAASS,YAAY3S,SACtKC,cAACoM,KAAS,CACNlM,GAAI,CAAC,sBAAwB,CAACuZ,UAAW,UACzCG,SAAWC,GAAUA,GAAwB,aAAfnF,GAA6BmF,EAAMlH,QACjEvP,OAAwE,IAA1DwhB,EAAqC3S,SAASQ,QAC5DhK,MAAM,iBAASrH,QAAQ,WAAW+a,KAAK,QACvC9N,SAAW1H,GAhQjBU,KACJ,aAAfqN,GACCC,EAAc,MAGlBgQ,GAAoC0B,IAChCA,EAAoCpU,SAAW5K,EACxC,IAAIgf,MAGf,MAAMlB,EAAwC,IAAIP,GAClDO,EAAsCjhB,UAAUuO,SAAU,EAC1D0S,EAAsClT,SAASQ,SAAU,EACzD0S,EAAsCnhB,WAAWyO,SAAU,EAC3D0S,EAAsCb,MAAM7R,SAAU,EACtDoS,EAAwCM,EAAsC,EAiPjC9K,CAAiB1T,EAAE4H,OAAOlH,OAC3CqH,UAAY/H,GAAMue,EAAiBve,SAK/C3G,cAACya,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAI7a,SAChEC,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SAC/BC,cAAC6a,KAAa,CAAC9F,WAAY,CAAC,cAAchV,SACtCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE6kB,EAAqC5gB,WAAWwO,QAAa5S,KAAMglB,EAAqC5gB,WAAW0O,YAAY3S,SAC1KC,cAACqB,IAAG,CAACnB,GAAI,CAACyJ,MAAO,KAAK5J,SAClBC,cAAC8a,KAAU,CAACrS,MAAM,eAAYsS,OAAO,aACjCE,eAAe,EAAMC,mBAAiB,EACtClO,YAAcC,GAAWjN,cAACoM,KAAS,IAAKa,EAAQkP,KAAK,UACrD7G,UAAW,CACP6F,UACA,CACIvB,SAAUpG,EACVpQ,OAA0E,IAA5DwhB,EAAqC5gB,WAAWyO,QAC9D0J,KAAM,QACN3B,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,cAC1CqH,UAAY/H,GAAMue,EAAiBve,KAG3C0H,SAAWhH,GAtQ3BA,KACxB,GAAGA,EAAM,CACL,MAAMkf,EAAOlf,EAAM+T,GACbC,EAAQ,IAAIvU,KACZwU,EAAkBD,EAAME,cAAgBgL,EAAKhL,cAC7CC,EAAmBH,EAAMI,WAAa8K,EAAK9K,WAC3CC,EAAiBL,EAAMM,UAAY4K,EAAK5K,UACxCC,EAAMP,EAAME,cAAgBgL,EAAKhL,cAEvC,IAAIM,EAAgC,GAAlBP,EAAuBE,EACrCM,EAAYJ,EAEZA,EAAiB,IACjBG,GAAe,EACfC,GAAa,IAGjB,MAAMqJ,EAAwC,IAAIP,GAElD,GAAGvJ,EAAQkL,GAAQxK,MAAMH,IAAQC,EAAc,IAAuB,KAAhBA,GAAsBC,EAAY,GACpFqJ,EAAsCnhB,WAAWwO,MAAQ,sFACzD2S,EAAsCnhB,WAAW0O,aAAc,EAC/DyS,EAAsCnhB,WAAWyO,SAAU,EAC3DoS,EAAwCM,OAEtC,CACF,MAAMrO,EAAgBkE,KAAOuL,GAAMxL,OAAO,cAC1C4J,GAAoC0B,IAChCA,EAAoCriB,WAAa8S,EAC1C,IAAIuP,MAGflB,EAAsCnhB,WAAWwO,MAAQ,GACzD2S,EAAsCnhB,WAAW0O,aAAc,EAC/DyS,EAAsCjhB,UAAUuO,SAAU,EAC1D0S,EAAsClT,SAASQ,SAAU,EACzD0S,EAAsCnhB,WAAWyO,SAAU,EAC3D0S,EAAsCb,MAAM7R,SAAU,EACtDoS,EAAwCM,EAC5C,CACJ,GA8N6DqB,CAAmBnf,eAQhErH,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SAC/BC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE6kB,EAAqCN,MAAM9R,QAAa5S,KAAMglB,EAAqCN,MAAM5R,YAAY3S,SAChKC,cAACoM,KAAS,CACNlM,GAAI,CAAC,sBAAwB,CAACuZ,UAAW,UACzCG,SAAWC,GAAUA,GAAwB,UAAfnF,GAA0BmF,EAAMlH,QAC9DvP,OAAqE,IAAvDwhB,EAAqCN,MAAM7R,QACzDhK,MAAM,wCAAoBrH,QAAQ,WAAW+a,KAAK,QAClDzC,WAAY,CAAEC,UAAW,IACzBtL,SAAW1H,GA3OpBU,KACnB,GAAa,KAAVA,EAAa,CACZ,MAAM8d,EAAwC,IAAIP,GAC/Cvd,EAAM6I,OAAS,IACdiV,EAAsCb,MAAM9R,MAAQ,sEACpD2S,EAAsCb,MAAM5R,aAAc,EAC1DmS,EAAwCM,GAExCR,GAAoC0B,IAChCA,EAAoC/B,MAAQjd,EACrC,IAAIgf,QAIG,UAAf3R,GACCC,EAAc,MAElBwQ,EAAsCb,MAAM9R,MAAQ,GACpD2S,EAAsCb,MAAM5R,aAAc,EAC1DyS,EAAsCb,MAAM7R,SAAU,EACtD0S,EAAsCjhB,UAAUuO,SAAU,EAC1D0S,EAAsClT,SAASQ,SAAU,EACzD0S,EAAsCnhB,WAAWyO,SAAU,EAC3DoS,EAAwCM,GAEhD,KACI,CACA,MAAMA,EAAwC,IAAIP,GAClDO,EAAsCb,MAAM9R,MAAQ,GACpD2S,EAAsCb,MAAM5R,aAAc,EAC1DyS,EAAsCb,MAAM7R,SAAU,EACtDoS,EAAwCM,EAC5C,GA2M6CsB,CAAc9f,EAAE4H,OAAOlH,OACxCqH,UAAWqH,EACXyE,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,kBAO1DrH,cAACqB,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQyI,eAAgB,SAAUrI,GAAI,KAAKnC,SAC1DC,cAAC4K,IAAM,CAACxJ,QAAQ,YAAYd,MAAM,UAAUG,QAASA,IAAM6kB,IAAuBvlB,SAAC,qBAGvFC,cAACqB,IAAG,CAAAtB,SAEIykB,EACmC,IAA/BA,EAAoBtU,OACpB1Q,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACkgB,KAAc,CAAC3U,UAAW4U,KAAOjgB,GAAI,CAACkgB,UAAW,EAAGle,GAAI,KAAMwkB,SAAU,EAAGhY,UAAYtG,GApI5FA,KACN,cAAdA,EAAMI,IACNuc,GAAqB4B,GAAeC,KAAKC,IAAIF,EAAY,EAAGnC,EAAoBtU,OAAS,KACpE,YAAd9H,EAAMI,IACbuc,GAAqB4B,GAAeC,KAAKE,IAAIH,EAAY,EAAG,KACvC,UAAdve,EAAMI,KAAwC,OAArBsc,GAChCiB,EAAiCvB,EAAoBM,GACzD,EA6H8HiC,CAAmB3e,GAAQ+d,IAAKlB,EAASllB,SACvIP,eAACyhB,KAAK,CAACC,cAAY,EAAAnhB,SAAA,CACfC,cAACohB,KAAS,CAAArhB,SACNP,eAAC6hB,KAAQ,CAACnhB,GAAI,CAAC,OAAQ,CAACI,MAAO,mBAAoBqB,gBAAiB,SAAS5B,SAAA,CACzEC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,QAAQL,SAAC,aAChDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,QAAQL,SAAC,mBAChDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,QAAQL,SAAC,iBAChDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,QAAQL,SAAC,sBAChDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,QAAQL,SAAC,2BAChDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,QAAQL,SAAC,qBAGxDC,cAACwhB,KAAS,CAAAzhB,SACLykB,EACGA,EAAoB/Z,KAAI,CAACub,EAAqBgB,IAC1CxnB,eAAC6hB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAAsC1hB,GAAI,CAACgL,OAAQ,WACpE+b,SAAUnC,IAAqBkC,EAAqBjnB,SAAA,CACpDC,cAACshB,KAAS,CAACC,MAAM,OAAMxhB,SAAGimB,EAAoB9hB,YAC9ClE,cAACshB,KAAS,CAACC,MAAM,OAAMxhB,SAAGimB,EAAoB/T,WAC9CjS,cAACshB,KAAS,CAACC,MAAM,OAAMxhB,SAAGib,KAAOgL,EAAoBhiB,YAAY+W,OAAO,gBACxE/a,cAACshB,KAAS,CAACC,MAAM,OAAMxhB,UAAkC,IAA/BimB,EAAoB9T,OAAkB,MAAQ,YACxElS,cAACshB,KAAS,CAACC,MAAM,OAAMxhB,SAAGimB,EAAoB5G,cAC9Cpf,cAACshB,KAAS,CAACC,MAAM,OAAMxhB,SAAGimB,EAAoB7T,gBAAkB6T,EAAoB3T,mBAPnD2U,KAWzC,YAKhBxnB,eAAC2B,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACG,UAAW,SAAU6B,GAAI,IAAK/B,WAAY,SAAUG,MAAO,SAASP,SAAA,CAAC,oBAAUykB,EAAoBtU,OAAO,2BAG/IlQ,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACG,UAAW,SAAU6B,GAAI,IAAK/B,WAAY,SAAUG,MAAO,OAAOP,SAAC,gDAEhH,aAMhBC,cAAC+Q,GAAe,CACZC,oBAAqBA,EAAqB4D,uBAAwBA,MAIlF,E,UC27CesS,OAx5Df,SAAqB3nB,GAEnB,MAAM4nB,EAA8B,CAClCzV,cAAe,GACfsQ,YAAY,EACZlY,OAAQ,GACR6H,OAAQ,GACRC,kBAAmB,GACnB7F,OAAQ,GACR8F,aAAa,EACboQ,cAAe,GACf/b,aAAc,GACd4L,QAAS,CACP5N,UAAW,GACX6N,WAAY,GACZC,QAAS,GACTC,SAAU,GACVjO,WAAY,GACZuN,SAAU,GACVW,OAAQ,GACRC,eAAgB,GAChBC,YAAa,GACbC,eAAgB,GAChBC,YAAa,KAIX8U,EAA2B,CAC/BpjB,WAAY,KACZkO,OAAQ,CACN7K,MAAO,KACPgM,YAAY,GAEdR,SAAU,CACRxL,MAAO,KACPgM,YAAY,GAEdP,SAAU,CACRzL,MAAO,KACPgM,YAAY,GAEdN,KAAM,CACJ1L,MAAO,KACPgM,YAAY,GAEdgU,YAAa,CACXhgB,MAAO,KACPgM,YAAY,GAEdxB,aAAa,GAGTyV,EAAmC,CACvCvV,WAAY,CAAES,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpEzO,UAAW,CAAEsO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACnEV,SAAU,CAAEO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClE3O,WAAY,CAAEwO,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACpET,OAAQ,CAAEM,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEE,SAAU,CAAEL,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEG,SAAU,CAAEN,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAClEI,KAAM,CAAEP,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC9DX,QAAS,CAAEQ,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACjER,eAAgB,CAAEK,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACxEP,YAAa,CAAEI,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrEL,YAAa,CAAEE,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrE7I,OAAQ,CAAE0I,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEhB,OAAQ,CAAEa,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAChEf,kBAAmB,CAAEY,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GAC3E0U,YAAa,CAAE7U,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,GACrE5G,OAAQ,CAAEyG,MAAO,GAAIC,SAAS,EAAOC,aAAa,EAAOC,OAAO,IAG5DK,EAAa,CACjB,CAACC,YAAa,EAAGC,WAAY,MAAOC,aAAa,GACjD,CAACF,YAAa,EAAGC,WAAY,UAAMC,aAAa,IAG5CoU,EAAkB,CACtB,CAACC,iBAAkB,EAAGC,gBAAiB,sCAA4BxF,cAAe,GAClF,CAACuF,iBAAkB,EAAGC,gBAAiB,oCAAwBxF,cAAe,KAGzEkB,EAA2BH,GAAgCzd,oBAAS,IACpE8d,EAAoCN,GAAyCxd,oBAAS,IAEtF2gB,EAAqBb,GAA0B9f,oBAAS,IAKxDyL,EAAqB4D,GAA0BrP,oBAAS,IAExDvC,EAAsBijB,GAA2B1gB,mBAAS4hB,IAC1DO,EAA2BC,GAAgCpiB,mBAAS+hB,IACpE5S,EAAYC,GAAiBpP,mBAAS,OAEtCqiB,EAAmBC,GAAwBtiB,mBAAS6hB,IAEpDjT,EAAcC,GAAmB7O,mBAAS,KAC1C8O,EAAcC,GAAmB/O,mBAAS,CAACgP,KAAM,GAAI/O,SAAS,KAC9DgP,EAAUC,GAAelP,mBAAS,CAACgP,KAAM,GAAI/O,SAAS,IAEvDwf,EAAUzR,iBAAO,MACjBuU,EAAgBvU,iBAAO,MACvBC,EAAeD,iBAAO,MACtBD,EAAYC,iBAAO,MAEnBsB,EAAeC,aAAY,CAC/BC,WAAY,CACVC,WAAY,CACVC,aAAc,CACZxE,UAAW,SACXyE,OAAO,EACPC,gBAAiB,CACfC,QAAS,CACPlV,GAAI,CACFmV,QAAS,YAGbH,MAAO,CACLhV,GAAI,CACFI,MAAO,aAIbgV,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN3I,QAAS,CACP4I,OAAQ,CAAC,GAAI,aAWzBK,EAAiB3N,IAChB,QAAQ4N,KAAK5N,EAAMI,MAAsB,cAAdJ,EAAMI,KAAqC,WAAdJ,EAAMI,KAAkC,cAAdJ,EAAMI,KAAqC,eAAdJ,EAAMI,KAAsC,QAAdJ,EAAMI,KAEpJJ,EAAM6N,gBACV,EAGIC,EAAgBA,CAACpJ,EAAO7H,KAAsB,IAApB,WAAEkR,GAAYlR,EAC5C,MAAMmR,EAAkBD,EAAWE,cAEnC,OAAOvJ,EAAQwJ,QAAOvJ,IACpB,MAAMwJ,EAAqBxJ,EAAOkF,SAASoE,cACrCG,EAAWzJ,EAAOkF,SAASvL,MAAM,KAAK+D,KAAIgM,GAAQA,EAAK,KAAIC,KAAK,IAAIL,cAE1E,OACEE,EAAmBI,SAASP,IAC5BI,EAASG,SAASP,EAAgB,GAEpC,EAGET,EAAeC,IACF,WAAdA,EACDiS,GAAqBE,IACnBA,EAAsB7V,OAAOmB,YAAa,EACnC,IACF0U,MAIa,aAAdnS,EACNiS,GAAqBE,IACnBA,EAAsBlV,SAASQ,YAAa,EACrC,IACF0U,MAIc,aAAdnS,EACPiS,GAAqBE,IACnBA,EAAsBjV,SAASO,YAAa,EACrC,IACF0U,MAIa,SAAdnS,EACNiS,GAAqBE,IACnBA,EAAsBhV,KAAKM,YAAa,EACjC,IACF0U,MAIa,gBAAdnS,GACNiS,GAAqBE,IACnBA,EAAsBV,YAAYhU,YAAa,EACxC,IACF0U,KAGT,EAGIjS,EAAaA,CAACzO,EAAOuO,KACzB,GAAa,KAAVvO,GAA0B,eAAVA,EAAuB,CACxC,MAAM2gB,EAA6B,IAAIN,GACtB,eAAd9R,IACEtC,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAE1BvE,EAAUuE,QAAUoC,YAAW,KAC7B+N,EAA2BjW,WAAWS,MAAQ,GAC9CwV,EAA2BjW,WAAWW,aAAc,EACpDsV,EAA2BjW,WAAWU,SAAU,EAClDuV,EAA2BjW,WAAWY,OAAQ,EAC5CgV,EAA6BK,EAA2B,GACvD,KAsCY,gBAAdpS,GACEtC,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAE1BvE,EAAUuE,QAAUoC,YAAW,KAC7B+N,EAA2B1V,YAAYE,MAAQ,GAC/CwV,EAA2B1V,YAAYI,aAAc,EACrDsV,EAA2B1V,YAAYG,SAAU,EACjDuV,EAA2B9jB,UAAUyO,OAAQ,EAC7CgV,EAA6BK,EAA2B,GACvD,KAEiB,WAAdpS,EACNiS,GAAqBE,IACnBA,EAAsB7V,OAAOmB,YAAa,EACnC,IAAK0U,MAGM,aAAdnS,EACNiS,GAAqBE,IACnBA,EAAsBlV,SAASQ,YAAa,EACrC,IAAK0U,MAGM,aAAdnS,EACNiS,GAAqBE,IACnBA,EAAsBjV,SAASO,YAAa,EACrC,IAAK0U,MAGM,SAAdnS,EACNiS,GAAqBE,IACnBA,EAAsBhV,KAAKM,YAAa,EACjC,IAAK0U,MAGM,gBAAdnS,GACNiS,GAAqBE,IACnBA,EAAsBV,YAAYhU,YAAa,EACxC,IAAK0U,KAGlB,KACkB,KAAV1gB,IACW,WAAduO,EACDiS,GAAqBE,IACnBA,EAAsB7V,OAAOmB,YAAa,EACnC,IAAK0U,MAGM,aAAdnS,EACNiS,GAAqBE,IACnBA,EAAsBlV,SAASQ,YAAa,EACrC,IAAK0U,MAGM,aAAdnS,EACNiS,GAAqBE,IACnBA,EAAsBjV,SAASO,YAAa,EACrC,IAAK0U,MAGM,SAAdnS,EACNiS,GAAqBE,IACnBA,EAAsBhV,KAAKM,YAAa,EACjC,IAAK0U,MAGM,gBAAdnS,GACNiS,GAAqBE,IACnBA,EAAsBV,YAAYhU,YAAa,EACxC,IAAK0U,MAGlB,EAk8BI7E,EAAwBA,KAC5BjJ,YAAW,KAtPS3C,MACpB,IAAIE,GAAU,EACd,MAAMwQ,EAA6B,IAAIN,GAgPvC,MA9OkD,KAA/CA,EAA0B3V,WAAWS,QACnCiF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2BjW,WAAWY,OAAQ,EAC9CgC,EAAc,eAEhB6C,GAAU,GAGkC,KAA3CxU,EAAqB8O,QAAQ5N,YAC9B8jB,EAA2B9jB,UAAUsO,MAAQ,uDAC7CwV,EAA2B9jB,UAAUwO,aAAc,EACnDsV,EAA2B9jB,UAAUuO,SAAU,EAC5CgF,OAAOC,OAAOgQ,GAA2B/P,OAAMC,IAAuB,IAAfA,EAAKjF,UAC7DqV,EAA2B9jB,UAAUyO,OAAQ,EAC7CgC,EAAc,cAEhB6C,GAAU,GAGqC,KAA9CkQ,EAA0BxjB,UAAUsO,QAClCiF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2B9jB,UAAUyO,OAAQ,EAC7CgC,EAAc,cAEhB6C,GAAU,GAGiC,KAA1CxU,EAAqB8O,QAAQG,WAC9B+V,EAA2B/V,SAASO,MAAQ,8CAC5CwV,EAA2B/V,SAASS,aAAc,EAClDsV,EAA2B/V,SAASQ,SAAU,EAC3CgF,OAAOC,OAAOgQ,GAA2B/P,OAAMC,IAAuB,IAAfA,EAAKjF,UAC7DqV,EAA2B/V,SAASU,OAAQ,EAC5CgC,EAAc,aAEhB6C,GAAU,GAGmC,KAA5CxU,EAAqB8O,QAAQ9N,aAC9BgkB,EAA2BhkB,WAAWwO,MAAQ,4CAC9CwV,EAA2BhkB,WAAW0O,aAAc,EACpDsV,EAA2BhkB,WAAWyO,SAAU,EAC7CgF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2BhkB,WAAW2O,OAAQ,EAC1Ca,EAAaqE,SACfrE,EAAaqE,QAAQlF,SAGzB6E,GAAU,GAGsC,KAA/CkQ,EAA0B1jB,WAAWwO,QACnCiF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2BhkB,WAAW2O,OAAQ,EAC1Ca,EAAaqE,SACfrE,EAAaqE,QAAQlF,SAGzB6E,GAAU,GAG+B,KAAxCxU,EAAqB8O,QAAQI,SAC9B8V,EAA2B9V,OAAOM,MAAQ,iDAC1CwV,EAA2B9V,OAAOQ,aAAc,EAChDsV,EAA2B9V,OAAOO,SAAU,EACzCgF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2B9V,OAAOS,OAAQ,EAC1CkV,GAAqBE,IACnBA,EAAsB7V,OAAOmB,YAAa,EACnC,IAAI0U,MAEfpT,EAAc,WAEd6C,GAAU,GAG4B,OAArCoQ,EAAkB/U,SAASxL,QAC5B2gB,EAA2BnV,SAASL,MAAQ,kDAC5CwV,EAA2BnV,SAASH,aAAc,EAClDsV,EAA2BnV,SAASJ,SAAU,EAC3CgF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2BnV,SAASF,OAAQ,EAC5CkV,GAAqBE,IACnBA,EAAsBlV,SAASQ,YAAa,EACrC,IAAI0U,MAEbpT,EAAc,aAEhB6C,GAAU,GAG4B,OAArCoQ,EAAkB9U,SAASzL,QAC5B2gB,EAA2BlV,SAASN,MAAQ,oDAC5CwV,EAA2BlV,SAASJ,aAAc,EAClDsV,EAA2BlV,SAASL,SAAU,EAC3CgF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2BlV,SAASH,OAAQ,EAC5CkV,GAAqBE,IACnBA,EAAsBjV,SAASO,YAAa,EACrC,IAAI0U,MAEbpT,EAAc,aAEhB6C,GAAU,GAGwB,OAAjCoQ,EAAkB7U,KAAK1L,QACxB2gB,EAA2BjV,KAAKP,MAAQ,sDACxCwV,EAA2BjV,KAAKL,aAAc,EAC9CsV,EAA2BjV,KAAKN,SAAU,EACvCgF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2BjV,KAAKJ,OAAQ,EACxCkV,GAAqBE,IACnBA,EAAsBhV,KAAKM,YAAa,EACjC,IAAI0U,MAEbpT,EAAc,SAEhB6C,GAAU,GAGgC,KAAzCxU,EAAqB8O,QAAQE,UAC9BgW,EAA2BhW,QAAQQ,MAAQ,sDAC3CwV,EAA2BhW,QAAQU,aAAc,EACjDsV,EAA2BhW,QAAQS,SAAU,EAC1CgF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2BhW,QAAQW,OAAQ,EAC3CgC,EAAc,YAEhB6C,GAAU,GAGuC,KAAhDxU,EAAqB8O,QAAQK,gBAAyE,KAAhDnP,EAAqB8O,QAAQO,iBACpF2V,EAA2B7V,eAAeK,MAAQ,qDAClDwV,EAA2B7V,eAAeO,aAAc,EACxDsV,EAA2B7V,eAAeM,SAAU,EACjDgF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2B7V,eAAeQ,OAAQ,EAClDgC,EAAc,mBAEhB6C,GAAU,GAGoC,KAA7CxU,EAAqB8O,QAAQM,aAAmE,KAA7CpP,EAAqB8O,QAAQQ,cACjF0V,EAA2B5V,YAAYI,MAAQ,iEAC/CwV,EAA2B5V,YAAYM,aAAc,EACrDsV,EAA2B5V,YAAYK,SAAU,EAC9CgF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2B5V,YAAYO,OAAQ,EAC/CgC,EAAc,gBAEhB6C,GAAU,GAGuC,KAAhDkQ,EAA0BtV,YAAYI,QACpCiF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2B5V,YAAYO,OAAQ,EAC/CgC,EAAc,gBAEhB6C,GAAU,GAGuC,KAAhDkQ,EAA0BpV,YAAYE,QACpCiF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2B1V,YAAYK,OAAQ,EAC/CgC,EAAc,gBAEhB6C,GAAU,GAGuB,KAAhCxU,EAAqB8G,SACtBke,EAA2Ble,OAAO0I,MAAQ,8CAC1CwV,EAA2Ble,OAAO4I,aAAc,EAChDsV,EAA2Ble,OAAO2I,SAAU,EACzCgF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2Ble,OAAO6I,OAAQ,EAC1CgC,EAAc,WAEhB6C,GAAU,GAGuB,KAAhCxU,EAAqB2O,SACtBqW,EAA2BrW,OAAOa,MAAQ,gDAC1CwV,EAA2BrW,OAAOe,aAAc,EAChDsV,EAA2BrW,OAAOc,SAAU,EACzCgF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2BrW,OAAOgB,OAAQ,EAC1CgC,EAAc,WAEhB6C,GAAU,GAGkC,KAA3CxU,EAAqB4O,oBACtBoW,EAA2BpW,kBAAkBY,MAAQ,6DACrDwV,EAA2BpW,kBAAkBc,aAAc,EAC3DsV,EAA2BpW,kBAAkBa,SAAU,EACpDgF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2BpW,kBAAkBe,OAAQ,EACrDgC,EAAc,sBAEhB6C,GAAU,GAG8B,KAAvCxU,EAAqBif,gBACtB+F,EAA2BX,YAAY7U,MAAQ,yDAC/CwV,EAA2BX,YAAY3U,aAAc,EACrDsV,EAA2BX,YAAY5U,SAAU,EAC9CgF,OAAOC,OAAOsQ,GAA4BrQ,OAAMC,IAAuB,IAAfA,EAAKjF,UAC9DqV,EAA2BX,YAAY1U,OAAQ,EAC/CkV,GAAqBE,IACnBA,EAAsBV,YAAYhU,YAAa,EACxC,IAAI0U,MAEbpT,EAAc,gBAEhB6C,GAAU,GAQ6B,KAAtCxU,EAAqBkD,eAC2B,KAA9C3G,EAAMiQ,uBAAuBtJ,cAC9B2H,IAAMzK,MAAM,8EAA+C,CAACiM,QAAS,WACrEmI,GAAU,GAGwC,KAA9CjY,EAAMiQ,uBAAuBtJ,cACnC+f,GAAwB/L,IACtBA,EAAyBhU,aAAe3G,EAAMiQ,uBAAuBtJ,aAC5DgU,MAKbyN,EAA6BK,GACtBxQ,CAAO,EAKTF,KACDwQ,EAAcjQ,QAAQlF,QACnBpT,EAAM0oB,8BACPC,IAGAlF,GAA6B,GAEjC,GACC,IAAI,EAGHkF,EAA4BrlB,UAChC+R,GAAuB,GACvB,MAAMuT,QAA0C9kB,EAA0BL,GAC1B,MAA7CmlB,EAAkCrkB,QACnC+J,IAAM8B,QAAQwY,EAAkCtkB,KAAM,CAACwL,QAAS,aAChE9P,EAAMwY,4BAA2B,GACjCkL,KAGApV,IAAMzK,MAAM+kB,EAAkCtkB,KAAM,CAACwL,QAAS,WAEhEuF,GAAuB,EAAM,EA+EzBqO,EAAmBA,KACvB+B,EAAQnN,QAAQ4N,QACDT,EAAQnN,QAAQ6N,iBAAiB,mBACzCC,SAAQ9L,GAASA,EAAM+L,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,OAE1E+B,EAAqBT,GAErB9S,GAAgB2C,IACdA,EAAiBzR,SAAU,EAC3ByR,EAAiB1C,KAAO,GACjB,IAAI0C,MAEbxC,GAAYyC,IACVA,EAAa1R,SAAU,EACvB0R,EAAa3C,KAAO,GACb,IAAI2C,MAGV3X,EAAM0oB,+BACP1oB,EAAM2iB,mCAGRvN,EAAc,MAEdsR,EAAwBkB,GACxBQ,EAA6BL,GAE7BQ,EAAcjQ,QAAQlF,OAAO,EAGzByV,EAA4BA,KAChCnF,IACAgD,EAAwBkB,GACxBU,EAAqBT,GACrBO,EAA6BL,GAC7BjC,GAAuB,EAAK,EAqE9B,OAnDAne,qBAAU,KAfoBrE,WAC5B,MAAMK,QAAiB+N,KACP,MAAb/N,GACDkR,EAAgBlR,EAClB,EAYA+U,GACA6P,EAAcjQ,QAAQlF,OAAO,GAC5B,IAEHzL,qBAAU,MAC+B,IAApClE,EAAqBgf,YAvIgBnf,WACxC+R,GAAuB,GACvBgL,SAASyI,eAAe,qBAAqBhhB,MAAQrE,EAAqB8O,QAAQC,WAClF6N,SAASyI,eAAe,aAAahhB,MAAQrE,EAAqB8O,QAAQ5N,UAC1E0b,SAASyI,eAAe,mBAAmBhhB,MAAQrE,EAAqB8O,QAAQG,SAEhF,MAAMqW,EAAqB,IAAIV,GAC/BU,EAAmBtkB,WAAagX,KAAOhY,EAAqB8O,QAAQ9N,YAEpE,MAAMd,QAAiBoO,GAAuBtO,EAAqB8O,QAAQP,UACrE+G,QAA6BpH,GAAgBhO,EAASqV,cACtDC,QAAyBpH,GAAYlO,EAASuV,cAE9C8P,EAAkBvV,EAAWzJ,WAAU2I,GAAUA,EAAOiB,cAAgBnQ,EAAqB8O,QAAQI,SACrG2G,EAAoB1E,EAAa5K,WAAUsJ,GAAYA,EAASjE,OAAS1L,EAASqV,eAClFO,EAAoBR,EAAqB/O,WAAUuJ,GAAYA,EAASlE,OAAS1L,EAASuV,eAC1FM,EAAgBP,EAAiBjP,WAAUwJ,GAAQA,EAAKnE,OAAS1L,EAAS8V,WAC1EwP,EAAuBjB,EAAgBhe,WAAU8d,GAAeA,EAAYpF,gBAAkBjf,EAAqBif,gBAEzHqG,EAAmBpW,OAAO7K,MAAQ2L,EAAWuV,GAC7CD,EAAmBzV,SAASxL,MAAQ8M,EAAa0E,GACjDyP,EAAmBxV,SAASzL,MAAQiR,EAAqBQ,GACzDwP,EAAmBvV,KAAK1L,MAAQmR,EAAiBO,GACjDuP,EAAmBjB,YAAYhgB,MAAQkgB,EAAgBiB,GACvDF,EAAmBzW,YAAc7O,EAAqB6O,YACtDgW,EAAqBS,GAErB1I,SAASyI,eAAe,kBAAkBhhB,MAAQrE,EAAqB8O,QAAQE,QAC/E4N,SAASyI,eAAe,yBAAyBhhB,MAAQrE,EAAqB8O,QAAQK,eACtFyN,SAASyI,eAAe,sBAAsBhhB,MAAQrE,EAAqB8O,QAAQM,YACnFwN,SAASyI,eAAe,yBAAyBhhB,MAAQrE,EAAqB8O,QAAQO,eACtFuN,SAASyI,eAAe,sBAAsBhhB,MAAQrE,EAAqB8O,QAAQQ,YAEnFqV,EAA6BL,GAC7B1S,GAAuB,GACvBD,EAAc,SAAS,EAqGrB8T,EACF,GACC,CAACzlB,EAAqBgf,aAEzB9a,qBAAU,KACL3H,EAAM0oB,gCACPhC,EAAwB1mB,EAAM0oB,+BAxGeplB,WAC/C+R,GAAuB,GACvBgL,SAASyI,eAAe,qBAAqBhhB,MAAQ9H,EAAM0oB,8BAA8BnW,QAAQC,WACjG6N,SAASyI,eAAe,aAAahhB,MAAQ9H,EAAM0oB,8BAA8BnW,QAAQ5N,UACzF0b,SAASyI,eAAe,mBAAmBhhB,MAAQ9H,EAAM0oB,8BAA8BnW,QAAQG,SAE/F,MAAMqW,EAAqB,IAAIV,GAC/BU,EAAmBtkB,WAAagX,KAAOzb,EAAM0oB,8BAA8BnW,QAAQ9N,YAEnF,MAAMd,QAAiBoO,GAAuB/R,EAAM0oB,8BAA8BnW,QAAQP,UACpF+G,QAA6BpH,GAAgBhO,EAASqV,cACtDC,QAAyBpH,GAAYlO,EAASuV,cAE9C8P,EAAkBvV,EAAWzJ,WAAU2I,GAAUA,EAAOiB,cAAgB5T,EAAM0oB,8BAA8BnW,QAAQI,SACpH2G,EAAoB1E,EAAa5K,WAAUsJ,GAAYA,EAASjE,OAAS1L,EAASqV,eAClFO,EAAoBR,EAAqB/O,WAAUuJ,GAAYA,EAASlE,OAAS1L,EAASuV,eAC1FM,EAAgBP,EAAiBjP,WAAUwJ,GAAQA,EAAKnE,OAAS1L,EAAS8V,WAC1EwP,EAAuBjB,EAAgBhe,WAAU8d,GAAeA,EAAYpF,gBAAkB1iB,EAAM0oB,8BAA8BhG,gBAExIqG,EAAmBpW,OAAO7K,MAAQ2L,EAAWuV,GAC7CD,EAAmBzV,SAASxL,MAAQ8M,EAAa0E,GACjDyP,EAAmBxV,SAASzL,MAAQiR,EAAqBQ,GACzDwP,EAAmBvV,KAAK1L,MAAQmR,EAAiBO,GACjDuP,EAAmBjB,YAAYhgB,MAAQkgB,EAAgBiB,GACvDF,EAAmBzW,YAActS,EAAM0oB,8BAA8BpW,YACrEgW,EAAqBS,GAErB1I,SAASyI,eAAe,kBAAkBhhB,MAAQ9H,EAAM0oB,8BAA8BnW,QAAQE,QAC9F4N,SAASyI,eAAe,yBAAyBhhB,MAAQ9H,EAAM0oB,8BAA8BnW,QAAQK,eACrGyN,SAASyI,eAAe,sBAAsBhhB,MAAQ9H,EAAM0oB,8BAA8BnW,QAAQM,YAClGwN,SAASyI,eAAe,yBAAyBhhB,MAAQ9H,EAAM0oB,8BAA8BnW,QAAQO,eACrGuN,SAASyI,eAAe,sBAAsBhhB,MAAQ9H,EAAM0oB,8BAA8BnW,QAAQQ,YAElGqV,EAA6BL,GAC7B1S,GAAuB,GACvBD,EAAc,SAAS,EAsErB+T,GACF,GACC,CAACnpB,EAAM0oB,gCAEV/gB,qBAAU,KACL3H,EAAMopB,aAC0B,IAA9BxF,IAA8D,IAAxB+C,GACvCnD,GAAsC,GACtCxjB,EAAMqpB,cAAa,KAGnB1F,IACA3jB,EAAMqpB,cAAa,KAIpBrpB,EAAMspB,aAC0B,IAA9B1F,IAA8D,IAAxB+C,GAIvCjD,IAHA1jB,EAAMupB,cAAa,IAQpBvpB,EAAMwpB,aAC0B,IAA9B5F,IAA8D,IAAxB+C,GAIvCkC,IAHA7oB,EAAMypB,cAAa,GAMvB,GACC,CAACzpB,EAAMopB,UAAWppB,EAAMspB,UAAWtpB,EAAMwpB,YAG1CvpB,eAAA2H,WAAA,CAAApH,SAAA,CACEC,cAACiO,KAAS,CAAC/N,GAAI,CAAC,4BAA6B,CAACgB,GAAI,IAAInB,SACpDP,eAAC6B,IAAG,CAACnB,GAAI,CAAE+oB,UAAW,UAAW/a,aAAc,OAAQkS,UAAW,EAAGhH,GAAI,IAAKC,GAAI,IAAKpY,GAAI,IAAKC,GAAI,IAAKgB,GAAI,KAAKnC,SAAA,CAChHC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACG,UAAW,SAAUF,WAAY,SAAUG,MAAO,QAAQP,SAAC,8CACzFP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQyI,eAAgB,gBAAiB+O,SAAU,QAAS/N,UAAU,OAAO4a,IAAKnB,EAAQjlB,SAAA,CAE7GC,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0B3V,WAAWS,QAAa5S,KAAM8nB,EAA0B3V,WAAWW,YAAajC,UAAU,OAAOyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAAMzB,SAC1MC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,MAAO8P,UAAW,QAAQ1Z,SAC5CC,cAACoM,KAAS,CAAChJ,OAA+D,IAAjDskB,EAA0B3V,WAAWU,QAA0B0R,UAA8C,IAApCnhB,EAAqBgf,WACrHvZ,MAAM,4BAAerH,QAAQ,WAAWiD,GAAG,oBAC3CuV,SAAyB,eAAflF,EAA+BmF,GAAUA,GAAwB,eAAfnF,GAA+BmF,EAAMlH,QAAUmV,EAC3GzZ,SAAW1H,GA5pCCU,KAC1B,GAAa,KAAVA,EAAa,CACI,eAAfqN,GACDC,EAAc,MAGhB,MAAMoF,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAC7B,MAAM+N,EAA6B,IAAIN,GACpC3N,EAAW7J,OAAS,IACrB8X,EAA2BjW,WAAWS,MAAQ,8DAC9CwV,EAA2BjW,WAAWW,aAAc,EACpDsV,EAA2BjW,WAAWU,SAAU,EAChDuV,EAA2BjW,WAAWY,OAAQ,EAC9CgV,EAA6BK,KAG7B/B,GAAwB/L,IACtBA,EAAyBpI,QAAQC,WAAagI,EACvC,IAAKG,MAGd8N,EAA2BjW,WAAWS,MAAQ,GAC9CwV,EAA2BjW,WAAWW,aAAc,EACpDsV,EAA2BjW,WAAWU,SAAU,EAChDuV,EAA2BjW,WAAWY,OAAQ,EAC9CgV,EAA6BK,GAC/B,GACC,IACL,KACI,CACgB,eAAftT,GACDC,EAAc,MAGhB,MAAMqT,EAA6B,IAAIN,GACvCM,EAA2BjW,WAAWS,MAAQ,GAC9CwV,EAA2BjW,WAAWW,aAAc,EACpDsV,EAA2BjW,WAAWU,SAAU,EAChDuV,EAA2BjW,WAAWY,OAAQ,EAC9CgV,EAA6BK,EAC/B,GA+mC+B7N,CAAmBxT,EAAE4H,OAAOlH,OAC7CqH,UAAWqH,EACXyE,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,cAC1CqS,WAAY,CAAErM,MAAO,CAAE8b,oBAAqBnmB,EAAqBgf,WAAa,UAAa,SAAUrI,UAAW,IAChHyP,iBAAqD,IAApCpmB,EAAqBgf,WAAsB,CAACqH,OAAQnhB,SAAQ,IAAU,aAM/FlI,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0BxjB,UAAUsO,QAAa5S,KAAM8nB,EAA0BxjB,UAAUwO,YAAajC,UAAU,MAAMyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAAMzB,SACvMC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,MAAO8P,UAAW,QAAQ1Z,SAC5CC,cAACoM,KAAS,CAAChJ,OAA8D,IAAhDskB,EAA0BxjB,UAAUuO,QAA0B0R,UAA8C,IAApCnhB,EAAqBgf,WACpHvZ,MAAM,WAAQrH,QAAQ,WAAWiD,GAAG,YACpCuV,SAAWC,GAAUA,GAAwB,cAAfnF,GAA8BmF,EAAMlH,QAClEtE,SAAW1H,GA5nCAU,KACzB,GAAa,KAAVA,EAAa,CACd,MAAM0S,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAC7B,MAAM+N,EAA6B,IAAIN,GACpC3N,EAAW7J,OAAS,GACrB8X,EAA2B9jB,UAAUsO,MAAQ,wDAC7CwV,EAA2B9jB,UAAUwO,aAAc,EACnDsV,EAA2B9jB,UAAUuO,SAAU,EAC/CuV,EAA2B9jB,UAAUyO,OAAQ,EAC7CgV,EAA6BK,KAGX,cAAftT,GACDC,EAAc,MAGhBsR,GAAwB/L,IACtBA,EAAyBpI,QAAQ5N,UAAY6V,EACtC,IAAKG,MAGd8N,EAA2B9jB,UAAUsO,MAAQ,GAC7CwV,EAA2B9jB,UAAUwO,aAAc,EACnDsV,EAA2B9jB,UAAUuO,SAAU,EAC/CuV,EAA2B9jB,UAAUyO,OAAQ,EAC7CgV,EAA6BK,GAC/B,GACC,IACL,GA2lC+B1B,CAAkB3f,EAAE4H,OAAOlH,OAC5CqH,UAAWqH,EACXyE,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,aAC1CqS,WAAY,CAAErM,MAAO,CAAE8b,oBAAqBnmB,EAAqBgf,WAAa,UAAa,SAAUrI,UAAW,IAChHyP,iBAAqD,IAApCpmB,EAAqBgf,WAAsB,CAACqH,OAAQnhB,SAAQ,IAAU,aAM7FlI,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0BzV,SAASO,QAAa5S,KAAM8nB,EAA0BzV,SAASS,YAAajC,UAAU,MAAMyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAC/L8T,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN3I,QAAS,CAAE4I,OAAQ,CAAC,IAAK,QAI/B3V,SAEFC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,MAAO7H,QAAS,cAAe2X,UAAW,QAAQ1Z,SACpEC,cAACoM,KAAS,CAAChJ,OAA6D,IAA/CskB,EAA0BzV,SAASQ,QAA0B0R,UAA8C,IAApCnhB,EAAqBgf,WACnHvZ,MAAM,iBAASrH,QAAQ,WAAWiD,GAAG,kBACrCuV,SAAWC,GAAUA,GAAwB,aAAfnF,GAA6BmF,EAAMlH,QACjEtE,SAAW1H,GA3mCHU,KACxB,MAAM0S,EAAa1S,EAEhBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAY7B,GAXAgM,GAAwB/L,IACtBA,EAAyBpI,QAAQG,SAAW8H,EACrC,IACFG,MAIW,aAAfxF,GACDC,EAAc,MAGb+S,EAA0BzV,SAASQ,QAAQ,CAC5C,MAAMuV,EAA6B,IAAIN,GACvCM,EAA2B/V,SAASO,MAAQ,GAC5CwV,EAA2B/V,SAASS,aAAc,EAClDsV,EAA2B/V,SAASQ,SAAU,EAC9CuV,EAA2B/V,SAASU,OAAQ,EAC5CgV,EAA6BK,EAC/B,IAKC,IAAI,EA4kC0B3N,CAAiB1T,EAAE4H,OAAOlH,OAC3CqS,WAAY,CAAErM,MAAO,CAAE8b,oBAAqBnmB,EAAqBgf,WAAa,UAAa,UAC3FoH,iBAAqD,IAApCpmB,EAAqBgf,WAAsB,CAACqH,OAAQnhB,SAAQ,IAAU,aAM/FlI,cAACya,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAI7a,SAClEC,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAAC6a,KAAa,CAAC9F,WAAY,CAAC,cAAchV,SACxCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0B1jB,WAAWwO,QAAa5S,KAAM8nB,EAA0B1jB,WAAW0O,YAAajC,UAAU,SAASyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAAMzB,SAC5MC,cAACqB,IAAG,CAACnB,GAAI,CAACyJ,MAAO,IAAKzH,GAAI,mBAAmBnC,SAC3CC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,QAAU5J,SAC5BC,cAACspB,KAAS,CAAC7gB,MAAM,eACfsS,OAAO,aAAa1T,MAAOugB,EAAkB5jB,WAC7CmgB,UAA8C,IAApCnhB,EAAqBgf,WAC/B1M,UAAW,CACT6F,UACE,CACEvB,SAAUpG,EACVpQ,OAA+D,IAAjDskB,EAA0B1jB,WAAWyO,QACnD+H,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,cAC1CnH,GAAI,CAAC,wBAAyB,CAAEipB,qBAAyD,IAApCnmB,EAAqBgf,WAAsB,UAAY,OAGlH3T,SAAWhH,GAnmCdA,KACnB,GAAGA,EAAM,CACP,MAAM0S,EAAa1S,EAAM+T,GACtB9H,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAC7B,MAAMoB,EAAQ,IAAIvU,KACZwU,EAAkBD,EAAME,cAAgBxB,EAAWwB,cACnDC,EAAmBH,EAAMI,WAAa1B,EAAW0B,WACjDC,EAAiBL,EAAMM,UAAY5B,EAAW4B,UAC9CC,EAAMP,EAAME,cAAgBxB,EAAWwB,cAE7C,IAAIM,EAAgC,GAAlBP,EAAuBE,EACrCM,EAAYJ,EAEZA,EAAiB,IACnBG,GAAe,EACfC,GAAa,IAGf,MAAMkM,EAA6B,IAAIN,GAEvC,GAAGrM,EAAQtB,GAAc6B,EAAM,GAAKG,MAAMH,IAAQC,EAAc,IAAuB,KAAhBA,GAAsBC,EAAY,GACvGkM,EAA2BhkB,WAAWwO,MAAQ,sFAC9CwV,EAA2BhkB,WAAW0O,aAAc,EACpDsV,EAA2BhkB,WAAWyO,SAAU,EAChDuV,EAA2BhkB,WAAW2O,OAAQ,EAC9CgV,EAA6BK,GAE7BH,GAAqBE,IACnBA,EAAsB/jB,WAAaqD,EAC5B,IACF0gB,UAKL,CACgB,eAAfrT,GACDC,EAAc,MAGhB,MAAMmC,EAAgBkE,KAAOjB,GAAYgB,OAAO,cAChDkL,GAAwB/L,IACxBA,EAAyBpI,QAAQ9N,WAAa8S,EACrC,IACFoD,MAIP2N,GAAqBE,IACnBA,EAAsB/jB,WAAaqD,EAC5B,IACF0gB,MAIPC,EAA2BhkB,WAAWwO,MAAQ,GAC9CwV,EAA2BhkB,WAAW0O,aAAc,EACpDsV,EAA2BhkB,WAAWyO,SAAU,EAChDuV,EAA2BhkB,WAAW2O,OAAQ,EAC9CgV,EAA6BK,EAK/B,IACC,IACL,GA6hC2ChM,CAAY3U,iBAS/CrH,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0BxV,OAAOM,QAAa5S,KAAM8nB,EAA0BxV,OAAOQ,YAAajC,UAAU,MAAMyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAAMzB,SACjMC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,MAAO8P,UAAW,QAAQ1Z,SAC5CC,cAAC6M,KAAY,CAAC0c,eAAa,EAACllB,GAAG,gBAAgB8f,UAA8C,IAApCnhB,EAAqBgf,WAC5E3a,MAAOugB,EAAkB1V,OAAO7K,MAChCyF,QAASkG,EACTtC,eAAiB3D,GAAWA,EAAOmG,WACnCvC,aAAcA,CAACpR,EAAOwN,IACpB/M,cAAA,SAAQT,EAAKQ,SACVgN,EAAOmG,aAGZ7E,SAAUA,CAAC1H,EAAGU,IA/iCTiT,EAAC3T,EAAGU,KAmBzB,GAlBkB,WAAfqN,GACDC,EAAc,MAGhBsR,GAAwB/L,IACtBA,EAAyBpI,QAAQI,OAAS7K,EAAM8L,YACzC,IACF+G,MAIP2N,GAAqBE,IACnBA,EAAsB7V,OAAO7K,MAAQA,EAC9B,IACF0gB,MAIJL,EAA0BxV,OAAOO,QAAQ,CAC1C,MAAMuV,EAA6B,IAAIN,GACvCM,EAA2B9V,OAAOM,MAAQ,GAC1CwV,EAA2B9V,OAAOQ,aAAc,EAChDsV,EAA2B9V,OAAOO,SAAU,EAC5CuV,EAA2B9V,OAAOS,OAAQ,EAC1CgV,EAA6BK,EAC/B,GAqhCwC1N,CAAe3T,EAAGU,GAC1CzH,KAAMgoB,EAAkB1V,OAAOmB,WAC/BkH,QAASA,IAAM5E,EAAY,UAC3B6E,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,UAC1C2F,YAAcC,GACZjN,cAACoM,KAAS,IAAKa,EACbxE,MAAM,oBACNmR,SAAWC,GAAUA,GAAwB,WAAfnF,GAA2BmF,EAAMlH,QAC/DvP,OAA2D,IAA7CskB,EAA0BxV,OAAOO,QAC/CvS,GAAI,CAAC,wBAAyB,CAAEipB,qBAAyD,IAApCnmB,EAAqBgf,WAAsB,UAAY,OAGhHnR,kBAAgB,EAChBC,UAAW,aAQnB9Q,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0B7U,SAASL,QAAa5S,KAAM8nB,EAA0B7U,SAASH,YAAajC,UAAU,OAAOyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAAMzB,SACtMC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,QAAS8P,UAAW,QAAQ1Z,SAC9CC,cAAC6M,KAAY,CAAC0c,eAAa,EAACpF,UAA8C,IAApCnhB,EAAqBgf,WACzD3a,MAAOugB,EAAkB/U,SAASxL,MAClCyF,QAASqH,EACT8H,cAAe,wBACf/F,cAAeA,EACfxF,eAAiB3D,GAAWA,EAAO0I,KACnC9E,aAAcA,CAACpR,EAAOwN,IACpB/M,cAAA,SAAQT,EAAKQ,SACVgN,EAAO0I,OAGZpH,SAAUA,CAAC1H,EAAGU,IAjjCRxE,OAAO8D,EAAGU,KA8BhC,GA7BkB,aAAfqN,GACDC,EAAc,MAGhBkT,GAAqBE,IACnBA,EAAsBlV,SAASxL,MAAQA,EAChC,IACF0gB,MAIiC,OAArCH,EAAkB9U,SAASzL,OAC5BwgB,GAAqBE,IACnBA,EAAsBjV,SAASzL,MAAQ,KAChC,IACF0gB,MAK2B,OAAjCH,EAAkB7U,KAAK1L,OACxBwgB,GAAqBE,IACnBA,EAAsBhV,KAAK1L,MAAQ,KAC5B,IACF0gB,MAKNL,EAA0B7U,SAASJ,QAAQ,CAC5C,MAAMuV,EAA6B,IAAIN,GACvCM,EAA2BnV,SAASL,MAAQ,GAC5CwV,EAA2BnV,SAASH,aAAc,EAClDsV,EAA2BnV,SAASJ,SAAU,EAC9CuV,EAA2BnV,SAASF,OAAQ,EAC5CgV,EAA6BK,EAC/B,CAEAvT,GAAYyC,IACVA,EAAa3C,KAAO,GACb,IAAI2C,MAGb5C,GAAgB2C,IACdA,EAAiBzR,SAAU,EACpB,IAAIyR,MAGb,MAAMqB,QAA6BpH,GAAgB7J,EAAMuH,MACzD0F,GAAgB2C,IACdA,EAAiBzR,SAAU,EAC3ByR,EAAiB1C,KAAO+D,EACjB,IAAIrB,KACX,EA2/BsCmF,CAAgBzV,EAAGU,GAC3CzH,KAAMgoB,EAAkB/U,SAASQ,WACjCkH,QAASA,IAAM5E,EAAY,YAC3B6E,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,YAC1C2F,YAAcC,GACZjN,cAACoM,KAAS,IAAKa,EACbxE,MAAM,oBACNmR,SAAWC,GAAUA,GAAwB,aAAfnF,GAA6BmF,EAAMlH,QACjEvP,OAA6D,IAA/CskB,EAA0B7U,SAASJ,QACjDvS,GAAI,CAAC,wBAAyB,CAAEipB,qBAAyD,IAApCnmB,EAAqBgf,WAAsB,UAAY,OAGhHnR,kBAAgB,EAChBC,UAAW,aAMnB9Q,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0B5U,SAASN,QAAa5S,KAAM8nB,EAA0B5U,SAASJ,YAAajC,UAAU,MAAMyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAAMzB,SACrMC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,MAAO8P,UAAW,QAAQ1Z,SAC5CC,cAAC6M,KAAY,CAAC0c,eAAa,EAACpF,UAA8C,IAApCnhB,EAAqBgf,WACzD3a,MAAOugB,EAAkB9U,SAASzL,MAClCyF,QAASuH,EAAaE,KACtB0H,cAAe5H,EAAa7O,QAAU,wBAAgB,GACtD5F,KAAMgoB,EAAkB9U,SAASO,WACjCkH,QAASA,IAAM5E,EAAY,YAC3B6E,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,YAC1C6O,cAAeA,EACfxF,eAAiB3D,GAAWA,EAAO0I,KACnC9E,aAAcA,CAACpR,EAAOwN,IACpB/M,cAAA,SAAQT,EAAKQ,SACVgN,EAAOkF,WAGZ5D,SAAUA,CAAC1H,EAAGU,IA5hCPxE,OAAO8D,EAAGU,KAqBjC,GApBkB,aAAfqN,GACDC,EAAc,MAGhBkT,GAAqBE,IACnBA,EAAsBjV,SAASzL,MAAQA,EAChC,IACF0gB,MAI6B,OAAjCH,EAAkB7U,KAAK1L,OACxBwgB,GAAqBE,IACnBA,EAAsBhV,KAAK1L,MAAQ,KAC5B,IACF0gB,MAKNL,EAA0B5U,SAASL,QAAQ,CAC5C,MAAMuV,EAA6B,IAAIN,GACvCM,EAA2BlV,SAASN,MAAQ,GAC5CwV,EAA2BlV,SAASJ,aAAc,EAClDsV,EAA2BlV,SAASL,SAAU,EAC9CuV,EAA2BlV,SAASH,OAAQ,EAC5CgV,EAA6BK,EAC/B,CAEAvT,GAAYyC,IACVA,EAAa1R,SAAU,EAChB,IAAI0R,MAGb,MAAMsB,QAAyBpH,GAAY/J,EAAMuH,MACjD6F,GAAYyC,IACVA,EAAa1R,SAAU,EACvB0R,EAAa3C,KAAOiE,EACb,IAAItB,KACX,EAo/BsCmF,CAAiB1V,EAAGU,GAC5C2F,YAAcC,GACZjN,cAACoM,KAAS,IAAKa,EACbxE,MAAM,uBACNmR,SAAWC,GAAUA,GAAwB,aAAfnF,GAA6BmF,EAAMlH,QACjEvP,OAA6D,IAA/CskB,EAA0B5U,SAASL,QACjDvS,GAAI,CAAC,wBAAyB,CAAEipB,qBAAyD,IAApCnmB,EAAqBgf,WAAsB,UAAY,KAC5G1V,WAAY,IACPW,EAAOX,WACVC,aACE/M,eAAA2H,WAAA,CAAApH,SAAA,CACGsU,EAAa7O,QAAUxF,cAACiC,IAAgB,CAAC3B,MAAM,UAAU6b,KAAM,KAAS,KACxElP,EAAOX,WAAWC,mBAM7BsE,kBAAgB,EAChBC,UAAW,aAMnB9Q,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAAAmH,WAAA,CAAApH,SACEC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0B3U,KAAKP,QAAa5S,KAAM8nB,EAA0B3U,KAAKL,YAAajC,UAAU,SAASyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAAMzB,SAChMC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,QAAS8P,UAAW,QAAQ1Z,SAC9CC,cAAC6M,KAAY,CAAC0c,eAAa,EAACpF,UAA8C,IAApCnhB,EAAqBgf,WACzD3a,MAAOugB,EAAkB7U,KAAK1L,MAC9ByF,QAAS0H,EAASD,KAClB0H,cAAezH,EAAShP,QAAU,wBAAgB,GAClD0Q,cAAeA,EACfxF,eAAiB3D,GAAWA,EAAO0I,KACnC9E,aAAcA,CAACpR,EAAOwN,IACpB/M,cAAA,SAAQT,EAAKQ,SACVgN,EAAOkF,WAGZ5D,SAAUA,CAAC1H,EAAGU,IAzhCbiV,EAAC3V,EAAGU,KAmBvB,GAlBkB,SAAfqN,GACDC,EAAc,MAGhBsR,GAAwB/L,IACtBA,EAAyBpI,QAAQP,SAAWlK,EAAMuH,KAC3C,IACFsL,MAIP2N,GAAqBE,IACnBA,EAAsBhV,KAAK1L,MAAQA,EAC5B,IACF0gB,MAIJL,EAA0B3U,KAAKN,QAAQ,CACxC,MAAMuV,EAA6B,IAAIN,GACvCM,EAA2BjV,KAAKP,MAAQ,GACxCwV,EAA2BjV,KAAKL,aAAc,EAC9CsV,EAA2BjV,KAAKN,SAAU,EAC1CuV,EAA2BjV,KAAKJ,OAAQ,EACxCgV,EAA6BK,EAC/B,GA+/B0C1L,CAAa3V,EAAGU,GACxCzH,KAAMgoB,EAAkB7U,KAAKM,WAC7BkH,QAASA,IAAM5E,EAAY,QAC3B6E,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,QAC1C2F,YAAcC,GACZjN,cAACoM,KAAS,IAAKa,EACbxE,MAAM,yBACNmR,SAAWC,GAAUA,GAAwB,SAAfnF,GAAyBmF,EAAMlH,QAC7DvP,OAAyD,IAA3CskB,EAA0B3U,KAAKN,QAC7CvS,GAAI,CAAC,wBAAyB,CAAEipB,qBAAyD,IAApCnmB,EAAqBgf,WAAsB,UAAY,KAC5G1V,WAAY,IACPW,EAAOX,WACVC,aACE/M,eAAA2H,WAAA,CAAApH,SAAA,CACGyU,EAAShP,QAAUxF,cAACiC,IAAgB,CAAC3B,MAAM,UAAU6b,KAAM,KAAS,KACpElP,EAAOX,WAAWC,mBAM7BsE,kBAAgB,EAChBC,UAAW,eAOrB9Q,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0B1V,QAAQQ,QAAa5S,KAAM8nB,EAA0B1V,QAAQU,YAAajC,UAAU,SAASyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAAMzB,SACtMC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,MAAO7H,QAAS,cAAe2X,UAAW,QAAQ1Z,SACpEC,cAACoM,KAAS,CAAChJ,OAA4D,IAA9CskB,EAA0B1V,QAAQS,QAA0B0R,UAA8C,IAApCnhB,EAAqBgf,WAClHvZ,MAAM,yBAAUrH,QAAQ,WAAWiD,GAAG,iBACtCuV,SAAWC,GAAUA,GAAwB,YAAfnF,GAA4BmF,EAAMlH,QAChEtE,SAAW1H,GA5hCJU,KACvB,MAAM0S,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAY7B,GAXkB,YAAfvF,GACDC,EAAc,MAGhBsR,GAAwB/L,IACtBA,EAAyBpI,QAAQE,QAAU+H,EACpC,IACFG,MAIJwN,EAA0B1V,QAAQS,QAAQ,CAC3C,MAAMuV,EAA6B,IAAIN,GACvCM,EAA2BhW,QAAQQ,MAAQ,GAC3CwV,EAA2BhW,QAAQU,aAAc,EACjDsV,EAA2BhW,QAAQS,SAAU,EAC7CuV,EAA2BhW,QAAQW,OAAQ,EAC3CgV,EAA6BK,EAC/B,IACC,IAAI,EAkgC0BzL,CAAgB5V,EAAE4H,OAAOlH,OAC1CqS,WAAY,CAAErM,MAAO,CAAE8b,oBAAqBnmB,EAAqBgf,WAAa,UAAa,UAC3FoH,iBAAqD,IAApCpmB,EAAqBgf,WAAsB,CAACqH,OAAQnhB,SAAQ,IAAU,aAM/FlI,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0BvV,eAAeK,QAAa5S,KAAM8nB,EAA0BvV,eAAeO,YAAajC,UAAU,OAAOyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAAMzB,SAClNC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,MAAO7H,QAAS,cAAe2X,UAAW,QAAQ1Z,SACpEC,cAACoM,KAAS,CAAChJ,OAAmE,IAArDskB,EAA0BvV,eAAeM,QAA0B0R,UAA8C,IAApCnhB,EAAqBgf,WACzHvZ,MAAM,yBAAYrH,QAAQ,WAAWiD,GAAG,wBACxCuV,SAAWC,GAAUA,GAAwB,mBAAfnF,GAAmCmF,EAAMlH,QACvEyT,UAAWsB,EAA0BvV,eAAeQ,MACpDtE,SAAW1H,GA9gCGU,KAC9B,MAAM0S,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAY7B,GAXkB,mBAAfvF,GACDC,EAAc,MAGhBsR,GAAwB/L,IACtBA,EAAyBpI,QAAQK,eAAiB4H,EAC3C,IACFG,MAIJwN,EAA0BvV,eAAeM,QAAQ,CAClD,MAAMuV,EAA6B,IAAIN,GACvCM,EAA2B7V,eAAeK,MAAQ,GAClDwV,EAA2B7V,eAAeO,aAAc,EACxDsV,EAA2B7V,eAAeM,SAAU,EACpDuV,EAA2B7V,eAAeQ,OAAQ,EAClDgV,EAA6BK,EAC/B,IACC,IAAI,EAo/B0BxL,CAAuB7V,EAAE4H,OAAOlH,OACjDqS,WAAY,CAAErM,MAAO,CAAE8b,oBAAqBnmB,EAAqBgf,WAAa,UAAa,UAC3FoH,iBAAqD,IAApCpmB,EAAqBgf,WAAsB,CAACqH,OAAQnhB,SAAQ,IAAU,aAM/FlI,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0BtV,YAAYI,QAAa5S,KAAM8nB,EAA0BtV,YAAYM,YAAajC,UAAU,SAASyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAAMzB,SAC9MC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,MAAO8P,UAAW,QAAQ1Z,SAC5CC,cAACoM,KAAS,CAAChJ,OAAgE,IAAlDskB,EAA0BtV,YAAYK,QAA0B0R,UAA8C,IAApCnhB,EAAqBgf,WACtHvZ,MAAM,4BAAarH,QAAQ,WAAWiD,GAAG,qBACzCuV,SAAWC,GAAUA,GAAwB,gBAAfnF,GAAgCmF,EAAMlH,QACpEtE,SAAW1H,GA//BAU,KAC3B,GAAa,KAAVA,EAAa,CACd,MAAM0S,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KACX,gBAAfvF,GACDC,EAAc,MAGhB,MAAMqT,EAA6B,IAAIN,GACpC3N,EAAW7J,OAAS,IACrB8X,EAA2B5V,YAAYI,MAAQ,sEAC/CwV,EAA2B5V,YAAYM,aAAc,EACrDsV,EAA2B5V,YAAYK,SAAU,EACjDuV,EAA2B5V,YAAYO,OAAQ,EAC/CgV,EAA6BK,KAG7B/B,GAAwB/L,IACtBA,EAAyBpI,QAAQM,YAAc2H,EACxC,IACFG,MAIP8N,EAA2B5V,YAAYI,MAAQ,GAC/CwV,EAA2B5V,YAAYM,aAAc,EACrDsV,EAA2B5V,YAAYK,SAAU,EACjDuV,EAA2B5V,YAAYO,OAAQ,EAE/CqV,EAA2B1V,YAAYE,MAAQ,GAC/CwV,EAA2B1V,YAAYI,aAAc,EACrDsV,EAA2B1V,YAAYG,SAAU,EACjDuV,EAA2B1V,YAAYK,OAAQ,EAC/CgV,EAA6BK,GAC/B,GACC,IACL,KACI,CACF,MAAMA,EAA6B,IAAIN,GACvCM,EAA2B5V,YAAYI,MAAQ,GAC/CwV,EAA2B5V,YAAYM,aAAc,EACrDsV,EAA2B5V,YAAYK,SAAU,EACjDuV,EAA2B5V,YAAYO,OAAQ,EAC/CgV,EAA6BK,EAC/B,GA+8BiCvL,CAAoB9V,EAAE4H,OAAOlH,OAC9CqH,UAAWqH,EACXyE,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,eAC1CqS,WAAY,CAAErM,MAAO,CAAE8b,oBAAqBnmB,EAAqBgf,WAAa,UAAa,SAAUrI,UAAW,IAChHyP,iBAAqD,IAApCpmB,EAAqBgf,WAAsB,CAACqH,OAAQnhB,SAAQ,IAAU,aAO/FlI,cAACoM,KAAS,CAAC3D,MAAM,qBAAa0b,UAA8C,IAApCnhB,EAAqBgf,WAC3D5gB,QAAQ,WAAWiD,GAAG,wBACtBnE,GAAI,CAACyJ,MAAO,QAAS,sBAAwB,CAAC8P,UAAW,SACzDpL,SAAW1H,GA19BSU,KACZ,mBAAfqN,GACDC,EAAc,MAGhB,MAAMoF,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAQ7B,GAPAgM,GAAwB/L,IACtBA,EAAyBpI,QAAQO,eAAiB0H,EAC3C,IACFG,MAIJwN,EAA0BvV,eAAeM,QAAQ,CAClD,MAAMuV,EAA6B,IAAIN,GACvCM,EAA2B7V,eAAeK,MAAQ,GAClDwV,EAA2B7V,eAAeO,aAAc,EACxDsV,EAA2B7V,eAAeM,SAAU,EACpDuV,EAA2B7V,eAAeQ,OAAQ,EAClDgV,EAA6BK,EAC/B,IACC,IAAI,EAg8BoBtL,CAAuB/V,EAAE4H,OAAOlH,OACjDqS,WAAY,CAAErM,MAAO,CAAE8b,oBAAqBnmB,EAAqBgf,WAAa,UAAa,UAC3FoH,iBAAqD,IAApCpmB,EAAqBgf,WAAsB,CAACqH,OAAQnhB,SAAQ,IAAU,OAGzFlI,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0BpV,YAAYE,QAAa5S,KAAM8nB,EAA0BpV,YAAYI,YAAY3S,SACxJC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,MAAO8P,UAAW,QAAQ1Z,SAC5CC,cAACoM,KAAS,CAAC3D,MAAM,4BAAa0b,UAA8C,IAApCnhB,EAAqBgf,WAC3DpI,SAAWC,GAAUA,GAAwB,gBAAfnF,GAAgCmF,EAAMlH,QACpEvR,QAAQ,WAAWiD,GAAG,qBACtBgK,SAAW1H,GAx8BDgW,EAAChW,EAAGU,KAK9B,GAJkB,gBAAfqN,GACDC,EAAc,MAGH,KAAVtN,EAAa,CACd,MAAM0S,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAC7B,MAAM+N,EAA6B,IAAIN,GACpC3N,EAAW7J,OAAS,IACrB8X,EAA2B1V,YAAYE,MAAQ,sEAC/CwV,EAA2B1V,YAAYI,aAAc,EACrDsV,EAA2B1V,YAAYG,SAAU,EACjDuV,EAA2B1V,YAAYK,OAAQ,EAC/CgV,EAA6BK,KAG7B/B,GAAwB/L,IACtBA,EAAyBpI,QAAQQ,YAAcyH,EACxC,IACFG,MAIP8N,EAA2B1V,YAAYE,MAAQ,GAC/CwV,EAA2B1V,YAAYI,aAAc,EACrDsV,EAA2B1V,YAAYG,SAAU,EACjDuV,EAA2B1V,YAAYK,OAAQ,EAE/CqV,EAA2B5V,YAAYI,MAAQ,GAC/CwV,EAA2B5V,YAAYM,aAAc,EACrDsV,EAA2B5V,YAAYK,SAAU,EACjDuV,EAA2B5V,YAAYO,OAAQ,EAC/CgV,EAA6BK,GAC/B,GACC,IACL,KACI,CACgB,gBAAftT,GACDC,EAAc,MAGhB,MAAMqT,EAA6B,IAAIN,GACvCM,EAA2B1V,YAAYE,MAAQ,GAC/CwV,EAA2B1V,YAAYI,aAAc,EACrDsV,EAA2B1V,YAAYG,SAAU,EACjDuV,EAA2B1V,YAAYK,OAAQ,EAC/CgV,EAA6BK,EAC/B,GAo5BiCrL,CAAoBhW,EAAGA,EAAE4H,OAAOlH,OACjDqH,UAAWqH,EACXyE,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,eAC1CqS,WAAY,CAAErM,MAAO,CAAE8b,oBAAqBnmB,EAAqBgf,WAAa,UAAa,SAAUrI,UAAW,IAChHyP,iBAAqD,IAApCpmB,EAAqBgf,WAAsB,CAACqH,OAAQnhB,SAAQ,IAAU,aAM/FlI,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0B5d,OAAO0I,QAAa5S,KAAM8nB,EAA0B5d,OAAO4I,YAAajC,UAAU,OAAOyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAAMzB,SAClMC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,MAAO8P,UAAW,QAAQ1Z,SAC5CC,cAACoM,KAAS,CAAC3D,MAAM,uBAAerH,QAAQ,WAAWiD,GAAG,gBAAgBjB,OAA2D,IAA7CskB,EAA0B5d,OAAO2I,QACnHmH,SAAWC,GAAUA,GAAwB,WAAfnF,GAA2BmF,EAAMlH,QAC/DrG,WAAY,CAACC,aAAcvM,cAACwM,KAAc,CAAC7L,SAAS,MAAKZ,SAAC,UAC1DsO,SAAW1H,GAj6BLU,KACtB,MAAM0S,EAAa1S,EAChBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAY7B,GAXkB,WAAfvF,GACDC,EAAc,MAGhBsR,GAAwB/L,IACtBA,EAAyBpQ,OAASiQ,EAC3B,IACFG,MAIJwN,EAA0B5d,OAAO2I,QAAQ,CAC1C,MAAMuV,EAA6B,IAAIN,GACvCM,EAA2Ble,OAAO0I,MAAQ,GAC1CwV,EAA2Ble,OAAO4I,aAAc,EAChDsV,EAA2Ble,OAAO2I,SAAU,EAC5CuV,EAA2Ble,OAAO6I,OAAQ,EAC1CgV,EAA6BK,EAC/B,IACC,IAAI,EAu4B0BpL,CAAejW,EAAE4H,OAAOlH,eAMjDrH,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0B/V,OAAOa,QAAa5S,KAAM8nB,EAA0B/V,OAAOe,YAAawW,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAAMzB,SACjLC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,MAAO8P,UAAW,QAAQ1Z,SAC5CC,cAACoM,KAAS,CAAC3D,MAAM,yBAAcrH,QAAQ,WAAWiD,GAAG,gBAAgBjB,OAA2D,IAA7CskB,EAA0B/V,OAAOc,QAClHmH,SAAWC,GAAUA,GAAwB,WAAfnF,GAA2BmF,EAAMlH,QAC/DrG,WAAY,CAACC,aAAcvM,cAACwM,KAAc,CAAC7L,SAAS,MAAKZ,SAAC,UAC1DsO,SAAW1H,GAh5BLU,KACtB,MAAM0S,EAAa1S,EAEhBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAY7B,GAXkB,WAAfvF,GACDC,EAAc,MAGhBsR,GAAwB/L,IACtBA,EAAyBvI,OAASoI,EAC3B,IACFG,MAIJwN,EAA0B/V,OAAOc,QAAQ,CAC1C,MAAMuV,EAA6B,IAAIN,GACvCM,EAA2BrW,OAAOa,MAAQ,GAC1CwV,EAA2BrW,OAAOe,aAAc,EAChDsV,EAA2BrW,OAAOc,SAAU,EAC5CuV,EAA2BrW,OAAOgB,OAAQ,EAC1CgV,EAA6BK,EAC/B,IACC,IAAI,EAq3B0BnL,CAAelW,EAAE4H,OAAOlH,eAMjDrH,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0B9V,kBAAkBY,QAAa5S,KAAM8nB,EAA0B9V,kBAAkBc,YAAajC,UAAU,YAAYyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IACvN8T,UAAW,CACTC,OAAQ,CACNC,UAAW,CACT,CACEC,KAAM,SACN3I,QAAS,CAAE4I,OAAQ,CAAC,IAAK,QAI/B3V,SAEFC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,MAAO8P,UAAW,QAAQ1Z,SAC5CC,cAACoM,KAAS,CAAC3D,MAAM,8BAAcrH,QAAQ,WAAWiD,GAAG,2BAA2BjB,OAAsE,IAAxDskB,EAA0B9V,kBAAkBa,QACxImH,SAAWC,GAAUA,GAAwB,sBAAfnF,GAAsCmF,EAAMlH,QAC1ErG,WAAY,CAACC,aAAcvM,cAACwM,KAAc,CAAC7L,SAAS,MAAKZ,SAAC,UAC1DsO,SAAW1H,GAz4BMU,KACjC,MAAM0S,EAAa1S,EAEhBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAY7B,GAXkB,sBAAfvF,GACDC,EAAc,MAGhBsR,GAAwB/L,IACtBA,EAAyBtI,kBAAoBmI,EACtC,IACFG,MAIJwN,EAA0B9V,kBAAkBa,QAAQ,CACrD,MAAMuV,EAA6B,IAAIN,GACvCM,EAA2BpW,kBAAkBY,MAAQ,GACrDwV,EAA2BpW,kBAAkBc,aAAc,EAC3DsV,EAA2BpW,kBAAkBa,SAAU,EACvDuV,EAA2BpW,kBAAkBe,OAAQ,EACrDgV,EAA6BK,EAC/B,IACC,IAAI,EA82B0BlL,CAA0BnW,EAAE4H,OAAOlH,eAM5DrH,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0BL,YAAY7U,QAAa5S,KAAM8nB,EAA0BL,YAAY3U,YAAajC,UAAU,SAASyY,YAAa,CAAChpB,GAAI,CAAEsB,OAAQ,IAAMzB,SAC9MC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,QAAS8P,UAAW,QAAQ1Z,SAC9CC,cAAC6M,KAAY,CAAC0c,eAAa,EAACllB,GAAG,qBAAqB8f,UAA8C,IAApCnhB,EAAqBgf,WACjF3a,MAAOugB,EAAkBP,YAAYhgB,MACrCyF,QAASya,EACT7W,eAAiB3D,GAAWA,EAAO0a,gBACnC9W,aAAcA,CAACpR,EAAOwN,IACpB/M,cAAA,SAAQT,EAAKQ,SACVgN,EAAO0a,kBAGZpZ,SAAUA,CAAC1H,EAAGU,IA73BJmiB,EAAC7iB,EAAGU,KAmB9B,GAlBkB,gBAAfqN,GACDC,EAAc,MAGhBsR,GAAwB/L,IACtBA,EAAyB+H,cAAgB5a,EAAM4a,cACxC,IACF/H,MAIP2N,GAAqBE,IACnBA,EAAsBV,YAAYhgB,MAAQA,EACnC,IACF0gB,MAIJL,EAA0BL,YAAY5U,QAAQ,CAC/C,MAAMuV,EAA6B,IAAIN,GACvCM,EAA2BX,YAAY7U,MAAQ,GAC/CwV,EAA2BX,YAAY3U,aAAc,EACrDsV,EAA2BX,YAAY5U,SAAU,EACjDuV,EAA2BX,YAAY1U,OAAQ,EAC/CgV,EAA6BK,EAC/B,GAm2BwCwB,CAAoB7iB,EAAGU,GAC/CzH,KAAMgoB,EAAkBP,YAAYhU,WACpCkH,QAASA,IAAM5E,EAAY,eAC3B6E,OAAS7T,GAAMmP,EAAWnP,EAAE4H,OAAOlH,MAAO,eAC1C2F,YAAcC,GACZjN,cAACoM,KAAS,IAAKa,EACbxE,MAAM,4BACNmR,SAAWC,GAAUA,GAAwB,gBAAfnF,GAAgCmF,EAAMlH,QACpEvP,OAAgE,IAAlDskB,EAA0BL,YAAY5U,QACpDvS,GAAI,CACF,wBAAyB,CAAEipB,qBAAyD,IAApCnmB,EAAqBgf,WAAsB,UAAY,IACvG,0OAA2O,CAACyH,YAAa,MAAOC,aAAc,OAC9Q,6NAA8N,CAACD,YAAa,MAAOC,aAAc,UAIvQ7Y,kBAAgB,EAChBC,UAAW,aAMnB9Q,cAACuZ,KAAa,CAAC9X,MAAOoT,EAAa9U,SACjCC,cAACwZ,KAAO,CAAChH,MAAOxS,cAAA,MAAIqN,MAAO,CAAEC,OAAQ,OAAQvN,SAAE2nB,EAA0B3b,OAAOyG,QAAa5S,KAAM8nB,EAA0B3b,OAAO2G,YAAY3S,SAC9IC,cAAA,OAAKqN,MAAO,CAAC1D,MAAO,QAAS5J,SAC3BC,cAACoM,KAAS,CAAC1M,WAAS,EAAC+I,MAAM,mBAAakhB,WAAS,EAACC,KAAM,EAAGxoB,QAAQ,WAAWiD,GAAG,gBAAgBjB,OAA2D,IAA7CskB,EAA0B3b,OAAO0G,QAC9IvS,GAAI,CAAC,sBAAwB,CAACuZ,UAAW,SACzCpL,SAAW1H,GA53BLU,KACtB,MAAM0S,EAAa1S,EAEhBiM,EAAUuE,SACXmC,cAAc1G,EAAUuE,SAG1BvE,EAAUuE,QAAUoC,YAAW,KAC7BgM,GAAwB/L,IACtBA,EAAyBnO,OAASgO,EAC3B,IACFG,KAEL,GAOD,IAAI,EAw2B0B2P,CAAeljB,EAAE4H,OAAOlH,eAMjDrH,cAAC+c,KAAgB,CAACC,QAAShd,cAACid,KAAQ,CAACC,QAAS0K,EAAkB/V,cAAgB3R,GAAI,CAACyJ,MAAO,QAC1FlB,MAAM,qDAAkC4F,SAAW1H,IAAMwW,OA52BxCC,EA42B4DzW,EAAE4H,OAAO2O,QA32BhG+I,GAAwB/L,IACtBA,EAAyBrI,YAAcuL,EAChC,IACFlD,WAIP2N,GAAqBE,IACnBA,EAAsBlW,YAAcuL,EAC7B,IACF2K,MAXoB3K,KA42B8E,IAEjG5d,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQyI,eAAgB,SAAUrI,GAAI,EAAGyH,MAAO,QAAQ5J,SAAA,CACzEC,cAAC4K,IAAM,CAACxJ,QAAQ,YAAYd,MAAM,UAAUJ,GAAI,CAACkK,GAAI,GAAI3J,QAASA,IAAMyiB,IAAwBnjB,SAAC,8BACjGC,cAAC4K,IAAM,CAACxJ,QAAQ,YAAYd,MAAM,UAAUG,QAASA,IAAMwiB,IAAmBljB,SAAC,yBAC/EC,cAAC4K,IAAM,CAACxJ,QAAQ,YAAYd,MAAM,QAAQJ,GAAI,CAACiO,GAAI,GAAI1N,QAASA,IAAM2nB,IAA4BroB,SAAC,sCAM3GC,cAACyiB,GAAgB,CACfU,0BAA2BA,EAA2BH,6BAA8BA,EACpFC,iBAAkBA,EAAkBlL,2BAA4BxY,EAAMwY,2BACtEsL,mCAAoCA,EAAoCN,sCAAuCA,EAC/G/f,qBAAsBA,IAGxBhD,cAACokB,GAAU,CACT8B,oBAAqBA,EAAqBb,uBAAwBA,EAClEriB,qBAAsBA,EAAsBijB,wBAAyBA,IASvEjmB,cAAC+Q,GAAe,CACdC,oBAAqBA,EAAqB4D,uBAAwBA,MAI1E,ECpzDekV,OAxHf,WAEE,MAAOC,EAAmBrK,GAAwBna,oBAAS,GAErDykB,EAAgC,CAAChkB,aAAc,GAAIE,aAAc,KAEhE6Z,EAAyBhI,GAA8BxS,oBAAS,IAChE0iB,EAA+B/F,GAAoC3c,sBAEnE0d,EAAkBgH,GAAuB1kB,oBAAS,IAClD2kB,EAAiCC,GAAsC5kB,oBAAS,IAChF6iB,EAA2BgC,GAAgC7kB,oBAAS,IAEpEiK,EAAwBI,GAA6BrK,sBACrD0K,EAAkCJ,GAAuCtK,oBAAS,GAyDzF,OAjCA2B,qBAAU,KAV8BrE,WACtC,MAAMK,QAAiBiB,KACA,MAApBjB,EAASY,OACV8L,EAA2B,CAAC1J,aAAchD,EAASW,KAAKqC,aAAcF,aAAc9C,EAASW,KAAKmC,eAGlG4J,EAA0Boa,EAC5B,EAIAK,EAAiC,GAChC,IAEHnjB,qBAAU,KACR,MAAM6O,EAAiB3N,IACA,MAAlBA,EAAMuX,SACPvX,EAAM6N,iBA5BVkU,GAAmC,IAgCP,MAAlB/hB,EAAMuX,SACZvX,EAAM6N,iBA7BVgU,GAAoB,IAiCQ,MAAlB7hB,EAAMuX,UACZvX,EAAM6N,iBA9BVmU,GAA6B,GAoC3B,EAKF,OAFAxK,SAASC,iBAAiB,UAAW9J,GAE9B,KACL6J,SAASE,oBAAoB,UAAW/J,EAAc,CACvD,GACA,IAGDvW,eAAA2H,WAAA,CAAApH,SAAA,CACKC,cAACiO,KAAS,CAACtO,SAAS,KAAKO,GAAI,CAACgC,GAAI,IAAInC,SACnCC,cAACqB,IAAG,CAACnB,GAAI,CAAEmV,QAAS,OAAQvL,OAAQ,QAAQ/J,SACxCC,cAACujB,KAAI,CAACC,WAAS,EAACrW,QAAS,EAAGjN,GAAI,CAACoqB,WAAY,GAAGvqB,SAC7CyP,EACChQ,eAAA2H,WAAA,CAAApH,SAAA,CACEC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAE3jB,SACfC,cAACsd,GAAoB,CACnByC,wBAAyBA,EAAyBhI,2BAA4BA,EAC9EvI,uBAAwBA,EACxBK,oCAAqCA,EACrCka,kBAAmBA,EAAmBrK,qBAAsBA,EAC5DuI,8BAA+BA,EAA+B/F,iCAAkCA,MAIpGliB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAE3jB,SACdgqB,EACC/pB,cAAA,OAAKqN,MAAO,CAACoM,UAAW,OAAQ6Q,WAAY,QAAQvqB,SAClDC,cAACggB,KAAQ,CAAC5e,QAAQ,cAAcuI,MAAM,OAAOG,OAAQ,QAGvD9J,cAACknB,GAAW,CACVyB,UAAWuB,EAAiCtB,aAAcuB,EAC1DtB,UAAW5F,EAAkB6F,aAAcmB,EAC3ClB,UAAWX,EAA2BY,aAAcoB,EACpDrK,wBAAyBA,EAAyBhI,2BAA4BA,EAC9EvI,uBAAwBA,EACxByY,8BAA+BA,EAA+B/F,iCAAkCA,SAMtG,WAMbliB,cAAC+O,GAAuB,CACvBkB,iCAAkCA,EAAkCJ,oCAAqCA,EACzGL,uBAAwBA,EAAwBI,0BAA2BA,MAIrF,E,wDCsQe2a,OAtWf,SAA2BhrB,GACvB,MAAOirB,EAAgCC,GAAqCllB,sBACrEyL,EAAqB4D,GAA0BrP,oBAAS,GAGzD+N,EAAYC,iBAAO,MACnBmX,EAAcnX,iBAAO,MACrBC,EAAeD,iBAAO,MActBoX,EAXYC,aAAW,CACzBC,KAAM,CACJ,iBAAkB,CAChBvqB,MAAO,WAET,6BAA8B,CAC5BA,MAAO,aAKCwqB,GAEVC,EAAoCA,CAAC3iB,EAAO2D,KAC3CA,GAAqB,kBAAXA,GAKTxM,EAAMyrB,+BAA8B,EACxC,EA8BEC,EAAiCpoB,UACnC,MAAMqoB,EAAiC5b,KAAE6b,MAAM5rB,EAAM6rB,4BAUrD,GARAF,EAA+BG,WAAaH,EAA+BG,WAAW5gB,KAAI6gB,IAAc,IACjGA,EAEHC,iBAAkBD,EAAeC,iBAAiBjV,QAAOkV,GAAwBA,EAAqBC,yBAAyBvb,OAAS,QAGxIoG,QAAOgV,GAAkBA,EAAeC,iBAAiBrb,OAAS,IAEd,IAArDgb,EAA+BG,WAAWnb,OAAa,CACtD0E,GAAuB,GACvB,MAAM8W,OhB4FS7oB,WACvB,MAAMc,EAAStB,IACf,aAAaS,IAAMc,IAAI,GAADjB,OAAIP,EAAU,oCAAAO,OAAmCgpB,GAAqBhoB,GAC3FV,MAAK,SAAUC,GACZ,OAAOA,CACX,IACCC,OAAM,SAAUC,GACb,OAAOA,EAAMF,QACjB,GAAE,EgBpG4C0oB,CAAmBrsB,EAAM6rB,2BAA2BO,mBAY1F,GAVsC,MAAnCD,EAAwB5nB,QACvBonB,EAA+BW,gBAAkBH,EAAwB7nB,KAAKgoB,gBAC9EX,EAA+B7L,WAAaqM,EAAwB7nB,KAAKwb,WACzE6L,EAA+BY,aAAeJ,EAAwB7nB,KAAKioB,cAE3Eje,IAAMzK,MAAMsoB,EAAwB7nB,KAAM,CAACwL,QAAS,WAGxDob,EAAkCS,GAClCtW,GAAuB,GAC4B,KAAhDrV,EAAM6rB,2BAA2BW,WAAkB,CAClD,MAAM7b,EAASwa,EAAY7S,QAAQxQ,MAAM6I,OACzCwa,EAAY7S,QAAQmU,kBAAkB9b,EAAQA,GAC9Cwa,EAAY7S,QAAQlF,OACxB,MAEI+X,EAAY7S,QAAQlF,OAE5B,GAmFE2E,EAAgBA,KAClB,IAAIE,GAAU,EAkBd,OAjBiD,OAA9CgT,EAA+BuB,aAC9BrB,EAAY7S,QAAQlF,QACpB9E,IAAMzK,MAAM,0DAA+B,CAACiM,QAAS,WACrDmI,GAAU,GAGwC,iBAAnDgT,EAA+BqB,kBAC9BrY,EAAaqE,QAAQlF,QACrB9E,IAAMzK,MAAM,mDAA8B,CAACiM,QAAS,WACpDmI,GAAU,GAGwC,KAAnDgT,EAA+BqB,kBAC9BrY,EAAaqE,QAAQlF,QACrB9E,IAAMzK,MAAM,sDAA+B,CAACiM,QAAS,WACrDmI,GAAU,GAEPA,CAAO,EASlB,OANAtQ,qBAAU,KACH3H,EAAM0sB,4BACLhB,GACJ,GACD,CAAC1rB,EAAM0sB,6BAGNzsB,eAAA2H,WAAA,CAAApH,SAAA,CACIP,eAACC,IAAM,CAACC,WAAW,EAAMC,SAAU,KAAMC,KAAML,EAAM0sB,2BAA4BnhB,QAASA,CAAC1C,EAAO2D,IAAWgf,EAAkC3iB,EAAO2D,GAASjM,sBAAsB,EAAKC,SAAA,CACtLC,cAACC,IAAW,CAACC,GAAI,CAAEC,WAAY,SAAUC,SAAU,OAAQC,UAAW,SAAUC,MAAO,MAAOC,cAAe,aAAcR,SAAC,4CAC5HC,cAACQ,IAAU,CAACC,QAASA,IAAMsqB,IAAqC7qB,GAAI,CAACS,SAAU,WAAYC,MAAO,EAAGC,IAAK,GAAGd,SACzGC,cAACc,IAAS,CAACV,SAAS,YAExBJ,cAACe,IAAa,CAACC,UAAQ,EAACd,GAAI,CAACe,GAAI,OAAQC,GAAI,QAAQnB,SACjDC,cAACqB,IAAG,CAACnB,GAAI,CAACe,GAAI,EAAGC,GAAI,GAAGnB,SACpBC,cAACksB,KAAI,CAAChsB,GAAI,CAACiM,EAAG,GAAGpM,SACbC,cAACqB,IAAG,CAAAtB,SACCyqB,GACwD,IAArDA,EAA+Ba,WAAWnb,OACtClQ,cAAA,OAAK0L,UAAU,8BAA6B3L,SACvCyqB,EAA+Ba,WAAW5gB,KAAI,CAAC6gB,EAAgBa,IAC5D3sB,eAAA,OAAAO,SAAA,CACIC,cAACmB,IAAU,CAACjB,GAAI,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,YAAYP,SAAEurB,EAAec,eAC3Fd,EAAeC,iBAAiB9gB,KAAI,CAAC+gB,EAAsBa,IACxD7sB,eAAA,OAAKkM,UAAU,oCAAoC2B,MAAO,CAAC+C,aAAc,QAAQrQ,SAAA,CAC7EC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACC,WAAY,SAAUC,SAAU,OAAQC,UAAW,UAAUN,SAAEyrB,EAAqBc,uBAExHd,EAAqBC,yBAAyBhhB,KAAI,CAAC8hB,EAAcC,IAC9DxsB,cAAA,OAAAD,SACIP,eAAC+jB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAE1jB,SAAA,CACP,IAAlBysB,EACGhtB,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8B8I,YAAa,MAAOtgB,EAAG,IAAKpM,SACrFC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEyrB,EAAqBkB,wBAGvD,UAA7CH,EAAaI,4BACVntB,eAAA2H,WAAA,CAAApH,SAAA,CACIP,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAKxjB,GAAI,CAACyjB,OAAQ,6BAA8B8I,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQyI,eAAgB,SAAUvI,WAAY,UAAUjC,SAAA,CACxJC,cAAC4sB,KAAY,CAAC1sB,GAAI,CAACE,SAAU,SAAUE,MAAO,OAAQ8J,GAAI,MAC1DpK,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU0sB,WAAY,OAAO9sB,SAAEyrB,EAAqBsB,0BAGxH9sB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAKxjB,GAAI,CAACyjB,OAAQ,6BAA8BxX,EAAG,IAAKpM,SACnEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAUgO,GAAI,IAAKpO,SAAEyrB,EAAqBuB,2BAIlH/sB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8BxX,EAAG,IAAKpM,SACjEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEyrB,EAAqBuB,2BAK7G,KAGJvtB,eAAC6B,IAAG,CAAuCgM,MAAO,CAACvL,QAAS,OAAQ6H,MAAO,QAAQ5J,SAAA,CAC/EC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8BqJ,UAAW,MAAOP,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQE,WAAY,UAAUjC,SAC9IC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACE,SAAU,QAAQL,SAAEwsB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVntB,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAKxjB,GAAI,CAACyjB,OAAQ,6BAA8BqJ,UAAW,MAAOP,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQyI,eAAgB,UAAUxK,SACpJC,cAACid,KAAQ,CAACkH,UAAQ,EAACjH,QAASqP,EAAaW,sBACrCvC,QAAS,CAAEE,KAAMF,EAAQE,MACzB3qB,GAAI,CAAC,+BAAgC,CAACE,SAAU,WAAYE,MAAM,YAI1EN,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAI3jB,SACfC,cAAA,OAAK0L,UAAU,kBAAiB3L,SAC5BC,cAAA,OAAK0L,UAAU,eAAc3L,SACzBC,cAACmtB,KAAgB,CAACzhB,UAAU,oBAAoBke,KAAM,EAAGzF,UAAQ,EAACrK,aAAcyS,EAAaa,+BAM7GptB,cAAAmH,WAAA,CAAApH,SACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAE3jB,SACbC,cAAA,OAAK0L,UAAU,kBAAiB3L,SAC5BC,cAAA,OAAK0L,UAAU,eAAc3L,SACzBC,cAACmtB,KAAgB,CAACzhB,UAAU,oBAAoBke,KAAM,EAAGzF,UAAQ,EAACrK,aAAcyS,EAAaa,gCAI1G,gBAAAzqB,OA/Be6pB,QAkCvB,gBAAA7pB,OA/De6pB,QAiE5B,oBAAA7pB,OArEqG0pB,QAuE7G,kBAAA1pB,OA1EkBwpB,QAiFxCnsB,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAUE,UAAW,UAAUN,SAAC,6EAO7GC,cAACqd,KAAa,CAACnd,GAAI,CAAC8sB,UAAW,mBAAmBjtB,SAC7CyqB,GACwD,IAArDA,EAA+Ba,WAAWnb,OACtC1Q,eAAA,OAAK6N,MAAO,CAAC1D,MAAO,OAAQ+C,QAAS,qBAAqB3M,SAAA,CACtDC,cAACmtB,KAAgB,CAAgEtM,YAAY,6CAAsBxT,MAAO,CAAC1D,MAAO,OAAQ+C,QAAS,OAAQtM,SAAU,QAASiO,SAAW1H,IAAM0mB,OAtRtLhmB,EAsRkNV,EAAE4H,OAAOlH,WArR5PiM,EAAUuE,QAAUoC,YAAW,KAC3BwQ,GAAkC6C,IAC9BA,EAAmCvB,WAAa1kB,EACzC,IAAIimB,KACb,GACH,MAN8BjmB,KAsRkO,EAAC8e,IAAKuE,EAAa5Q,aAAc0Q,EAA+BuB,YAAW,cAAAppB,OAAjR6nB,EAA+BtmB,YAE/DsmB,EAA+BqB,gBAChC7rB,cAAAmH,WAAA,CAAApH,SACIP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQyI,eAAgB,SAAUJ,GAAI,GAAGpK,SAAA,CACxDP,eAAC2B,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACgC,GAAI,OAAQiI,GAAI,OAAQC,GAAI,GAAGrK,SAAA,CAAC,mCAAmBC,cAAA,QAAMqN,MAAO,CAAClN,WAAY,SAAUG,MAAO,WAAWP,SAAEyqB,EAA+BsB,kBACxK9rB,cAACya,KAAoB,CAACC,YAAaC,KAAeC,cAAc,KAAI7a,SAChEC,cAAC6a,KAAa,CAAC9F,WAAY,CAAC,cAAchV,SACtCC,cAAC8a,KAAU,CAACrS,MAAM,oCAAoB8kB,aAAW,EAC7CxS,OAAO,aAAajB,aAAckB,KAAOwP,EAA+BqB,iBACxExd,SAAWhH,GAvR9BA,KAC1BA,IACIiM,EAAUuE,SACTmC,cAAc1G,EAAUuE,SAE5BvE,EAAUuE,QAAUoC,YAAW,KAC3B,MAAMF,EAAa1S,EAAM+T,GACnBtE,EAAgBkE,KAAOjB,GAAYgB,OAAO,cAC3B,iBAAlBjE,GACC2T,GAAkC6C,IAC9BA,EAAmCzB,gBAAkB/U,EAC9C,IAAIwW,KAEnB,GACD,KACP,EAwQqEE,CAAwBnmB,GAC7CiO,UAAW,CACP6F,UAAW,CAAEvB,SAAUpG,eAQ3C,KAGRxT,cAAA,OAAKqN,MAAO,CAACvL,QAAS,OAAQyI,eAAgB,UAAUxK,SACpDP,eAAC0N,KAAK,CAACC,QAAS,EAAGC,UAAU,MAAKrN,SAAA,CAC9BC,cAAC4K,IAAM,CAAC1K,GAAI,CAACE,SAAU,OAAQG,cAAe,QAASa,QAAQ,YAAYX,QAASA,IAhP3FoC,WACzB,GAAGyU,IAAgB,CAGf,GAFA1C,GAAuB,GAEpBrV,EAAMkuB,mBAAmB,CACxBjD,EAA+Ba,WAAW/U,QAAOoX,GAAQA,EAAKC,gBAAehI,SAAQ+H,IACjF,IAAIE,EAAkBruB,EAAMkuB,mBAAmB9U,MAAKkV,GAAQA,EAAKzB,eAAiBsB,EAAKtB,cAAgByB,EAAKF,gBAExGC,EAEFF,EAAKnC,iBAAiB5F,SAAQmI,IAC5B,IAAIC,EAAiBH,EAAgBrC,iBAAiB5S,MAAKqV,GAAYA,EAAS1B,uBAAyBwB,EAASxB,uBAE9GyB,EAEFD,EAASrC,yBAAyB9F,SAAQsI,IACxC,IAAIC,EAAkBH,EAAetC,yBAAyB9S,MAAKwV,GAAaA,EAAUlB,8BAAgCgB,EAAUhB,8BAEhIiB,GAEFA,EAAgBhB,sBAAwBe,EAAUf,sBAClDgB,EAAgBd,oBAAsBa,EAAUb,qBAGhDW,EAAetC,yBAAyB/hB,KAAKukB,EAC/C,IAIFL,EAAgBrC,iBAAiB7hB,KAAKokB,EACxC,IAIFvuB,EAAMkuB,mBAAmB/jB,KAAKgkB,EAChC,IAGJ,MAAMnqB,EAAkB,CAAEW,UAAWsmB,EAA+BtmB,UAAWkqB,aAAc7uB,EAAMkuB,0BAE7FnqB,EAAqBC,GAE3B,MAAM8qB,EAAkC7D,EAA+Ba,WAAW/U,QAAOgV,IAAoD,IAAlCA,EAAegD,iBAC1H9D,EAA+Ba,WAAagD,EAC5C,MAAME,QAA+B/qB,EAAqBgnB,GACrB,MAAlC+D,EAAuBzqB,QACtB+J,IAAM8B,QAAQ4e,EAAuB1qB,KAAM,CAACwL,QAAS,aACrD9P,EAAMivB,qCACN/D,IACAlrB,EAAMyrB,+BAA8B,IAGpCnd,IAAMzK,MAAMmrB,EAAuB1qB,KAAM,CAACwL,QAAS,UAE3D,KAEI,CACA,GAAGmb,EAA+Ba,WAAWoD,MAAKnD,IAAmD,IAAjCA,EAAeqC,gBAAwB,CACvG,MAAMS,EAAe5D,EAA+Ba,WAAW/U,QAAOgV,IAAmD,IAAjCA,EAAeqC,gBACjGpqB,EAAkB,CAAEW,UAAWsmB,EAA+BtmB,UAAWkqB,aAAcA,SACvF9qB,EAAqBC,EAC/B,CACA,MAAM8qB,EAAkC7D,EAA+Ba,WAAW/U,QAAOgV,IAAoD,IAAlCA,EAAegD,iBAC1H9D,EAA+Ba,WAAagD,EAC5C,MAAME,QAA+B/qB,EAAqBgnB,GACrB,MAAlC+D,EAAuBzqB,QACtB+J,IAAM8B,QAAQ4e,EAAuB1qB,KAAM,CAACwL,QAAS,aACrD9P,EAAMivB,qCACN/D,IACAlrB,EAAMyrB,+BAA8B,IAGpCnd,IAAMzK,MAAMmrB,EAAuB1qB,KAAM,CAACwL,QAAS,UAE3D,CACAuF,GAAuB,EAC3B,GAoK0H8Z,GAAuB3uB,SAC5G,aACLC,cAAC4K,IAAM,CAAC1K,GAAI,CAACE,SAAU,OAAQG,cAAe,QAASa,QAAQ,YAAYd,MAAO,QAC9EG,QAASA,IAAMsqB,IAAoChrB,SAAC,yBAOxE,UAKZC,cAAC+Q,GAAe,CACZC,oBAAqBA,EAAqB4D,uBAAwBA,MAIlF,E,qFC/WAoG,KAAO2T,OAAO,MA0WCC,OAxWf,SAA8BrvB,GAC1B,MAOOsvB,EAAsBC,GAA2BvpB,mBAPpB,CAChC6oB,aAAc,GACdW,cAAe,CAAEC,gBAAiB,GAAIC,gBAAiB,GAAIlD,WAAY,GAAImD,YAAa,IACxFC,aAAc,GACdC,gBAAiB,MAIdC,EAAqBC,GAA0B/pB,sBAC/CgqB,EAAsBC,GAA2BjqB,sBAEjDkqB,EAAoBC,GAAyBnqB,oBAAS,IAEtDoqB,EAA6BC,GAAkCrqB,mBAAS,KACxEsqB,EAA6BC,GAAkCvqB,mBAAS,IAazEolB,EAXYC,aAAW,CACzBC,KAAM,CACJ,iBAAkB,CAChBvqB,MAAO,WAET,6BAA8B,CAC5BA,MAAO,aAKCwqB,GAuGhB,OANA5jB,qBAAU,KACH3H,EAAMwwB,mBAlEuBltB,WAChC6sB,GAAsB,GACtB,MAAMM,QAA4B1rB,GAAe/E,EAAMwwB,kBAAkBhB,cAAcxvB,EAAMwwB,kBAAkBhB,cAAcN,MAAKwB,GAAyD,OAApCA,EAAkB1rB,gBAA0B,EAAI,GAAGA,eAC1M,GAAGhF,EAAMwwB,kBAAkBG,eAAe,CAEtC,MAAMC,EAA+BH,EAAoBd,YAAY7D,WAAW5gB,KAAK2lB,IAA0B,IAAUA,EAA4B7E,iBAAkB6E,EAA2B7E,iBAAiB,GAAI8E,cAAeD,EAA2B7E,iBAAiBrb,OAAQogB,eAAgB,MAG1ShB,EAAuB/vB,EAAMwwB,kBAAkB3B,aAAa3jB,KAAK8lB,IAAgB,IAAUA,EAAkBF,cAAeE,EAAiBhF,iBAAiBrb,OAAQogB,eAAgB,OAEtLd,EAAwBQ,EAAoBd,YAAY7D,WAAW5gB,KAAK2lB,IAA0B,IAAUA,EAA4BC,cAAeD,EAA2B7E,iBAAiBrb,OAAQogB,eAAgB,OAE3N,MAAME,EAAsB,IACrBjxB,EAAMwwB,kBAAkBhB,cAAcxvB,EAAMwwB,kBAAkBhB,cAAcN,MAAKwB,GAAyD,OAApCA,EAAkB1rB,gBAA0B,EAAI,GACzJksB,eAAgBT,EAAoBd,YAAYuB,eAChD5E,gBAAiBmE,EAAoBd,YAAYrD,gBACjDC,aAAckE,EAAoBd,YAAYpD,aAC9CoD,YAAaiB,GAGjBrB,EACI,CACIV,aAAc,GACdW,cAAeyB,EACfE,sBAAuBnxB,EAAMwwB,kBAAkBW,sBAC/CvB,aAAc5vB,EAAMwwB,kBAAkBZ,aACtCC,gBAAiB7vB,EAAMwwB,kBAAkBX,iBAGrD,KACI,CACG7vB,EAAMwwB,kBAAkB3B,aAAale,OAAS,IAC7C3Q,EAAMwwB,kBAAkB3B,aAAe7uB,EAAMwwB,kBAAkB3B,aAAauC,MAAK,CAACC,EAAGC,IAAMD,EAAEE,cAAgBD,EAAEC,iBAGnH,MAAMC,EAA+BxxB,EAAMwwB,kBAAkB3B,aAAa3jB,KAAK8lB,IAAgB,IAAUA,EAAkBhF,iBAAkBgF,EAAiBhF,iBAAiB,GAAI8E,cAAeE,EAAiBhF,iBAAiBrb,OAAQogB,eAAgB,MAEtPH,EAA+BH,EAAoBd,YAAY7D,WAAW5gB,KAAK2lB,IAA0B,IAAUA,EAA4B7E,iBAAkB6E,EAA2B7E,iBAAiB,GAAI8E,cAAeD,EAA2B7E,iBAAiBrb,OAAQogB,eAAgB,MAG1ShB,EAAuB/vB,EAAMwwB,kBAAkB3B,aAAa3jB,KAAK8lB,IAAgB,IAAUA,EAAkBF,cAAeE,EAAiBhF,iBAAiBrb,OAAQogB,eAAgB,OAEtLd,EAAwBQ,EAAoBd,YAAY7D,WAAW5gB,KAAK2lB,IAA0B,IAAUA,EAA4BC,cAAeD,EAA2B7E,iBAAiBrb,OAAQogB,eAAgB,OAE3N,MAAME,EAAsB,IACrBjxB,EAAMwwB,kBAAkBhB,cAAcxvB,EAAMwwB,kBAAkBhB,cAAcN,MAAKwB,GAAyD,OAApCA,EAAkB1rB,gBAA0B,EAAI,GACzJksB,eAAgBT,EAAoBd,YAAYuB,eAChD5E,gBAAiBmE,EAAoBd,YAAYrD,gBACjDC,aAAckE,EAAoBd,YAAYpD,aAC9CoD,YAAaiB,GAGjBrB,EACI,CACIV,aAAc2C,EACdhC,cAAeyB,EACfE,sBAAuBnxB,EAAMwwB,kBAAkBW,sBAC/CvB,aAAc5vB,EAAMwwB,kBAAkBZ,aACtCC,gBAAiB7vB,EAAMwwB,kBAAkBX,iBAGrD,CACAM,GAAsB,EAAM,EAKxBsB,EACJ,GACD,CAACzxB,EAAMwwB,oBAGN/vB,cAAAmH,WAAA,CAAApH,SACIC,cAACqB,IAAG,CAACnB,GAAI,CAAC4J,OAAQ,OAAQnJ,SAAU,YAAYZ,SAC3C0vB,EACGjwB,eAAC6B,IAAG,CAACnB,GAAI,CAAC4J,OAAQ,OAAQhI,QAAS,OAAQyI,eAAgB,SAAUvI,WAAY,SAAUD,cAAe,UAAUhC,SAAA,CAChHC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,8HAGjDP,eAAA2H,WAAA,CAAApH,SAAA,CACIP,eAAA,OAAKkM,UAAU,kCAAiC3L,SAAA,CAE5CP,eAAC2B,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACC,WAAY,SAAUE,UAAW,SAAUD,SAAU,UAAUL,SAAA,CAAC,gCACxEC,cAAA,QAAMqN,MAAO,CAAC/M,MAAO,OAAOP,SAAE8uB,EAAqBE,cAAcC,qBAGvFxvB,eAAC0sB,KAAI,CAAChsB,GAAI,CAACiM,EAAG,GAAGpM,SAAA,CACZ8uB,EAAqBT,aAAa3jB,KAAI,CAACwmB,EAAiBC,IACrD1xB,eAAA,OAAAO,SAAA,CACIC,cAACmxB,KAAc,CAACjxB,GAAI,CAACkZ,GAAI,MAAOC,GAAI,MAAOnL,aAAc,MAAO,SAAU,CAACvM,gBAAiB,uBACxFlB,QAASA,IAzHdywB,KAC/BtB,GAAgCwB,IAC5B,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQH,IAAqBG,EAAQH,GAC9BG,CAAO,GAChB,EAoHiDC,CAA0BJ,GAAkBnxB,SAE3DP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQE,WAAY,UAAUjC,SAAA,CAC7CC,cAACuxB,KAAY,CAACrxB,GAAI,CAACihB,SAAU,OAAQ,+BAAgC,CAAC/gB,SAAU,OAAQE,MAAO,YAAYP,SAACC,cAACwxB,KAAQ,MACrHxxB,cAACyxB,KAAY,CAACC,QAAST,EAAgB7E,aAAclsB,GAAI,CAAC,6BAA8B,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,oBAInJN,cAAC2xB,KAAQ,CAACC,GAAIjC,EAA4BuB,GAAmBW,QAAQ,OAAOC,eAAa,EAAA/xB,SAErFP,eAAA,OAAKkM,UAAU,yCAAyC2B,MAAO,CAAEoc,YAAa,OAAQC,aAAc,OAAQ/F,OAAQ,oBAAqBzV,aAAc,QAASnO,SAAA,CAC5JC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACC,WAAY,SAAUC,SAAU,OAAQC,UAAW,SAAU8J,GAAI8mB,EAAgB1F,iBAAiBe,qBAAuB,EAAI,GAAIvsB,SAAEkxB,EAAgB1F,iBAAiBe,uBAEzM9sB,eAAC6B,IAAG,CAACnB,GAAI,CAACiK,GAAI,GAAGpK,SAAA,CACZkxB,EAAgB1F,iBAAiBE,yBAAyBhhB,KAAI,CAAC8hB,EAAcC,IAC1ExsB,cAACqB,IAAG,CAAAtB,SACAP,eAAC+jB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAE1jB,SAAA,CACP,IAAlBysB,EACGhtB,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8B8I,YAAa,MAAOtgB,EAAG,IAAKpM,SACrFC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEkxB,EAAgB1F,iBAAiBmB,wBAGnE,UAA7CH,EAAaI,4BACVntB,eAAA2H,WAAA,CAAApH,SAAA,CACIP,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAKxjB,GAAI,CAACyjB,OAAQ,6BAA8B8I,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQyI,eAAgB,SAAUvI,WAAY,UAAUjC,SAAA,CACxJC,cAAC4sB,KAAY,CAAC1sB,GAAI,CAACE,SAAU,SAAUE,MAAO,OAAQ8J,GAAI,MAC1DpK,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU0sB,WAAY,OAAO9sB,SAAEkxB,EAAgB1F,iBAAiBuB,0BAGpI9sB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAKxjB,GAAI,CAACyjB,OAAQ,6BAA8BxX,EAAG,IAAKpM,SACnEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAUgO,GAAI,IAAKpO,SAAEkxB,EAAgB1F,iBAAiBwB,2BAI9H/sB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8BxX,EAAG,IAAKpM,SACjEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEkxB,EAAgB1F,iBAAiBwB,2BAKzH,KAGJvtB,eAAC6B,IAAG,CAAuCgM,MAAO,CAACvL,QAAS,OAAQ6H,MAAO,QAAQ5J,SAAA,CAC/EC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8BqJ,UAAW,MAAOP,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQE,WAAY,UAAUjC,SAC9IC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACE,SAAU,QAAQL,SAAEwsB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVntB,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAKxjB,GAAI,CAACyjB,OAAQ,6BAA8BqJ,UAAW,MAAOP,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQyI,eAAgB,UAAUxK,SACpJC,cAACid,KAAQ,CAACkH,UAAQ,EAACjH,QAASqP,EAAaW,sBAAuBvC,QAAS,CAAEE,KAAMF,EAAQE,MAAQ3qB,GAAI,CAAC,+BAAgC,CAACE,SAAU,eAGrJJ,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAI3jB,SACfC,cAAA,OAAK0L,UAAU,kBAAiB3L,SAC5BC,cAAA,OAAK0L,UAAU,eAAc3L,SACzBC,cAACmtB,KAAgB,CAACzhB,UAAU,oBAAoBke,KAAM,EAAGzF,UAAQ,EAAC9c,MAAOklB,EAAaa,+BAMtGptB,cAAAmH,WAAA,CAAApH,SACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAE3jB,SACbC,cAAA,OAAK0L,UAAU,kBAAiB3L,SAC5BC,cAAA,OAAK0L,UAAU,eAAc3L,SACzBC,cAACmtB,KAAgB,CAACzhB,UAAU,oBAAoBke,KAAM,EAAGzF,UAAQ,EAAC9c,MAAOklB,EAAaa,gCAInG,gBAAAzqB,OA5Be6pB,QA+BvB,gBAAA7pB,OA5De6pB,MAgE7ByE,EAAgBZ,cAAgB,EAC7BrwB,cAAAmH,WAAA,CAAApH,SACIC,cAAA,OAAK0L,UAAU,0CAAyC3L,SACpDC,cAAC+xB,KAAU,CAACC,MAAOf,EAAgBZ,cAAe4B,KAAMhB,EAAgBX,eAAgBhwB,MAAM,QAAQJ,GAAI,CAACgM,EAAG,QAASmC,SAAUA,CAAC1H,EAAGsrB,IA3L5JC,EAACvrB,EAAGsrB,EAAME,KAC3C,MAAMC,EAAwB,IAAIvD,GAClCuD,EAAsBhE,aAAa+D,GAAkB5G,iBAAmB8D,EAAoB8C,GAAkB5G,iBAAiB0G,EAAO,GACtIG,EAAsBhE,aAAa+D,GAAkB7B,eAAiB2B,EACtEnD,EAAwBsD,EAAsB,EAuLwJF,CAA6BvrB,EAAGsrB,EAAMf,SAI5L,eAML,mBAAAvuB,OA9FcuuB,MAkGhCrC,EAAqBE,cAAcG,YAAYzkB,KAAI,CAAC4nB,EAAkBC,IACnE9yB,eAAA,OAAAO,SAAA,CACIC,cAACmxB,KAAc,CAACjxB,GAAI,CAACkZ,GAAI,MAAOC,GAAI,MAAOnL,aAAc,MAAO,SAAU,CAACvM,gBAAiB,uBACxFlB,QAASA,IApNd6xB,KAC/BxC,GAAgCsB,IAC5B,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQiB,IAAqBjB,EAAQiB,GAC9BjB,CAAO,GAChB,EA+MiDkB,CAA0BD,GAAkBvyB,SAE3DP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQE,WAAY,UAAUjC,SAAA,CAC7CC,cAACuxB,KAAY,CAACrxB,GAAI,CAACihB,SAAU,OAAQ,+BAAgC,CAAC/gB,SAAU,OAAQE,MAAO,YAAYP,SAACC,cAACwxB,KAAQ,MACrHxxB,cAACyxB,KAAY,CAACC,QAASW,EAAiBjG,aAAclsB,GAAI,CAAC,6BAA8B,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,oBAIpJN,cAAC2xB,KAAQ,CAACC,GAAI/B,EAA4ByC,GAAmBT,QAAQ,OAAOC,eAAa,EAAA/xB,SACrFP,eAAA,OAAKkM,UAAU,yCAAyC2B,MAAO,CAAEoc,YAAa,OAAQC,aAAc,OAAQ/F,OAAQ,oBAAqBzV,aAAc,QAASnO,SAAA,CAC5JC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACC,WAAY,SAAUC,SAAU,OAAQC,UAAW,SAAU8J,GAAIkoB,EAAiB9G,iBAAiBe,qBAAuB,EAAI,GAAIvsB,SAAEsyB,EAAiB9G,iBAAiBe,uBAE3M9sB,eAAC6B,IAAG,CAACnB,GAAI,CAACiK,GAAI,GAAGpK,SAAA,CACZsyB,EAAiB9G,iBAAiBE,yBAAyBhhB,KAAI,CAAC8hB,EAAcC,IAC3ExsB,cAACqB,IAAG,CAAAtB,SACAP,eAAC+jB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAE1jB,SAAA,CACP,IAAlBysB,EACGhtB,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8B8I,YAAa,MAAOtgB,EAAG,IAAKpM,SACrFC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEsyB,EAAiB9G,iBAAiBmB,wBAGpE,UAA7CH,EAAaI,4BACVntB,eAAA2H,WAAA,CAAApH,SAAA,CACIP,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAKxjB,GAAI,CAACyjB,OAAQ,6BAA8B8I,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQyI,eAAgB,SAAUvI,WAAY,UAAUjC,SAAA,CACxJC,cAAC4sB,KAAY,CAAC1sB,GAAI,CAACE,SAAU,SAAUE,MAAO,OAAQ8J,GAAI,MAC1DpK,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU0sB,WAAY,OAAO9sB,SAAEsyB,EAAiB9G,iBAAiBuB,0BAGrI9sB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAKxjB,GAAI,CAACyjB,OAAQ,6BAA8BxX,EAAG,IAAKpM,SACnEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAUgO,GAAI,IAAKpO,SAAEsyB,EAAiB9G,iBAAiBwB,2BAI/H/sB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8BxX,EAAG,IAAKpM,SACjEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEsyB,EAAiB9G,iBAAiBwB,2BAK1H,KAGJvtB,eAAC6B,IAAG,CAAuCgM,MAAO,CAACvL,QAAS,OAAQ6H,MAAO,QAAQ5J,SAAA,CAC/EC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8BqJ,UAAW,MAAOP,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQE,WAAY,UAAUjC,SAC9IC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACE,SAAU,QAAQL,SAAEwsB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVntB,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAKxjB,GAAI,CAACyjB,OAAQ,6BAA8BqJ,UAAW,MAAOP,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQyI,eAAgB,UAAUxK,SACpJC,cAACid,KAAQ,CAACkH,UAAQ,EAACjH,QAASqP,EAAaW,sBAAuBvC,QAAS,CAAEE,KAAMF,EAAQE,MAAQ3qB,GAAI,CAAC,+BAAgC,CAACE,SAAU,eAGrJJ,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IAAI3jB,SACfC,cAAA,OAAK0L,UAAU,kBAAiB3L,SAC5BC,cAAA,OAAK0L,UAAU,eAAc3L,SACzBC,cAACmtB,KAAgB,CAACzhB,UAAU,oBAAoBke,KAAM,EAAGzF,UAAQ,EAAC9c,MAAOklB,EAAaa,+BAMtGptB,cAAAmH,WAAA,CAAApH,SACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAE3jB,SACbC,cAAA,OAAK0L,UAAU,kBAAiB3L,SAC5BC,cAAA,OAAK0L,UAAU,eAAc3L,SACzBC,cAACmtB,KAAgB,CAACzhB,UAAU,oBAAoBke,KAAM,EAAGzF,UAAQ,EAAC9c,MAAOklB,EAAaa,gCAInG,gBAAAzqB,OA5Be6pB,QA+BvB,gBAAA7pB,OA5De6pB,MAgE7B6F,EAAiBhC,cAAgB,EAC9BrwB,cAAAmH,WAAA,CAAApH,SACIC,cAAA,OAAK0L,UAAU,0CAAyC3L,SACpDC,cAAC+xB,KAAU,CAACC,MAAOK,EAAiBhC,cAAe4B,KAAMI,EAAiB/B,eAAgBhwB,MAAM,QAAQJ,GAAI,CAACgM,EAAG,QAASmC,SAAUA,CAAC1H,EAAGsrB,IAtR5JO,EAAC7rB,EAAGsrB,EAAMQ,KAC7C,MAAML,EAAwB,IAAIvD,GAClCuD,EAAsBrD,cAAcG,YAAYuD,GAAkBlH,iBAAmBgE,EAAqBkD,GAAkBlH,iBAAiB0G,EAAO,GACpJG,EAAsBrD,cAAcG,YAAYuD,GAAkBnC,eAAiB2B,EACnFnD,EAAwBsD,EAAsB,EAkR0JI,CAA+B7rB,EAAGsrB,EAAMK,SAIhM,eAKL,oBAAA3vB,OA5Fe2vB,SAiGtCtyB,cAAA,OAAK0L,UAAU,aAAa2B,MAAO,CAACid,WAAY,OAAQ7Q,UAAW,OAAO1Z,SACtEC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAA,uBAAA4C,OAAeksB,EAAqBE,cAAchD,mBAI7H/rB,cAAA,OAAK0L,UAAU,iBAAiB2B,MAAO,CAACid,WAAY,OAAQ7Q,UAAW,MAAO9P,MAAO,OAAO5J,SACxFC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,UAAWH,WAAY,SAAUC,SAAU,WAAWL,SAAA,GAAA4C,OAAKksB,EAAqBE,cAAc2D,eAAc,MAAA/vB,OAAKqY,KAAO6T,EAAqBE,cAAcE,iBAAiBlU,OAAO,mBAO3P,E,uRCk7Ce4X,OA7uDf,WACI,MAAMC,EAAqC,CACvCC,IAAK,GACLxuB,GAAI,GACJyuB,WAAY,GACZC,aAAc,GACdC,YAAa,GACbC,kBAAmB,GACnBC,eAAgB,GAChBC,eAAgB,GAChBC,eAAgB,GAChBC,0BAA2B,GAC3BC,cAAe,GACfC,gBAAiB,KAGf,KAAEluB,EAAI,QAAEG,GAAYmC,qBAAW9C,KAG9B2uB,EAA6BC,GAAkCluB,mBAASqtB,IAGxEc,EAAmBC,GAAwBpuB,mBAAS,KAGpDwqB,EAAmB6D,GAAwBruB,sBAG3CsuB,EAAwCC,GAA6CvuB,sBAGrFwuB,EAA2BC,GAAgCzuB,oBAAS,IAGpE0uB,EAA+BC,GAAoC3uB,mBAAS,KAG5E4uB,EAA2BC,GAAgC7uB,mBAAS,CAAC,IAGrE8uB,EAAkCC,GAAuC/uB,mBAAS,KAGlFgvB,EAAuBC,GAA4BjvB,mBAAS,KAC5DkvB,EAA8BC,GAAmCnvB,sBAGjEovB,EAAyBC,GAA8BrvB,mBAAS,IAGhE6lB,EAA6ByJ,GAAkCtvB,mBAAS,CAAC,IAEzEkoB,EAAoBqH,GAAyBvvB,sBAE7CwvB,EAAqBC,GAA0BzvB,sBAE/C0vB,EAAuBC,GAA4B3vB,sBAGnD0mB,EAA4BjB,GAAiCzlB,oBAAS,IAEtE4vB,EAA0BC,GAA+B7vB,oBAAS,IAClE8vB,EAAgBC,GAAqB/vB,oBAAS,IAC9CgwB,EAAoBC,GAAyBjwB,oBAAS,IACtDkwB,EAA0BC,GAA+BnwB,oBAAS,IAClEowB,EAA0BC,IAA+BrwB,oBAAS,IAElEuY,GAA0BC,IAA+BxY,mBAAS,KAClE2Y,GAAqBC,IAA0B5Y,mBAAS,KAExD6Y,GAA+BC,IAAoC9Y,mBAAS,KAC5E+Y,GAA8BC,IAAmChZ,mBAAS,KAE1EgY,GAAYC,IAAiBjY,mBAAS,CAACkY,UAAW,EAAGC,UAAW,yBAChEC,GAAuBC,IAA4BrY,mBACtD,CACI,CAAEmY,UAAW,sBAAeG,YAAa,GACzC,CAAEH,UAAW,wBAAcG,YAAa,MAIzChc,GAA6B6D,IAAkCH,oBAAS,GA2BzEiZ,GAAiBA,CAACC,EAAUC,KAC9B,MAAMC,EAAsBD,EAAWrI,cACvC,OAAOoI,EAASnI,QAAOsI,IACrB,MAAM,UAAE1a,EAAS,SAAE+N,EAAQ,YAAEG,EAAW,YAAEE,GAAgBsM,EAAW9M,QACrE,OAAO5N,EAAUmS,cAAcM,SAASgI,IAAwB1M,EAASoE,cAAcM,SAASgI,IAAwBvM,EAAYiE,cAAcM,SAASgI,IAAwBrM,EAAY+D,cAAcM,SAASgI,EAAoB,GAC1O,EA+FAE,GAA8Bhc,UAChC,MAAMK,QAAiBQ,IACvB,GAAgB,MAAbR,GAC6B,IAAzBA,EAASqR,KAAKrE,OAEb,GADA6N,GAA4B7a,EAASqR,MACT,IAAzBgJ,GAAWE,YAAiE,IAA9C+V,EAA4BqC,cAAuB,CAChF,MAAMvW,EAA8Bpc,EAASqR,KAAK+B,QAAOiJ,GAAuD,IAA/BA,EAAqB5a,OAA8C,IAA/B4a,EAAqB5a,OAA8C,IAA/B4a,EAAqB5a,QAC9K4Z,GAAgCe,GAChCjB,GAAiCiB,GACjC,MAAML,EAActB,GAAsBlT,KAAI,CAACmN,EAAMke,KAAK,IACnDle,EACHiG,YAAa3a,EAASsc,eAAesW,OAEzClY,GAAyBqB,EAK7B,MACK,GAA4B,IAAzB1B,GAAWE,UAAgB,CAC/B,MAAMgC,EAA2Bvc,EAASqR,KAAK+B,QAAOiJ,GAAuD,IAA/BA,EAAqB5a,QACnG4Z,GAAgCkB,GAChCpB,GAAiCoB,GACjC,MAAMR,EAActB,GAAsBlT,KAAI,CAACmN,EAAMke,KAAK,IACnDle,EACHiG,YAAa3a,EAASsc,eAAesW,OAEzClY,GAAyBqB,EAC7B,CAGRqW,GAAkB,GAClBE,GAAsB,EAAM,EAG1BO,GAAyBlzB,UAC3B6C,IAA+B,GAC/B8vB,GAAsB,GACtBJ,GAA4B,SACtBY,GAA8BC,EAAiB5xB,IACrD,MAAM6xB,EAA+B,IAAI1C,GACzC0C,EAA6BrD,IAAMoD,EAAiB5T,MACpD6T,EAA6B7xB,GAAK4xB,EAAiB5xB,GACnD6xB,EAA6BpyB,OAAS,EACtCoyB,EAA6BpD,WAAamD,EAAiBnkB,QAAQ5N,UACnEgyB,EAA6BnD,aAAekD,EAAiBnkB,QAAQG,SACrEikB,EAA6BlD,YAAciD,EAAiBnkB,QAAQ9N,WACpEkyB,EAA6BjD,kBAAoBgD,EAAiBnkB,QAAQwR,YAC1E4S,EAA6BhD,eAAiB+C,EAAiBnkB,QAAQI,OACvEgkB,EAA6B/C,eAAiB8C,EAAiBnsB,OAC/DosB,EAA6B9C,eAAiB6C,EAAiBtkB,OAC/DukB,EAA6B7C,0BAA4B4C,EAAiBrkB,kBAC1EskB,EAA6B7C,0BAA4B4C,EAAiBrkB,kBAC1EskB,EAA6B5C,cAAgB2C,EAAiBnkB,QAAQM,YAAc6jB,EAAiBnkB,QAAQM,YAAc6jB,EAAiBnkB,QAAQQ,YACpJ4jB,EAA6B3C,gBAAkB0C,EAAiBnkB,QAAQsN,YACxE8W,EAA6BL,cAA2C,IAA3BI,EAAiBtxB,MAC9DuxB,EAA6BC,aAA0C,IAA3BF,EAAiBtxB,MAC7D8uB,EAA+ByC,GAC/BV,GAAsB,GACtBJ,GAA4B,GAC5B1vB,IAA+B,EAAM,EAkDnC0wB,GAA6BvzB,UAS/B,GARA6yB,GAA4B,GAC5B3F,EAAkBhB,cAAcpJ,SAASsK,IACE,OAApCA,EAAkB1rB,gBACjB0rB,EAAkBtrB,MAAQ,EAC9B,KAI4C,IAA7C6uB,EAA4B2C,eAA8D,IAArCpG,EAAkBG,eAAyB,CAC/F,MAAMmG,EAAsB/mB,KAAE+I,UAAU0X,GAClCuG,QAAqC9xB,GAAqBgvB,EAA4BV,YAEtFyD,EAA4BF,EAAoBjI,aAAa3jB,KAAI+rB,IAAQ,CAC3EpK,aAAcoK,EAASpK,aACvBuB,eAAe,EACfmD,cAAe0F,EAAS1F,cACxBvF,iBAAkBiL,EAASjL,iBAAiB9gB,KAAIgsB,IAAO,IAChDA,EACHhL,yBAA0BgL,EAAQhL,yBAAyBnV,QAAOogB,GAAKA,EAAExJ,uBAAyBwJ,EAAEtJ,8BAI5G0H,EAAsByB,GAEtB,MAAMI,EAAgCL,EAA6BzyB,KACnE8yB,EAA8BhR,SAAQ,CAACsL,EAAiBC,KACpDD,EAAgB1F,iBAAmB0F,EAAgB1F,iBAAiB9gB,KAAK+gB,IAC9D,IACAA,EACHoL,kBAAmB1F,EACnB2F,QAAQ,MAGT,IAAI5F,KAAoBA,EAAgB4F,QAAS,KAAS5F,EAAgBf,gBAAiB,KAAUe,EAAgBH,kBAGhIkE,EAAuB2B,GAEvB5G,EAAkB3B,aAAeuI,EAEjC,MAAMG,EAAqC/G,EAAkBhB,cAAcpW,MAAMsX,GAA0D,OAApCA,EAAkB1rB,gBAEzHswB,EAA8B,CAC1B3wB,UAAWsvB,EAA4BV,WACvCnH,kBAAmBmL,EAAmCnL,kBACtDI,WAAY+K,EAAmC/K,WAC/CV,WAAY,KAGhBsI,EAAqB5D,GACrB+D,EAA0CxkB,KAAE+I,UAAU0X,IACtD6D,GACJ,KAGI,CACA,MAAMmD,EAAoChH,EAAkB3B,aAAa3jB,KAAKwmB,IAC1E,MAAM+F,EAAgC/F,EAAgB1F,iBAAiB9gB,KAAK+gB,IAC/C,CACrBc,qBAAsBd,EAAqBc,qBAC3CI,oBAAqBlB,EAAqBkB,oBAC1CI,qBAAsBtB,EAAqBsB,qBAC3CC,oBAAqBvB,EAAqBuB,oBAC1CtB,yBAA0B,OAYlC,MAP8B,CAC1BW,aAAc6E,EAAgB7E,aAC9BuB,eAAe,EACfmD,cAAeG,EAAgBH,cAC/BvF,iBAAkByL,EAGM,IAG1BF,EAAqC/G,EAAkBhB,cAAcpW,MAAMsX,GAAsBA,EAAkB/rB,YAAcsvB,EAA4BV,aAEnK+B,EAA8B,CAC1B3wB,UAAWsvB,EAA4BV,WACvCnH,kBAAmBmL,EAAmCnL,kBACtDI,WAAY+K,EAAmC/K,WAC/CV,WAAY0L,IAGhBhH,EAAkB3B,aAAazI,SAAQ,CAAC4K,EAAkB0G,KACtD1G,EAAiBhF,iBAAmBgF,EAAiBhF,iBAAiB9gB,KAAK+gB,IAChE,IACAA,EACHoL,kBAAmBK,MAGpB,IACA1G,MAIXoD,EAAqB5D,GACrB6D,GACJ,CACA8B,GAA4B,EAAM,EAkBhCwB,GAA+Br0B,UACjC6yB,GAA4B,GAC5B,MAAMyB,QAAqC1yB,GAAqBsrB,EAAkBhB,cAAc,GAAGxqB,eAEnG,GAA2C,MAAxC4yB,EAA6BrzB,OAAe,CAC3C,MAAMoyB,EAA+B,IAAI1C,GACzC0C,EAA6BpyB,OAAS,EACtC2vB,EAA+ByC,GAG/B,MAEMK,EAFsBjnB,KAAE+I,UAAU0X,GAEc3B,aAAa3jB,KAAI+rB,IAAQ,CAC3EpK,aAAcoK,EAASpK,aACvBuB,eAAe,EACfmD,cAAe0F,EAAS1F,cACxBvF,iBAAkBiL,EAASjL,iBAAiB9gB,KAAIgsB,IAAO,IAChDA,EACHhL,yBAA0BgL,EAAQhL,yBAAyBnV,QAAOogB,GAAKA,EAAExJ,uBAAyBwJ,EAAEtJ,+BAIpE,IAArC2C,EAAkBG,gBACjB4E,EAAsByB,SAGpBa,GAA6BD,EAA6BtzB,MAChEgK,IAAM8B,QAAQ,2CAADhN,OAA4B6wB,EAA4BT,cAAgB,CAAC1jB,QAAS,YACnG,MACgD,MAAxC8nB,EAA6BrzB,QACjC+J,IAAMzK,MAAM,sHAAoE,CAACiM,QAAS,WAE9FqmB,GAA4B,EAAM,EAIhC0B,GAA+Bv0B,UACjCktB,EAAkB3B,aAAazI,SAAQ,CAACsL,EAAiBC,KACrDD,EAAgB1F,iBAAmB0F,EAAgB1F,iBAAiB9gB,KAAK+gB,IAC9D,IACAA,EACHoL,kBAAmB1F,EACnB2F,QAAQ,MAGhB5F,EAAgB4F,QAAS,CAAI,IAEjC9G,EAAkBhB,cAAc,GAAGpqB,MAAQ,EAC3CorB,EAAkBhB,cAAc,GAAG1D,WAAagM,EAAiChM,WAEjF,MAAMiM,EAA6CvH,EAAkBhB,cAAc,GAAG1D,WAAW5gB,KAAI+rB,IAAQ,CACzGpK,aAAcoK,EAASpK,aACvBkC,gBAAgB,EAChB/C,iBAAkBiL,EAASjL,iBAAiB9gB,KAAIgsB,IAAO,IAClDA,EACHhL,yBAA0BgL,EAAQhL,yBAAyBgD,MAAKiI,GAAKA,EAAExJ,uBAAyBwJ,EAAEtJ,sBAC9FqJ,EAAQhL,yBAAyBnV,QAAOogB,GAAKA,EAAExJ,uBAAyBwJ,EAAEtJ,sBAC1E,WAKJmK,EAAiC,CACnCrzB,UAAWsvB,EAA4BV,WACvCnH,kBAAmB6H,EAA4BnvB,KAAO0rB,EAAkBhB,cAAc,GAAGpD,kBAAoB6H,EAA4BnvB,GAAK0rB,EAAkBhB,cAAc,GAAGpD,kBACjLI,WAAYgE,EAAkBhB,cAAc,GAAGhD,WAC/CV,WAAYiM,GAGhB9C,EAAyB,CACrBgD,kBAAmBzH,EAAkBhB,cAAc,GAAGC,gBACtDyI,iBAAkB1H,EAAkBhB,cAAc,GAAG1D,aAGzDqJ,EAAgC,CAC5B8C,kBAAmBzH,EAAkBhB,cAAc,GAAGC,gBACtDyI,iBAAkB1H,EAAkBhB,cAAc,GAAG1D,aAGzD,MAAMiL,QAAqC9xB,GAAqBgvB,EAA4BV,YAE5F,GAA2C,MAAxCwD,EAA6BxyB,OAChC,CACI,MAAM6yB,EAAgCL,EAA6BzyB,KACnE8yB,EAA8BhR,SAAQ,CAACsL,EAAiBC,KACpDD,EAAgB1F,iBAAmB0F,EAAgB1F,iBAAiB9gB,KAAK+gB,IAC9D,IACAA,EACHoL,kBAAmB1F,EACnB2F,QAAQ,MAGT,IAAI5F,KAAoBA,EAAgB4F,QAAS,KAAS5F,EAAgBf,gBAAiB,KAAUe,EAAgBH,kBAGhIkE,EAAuB2B,GACvB5G,EAAkB3B,aAAeuI,EAEjChD,EAAqB5D,GACrB+D,EAA0CxkB,KAAE+I,UAAU0X,IACtD6D,GACJ,KAEI,CACA,MAAM8D,QAAwCtzB,GAAwBovB,EAA4BnvB,IAE5F0yB,EAAoChH,EAAkB3B,aAAa3jB,KAAKwmB,IAC1E,MAAM+F,EAAgC/F,EAAgB1F,iBAAiB9gB,KAAK+gB,IAC/C,CACrBc,qBAAsBd,EAAqBc,qBAC3CI,oBAAqBlB,EAAqBkB,oBAC1CI,qBAAsBtB,EAAqBsB,qBAC3CC,oBAAqBvB,EAAqBuB,oBAC1CtB,yBAA0B,OAYlC,MAP8B,CAC1BW,aAAc6E,EAAgB7E,aAC9BuB,eAAe,EACfmD,cAAeG,EAAgBH,cAC/BvF,iBAAkByL,EAGM,IAGhCO,EAA+BlM,WAAa0L,EAAkCp0B,OAAO20B,GAErFvH,EAAkB3B,aAAesJ,EAAgCtJ,aACjEuF,EAAqB5D,GACrB6D,GACJ,CAEAiB,EAA8B0C,EAA+B,EAqE3DvB,GAAgCnzB,UAClC,MAAM80B,QAA8BvzB,GAAwBC,GAC5DuvB,EAAqB+D,EAAsB,EAIzCC,GAA4B/0B,UAgB9B,IAfiC,IAA9BkxB,GACCC,GAA8BD,GAGE,IAAjCQ,EAAsBrkB,QACrBskB,EAAyB,IAG7BJ,EACI,IACOyD,EACHC,gBAAiBD,EAAsBtM,iBAAiBrb,UAIf,IAA9CsjB,EAA4BqC,gBAA+D,IAArCnC,EAAkBxD,eAAwB,CAC/F,MAAM6H,EAAwD,IAAIF,EAAsBtM,iBAAiB,GAAIyM,eAAgBH,EAAsBG,gBACnJ1D,EAAoCyD,GACpCnD,EAA2B,EAC/B,MAEI,GAAGiD,EAAsBzL,eAAiB+H,EAA0B/H,aAAa,CAC7E,MAAM2L,EAAwD,IAAIF,EAAsBtM,iBAAiB,GAAIyM,eAAgBH,EAAsBG,gBACnJ1D,EAAoCyD,GACpCnD,EAA2B,EAC/B,KACI,CACA,MAAMmD,EAAwD,IAAIF,EAAsBtM,iBAAiBoJ,EAA0B,GAAIqD,eAAgBH,EAAsBG,gBAC7K1D,EAAoCyD,EACxC,CACJ,EAsEEE,GAAmBp1B,MAAO0B,EAAeyqB,EAAiBkJ,KAC5D,MAAMlI,QAA4B1rB,GAAeC,GAAgC,GAGjF,GAAGivB,EAA4B2C,aAAa,CACxC,MAAMgC,EAA2BnI,EAAoBd,YAAY7D,WAAW5gB,KAAI,CAAC2tB,EAAsBC,KAI7F,CACFjM,aAJiBgM,EAAqBhM,aAKtCb,iBAJiB6M,EAAqB7M,iBAAiB,GAKvD+M,4BAA6B,EAC7BR,gBAAiBM,EAAqB7M,iBAAiBrb,WAIzDqoB,EAA6B,CAC/Bf,kBAAmBxI,EACnByB,eAAgBT,EAAoBd,YAAYuB,eAChD1E,WAAYiE,EAAoBd,YAAYnD,WAC5C0L,iBAAkBU,GAOtB,GAJA7D,EAAoCiE,GACpCrD,EAAyBlF,EAAoBd,aAG1C3qB,IAAkBmvB,EAAkB3E,cAAc,GAAGxqB,cAAc,CAClEiwB,EAAyB,CACrBgD,kBAAmBxI,EACnByB,eAAgBT,EAAoBd,YAAYuB,eAChDgH,iBAAkBzH,EAAoBd,YAAY7D,aAGtDqJ,EAAgC,CAC5B8C,kBAAmBxI,EACnByB,eAAgBT,EAAoBd,YAAYuB,eAChDgH,iBAAkBzH,EAAoBd,YAAY7D,aAGtD,MAAMmN,EAAyCxI,EAAoBd,YAAY7D,WAAW5gB,KAAI,CAAC6gB,EAAgBa,KAC3G,MAAM6K,EAAgC1L,EAAeC,iBAAiB9gB,KAAK+gB,IAC9C,CACrBc,qBAAsBd,EAAqBc,qBAC3CI,oBAAqBlB,EAAqBkB,oBAC1CI,qBAAsBtB,EAAqBsB,qBAC3CC,oBAAqBvB,EAAqBuB,oBAC1CtB,yBAA0B,OAWlC,MAN8B,CAC1BW,aAAcd,EAAec,aAC7BkC,gBAAgB,EAChB/C,iBAAkByL,EAGM,IAG1ByB,EAA8B,IAAIrN,GACxCoN,EAAuC/tB,KAAKiuB,GAA2CD,EAA4BpN,WAAW3hB,KAAKgvB,KACnI7D,EAA8B4D,EAClC,CACJ,KAEI,CACAjE,EAAyB,CACrBgD,kBAAmBxI,EACnByB,eAAgBT,EAAoBd,YAAYuB,eAChDgH,iBAAkBzH,EAAoBd,YAAY7D,aAGtDqJ,EAAgC,CAC5B8C,kBAAmBxI,EACnByB,eAAgBT,EAAoBd,YAAYuB,eAChDgH,iBAAkBzH,EAAoBd,YAAY7D,aAGtD,MAAM8M,EAA2BnI,EAAoBd,YAAY7D,WAAW5gB,KAAI,CAAC2tB,EAAsBC,KAI7F,CACFjM,aAJiBgM,EAAqBhM,aAKtCb,iBAJiB6M,EAAqB7M,iBAAiB,GAKvD+M,4BAA6B,EAC7BR,gBAAiBM,EAAqB7M,iBAAiBrb,WAIzDqoB,EAA6B,CAC/Bf,kBAAmBxI,EACnByB,eAAgBT,EAAoBd,YAAYuB,eAChD1E,WAAYiE,EAAoBd,YAAYnD,WAC5C0L,iBAAkBU,GAKtB,GAFA7D,EAAoCiE,GAEV,IAAvBL,EAAyB,CACxB,MAAMM,EAAyCxI,EAAoBd,YAAY7D,WAAW5gB,KAAI,CAAC6gB,EAAgBa,KAC3G,MAAM6K,EAAgC1L,EAAeC,iBAAiB9gB,KAAK+gB,IAC9C,CACrBc,qBAAsBd,EAAqBc,qBAC3CI,oBAAqBlB,EAAqBkB,oBAC1CI,qBAAsBtB,EAAqBsB,qBAC3CC,oBAAqBvB,EAAqBuB,oBAC1CtB,yBAA0B,OAWlC,MAN8B,CAC1BW,aAAcd,EAAec,aAC7BkC,gBAAgB,EAChB/C,iBAAkByL,EAGM,IAG1ByB,EAA8B,IAAIrN,GACxCoN,EAAuC/tB,KAAKiuB,GAA2CD,EAA4BpN,WAAW3hB,KAAKgvB,KACnI7D,EAA8B4D,EAClC,CACJ,GAwFEnlB,GAAYC,iBAAO,MA0FnBolB,GAAuCA,CAACN,EAAuBC,EAA6B9L,EAAenlB,KAC7G,MAAM0S,EAAa1S,EAEhBiM,GAAUuE,SACTmC,cAAc1G,GAAUuE,SAG5BvE,GAAUuE,QAAUoC,YAAW,KAE3B,MAAM2e,EAAyB,IAAIrE,GACnCqE,EAAuBnB,iBAAiBY,GAAuB9M,iBAAiB+M,EAA8B,GAAG7M,yBAAyBe,GAAeY,oBAAsBrT,EAC/Kya,EAAyBoE,EAAuB,GACjD,EAAE,EAGHC,GAAgDA,CAACzM,EAAc0M,EAAiBC,EAAyBC,EAAe1M,EAAsB2M,KAEhJ,GAAGA,IAAgE,IAAlDF,EAAwB7L,uBAA0F,UAAxD6L,EAAwBpM,4BAC/FvB,EAA2BC,WAAW1F,SAAS2F,IACxCA,EAAec,eAAiBA,IACyD,IAArFd,EAAeC,iBAAiBuN,GAAiBrN,yBAAyBvb,OACzEob,EAAeC,iBAAiBuN,GAAiBrN,yBAAyB9F,SAAS4G,IAC5EA,EAAa2M,+BAAiCF,IAE7CzM,EAAaa,oBAAsBd,EACvC,IAIJhB,EAAeC,iBAAiBuN,GAAiBrN,yBAAyB/hB,KAAKqvB,GAEvF,SAIJ,IAAqD,IAAlDA,EAAwB7L,uBAA0F,UAAxD6L,EAAwBpM,4BAAwC,CACzH,MAAM8L,EAA8B,IAAIrN,GACxCqN,EAA4BpN,WAAW1F,SAAQ,CAAC2F,EAAgBa,KACzDb,EAAec,eAAiBA,GAC/Bd,EAAeC,iBAAiBuN,GAAiBrN,yBAAyB/hB,KAAKqvB,EACnF,IAEJlE,EAA8B4D,EAClC,MAGK,IAAqD,IAAlDM,EAAwB7L,uBAA2F,UAAxD6L,EAAwBpM,4BAAwC,CAC/H,MAAM8L,EAA8B,IAAIrN,GACxCqN,EAA4BpN,WAAW1F,SAAQ,CAAC2F,EAAgBa,KAC5D,GAAGb,EAAec,eAAiBA,EAAa,CAC5C,MAAM+M,EAAyB7N,EAAeC,iBAAiBuN,GAAiBrN,yBAAyBnV,QAAQiW,GAAiBA,EAAa2M,+BAAiCF,IAChL1N,EAAeC,iBAAiBuN,GAAiBrN,yBAA2B0N,CAChF,KAEJtE,EAA8B4D,EAClC,CAIJ,GAAmD,KAAhDM,EAAwB3L,qBAAsF,WAAxD2L,EAAwBpM,4BAAyC,CACtH,MAAM8L,EAA8B,IAAIrN,GAExCqN,EAA4BpN,WAAW1F,SAAQ2F,IACxCA,EAAec,eAAiBA,GAE/Bd,EAAeC,iBAAiB5F,SAAQ6F,IACpC,GAAGA,EAAqBc,uBAAyBA,EAE7C,GAAId,EAAqBC,yBAAyBvb,OAAS,EAAG,CAE1D,MAAMkpB,EAAmB5N,EAAqBC,yBAAyB9S,MAAK0gB,GACxEA,EAASpM,8BAAgC8L,EAAwB9L,8BAGjEmM,EAEAA,EAAiBhM,oBAAsB2L,EAAwB3L,oBAG/D5B,EAAqBC,yBAAyB/hB,KAAKqvB,EAG3D,MAEIvN,EAAqBC,yBAAyB/hB,KAAKqvB,EAE3D,GAER,IAGJlE,EAA8B4D,EAClC,CAEA,GAAmD,KAAhDM,EAAwB3L,qBAAsF,WAAxD2L,EAAwBpM,4BAAyC,CACtH,MAAM8L,EAA8B,IAAIrN,GACxCqN,EAA4BpN,WAAW1F,SAAQ2F,IACxCA,EAAec,eAAiBA,GAC/Bd,EAAeC,iBAAiB5F,SAAQ6F,IACjCA,EAAqBc,uBAAyBA,IAC7Cd,EAAqBC,yBAA2BD,EAAqBC,yBAAyBnV,QAAOgjB,GAAgCA,EAA6BrM,8BAAgC8L,EAAwB9L,8BAC9N,GAER,IAGJ4H,EAA8B4D,EAClC,GAcE9N,GAXYC,aAAW,CACzBC,KAAM,CACJ,iBAAkB,CAChBvqB,MAAO,WAET,6BAA8B,CAC5BA,MAAO,aAKCwqB,GAyEhB,OAnDA5jB,qBAAU,MACS,IAAZ1B,GAAqBH,KACiB,IAAlCA,EAAKY,yBACJ4Y,MAEsC,IAAlCxZ,EAAKY,0BACT4H,IAAMzK,MAAM,sHAAoE,CAACiM,QAAS,YAElG,GACD,CAAC7J,EAASH,IAEb6B,qBAAU,KACN,MAAM6O,EAAiB3N,IACE,MAAlBA,EAAMuX,SACLvX,EAAM6N,iBAGoC,KAA3Cud,EAA4BV,aACN,MAAlB1qB,EAAMuX,SAA0D,IAAvC6T,EAA4B1vB,QACpDsE,EAAM6N,iBA3jCQpT,WAC1ByyB,GAAkB,GAClBE,GAAsB,GACtBE,GAA4B,GAC5BE,IAA4B,GAC5B,MAAM1yB,QAAiBwB,GAAmB8uB,EAA4BnvB,GAAI,EAA+C,IAA9CmvB,EAA4BqC,cAAyB,GAAsD,IAA7CrC,EAA4B2C,aAAwB,EAAI,IAC1K,MAApBjzB,EAASY,QACR+J,IAAM8B,QAAQ,qDAADhN,OAA8B6wB,EAA4BT,cAAgB,CAAC1jB,QAAS,aACjGokB,EAA+Bb,GAC/Be,EAAqB,IACrBK,GAA6B,GAC7BE,EAAiC,IACjCE,EAA6B,CAAC,GAC9BE,EAAoC,IACpCE,EAAyB,IACzBE,IACAE,EAA2B,GAC3BC,EAA8B,CAAC,GAC/BG,IACAlB,IACAY,IACAI,IACAjW,MAEwB,MAApB3b,EAASY,QACb+J,IAAMzK,MAAM,sHAAoE,CAACiM,QAAS,WAE9FqmB,GAA4B,GAC5BE,IAA4B,EAAM,EAgiCtB2D,IAGsB,MAAlBnxB,EAAMuX,SAAmBoQ,EACa,IAAvCyD,EAA4B1vB,SAA8D,IAA9C0vB,EAA4BqC,cAj6BnDhzB,WACpCyyB,GAAkB,GAClB,MAAMpyB,QAAiBwB,GAAmB8uB,EAA4BnvB,GAAI,GAC1E,GAAuB,MAApBnB,EAASY,OAAe,CACvB,MAAMoyB,EAA+B,IAAI1C,GACzC0C,EAA6BpyB,OAAS,EACtC2vB,EAA+ByC,GAC5BnG,EAAkBhB,cAAcN,MAAKwB,GAAyD,OAApCA,EAAkB1rB,uBACrEsa,WACAuX,KACNvoB,IAAM8B,QAAQ,2CAADhN,OAA4B6wB,EAA4BT,cAAgB,CAAC1jB,QAAS,qBAGzF6nB,WACArY,KAEd,MAC4B,MAApB3b,EAASY,QACb+J,IAAMzK,MAAM,sHAAoE,CAACiM,QAAS,WAE9FimB,GAAkB,EAAM,EA84BRkE,GAE2C,IAAvChG,EAA4B1vB,OAChC21B,MAAM,0EAAD92B,OAAgD6wB,EAA4BT,aAAY,gJAElD,IAAvCS,EAA4B1vB,SAA+D,IAA9C0vB,EAA4BqC,eApyBrDhzB,WAGxC,GAFAyyB,GAAkB,GAEK,aADA5wB,GAAmB8uB,EAA4BnvB,GAAI,IAC9DP,OAAe,CACvB,MAAMoyB,EAA+B,IAAI1C,GACzC0C,EAA6BpyB,OAAS,EACtC2vB,EAA+ByC,SACzBgB,WACArY,KACNrB,GAAc,CAACC,UAAW,EAAGC,UAAW,uBAC5C,GA2xBgBgc,GAIkB,MAAlBtxB,EAAMuX,SACgC,IAAvC6T,EAA4B1vB,QAC3BknB,GAA8B,GAG1C,EAKJ,OAFApL,SAASC,iBAAiB,UAAW9J,GAE9B,KACH6J,SAASE,oBAAoB,UAAW/J,EAAc,CACzD,GAEF,CAACyd,EAA6BvH,IAG7BzsB,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACiO,KAAS,CAACtO,SAAS,KAAKO,GAAI,CAACgC,GAAI,MAAMnC,SACpCC,cAACqB,IAAG,CAACnB,GAAI,CAAEmV,QAAS,OAAQvL,OAAQ,QAAQ/J,SACxCP,eAAC+jB,KAAI,CAACC,WAAS,EAACrW,QAAS,EAAGjN,GAAI,CAACe,GAAI,GAAKC,GAAI,IAAKnB,SAAA,CAE/CP,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAE3jB,SAAA,CAEbC,cAACkgB,KAAc,CAAC3U,UAAW4U,KAAOjgB,GAAI,CAAE4J,OAAQ,QAASsW,UAAW,EAAGlS,aAAc,QAASnO,SACzFs1B,EACGr1B,cAAAmH,WAAA,CAAApH,SACIP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQyI,eAAgB,SAAUvI,WAAY,SAAUD,cAAe,SAAUJ,gBAAiB,UAAWmI,OAAQ,QAAQ/J,SAAA,CAC5IC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,mFAIrDP,eAAA2H,WAAA,CAAApH,SAAA,CACIP,eAAC6B,IAAG,CAAAtB,SAAA,CACAC,cAACkN,KAAK,CAACE,UAAU,MAAMD,QAAS,EAAGjN,GAAI,CAACqK,eAAgB,SAAUrI,GAAI,KAAKnC,SACtE4d,GAAsBlT,KAAI,CAAC6V,EAAuBC,IAC/CvgB,cAACwgB,KAAK,CAACC,aAAcH,EAAsBzC,YAAavd,MAAM,QAAOP,SACjEC,cAAC0gB,KAAI,CAACjY,MAAO6X,EAAsB5C,UAAWpd,MAAOigB,IAA2BhD,GAAWE,UAAY,UAAY,UACnHhd,QAASA,IAtqClCkgB,EAACC,EAAWlD,KAEnC,GADAF,GAAc,CAACC,UAAWmD,EAAWlD,UAAWA,IAC/B,IAAdkD,EAAgB,CACjB,MAAMtB,EAA8BxB,GAAyBxH,QAAOiJ,GAAuD,IAA/BA,EAAqB5a,OAA8C,IAA/B4a,EAAqB5a,OAA8C,IAA/B4a,EAAqB5a,QACzL4Z,GAAgCe,GAChCjB,GAAiCiB,EACnC,MACK,GAAiB,IAAdsB,EAAgB,CACpB,MAAMnB,EAA2B3B,GAAyBxH,QAAOiJ,GAAuD,IAA/BA,EAAqB5a,QAC9G4Z,GAAgCkB,GAChCpB,GAAiCoB,EACrC,GA2pC+DkB,CAAmBJ,EAAwBD,EAAsB5C,cAAc,qBAAA/a,OAFF4d,QAMxG/gB,eAAC2B,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACgC,GAAI,GAAK7B,UAAW,SAAUD,SAAU,WAAWL,SAAA,CAAC,gBAAWwd,GAAWG,UAAU,YAAO1C,OAASD,OAAO,iBACzI/a,cAACqB,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQyI,eAAgB,SAAU5J,SAAU,YAAYZ,SACvEC,cAACoM,KAAS,CAAClM,GAAI,CAACiK,GAAI,GAAKR,MAAO,IAAK,iCAAkC,CAACtJ,UAAW,WAAY8b,KAAK,QAChG/a,QAAQ,WAAWyf,YAAY,+CAA4BxZ,MAAO6W,GAAqB7P,SAAW1H,GA/pCpHU,KAC1B,MAAM0S,EAAa1S,EACnB8W,GAAuBpE,GAGrBwE,GADW,KAAVlX,EAC+B+W,GAEAI,GAAeJ,GAA+BrE,GAChF,EAupCoJ+G,CAAqBna,EAAE4H,OAAOlH,OACtIiF,WAAY,CACRyU,eACI/gB,cAACwM,KAAc,CAAC7L,SAAS,QAAOZ,SAACC,cAACghB,KAAU,MAEhDzU,aACIvM,cAACwM,KAAc,CAAC7L,SAAS,MAAKZ,SACD,KAAxBme,GACGle,cAACc,IAAS,CAACZ,GAAI,CAACgL,OAAQ,WAAYD,YAAY,SAC5CxK,QAASA,IAAM,CAAC0d,GAAuB,IAAKI,GAAgCH,OAGhF,eAS5B5e,eAACyhB,KAAK,CAACC,cAAY,EAAAnhB,SAAA,CACfC,cAACohB,KAAS,CAAArhB,SACNP,eAAC6hB,KAAQ,CAACnhB,GAAI,CAAC,OAAQ,CAACI,MAAO,mBAAoBqB,gBAAiB,SAAS5B,SAAA,CACzEC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,WAAWL,SAAC,QACnDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,WAAWL,SAAC,4BACnDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,WAAWL,SAAC,wBAG3DC,cAACwhB,KAAS,CAAAzhB,SACLue,GAA6B7T,KAAI,CAACwrB,EAAkB0D,IACjDn6B,eAAC6hB,KAAQ,CAACM,OAAK,EAACC,KAAK,WACjB1hB,GAAI,CAAEgL,OAAQ,UAAWvJ,gBAA4C,IAA3Bs0B,EAAiBtxB,MAAc,UAAY,OACrF,SAAU,CAAChD,gBAA4C,IAA3Bs0B,EAAiBtxB,MAAc,qBAAuB,kCAClFlE,QAASA,IAlhCvBoC,WAEJ,IAA3BozB,EAAiBtxB,OAA0C,IAA3BsxB,EAAiBtxB,OAAe6uB,EAA4BT,eAAiBkD,EAAiBnkB,QAAQG,SACvF,KAA3CuhB,EAA4BV,YAAgE,KAA3CU,EAA4BV,YAA4D,IAAvCU,EAA4B1vB,aACvHiyB,GAAuBE,GAG7BwD,MAAM,0EAAD92B,OAAgD6wB,EAA4BT,aAAY,6HAIlE,IAA3BkD,EAAiBtxB,OAAe6uB,EAA4BT,eAAiBkD,EAAiBnkB,QAAQG,WAC5D,KAA3CuhB,EAA4BV,YAA4D,IAAvCU,EAA4B1vB,OAC5E21B,MAAM,0EAAD92B,OAAgD6wB,EAA4BT,aAAY,mIAGvFgD,GAAuBE,GAErC,EAggC+D2D,CAA8B3D,GAAkBl2B,SAAA,CAE/DC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,QAAQ5J,SAAEk2B,EAAiB5T,QAC/DriB,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,SAAS5J,SAAEk2B,EAAiBnkB,QAAQ5N,YACxElE,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,SAAS5J,SAAEk2B,EAAiBnkB,QAAQG,aAPvCgkB,EAAiB5T,mBAiB9EriB,cAACqB,IAAG,CAACgM,MAAO,CAAC1D,MAAO,OAAQ8P,UAAW,MAAOvL,aAAc,OAAQyV,OAAQ,gBAAiB7Z,OAAQ,SAAS/J,SAEzE,IAA7B2zB,EAAkBxjB,SAA6C,IAA7BulB,IAA4D,IAAtB1F,EACpE,KAEJ/vB,cAAAmH,WAAA,CAAApH,SACK01B,EACGj2B,eAAC6B,IAAG,CAACnB,GAAI,CAACyB,gBAAiB,UAAWuM,aAAc,OAAQpE,OAAQ,OAAQhI,QAAS,OAAQyI,eAAgB,SAAUvI,WAAY,SAAUD,cAAe,UAAUhC,SAAA,CAClKC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,kHAGjDC,cAAAmH,WAAA,CAAApH,SACIC,cAAA,OAAK0L,UAAU,qBAAoB3L,SAC/BP,eAAC0sB,KAAI,CAAChsB,GAAI,CAACiM,EAAG,EAAGrK,QAAS,eAAe/B,SAAA,CACpC2zB,EAAkBtF,aAAa3jB,KAAI,CAACwmB,EAAiBC,IAClD1xB,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC9BC,cAACmxB,KAAc,CACXjxB,GAAI,CACJyJ,MAAO,aAAcyP,GAAI,MAAOC,GAAI,MAAOnL,aAAc,MAAO,SAAU,CAACvM,gBAAiBwyB,EAA0B/H,eAAiB6E,EAAgB7E,aAAe,UAAY,sBAClLzqB,gBAAiBwyB,EAA0B/H,eAAiB6E,EAAgB7E,aAAe,UAAY,IACvG3rB,QAASA,IAAMm3B,GAA0B3G,GAAiBlxB,SAE1DP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQE,WAAY,UAAUjC,SAAA,CAC7CC,cAACuxB,KAAY,CAACrxB,GAAI,CAACihB,SAAU,OAAQ,+BAAgC,CAAC/gB,SAAU,SAAUE,MAAO,YAAYP,SAACC,cAACwxB,KAAQ,MACvHxxB,cAACyxB,KAAY,CAACC,QAAST,EAAgB7E,aAAclsB,GAAI,CAAC,6BAA8B,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,qBAI/G,IAAnC2wB,EAAgB+G,iBAA8D,IAAnC/G,EAAgBf,eACxD,KAEA1wB,eAAA2H,WAAA,CAAApH,SAAA,EACwC,IAAnCkxB,EAAgB+G,eACbh4B,cAAAmH,WAAA,CAAApH,SACIC,cAAC65B,KAAe,CAAC35B,GAAI,CAACI,MAAO,QAASF,SAAU,SAAUkN,OAAQ,QAASrC,YAAY,6BAG3F,KAGHyoB,EAAkBxD,eACf,MAE2B,IAA3Be,EAAgB4F,OACZ72B,cAAAmH,WAAA,CAAApH,SACIC,cAACQ,IAAU,CAACs5B,KAAK,MAAM55B,GAAI,CAACiO,GAAI,GAAK3M,OAAQ,KAAMf,QAASA,IA5xB1GoC,WAC9B6C,IAA+B,GAC/BuU,YAAW,KACP,MAAM8f,EAAsBhF,EAAoBze,QAAO2a,GAAmBA,EAAgB7E,eAAiBA,IACvG2N,EAAoBpU,SAAQqU,IAAmB,IACxCA,KACAA,EAAoBnD,QAAS,MAGxC,MAAMoD,EAA2ClF,EAAoBze,QAAOkgB,GAAYA,EAASpK,eAAiBA,IAAc3hB,KAAI+rB,IAAQ,CACxIpK,aAAcoK,EAASpK,aACvBuB,eAAe,EACfmD,cAAe0F,EAAS1F,cACxBvF,iBAAkBiL,EAASjL,iBAAiB9gB,KAAIgsB,IAAO,IAChDA,EACHhL,yBAA0B,WAIlCL,EAA2BC,WAAW6O,QAAQD,EAAyC,IAEvFvG,EAAkBtF,aAAazI,SAAS4K,IACjCA,EAAiBnE,eAAiB2N,EAAoB,GAAG3N,eACxDmE,EAAiBsG,QAAS,GAE9BtG,EAAiBhF,iBAAiB5F,SAAS6F,IACpC+E,EAAiBnE,eAAiB2N,EAAoB,GAAG3N,eACxDZ,EAAqBqL,QAAS,EAClC,GACF,IAGNe,GAA0BmC,EAAoB,GAAG,GAClD,KACHr0B,IAA+B,EAAM,EA0vByGy0B,CAA0BlJ,EAAgB7E,cAAcrsB,SACtHC,cAACigB,KAAQ,CAAC/f,GAAI,CAACI,MAAO,OAAQF,SAAU,UAAW6K,YAAY,iBAKvEjL,cAAAmH,WAAA,CAAApH,SACIC,cAACQ,IAAU,CAACs5B,KAAK,MAAM55B,GAAI,CAACiO,GAAI,GAAK3M,OAAQ,KAAMf,QAAUkG,IAAMyzB,OA7vBvGhO,EA6vB0I6E,EAAgB7E,aA5vBlM1mB,IAA+B,QAE/BuU,YAAW,KACP,MAAMogB,EAAgCxG,EAAuCzF,aAAazV,MAAK4X,GAAoBA,EAAiBnE,eAAiBA,IAErJsH,EAAkBtF,aAAazI,SAAS4K,IACjCA,EAAiBnE,eAAiBiO,EAA8BjO,eAC/DmE,EAAiBhF,iBAAmB8O,EAA8B9O,iBAClEgF,EAAiBsG,QAAS,GAE9BtG,EAAiBhF,iBAAiB5F,SAAS6F,IACpC+E,EAAiBnE,eAAiBA,IACjCZ,EAAqBqL,QAAS,EAClC,GACF,IAGNzL,EAA2BC,WAAaD,EAA2BC,WAAW/U,QAAOgV,GAAkBA,EAAec,eAAiBA,IAEvIwL,GAA0ByC,GAE1B30B,IAA+B,EAAM,GACtC,KAvBiC00B,IAAIhO,CA6vBwK,EAAArsB,SAChIC,cAACs6B,KAAU,CAACp6B,GAAI,CAACI,MAAO,MAAOF,SAAU,UAAW6K,YAAY,sBAIjF,YAAAtI,OA1CyCuuB,MA+CxD1xB,eAAC2xB,KAAc,CACXjxB,GAAI,CAACkZ,GAAI,MAAOC,GAAI,MAAOnL,aAAc,MAAOvM,gBAA4D,+BAA3CwyB,EAA0B/H,aAAiC,UAAY,GACpI,SAAU,CAACzqB,gBAA4D,+BAA3CwyB,EAA0B/H,aAAiC,UAAY,uBACvG3rB,QAASA,KAAM85B,OAtsBpCxL,EAssB8D2E,EAAkB3E,eArsB9E,IAA9BgF,GACCC,GAA8BD,GAGE,IAAjCQ,EAAsBrkB,QACrBskB,EAAyB,IAG7BJ,EACI,CACIhI,aAAc,6BACdb,iBAAkBwD,SAI1BuF,EACI,CACIkG,0BAA2B,OAC3BjP,iBAAkBwD,IAnBKA,KAssB+F,EAAAhvB,SAAA,CAE1EC,cAACuxB,KAAY,CAACrxB,GAAI,CAACihB,SAAU,OAAQ,+BAAgC,CAAC/gB,SAAU,SAAUE,MAAO,YAAYP,SACzGC,cAACwxB,KAAQ,CAACtxB,GAAI,CAACu6B,UAAsD,+BAA3CtG,EAA0B/H,aAAiC,gBAAkB,oBAG3GpsB,cAACyxB,KAAY,CAACC,QAAS,6BAAexxB,GAAI,CAAC,6BAA8B,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,kBAGhIN,cAAC2xB,KAAQ,CAACC,GAAImC,EAA2BlC,QAAQ,OAAOC,eAAa,EAAA/xB,SACjEC,cAAA,OAAKqN,MAAO,CAAEoc,YAAa,QAAS1pB,SAC/B2zB,EAAkB3E,cAActkB,KAAI,CAACwlB,EAAmByK,IACrDl7B,eAAC2xB,KAAc,CAA6CjxB,GAAI,CAACkZ,GAAI,MAAOC,GAAI,MAAO1P,MAAO,OAAQuE,aAAc,MAAO,SAAU,CAACvM,gBAAiB,uBACnJlB,QAASA,IA1rBvCoC,OAAO0B,EAAeyqB,EAAiBkJ,KAEzE,GADAtC,IAA4B,GACzBnB,EACC,GAA0B,IAAvByD,QACOD,GAAiB1zB,EAAeyqB,EAAiBkJ,OAEvD,CACA1D,EAAyB,CACrBgD,kBAAmBxI,EACnByB,eAAgBgE,EAA6BhE,eAC7CgH,iBAAkBhD,EAA6BgD,mBAGnD,MAAMU,EAA2B1D,EAA6BgD,iBAAiBhtB,KAAI,CAAC2tB,EAAsBC,KAIhG,CACFjM,aAJiBgM,EAAqBhM,aAKtCb,iBAJiB6M,EAAqB7M,iBAAiB,GAKvD+M,4BAA6B,EAC7BR,gBAAiBM,EAAqB7M,iBAAiBrb,WAIzDqoB,EAA6B,CAC/Bf,kBAAmBxI,EACnByB,eAAgBgE,EAA6BhE,eAC7C1E,WAAYX,EAA2BW,WACvC0L,iBAAkBU,GAEtB7D,EAAoCiE,EACxC,YAIMN,GAAiB1zB,EAAeyqB,EAAiBkJ,GAE3DtC,IAA4B,EAAM,EAopB6C+E,CAA8B1K,EAAkB1rB,cAAe0rB,EAAkBjB,gBAAiBiB,EAAkBtrB,OAAO5E,SAAA,CAC1IC,cAACuxB,KAAY,CAACrxB,GAAI,CAACihB,SAAU,OAAQ,+BAAgC,CAAC/gB,SAAU,SAAUE,MAAmC,IAA5B2vB,EAAkBtrB,MAAc,MAAQ,YAAY5E,SACjJC,cAAC46B,KAAqB,CAAC16B,GAAI,CAACu6B,UAAsD,+BAA3CtG,EAA0B/H,aAAiC,gBAAkB,oBAExHpsB,cAACyxB,KAAY,CAACC,QAASzB,EAAkBjB,gBAAiB9uB,GAAI,CAAC,6BAA8B,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,iBAAe,iBAAAqC,OAL7H+3B,qBAiB9El7B,eAAA,OAAKkM,UAAU,cAAc2B,MAAO,CAACvL,QAAS,OAAQyI,eAAgB,iBAAiBxK,SAAA,CACnFP,eAAC2B,IAAU,CAACC,QAAQ,KAAIrB,SAAA,CAACC,cAAA,QAAMqN,MAAO,CAAClN,WAAY,SAAUG,MAAO,OAAOP,SAAC,OAAS,uBACrFP,eAAC2B,IAAU,CAACC,QAAQ,KAAIrB,SAAA,CAACC,cAAA,QAAMqN,MAAO,CAAClN,WAAY,SAAUG,MAAO,YAAYP,SAAC,OAAS,qCAC1FP,eAAC2B,IAAU,CAACC,QAAQ,KAAIrB,SAAA,CAACC,cAAA,QAAMqN,MAAO,CAAClN,WAAY,SAAUG,MAAO,QAAQP,SAAC,OAAS,qCAI9FP,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAE3jB,SAAA,CAEbP,eAAC6B,IAAG,CAACnB,GAAI,CAACkgB,UAAW,EAAGlS,aAAc,OAAQyV,OAAQ,iBAAkB7Z,OAAQ,QAASK,GAAI,MAAOoY,SAAU,QAAQxiB,SAAA,CAClHC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,OAAQ4B,GAAI,GAAKiI,GAAI,GAAKhK,WAAY,SAAUC,SAAU,SAAUC,UAAW,UAAUN,SAAC,mCAC/HC,cAACqB,IAAG,CAACnB,GAAI,CAACe,GAAI,EAAGC,GAAI,EAAGgB,GAAI,GAAGnC,SAC1Bw1B,EACG/1B,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQyI,eAAgB,SAAUvI,WAAY,SAAUD,cAAe,SAAUG,GAAI,GAAGnC,SAAA,CACvGC,cAACiC,IAAgB,CAAC3B,MAAM,YACxBN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,8FAGjDC,cAAAmH,WAAA,CAAApH,SACIP,eAAC+jB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAGoX,cAAe,CAAEnX,GAAI,EAAGoX,GAAI,EAAGC,GAAI,GAAGh7B,SAAA,CAEjEP,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACg7B,KAAO,CAAC96B,GAAI,CAACI,MAAO,YAAYN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACiO,GAAI,GAAGpO,SAAA,aAAA4C,OAAY6wB,EAA4BV,YAAc,SAEvItzB,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACi7B,KAAU,CAAC/6B,GAAI,CAACI,MAAO,YAAYN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACiO,GAAI,GAAGpO,SAAA,mBAAA4C,OAAa6wB,EAA4BT,cAAgB,SAE7IvzB,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,EACK,IAA/CyzB,EAA4BN,eAA0BlzB,cAACk7B,KAAQ,CAACh7B,GAAI,CAACI,MAAO,QAASF,SAAU,UAAaJ,cAACm7B,KAAU,CAACj7B,GAAI,CAACI,MAAO,QAASF,SAAU,UACxJJ,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACiO,GAAI,GAAGpO,SAAA,sBAAA4C,OACsB,KAA/C6wB,EAA4BN,gBAAuE,IAA/CM,EAA4BN,eAA0B,MAAQ,UAAO,SAIhJ1zB,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACo7B,KAAiB,CAACl7B,GAAI,CAACI,MAAO,YAAYd,eAAC2B,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACiO,GAAI,GAAGpO,SAAA,CAAC,iBAAYyzB,EAA4BR,YAAchY,KAAOwY,EAA4BR,aAAajY,OAAO,cAAgB,SAEzNvb,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACq7B,KAAQ,CAACn7B,GAAI,CAACI,MAAO,YAAYN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACiO,GAAI,GAAGpO,SAAA,uBAAA4C,OAAiB6wB,EAA4BP,mBAAqB,SAEpJzzB,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACs7B,KAAS,CAACp7B,GAAI,CAACI,MAAO,YAAYN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACiO,GAAI,GAAGpO,SAAA,QAAA4C,OAAU6wB,EAA4BF,eAAiB,SAI1I9zB,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACu7B,KAAY,CAACluB,MAAO,CAAC/M,MAAO,SAAUF,SAAU,UAAWkqB,WAAY,SACxEtqB,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACiO,GAAI,IAAKpO,SAAA,mBAAA4C,OAC3B6wB,EAA4BL,eAAiBK,EAA4BL,eAAiB,MAAQ,SAGzH3zB,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACw7B,KAAa,CAACnuB,MAAO,CAAC/M,MAAO,SAAUF,SAAU,aAClDJ,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACiO,GAAI,GAAGpO,SAAA,qBAAA4C,OAC1B6wB,EAA4BJ,eAAiBI,EAA4BJ,eAAiB,MAAQ,SAGxHpzB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,IACflkB,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC3CC,cAACy7B,KAAc,CAACpuB,MAAO,CAAC/M,MAAO,SAAUF,SAAU,aACnDJ,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACiO,GAAI,GAAGpO,SAAA,0BAAA4C,OAC1B6wB,EAA4BH,0BAA4BG,EAA4BH,0BAA4B,MAAQ,SAI9I7zB,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,GAAIxjB,GAAI,CAAC4B,QAAS,eAAe/B,SAAA,CAC5CC,cAAC07B,KAAI,CAACx7B,GAAI,CAACI,MAAO,YAAYN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACiO,GAAI,GAAGpO,SAAA,2BAAA4C,OAAc6wB,EAA4BD,iBAAmB,mBAU/J/zB,eAAA,OAAKkM,UAAU,8BAA6B3L,SAAA,CAEpCo1B,EACIn1B,cAAAmH,WAAA,CAAApH,SACIP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4J,OAAQ,OAAQhI,QAAS,OAAQyI,eAAgB,SAAUvI,WAAY,SAAUD,cAAe,UAAUhC,SAAA,CAChHC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,sHAIzDgwB,EAC+C,IAA3CA,EAAkBhB,cAAc7e,QAAqE,OAArD6f,EAAkBhB,cAAc,GAAGxqB,cAC/EvE,cAACqB,IAAG,CAACnB,GAAI,CAAC4J,OAAQ,OAAQhI,QAAS,OAAQyI,eAAgB,SAAUvI,WAAY,SAAUD,cAAe,UAAUhC,SAChHC,cAACmB,IAAU,CAACC,QAAQ,KAAIrB,SAAC,uEAG7BC,cAAA,OAAK0L,UAAU,oBAAmB3L,SAACC,cAAC4uB,GAAoB,CAACmB,kBAAmBA,MAEhF,KAGqC,IAA5CsE,EAAiCnkB,OAC9B1Q,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAAA,OAAK0L,UAAU,oBAAoB2B,MAAO,CAACvD,OAAyC,IAAjCyqB,EAAsBrkB,OAAe,SAAW,QAAQnQ,SACtG41B,EACG31B,cAAAmH,WAAA,CAAApH,SACIP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4J,OAAQ,OAAQhI,QAAS,OAAQyI,eAAgB,SAAUvI,WAAY,SAAUD,cAAe,UAAUhC,SAAA,CAChHC,cAACiC,IAAgB,IACjBjC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACgC,GAAI,GAAGnC,SAAC,6GAIrDC,cAAAmH,WAAA,CAAApH,SACIP,eAAC6B,IAAG,CAACnB,GAA8D,OAA1Dm0B,EAAiC/H,qBAAgC,CAAC7S,UAAW,QAAU,CAAC,EAAE1Z,SAAA,CAC/FC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACC,WAAY,SAAUE,UAAW,SAAUD,SAAU,SAAU+J,GAAI,IAAKpK,SAAEs0B,EAAiC/H,sBAAwB,KAChK+H,EAAiC5I,yBAC9B4I,EAAiC5I,yBAAyBhhB,KAAI,CAAC8hB,EAAcC,IACzExsB,cAACqB,IAAG,CAAAtB,SACAP,eAAC+jB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAE1jB,SAAA,CAEP,IAAlBysB,EACGhtB,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8B8I,YAAa,MAAOtgB,EAAG,IAAKpM,SACrFC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEs0B,EAAiC3H,wBAGnE,UAA7CH,EAAaI,4BACVntB,eAAA2H,WAAA,CAAApH,SAAA,CACIP,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8B8I,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQyI,eAAgB,SAAUvI,WAAY,UAAUjC,SAAA,CACtJC,cAAC4sB,KAAY,CAAC1sB,GAAI,CAACE,SAAU,UAAWE,MAAO,UAAUN,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAUmN,OAAQ,OAAQuf,WAAY,OAAO9sB,SAAEs0B,EAAiCvH,0BAG7M9sB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8BxX,EAAG,IAAKpM,SACjEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAUgO,GAAI,IAAKpO,SAAEs0B,EAAiCtH,2BAI1H/sB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8BxX,EAAG,IAAKpM,SACjEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEs0B,EAAiCtH,2BAK7H,KAGJ/sB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8BqJ,UAAW,MAAOP,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQE,WAAY,UAAUjC,SAC9IC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACE,SAAU,QAAQL,SAAEwsB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVntB,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8BqJ,UAAW,MAAOP,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQyI,eAAgB,UAAUxK,SAClJC,cAACid,KAAQ,CAACkH,UAAsD,IAA5CkQ,EAAiCwC,OAAgC3Z,SAAgD,IAAvCqP,EAAaW,sBAAgDvC,QAAS,CAAEE,KAAMF,GAAQE,MAAQvqB,MAAM,QAAQJ,GAAI,CAAC,+BAAgC,CAACE,SAAU,WAAYK,QAAUkG,GAroB9Tg1B,EAACnP,EAAeoP,KAE9C,GAAc,OAAXA,EAAgB,CACf,MAAMC,EAA6B,IAAI1H,GACvC0H,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAAeU,uBAAwB,EACzIkH,EAA6ByH,GAE7BhD,GACIgD,EAA2BzP,aAC3BuI,EAA0B,EAC1BkH,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAClGqP,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAAe0M,6BAEzH,MACK,IAAc,IAAX0C,EAAgB,CACpB,MAAMC,EAA6B,IAAI1H,GACvC0H,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAAeU,uBAAwB,EACzIkH,EAA6ByH,GAE7BhD,GACIgD,EAA2BzP,aAC3BuI,EAA0B,EAC1BkH,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAClGqP,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAAe0M,6BAEzH,KACI,CACA,MAAM2C,EAA6B,IAAI1H,GACvC0H,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAAeU,uBAAwB,EACzIkH,EAA6ByH,GAE7BhD,GAA8CgD,EAA2BzP,aACrEuI,EAA0B,EAC1BkH,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAClGqP,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAAe0M,6BAEzH,GAimBkWyC,CAA0BnP,EAAeD,EAAaW,2BAGhVltB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAE3jB,SACbC,cAAA,OAAK0L,UAAU,uBAAsB3L,SACjCC,cAAA,OAAK0L,UAAU,eAAc3L,SACzBC,cAACmtB,KAAgB,CAACzhB,UAAU,oBAAoBke,KAAM,EAAGzF,UAAsD,IAA5CkQ,EAAiCwC,OAChGxoB,SAAW1H,GAnmBvEm1B,EAACtP,EAAenlB,KAC5C,MAAM0S,EAAa1S,EAEhBiM,GAAUuE,SACTmC,cAAc1G,GAAUuE,SAG5BvE,GAAUuE,QAAUoC,YAAW,KAC3B,MAAM4hB,EAA6B,IAAI1H,GACvC0H,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAAeY,oBAAsBrT,EACvIqa,EAA6ByH,GAE7BhD,GACIgD,EAA2BzP,aAC3BuI,EAA0B,EAC1BkH,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAClGqP,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAAe0M,6BACjHnf,GANe,EAQlB,GACF,IAAI,EA+kBkG+hB,CAAwBtP,EAAe7lB,EAAE4H,OAAOlH,OACjEyS,aAAcyS,EAAaa,uBAC7B,WAAAzqB,OAJwCgyB,EAAuB,gBAAAhyB,OAAe6pB,EAAa,gBAAA7pB,OAAe0xB,EAAiC0H,qBAAoB,yBAAAp5B,OAAwB0xB,EAAiCuC,kBAAiB,cAAAj0B,OAAa0xB,EAAiCwC,gBAUzS72B,cAAAmH,WAAA,CAAApH,SACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAE3jB,SACbC,cAAA,OAAK0L,UAAU,uBAAsB3L,SACjCC,cAAA,SAAOqM,KAAK,OAAO8X,UAAsD,IAA5CkQ,EAAiCwC,OAC1DnrB,UAAU,mBAAmB2C,SAAW1H,GAxlB9Fq1B,EAACxP,EAAenlB,KAC9C,MAAM0S,EAAa1S,EAEhBiM,GAAUuE,SACTmC,cAAc1G,GAAUuE,SAG5BvE,GAAUuE,QAAUoC,YAAW,KAE3B,MAAM4hB,EAA6B,IAAI1H,GACvC0H,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAAeY,oBAAsBrT,EACvIqa,EAA6ByH,GAE7BhD,GACIgD,EAA2BzP,aAC3BuI,EAA0B,EAC1BkH,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAClGqP,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGlJ,yBAAyBe,GAAe0M,6BACjH2C,EAA2BtQ,iBAAiBoJ,EAA0B,GAAGrI,qBAC5E,GACF,EAAE,EAokB6H0P,CAA0BxP,EAAe7lB,EAAE4H,OAAOlH,OAChGyS,aAAcyS,EAAaa,uBAC7B,WAAAzqB,OAJgDgyB,EAAuB,gBAAAhyB,OAAe6pB,EAAa,gBAAA7pB,OAAe0xB,EAAiC0H,qBAAoB,yBAAAp5B,OAAwB0xB,EAAiCuC,kBAAiB,cAAAj0B,OAAa0xB,EAAiCwC,iBAS9S,+BAAAl0B,OA9D8B6pB,MAkEkB,SAA/D6H,EAAiCmG,2BAAyE,IAAjCjG,EAAsBrkB,OAC3F1Q,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACC,WAAY,SAAUE,UAAW,SAAUD,SAAU,SAAU+J,GAAI,IAAKpK,SAAC,wEACvGC,cAACkgB,KAAc,CAAC3U,UAAW4U,KAAMpgB,SAC7BP,eAACyhB,KAAK,CAACC,cAAY,EAAAnhB,SAAA,CACfC,cAACohB,KAAS,CAAArhB,SACNP,eAAC6hB,KAAQ,CAACnhB,GAAI,CAAC,OAAQ,CAACI,MAAO,mBAAoBqB,gBAAiB,SAAS5B,SAAA,CACzEC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,SAAUE,MAAO,SAASP,SAAC,oBAClEC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,UAAUL,SAAC,uBAClDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,UAAUL,SAAC,oBAClDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,UAAUL,SAAC,2BAClDC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACE,SAAU,UAAUL,SAAC,4BAG1DC,cAACwhB,KAAS,CAACthB,GAAI,CAACgO,aAAc,OAAOnO,SAChCs0B,EAAiC9I,iBAAiB9gB,KAAI,CAACwlB,EAAmByK,KACvEl7B,sBAAC6hB,KAAQ,CAACM,OAAK,EAACC,KAAK,WAAU7hB,SAAA,CAC3BP,eAAC8hB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,SAAS5J,SAAA,CAACC,cAACi8B,KAAe,CAAC/7B,GAAI,CAACkK,GAAI,GAAKD,GAAI,GAAK7J,MAAO,gBAAiB2vB,EAAkBjB,mBAChIhvB,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,SAAS5J,UA1tBhG+D,EA0tB0HmsB,EAAkBtrB,MAztB7J,IAAXb,EAEC9D,cAAA,OAAK0L,UAAU,mBAAkB3L,SAACC,cAAA,KAAG0L,UAAU,YAAW3L,SAAC,oCAG5C,IAAX+D,EAEJ9D,cAAA,OAAK0L,UAAU,kBAAiB3L,SAACC,cAAA,KAAG0L,UAAU,YAAW3L,SAAC,oCAK1DC,cAAA,OAAK0L,UAAU,iBAAgB3L,SAACC,cAAA,KAAG0L,UAAU,YAAW3L,SAAC,wCA8sBqBC,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,SAAS5J,SAAEib,KAAOiV,EAAkBiM,cAAcnhB,OAAO,gBAC7F/a,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,SAAS5J,SAAEkwB,EAAkByC,iBACjE1yB,cAACshB,KAAS,CAACC,MAAM,OAAOrhB,GAAI,CAACyJ,MAAO,QAAQ5J,SAAEkwB,EAAkBlE,eAL/B2O,GAxtBpF52B,KA+tB4C,cAMrBtE,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACC,WAAY,SAAUE,UAAW,SAAUD,SAAU,SAAUysB,WAAY,EAAG3qB,GAAI,GAAGnC,SAAEs0B,EAAiCmD,oBACtJx3B,cAAA,OAAK0L,UAAU,wBAAuB3L,SAClCP,eAAC0sB,KAAI,CAAChsB,GAAI,CAACiM,EAAG,GAAGpM,SAAA,CACZs0B,EAAiCoD,iBAAiBhtB,KAAI,CAAC2tB,EAAsBC,IAC1E74B,eAAA,OAAAO,SAAA,CACIC,cAACmxB,KAAc,CACXjxB,GAAI,CAACkZ,GAAI,MAAOC,GAAI,MAAOnL,aAAc,MAAO,SAAU,CAACvM,gBAAiB,uBAC5ElB,QAASA,IArvBpD43B,KACjCnE,GAAkC9C,IAC9B,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQgH,IAA0BhH,EAAQgH,GACnChH,CAAO,GAChB,EAgvByF8K,CAA4B9D,GAAuBt4B,SAElEP,eAAC6B,IAAG,CAACnB,GAAI,CAAC4B,QAAS,OAAQE,WAAY,UAAUjC,SAAA,CAC7CC,cAACuxB,KAAY,CAACrxB,GAAI,CAACihB,SAAU,OAAQ,+BAAgC,CAAC/gB,SAAU,OAAQE,MAAO,YAAYP,SAACC,cAACwxB,KAAQ,MACrHxxB,cAACyxB,KAAY,CAACC,QAAS0G,EAAqBhM,aAAclsB,GAAI,CAAC,6BAA8B,CAACE,SAAU,UAAWD,WAAY,SAAUG,MAAO,oBAIxJN,cAAC2xB,KAAQ,CAACC,GAAIqC,EAA8BoE,GAAwBxG,QAAQ,OAAOC,eAAa,EAAA/xB,SAC5FP,eAAA,OAAKkM,UAAU,uBAAuB2B,MAAO,CAACoM,UAAW,OAAQrJ,aAAc,QAASuT,OAAQ,oBAAqBzV,aAAc,QAAQnO,SAAA,CACvIC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACC,WAAY,SAAUE,UAAW,UAAUN,SAAEq4B,EAAqB7M,iBAAiBe,uBAExHtsB,cAAA,OAAK0L,UAAU,wBAAwB2B,MAAO,CAACX,QAAS,QAAQ3M,SAC5DP,eAAC+jB,KAAI,CAACC,WAAS,EAACC,WAAY,EAAE1jB,SAAA,CAC1BC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8B8I,YAAa,MAAOtgB,EAAG,IAAKpM,SACrFC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,UAAUJ,SAAEq4B,EAAqB7M,iBAAiBmB,wBAGtHltB,eAAC+jB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8B8I,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQyI,eAAgB,SAAUvI,WAAY,UAAUjC,SAAA,CACtJC,cAAC4sB,KAAY,CAAC1sB,GAAI,CAACE,SAAU,SAAUE,MAAO,OAAQ8J,GAAI,MAC1DpK,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAU0sB,WAAY,OAAO9sB,SAAEq4B,EAAqB7M,iBAAiBuB,0BAGzI9sB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8BxX,EAAG,IAAKpM,SACjEC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACI,MAAO,OAAQH,WAAY,SAAUgO,GAAI,IAAKpO,SAAEq4B,EAAqB7M,iBAAiBwB,wBAG9HqL,EAAqB7M,iBAAiBE,yBAAyBhhB,KAAI,CAAC8hB,EAAcC,IAC/EhtB,eAAC6B,IAAG,CAA+GgM,MAAO,CAACvL,QAAS,OAAQ6H,MAAO,QAAQ5J,SAAA,CACvJC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8BqJ,UAAW,MAAOP,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQE,WAAY,UAAUjC,SAC9IC,cAACmB,IAAU,CAACC,QAAQ,YAAYlB,GAAI,CAACE,SAAU,QAAQL,SAAEwsB,EAAaU,gCAG5B,UAA7CV,EAAaI,4BACVntB,eAAA2H,WAAA,CAAApH,SAAA,CACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAGxjB,GAAI,CAACyjB,OAAQ,6BAA8BqJ,UAAW,MAAOP,YAAa,MAAOtgB,EAAG,GAAKrK,QAAS,OAAQyI,eAAgB,UAAUxK,SAClJC,cAACid,KAAQ,CAAC0N,QAAS,CAAEE,KAAMF,GAAQE,MAAQ3N,SAAgD,IAAvCqP,EAAaW,sBAC7D/I,UAA8D,IAApDkQ,EAAiC5D,eAC3CvwB,GAAI,CAAC,+BAAgC,CAACE,SAAU,WAAYE,MAAM,QAClEG,QAAUkG,GAxpB/Ey1B,EAAC/D,EAAuBC,EAA6B9L,EAAeoP,KAC/G,GAAc,OAAXA,EAAgB,CACf,MAAMhD,EAAyB,IAAIrE,GACnCqE,EAAuBnB,iBAAiBY,GAAuB9M,iBAAiB+M,EAA8B,GAAG7M,yBAAyBe,GAAeU,uBAAwB,EACjLsH,EAAyBoE,GAEzBC,GACID,EAAuBnB,iBAAiBY,GAAuBjM,aAC/DkM,EAA8B,EAC9BM,EAAuBnB,iBAAiBY,GAAuB9M,iBAAiB+M,EAA8B,GAAG7M,yBAAyBe,GAC1IoM,EAAuBnB,iBAAiBY,GAAuB9M,iBAAiB+M,EAA8B,GAAG7M,yBAAyBe,GAAe0M,6BAEjK,MAEK,IAAc,IAAX0C,EAAgB,CACpB,MAAMhD,EAAyB,IAAIrE,GACnCqE,EAAuBnB,iBAAiBY,GAAuB9M,iBAAiB+M,EAA8B,GAAG7M,yBAAyBe,GAAeU,uBAAwB,EACjLsH,EAAyBoE,GAEzBC,GACID,EAAuBnB,iBAAiBY,GAAuBjM,aAC/DkM,EAA8B,EAC9BM,EAAuBnB,iBAAiBY,GAAuB9M,iBAAiB+M,EAA8B,GAAG7M,yBAAyBe,GAC1IoM,EAAuBnB,iBAAiBY,GAAuB9M,iBAAiB+M,EAA8B,GAAG7M,yBAAyBe,GAAe0M,6BAEjK,KAEI,CACA,MAAMN,EAAyB,IAAIrE,GACnCqE,EAAuBnB,iBAAiBY,GAAuB9M,iBAAiB+M,EAA8B,GAAG7M,yBAAyBe,GAAeU,uBAAwB,EACjLsH,EAAyBoE,GAEzBC,GACID,EAAuBnB,iBAAiBY,GAAuBjM,aAC/DkM,EAA8B,EAC9BM,EAAuBnB,iBAAiBY,GAAuB9M,iBAAiB+M,EAA8B,GAAG7M,yBAAyBe,GAC1IoM,EAAuBnB,iBAAiBY,GAAuB9M,iBAAiB+M,EAA8B,GAAG7M,yBAAyBe,GAAe0M,6BAEjK,GAknBgIkD,CAAuC/D,EAAuBD,EAAqBE,4BAA6B9L,EAAeD,EAAaW,2BAIpKltB,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAE3jB,SACbC,cAAA,OAAK0L,UAAU,kBAAiB3L,SAC5BC,cAAA,OAAK0L,UAAU,eAAc3L,SACzBC,cAACmtB,KAAgB,CAACzhB,UAAU,oBAAoBke,KAAM,EAAG9P,aAAcyS,EAAaa,oBAChFjJ,UAA8D,IAApDkQ,EAAiC5D,eAC3CpiB,SAAW1H,GAAMgyB,GAAqCN,EAAuBD,EAAqBE,4BAA6B9L,EAAe7lB,EAAE4H,OAAOlH,UACzJ,WAAA1E,OAJwCy1B,EAAqBE,4BAA2B,KAAA31B,OAAI6pB,WAU9GxsB,cAAAmH,WAAA,CAAApH,SACIC,cAACujB,KAAI,CAAC3L,MAAI,EAAC8L,GAAI,EAAE3jB,SACbC,cAAA,OAAK0L,UAAU,kBAAiB3L,SAC5BC,cAAA,OAAK0L,UAAU,eAAc3L,SACzBC,cAACmtB,KAAgB,CAACzhB,UAAU,oBAAoBke,KAAM,EAAG9P,aAAcyS,EAAaa,oBAChFjJ,UAA8D,IAApDkQ,EAAiC5D,eAC3CpiB,SAAW1H,GAAMgyB,GAAqCN,EAAuBD,EAAqBE,4BAA6B9L,EAAe7lB,EAAE4H,OAAOlH,UACzJ,WAAA1E,OAJwCy1B,EAAqBE,4BAA2B,KAAA31B,OAAI6pB,YAQ3G,gBAAA7pB,OAtCe6pB,EAAa,uBAAA7pB,OAAsB0xB,EAAiCmD,2BA6C1Gx3B,cAAA,OAAK0L,UAAU,2BAA2B2B,MAAO,CAAC1L,gBAAiB,WAAW5B,SAC1EC,cAAC+xB,KAAU,CAACC,MAAOoG,EAAqBN,gBAAiB7F,KAAMmG,EAAqBE,4BAChFh4B,MAAM,QAAQJ,GAAI,CAACgM,EAAG,QAASmC,SAAUA,CAAC1H,EAAGU,IAAUqsB,EAAkB3E,cAAc,GAAGC,kBAAoBqF,EAAiCmD,kBAjyBpMhF,EAACpqB,EAAO6pB,EAAMoK,KACjD,MAAMC,EAAoC,IAAIjI,GAC9CiI,EAAkC7E,iBAAiB4E,GAAe9Q,iBAAmBgJ,EAAsBkD,iBAAiB4E,GAAe9Q,iBAAiB0G,EAAO,GACnKqK,EAAkC7E,iBAAiB4E,GAAe/D,4BAA8BrG,EAChGqC,EAAoCgI,EAAkC,EA6xBqL9J,CAA+B7rB,EAAGU,EAAOgxB,GA1xB9PkE,EAACn0B,EAAO6pB,EAAMoK,KACpD,MAAMC,EAAoC,IAAIjI,GAC9CiI,EAAkC7E,iBAAiB4E,GAAe9Q,iBAAmB0J,EAAsB5J,WAAWgR,GAAe9Q,iBAAiB0G,EAAO,GAC7JqK,EAAkC7E,iBAAiB4E,GAAe/D,4BAA8BrG,EAChGqC,EAAoCgI,EAAkC,EAsxBuPC,CAAkC51B,EAAGU,EAAOgxB,cAItR,oBAAA11B,OAlFe01B,MAsFe,OAAhDhE,EAAiCtI,WAC9B/rB,cAAAmH,WAAA,CAAApH,SACIC,cAAA,OAAK0L,UAAU,aAAa2B,MAAO,CAACid,WAAY,OAAQ7Q,UAAW,OAAO1Z,SACtEC,cAACmB,IAAU,CAACC,QAAQ,KAAKlB,GAAI,CAACI,MAAO,aAAcH,WAAY,UAAUJ,SAAA,+CAAA4C,OAA0B0xB,EAAiCtI,kBAIxI,oBAYvCsI,EAAiC5I,yBAC9BzrB,cAAAmH,WAAA,CAAApH,SACIC,cAAA,OAAK0L,UAAU,2BAA0B3L,SACrCC,cAAC+xB,KAAU,CAACC,MAAOmC,EAA0B2D,gBAAiB7F,KAAM0C,EAAyBr0B,MAAM,UAAUJ,GAAI,CAACgM,EAAG,QAASmC,SAAUA,CAACjG,EAAOf,IAp0BrKm1B,EAACp0B,EAAOf,KAC9BitB,EAAoCH,EAA0B5I,iBAAiBlkB,EAAQ,IACvFutB,EAA2BvtB,EAAM,EAk0BoKm1B,CAAmBp0B,EAAOf,SAI5LrH,cAAAmH,WAAA,OAIR,kBAQxBnH,cAACuqB,GAAiB,CAAC0B,2BAA4BA,EAA4BjB,8BAA+BA,EACtGwD,mCA7mD+BA,KACvC3gB,IAAM8B,QAAQ,6DAADhN,OAAmC6wB,EAA4BT,cAAgB,CAAC1jB,QAAS,aACtGokB,EAA+Bb,GAC/Be,EAAqB,IACrBK,GAA6B,GAC7BE,EAAiC,IACjCE,EAA6B,CAAC,GAC9BE,EAAoC,IACpCE,EAAyB,IACzBE,IACAE,EAA2B,GAC3BC,EAA8B,CAAC,GAC/BG,IACAlB,IACAY,IACAI,IACAjW,IAA6B,EA6lDmDuM,2BAA4BA,EAA4BqC,mBAAoBA,IAExJztB,cAACsB,EAAuB,CACpBO,4BAA6BA,GAA6BD,kBAAkB,MAO5F,ECxxDe66B,OAjBIl9B,GAEfS,cAAAmH,WAAA,CAAApH,SACEC,cAAC08B,IAAU,CAAA38B,SAETP,eAACm9B,SAAM,CAAA58B,SAAA,CACLP,eAAC6L,QAAK,CAACF,OAAK,EAACG,KAAK,IAAGvL,SAAA,CAAC,OAAK,OAC3BC,cAACqL,QAAK,CAACC,KAAK,SAAQvL,SAACC,cAACuN,GAAK,MAC3BvN,cAACoL,GAAa,CAACE,KAAK,mBAAmBC,UAAWue,KAClD9pB,cAACoL,GAAa,CAACE,KAAK,oBAAoBC,UAAWonB,KACnDnzB,eAAC6L,QAAK,CAACC,KAAK,IAAGvL,SAAA,CAACC,cAACyL,GAAO,IAAI,cCoBvBmxB,OA9Bf,WAEE,OACEp9B,eAAA2H,WAAA,CAAApH,SAAA,CACEP,eAACk9B,IAAU,CAAA38B,SAAA,CACTC,cAAA,OAAK0L,UAAU,mBAAkB3L,SAC/BC,cAAC68B,GAAM,MAGT78B,cAAA,OAAK0L,UAAU,gBAAe3L,SAC5BC,cAACy8B,GAAS,SAIdz8B,cAAC88B,IAAc,CACbn8B,SAAS,gBACTo8B,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZ77B,MAAM,YAId,ECxBe87B,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBx6B,MAAKgC,IAAkD,IAAjD,OAAEy4B,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS74B,EACpEy4B,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,E,cCAFO,IAASC,OAEPh+B,cAAC8E,IAAMm5B,WAAU,CAAAl+B,SACfC,cAACgF,GAAY,CAAAjF,SACXC,cAAC48B,GAAG,QAIRhd,SAASyI,eAAe,SAM1BkV,I","file":"static/js/main.f906e4a8.chunk.js","sourcesContent":["import React from 'react'\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nfunction UserManual(props) {\r\n\r\n    return (\r\n        <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalUserManual} disableEscapeKeyDown={true}>\r\n            <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Hướng dẫn sử dụng</DialogTitle>\r\n            <IconButton onClick={() => props.setOpenModalUserManual(false)} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Điều dưỡng</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F2 hoặc nút Đăng ký trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Làm mới form thông tin đăng ký khám</Typography>\r\n                        <Typography>Nhấn phím F4 hoặc nút Làm mới trên màn hình</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Tìm bệnh cũ</Typography>\r\n                        <Typography>Nhấn phím F8 hoặc nút Bệnh cũ trên màn hình, sau khi nhập thông tin và tìm được bệnh nhân, click đúp thông tin bệnh nhân để form thông tin đăng ký khám nhận dữ liệu</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin bệnh nhân</Typography>\r\n                        <Typography>Trong bảng danh sách đăng ký khám trong ngày, nhấn vào bệnh nhân để mở form sửa thông tin</Typography>\r\n                    </Box>\r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Bác sĩ</Typography>\r\n                    <Box sx={{pl: '5px', pr: '5px'}}>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Khám bệnh</Typography>\r\n                        <Typography>Bước 1: Nhấn chọn bệnh nhân để khám</Typography>\r\n                        <Typography>Bước 2: Nhấn F2 để bắt đầu khám</Typography>\r\n                        <Typography>Bước 3: Nhấn F4 để kết thúc khám</Typography>\r\n                        <Typography sx={{color: 'green', fontWeight: 'bolder'}}>Sửa thông tin hỏi bệnh khi đã kết thúc khám</Typography>\r\n\r\n                    </Box>\r\n                \r\n                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>Admin</Typography>\r\n                {/* <Typography variant='subtitle1' sx={{color: 'red'}}>Nếu có sự cố liên hệ zalo: 0987654321 (chỉ phục vụ giờ hành chính)</Typography> */}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default UserManual","export default __webpack_public_path__ + \"static/media/logo.e5a4a234.png\";","import * as React from 'react';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessingBackdrop(props) {\r\n    return (\r\n        <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1, backgroundColor: props.changeBackground ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.6)' }} open={props.openAlertProcessingBackdrop}>\r\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <CircularProgress color='inherit' />\r\n                <Typography sx={{mt: 1.4,}} variant='subtitle1'>{props.alertTitle}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    );\r\n}\r\n\r\nexport default AlertProcessingBackdrop\r\n","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\nconst userLogin = async (userId, password) => {\r\n  return await axios.post(`${backendURL}/api/UserAccount/Login`, { userId, password })\r\n  .then(function (response) {\r\n      return response\r\n  })\r\n  .catch(function (error) {\r\n    return error.response\r\n  })\r\n};\r\n\r\nconst getUserLogin = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetUserLogin`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nconst getGetListDoctor = async () => {\r\n  const config = createConfig();\r\n  return await axios.get(`${backendURL}/api/UserAccount/GetDoctors`, config)\r\n  .then(function (response) {\r\n    return response.data\r\n  })\r\n  .catch(function (error) {\r\n    return error.response.status\r\n  })\r\n}\r\n\r\nexport {\r\n    userLogin, \r\n    getUserLogin, getGetListDoctor\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst createMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/Register`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createMedicalBackRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/BackRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createCurrentDoctorExamining = async (userIdDoctor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/SetDoctorExaming/${userIdDoctor}`, \r\n        {}, // Body của request, có thể là {} hoặc object\r\n        {\r\n            headers: {\r\n                \"content-type\": \"text/plain; charset=utf-8\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddPredecessor = async (dataPredecessor) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddPredecessor`, dataPredecessor,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst createAddMedicalBook = async (dataMedicalBook) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.post(`${backendURL}/api/Medical/AddMedicalBook`, dataMedicalBook,\r\n        {\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        }\r\n    )\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getRegistersByDateNow = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetRegistersByDateNow`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListMedicalExaminationsGiveRegister = async (dayOfBirth) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetExaminationsGiveRegister?dayOfBirth=${dayOfBirth}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListOldDisease = async (patientId, phone, fullName, dayOfBirth, gender) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/SearchPatients?patientId=${patientId}&phone=${phone}&fullName=${fullName}&dayOfBirth=${dayOfBirth}&gender=${gender}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getVaccinationByPatientId = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetVaccinationByPatientId/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getCurrentDoctorExamining = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetDoctorExamining`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalDetailPatient = async (id) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/DetailPatient/${id}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetMediacalBook?medicalBookId=${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdatePredecessor = async (patientId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdatePredecessor/${patientId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getUpdateMedicalBook = async (medicalBookId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetUpdateMedicalBook/${medicalBookId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentDate = async (medicalRegisterId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentDate/${medicalRegisterId}`, config)\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst getAppointmentsToday = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Medical/GetAppointmentsToday`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst updateMedicalRegister = async (dataPatientsRegister) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/EditRegister`, dataPatientsRegister, {\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nconst updateMedicalState = async (id, state) => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    return await axios.put(`${backendURL}/api/Medical/UpdateState?id=${id}&state=${state}`, {}, {\r\n        headers: {\r\n            \"content-type\": \"text/plain; charset=utf-8\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    .then(function (response) {\r\n        return response\r\n    })\r\n    .catch(function (error) {\r\n        return error.response\r\n    })\r\n}\r\n\r\nexport {\r\n    createMedicalRegister, createMedicalBackRegister, createCurrentDoctorExamining, createAddPredecessor, createAddMedicalBook,\r\n    getRegistersByDateNow, getListMedicalExaminationsGiveRegister, getListOldDisease, getVaccinationByPatientId, getCurrentDoctorExamining, getMedicalDetailPatient, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook, getAppointmentDate, getAppointmentsToday,\r\n    updateMedicalRegister, updateMedicalState\r\n}","import React, { useState, useEffect } from 'react';\r\n//modal\r\nimport AlertProcessingBackdrop from '../components/ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//api\r\nimport { getUserLogin } from '../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../Service/MedicalService';\r\n\r\nconst UserContext = React.createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n\r\n    const userDefault = {\r\n        isAuthenticated: false,\r\n        isLogin: false,\r\n        token: \"\",\r\n    };\r\n\r\n    const [user, setUser] = useState(userDefault);\r\n    const [loading, setLoading] = useState(true);\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const loginContext = (userContextLogin) => {\r\n        setUser({ ...userContextLogin });\r\n        setLoading(false);\r\n    };\r\n\r\n    const logoutContext = () => {\r\n        setUser({ ...userDefault });\r\n    }\r\n\r\n    const loadingContext = (loading) => {\r\n        setLoading(...loading);\r\n    }\r\n\r\n    const fetchUser = async () => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        const response = await getUserLogin();\r\n        if(response.positionName === 'Doctor'){\r\n            const responseCurrentDoctorExamining = await getCurrentDoctorExamining();\r\n            if(responseCurrentDoctorExamining.status === 200){\r\n                setUser({\r\n                    isAuthenticated: true, \r\n                    isLogin: true,\r\n                    userId: response.userId,\r\n                    userFullName: response.userFullName,\r\n                    positionName: response.positionName,\r\n                    isCurrentDoctorExamining: response.userId === responseCurrentDoctorExamining.data.userIdDoctor ? true : false\r\n                })\r\n            }\r\n            else{\r\n                setUser({\r\n                    isAuthenticated: true, \r\n                    isLogin: true,\r\n                    userId: response.userId,\r\n                    userFullName: response.userFullName,\r\n                    positionName: response.positionName,\r\n                    isCurrentDoctorExamining: false\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            setUser({\r\n                isAuthenticated: true, \r\n                isLogin: true,\r\n                userId: response.userId,\r\n                userFullName: response.userFullName,\r\n                positionName: response.positionName\r\n            }) \r\n        }\r\n        setLoading(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    const parseJwt = (token) => {\r\n        try {\r\n          return JSON.parse(atob(token.split(\".\")[1]));\r\n        } catch (e) {\r\n          return null;\r\n        }\r\n    };\r\n\r\n    const checkJWTExpire = () => {\r\n        let result = false;\r\n        let getJWT = localStorage.getItem('jwt');\r\n        if(getJWT){\r\n            let decodeJWT = parseJwt(getJWT);\r\n            let currentDate  = new Date();\r\n\r\n            if(decodeJWT.exp * 1000 < currentDate.getTime()) {\r\n                //console.log('Token đã hết hạn hoặc không tồn tại')\r\n                localStorage.removeItem('jwt'); //xóa localStorage\r\n                return result \r\n            }\r\n            else{\r\n                //console.log('token còn hạn');\r\n                result = true;\r\n                return result\r\n            }\r\n        }\r\n        else{\r\n            return result\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const result = checkJWTExpire();\r\n        if(result){\r\n            fetchUser();\r\n        }else{\r\n            //không có token\r\n            setUser(userDefault);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <UserContext.Provider value={{ user, loading, loadingContext, loginContext, logoutContext }}>\r\n                {children}\r\n            </UserContext.Provider>\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop}\r\n                alertTitle={'Đang tải thông tin người dùng'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport { UserContext, UserProvider }\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\nimport UserManual from '../ManageUserManual/UserManual';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport MedicationLiquidIcon from '@mui/icons-material/MedicationLiquid';\r\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport Button from '@mui/material/Button';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\nfunction Header(props) {\r\n\r\n  const { user, logoutContext } = useContext(UserContext);\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [openModalUserManual, setOpenModalUserManual] = useState(false);\r\n\r\n  //mui state menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const token = localStorage.getItem(\"jwt\");\r\n  \r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const actionNursing = [\r\n    { key: 'medicalRegister', maxWidth: '114px', label: 'Đăng ký khám', icon: <LocalHospitalIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/medicalregister\" },\r\n    { key: 're-examining', maxWidth: '95px', label: 'Nhắc khám', icon: <LocalPhoneIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/re-examination\" },\r\n  ]\r\n\r\n  const actionDoctor = [\r\n    { key: 'examining', maxWidth: '100px', label: 'Khám bệnh', icon: <MedicationLiquidIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/doctor-examining\" },\r\n  ]\r\n\r\n  const actionAdmin = [\r\n    { key: 'statistical', maxWidth: '83px', label: 'Thống kê', icon: <BarChartIcon sx={{fontSize: 30}}/>, LinkComponent: NavLink, to: \"/dashboard\" },\r\n  ]\r\n\r\n  const [userAction, setUserAction] = useState([]);\r\n\r\n  const handleChangeURL = (pathname) => {\r\n    const actionIndex = userAction.findIndex(action => action.to === pathname);\r\n    return actionIndex;\r\n  }\r\n\r\n  const value = handleChangeURL(props.location.pathname);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('jwt'); //xóa localStorage\r\n    logoutContext();\r\n    setAnchorEl(null);\r\n    history.push('/login');\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(user.positionName === 'Nursing'){        \r\n      setUserAction(actionNursing);\r\n    }\r\n    else if(user.positionName === 'Doctor'){\r\n      setUserAction(actionDoctor);\r\n    }\r\n    else if(user.positionName === 'Admin'){\r\n      setUserAction(actionAdmin);\r\n    }\r\n  }, [user])\r\n  \r\n  if(location.pathname !== '/login'){\r\n    return (\r\n      <>\r\n        <Box sx={{ width: '100%', position: 'fixed', top: 0}} >\r\n          <AppBar>\r\n            <Toolbar sx={{backgroundColor: '#cfe8fc', height: '78px'}}>\r\n              <Link to=\"/\">\r\n                <Avatar src={Logo} sx={{ width: 62, height: 62, mt: 'auto', mb: 'auto', mr: 4 }} />\r\n              </Link>\r\n                {user.isAuthenticated === true || token ? \r\n                  <>\r\n                    <BottomNavigation showLabels value={value}\r\n                      sx={{display: 'flex', justifyContent: 'flex-start', backgroundColor: '#cfe8fc', flexGrow: 1}}>\r\n                      {userAction.map(actionItem => (\r\n                        <BottomNavigationAction\r\n                          key={actionItem.key}\r\n                          label={actionItem.label}\r\n                          icon={actionItem.icon}\r\n                          LinkComponent={actionItem.LinkComponent}\r\n                          to={actionItem.to}\r\n                          sx={{color: '#000', maxWidth: actionItem.maxWidth}}\r\n                        />\r\n                      ))}  \r\n                    </BottomNavigation>\r\n\r\n                    <Button onClick={handleClick} sx={{color: '#000', textTransform: 'none'}}>{user.userFullName}</Button>\r\n                    <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\r\n                      <MenuItem>Đổi mật khẩu</MenuItem>\r\n                      <MenuItem onClick={handleLogout}>Đăng xuất</MenuItem>\r\n                    </Menu>\r\n                    <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                  </>\r\n                  :\r\n                    <>\r\n                      <Box sx={{position: 'absolute', right: 22}}>\r\n                        <NavLink exact to=\"/login\"><Button sx={{textTransform: 'none', color: '#000'}}>Đăng nhập</Button></NavLink>\r\n                        <HelpIcon titleAccess='Hướng dẫn' sx={{color: 'black', fontSize: '30px', cursor: 'pointer'}} onClick={() => setOpenModalUserManual(true)} />\r\n                      </Box>\r\n                    </>\r\n                  }            \r\n                </Toolbar>\r\n          </AppBar>\r\n        </Box>\r\n  \r\n        <UserManual openModalUserManual={openModalUserManual} setOpenModalUserManual={setOpenModalUserManual}/>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { useEffect, useState, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, useHistory, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst PrivateRoutes = (props) => {\n  const token = localStorage.getItem('jwt');\n\n  if (token) {\n    return (\n      <>\n        <Route path={props.path} component={props.component}></Route>\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <Redirect to='/login'></Redirect>\n      </>\n    )\n  }\n};\nexport default PrivateRoutes;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../ErrorPage/Page500.scss\";\nconst Page404 = () => {\n  let history = useHistory();\n  const handleBack = () => {\n    history.push(\"/\");\n  };\n  return (\n    <div>\n      <div className=\"section\">\n        <h1 className=\"error\">404</h1>\n        <div className=\"page\">\n          Oh snap!!! The page you are looking for is not found.\n        </div>\n        <div>\n          <a className=\"back-home\" onClick={() => handleBack()}>\n            Back to home\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Page404;\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst CreateAccount = (props) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleCloseModalRegister = (event, reason) => {\r\n      if(reason && reason === \"backdropClick\"){\r\n        return;\r\n      }\r\n      else{\r\n        props.setOpenModalRegister(false);\r\n      }\r\n    }\r\n\r\n    const position = [\r\n      {id: '1', positionName: 'Điều dưỡng'},\r\n      {id: '2', positionName: 'Bác sĩ'},\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n          <Dialog maxWidth={'xs'} fullWidth={true} open={props.openModalRegister} onClose={(event, reason) => handleCloseModalRegister(event, reason)} disableEscapeKeyDown={true}  >\r\n            <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>Tạo tài khoản</DialogTitle>\r\n            <IconButton onClick={() => handleCloseModalRegister()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n              <CloseIcon fontSize='medium'/>\r\n            </IconButton>\r\n            <DialogContent dividers>\r\n              <TextField label=\"Họ tên\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }} />\r\n              <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '46ch', mb: 2.5 }}/>\r\n              <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '46ch', mb: 2.5 }} \r\n                InputProps={{ // <-- This is where the toggle button is added.\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n              />\r\n              <Autocomplete options={position.map((option) => option.positionName)} renderInput={(params) => <TextField {...params} label=\"Vị trí\" />} sx={{ width: '45.95ch', mb: 2.5 }}/>\r\n              <Stack spacing={2} direction=\"column\">\r\n                <Button sx={{ height: '6vh', width: '20ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} onClick={() => handleCloseModalRegister()}>Tạo tài khoản</Button>\r\n              </Stack>\r\n            \r\n            </DialogContent>\r\n          </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAccount","import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n//modal\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Logo from '../../assets/image/logo.png';\r\nimport Register from '../ManageRegister/Register';\r\nimport { toast } from 'react-toastify';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//api\r\nimport { userLogin } from '../../Service/UserService';\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nconst Login = () => {\r\n    const { user, loadingContext, loginContext } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const [userAccount, setUserAccount] = useState({userId: '', password: ''})\r\n    const [openModalRegister, setOpenModalRegister] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const onChangeUserName = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                userId: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const onChangeUserPassword = (value) => {\r\n        setUserAccount(prevUserAccount => {\r\n            return {\r\n                ...prevUserAccount,\r\n                password: value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n        if(userAccount.userName === ''){\r\n            toast.error('Bạn chưa nhập tài khoản!')\r\n        }\r\n        else if(userAccount.password === ''){\r\n            toast.error('Bạn chưa nhập mật khẩu!');\r\n        }\r\n        else{\r\n            setOpenAlertProcessingBackdrop(true);\r\n            const response = await userLogin(userAccount.userId, userAccount.password);\r\n            setOpenAlertProcessingBackdrop(false);\r\n            if(response.status !== 200){\r\n                toast.error(response.data);\r\n            }\r\n            else{\r\n                localStorage.setItem('jwt', response.data.tokenDTO.token)\r\n                if(response.data.positionName === 'Doctor'){\r\n                    const responseCurrentDoctorExamining = await getCurrentDoctorExamining();\r\n                    if(responseCurrentDoctorExamining.status === 200){\r\n                        loginContext(\r\n                            {\r\n                                isAuthenticated: true, \r\n                                isLogin: true,\r\n                                userId: response.data.userId,\r\n                                userFullName: response.data.userFullName,\r\n                                positionName: response.data.positionName,\r\n                                isCurrentDoctorExamining: response.data.userId === responseCurrentDoctorExamining.data.userIdDoctor ? true : false\r\n                            }\r\n                        )\r\n                    }\r\n                    else{\r\n                        loginContext(\r\n                            { isAuthenticated: true, isLogin: true, userId: response.data.userId, userFullName: response.data.userFullName, positionName: response.data.positionName, isCurrentDoctorExamining: false }\r\n                        )\r\n                    }\r\n                }\r\n                else{\r\n                    loginContext(\r\n                        { isAuthenticated: true, isLogin: true, userId: response.data.userId, userFullName: response.data.userFullName, positionName: response.data.positionName }\r\n                    )\r\n                }\r\n\r\n                if(response.data.positionName === 'Nursing'){\r\n                    history.push('/medicalregister');\r\n                }\r\n                else if(response.data.positionName === 'Doctor'){\r\n                    history.push('/doctor-examining');\r\n                }\r\n                else{\r\n                    history.push('/');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePressEnter = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleLogin();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user && user.isAuthenticated === true) {\r\n            history.push('/');\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        if (token) {\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box sx={{ mt: 3, borderRadius: '25px' }} >\r\n                    <Box sx={{ p: 7.6 }}>\r\n                        <Avatar src={Logo} sx={{ width: 120, height: 120, ml: 'auto', mr: 'auto', mb: 2 }} />\r\n                        <Typography sx={{ textAlign: 'center', textTransform: 'uppercase', fontWeight: 'bolder', fontSize: '1.15rem', mb: 2, color: '#4caf50' }} variant=\"h5\">Chương trình khám nhi khoa phát triển</Typography>\r\n                        <Box component=\"form\" autoComplete=\"off\" style={{ textAlign: 'center' }}>\r\n                            <TextField label=\"Tài khoản\" variant=\"outlined\" sx={{ width: '40ch', mb: 2.5 }} onChange={(e) => onChangeUserName(e.target.value)}/>\r\n                            <TextField label=\"Mật khẩu\" variant=\"outlined\" type={showPassword ? \"text\" : \"password\"} sx={{ width: '40ch', mb: 3 }} \r\n                            onChange={(e) => onChangeUserPassword(e.target.value)} onKeyDown={(e) => handlePressEnter(e)}\r\n                                InputProps={{ // <-- This is where the toggle button is added.\r\n                                    endAdornment: (\r\n                                        <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleClickShowPassword} sx={{padding: '1px'}}> {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}</IconButton>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Stack spacing={2} direction=\"column\">\r\n                                <Button sx={{ height: '6.5vh', width: '28ch' }} variant=\"contained\" style={{ margin: 'auto' }} onClick={(e) => handleLogin()}>Đăng nhập</Button>\r\n                                <Typography sx={{textAlign: 'center'}} variant=\"subtitle1\">Chưa có tài khoản? <strong style={{cursor: 'pointer'}} onClick={() => setOpenModalRegister(true)}>Đăng ký</strong></Typography>\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Register\r\n                openModalRegister={openModalRegister} setOpenModalRegister={setOpenModalRegister}\r\n            />\r\n\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} setOpenAlertProcessingBackdrop={setOpenAlertProcessingBackdrop}\r\n                alertTitle={'Đang đăng nhập'}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useState, useContext, useEffect } from 'react';\r\n//lodash\r\nimport _ from 'lodash';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Popper from '@mui/material/Popper';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//toast\r\nimport { toast } from 'react-toastify';\r\n//api\r\nimport { getGetListDoctor } from '../../Service/UserService';\r\nimport { createCurrentDoctorExamining } from '../../Service/MedicalService';\r\nimport { Box } from '@mui/material';\r\n\r\nfunction SelectedDoctorExamining(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [listDoctor, setListDoctor] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n\r\n    const CustomPopper = (props) => {\r\n        return <Popper {...props} style={{ width: props.anchorEl ? props.anchorEl.clientWidth : undefined }} placement=\"bottom-start\" />;\r\n      };\r\n\r\n    const onSelectDoctor = (e, value) => {\r\n        setSelectedDoctor( { userFullName: value.userFullName, userIdDoctor: value.userId } );\r\n    }\r\n\r\n    const handleCloseSelectedDoctorExaminingModal = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n        else{\r\n            props.setOpenSelectedDoctorExaminingModal(false);\r\n            setSelectedDoctor(null)\r\n        }\r\n    }\r\n\r\n    const handleCreateCurrentDoctorExamining = async () => {\r\n        if(selectedDoctor === null){\r\n            toast.error('Bạn chưa chọn bác sĩ khám!', {toastId: 'error1'})\r\n        }\r\n        else{\r\n            if(_.isEqual(props.currentDoctorExamining, selectedDoctor)){\r\n                toast.warning('Hiện không có gì để lưu', {toastId: 'warning1'})\r\n            }\r\n            else{\r\n                const response = await createCurrentDoctorExamining(selectedDoctor.userIdDoctor);\r\n                toast.success(response.data, {toastId: 'success1'});\r\n                props.setCurrentDoctorExamining(selectedDoctor);\r\n                props.setOpenSelectedDoctorExaminingModal(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleGetGetListDoctor = async () => {\r\n        const response = await getGetListDoctor();\r\n        setListDoctor(response);\r\n        if(props.currentDoctorExamining.userIdDoctor !== ''){\r\n            const indexResponseListDoctor = response.findIndex(listDoctor => listDoctor.userId === props.currentDoctorExamining.userIdDoctor);\r\n            setSelectedDoctor(response[indexResponseListDoctor]);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        if(props.openSelectedDoctorExaminingModal){\r\n            if(listDoctor.length === 0){\r\n                handleGetGetListDoctor();\r\n            }\r\n            else{\r\n                const indexResponseListDoctor = listDoctor.findIndex(listDoctor => listDoctor.userId === props.currentDoctorExamining.userIdDoctor);\r\n                setSelectedDoctor(listDoctor[indexResponseListDoctor]);\r\n            }\r\n        }\r\n        setLoading(false);\r\n    }, [props.currentDoctorExamining, props.openSelectedDoctorExaminingModal])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth='xs' open={props.openSelectedDoctorExaminingModal} onClose={(event, reason) => handleCloseSelectedDoctorExaminingModal(event, reason)} disableEscapeKeyDown={true} >\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px' }}>{props.currentDoctorExamining ? 'Thay đổi bác sĩ khám' : 'Chọn bác sĩ khám'}</DialogTitle>\r\n                <IconButton onClick={() => props.setOpenSelectedDoctorExaminingModal(false)}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers >\r\n                    {loading ? \r\n                        <CircularProgress/>\r\n                    :\r\n                        <>\r\n                            <Box sx={{height: 'auto'}}>\r\n                                <Autocomplete \r\n                                    value={selectedDoctor}\r\n                                    sx={{marginBottom: '10px'}}\r\n                                    options={listDoctor}\r\n                                    PopperComponent={CustomPopper}\r\n                                    getOptionLabel={(option) => option.userFullName}\r\n                                    renderOption={(props, option) => (\r\n                                        <li {...props}>\r\n                                            {option.userFullName}\r\n                                        </li>\r\n                                    )}\r\n                                    onChange={(e, value) => onSelectDoctor(e, value)}\r\n                                    renderInput={(params) => (\r\n                                        <TextField {...params} \r\n                                            label={'Chọn một bác sĩ'} \r\n                                        />\r\n                                    )}\r\n                                    disableClearable // Bỏ icon xóa\r\n                                    popupIcon={null} // Bỏ icon dropdown\r\n                                />\r\n\r\n                                <Stack spacing={2} direction=\"column\">\r\n                                    <Button sx={{ width: '12ch' }} variant=\"contained\" color=\"success\" style={{ margin: 'auto' }} \r\n                                        onClick={() => handleCreateCurrentDoctorExamining()}>Lưu\r\n                                    </Button>\r\n                                </Stack>\r\n                            </Box>\r\n                        </>\r\n                    }\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectedDoctorExamining","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction AlertProcessing(props) {\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={props.openAlertProcessing} disableEscapeKeyDown={true}>\r\n                <DialogContent>\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center'}}>\r\n                        <CircularProgress/>\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang xử lý...</Typography>\r\n                    </Box>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AlertProcessing","import axios from \"axios\";\r\n\r\nconst backendURL = 'https://api-khamnhi.somee.com';\r\n\r\nconst createConfig = () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    // Thiết lập tiêu đề \"Authorization\" trong yêu cầu Axios\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return config;\r\n}\r\n\r\nconst getListProvince = async () => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/ListProvince`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListDistrict = async (provinceId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListDistrictByIdProvince/${provinceId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getListWard = async (districtId) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetListWardByIdDistrict/${districtId}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nconst getFullAddressByIdWard = async (codeWard) => {\r\n    const config = createConfig();\r\n    return await axios.get(`${backendURL}/api/Administrative/GetFullAddressByIdWard/${codeWard}`, config)\r\n    .then(function (response) {\r\n        return response.data\r\n    })\r\n    .catch(function (error) {\r\n        return error.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    getListProvince, getListDistrict, getListWard, getFullAddressByIdWard\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport { Autocomplete } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//lodash\r\nimport _ from 'lodash';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { updateMedicalRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalService';\r\n\r\nfunction ManageInfoPantients(props) {\r\n  const dataPatientInfoDefault = {\r\n    examinationId: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    headCircumference: \"\",\r\n    reason: \"\",\r\n    vaccination: false,\r\n    id: \"\",\r\n    patient: {\r\n      identifier: \"\",\r\n      address: \"\",\r\n      fullName: \"\",\r\n      dayOfBirth: null,\r\n      codeWard: \"\",\r\n      gender: true,\r\n      fullNameMother: \"\",\r\n      phoneMother: \"\",\r\n      fullNameFather: \"\",\r\n      phoneFather: \"\",\r\n      patientId: \"\"\r\n    }\r\n  }\r\n\r\n  const dataPatientInfoErrorDefault = {\r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    examiningSession: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n  } \r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const selectedAutoCompleteDefault = { \r\n    gender: { value: null, openOption: false }, \r\n    examiningSession: {value: null, openOption: false, loading: false},\r\n    province: { value: null, openOption: false }, \r\n    district: { value: null, openOption: false }, \r\n    ward: { value: null, openOption: false },\r\n  }\r\n\r\n  const typingRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  const [dataPatientInfoNotEdit, setDataPatientInfoNotEdit] = useState();\r\n  const [dataPatientInfo, setDataPatientInfo] = useState(dataPatientInfoDefault);\r\n  const [dataPatientInfoError, setDataPatientInfoError] = useState(dataPatientInfoErrorDefault);\r\n    \r\n  const [selectedAutoComplete, setSelectedAutoComplete] = useState(selectedAutoCompleteDefault);\r\n\r\n  const [listExaminingSession, setListExaminingSession] = useState([]);\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f',\r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -8],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.gender.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'ExaminingSession'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n        prevSelectedAutoComplete.examiningSession.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n    else{\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.openOption = true\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      //const _dataPatientInfoError = {...dataPatientInfoError};\r\n      // if(fieldName === 'patientId'){\r\n      //   _dataPatientInfoError.patientId.title = '';\r\n      //   _dataPatientInfoError.patientId.openTooltip = false;\r\n      //   setDataPatientInfoError(_dataPatientInfoError);\r\n      // }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.dayOfBirth.title = '';\r\n      //     _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientInfoError.dayOfBirth.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneMother.title = '';\r\n      //     _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneMother.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'PhoneFather'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientInfoError.phoneFather.title = '';\r\n      //     _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      //     _dataPatientInfoError.phoneFather.isError = false;\r\n      //     setDataPatientInfoError(_dataPatientInfoError);\r\n      //   }, 10)\r\n      // }\r\n      // if(fieldName === 'Gender'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.gender.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'ExaminingSession'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n      //     prevSelectedAutoComplete.examiningSession.openOption = false\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Province'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.province.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'District'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.district.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n      // if(fieldName === 'Ward'){\r\n      //   setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      //     prevSelectedAutoComplete.ward.openOption = false;\r\n      //     return {...prevSelectedAutoComplete}\r\n      //   })\r\n      // }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.gender.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'ExaminingSession'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete  => {\r\n          prevSelectedAutoComplete.examiningSession.openOption = false\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.province.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.district.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n          prevSelectedAutoComplete.ward.openOption = false;\r\n          return {...prevSelectedAutoComplete}\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n  \r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n  \r\n      return (lowercasedFullName.includes(lowercasedInput) || initials.includes(lowercasedInput));\r\n    });\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientInfoError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientInfoError.identifier.openTooltip = true;\r\n          _dataPatientInfoError.identifier.isError = true;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n        else{\r\n          setDataPatientInfo(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientInfoError.identifier.title = '';\r\n          _dataPatientInfoError.identifier.openTooltip = false;\r\n          _dataPatientInfoError.identifier.isError = false;\r\n          _dataPatientInfoError.identifier.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.identifier.title = '';\r\n      _dataPatientInfoError.identifier.openTooltip = false;\r\n      _dataPatientInfoError.identifier.isError = false;\r\n      _dataPatientInfoError.identifier.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n    \r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.fullName = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n    \r\n      if(dataPatientInfoError.fullName.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullName.title = '';\r\n        _dataPatientInfoError.fullName.openTooltip = false;\r\n        _dataPatientInfoError.fullName.isError = false;\r\n        _dataPatientInfoError.fullName.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = async (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n    \r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n            \r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n    \r\n        if(today < takenValue || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientInfoError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n          _dataPatientInfoError.dayOfBirth.isError = true;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n    \r\n        else{\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.dayOfBirth = formattedDate\r\n            return {...prevDataPatientInfo}\r\n          })\r\n    \r\n          _dataPatientInfoError.dayOfBirth.title = '';\r\n          _dataPatientInfoError.dayOfBirth.openTooltip = false;\r\n          _dataPatientInfoError.dayOfBirth.isError = false;\r\n          _dataPatientInfoError.dayOfBirth.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n\r\n          onChangeDOBToGetExaminingSession(formattedDate);\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onChangeDOBToGetExaminingSession = async (formattedDate) => {\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.value = null\r\n      return {...prevSelectedAutoComplete}\r\n    })\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = true\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(formattedDate);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n\r\n    setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n      prevSelectedAutoComplete.examiningSession.loading = false\r\n      return {...prevSelectedAutoComplete}\r\n    });\r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.patient.gender = value.genderValue\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n    \r\n    if(dataPatientInfoError.gender.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.gender.isError = false;\r\n      _dataPatientInfoError.gender.title = '';\r\n      _dataPatientInfoError.gender.openTooltip = false;\r\n      _dataPatientInfoError.gender.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectExaminingSession = (e, value) => {\r\n    if(focusField === 'examiningSession'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo=> {\r\n      prevDataPatientInfo.examinationId = value.id\r\n      return {...prevDataPatientInfo}\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.examiningSession.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(dataPatientInfoError.examiningSession.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.examiningSession.isError = false;\r\n      _dataPatientInfoError.examiningSession.title = '';\r\n      _dataPatientInfoError.examiningSession.openTooltip = false;\r\n      _dataPatientInfoError.examiningSession.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.province.value = value\r\n      return{...prevSelectedAutoComplete}\r\n    })\r\n\r\n    if(selectedAutoComplete.district.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.district.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.province.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.province.isError = false;\r\n      _dataPatientInfoError.province.title = '';\r\n      _dataPatientInfoError.province.openTooltip = false;\r\n      _dataPatientInfoError.province.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.district.value = value;\r\n      return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(selectedAutoComplete.ward.value !== null){\r\n      setSelectedAutoComplete(prevSelectedAutoComplete => {\r\n        prevSelectedAutoComplete.ward.value = null\r\n        return {...prevSelectedAutoComplete}\r\n      })\r\n    }\r\n\r\n    if(dataPatientInfoError.district.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.district.isError = false;\r\n      _dataPatientInfoError.district.title = '';\r\n      _dataPatientInfoError.district.openTooltip = false;\r\n      _dataPatientInfoError.district.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n\r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.patient.codeWard = value.code\r\n      return { ...prevDataPatientInfo }\r\n    })\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.ward.value = value;\r\n        return{ ...prevSelectedAutoComplete }\r\n    })\r\n\r\n    if(dataPatientInfoError.ward.isError){\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.ward.isError = false;\r\n      _dataPatientInfoError.ward.title = '';\r\n      _dataPatientInfoError.ward.openTooltip = false;\r\n      _dataPatientInfoError.ward.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    if(focusField === 'address'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.address = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.address.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.address.isError = false;\r\n        _dataPatientInfoError.address.title = '';\r\n        _dataPatientInfoError.address.openTooltip = false;\r\n        _dataPatientInfoError.address.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    if(focusField === 'fullNameMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameMother = takenValue\r\n        return { ...prevDataPatientInfo }\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(focusField === 'phoneMother'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneMother.openTooltip = true;\r\n          _dataPatientInfoError.phoneMother.isError = true;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n          \r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneMother = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n      \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n      \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 10)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneMother.title = '';\r\n      _dataPatientInfoError.phoneMother.openTooltip = false;\r\n      _dataPatientInfoError.phoneMother.isError = false;\r\n      _dataPatientInfoError.phoneMother.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.patient.fullNameFather = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.fullNameMother.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.fullNameMother.isError = false;\r\n        _dataPatientInfoError.fullNameMother.title = '';\r\n        _dataPatientInfoError.fullNameMother.openTooltip = false;\r\n        _dataPatientInfoError.fullNameMother.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n      \r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientInfoError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientInfoError.phoneFather.openTooltip = true;\r\n          _dataPatientInfoError.phoneFather.isError = true;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n\r\n        else{\r\n          setDataPatientInfo(prevDataPatientInfo => {\r\n            prevDataPatientInfo.patient.phoneFather = takenValue\r\n            return {...prevDataPatientInfo} \r\n          })\r\n                \r\n          _dataPatientInfoError.phoneFather.title = '';\r\n          _dataPatientInfoError.phoneFather.openTooltip = false;\r\n          _dataPatientInfoError.phoneFather.isError = false;\r\n          _dataPatientInfoError.phoneFather.focus = false;\r\n                \r\n          _dataPatientInfoError.phoneMother.title = '';\r\n          _dataPatientInfoError.phoneMother.openTooltip = false;\r\n          _dataPatientInfoError.phoneMother.isError = false;\r\n          _dataPatientInfoError.phoneMother.focus = false;\r\n          setDataPatientInfoError(_dataPatientInfoError);\r\n        }\r\n      }, 100)\r\n    }\r\n\r\n    else{\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      _dataPatientInfoError.phoneFather.title = '';\r\n      _dataPatientInfoError.phoneFather.openTooltip = false;\r\n      _dataPatientInfoError.phoneFather.isError = false;\r\n      _dataPatientInfoError.phoneFather.focus = false;\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n    }  \r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    if(focusField === 'height'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.height = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.height.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.height.title = '';\r\n        _dataPatientInfoError.height.openTooltip = false;\r\n        _dataPatientInfoError.height.isError = false;\r\n        _dataPatientInfoError.height.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    if(focusField === 'weight'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.weight = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.weight.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.weight.title = '';\r\n        _dataPatientInfoError.weight.openTooltip = false;\r\n        _dataPatientInfoError.weight.isError = false;\r\n        _dataPatientInfoError.weight.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    if(focusField === 'headCircumference'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n    \r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientInfo(prevDataPatientInfo => {\r\n        prevDataPatientInfo.headCircumference = takenValue\r\n        return {...prevDataPatientInfo}\r\n      })\r\n    \r\n      if(dataPatientInfoError.headCircumference.isError){\r\n        const _dataPatientInfoError = {...dataPatientInfoError}\r\n        _dataPatientInfoError.headCircumference.title = '';\r\n        _dataPatientInfoError.headCircumference.openTooltip = false;\r\n        _dataPatientInfoError.headCircumference.isError = false;\r\n        _dataPatientInfoError.headCircumference.focus = false;\r\n        setDataPatientInfoError(_dataPatientInfoError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientInfo(prevDataPatientInfo => {\r\n      prevDataPatientInfo.vaccination = bool\r\n      return {...prevDataPatientInfo}\r\n    })\r\n  }\r\n\r\n  const handleCloseModalInfoPantients = (event, reason) => {\r\n    if(reason && reason === \"backdropClick\"){\r\n      return;\r\n    }\r\n    else{\r\n      setListDistrict(prevListDistrict => {\r\n        prevListDistrict.loading = false\r\n        prevListDistrict.list = []\r\n        return {...prevListDistrict}\r\n      })\r\n      setListWard(prevListWard => {\r\n        prevListWard.loading = false\r\n        prevListWard.list = []\r\n        return {...prevListWard}\r\n      })\r\n      setListExaminingSession([]);\r\n      setSelectedAutoComplete(selectedAutoCompleteDefault);\r\n      setDataPatientInfo(dataPatientInfoDefault);\r\n      setDataPatientInfoNotEdit('');\r\n      setDataPatientInfoError(dataPatientInfoErrorDefault);\r\n      setLoading(true);\r\n      props.setSelectedPantientInfo();\r\n      props.setOpenModalInfoPantients(false);\r\n    }\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const responseListProvince = await getListProvince();\r\n    setListProvince(responseListProvince);\r\n  }\r\n\r\n  const handleApplyPantientDataToField = async () => {\r\n    setOpenAlertProcessing(true);   \r\n      \r\n    const editPropsDataPatientInfo = {...dataPatientInfo};\r\n    editPropsDataPatientInfo.examinationId = props.selectedPantientInfo.examinationId\r\n    editPropsDataPatientInfo.height = props.selectedPantientInfo.height\r\n    editPropsDataPatientInfo.weight = props.selectedPantientInfo.weight\r\n    editPropsDataPatientInfo.headCircumference = props.selectedPantientInfo.headCircumference\r\n    editPropsDataPatientInfo.reason = props.selectedPantientInfo.reason\r\n    editPropsDataPatientInfo.vaccination = props.selectedPantientInfo.vaccination\r\n    editPropsDataPatientInfo.id = props.selectedPantientInfo.id\r\n    editPropsDataPatientInfo.patient.identifier = props.selectedPantientInfo.patient.identifier\r\n    editPropsDataPatientInfo.patient.address = props.selectedPantientInfo.patient.address\r\n    editPropsDataPatientInfo.patient.fullName = props.selectedPantientInfo.patient.fullName\r\n    editPropsDataPatientInfo.patient.dayOfBirth = props.selectedPantientInfo.patient.dayOfBirth\r\n    editPropsDataPatientInfo.patient.codeWard = props.selectedPantientInfo.patient.codeWard\r\n    editPropsDataPatientInfo.patient.gender = props.selectedPantientInfo.patient.gender\r\n    editPropsDataPatientInfo.patient.fullNameMother = props.selectedPantientInfo.patient.fullNameMother\r\n    editPropsDataPatientInfo.patient.phoneMother = props.selectedPantientInfo.patient.phoneMother\r\n    editPropsDataPatientInfo.patient.fullNameFather = props.selectedPantientInfo.patient.fullNameFather\r\n    editPropsDataPatientInfo.patient.phoneFather = props.selectedPantientInfo.patient.phoneFather\r\n    editPropsDataPatientInfo.patient.patientId = props.selectedPantientInfo.patient.patientId\r\n\r\n    setDataPatientInfo(_.cloneDeep(editPropsDataPatientInfo));\r\n    setDataPatientInfoNotEdit(_.cloneDeep(editPropsDataPatientInfo));\r\n        \r\n    const response = await getFullAddressByIdWard(props.selectedPantientInfo.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.list = responseListDistrict;\r\n      return {...prevListDistrict}\r\n    });\r\n    const responseListWard = await getListWard(response.districtCode);\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = responseListWard;\r\n      return {...prevListWard}\r\n    });\r\n    const responseListMedicalExaminationsGiveRegister = await getListMedicalExaminationsGiveRegister(props.selectedPantientInfo.patient.dayOfBirth);\r\n    setListExaminingSession(responseListMedicalExaminationsGiveRegister.exams);\r\n     \r\n    const selectedGender = listGender.find(gender => gender.genderValue === props.selectedPantientInfo.patient.gender);\r\n    const indexListExamining = responseListMedicalExaminationsGiveRegister.exams.findIndex(examiningSession => examiningSession.id === props.selectedPantientInfo.examinationId)\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n\r\n    setSelectedAutoComplete((prevSelectedAutoComplete) => {\r\n      prevSelectedAutoComplete.gender.value = selectedGender\r\n      prevSelectedAutoComplete.examiningSession.value = responseListMedicalExaminationsGiveRegister.exams[indexListExamining];\r\n      prevSelectedAutoComplete.province.value = listProvince[indexListProvince];\r\n      prevSelectedAutoComplete.district.value = responseListDistrict[indexListDistrict];\r\n      prevSelectedAutoComplete.ward.value = responseListWard[indexListWard];\r\n      return prevSelectedAutoComplete\r\n    })\r\n\r\n    setLoading(false);\r\n    setOpenAlertProcessing(false);   \r\n  }\r\n\r\n  const checkValidate = () => {\r\n      const _dataPatientInfoError = {...dataPatientInfoError}\r\n      let isValid = true;\r\n\r\n      if(dataPatientInfoError.identifier.title !== ''){\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.identifier.focus = true;\r\n          setFocusField('identifier');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullName === ''){\r\n        _dataPatientInfoError.fullName.title = 'Bạn chưa nhập họ tên';\r\n        _dataPatientInfoError.fullName.openTooltip = true;\r\n        _dataPatientInfoError.fullName.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullName.focus = true;\r\n          setFocusField('fullName');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(dataPatientInfo.patient.gender === ''){\r\n        _dataPatientInfoError.gender.title = 'Bạn chưa chọn giới tính';\r\n        _dataPatientInfoError.gender.isError = true;\r\n        _dataPatientInfoError.gender.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.gender.focus = true;\r\n          setFocusField('gender');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.dayOfBirth === ''){\r\n        _dataPatientInfoError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        _dataPatientInfoError.dayOfBirth.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfoError.dayOfBirth.title !== ''){\r\n        _dataPatientInfoError.dayOfBirth.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.dayOfBirth.focus = true;\r\n          if (dateFieldRef.current) {\r\n            dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n          }\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.examiningSession.value === null){\r\n        _dataPatientInfoError.examiningSession.title = 'Bạn chưa chọn lại kỳ khám';\r\n        _dataPatientInfoError.examiningSession.isError = true;\r\n        _dataPatientInfoError.examiningSession.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.examiningSession.focus = true;\r\n          setFocusField('examiningSession');\r\n        }\r\n        isValid = false;\r\n      }\r\n\r\n      if(selectedAutoComplete.province.value === null){\r\n        _dataPatientInfoError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n        _dataPatientInfoError.province.isError = true;\r\n        _dataPatientInfoError.province.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.province.focus = true;\r\n          setFocusField('province');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.district.value === null){\r\n        _dataPatientInfoError.district.title = 'Bạn chưa chọn quận huyện';\r\n        _dataPatientInfoError.district.isError = true;\r\n        _dataPatientInfoError.district.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.district.focus = true;\r\n          setFocusField('district');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(selectedAutoComplete.ward.value === null){\r\n        _dataPatientInfoError.ward.title = 'Bạn chưa chọn phường xã';\r\n        _dataPatientInfoError.ward.isError = true;\r\n        _dataPatientInfoError.ward.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.ward.focus = true;\r\n          setFocusField('ward');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.address === ''){\r\n        _dataPatientInfoError.address.title = 'Bạn chưa nhập địa chỉ';\r\n        _dataPatientInfoError.address.isError = true;\r\n        _dataPatientInfoError.address.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.address.focus = true;\r\n          setFocusField('address');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.fullNameMother === '' && dataPatientInfo.patient.fullNameFather === ''){\r\n        _dataPatientInfoError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n        _dataPatientInfoError.fullNameMother.isError = true;\r\n        _dataPatientInfoError.fullNameMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.fullNameMother.focus = true;\r\n          setFocusField('fullNameMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.patient.phoneMother === '' && dataPatientInfo.patient.phoneFather === ''){\r\n        _dataPatientInfoError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        _dataPatientInfoError.phoneMother.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneMother.title !== ''){\r\n        _dataPatientInfoError.phoneMother.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneMother.focus = true;\r\n          setFocusField('phoneMother');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(_dataPatientInfoError.phoneFather.title !== ''){\r\n        _dataPatientInfoError.phoneFather.isError = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.phoneFather.focus = true;\r\n          setFocusField('phoneFather');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.height === ''){\r\n        _dataPatientInfoError.height.title = 'Bạn chưa nhập chiều cao';\r\n        _dataPatientInfoError.height.isError = true;\r\n        _dataPatientInfoError.height.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.height.focus = true;\r\n          setFocusField('height');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.weight === ''){\r\n        _dataPatientInfoError.weight.title = 'Bạn chưa nhập cân nặng';\r\n        _dataPatientInfoError.weight.isError = true;\r\n        _dataPatientInfoError.weight.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.weight.focus = true;\r\n          setFocusField('weight');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      if(dataPatientInfo.headCircumference === ''){\r\n        _dataPatientInfoError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n        _dataPatientInfoError.headCircumference.isError = true;\r\n        _dataPatientInfoError.headCircumference.openTooltip = true;\r\n        if(Object.values(_dataPatientInfoError).every(item => item.focus === false)){\r\n          _dataPatientInfoError.headCircumference.focus = true;\r\n          setFocusField('headCircumference');\r\n        }\r\n        isValid = false;\r\n      }\r\n  \r\n      // if(dataPatientInfo.reason === ''){\r\n      //   _dataPatientInfoError.reason.isError = true;\r\n      //   isValid = false;\r\n      // }\r\n\r\n      if(_.isEqual(dataPatientInfo, dataPatientInfoNotEdit) === true){\r\n        toast.warning('Hiện không có gì để cập nhật', {toastId: 'warning1'});\r\n        isValid = false;\r\n      }\r\n\r\n      setDataPatientInfoError(_dataPatientInfoError);\r\n      return isValid;\r\n  }\r\n\r\n  const handleUpdateMedicalRegister = async () => {\r\n    if(checkValidate()){\r\n      setOpenAlertProcessing(true);\r\n      const response = await updateMedicalRegister(dataPatientInfo);\r\n      if(response.status === 200){\r\n        toast.success(response.data, {toastId: 'success1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      else{\r\n        toast.error(response.data, {toastId: 'error1'});\r\n        props.setCompleteMedicalRegister(true);\r\n        handleCloseModalInfoPantients();\r\n      }\r\n      setOpenAlertProcessing(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(listProvince.length === 0){\r\n      handleGetListProvince();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(props.selectedPantientInfo){\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n      handleApplyPantientDataToField();\r\n    }\r\n  }, [props.selectedPantientInfo])\r\n\r\n  useEffect(() => {\r\n    if(props.openModalInfoPantients && props.isContinueUpdateMedicalRegister && loading === false){\r\n      handleUpdateMedicalRegister();\r\n      props.setIsContinueUpdateMedicalRegister(false);\r\n    }\r\n  }, [props.isContinueUpdateMedicalRegister, loading])\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullWidth={true} maxWidth='md' open={props.openModalInfoPantients} onClose={(event, reason) => handleCloseModalInfoPantients(event, reason)} >\r\n        <DialogTitle sx={{ p: 1, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center', color: 'blue' }}>Thông tin bệnh nhân</DialogTitle>\r\n        <IconButton onClick={() => handleCloseModalInfoPantients()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n          <CloseIcon fontSize='medium'/>\r\n        </IconButton>\r\n        <DialogContent dividers sx={{pt: 1.5, pb: 1.5}}>\r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', pl: 4.2, pr: 4.2, mb: 0.8}}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.identifier.title}</h6>} open={dataPatientInfoError.identifier.openTooltip} placement='left'> \r\n              <TextField error={true ? dataPatientInfoError.identifier.isError === true : false}\r\n                label=\"Mã định danh\" variant=\"outlined\" \r\n                sx={{width: '18%', '&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                inputProps={{ maxLength: 12 }}\r\n                inputRef={(input) => input && focusField === 'identifier' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.identifier}\r\n                onChange={(e) => onChangeIdentifier(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n                      \r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullName.title}</h6>} open={dataPatientInfoError.fullName.openTooltip} placement='top'\r\n              slotProps={{\r\n                popper: {\r\n                  modifiers: [\r\n                    {\r\n                      name: 'offset',\r\n                      options: { offset: [-10, -6], },\r\n                    },\r\n                  ],\r\n                },\r\n              }} \r\n            > \r\n              <TextField error={true ? dataPatientInfoError.fullName.isError === true : false}\r\n                label=\"Họ tên\" variant=\"outlined\" \r\n                sx={{width: '32%', '&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                defaultValue={dataPatientInfo.patient.fullName}\r\n                onChange={(e) => onChangeFullName(e.target.value)}\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.gender.title}</h6>} open={dataPatientInfoError.gender.openTooltip} placement='top'>\r\n              <Autocomplete \r\n                sx={{width: '12%', marginTop: '7.5px'}}\r\n                options={listGender} \r\n                getOptionLabel={(option) => option.genderName}\r\n                value={selectedAutoComplete.gender.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.genderName}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectGender(e, value)}\r\n                open={selectedAutoComplete.gender.openOption}\r\n                onFocus={() => handleFocus('Gender')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Giới tính\" \r\n                    inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                    error={true ? dataPatientInfoError.gender.isError === true : false}                     \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <DemoContainer components={['DatePicker']}>  \r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.dayOfBirth.title}</h6>} open={dataPatientInfoError.dayOfBirth.openTooltip}>    \r\n                  <Box sx={{width: 110}}>\r\n                    <DatePicker label=\"Ngày sinh\" \r\n                      format='DD/MM/YYYY' defaultValue={moment(dataPatientInfo.patient.dayOfBirth)}\r\n                      disableFuture={true} disableOpenPicker \r\n                      slotProps={{ \r\n                        textField: \r\n                          { \r\n                            inputRef: dateFieldRef,\r\n                            error: true ? dataPatientInfoError.dayOfBirth.isError === true : false,\r\n                            onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                          }\r\n                        }}\r\n                      onChange={(value) => onChangeDOB(value)}\r\n                    />\r\n                  </Box>\r\n                </Tooltip>\r\n              </DemoContainer>\r\n            </ThemeProvider>\r\n          </LocalizationProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.examiningSession.title}</h6>} open={dataPatientInfoError.examiningSession.openTooltip} placement='right'>\r\n              <Autocomplete \r\n                sx={{width: '18%', mt: '7.5px'}}\r\n                options={listExaminingSession} \r\n                noOptionsText={selectedAutoComplete.examiningSession.loading ? 'Đang tải...' : ''}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.examiningSession.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectExaminingSession(e, value)}\r\n                open={selectedAutoComplete.examiningSession.openOption}\r\n                onFocus={() => handleFocus('ExaminingSession')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'ExaminingSession')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Kỳ khám\" \r\n                    inputRef={(input) => input && focusField === 'examiningSession' && input.focus()}\r\n                    error={true ? dataPatientInfoError.examiningSession.isError === true : false} \r\n                    sx={{'& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot': {pl: '6px', pr: '6px'}}}\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      endAdornment: (\r\n                        <>\r\n                          {selectedAutoComplete.examiningSession.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                          {params.InputProps.endAdornment}\r\n                        </>\r\n                      ),\r\n                    }} \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.province.title}</h6>} open={dataPatientInfoError.province.openTooltip} placement='left'>\r\n              <Autocomplete \r\n                sx={{width: '20%', mt: 2}}\r\n                options={listProvince} \r\n                filterOptions={filterOptions}\r\n                getOptionLabel={(option) => option.name}\r\n                value={selectedAutoComplete.province.value}\r\n                renderOption={(props, option) => (\r\n                  <li {...props}>\r\n                    {option.name}\r\n                  </li>\r\n                )}\r\n                onChange={(e, value) => onSelectProvine(e, value)}\r\n                open={selectedAutoComplete.province.openOption}\r\n                onFocus={() => handleFocus('Province')}\r\n                onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                renderInput={(params) => ( \r\n                  <TextField {...params} \r\n                    label=\"Thành phố\"\r\n                    inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                    error={true ? dataPatientInfoError.province.isError === true : false}  \r\n                  /> \r\n                )}\r\n                disableClearable // Bỏ icon xóa\r\n                popupIcon={null} // Bỏ icon dropdown\r\n              />\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.district.title}</h6>} open={dataPatientInfoError.district.openTooltip} placement='top'>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listDistrict.list} \r\n                  noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.district.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectDistrict(e, value)}\r\n                  open={selectedAutoComplete.district.openOption}\r\n                  onFocus={() => handleFocus('District')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Quận/huyện\" \r\n                      inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                      error={true ? dataPatientInfoError.district.isError === true : false} \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.ward.title}</h6>} open={dataPatientInfoError.ward.openTooltip}>\r\n                <Autocomplete \r\n                  sx={{width: '20%', mt: 2}}\r\n                  options={listWard.list}\r\n                  noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                  filterOptions={filterOptions}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedAutoComplete.ward.value}\r\n                  renderOption={(props, option) => (\r\n                    <li {...props}>\r\n                      {option.fullName}\r\n                    </li>\r\n                  )}\r\n                  onChange={(e, value) => onSelectWard(e, value)}\r\n                  open={selectedAutoComplete.ward.openOption}\r\n                  onFocus={() => handleFocus('Ward')}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                  renderInput={(params) => ( \r\n                    <TextField {...params} \r\n                      label=\"Phường/Xã\" \r\n                      inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                      error={true ? dataPatientInfoError.ward.isError === true : false}  \r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                          <>\r\n                            {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                            {params.InputProps.endAdornment}\r\n                          </>\r\n                        ),\r\n                      }} \r\n                    /> \r\n                  )}\r\n                  disableClearable // Bỏ icon xóa\r\n                  popupIcon={null} // Bỏ icon dropdown\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.address.title}</h6>} open={dataPatientInfoError.address.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.address.isError === true : false}\r\n                  label=\"Địa chỉ\" variant=\"outlined\" \r\n                  sx={{width: '36%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.address}\r\n                  onChange={(e) => onChangeAddress(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.fullNameMother.title}</h6>} open={dataPatientInfoError.fullNameMother.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.fullNameMother.isError === true : false}\r\n                  label=\"Họ tên mẹ\" variant=\"outlined\" \r\n                  sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.fullNameMother}\r\n                  onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                />    \r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneMother.title}</h6>} open={dataPatientInfoError.phoneMother.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.phoneMother.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneMother}\r\n                  onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <TextField \r\n              label=\"Họ tên cha\" variant=\"outlined\" sx={{width: '32%', '&.MuiTextField-root' : {mt: 2}}} \r\n              defaultValue={dataPatientInfo.patient.fullNameFather}\r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n            />\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.phoneFather.title}</h6>} open={dataPatientInfoError.phoneFather.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.phoneFather.isError === true : false}\r\n                  label=\"Số điện thoại\" variant=\"outlined\" \r\n                  sx={{width: '16%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputProps={{ maxLength: 10 }}\r\n                  inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                  defaultValue={dataPatientInfo.patient.phoneFather}\r\n                  onChange={(e) => onChangePhoneFather(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.height.title}</h6>} open={dataPatientInfoError.height.openTooltip} placement='left'>\r\n                <TextField error={true ? dataPatientInfoError.height.isError === true : false}\r\n                  label='Chiều cao' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.height}\r\n                  onChange={(e) => onChangeHeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.weight.title}</h6>} open={dataPatientInfoError.weight.openTooltip}>\r\n                <TextField error={true ? dataPatientInfoError.weight.isError === true : false}\r\n                  label='Cân nặng' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(kg)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.weight}\r\n                  onChange={(e) => onChangeWeight(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientInfoError.headCircumference.title}</h6>} open={dataPatientInfoError.headCircumference.openTooltip} placement='right'>\r\n                <TextField error={true ? dataPatientInfoError.headCircumference.isError === true : false}\r\n                  label='Vòng đầu' \r\n                  sx={{width: '20%', '&.MuiTextField-root' : {mt: 2}}} \r\n                  inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                  InputProps={{endAdornment: <InputAdornment position=\"end\">{'(cm)'}</InputAdornment>}} \r\n                  defaultValue={dataPatientInfo.headCircumference}\r\n                  onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                />\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <FormControlLabel sx={{width: '30%', mt: 2}} control={<Checkbox checked={dataPatientInfo.vaccination}/>} \r\n              label=\"Có tham gia tiêm ngừa\"\r\n              onChange={(e) => onChangeVaccination(e.target.checked)}\r\n            />  \r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{justifyContent: 'center'}}>\r\n          <Button variant=\"contained\" onClick={() => handleUpdateMedicalRegister()}>Sửa (F1)</Button>\r\n          <Button variant=\"contained\" color='secondary' onClick={(event, reason) => handleCloseModalInfoPantients(event, reason)}>Đóng (ESC)</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <AlertProcessing openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ManageInfoPantients","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//info pantients modal\r\nimport ManageInfoPantients from '../ManageInfoPantients/ManageInfoPantients';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//mui theme\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n//mui icon\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport IconButton from '@mui/material/IconButton';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getRegistersByDateNow, getAppointmentsToday, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction ListPatientsRegister(props) {\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n  const [listPantientChipState, setListPantientChipState] = useState(\r\n    [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: 0 },\r\n    ]\r\n  )\r\n\r\n  const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n  \r\n  const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n  const [listDataPatientsAppointmentsToday, setListDataPatientsAppointmentsToday] = useState([]); \r\n  \r\n  const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n\r\n  const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n  const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n  const [selectedPantientInfo, setSelectedPantientInfo] = useState();\r\n  const [openModalInfoPantients, setOpenModalInfoPantients] = useState(false);\r\n  const [isContinueUpdateMedicalRegister, setIsContinueUpdateMedicalRegister] = useState();\r\n\r\n  const renderPatientsStatus = (state) => {\r\n    if(state === 0 || state === 3){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterWaiting' />\r\n        </>\r\n      )\r\n    }\r\n    else if(state === 1){\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterExamining' />\r\n        </>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <>\r\n          <span className='dotPantientRegisterDone' />\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleSelectedChip = (chipIndex, chipLabel) => {\r\n    setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n    if(chipIndex === 0){\r\n      const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n      setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n    }\r\n    else if(chipIndex === 1){\r\n      const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n      setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n      setListDataPatientsRegisterState(listPantientRegisterDone);\r\n    }\r\n    else if(chipIndex === 2){\r\n      setListDataPatientsRegisterSort(listDataPatientsAppointmentsToday);\r\n      setListDataPatientsRegisterState(listDataPatientsAppointmentsToday);\r\n    }\r\n  };\r\n\r\n  const handleSearchPantient = (value) => {\r\n    const takenValue = value;\r\n    setSearchPatientsQuery(takenValue);\r\n\r\n    if(value === ''){\r\n      setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n    }else{\r\n      setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n    }\r\n  }\r\n\r\n  const searchPatients = (patients, searchTerm) => {\r\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n    return patients.filter(patientObj => {\r\n      const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n      return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n    });\r\n  }\r\n\r\n  const handleSelectedPantientInfo = (patientsRegisterSortItem) => {\r\n    setSelectedPantientInfo(patientsRegisterSortItem);\r\n    setIsContinueUpdateMedicalRegister(true);\r\n    setOpenModalInfoPantients(true);\r\n  }\r\n\r\n  const handleSelectedPantientAppointmentsToday = async (patientsRegisterSortItem) => {\r\n    setOpenAlertProcessingBackdrop(true);\r\n    const responseVaccinationByPatientId = await getVaccinationByPatientId(patientsRegisterSortItem.patient.patientId);\r\n    const dataPantientOldOldDiseaseRegister = {\r\n      examinationId: patientsRegisterSortItem.patient.nextExamId,\r\n      oldDisease: true,\r\n      height: '',\r\n      weight: '',\r\n      headCircumference: '',\r\n      reason: '',\r\n      vaccination: responseVaccinationByPatientId.vaccination,\r\n      medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n      userIdDoctor: '',\r\n      patient: patientsRegisterSortItem.patient\r\n    }\r\n    props.setDataPantientAppointmentsToday(dataPantientOldOldDiseaseRegister)\r\n    setOpenAlertProcessingBackdrop(false);\r\n  }\r\n\r\n  const handleGetRegistersByDateNow = async () => {\r\n    setLoading(true);\r\n\r\n    const response = await getRegistersByDateNow();\r\n    const responseGetAppointmentsToday = await getAppointmentsToday();\r\n\r\n    let updatedList = [\r\n      { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n      { chipLabel: 'BN đã khám', chipContent: 0 },\r\n      { chipLabel: 'BN hẹn khám', chipContent: responseGetAppointmentsToday.length }\r\n    ]\r\n\r\n    let _listDataPatientsAppointmentsToday\r\n    if(responseGetAppointmentsToday.length > 0){\r\n      _listDataPatientsAppointmentsToday = responseGetAppointmentsToday.map((item) => {\r\n        const result = {\r\n          patient : {\r\n            identifier: item.identifier,\r\n            patientId: item.patientId,\r\n            fullName: item.patientFullName,\r\n            gender: item.gender,\r\n            dayOfBirth: item.dateOfBirth,\r\n            fullNameMother: item.fullNameMother,\r\n            phoneMother: item.phoneMother,\r\n            fullNameFather: item.fullNameFather,\r\n            phoneFather: item.phoneFather,\r\n            address: item.address,\r\n            fullAddress: item.fullAddress,\r\n            codeWard: item.codeWard,\r\n            nextExamId: item.nextExamId\r\n          }\r\n        }\r\n        return result;\r\n      })\r\n      setListDataPatientsAppointmentsToday(_listDataPatientsAppointmentsToday);\r\n    }\r\n    else{\r\n      setListDataPatientsAppointmentsToday(responseGetAppointmentsToday)\r\n    }\r\n\r\n    if(response !== 400){\r\n      if(response.list.length !== 0){\r\n        setListDataPatientsRegister(response.list);\r\n        if(activeChip.chipOrder === 0){\r\n          const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám và tái khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 1){\r\n          const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n          setListDataPatientsRegisterState(listPantientRegisterDone);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n        else if(activeChip.chipOrder === 2){\r\n          setListDataPatientsRegisterSort(_listDataPatientsAppointmentsToday);\r\n          setListDataPatientsRegisterState(_listDataPatientsAppointmentsToday);\r\n          updatedList[0].chipContent = response.listCountState[0];\r\n          updatedList[1].chipContent = response.listCountState[1];\r\n        }\r\n      }\r\n    }\r\n    setListPantientChipState(updatedList);\r\n    props.setComponent1Loading(false);\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetRegistersByDateNow();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(openModalInfoPantients){\r\n      const handleKeyDown = (event) => {\r\n        if(event.keyCode === 112){\r\n          event.preventDefault()\r\n          setIsContinueUpdateMedicalRegister(true);\r\n          //nhấn F1 để sửa thông tin đăng ký khám\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      };\r\n    }\r\n  }, [openModalInfoPantients, isContinueUpdateMedicalRegister]);\r\n\r\n  useEffect(() => {\r\n    if(props.completeMedicalRegister === true){\r\n      handleGetRegistersByDateNow();\r\n      props.setCompleteMedicalRegister(false);\r\n    }\r\n  }, [props.completeMedicalRegister])\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{p: 0}}>\r\n        <Typography variant='h6' sx={{color: 'red', mb: 0, fontWeight: 'bolder', fontSize: '1.16rem'}}>\r\n          {loading ? \r\n            <Skeleton /> \r\n          : \r\n            props.currentDoctorExamining.userIdDoctor !== '' ?\r\n              <>\r\n                {`Bác sĩ khám hôm nay: ${props.currentDoctorExamining.userFullName}`} <IconButton onClick={() => props.setOpenSelectedDoctorExaminingModal(true)}> <EditIcon sx={{color: '#2e7d32', fontSize: '30px'}}/></IconButton>\r\n              </>\r\n            :\r\n              <>\r\n                {`Chưa chọn bác sĩ khám hôm nay `} <IconButton onClick={() => props.setOpenSelectedDoctorExaminingModal(true)}> <EditIcon sx={{color: '#2e7d32', fontSize: '30px'}}/></IconButton>\r\n              </>\r\n          }\r\n        </Typography>\r\n          <TableContainer component={Paper} sx={{ height: '548px', borderRadius: '10px', boxShadow: 5, overflowX: 'scroll' }}>\r\n          {loading ? \r\n            <>\r\n              <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                <CircularProgress/>\r\n                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n              </Box>        \r\n            </>\r\n          :\r\n            <>\r\n              <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                  <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                    <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                      onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                  </Badge>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n        \r\n              <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                <TextField sx={{mt: 0.2, mb: 1, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                  variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN hoặc SĐT' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                      startAdornment: (\r\n                        <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                      ),\r\n                      endAdornment: (\r\n                        <InputAdornment position='end'>\r\n                          {searchPatientsQuery !== '' ? \r\n                            <CloseIcon sx={{cursor: 'pointer'}} \r\n                              titleAccess='Xóa'\r\n                              onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                            /> \r\n                          : \r\n                            null\r\n                          }\r\n                        </InputAdornment>  \r\n                      )\r\n                  }}>\r\n                </TextField>\r\n              </Box>\r\n\r\n              <Table stickyHeader sx={{ minWidth: 1200 }}>\r\n                <TableHead>\r\n                  <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                    {activeChip.chipOrder === 2 ? \r\n                      null\r\n                    :\r\n                      <>\r\n                        <TableCell align=\"left\" sx={{fontSize: '0.95rem', p: '10px'}}>Trạng thái</TableCell>\r\n                        <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                      </>\r\n                    }\r\n                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Giới tính</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Ngày sinh</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Số điện thoại</TableCell>\r\n                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Địa chỉ</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {listDataPatientsRegisterSort.length !== 0 ?\r\n                    <>\r\n                      {listDataPatientsRegisterSort.map((patientsRegisterSortItem, patientsRegisterSortIndex) => (\r\n                        <TableRow hover role=\"checkbox\" key={patientsRegisterSortIndex} sx={{cursor: 'pointer'}} onDoubleClick={() => activeChip.chipOrder === 2 ? handleSelectedPantientAppointmentsToday(patientsRegisterSortItem) : handleSelectedPantientInfo(patientsRegisterSortItem)}>\r\n                          {activeChip.chipOrder === 2 ? \r\n                            null\r\n                          :\r\n                            <>\r\n                              <TableCell align='center' sx={{width: '90px'}}>{renderPatientsStatus(patientsRegisterSortItem.state)}</TableCell>\r\n                              <TableCell align='left' sx={{width: '20px'}}>{patientsRegisterSortItem.order}</TableCell>\r\n                            </>\r\n                          }\r\n                          <TableCell align='left' sx={{width: '150px'}}>{patientsRegisterSortItem.patient.patientId}</TableCell>\r\n                          <TableCell align='left' sx={{width: '200px'}}>{patientsRegisterSortItem.patient.fullName}</TableCell>\r\n                          <TableCell align='left' sx={{width: '110px'}}>{patientsRegisterSortItem.patient.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                          <TableCell align='left' sx={{width: '110px'}}>{moment(patientsRegisterSortItem.patient.dayOfBirth).format(\"DD/MM/YYYY\")}</TableCell>\r\n                          <TableCell align='left' sx={{width: '140px'}}>{patientsRegisterSortItem.patient.phoneMother !== '' ? patientsRegisterSortItem.patient.phoneMother : patientsRegisterSortItem.patient.phoneFather}</TableCell>\r\n                          <TableCell align='left' sx={{whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', maxWidth: 120}}>\r\n                            <Tooltip title={<Typography variant='subtitle2'>{patientsRegisterSortItem.patient.fullAddress}</Typography>} >\r\n                              <span>{patientsRegisterSortItem.patient.fullAddress}</span>\r\n                            </Tooltip>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))} \r\n                    </>\r\n                    :\r\n                      null\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n            </>\r\n          }\r\n          </TableContainer>\r\n      </Box>\r\n      \r\n      <AlertProcessingBackdrop openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n      />\r\n\r\n      <ManageInfoPantients \r\n        openModalInfoPantients={openModalInfoPantients} setOpenModalInfoPantients={setOpenModalInfoPantients}\r\n        selectedPantientInfo={selectedPantientInfo} setSelectedPantientInfo={setSelectedPantientInfo}\r\n        isContinueUpdateMedicalRegister={isContinueUpdateMedicalRegister} setIsContinueUpdateMedicalRegister={setIsContinueUpdateMedicalRegister}\r\n        setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListPatientsRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n//modal\r\n// import AlertConfirmModal from '../ManageAlertConfirm/AlertConfirm';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//toast\r\nimport {toast} from 'react-toastify';\r\n//api\r\nimport { createMedicalRegister, createMedicalBackRegister, getListMedicalExaminationsGiveRegister } from '../../Service/MedicalService';\r\n\r\nfunction ExaminingSession(props) {\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n    const [listExaminingSession, setListExaminingSession] = useState(null);\r\n\r\n    const onChangeRadioSelect = (value) => {\r\n        props.dataPatientsRegister.examinationId = value;\r\n        // if(props.isContinueSelectedExaminingSession === false){\r\n        //     props.setIsContinueSelectedExaminingSession(true);\r\n        // }\r\n    }\r\n\r\n    const handleListMedicalExaminationsGiveRegister = async () =>  {\r\n        setOpenAlertProcessing(true);\r\n        const response = await getListMedicalExaminationsGiveRegister(props.dataPatientsRegister.patient.dayOfBirth);\r\n        setOpenAlertProcessing(false);\r\n        setListExaminingSession(response);\r\n    }\r\n\r\n    const handleMedicalRegister = async () => {\r\n        //bệnh cũ\r\n        if(props.dataPatientsRegister.oldDisease === true){\r\n            //là bênh mới đã đăng ký nhưng chưa từng khám bao giờ\r\n            if(listExaminingSession.isAppointment === false){\r\n                setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    toast.success(response.data);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            //có hẹn khám nhưng không nhắc khám hoặc đến trễ ngày hẹn khám\r\n            else{\r\n                setIsConfirmOpen(false);\r\n                setOpenAlertProcessing(true);\r\n                const response = await createMedicalBackRegister(props.dataPatientsRegister);\r\n                setOpenAlertProcessing(false);\r\n                if(response.status === 200){\r\n                    toast.success(response.data);\r\n                    props.setIsContinueSelectedExaminingSession(false);\r\n                    props.setCompleteMedicalRegister(true);\r\n                    props.setOpenModalExaminingSession(false);\r\n                    props.handleResetField();\r\n                }\r\n                else{\r\n                    toast.error(response.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n        }\r\n        //bệnh mới\r\n        else{\r\n            setIsConfirmOpen(false);\r\n            setOpenAlertProcessing(true);\r\n            const response = await createMedicalRegister(props.dataPatientsRegister);\r\n            setOpenAlertProcessing(false);\r\n\r\n            if(response.status === 200){\r\n                toast.success(response.data);\r\n                props.handleResetField();\r\n                props.setIsContinueSelectedExaminingSession(false);\r\n                props.setCompleteMedicalRegister(true);\r\n                props.setOpenModalExaminingSession(false);\r\n            }\r\n            else{\r\n                toast.error(response.data, {toastId: 'error1'});\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCloseConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n      };\r\n\r\n    const handleOpenConfirm = () => {\r\n        if(props.dataPatientsRegister.examinationId === ''){\r\n            // setIsConfirmOpen(false);\r\n            toast.error('Bạn chưa chọn kỳ khám', {toastId: 'error1'});\r\n        }\r\n        else{\r\n            //setIsConfirmOpen(true);\r\n            handleMedicalRegister();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.dataPatientsRegister.patient.dayOfBirth !== '' && props.openModalExaminingSession === true){\r\n            handleListMedicalExaminationsGiveRegister();\r\n        }\r\n    }, [props.openModalExaminingSession])\r\n\r\n    useEffect(() => {\r\n        if(props.isContinueSelectedExaminingSession === true){\r\n            //nhấn F2 để hoàn tất đăng ký khám\r\n            handleOpenConfirm();\r\n            props.setIsContinueSelectedExaminingSession(false);\r\n        }\r\n    }, [props.isContinueSelectedExaminingSession])\r\n\r\n    return (\r\n        <>\r\n            {listExaminingSession ? \r\n                <>\r\n                    <Dialog fullWidth={true} maxWidth={'sm'} open={props.openModalExaminingSession} disableEscapeKeyDown={true}>\r\n                        <DialogTitle \r\n                            sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'green', textTransform: 'uppercase' }}>\r\n                            {`${props.dataPatientsRegister.patient.fullName}, \r\n                            ${props.dataPatientsRegister.patient.gender === true ? 'Nam' : 'Nữ'}, \r\n                            ${listExaminingSession.monthsOfAge}`}\r\n                        </DialogTitle>\r\n\r\n                        <IconButton onClick={() => [props.setOpenModalExaminingSession(false), props.dataPatientsRegister.examinationId = '']} \r\n                            sx={{position: 'absolute', right: 5, top: 7}}>\r\n                                <CloseIcon fontSize='medium'/>\r\n                        </IconButton>\r\n\r\n                        <DialogContent dividers sx={{pl: '0px', pr: '0px'}}>\r\n                            <Grid container rowSpacing={0}>\r\n                                <Grid item xs={0.5}/>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid black', p: 1, height: '50vh', overflow: 'auto'}}>\r\n                                        <Typography variant='h6' sx={{fontWeight: 'bolder'}}>Lịch sử khám</Typography>\r\n                                        {listExaminingSession.oldExams ?\r\n                                            listExaminingSession.oldExams.map((oldExamItem, oldExamIndex) => (\r\n                                                <Typography key={oldExamIndex} variant='subtitle1'>{oldExamItem.name}</Typography>\r\n                                            ))\r\n                                        :\r\n                                            null\r\n                                        }\r\n                                    </Box>  \r\n                                </Grid>\r\n\r\n                                <Grid item xs={5.5}>\r\n                                    <Box sx={{border: '2px solid red', p: 1, height: '50vh'}}>\r\n                                        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                                            <Typography variant='h6' sx={{fontWeight: 'bolder', color: 'red'}}>Chọn kỳ khám</Typography>\r\n                                            {listExaminingSession.exams && listExaminingSession.isAppointment === false ? \r\n                                                <RadioGroup onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                    {listExaminingSession.exams.map((examItem, examIndex) => (\r\n                                                        <FormControlLabel key={examIndex} value={examItem.id} control={<Radio />} label={examItem.name} />\r\n                                                    ))}\r\n                                                </RadioGroup>\r\n                                            :\r\n                                                <RadioGroup onChange={(e) => onChangeRadioSelect(e.target.value)}>\r\n                                                    {listExaminingSession.oldExams.map((examItem, examIndex) => (\r\n                                                        <FormControlLabel key={examIndex} value={examItem.id} control={<Radio />} label={examItem.name} disabled={examIndex === 0 ? true : false}/>\r\n                                                    ))}\r\n                                                </RadioGroup>\r\n                                            }\r\n                                            <Button variant='contained' sx={{mt: 0.5}} onClick={() => handleOpenConfirm()}>Tiếp tục (F2)</Button> \r\n                                        </div>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </>\r\n            :\r\n                null\r\n            }\r\n\r\n            {/* <AlertConfirmModal \r\n                openAlertConfirmModal={isConfirmOpen} onCloseAlertConfirmModal={handleCloseConfirm} \r\n                onConfirmAlertConfirmModal={handleMedicalRegister} \r\n                titleConfirm=\"Đăng ký khám cho bệnh nhân?\"\r\n            /> */}\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExaminingSession","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListOldDisease, getVaccinationByPatientId } from '../../Service/MedicalService';\r\n\r\nfunction OldDisease(props) {\r\n\r\n    const dataPatientsForSearchOldDiseaseDefault = {patientId: '', phone: '', fullName: '', dayOfBirth: ''}\r\n    const dataPatientsForSearchOldDiseaseErrorDefault = {\r\n        patientId: { title: '', isError: false, openTooltip: false, focus: false},\r\n        phone: { title: '', isError: false, openTooltip: false, focus: false },\r\n        fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n        dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    }\r\n    \r\n    const [listFoundOldDisease, setListFoundOldDisease] = useState(null);\r\n    const [dataPatientsForSearchOldDisease, setDataPatientsForSearchOldDisease] = useState(dataPatientsForSearchOldDiseaseDefault);\r\n    const [dataPatientsForSearchOldDiseaseError, setDataPatientsForSearchOldDiseaseError] = useState(dataPatientsForSearchOldDiseaseErrorDefault);\r\n    const [focusField, setFocusField] = useState(null);\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n\r\n    const dateFieldRef = useRef(null);\r\n    const formRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n    const tooltipTheme = createTheme({\r\n        components: {\r\n          MuiTooltip: {\r\n            defaultProps: {\r\n              placement: 'bottom',\r\n              arrow: true,\r\n              componentsProps: {\r\n                tooltip: {\r\n                  sx: {\r\n                    bgcolor: '#d32f2f',\r\n                  },\r\n                },\r\n                arrow: {\r\n                  sx: {\r\n                    color: '#d32f2f',\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n    });\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab' && event.key !== 'Enter') \r\n        {\r\n            event.preventDefault();\r\n        }\r\n        else if(event.key === 'Enter'){\r\n            handleEnterPress(event);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (value, fieldName) => {\r\n        if(value === '' || value === 'DD/MM/YYYY'){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(fieldName === 'patientId'){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'patientId'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'dayOfBirth'){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'dayOfBirth'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n            else if(fieldName === 'phone'){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const onChangePatientId = (value) => {\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 8){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.title = 'Mã bệnh nhân phải từ 8 đến 12 số';\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.patientId = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'patientId'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.patientId.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.patientId.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        } \r\n    }\r\n\r\n    const onChangeFullName = (value) => {\r\n        if(focusField === 'fullName'){\r\n            setFocusField(null);\r\n        }\r\n\r\n        setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n            prevDataPatientsForSearchOldDisease.fullName = value;\r\n            return {...prevDataPatientsForSearchOldDisease}\r\n        })\r\n\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n        _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);      \r\n    }\r\n\r\n    const onChangeDayOfBirth = (value) => {\r\n        if(value){            \r\n            const date = value._d;\r\n            const today = new Date();\r\n            const yearsDifference = today.getFullYear() - date.getFullYear();\r\n            const monthsDifference = today.getMonth() - date.getMonth();\r\n            const daysDifference = today.getDate() - date.getDate();\r\n            const age = today.getFullYear() - date.getFullYear();\r\n\r\n            let totalMonths = yearsDifference * 12 + monthsDifference;\r\n            let totalDays = daysDifference;\r\n\r\n            if (daysDifference < 0) {\r\n                totalMonths -= 1;\r\n                totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n            }\r\n\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n\r\n            if(today < date || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = true;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n              }\r\n              else{\r\n                const formattedDate = moment(date).format('YYYY-MM-DD');\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.dayOfBirth = formattedDate;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangePhone = (value) => {\r\n        if(value !== ''){\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            if(value.length < 10){\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = 'Số điện thoại chưa đủ 10 số';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = true;\r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n\r\n                setDataPatientsForSearchOldDisease((prevDataPatientsForSearchOldDisease) => {\r\n                    prevDataPatientsForSearchOldDisease.phone = value;\r\n                    return {...prevDataPatientsForSearchOldDisease}\r\n                })\r\n            }\r\n            else{\r\n                if(focusField === 'phone'){\r\n                    setFocusField(null);\r\n                }\r\n                _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n                _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.fullName.isError = false;\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = false;                \r\n                setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n            }\r\n        }\r\n        else{\r\n            const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n            _dataPatientsForSearchOldDiseaseError.phone.title = '';\r\n            _dataPatientsForSearchOldDiseaseError.phone.openTooltip = false;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = false;\r\n            setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        }\r\n    }\r\n\r\n    const handleCloseModalOldDisease = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n            return;\r\n        }\r\n          else{\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            setListFoundOldDisease(null);\r\n            setSelectedRowIndex(0);\r\n            props.setOpenModalOldDisease(false);\r\n        }\r\n    }\r\n\r\n    const handleResetField = () => {\r\n        formRef.current.reset();\r\n        const inputs = formRef.current.querySelectorAll('input, textarea');\r\n        inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n        setFocusField(null);\r\n    }\r\n\r\n    const validate = () => {\r\n        const _dataPatientsForSearchOldDiseaseError = {...dataPatientsForSearchOldDiseaseError};\r\n        let isValid = true;\r\n\r\n        if(dataPatientsForSearchOldDisease.patientId === '' && dataPatientsForSearchOldDisease.fullName === '' && \r\n            dataPatientsForSearchOldDisease.dayOfBirth === '' && dataPatientsForSearchOldDisease.phone === '')\r\n        {\r\n            _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.fullName.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n            _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.patientId.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.patientId.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.patientId.focus = true;\r\n                setFocusField('patientId');\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.dayOfBirth.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.dayOfBirth.isError = true;\r\n                if (dateFieldRef.current) {\r\n                    dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n                }\r\n            }\r\n            isValid = false;\r\n        }\r\n\r\n        if(dataPatientsForSearchOldDiseaseError.phone.title !== ''){\r\n            if(Object.values(dataPatientsForSearchOldDiseaseError).every(item => item.focus === false)){\r\n                _dataPatientsForSearchOldDiseaseError.phone.isError = true;\r\n                _dataPatientsForSearchOldDiseaseError.phone.focus = true;\r\n                setFocusField('phone');\r\n            }\r\n            isValid = false;\r\n        }\r\n        setDataPatientsForSearchOldDiseaseError(_dataPatientsForSearchOldDiseaseError);\r\n        return isValid;\r\n    }\r\n\r\n    const handleFindOldDisease = async () => {\r\n        if(validate()){\r\n            setOpenAlertProcessing(true);\r\n            const response = await getListOldDisease(dataPatientsForSearchOldDisease.patientId, dataPatientsForSearchOldDisease.phone, dataPatientsForSearchOldDisease.fullName, dataPatientsForSearchOldDisease.dayOfBirth, '');\r\n            setOpenAlertProcessing(false);\r\n            setListFoundOldDisease(response);\r\n            setDataPatientsForSearchOldDisease(dataPatientsForSearchOldDiseaseDefault);\r\n            setDataPatientsForSearchOldDiseaseError(dataPatientsForSearchOldDiseaseErrorDefault);\r\n            handleResetField();\r\n            if(response.length > 0){\r\n                tableRef.current.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.which === 13 && e.code === \"Enter\") {\r\n            handleFindOldDisease();\r\n        }\r\n    }\r\n\r\n    const handleTableKeyDown = (event) => {\r\n        if (event.key === 'ArrowDown') {\r\n            setSelectedRowIndex((prevIndex) => (Math.min(prevIndex + 1, listFoundOldDisease.length - 1)));\r\n        } else if (event.key === 'ArrowUp') {\r\n            setSelectedRowIndex((prevIndex) => (Math.max(prevIndex - 1, 0)));\r\n        } else if (event.key === 'Enter' && selectedRowIndex !== null){\r\n            handleApplyDataPatientOldDisease(listFoundOldDisease[selectedRowIndex])\r\n        }\r\n    };\r\n\r\n    const handleApplyDataPatientOldDisease = async (foundOldDiseaseItem) => {\r\n        setOpenAlertProcessing(true);\r\n        const responseVaccinationByPatientId = await getVaccinationByPatientId(foundOldDiseaseItem.patientId);\r\n        const dataPantientOldOldDiseaseRegister = {\r\n            examinationId: '',\r\n            oldDisease: true,\r\n            height: '',\r\n            weight: '',\r\n            headCircumference: '',\r\n            reason: '',\r\n            vaccination: responseVaccinationByPatientId.vaccination,\r\n            medicalTypeId: responseVaccinationByPatientId.medicalTypeId,\r\n            userIdDoctor: '',\r\n            patient: {\r\n                patientId: foundOldDiseaseItem.patientId,\r\n                identifier: foundOldDiseaseItem.identifier,\r\n                address: foundOldDiseaseItem.address,\r\n                fullName: foundOldDiseaseItem.fullName,\r\n                dayOfBirth: foundOldDiseaseItem.dayOfBirth,\r\n                codeWard: foundOldDiseaseItem.codeWard,\r\n                gender: foundOldDiseaseItem.gender,\r\n                fullNameMother: foundOldDiseaseItem.fullNameMother,\r\n                phoneMother: foundOldDiseaseItem.phoneMother,\r\n                fullNameFather: foundOldDiseaseItem.fullNameFather,\r\n                phoneFather: foundOldDiseaseItem.phoneFather\r\n            }\r\n        }\r\n        props.setDataPatientsRegister(dataPantientOldOldDiseaseRegister);\r\n        setOpenAlertProcessing(false);\r\n        handleCloseModalOldDisease();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalOldDisease} onClose={(event, reason) => handleCloseModalOldDisease(event, reason)} disableEscapeKeyDown={true} sx={{'.MuiDialog-paperWidthMd': {maxWidth: '970px'}}}>\r\n                <DialogTitle sx={{ m: 0, p: 1.4, fontWeight: 'bolder', fontSize: '22px', textAlign: 'center' }}>Tìm bệnh cũ</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalOldDisease()}sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='medium'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{p: '10px 24px'}}>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around'}} component=\"form\" ref={formRef}>\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.patientId.title}</h6>} open={dataPatientsForSearchOldDiseaseError.patientId.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.patientId.isError === true : false}\r\n                                    label=\"Mã BN\" variant=\"outlined\" size='small'\r\n                                    autoFocus\r\n                                    inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                                    inputProps={{ maxLength: 12 }}\r\n                                    onChange={(e) => onChangePatientId(e.target.value)}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'patientId')}\r\n                                    onKeyDown={handleKeyDown} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.fullName.title}</h6>} open={dataPatientsForSearchOldDiseaseError.fullName.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}} \r\n                                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.fullName.isError === true : false}\r\n                                    label=\"Họ tên\" variant=\"outlined\" size='small'\r\n                                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                                    onKeyDown={(e) => handleEnterPress(e)} \r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                        <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                            <ThemeProvider theme={tooltipTheme}>\r\n                                <DemoContainer components={['DatePicker']}>\r\n                                    <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.dayOfBirth.title}</h6>} open={dataPatientsForSearchOldDiseaseError.dayOfBirth.openTooltip}>    \r\n                                        <Box sx={{width: 222}}>\r\n                                            <DatePicker label=\"Ngày sinh\" format='DD/MM/YYYY' \r\n                                                disableFuture={true} disableOpenPicker \r\n                                                renderInput={(params) => <TextField {...params} size='small' />}\r\n                                                slotProps={{  \r\n                                                    textField: \r\n                                                    { \r\n                                                        inputRef: dateFieldRef,\r\n                                                        error: true ? dataPatientsForSearchOldDiseaseError.dayOfBirth.isError === true : false, \r\n                                                        size: 'small', \r\n                                                        onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                                        onKeyDown: (e) => handleEnterPress(e)\r\n                                                    }, \r\n                                                }}\r\n                                                onChange={(value) => onChangeDayOfBirth(value)}\r\n                                            />\r\n                                        </Box>\r\n                                    </Tooltip>\r\n                                </DemoContainer>\r\n                            </ThemeProvider>      \r\n                        </LocalizationProvider>\r\n\r\n                        <ThemeProvider theme={tooltipTheme}>\r\n                            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsForSearchOldDiseaseError.phone.title}</h6>} open={dataPatientsForSearchOldDiseaseError.phone.openTooltip}>\r\n                                <TextField \r\n                                    sx={{'&.MuiTextField-root' : {marginTop: '7.5px'}}}\r\n                                    inputRef={(input) => input && focusField === 'phone' && input.focus()}\r\n                                    error={true ? dataPatientsForSearchOldDiseaseError.phone.isError === true : false}\r\n                                    label=\"Điện thoại cha/mẹ\" variant=\"outlined\" size='small'\r\n                                    inputProps={{ maxLength: 10 }}\r\n                                    onChange={(e) => onChangePhone(e.target.value)}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    onBlur={(e) => handleBlur(e.target.value, 'phone')}\r\n                                />\r\n                            </Tooltip>\r\n                        </ThemeProvider>\r\n\r\n                    </Box>\r\n\r\n                    <Box sx={{display: 'flex', justifyContent: 'center', mt: 1.6}}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => handleFindOldDisease()}>Tìm (Enter)</Button>\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        {\r\n                            listFoundOldDisease ? \r\n                                listFoundOldDisease.length !== 0 ? \r\n                                <>\r\n                                    <TableContainer component={Paper} sx={{boxShadow: 4, mt: 1.4}} tabIndex={0} onKeyDown={(event) => handleTableKeyDown(event)} ref={tableRef}>\r\n                                        <Table stickyHeader>\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '1rem'}}>Mã BN</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Họ tên</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Ngày sinh</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Giới tính</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Địa chỉ</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '1rem'}}>Cha/Mẹ</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listFoundOldDisease ? \r\n                                                    listFoundOldDisease.map((foundOldDiseaseItem, foundOldDiseaseIndex) => (\r\n                                                        <TableRow hover role=\"checkbox\" key={foundOldDiseaseIndex} sx={{cursor: 'pointer'}} \r\n                                                            selected={selectedRowIndex === foundOldDiseaseIndex} >\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.patientId}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullName}</TableCell>\r\n                                                            <TableCell align='left' >{moment(foundOldDiseaseItem.dayOfBirth).format('DD/MM/YYYY')}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.gender === true ? 'Nam' : 'Nữ'}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullAddress}</TableCell>\r\n                                                            <TableCell align='left' >{foundOldDiseaseItem.fullNameMother || foundOldDiseaseItem.fullNameFather}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                :\r\n                                                    null\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'green'}}>Tìm thấy {listFoundOldDisease.length} bệnh nhân</Typography>\r\n                                </>\r\n                                : \r\n                                    <Typography variant='subtitle1' sx={{textAlign: 'center', mt: 1.5, fontWeight: 'bolder', color: 'red'}}>Không tìm thấy bệnh nhân</Typography>\r\n                            :\r\n                            null\r\n                        }\r\n                    </Box>  \r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OldDisease","import React, { useState, useEffect, useRef } from 'react';\r\n//ExaminingSessios modal\r\nimport ExaminingSession from '../ManageExaminingSession/ExaminingSession';\r\n//old disease modal\r\nimport OldDisease from '../ManageOldDisease/OldDisease';\r\n// import OldDiseaseForRegister from '../ManageOldDisease/OldDiseaseForRegister';\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n//mui x date picker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DateField } from '@mui/x-date-pickers/DateField';\r\n//lodash\r\nimport _ from 'lodash';\r\n//scss\r\nimport './SCSS/Shared.scss';\r\n//moment\r\nimport moment from 'moment';\r\n//api\r\nimport { getListProvince, getListDistrict, getListWard, getFullAddressByIdWard } from '../../Service/PlaceService';\r\nimport { createMedicalBackRegister } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction BookMedical(props) {\r\n\r\n  const dataPatientsRegisterDefault = {\r\n    examinationId: '',\r\n    oldDisease: false,\r\n    height: '',\r\n    weight: '',\r\n    headCircumference: '',\r\n    reason: '',\r\n    vaccination: false,\r\n    medicalTypeId: '',\r\n    userIdDoctor: '',\r\n    patient: {\r\n      patientId: '',\r\n      identifier: '',\r\n      address: '',\r\n      fullName: '',\r\n      dayOfBirth: '',\r\n      codeWard: '',\r\n      gender: '',\r\n      fullNameMother: '',\r\n      phoneMother: '',\r\n      fullNameFather: '',\r\n      phoneFather: ''\r\n    }\r\n  }\r\n\r\n  const autocompleteValueDefault = { \r\n    dayOfBirth: null, \r\n    gender: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    province: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    district: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    ward: {\r\n      value: null,\r\n      openOption: false\r\n    }, \r\n    medicalType: {\r\n      value: null,\r\n      openOption: false\r\n    },\r\n    vaccination: false \r\n  }\r\n\r\n  const dataPatientsRegisterErrorDefault = { \r\n    identifier: { title: '', isError: false, openTooltip: false, focus: false },\r\n    patientId: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullName: { title: '', isError: false, openTooltip: false, focus: false },\r\n    dayOfBirth: { title: '', isError: false, openTooltip: false, focus: false },\r\n    gender: { title: '', isError: false, openTooltip: false, focus: false },\r\n    province: { title: '', isError: false, openTooltip: false, focus: false },\r\n    district: { title: '', isError: false, openTooltip: false, focus: false },\r\n    ward: { title: '', isError: false, openTooltip: false, focus: false },\r\n    address: { title: '', isError: false, openTooltip: false, focus: false },\r\n    fullNameMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneMother: { title: '', isError: false, openTooltip: false, focus: false },\r\n    phoneFather: { title: '', isError: false, openTooltip: false, focus: false },\r\n    height: { title: '', isError: false, openTooltip: false, focus: false },\r\n    weight: { title: '', isError: false, openTooltip: false, focus: false },\r\n    headCircumference: { title: '', isError: false, openTooltip: false, focus: false },\r\n    medicalType: { title: '', isError: false, openTooltip: false, focus: false },\r\n    reason: { title: '', isError: false, openTooltip: false, focus: false }\r\n  }\r\n\r\n  const listGender = [\r\n    {genderOrder: 1, genderName: 'Nam', genderValue: true},\r\n    {genderOrder: 2, genderName: 'Nữ', genderValue: false},\r\n  ]\r\n\r\n  const listMedicalType = [\r\n    {medicalTypeOrder: 1, medicalTypeName: 'Khám Nhi khoa phát triển', medicalTypeId: 1},\r\n    {medicalTypeOrder: 2, medicalTypeName: 'Khám trẻ nguy cơ cao', medicalTypeId: 2},\r\n  ]\r\n\r\n  const [openModalExaminingSession, setOpenModalExaminingSession] = useState(false);\r\n  const [isContinueSelectedExaminingSession, setIsContinueSelectedExaminingSession] = useState(false);\r\n\r\n  const [openModalOldDisease, setOpenModalOldDisease] = useState(false);\r\n\r\n  // const [openOldDiseaseRegister, setOpenOldDiseaseRegister] = useState(false);\r\n  // const [listOldDiseaseRegister, setListOldDiseaseRegister] = useState([]);\r\n\r\n  const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n  const [dataPatientsRegister, setDataPatientsRegister] = useState(dataPatientsRegisterDefault);\r\n  const [dataPatientsRegisterError, setDataPatientsRegisterError] = useState(dataPatientsRegisterErrorDefault);\r\n  const [focusField, setFocusField] = useState(null);\r\n\r\n  const [autocompleteValue, setAutocompleteValue] = useState(autocompleteValueDefault);\r\n\r\n  const [listProvince, setListProvince] = useState([]);\r\n  const [listDistrict, setListDistrict] = useState({list: [], loading: false});\r\n  const [listWard, setListWard] = useState({list: [], loading: false});\r\n\r\n  const formRef = useRef(null);\r\n  const firstFocusRef = useRef(null);\r\n  const dateFieldRef = useRef(null);\r\n  const typingRef = useRef(null);\r\n\r\n  const tooltipTheme = createTheme({\r\n    components: {\r\n      MuiTooltip: {\r\n        defaultProps: {\r\n          placement: 'bottom',\r\n          arrow: true,\r\n          componentsProps: {\r\n            tooltip: {\r\n              sx: {\r\n                bgcolor: '#d32f2f', \r\n              },\r\n            },\r\n            arrow: {\r\n              sx: {\r\n                color: '#d32f2f',\r\n              },\r\n            },\r\n          },\r\n          slotProps: {\r\n            popper: {\r\n              modifiers: [\r\n                {\r\n                  name: 'offset',\r\n                  options: {\r\n                    offset: [0, -7],\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (!/[0-9]/.test(event.key) && event.key !== 'Backspace' && event.key !== 'Delete' && event.key !== 'ArrowLeft' && event.key !== 'ArrowRight' && event.key !== 'Tab') \r\n    {\r\n        event.preventDefault();\r\n    }\r\n  }\r\n  \r\n  const filterOptions = (options, { inputValue }) => {\r\n    const lowercasedInput = inputValue.toLowerCase();\r\n\r\n    return options.filter(option => {\r\n      const lowercasedFullName = option.fullName.toLowerCase();\r\n      const initials = option.fullName.split(' ').map(word => word[0]).join('').toLowerCase();\r\n\r\n      return (\r\n        lowercasedFullName.includes(lowercasedInput) ||\r\n        initials.includes(lowercasedInput)\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleFocus = (fieldName) => {\r\n    if(fieldName === 'Gender'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.gender.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Province'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.province.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if (fieldName === 'District'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'Ward'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n    else if(fieldName === 'MedicalType'){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.medicalType.openOption = true\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleBlur = (value, fieldName) => {\r\n    if(value === '' || value === 'DD/MM/YYYY'){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n      if(fieldName === 'Identifier'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n        _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      // if(fieldName === 'dayOfBirth'){\r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.dayOfBirth.title = '';\r\n      //     _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n      //     _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n      //   _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PatientId'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.patientId.title = '';\r\n      //     _dataPatientsRegisterError.patientId.openTooltip = false;\r\n      //     _dataPatientsRegisterError.patientId.isError = false;\r\n      //     _dataPatientsRegisterError.patientId.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      // else if(fieldName === 'PhoneMother'){     \r\n      //   if(typingRef.current){\r\n      //     clearInterval(typingRef.current);\r\n      //   }\r\n      //   typingRef.current = setTimeout(() => {  \r\n      //     _dataPatientsRegisterError.phoneMother.title = '';\r\n      //     _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      //     _dataPatientsRegisterError.phoneMother.isError = false;\r\n      //     _dataPatientsRegisterError.phoneFather.focus = false;\r\n      //     setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      //   }, 10)\r\n      // }\r\n      if(fieldName === 'PhoneFather'){\r\n        if(typingRef.current){\r\n          clearInterval(typingRef.current);\r\n        }\r\n        typingRef.current = setTimeout(() => {  \r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }, 10)\r\n      }\r\n      else if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n    else if(value !== ''){\r\n      if(fieldName === 'Gender'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Province'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'District'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'Ward'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n      else if(fieldName === 'MedicalType'){\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = false;\r\n          return { ...prevAutocompleteValue }\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeIdentifier = (value) => {\r\n    if(value !== ''){\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 12){\r\n          _dataPatientsRegisterError.identifier.title = 'Mã định danh chưa đủ 12 số';\r\n          _dataPatientsRegisterError.identifier.openTooltip = true;\r\n          _dataPatientsRegisterError.identifier.isError = true;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.identifier = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.identifier.title = '';\r\n          _dataPatientsRegisterError.identifier.openTooltip = false;\r\n          _dataPatientsRegisterError.identifier.isError = false;\r\n          _dataPatientsRegisterError.identifier.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'identifier'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.identifier.title = '';\r\n      _dataPatientsRegisterError.identifier.openTooltip = false;\r\n      _dataPatientsRegisterError.identifier.isError = false;\r\n      _dataPatientsRegisterError.identifier.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangePatientId = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 8){\r\n          _dataPatientsRegisterError.patientId.title = 'Mã BN phải từ 8 đến 12 số';\r\n          _dataPatientsRegisterError.patientId.openTooltip = true;\r\n          _dataPatientsRegisterError.patientId.isError = true;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          if(focusField === 'patientId'){\r\n            setFocusField(null);\r\n          }\r\n          \r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.patientId = takenValue\r\n            return { ...prevDataPatientsRegister }\r\n          })\r\n\r\n          _dataPatientsRegisterError.patientId.title = '';\r\n          _dataPatientsRegisterError.patientId.openTooltip = false;\r\n          _dataPatientsRegisterError.patientId.isError = false;\r\n          _dataPatientsRegisterError.patientId.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    // else{\r\n    //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n    //   _dataPatientsRegisterError.patientId.title = '';\r\n    //   _dataPatientsRegisterError.patientId.openTooltip = false;\r\n    //   _dataPatientsRegisterError.patientId.isError = false;\r\n    //   _dataPatientsRegisterError.patientId.focus = false;\r\n    //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    // }  \r\n  }\r\n\r\n  const onChangeFullName = (value) => {\r\n    const takenValue = value\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullName = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(focusField === 'fullName'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      if(dataPatientsRegisterError.fullName.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullName.title = '';\r\n        _dataPatientsRegisterError.fullName.openTooltip = false;\r\n        _dataPatientsRegisterError.fullName.isError = false;\r\n        _dataPatientsRegisterError.fullName.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n\r\n      // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n      //   handleFindOldDisease();\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeDOB = (value) => {\r\n    if(value){\r\n      const takenValue = value._d;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const today = new Date();\r\n        const yearsDifference = today.getFullYear() - takenValue.getFullYear();\r\n        const monthsDifference = today.getMonth() - takenValue.getMonth();\r\n        const daysDifference = today.getDate() - takenValue.getDate();\r\n        const age = today.getFullYear() - takenValue.getFullYear();\r\n\r\n        let totalMonths = yearsDifference * 12 + monthsDifference;\r\n        let totalDays = daysDifference;\r\n\r\n        if (daysDifference < 0) {\r\n          totalMonths -= 1;\r\n          totalDays += 30; // Giả sử mỗi tháng có 30 ngày\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError};\r\n\r\n        if(today < takenValue || age > 2 || isNaN(age) || totalMonths > 24 || (totalMonths === 24 && totalDays > 29)){\r\n          _dataPatientsRegisterError.dayOfBirth.title = 'Bệnh nhân lớn hơn 24 tháng tuổi không thể khám';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n        }\r\n\r\n        else{\r\n          if(focusField === 'dayOfBirth'){\r\n            setFocusField(null);\r\n          }\r\n\r\n          const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n          prevDataPatientsRegister.patient.dayOfBirth = formattedDate\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          setAutocompleteValue(prevAutocompleteValue => {\r\n            prevAutocompleteValue.dayOfBirth = value\r\n            return {\r\n              ...prevAutocompleteValue\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.dayOfBirth.title = '';\r\n          _dataPatientsRegisterError.dayOfBirth.openTooltip = false;\r\n          _dataPatientsRegisterError.dayOfBirth.isError = false;\r\n          _dataPatientsRegisterError.dayOfBirth.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n\r\n          // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n          //   handleFindOldDisease();\r\n          // }\r\n        }\r\n      }, 100)\r\n    }  \r\n  }\r\n\r\n  const onSelectGender = (e, value) => {\r\n    if(focusField === 'gender'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.gender = value.genderValue\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.gender.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.gender.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.gender.title = '';\r\n      _dataPatientsRegisterError.gender.openTooltip = false;\r\n      _dataPatientsRegisterError.gender.isError = false;\r\n      _dataPatientsRegisterError.gender.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    // if(dataPatientsRegister.patient.fullName !== '' && dataPatientsRegister.patient.dayOfBirth !== '' && dataPatientsRegister.patient.gender !== ''){\r\n    //   handleFindOldDisease();\r\n    // }\r\n  }\r\n\r\n  const onSelectProvine = async (e, value) => {\r\n    if(focusField === 'province'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.province.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.district.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.district.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.province.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.province.title = '';\r\n      _dataPatientsRegisterError.province.openTooltip = false;\r\n      _dataPatientsRegisterError.province.isError = false;\r\n      _dataPatientsRegisterError.province.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    });\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = true\r\n      return {...prevListDistrict}\r\n    });\r\n\r\n    const responseListDistrict = await getListDistrict(value.code);\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = responseListDistrict\r\n      return {...prevListDistrict}\r\n    });\r\n  }\r\n\r\n  const onSelectDistrict = async (e, value) => {\r\n    if(focusField === 'district'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.district.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(autocompleteValue.ward.value !== null){\r\n      setAutocompleteValue(prevAutocompleteValue => {\r\n        prevAutocompleteValue.ward.value = null\r\n        return {\r\n          ...prevAutocompleteValue\r\n        }\r\n      })\r\n    }\r\n\r\n    if(dataPatientsRegisterError.district.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.district.title = '';\r\n      _dataPatientsRegisterError.district.openTooltip = false;\r\n      _dataPatientsRegisterError.district.isError = false;\r\n      _dataPatientsRegisterError.district.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = true\r\n      return {...prevListWard}\r\n    });\r\n    \r\n    const responseListWard = await getListWard(value.code);\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = responseListWard\r\n      return {...prevListWard}\r\n    })\r\n  }\r\n\r\n  const onSelectWard = (e, value) => {\r\n    if(focusField === 'ward'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.patient.codeWard = value.code\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.ward.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.ward.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.ward.title = '';\r\n      _dataPatientsRegisterError.ward.openTooltip = false;\r\n      _dataPatientsRegisterError.ward.isError = false;\r\n      _dataPatientsRegisterError.ward.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeFolk = (value) => {\r\n  }\r\n\r\n  const onChangeAddress = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'address'){\r\n        setFocusField(null);\r\n      }\r\n      \r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.address = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.address.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.address.title = '';\r\n        _dataPatientsRegisterError.address.openTooltip = false;\r\n        _dataPatientsRegisterError.address.isError = false;\r\n        _dataPatientsRegisterError.address.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeFullNameMother = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'fullNameMother'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameMother = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneMother = (value) => {\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        if(focusField === 'phoneMother'){\r\n          setFocusField(null);\r\n        }\r\n\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneMother.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneMother.isError = true;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneMother = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneMother.title = '';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneMother.isError = false;\r\n      _dataPatientsRegisterError.phoneMother.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }  \r\n  }\r\n\r\n  const onChangeFullNameFather = (value) => {\r\n    if(focusField === 'fullNameFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.patient.fullNameFather = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.fullNameMother.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.fullNameMother.title = '';\r\n        _dataPatientsRegisterError.fullNameMother.openTooltip = false;\r\n        _dataPatientsRegisterError.fullNameMother.isError = false;\r\n        _dataPatientsRegisterError.fullNameMother.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangePhoneFather = (e, value) => {\r\n    if(focusField === 'phoneFather'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    if(value !== ''){\r\n      const takenValue = value;\r\n      if(typingRef.current){\r\n        clearInterval(typingRef.current);\r\n      }\r\n\r\n      typingRef.current = setTimeout(() => {\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        if(takenValue.length < 10){\r\n          _dataPatientsRegisterError.phoneFather.title = 'Số điện thoại chưa đủ 10 số';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = true;\r\n          _dataPatientsRegisterError.phoneFather.isError = true;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n        else{\r\n          setDataPatientsRegister(prevDataPatientsRegister => {\r\n            prevDataPatientsRegister.patient.phoneFather = takenValue\r\n            return {\r\n              ...prevDataPatientsRegister\r\n            }\r\n          })\r\n\r\n          _dataPatientsRegisterError.phoneFather.title = '';\r\n          _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneFather.isError = false;\r\n          _dataPatientsRegisterError.phoneFather.focus = false;\r\n\r\n          _dataPatientsRegisterError.phoneMother.title = '';\r\n          _dataPatientsRegisterError.phoneMother.openTooltip = false;\r\n          _dataPatientsRegisterError.phoneMother.isError = false;\r\n          _dataPatientsRegisterError.phoneMother.focus = false;\r\n          setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n        }\r\n      }, 100)\r\n    }\r\n    else{\r\n      if(focusField === 'phoneFather'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.phoneFather.title = '';\r\n      _dataPatientsRegisterError.phoneFather.openTooltip = false;\r\n      _dataPatientsRegisterError.phoneFather.isError = false;\r\n      _dataPatientsRegisterError.phoneFather.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeHeight = (value) => {\r\n    const takenValue = value;\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'height'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.height = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.height.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.height.title = '';\r\n        _dataPatientsRegisterError.height.openTooltip = false;\r\n        _dataPatientsRegisterError.height.isError = false;\r\n        _dataPatientsRegisterError.height.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeWeight = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'weight'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.weight = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.weight.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.weight.title = '';\r\n        _dataPatientsRegisterError.weight.openTooltip = false;\r\n        _dataPatientsRegisterError.weight.isError = false;\r\n        _dataPatientsRegisterError.weight.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeHeadCircumference = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      if(focusField === 'headCircumference'){\r\n        setFocusField(null);\r\n      }\r\n\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.headCircumference = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      if(dataPatientsRegisterError.headCircumference.isError){\r\n        const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n        _dataPatientsRegisterError.headCircumference.title = '';\r\n        _dataPatientsRegisterError.headCircumference.openTooltip = false;\r\n        _dataPatientsRegisterError.headCircumference.isError = false;\r\n        _dataPatientsRegisterError.headCircumference.focus = false;\r\n        setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const onSelectMedicalType = (e, value) => {\r\n    if(focusField === 'medicalType'){\r\n      setFocusField(null);\r\n    }\r\n\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.medicalTypeId = value.medicalTypeId\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.medicalType.value = value\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n\r\n    if(dataPatientsRegisterError.medicalType.isError){\r\n      const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      _dataPatientsRegisterError.medicalType.title = '';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = false;\r\n      _dataPatientsRegisterError.medicalType.isError = false;\r\n      _dataPatientsRegisterError.medicalType.focus = false;\r\n      setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    }\r\n  }\r\n\r\n  const onChangeReason = (value) => {\r\n    const takenValue = value;\r\n\r\n    if(typingRef.current){\r\n      clearInterval(typingRef.current);\r\n    }\r\n\r\n    typingRef.current = setTimeout(() => {\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.reason = takenValue\r\n        return {\r\n          ...prevDataPatientsRegister\r\n        }\r\n      })\r\n\r\n      // if(dataPatientsRegisterError.reason.isError){\r\n      //   const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n      //   _dataPatientsRegisterError.reason.isError = false;\r\n      //   setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n      // }\r\n    }, 100)\r\n  }\r\n\r\n  const onChangeVaccination = (bool) => {\r\n    setDataPatientsRegister(prevDataPatientsRegister => {\r\n      prevDataPatientsRegister.vaccination = bool\r\n      return {\r\n        ...prevDataPatientsRegister\r\n      }\r\n    })\r\n\r\n    setAutocompleteValue(prevAutocompleteValue => {\r\n      prevAutocompleteValue.vaccination = bool\r\n      return {\r\n        ...prevAutocompleteValue\r\n      }\r\n    })\r\n  }\r\n\r\n  const checkValidate = () => {\r\n    let isValid = true;\r\n    const _dataPatientsRegisterError = {...dataPatientsRegisterError}\r\n\r\n    if(dataPatientsRegisterError.identifier.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.identifier.focus = true;\r\n        setFocusField('identifier');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.patientId === ''){\r\n      _dataPatientsRegisterError.patientId.title = 'Bạn chưa nhập mã bệnh nhân';\r\n      _dataPatientsRegisterError.patientId.openTooltip = true;\r\n      _dataPatientsRegisterError.patientId.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.patientId.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.patientId.focus = true;\r\n        setFocusField('patientId');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullName === ''){\r\n      _dataPatientsRegisterError.fullName.title = 'Bạn chưa nhập họ tên';\r\n      _dataPatientsRegisterError.fullName.openTooltip = true;\r\n      _dataPatientsRegisterError.fullName.isError = true;\r\n      if(Object.values(dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullName.focus = true;\r\n        setFocusField('fullName');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.dayOfBirth === ''){\r\n      _dataPatientsRegisterError.dayOfBirth.title = 'Bạn chưa nhập ngày sinh';\r\n      _dataPatientsRegisterError.dayOfBirth.openTooltip = true;\r\n      _dataPatientsRegisterError.dayOfBirth.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.dayOfBirth.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.dayOfBirth.focus = true;\r\n        if (dateFieldRef.current) {\r\n          dateFieldRef.current.focus(); // Đặt focus vào dateField khi có lỗi\r\n        }\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.gender === ''){\r\n      _dataPatientsRegisterError.gender.title = 'Bạn chưa chọn giới tính';\r\n      _dataPatientsRegisterError.gender.openTooltip = true;\r\n      _dataPatientsRegisterError.gender.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.gender.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.gender.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n      setFocusField('gender');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.province.value === null){\r\n      _dataPatientsRegisterError.province.title = 'Bạn chưa chọn tỉnh thành';\r\n      _dataPatientsRegisterError.province.openTooltip = true;\r\n      _dataPatientsRegisterError.province.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.province.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.province.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('province');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.district.value === null){\r\n      _dataPatientsRegisterError.district.title = 'Bạn chưa chọn quận huyện';\r\n      _dataPatientsRegisterError.district.openTooltip = true;\r\n      _dataPatientsRegisterError.district.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.district.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.district.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('district');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(autocompleteValue.ward.value === null){\r\n      _dataPatientsRegisterError.ward.title = 'Bạn chưa chọn phường xã';\r\n      _dataPatientsRegisterError.ward.openTooltip = true;\r\n      _dataPatientsRegisterError.ward.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.ward.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.ward.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('ward');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.address === ''){\r\n      _dataPatientsRegisterError.address.title = 'Bạn chưa nhập địa chỉ';\r\n      _dataPatientsRegisterError.address.openTooltip = true;\r\n      _dataPatientsRegisterError.address.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.address.focus = true;\r\n        setFocusField('address');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.fullNameMother === '' && dataPatientsRegister.patient.fullNameFather === ''){\r\n      _dataPatientsRegisterError.fullNameMother.title = 'Bạn chưa nhập tên phụ huynh';\r\n      _dataPatientsRegisterError.fullNameMother.openTooltip = true;\r\n      _dataPatientsRegisterError.fullNameMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.fullNameMother.focus = true;\r\n        setFocusField('fullNameMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.patient.phoneMother === '' && dataPatientsRegister.patient.phoneFather === ''){\r\n      _dataPatientsRegisterError.phoneMother.title = 'Bạn chưa nhập số điện thoại';\r\n      _dataPatientsRegisterError.phoneMother.openTooltip = true;\r\n      _dataPatientsRegisterError.phoneMother.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneMother.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneMother.focus = true;\r\n        setFocusField('phoneMother');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegisterError.phoneFather.title !== ''){\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.phoneFather.focus = true;\r\n        setFocusField('phoneFather');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.height === ''){\r\n      _dataPatientsRegisterError.height.title = 'Bạn chưa nhập chiều cao';\r\n      _dataPatientsRegisterError.height.openTooltip = true;\r\n      _dataPatientsRegisterError.height.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.height.focus = true;\r\n        setFocusField('height');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.weight === ''){\r\n      _dataPatientsRegisterError.weight.title = 'Bạn chưa nhập cân nặng';\r\n      _dataPatientsRegisterError.weight.openTooltip = true;\r\n      _dataPatientsRegisterError.weight.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.weight.focus = true;\r\n        setFocusField('weight');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.headCircumference === ''){\r\n      _dataPatientsRegisterError.headCircumference.title = 'Bạn chưa nhập số vòng đầu';\r\n      _dataPatientsRegisterError.headCircumference.openTooltip = true;\r\n      _dataPatientsRegisterError.headCircumference.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.headCircumference.focus = true;\r\n        setFocusField('headCircumference');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    if(dataPatientsRegister.medicalTypeId === ''){\r\n      _dataPatientsRegisterError.medicalType.title = 'Bạn chưa chọn loại hình khám';\r\n      _dataPatientsRegisterError.medicalType.openTooltip = true;\r\n      _dataPatientsRegisterError.medicalType.isError = true;\r\n      if(Object.values(_dataPatientsRegisterError).every(item => item.focus === false)){\r\n        _dataPatientsRegisterError.medicalType.focus = true;\r\n        setAutocompleteValue(prevAutocompleteValue => {\r\n          prevAutocompleteValue.medicalType.openOption = true\r\n          return {...prevAutocompleteValue}\r\n        })\r\n        setFocusField('medicalType');\r\n      }\r\n      isValid = false;\r\n    }\r\n\r\n    // if(dataPatientsRegister.reason === ''){\r\n    //   _dataPatientsRegisterError.reason.isError = true;\r\n    //   isValid = false;\r\n    // }\r\n\r\n    if(dataPatientsRegister.userIdDoctor === ''){\r\n      if(props.currentDoctorExamining.userIdDoctor === '') {\r\n        toast.error('Bạn chưa chọn bác sĩ khám cho ngày hôm nay!', {toastId: 'error1'});\r\n        isValid = false;\r\n      }\r\n\r\n    else if(props.currentDoctorExamining.userIdDoctor !== ''){\r\n      setDataPatientsRegister(prevDataPatientsRegister => {\r\n        prevDataPatientsRegister.userIdDoctor = props.currentDoctorExamining.userIdDoctor\r\n          return prevDataPatientsRegister\r\n        })\r\n      }\r\n    }\r\n\r\n    setDataPatientsRegisterError(_dataPatientsRegisterError);\r\n    return isValid;\r\n  }\r\n\r\n  const handleMedicalRegister = () => {\r\n    setTimeout(() => {\r\n      if(checkValidate()){\r\n        firstFocusRef.current.focus();\r\n        if(props.dataPantientAppointmentsToday){\r\n          handleMedicalBackRegister();\r\n        }\r\n        else{\r\n          setOpenModalExaminingSession(true);\r\n        }\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  const handleMedicalBackRegister = async () => {\r\n    setOpenAlertProcessing(true);\r\n    const responseCreateMedicalBackRegister = await createMedicalBackRegister(dataPatientsRegister);\r\n    if(responseCreateMedicalBackRegister.status === 200){\r\n      toast.success(responseCreateMedicalBackRegister.data, {toastId: 'success5'})\r\n      props.setCompleteMedicalRegister(true);\r\n      handleResetField();\r\n    }\r\n    else{\r\n      toast.error(responseCreateMedicalBackRegister.data, {toastId: 'error5'})\r\n    }\r\n    setOpenAlertProcessing(false);\r\n  }\r\n\r\n  const handleApplyPantientOldDiseaseData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = dataPatientsRegister.patient.identifier;\r\n    document.getElementById('patientId').value = dataPatientsRegister.patient.patientId;\r\n    document.getElementById('patientFullName').value = dataPatientsRegister.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(dataPatientsRegister.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(dataPatientsRegister.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === dataPatientsRegister.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === dataPatientsRegister.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = dataPatientsRegister.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = dataPatientsRegister.patient.address;\r\n    document.getElementById('patientFullNameMother').value = dataPatientsRegister.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = dataPatientsRegister.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = dataPatientsRegister.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = dataPatientsRegister.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('height');\r\n  }\r\n\r\n  const handleApplyPantientAppointmentsTodayData = async () => {\r\n    setOpenAlertProcessing(true);\r\n    document.getElementById('patientIdentifier').value = props.dataPantientAppointmentsToday.patient.identifier;\r\n    document.getElementById('patientId').value = props.dataPantientAppointmentsToday.patient.patientId;\r\n    document.getElementById('patientFullName').value = props.dataPantientAppointmentsToday.patient.fullName;\r\n\r\n    const _autocompleteValue = {...autocompleteValue};\r\n    _autocompleteValue.dayOfBirth = moment(props.dataPantientAppointmentsToday.patient.dayOfBirth);\r\n\r\n    const response = await getFullAddressByIdWard(props.dataPantientAppointmentsToday.patient.codeWard);\r\n    const responseListDistrict = await getListDistrict(response.provinceCode);\r\n    const responseListWard = await getListWard(response.districtCode);\r\n\r\n    const indexListGender = listGender.findIndex(gender => gender.genderValue === props.dataPantientAppointmentsToday.patient.gender);\r\n    const indexListProvince = listProvince.findIndex(province => province.code === response.provinceCode);\r\n    const indexListDistrict = responseListDistrict.findIndex(district => district.code === response.districtCode);\r\n    const indexListWard = responseListWard.findIndex(ward => ward.code === response.wardCode);\r\n    const indexListMedicalType = listMedicalType.findIndex(medicalType => medicalType.medicalTypeId === props.dataPantientAppointmentsToday.medicalTypeId);\r\n    \r\n    _autocompleteValue.gender.value = listGender[indexListGender];\r\n    _autocompleteValue.province.value = listProvince[indexListProvince];\r\n    _autocompleteValue.district.value = responseListDistrict[indexListDistrict];\r\n    _autocompleteValue.ward.value = responseListWard[indexListWard];\r\n    _autocompleteValue.medicalType.value = listMedicalType[indexListMedicalType];\r\n    _autocompleteValue.vaccination = props.dataPantientAppointmentsToday.vaccination;\r\n    setAutocompleteValue(_autocompleteValue);\r\n\r\n    document.getElementById('patientAddress').value = props.dataPantientAppointmentsToday.patient.address;\r\n    document.getElementById('patientFullNameMother').value = props.dataPantientAppointmentsToday.patient.fullNameMother;\r\n    document.getElementById('patientPhoneMother').value = props.dataPantientAppointmentsToday.patient.phoneMother\r\n    document.getElementById('patientFullNameFather').value = props.dataPantientAppointmentsToday.patient.fullNameFather;\r\n    document.getElementById('patientPhoneFather').value = props.dataPantientAppointmentsToday.patient.phoneFather;\r\n\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenAlertProcessing(false);\r\n    setFocusField('height');\r\n  }\r\n\r\n  const handleResetField = () => {\r\n    formRef.current.reset();\r\n    const inputs = formRef.current.querySelectorAll('input, textarea');\r\n    inputs.forEach(input => input.dispatchEvent(new Event('input', { bubbles: true })));\r\n\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n\r\n    setListDistrict(prevListDistrict => {\r\n      prevListDistrict.loading = false\r\n      prevListDistrict.list = []\r\n      return {...prevListDistrict}\r\n    })\r\n    setListWard(prevListWard => {\r\n      prevListWard.loading = false\r\n      prevListWard.list = []\r\n      return {...prevListWard}\r\n    })\r\n\r\n    if(props.dataPantientAppointmentsToday){\r\n      props.setDataPantientAppointmentsToday();\r\n    }\r\n\r\n    setFocusField(null);\r\n\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n\r\n    firstFocusRef.current.focus();\r\n  }\r\n\r\n  const handleOpenModalOldDisease = () => {\r\n    handleResetField();\r\n    setDataPatientsRegister(dataPatientsRegisterDefault);\r\n    setAutocompleteValue(autocompleteValueDefault);\r\n    setDataPatientsRegisterError(dataPatientsRegisterErrorDefault);\r\n    setOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetListProvince = async () => {\r\n    const response = await getListProvince();\r\n    if(response !== 400){\r\n      setListProvince(response);\r\n    }\r\n  }\r\n\r\n  // const handleFindOldDisease = async () => {\r\n  //   const response = await getListOldDisease('', '', dataPatientsRegister.patient.fullName, dataPatientsRegister.patient.dayOfBirth, dataPatientsRegister.patient.gender);\r\n  //   if(response.length !== 0){\r\n  //     setListOldDiseaseRegister(response);\r\n  //     setOpenOldDiseaseRegister(true);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    handleGetListProvince();\r\n    firstFocusRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(dataPatientsRegister.oldDisease === true){\r\n      handleApplyPantientOldDiseaseData();\r\n    }\r\n  }, [dataPatientsRegister.oldDisease])\r\n\r\n  useEffect(() => {\r\n    if(props.dataPantientAppointmentsToday){\r\n      setDataPatientsRegister(props.dataPantientAppointmentsToday);\r\n      handleApplyPantientAppointmentsTodayData();\r\n    }\r\n  }, [props.dataPantientAppointmentsToday]) \r\n\r\n  useEffect(() => {\r\n    if(props.onF2Press){\r\n      if(openModalExaminingSession === true && openModalOldDisease === false){\r\n        setIsContinueSelectedExaminingSession(true);\r\n        props.setOnF2Press(false);\r\n      }\r\n      else{\r\n        handleMedicalRegister();\r\n        props.setOnF2Press(false);\r\n      }\r\n    }\r\n    \r\n    if(props.onF4Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF4Press(false);\r\n      }\r\n      else{\r\n        handleResetField();\r\n        props.setOnF4Press(false);\r\n      }\r\n    }\r\n\r\n    if(props.onF8Press){\r\n      if(openModalExaminingSession === true || openModalOldDisease === true){\r\n        props.setOnF8Press(false);\r\n      }\r\n      else{\r\n        handleOpenModalOldDisease();\r\n        props.setOnF8Press(false);\r\n      }\r\n    }\r\n  }, [props.onF2Press, props.onF4Press, props.onF8Press])\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{'&.MuiContainer-maxWidthLg': {pr: 0}}}>\r\n        <Box sx={{ minHeight: '36.4rem', borderRadius: '20px', boxShadow: 5, pt: 1.2, pb: 1.2, pl: 2.4, pr: 2.4, mt: 1.5}}>\r\n          <Typography variant='h6' sx={{textAlign: 'center', fontWeight: 'bolder', color: 'blue'}}>Thông tin đăng ký khám</Typography> \r\n          <Box sx={{display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap'}} component=\"form\" ref={formRef}>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.identifier.title}</h6>} open={dataPatientsRegisterError.identifier.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.identifier.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã định danh\" variant=\"outlined\" id='patientIdentifier'\r\n                  inputRef={focusField === 'identifier' ? (input) => input && focusField === 'identifier' && input.focus() : firstFocusRef}\r\n                  onChange={(e) => onChangeIdentifier(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'Identifier')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n          <ThemeProvider theme={tooltipTheme}>\r\n            <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.patientId.title}</h6>} open={dataPatientsRegisterError.patientId.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}> \r\n              <div style={{width: '18%', marginTop: '20px'}}>\r\n                <TextField error={true ? dataPatientsRegisterError.patientId.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                  label=\"Mã BN\" variant=\"outlined\" id='patientId'\r\n                  inputRef={(input) => input && focusField === 'patientId' && input.focus()}\r\n                  onChange={(e) => onChangePatientId(e.target.value)}\r\n                  onKeyDown={handleKeyDown}\r\n                  onBlur={(e) => handleBlur(e.target.value, 'PatientId')}\r\n                  inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 12 }}\r\n                  InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                /> \r\n              </div>\r\n            </Tooltip>\r\n          </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullName.title}</h6>} open={dataPatientsRegisterError.fullName.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }} \r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [37, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              > \r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullName.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên\" variant=\"outlined\" id=\"patientFullName\"                   \r\n                    inputRef={(input) => input && focusField === 'fullName' && input.focus()}\r\n                    onChange={(e) => onChangeFullName(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  /> \r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n      \r\n            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n              <ThemeProvider theme={tooltipTheme}>\r\n                <DemoContainer components={['DatePicker']} >\r\n                  <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.dayOfBirth.title}</h6>} open={dataPatientsRegisterError.dayOfBirth.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>    \r\n                    <Box sx={{width: 142, mt: '12px !important'}}>\r\n                      <div style={{width: '100%', }}>\r\n                        <DateField label=\"Ngày sinh\" \r\n                          format='DD/MM/YYYY' value={autocompleteValue.dayOfBirth}\r\n                          disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                          slotProps={{ \r\n                            textField: \r\n                              { \r\n                                inputRef: dateFieldRef,\r\n                                error: true ? dataPatientsRegisterError.dayOfBirth.isError === true : false,\r\n                                onBlur: (e) => handleBlur(e.target.value, 'dayOfBirth'),\r\n                                sx: {'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } },\r\n                              }\r\n                          }}\r\n                          onChange={(value) => onChangeDOB(value)}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  </Tooltip>\r\n                </DemoContainer>\r\n              </ThemeProvider>      \r\n            </LocalizationProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.gender.title}</h6>} open={dataPatientsRegisterError.gender.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '12%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientGender' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.gender.value}\r\n                    options={listGender} \r\n                    getOptionLabel={(option) => option.genderName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.genderName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectGender(e, value)}\r\n                    open={autocompleteValue.gender.openOption}\r\n                    onFocus={() => handleFocus('Gender')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Gender')}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Giới tính\" \r\n                        inputRef={(input) => input && focusField === 'gender' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.gender.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n             \r\n            {/* <TextField label=\"Dân tộc\" variant=\"outlined\" sx={{width: '12%', '&.MuiTextField-root' : {marginTop: '15px'}}}/> */}\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.province.title}</h6>} open={dataPatientsRegisterError.province.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '19.2%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.province.value}\r\n                    options={listProvince} \r\n                    noOptionsText={'Đang tải...'}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.name}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectProvine(e, value)}\r\n                    open={autocompleteValue.province.openOption}\r\n                    onFocus={() => handleFocus('Province')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'Province')}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Thành phố\" \r\n                        inputRef={(input) => input && focusField === 'province' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.province.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.district.title}</h6>} open={dataPatientsRegisterError.district.openTooltip} placement=\"top\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '24%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.district.value}\r\n                    options={listDistrict.list} \r\n                    noOptionsText={listDistrict.loading ? 'Đang tải...' : ''}\r\n                    open={autocompleteValue.district.openOption}\r\n                    onFocus={() => handleFocus('District')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'District')}\r\n                    filterOptions={filterOptions}\r\n                    getOptionLabel={(option) => option.name}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.fullName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectDistrict(e, value)}\r\n                    renderInput={(params) => (\r\n                      <TextField {...params} \r\n                        label=\"Quận/Huyện\" \r\n                        inputRef={(input) => input && focusField === 'district' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.district.isError === true : false} \r\n                        sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                        InputProps={{\r\n                          ...params.InputProps,\r\n                          endAdornment: (\r\n                            <>\r\n                              {listDistrict.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                              {params.InputProps.endAdornment}\r\n                            </>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <>\r\n                <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.ward.title}</h6>} open={dataPatientsRegisterError.ward.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                  <div style={{width: '23.5%', marginTop: '20px'}}>\r\n                    <Autocomplete disablePortal disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                      value={autocompleteValue.ward.value}\r\n                      options={listWard.list} \r\n                      noOptionsText={listWard.loading ? 'Đang tải...' : ''}\r\n                      filterOptions={filterOptions}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderOption={(props, option) => (\r\n                        <li {...props}>\r\n                          {option.fullName}\r\n                        </li>\r\n                      )}\r\n                      onChange={(e, value) => onSelectWard(e, value)}\r\n                      open={autocompleteValue.ward.openOption}\r\n                      onFocus={() => handleFocus('Ward')}\r\n                      onBlur={(e) => handleBlur(e.target.value, 'Ward')}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} \r\n                          label=\"Phường/Xã\" \r\n                          inputRef={(input) => input && focusField === 'ward' && input.focus()}\r\n                          error={true ? dataPatientsRegisterError.ward.isError === true : false} \r\n                          sx={{'& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } }}\r\n                          InputProps={{\r\n                            ...params.InputProps,\r\n                            endAdornment: (\r\n                              <>\r\n                                {listWard.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                                {params.InputProps.endAdornment}\r\n                              </>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      )}\r\n                      disableClearable // Bỏ icon xóa\r\n                      popupIcon={null} // Bỏ icon dropdown\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.address.title}</h6>} open={dataPatientsRegisterError.address.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.address.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Địa chỉ\" variant=\"outlined\" id='patientAddress'\r\n                    inputRef={(input) => input && focusField === 'address' && input.focus()}\r\n                    onChange={(e) => onChangeAddress(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.fullNameMother.title}</h6>} open={dataPatientsRegisterError.fullNameMother.openTooltip} placement=\"left\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30%', display: 'inline-grid', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.fullNameMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Họ tên mẹ\" variant=\"outlined\" id='patientFullNameMother'\r\n                    inputRef={(input) => input && focusField === 'fullNameMother' && input.focus()}\r\n                    autoFocus={dataPatientsRegisterError.fullNameMother.focus}\r\n                    onChange={(e) => onChangeFullNameMother(e.target.value)}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneMother.title}</h6>} open={dataPatientsRegisterError.phoneMother.openTooltip} placement=\"bottom\" PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField error={true ? dataPatientsRegisterError.phoneMother.isError === true : false} disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    label=\"Điện thoại\" variant=\"outlined\" id='patientPhoneMother' \r\n                    inputRef={(input) => input && focusField === 'phoneMother' && input.focus()}\r\n                    onChange={(e) => onChangePhoneMother(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneMother')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n\r\n            <TextField label=\"Họ tên cha\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n              variant=\"outlined\" id='patientFullNameFather' \r\n              sx={{width: '30.4%', '&.MuiTextField-root' : {marginTop: '20px'}}} \r\n              onChange={(e) => onChangeFullNameFather(e.target.value)}\r\n              inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"} }}\r\n              InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n            />\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.phoneFather.title}</h6>} open={dataPatientsRegisterError.phoneFather.openTooltip}>\r\n                <div style={{width: '18%', marginTop: '20px'}}>\r\n                  <TextField label=\"Điện thoại\" disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    inputRef={(input) => input && focusField === 'phoneFather' && input.focus()}\r\n                    variant=\"outlined\" id='patientPhoneFather'\r\n                    onChange={(e) => onChangePhoneFather(e, e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'PhoneFather')}\r\n                    inputProps={{ style: { WebkitTextFillColor: dataPatientsRegister.oldDisease ? \"#ff1744\" :  \"black\"}, maxLength: 10 }}\r\n                    InputLabelProps={dataPatientsRegister.oldDisease === true ? {shrink: Boolean(true) } : null}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.height.title}</h6>} open={dataPatientsRegisterError.height.openTooltip} placement='left' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Chiều cao bé\" variant=\"outlined\" id='patientHeight' error={true ? dataPatientsRegisterError.height.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'height' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.weight.title}</h6>} open={dataPatientsRegisterError.weight.openTooltip} PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Cân nặng bé\" variant=\"outlined\" id='patientWeight' error={true ? dataPatientsRegisterError.weight.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'weight' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(kg)</InputAdornment>}}\r\n                    onChange={(e) => onChangeWeight(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>  \r\n            \r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.headCircumference.title}</h6>} open={dataPatientsRegisterError.headCircumference.openTooltip} placement='top-start' PopperProps={{sx: { zIndex: 2 } }}\r\n                slotProps={{\r\n                  popper: {\r\n                    modifiers: [\r\n                      {\r\n                        name: 'offset',\r\n                        options: { offset: [70, -7], },\r\n                      },\r\n                    ],\r\n                  },\r\n                }} \r\n              >\r\n                <div style={{width: '22%', marginTop: '20px'}}>\r\n                  <TextField label=\"Vòng đầu bé\" variant=\"outlined\" id='patientHeadCircumference' error={true ? dataPatientsRegisterError.headCircumference.isError === true : false}\r\n                    inputRef={(input) => input && focusField === 'headCircumference' && input.focus()}\r\n                    InputProps={{endAdornment: <InputAdornment position=\"end\">(cm)</InputAdornment>}}\r\n                    onChange={(e) => onChangeHeadCircumference(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.medicalType.title}</h6>} open={dataPatientsRegisterError.medicalType.openTooltip} placement='bottom' PopperProps={{sx: { zIndex: 2 } }}>\r\n                <div style={{width: '30.5%', marginTop: '20px'}}>\r\n                  <Autocomplete disablePortal id='patientMedicalType' disabled={dataPatientsRegister.oldDisease === true ? true : false}\r\n                    value={autocompleteValue.medicalType.value}\r\n                    options={listMedicalType} \r\n                    getOptionLabel={(option) => option.medicalTypeName}\r\n                    renderOption={(props, option) => (\r\n                      <li {...props}>\r\n                        {option.medicalTypeName}\r\n                      </li>\r\n                    )}\r\n                    onChange={(e, value) => onSelectMedicalType(e, value)}\r\n                    open={autocompleteValue.medicalType.openOption}\r\n                    onFocus={() => handleFocus('MedicalType')}\r\n                    onBlur={(e) => handleBlur(e.target.value, 'MedicalType')}\r\n                    renderInput={(params) => ( \r\n                      <TextField {...params} \r\n                        label=\"Loại hình khám\" \r\n                        inputRef={(input) => input && focusField === 'medicalType' && input.focus()}\r\n                        error={true ? dataPatientsRegisterError.medicalType.isError === true : false} \r\n                        sx={{\r\n                          '& .MuiInputBase-input': { WebkitTextFillColor: dataPatientsRegister.oldDisease === true ? '#ff1744' : '' } ,\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.Mui-disabled.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'},\r\n                          '& .MuiInputBase-root.MuiOutlinedInput-root.MuiInputBase-colorPrimary.MuiInputBase-fullWidth.MuiInputBase-formControl.MuiInputBase-adornedEnd.MuiAutocomplete-inputRoot.css-154xyx0-MuiInputBase-root-MuiOutlinedInput-root': {paddingLeft: '4px', paddingRight: '0px'}\r\n                        }}\r\n                      /> \r\n                    )}\r\n                    disableClearable // Bỏ icon xóa\r\n                    popupIcon={null} // Bỏ icon dropdown\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n\r\n            <ThemeProvider theme={tooltipTheme}>\r\n              <Tooltip title={<h6 style={{ margin: '0px' }}>{dataPatientsRegisterError.reason.title}</h6>} open={dataPatientsRegisterError.reason.openTooltip} >\r\n                <div style={{width: '100%' }}>\r\n                  <TextField fullWidth label=\"Lý do khám\" multiline rows={3} variant=\"outlined\" id='patientReason' error={true ? dataPatientsRegisterError.reason.isError === true : false}\r\n                    sx={{'&.MuiTextField-root' : {marginTop: '20px'}}} \r\n                    onChange={(e) => onChangeReason(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </ThemeProvider>\r\n            \r\n            <FormControlLabel control={<Checkbox checked={autocompleteValue.vaccination}/>} sx={{width: '100%'}}\r\n              label=\"Bệnh nhân có tham gia tiêm ngừa\" onChange={(e) => onChangeVaccination(e.target.checked)}/>  \r\n\r\n            <Box sx={{display: 'flex', justifyContent: 'center', mt: 1, width: '100%'}}>\r\n              <Button variant=\"contained\" color=\"primary\" sx={{mr: 1}} onClick={() => handleMedicalRegister()}>Đăng ký (f2)</Button>\r\n              <Button variant=\"contained\" color=\"warning\" onClick={() => handleResetField()}>Làm mới (f4)</Button>\r\n              <Button variant=\"contained\" color=\"error\" sx={{ml: 1}} onClick={() => handleOpenModalOldDisease()}>Bệnh cũ (f8)</Button>\r\n            </Box>\r\n          </Box>         \r\n        </Box>\r\n      </Container>\r\n\r\n      <ExaminingSession \r\n        openModalExaminingSession={openModalExaminingSession} setOpenModalExaminingSession={setOpenModalExaminingSession} \r\n        handleResetField={handleResetField} setCompleteMedicalRegister={props.setCompleteMedicalRegister}\r\n        isContinueSelectedExaminingSession={isContinueSelectedExaminingSession} setIsContinueSelectedExaminingSession={setIsContinueSelectedExaminingSession}\r\n        dataPatientsRegister={dataPatientsRegister} \r\n      />\r\n\r\n      <OldDisease \r\n        openModalOldDisease={openModalOldDisease} setOpenModalOldDisease={setOpenModalOldDisease}\r\n        dataPatientsRegister={dataPatientsRegister} setDataPatientsRegister={setDataPatientsRegister}\r\n      />\r\n\r\n      {/* <OldDiseaseForRegister\r\n        openOldDiseaseRegister={openOldDiseaseRegister} setOpenOldDiseaseRegister={setOpenOldDiseaseRegister}\r\n        setDataPatientsRegister={setDataPatientsRegister}\r\n        listOldDiseaseRegister={listOldDiseaseRegister} setListOldDiseaseRegister={setListOldDiseaseRegister}\r\n      /> */}\r\n\r\n      <AlertProcessing\r\n        openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookMedical","import React, { useState, useContext, useEffect } from 'react';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n//modal\r\nimport SelectedDoctorExamining from '../ManageSelectedDoctorExamining/SelectedDoctorExamining';\r\n//components\r\nimport ListPatientsRegister from './ListPatientsRegister';\r\nimport BookMedical from './BookMedical';\r\n//api\r\nimport { getCurrentDoctorExamining } from '../../Service/MedicalService';\r\n\r\nfunction MainMedicalRegister() {\r\n\r\n  const [component1Loading, setComponent1Loading] = useState(true);\r\n\r\n  const currentDoctorExaminingDefault = {userFullName: '', userIdDoctor: ''};\r\n\r\n  const [completeMedicalRegister, setCompleteMedicalRegister] = useState(false);\r\n  const [dataPantientAppointmentsToday, setDataPantientAppointmentsToday] = useState();\r\n\r\n  const [handleResetField, setHandleResetField] = useState(false); //F2\r\n  const [handleOpenModalExaminingSession, setHandleOpenModalExaminingSession] = useState(false); //F4\r\n  const [handleOpenModalOldDisease, setHandleOpenModalOldDisease] = useState(false); //F8\r\n\r\n  const [currentDoctorExamining, setCurrentDoctorExamining] = useState();\r\n  const [openSelectedDoctorExaminingModal, setOpenSelectedDoctorExaminingModal] = useState(false);\r\n\r\n  const handleF2Press = () => {\r\n    setHandleOpenModalExaminingSession(true);\r\n  }\r\n\r\n  const handleF4Press = () => {\r\n    setHandleResetField(true);\r\n  }\r\n\r\n  const handleF8Press = () => {\r\n    setHandleOpenModalOldDisease(true);\r\n  }\r\n\r\n  const handleGetCurrentDoctorExamining = async () => {\r\n    const response = await getCurrentDoctorExamining();\r\n    if(response.status === 200){\r\n      setCurrentDoctorExamining( {userIdDoctor: response.data.userIdDoctor, userFullName: response.data.userFullName} );\r\n    }\r\n    else{\r\n      setCurrentDoctorExamining(currentDoctorExaminingDefault);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleGetCurrentDoctorExamining();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if(event.keyCode === 113){\r\n        event.preventDefault()\r\n        //nhấn F2 để đăng ký khám\r\n        handleF2Press();\r\n      }\r\n      else if(event.keyCode === 115){\r\n        event.preventDefault()\r\n        //nhấn F4 để reset các input field \r\n        handleF4Press();\r\n      }\r\n      else if(event.keyCode === 119){\r\n        event.preventDefault()\r\n        //nhấn F8 để tìm bệnh cũ\r\n        handleF8Press();\r\n      }\r\n      else{\r\n\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n         <Container maxWidth=\"xl\" sx={{mt: 11}}>\r\n            <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                <Grid container spacing={0} sx={{marginLeft: 0}}>\r\n                  {currentDoctorExamining ? \r\n                    <>\r\n                      <Grid item xs={5}>  \r\n                        <ListPatientsRegister \r\n                          completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                          currentDoctorExamining={currentDoctorExamining}\r\n                          setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n                          component1Loading={component1Loading} setComponent1Loading={setComponent1Loading}\r\n                          dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                        />\r\n                      </Grid>\r\n            \r\n                      <Grid item xs={7} >\r\n                        {component1Loading ?\r\n                          <div style={{marginTop: '20px', marginLeft: '18px'}}>\r\n                            <Skeleton variant='rectangular' width=\"100%\" height={576} />\r\n                          </div>\r\n                          :\r\n                          <BookMedical \r\n                            onF2Press={handleOpenModalExaminingSession} setOnF2Press={setHandleOpenModalExaminingSession}\r\n                            onF4Press={handleResetField} setOnF4Press={setHandleResetField}\r\n                            onF8Press={handleOpenModalOldDisease} setOnF8Press={setHandleOpenModalOldDisease}\r\n                            completeMedicalRegister={completeMedicalRegister} setCompleteMedicalRegister={setCompleteMedicalRegister}\r\n                            currentDoctorExamining={currentDoctorExamining}\r\n                            dataPantientAppointmentsToday={dataPantientAppointmentsToday} setDataPantientAppointmentsToday={setDataPantientAppointmentsToday}\r\n                          />\r\n                        }\r\n                      </Grid>\r\n                    </>\r\n                  :\r\n                      null\r\n                  }\r\n                </Grid>\r\n            </Box>\r\n         </Container>\r\n\r\n         <SelectedDoctorExamining \r\n          openSelectedDoctorExaminingModal={openSelectedDoctorExaminingModal} setOpenSelectedDoctorExaminingModal={setOpenSelectedDoctorExaminingModal}\r\n          currentDoctorExamining={currentDoctorExamining} setCurrentDoctorExamining={setCurrentDoctorExamining}\r\n         />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainMedicalRegister","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport _ from 'lodash'\r\n//modal\r\nimport AlertProcessing from '../ManageAlertProcessing/AlertProcessing';\r\n//mui theme\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { DialogActions } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//mui datepicker\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n//moment\r\nimport moment from 'moment';\r\n//other\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n//css\r\nimport './SCSS/CompleteExamining.scss';\r\n//api\r\nimport { createAddPredecessor, createAddMedicalBook, getAppointmentDate } from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CompleteExamining(props) {\r\n    const [mainDataExaminingForConclusion, setMainDataExaminingForConclusion] = useState();\r\n    const [openAlertProcessing, setOpenAlertProcessing] = useState(false);\r\n\r\n\r\n    const typingRef = useRef(null);\r\n    const textareaRef = useRef(null);\r\n    const dateFieldRef = useRef(null);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleCloseModalCompleteExamining = (event, reason) => {\r\n        if(reason && reason === \"backdropClick\"){\r\n          return;\r\n        }\r\n        else{\r\n            //setMainDataExaminingForConclusion();\r\n            props.setOpenModalCompleteExamining(false);\r\n        }\r\n      }\r\n\r\n    const onChangeExaminingConclusion = (value) => {\r\n        typingRef.current = setTimeout(() => {\r\n            setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                prevMainDataExaminingForConclusion.conclusion = value;\r\n                return {...prevMainDataExaminingForConclusion}\r\n            })\r\n        }, 300)\r\n    }\r\n\r\n    const onChangeAppointmentDate = (value) => {\r\n        if(value){\r\n            if(typingRef.current){\r\n                clearInterval(typingRef.current);\r\n            }\r\n            typingRef.current = setTimeout(() => {\r\n                const takenValue = value._d;\r\n                const formattedDate = moment(takenValue).format('YYYY-MM-DD');\r\n                if(formattedDate !== 'Invalid date'){\r\n                    setMainDataExaminingForConclusion(prevMainDataExaminingForConclusion => {\r\n                        prevMainDataExaminingForConclusion.appointmentDate = formattedDate;\r\n                        return {...prevMainDataExaminingForConclusion}\r\n                    })\r\n                }\r\n            }, 200)   \r\n        }\r\n    }\r\n\r\n    const handleSetDataCompleteExamining = async () => {\r\n        const editDataExaminingForConclusion = _.clone(props.dataExaminingForConclusion);\r\n        \r\n        editDataExaminingForConclusion.categories = editDataExaminingForConclusion.categories.map(categoriesItem => ({\r\n            ...categoriesItem,\r\n            // Lọc các categoryContents để giữ lại những phần tử có categoryContentQuestions không rỗng\r\n            categoryContents: categoriesItem.categoryContents.filter(categoryContentsItem => categoryContentsItem.categoryContentQuestions.length > 0)\r\n\r\n            // Loại bỏ các categories nếu tất cả categoryContents của nó đều bị loại bỏ\r\n        })).filter(categoriesItem => categoriesItem.categoryContents.length > 0);\r\n\r\n        if(editDataExaminingForConclusion.categories.length !== 0){\r\n            setOpenAlertProcessing(true);\r\n            const responseAppointmentDate = await getAppointmentDate(props.dataExaminingForConclusion.medicalRegisterId);\r\n\r\n            if(responseAppointmentDate.status === 200){\r\n                editDataExaminingForConclusion.appointmentDate = responseAppointmentDate.data.appointmentDate\r\n                editDataExaminingForConclusion.nextExamId = responseAppointmentDate.data.nextExamId\r\n                editDataExaminingForConclusion.nextExamName = responseAppointmentDate.data.nextExamName\r\n            }else{\r\n                toast.error(responseAppointmentDate.data, {toastId: 'error1'});\r\n            }\r\n\r\n            setMainDataExaminingForConclusion(editDataExaminingForConclusion);\r\n            setOpenAlertProcessing(false);\r\n            if(props.dataExaminingForConclusion.conclusion !== ''){\r\n                const length = textareaRef.current.value.length;\r\n                textareaRef.current.setSelectionRange(length, length);\r\n                textareaRef.current.focus();\r\n            }\r\n            else{\r\n                textareaRef.current.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleAddMedicalBook = async () => {\r\n        if(checkValidate()){\r\n            setOpenAlertProcessing(true);\r\n            //tái khám hoặc mở khám lại\r\n            if(props.oldDataPredecessor){\r\n                mainDataExaminingForConclusion.categories.filter(cat2 => cat2.isPredecessor).forEach(cat2 => {\r\n                    let matchedCategory = props.oldDataPredecessor.find(cat1 => cat1.categoryName === cat2.categoryName && cat1.isPredecessor);\r\n                \r\n                    if (matchedCategory) {\r\n                      // If categoryName matches\r\n                      cat2.categoryContents.forEach(content2 => {\r\n                        let matchedContent = matchedCategory.categoryContents.find(content1 => content1.categoryContentTitle === content2.categoryContentTitle);\r\n                \r\n                        if (matchedContent) {\r\n                          // If categoryContentTitle matches\r\n                          content2.categoryContentQuestions.forEach(question2 => {\r\n                            let matchedQuestion = matchedContent.categoryContentQuestions.find(question1 => question1.categoryContentQuestionName === question2.categoryContentQuestionName);\r\n                \r\n                            if (matchedQuestion) {\r\n                              // If categoryContentQuestionName matches, update the question\r\n                              matchedQuestion.categoryContentAnswer = question2.categoryContentAnswer;\r\n                              matchedQuestion.categoryContentNote = question2.categoryContentNote;\r\n                            } else {\r\n                              // If categoryContentQuestionName doesn't match, push the new question\r\n                              matchedContent.categoryContentQuestions.push(question2);\r\n                            }\r\n                          });\r\n                        } else {\r\n                          // If categoryContentTitle doesn't match, push the new content\r\n                          matchedCategory.categoryContents.push(content2);\r\n                        }\r\n                      });\r\n                    } else {\r\n                      // If categoryName doesn't match, push the new category\r\n                      props.oldDataPredecessor.push(cat2);\r\n                    }\r\n                });\r\n\r\n                const dataPredecessor = { patientId: mainDataExaminingForConclusion.patientId, categoryPres: props.oldDataPredecessor }\r\n\r\n                await createAddPredecessor(dataPredecessor);\r\n\r\n                const categoriesHealthRecordExamining = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isHealthRecord === true)\r\n                mainDataExaminingForConclusion.categories = categoriesHealthRecordExamining\r\n                const responseAddMedicalBook = await createAddMedicalBook(mainDataExaminingForConclusion);\r\n                if(responseAddMedicalBook.status === 200){\r\n                    toast.success(responseAddMedicalBook.data, {toastId: 'success3'});\r\n                    props.handleCompleteExaminingForPantient();\r\n                    setMainDataExaminingForConclusion();\r\n                    props.setOpenModalCompleteExamining(false);\r\n                }\r\n                else{\r\n                    toast.error(responseAddMedicalBook.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            //khám mới hoàn toàn\r\n            else{\r\n                if(mainDataExaminingForConclusion.categories.some(categoriesItem => categoriesItem.isPredecessor === true)){\r\n                    const categoryPres = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isPredecessor === true)\r\n                    const dataPredecessor = { patientId: mainDataExaminingForConclusion.patientId, categoryPres: categoryPres }\r\n                    await createAddPredecessor(dataPredecessor);\r\n                }\r\n                const categoriesHealthRecordExamining = mainDataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.isHealthRecord === true)\r\n                mainDataExaminingForConclusion.categories = categoriesHealthRecordExamining\r\n                const responseAddMedicalBook = await createAddMedicalBook(mainDataExaminingForConclusion);\r\n                if(responseAddMedicalBook.status === 200){\r\n                    toast.success(responseAddMedicalBook.data, {toastId: 'success3'});\r\n                    props.handleCompleteExaminingForPantient();\r\n                    setMainDataExaminingForConclusion();\r\n                    props.setOpenModalCompleteExamining(false);\r\n                }\r\n                else{\r\n                    toast.error(responseAddMedicalBook.data, {toastId: 'error1'});\r\n                }\r\n            }\r\n            setOpenAlertProcessing(false);\r\n        }\r\n    }\r\n\r\n    \r\n    const checkValidate = () => {\r\n        let isValid = true;\r\n        if(mainDataExaminingForConclusion.conclusion === null){\r\n            textareaRef.current.focus();\r\n            toast.error('Bạn chưa nhập kết luận khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === 'Invalid date'){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Ngày tái khám không hợp lệ', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n\r\n        if(mainDataExaminingForConclusion.appointmentDate === ''){\r\n            dateFieldRef.current.focus();\r\n            toast.error('Bạn chưa chọn ngày tái khám', {toastId: 'error1'})\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.openModalCompleteExamining){\r\n            handleSetDataCompleteExamining();\r\n        }\r\n    }, [props.openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullWidth={true} maxWidth={'md'} open={props.openModalCompleteExamining} onClose={(event, reason) => handleCloseModalCompleteExamining(event, reason)} disableEscapeKeyDown={true}>\r\n                <DialogTitle sx={{ fontWeight: 'bolder', fontSize: '20px', textAlign: 'center', color: 'red', textTransform: 'uppercase' }}>Tóm tắt quá trình khám</DialogTitle>\r\n                <IconButton onClick={() => handleCloseModalCompleteExamining()} sx={{position: 'absolute', right: 5, top: 7}}>\r\n                    <CloseIcon fontSize='large'/>\r\n                </IconButton>\r\n                <DialogContent dividers sx={{pl: '15px', pr: '15px'}}>\r\n                    <Box sx={{pl: 6, pr: 6}}>\r\n                        <List sx={{p: 0}}>\r\n                            <Box>\r\n                                {mainDataExaminingForConclusion ? \r\n                                    mainDataExaminingForConclusion.categories.length !== 0 ? \r\n                                        <div className='category-complete-examining'>\r\n                                            {mainDataExaminingForConclusion.categories.map((categoriesItem, categoriesIndex) => (\r\n                                                <div key={`categoriesItem ${categoriesIndex}`}>\r\n                                                    <Typography sx={{fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}>{categoriesItem.categoryName}</Typography>\r\n                                                        {categoriesItem.categoryContents.map((categoryContentsItem, categoryContentsIndex) => (\r\n                                                            <div className='table-category-complete-examining' style={{marginBottom: '10px'}} key={`categoryContents ${categoryContentsIndex}`}>\r\n                                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '20px', textAlign: 'center'}}>{categoryContentsItem.categoryContentTitle}</Typography>\r\n                                                \r\n                                                                {categoryContentsItem.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                    <div key={`questionItem ${questionIndex}`}>\r\n                                                                        <Grid container rowSpacing={0}>\r\n                                                                            {questionIndex === 0 ?\r\n                                                                                <>\r\n                                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentName}</Typography>\r\n                                                                                    </Grid> \r\n\r\n                                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                        <>\r\n                                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryContentsItem.categoryContentCheck}</Typography>\r\n                                                                                            </Grid>\r\n                                                                        \r\n                                                                                            <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                            </Grid>\r\n                                                                                        </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryContentsItem.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    }   \r\n                                                                                </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                            }\r\n\r\n                                                                            <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                </Grid>\r\n                                                                \r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                            <Checkbox disabled checked={questionItem.categoryContentAnswer}\r\n                                                                                                classes={{ root: classes.root }}\r\n                                                                                                sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                            />\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={5.5} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                :   \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={8} >\r\n                                                                                            <div className='note-for-answer'>\r\n                                                                                                <div className='suggest-note'>                                                                          \r\n                                                                                                    <TextareaAutosize className='textarea-autosize' rows={1} disabled defaultValue={questionItem.categoryContentNote}/>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                }                                                                                                                                                                          \r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    :\r\n                                        <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không có nội dung nào được khám.</Typography>\r\n                                :\r\n                                    <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder', textAlign: 'center'}}>Không có nội dung nào được khám.</Typography>\r\n                                }\r\n                            </Box>\r\n                        </List>\r\n                    </Box>\r\n                </DialogContent>\r\n\r\n                <DialogActions sx={{borderTop: '1px solid black'}}>\r\n                    {mainDataExaminingForConclusion ? \r\n                        mainDataExaminingForConclusion.categories.length !== 0 ?\r\n                            <div style={{width: '100%', padding: '8px 50px 8px 50px'}}>\r\n                                <TextareaAutosize key={`pantientId ${mainDataExaminingForConclusion.patientId}`} placeholder='Kết luận của bác sĩ' style={{width: '100%', padding: '15px', fontSize: '17px'}} onChange={(e) => onChangeExaminingConclusion(e.target.value)} ref={textareaRef} defaultValue={mainDataExaminingForConclusion.conclusion} />\r\n                            \r\n                                    {mainDataExaminingForConclusion.appointmentDate ? \r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', mb: 2}}>\r\n                                            <Typography variant='h6' sx={{mt: 'auto', mb: 'auto', mr: 2}}>Kỳ khám tiếp theo: <span style={{fontWeight: 'bolder', color: '#ff1744'}}>{mainDataExaminingForConclusion.nextExamName}</span></Typography>\r\n                                            <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"vi\">\r\n                                                <DemoContainer components={['DatePicker']}>  \r\n                                                    <DatePicker label=\"Ngày khám dự kiến\" disablePast\r\n                                                        format='DD/MM/YYYY' defaultValue={moment(mainDataExaminingForConclusion.appointmentDate)}\r\n                                                        onChange={(value) => onChangeAppointmentDate(value)}\r\n                                                        slotProps={{ \r\n                                                            textField: { inputRef: dateFieldRef, }\r\n                                                        }}\r\n                                                    />\r\n                                                </DemoContainer>\r\n                                            </LocalizationProvider>\r\n                                        </Box>\r\n                                    </>\r\n                                    :\r\n                                        null\r\n                                    }\r\n                        \r\n                                <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                    <Stack spacing={1} direction=\"row\">\r\n                                        <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' onClick={() => handleAddMedicalBook()}\r\n                                            >Lưu</Button>\r\n                                        <Button sx={{fontSize: '15px', textTransform: 'none'}} variant='contained' color={'error'}\r\n                                            onClick={() => handleCloseModalCompleteExamining()}>Đóng</Button>\r\n                                    </Stack>\r\n                                </div>\r\n                            </div>   \r\n                        :\r\n                            null\r\n                    :\r\n                        null                \r\n                    }             \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <AlertProcessing\r\n                openAlertProcessing={openAlertProcessing} setOpenAlertProcessing={setOpenAlertProcessing}            \r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompleteExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//mui theme\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Grid from '@mui/material/Grid';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n//scss\r\nimport './SCSS/PreviewLastExamining.scss'; \r\n//api\r\nimport { getMedicalBook } from '../../Service/MedicalService';\r\n//moment\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi'; \r\nmoment.locale('vi');\r\n\r\nfunction PreviewLastExamining(props) {\r\n    const previewDataExaminingDefault = {\r\n        categoryPres: [],\r\n        healthRecords: { examinationName: '', timeUpdateState: '', conclusion: '', medicakBook: [] },\r\n        nutritionals: [],\r\n        vaccinationBook: [] \r\n    }\r\n\r\n    const [previewDataExamining, setPreviewDataExamining] = useState(previewDataExaminingDefault);\r\n    const [fullDataPredecessor, setFullDataPredecessor] = useState();\r\n    const [fullDataHealthRecord, setFullDataHealthRecord] = useState();\r\n    \r\n    const [loadingMedicalBook, setLoadingMedicalBook] = useState(false);\r\n\r\n    const [openCollapsePredecessorItem, setOpenCollapsePredecessorItem] = useState([]);\r\n    const [openCollapseMedicakBookItem, setOpenCollapseMedicakBookItem] = useState([]);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpenPredecessorItem = (predecessorIndex) => {\r\n        setOpenCollapsePredecessorItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[predecessorIndex] = !newOpen[predecessorIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleOpenMedicakBookItem = (medicakBookIndex) => {\r\n        setOpenCollapseMedicakBookItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[medicakBookIndex] = !newOpen[medicakBookIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handeOnChangePagePredecessor = (e, page, indexPredecessor) => {\r\n        const _previewDataExamining = {...previewDataExamining}\r\n        _previewDataExamining.categoryPres[indexPredecessor].categoryContents = fullDataPredecessor[indexPredecessor].categoryContents[page - 1];\r\n        _previewDataExamining.categoryPres[indexPredecessor].currentContent = page\r\n        setPreviewDataExamining(_previewDataExamining)\r\n    }\r\n\r\n    const handeOnChangePageHealthRecords = (e, page, indexMedicakbook) => {\r\n        const _previewDataExamining = {...previewDataExamining}\r\n        _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].categoryContents = fullDataHealthRecord[indexMedicakbook].categoryContents[page - 1];\r\n        _previewDataExamining.healthRecords.medicakBook[indexMedicakbook].currentContent = page\r\n        setPreviewDataExamining(_previewDataExamining)\r\n    }\r\n\r\n    const handleEditPrevDataExamining = async () => {\r\n        setLoadingMedicalBook(true);\r\n        const responseMedicalBook = await getMedicalBook(props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0].medicalBookId);\r\n        if(props.prevDataExamining.newPredecessor){\r\n            //lấy phần tử thứ 0 của câu trả lời loại sổ khám bệnh\r\n            const healthRecordUpdatePagination = responseMedicalBook.medicakBook.categories.map((categoriesHealthRecordItem) => ({...categoriesHealthRecordItem, categoryContents: categoriesHealthRecordItem.categoryContents[0], contentLength: categoriesHealthRecordItem.categoryContents.length, currentContent: 1})) \r\n \r\n            //set full data tiền căn rồi set vào fullDataPredecessor để quản lý với kiểu pagination\r\n            setFullDataPredecessor(props.prevDataExamining.categoryPres.map((categoryPresItem) => ({...categoryPresItem, contentLength: categoryPresItem.categoryContents.length, currentContent: 1})))\r\n            //set full data sổ khám bệnh rồi set vào fullDataHealthRecord để lặp với kiểu pagination\r\n            setFullDataHealthRecord(responseMedicalBook.medicakBook.categories.map((categoriesHealthRecordItem) => ({...categoriesHealthRecordItem, contentLength: categoriesHealthRecordItem.categoryContents.length, currentContent: 1})));\r\n \r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: healthRecordUpdatePagination\r\n            }\r\n             \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: [],\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n        else{\r\n            if(props.prevDataExamining.categoryPres.length > 1){\r\n                props.prevDataExamining.categoryPres = props.prevDataExamining.categoryPres.sort((a, b) => a.categoryOrder - b.categoryOrder);\r\n            }\r\n            //lấy phần tử thứ 0 của câu trả lời loại tiền căn\r\n            const categoryPresUpdatePagination = props.prevDataExamining.categoryPres.map((categoryPresItem) => ({...categoryPresItem, categoryContents: categoryPresItem.categoryContents[0], contentLength: categoryPresItem.categoryContents.length, currentContent: 1})) \r\n            //lấy phần tử thứ 0 của câu trả lời loại sổ khám bệnh\r\n            const healthRecordUpdatePagination = responseMedicalBook.medicakBook.categories.map((categoriesHealthRecordItem) => ({...categoriesHealthRecordItem, categoryContents: categoriesHealthRecordItem.categoryContents[0], contentLength: categoriesHealthRecordItem.categoryContents.length, currentContent: 1})) \r\n\r\n            //set full data tiền căn rồi set vào fullDataPredecessor để quản lý với kiểu pagination\r\n            setFullDataPredecessor(props.prevDataExamining.categoryPres.map((categoryPresItem) => ({...categoryPresItem, contentLength: categoryPresItem.categoryContents.length, currentContent: 1})))\r\n            //set full data sổ khám bệnh rồi set vào fullDataHealthRecord để lặp với kiểu pagination\r\n            setFullDataHealthRecord(responseMedicalBook.medicakBook.categories.map((categoriesHealthRecordItem) => ({...categoriesHealthRecordItem, contentLength: categoriesHealthRecordItem.categoryContents.length, currentContent: 1})));\r\n\r\n            const healthRecordsUpdate = {\r\n                ...props.prevDataExamining.healthRecords[props.prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null) ? 1 : 0],\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                appointmentDate: responseMedicalBook.medicakBook.appointmentDate,\r\n                nextExamName: responseMedicalBook.medicakBook.nextExamName,\r\n                medicakBook: healthRecordUpdatePagination\r\n            }\r\n            \r\n            setPreviewDataExamining(\r\n                {\r\n                    categoryPres: categoryPresUpdatePagination,\r\n                    healthRecords: healthRecordsUpdate,\r\n                    medicalBookIdRecently: props.prevDataExamining.medicalBookIdRecently,\r\n                    nutritionals: props.prevDataExamining.nutritionals,\r\n                    vaccinationBook: props.prevDataExamining.vaccinationBook,\r\n                }\r\n            )\r\n        }\r\n        setLoadingMedicalBook(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(props.prevDataExamining){\r\n            handleEditPrevDataExamining();\r\n        }\r\n    }, [props.prevDataExamining])\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{height: '100%', position: 'relative'}}>\r\n                {loadingMedicalBook ? \r\n                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                        <CircularProgress />\r\n                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh gần nhất, hãy chờ một chút...</Typography>\r\n                    </Box>\r\n                :\r\n                    <>\r\n                        <div className='preview-last-examining-contents' >\r\n\r\n                            <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem'}}>\r\n                                Thông tin tóm tắt <span style={{color: 'red'}}>{previewDataExamining.healthRecords.examinationName}</span>\r\n                            </Typography>\r\n\r\n                            <List sx={{p: 0}}>\r\n                                {previewDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                    <div key={`predecessorItem ${predecessorIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenPredecessorItem(predecessorIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapsePredecessorItem[predecessorIndex]} timeout=\"auto\" unmountOnExit>\r\n\r\n                                            <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', border: '2px solid #00bcd4', borderRadius: '20px' }}>\r\n                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: predecessorItem.categoryContents.categoryContentTitle ? 0 : 2 }}>{predecessorItem.categoryContents.categoryContentTitle}</Typography>\r\n                                                \r\n                                                <Box sx={{mb: 2}}>\r\n                                                    {predecessorItem.categoryContents.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                        <Box key={`questionItem ${questionIndex}`} >\r\n                                                            <Grid container rowSpacing={0} >\r\n                                                                {questionIndex === 0 ?\r\n                                                                    <>\r\n                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItem.categoryContents.categoryContentName}</Typography>\r\n                                                                        </Grid> \r\n\r\n                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                            <>\r\n                                                                                <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                    <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{predecessorItem.categoryContents.categoryContentCheck}</Typography>\r\n                                                                                </Grid>\r\n                                                                                            \r\n                                                                                <Grid item xs={6.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{predecessorItem.categoryContents.categoryContentText}</Typography>\r\n                                                                                </Grid>\r\n                                                                            </>\r\n                                                                        : \r\n                                                                            <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{predecessorItem.categoryContents.categoryContentText}</Typography>\r\n                                                                            </Grid>\r\n                                                                        }   \r\n                                                                    </>\r\n                                                                :\r\n                                                                    null\r\n                                                                }\r\n                                                                            \r\n                                                                <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                        <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                    </Grid>\r\n                                                                                    \r\n                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                        <>\r\n                                                                            <Grid item xs={1.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                            </Grid>\r\n\r\n                                                                            <Grid item xs={6.5} >\r\n                                                                                <div className='note-for-answer'>\r\n                                                                                    <div className='suggest-note'>                                                                          \r\n                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </Grid>\r\n                                                                        </>\r\n                                                                    :   \r\n                                                                        <>\r\n                                                                            <Grid item xs={8} >\r\n                                                                                <div className='note-for-answer'>\r\n                                                                                    <div className='suggest-note'>                                                                          \r\n                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </Grid>\r\n                                                                        </>\r\n                                                                    }  \r\n                                                                </Box>\r\n                                                            </Grid>\r\n                                                        </Box>\r\n                                                    ))} \r\n\r\n                                                    {predecessorItem.contentLength > 1 ? \r\n                                                        <>\r\n                                                            <div className='pagination-table-preview-last-examining'>\r\n                                                                <Pagination count={predecessorItem.contentLength} page={predecessorItem.currentContent} color=\"error\" sx={{m: 'auto'}} onChange={(e, page) => handeOnChangePagePredecessor(e, page, predecessorIndex)}/>\r\n                                                            </div>                                 \r\n                                                        </>\r\n                                                    :\r\n                                                        null\r\n                                                    }\r\n                                                </Box>\r\n\r\n                                            </div>\r\n\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n\r\n                                {previewDataExamining.healthRecords.medicakBook.map((medicakBookItems, medicakBookIndex) => (\r\n                                    <div key={`medicakBookItems ${medicakBookIndex}`}>\r\n                                        <ListItemButton sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                            onClick={() => handleOpenMedicakBookItem(medicakBookIndex)}\r\n                                        >\r\n                                            <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                <ListItemText primary={medicakBookItems.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                            </Box>\r\n                                        </ListItemButton>\r\n\r\n                                        <Collapse in={openCollapseMedicakBookItem[medicakBookIndex]} timeout=\"auto\" unmountOnExit>\r\n                                            <div className='container-item-table-preview-examining' style={{ paddingLeft: '18px', paddingRight: '18px', border: '2px solid #00bcd4', borderRadius: '20px' }}>\r\n                                                <Typography variant='subtitle1' sx={{fontWeight: 'bolder', fontSize: '18px', textAlign: 'center', mb: medicakBookItems.categoryContents.categoryContentTitle ? 0 : 2 }}>{medicakBookItems.categoryContents.categoryContentTitle}</Typography>\r\n                                                \r\n                                                <Box sx={{mb: 2}}>\r\n                                                    {medicakBookItems.categoryContents.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                        <Box key={`questionItem ${questionIndex}`} >\r\n                                                            <Grid container rowSpacing={0} >\r\n                                                                {questionIndex === 0 ?\r\n                                                                    <>\r\n                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookItems.categoryContents.categoryContentName}</Typography>\r\n                                                                        </Grid> \r\n\r\n                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                            <>\r\n                                                                                <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                    <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{medicakBookItems.categoryContents.categoryContentCheck}</Typography>\r\n                                                                                </Grid>\r\n                                                                                            \r\n                                                                                <Grid item xs={5.5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{medicakBookItems.categoryContents.categoryContentText}</Typography>\r\n                                                                                </Grid>\r\n                                                                            </>\r\n                                                                        : \r\n                                                                            <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{medicakBookItems.categoryContents.categoryContentText}</Typography>\r\n                                                                            </Grid>\r\n                                                                        }   \r\n                                                                    </>\r\n                                                                :\r\n                                                                    null\r\n                                                                }\r\n                                                                            \r\n                                                                <Box key={`questionItem ${questionIndex}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                    <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                        <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                    </Grid>\r\n                                                                                    \r\n                                                                    {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                        <>\r\n                                                                            <Grid item xs={2.5} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                <Checkbox disabled checked={questionItem.categoryContentAnswer} classes={{ root: classes.root }} sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} />\r\n                                                                            </Grid>\r\n\r\n                                                                            <Grid item xs={5.5} >\r\n                                                                                <div className='note-for-answer'>\r\n                                                                                    <div className='suggest-note'>                                                                          \r\n                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </Grid>\r\n                                                                        </>\r\n                                                                    :   \r\n                                                                        <>\r\n                                                                            <Grid item xs={8} >\r\n                                                                                <div className='note-for-answer'>\r\n                                                                                    <div className='suggest-note'>                                                                          \r\n                                                                                        <TextareaAutosize className='textarea-autosize' rows={1} disabled value={questionItem.categoryContentNote}/>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </Grid>\r\n                                                                        </>\r\n                                                                    }  \r\n                                                                </Box>\r\n                                                            </Grid>\r\n                                                        </Box>\r\n                                                    ))} \r\n\r\n                                                    {medicakBookItems.contentLength > 1 ? \r\n                                                        <>\r\n                                                            <div className='pagination-table-preview-last-examining'>\r\n                                                                <Pagination count={medicakBookItems.contentLength} page={medicakBookItems.currentContent} color=\"error\" sx={{m: 'auto'}} onChange={(e, page) => handeOnChangePageHealthRecords(e, page, medicakBookIndex)}/>\r\n                                                            </div>                                 \r\n                                                        </>\r\n                                                    :\r\n                                                        null\r\n                                                    }\r\n                                                </Box>\r\n                                                \r\n                                            </div>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                ))}\r\n                            </List>\r\n\r\n                            <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', fontWeight: 'bolder'}}>{`Kết luận: ${previewDataExamining.healthRecords.conclusion}`}</Typography>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='time-examining' style={{marginLeft: '16px', marginTop: '4px', width: '99%'}}>\r\n                            <Typography variant='subtitle1' sx={{color: '#009688', fontWeight: 'bolder', fontSize: '1.08rem'}}>{`${previewDataExamining.healthRecords.doctorFullName}, ${moment(previewDataExamining.healthRecords.timeUpdateState).format('LLLL')}`}</Typography>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Box>\r\n        </> \r\n    )\r\n}\r\n\r\nexport default PreviewLastExamining","import React, { useState, useContext, useEffect, useRef } from 'react';\r\n//context\r\nimport { UserContext } from '../../context/UserContext';\r\n//lodash\r\nimport _ from \"lodash\";\r\n//modal\r\nimport CompleteExamining from '../ManageCompleteExamining/CompleteExamining';\r\nimport AlertProcessingBackdrop from '../ManageAlertProcessingBackdrop/AlertProcessingBackdrop';\r\n//components\r\nimport PreviewLastExamining from './PreviewLastExamining';\r\n//mui theme\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Chip from '@mui/material/Chip';\r\nimport Badge from '@mui/material/Badge';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { Button, IconButton, TextField } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { makeStyles } from '@mui/styles';\r\n//mui icon\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PinIcon from '@mui/icons-material/Pin';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport MaleIcon from '@mui/icons-material/Male';\r\nimport FemaleIcon from '@mui/icons-material/Female';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport Home from '@mui/icons-material/Home';\r\nimport { GiBodyHeight } from \"react-icons/gi\";\r\nimport { GiWeightScale } from \"react-icons/gi\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport { TbRulerMeasure } from \"react-icons/tb\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n//moment\r\nimport moment from 'moment';\r\n//scss\r\nimport './SCSS/DoctorExamining.scss';\r\n//api\r\nimport { \r\n    getMedicalDetailPatient,\r\n    getRegistersByDateNow, getMedicalBook, getUpdatePredecessor, getUpdateMedicalBook,\r\n    updateMedicalState\r\n} from '../../Service/MedicalService';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction MainDoctorExamining() {\r\n    const dataPantientsReadyExaminingDefault = {\r\n        stt: '',\r\n        id: '',\r\n        patientsId: '',\r\n        patientsName: '',\r\n        patientsDOB: '',\r\n        patientsMonthsOld: '',\r\n        patientsGender: '',\r\n        patientsHeight: '',\r\n        patientsWeight: '',\r\n        patientsHeadCircumference: '',\r\n        patientsPhone: '',\r\n        patientsAddress: ''\r\n    }\r\n\r\n    const { user, loading } = useContext(UserContext);\r\n\r\n    //state thông tin bệnh nhân ban đầu \r\n    const [dataPantientsReadyExamining, setDataPantientsReadyExamining] = useState(dataPantientsReadyExaminingDefault);\r\n\r\n    //state các category gồm tiêu đề nội dung khám và câu hỏi khám ban đầu\r\n    const [mainDataExamining, setMainDataExamining] = useState([]);\r\n\r\n    //state lưu tạm data các kỳ khám \r\n    const [prevDataExamining, setPrevDataExamining] = useState();\r\n\r\n    //state lưu main dataExamining không bao gồm data tiền căn cũ (dùng khi muốn chỉnh sửa tiền căn cũ)\r\n    const [prevDataExaminingWithoutOldPredecessor, setPrevDataExaminingWithoutOldPredecessor] = useState();\r\n\r\n    //state đóng mở cây thư mục khám của sổ khám bệnh\r\n    const [openCollapseHealthRecords, setOpenCollapseHealthRecords] = useState(false);\r\n\r\n    //state đóng mở chi tiết nội dung của sổ khám bệnh\r\n    const [openCollapseHealthRecordsItem, setOpenCollapseHealthRecordsItem] = useState([]);\r\n\r\n    //state chọn danh mục khám ban đầu\r\n    const [categorySelectedExamining, setCategorySelectedExamining] = useState({});\r\n\r\n    //state chọn danh mục bao gồm nội dung bên trong ban đầu\r\n    const [contentCategorySelectedExamining, setContentCategorySelectedExamining] = useState([]);\r\n\r\n    //state lưu tạm nội dung chi tiết của sổ khám bệnh\r\n    const [healthRecordsContents, setHealthRecordsContents] = useState([]);\r\n    const [currentHealthRecordExamining, setCurrentHealthRecordExamining] = useState();\r\n\r\n    //state vị trí nội dung hiện tại\r\n    const [currentContentExamining, setCurrentContentExamining] = useState(1);\r\n\r\n    //state các câu hỏi được bác sĩ khám tích hoặc gõ vào\r\n    const [dataExaminingForConclusion , setDataExaminingForConclusion ] = useState({});\r\n    //state lưu tạm các data tiền căn của getUpdatePredecessor (bao gồm những data tiền căn đã chọn và chưa chọn)\r\n    const [oldDataPredecessor, setOldDataPredecessor] = useState();\r\n    //state lưu data tiền căn cũ (những data tiền căn đã chọn)  \r\n    const [prevDataPredecessor, setPrevDataPredecessor] = useState();\r\n    //state lưu các data đã chọn của mục khám trong sổ khám bệnh\r\n    const [prevDataHealthRecords, setPrevDataHealthRecords] = useState();\r\n\r\n    //state quản lý modal kết thúc khám\r\n    const [openModalCompleteExamining, setOpenModalCompleteExamining] = useState(false);\r\n\r\n    const [loadingPrevDataExamining, setLoadingPrevDataExamining] = useState(false);\r\n    const [loadingPatient, setLoadingPatient] = useState(true);\r\n    const [loadingInfoPatient, setLoadingInfoPatient] = useState(true);\r\n    const [loadingCategoryExamining, setLoadingCategoryExamining] = useState(false);\r\n    const [loadingContentsExamining, setLoadingContentsExamining] = useState(false);\r\n\r\n    const [listDataPatientsRegister, setListDataPatientsRegister] = useState([]); \r\n    const [searchPatientsQuery, setSearchPatientsQuery] = useState(\"\");\r\n  \r\n    const [listDataPatientsRegisterState, setListDataPatientsRegisterState] = useState([]);\r\n    const [listDataPatientsRegisterSort, setListDataPatientsRegisterSort] = useState([]);\r\n\r\n    const [activeChip, setActiveChip] = useState({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n    const [listPantientChipState, setListPantientChipState] = useState(\r\n        [\r\n            { chipLabel: 'BN chờ khám', chipContent: 0 },\r\n            { chipLabel: 'BN đã khám', chipContent: 0 }\r\n        ]\r\n    )\r\n\r\n    const [openAlertProcessingBackdrop, setOpenAlertProcessingBackdrop] = useState(false);\r\n\r\n    const handleSelectedChip = (chipIndex, chipLabel) => {\r\n        setActiveChip({chipOrder: chipIndex, chipLabel: chipLabel});\r\n        if(chipIndex === 0){\r\n          const listPantientRegisterWaiting = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n          setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n          setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n        }\r\n        else if(chipIndex === 1){\r\n            const listPantientRegisterDone = listDataPatientsRegister.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n            setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n            setListDataPatientsRegisterState(listPantientRegisterDone);\r\n        }\r\n    };\r\n\r\n    const handleSearchPantient = (value) => {\r\n        const takenValue = value;\r\n        setSearchPatientsQuery(takenValue);\r\n    \r\n        if(value === ''){\r\n          setListDataPatientsRegisterSort(listDataPatientsRegisterState);\r\n        }else{\r\n          setListDataPatientsRegisterSort(searchPatients(listDataPatientsRegisterState, takenValue));\r\n        }\r\n      }\r\n    \r\n    const searchPatients = (patients, searchTerm) => {\r\n        const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n        return patients.filter(patientObj => {\r\n          const { patientId, fullName, phoneMother, phoneFather } = patientObj.patient;\r\n          return patientId.toLowerCase().includes(lowerCaseSearchTerm) || fullName.toLowerCase().includes(lowerCaseSearchTerm) || phoneMother.toLowerCase().includes(lowerCaseSearchTerm) || phoneFather.toLowerCase().includes(lowerCaseSearchTerm);\r\n        });\r\n    }\r\n\r\n    const handleCompleteExaminingForPantient = () => {\r\n        toast.success(`Đã kết thúc khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n        setMainDataExamining([]);\r\n        setOpenCollapseHealthRecords(false);\r\n        setOpenCollapseHealthRecordsItem([]);\r\n        setCategorySelectedExamining({});\r\n        setContentCategorySelectedExamining([]);\r\n        setHealthRecordsContents([]);\r\n        setCurrentHealthRecordExamining();\r\n        setCurrentContentExamining(1);\r\n        setDataExaminingForConclusion({});\r\n        setPrevDataPredecessor();\r\n        setPrevDataExaminingWithoutOldPredecessor();\r\n        setCurrentHealthRecordExamining();\r\n        setOldDataPredecessor();\r\n        handleGetRegistersByDateNow();\r\n    }\r\n\r\n    const handleCancelExamining = async () => {\r\n        setLoadingPatient(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingCategoryExamining(true);\r\n        setLoadingContentsExamining(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, [dataPantientsReadyExamining.editExamining === true ? 2 : 0 || dataPantientsReadyExamining.backRegister === true ? 3 : 0]);\r\n        if(response.status === 200){\r\n            toast.success(`Đã hủy khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success2'});    \r\n            setDataPantientsReadyExamining(dataPantientsReadyExaminingDefault);\r\n            setMainDataExamining([]);\r\n            setOpenCollapseHealthRecords(false);\r\n            setOpenCollapseHealthRecordsItem([]);\r\n            setCategorySelectedExamining({});\r\n            setContentCategorySelectedExamining([]);\r\n            setHealthRecordsContents([]);\r\n            setCurrentHealthRecordExamining();\r\n            setCurrentContentExamining(1);\r\n            setDataExaminingForConclusion({});\r\n            setPrevDataPredecessor();\r\n            setPrevDataExaminingWithoutOldPredecessor();\r\n            setCurrentHealthRecordExamining();\r\n            setOldDataPredecessor()\r\n            handleGetRegistersByDateNow();\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    //hàm này dùng khi user đang khám mà bị ngáo lỡ nhấn f5\r\n    const handleReloadUIWhenExamining = async (findPantientExamining) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.stt = findPantientExamining.order;\r\n        _dataPantientsReadyExamining.id = findPantientExamining.id;\r\n        _dataPantientsReadyExamining.status = 1;\r\n        _dataPantientsReadyExamining.patientsId = findPantientExamining.patient.patientId;\r\n        _dataPantientsReadyExamining.patientsName = findPantientExamining.patient.fullName;\r\n        _dataPantientsReadyExamining.patientsDOB = findPantientExamining.patient.dayOfBirth;\r\n        _dataPantientsReadyExamining.patientsMonthsOld = findPantientExamining.patient.monthsOfAge;\r\n        _dataPantientsReadyExamining.patientsGender = findPantientExamining.patient.gender;\r\n        _dataPantientsReadyExamining.patientsHeight = findPantientExamining.height;\r\n        _dataPantientsReadyExamining.patientsWeight = findPantientExamining.weight;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = findPantientExamining.headCircumference;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = findPantientExamining.headCircumference;\r\n        _dataPantientsReadyExamining.patientsPhone = findPantientExamining.patient.phoneMother ? findPantientExamining.patient.phoneMother : findPantientExamining.patient.phoneFather;\r\n        _dataPantientsReadyExamining.patientsAddress = findPantientExamining.patient.fullAddress;\r\n        _dataPantientsReadyExamining.editExamining = true\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n\r\n        const responseGetMedicalDetailPatient = await getMedicalDetailPatient(findPantientExamining.id);\r\n        if(responseGetMedicalDetailPatient.healthRecords.length === 1 && responseGetMedicalDetailPatient.healthRecords[0].medicalBookId !== null ){\r\n            setLoadingCategoryExamining(true);\r\n            const responseGetUpdateMedicalBook = await getUpdateMedicalBook(responseGetMedicalDetailPatient.healthRecords[0].medicalBookId);\r\n            if(responseGetUpdateMedicalBook.status === 200){\r\n                responseGetMedicalDetailPatient.healthRecords[0].categories = responseGetUpdateMedicalBook.data.categories\r\n                setMainDataExamining(responseGetMedicalDetailPatient);\r\n            }\r\n            else{\r\n                toast.error(responseGetUpdateMedicalBook.data, {toastId: 'error1'});\r\n            }\r\n            setLoadingCategoryExamining(false);\r\n        }\r\n        else if(responseGetMedicalDetailPatient.healthRecords.length === 1 && responseGetMedicalDetailPatient.healthRecords[0].medicalBookId !== null ){\r\n\r\n        }\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //lấy danh sách đăng ký khám trong ngày\r\n    const handleGetRegistersByDateNow = async () => {\r\n        const response = await getRegistersByDateNow();\r\n        if(response !== 400){\r\n            if(response.list.length !== 0){\r\n                setListDataPatientsRegister(response.list);\r\n                if(activeChip.chipOrder === 0 || dataPantientsReadyExamining.editExamining === true){\r\n                    const listPantientRegisterWaiting = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 0 || patientsRegisterItem.state === 1 || patientsRegisterItem.state === 3) //chờ khám và đang khám\r\n                    setListDataPatientsRegisterSort(listPantientRegisterWaiting);\r\n                    setListDataPatientsRegisterState(listPantientRegisterWaiting);\r\n                    const updatedList = listPantientChipState.map((item, index) => ({\r\n                        ...item,\r\n                        chipContent: response.listCountState[index]\r\n                    }));\r\n                    setListPantientChipState(updatedList);\r\n                    // const findPantientExamining = response.list.find(patientsRegisterItem => patientsRegisterItem.state === 1)\r\n                    // if(findPantientExamining){\r\n                    //     handleReloadUIWhenExamining(findPantientExamining);\r\n                    // }\r\n                }\r\n                else if(activeChip.chipOrder === 1){\r\n                    const listPantientRegisterDone = response.list.filter(patientsRegisterItem => patientsRegisterItem.state === 2) //đã khám\r\n                    setListDataPatientsRegisterSort(listPantientRegisterDone);\r\n                    setListDataPatientsRegisterState(listPantientRegisterDone);\r\n                    const updatedList = listPantientChipState.map((item, index) => ({\r\n                        ...item,\r\n                        chipContent: response.listCountState[index]\r\n                    }));\r\n                    setListPantientChipState(updatedList);\r\n                }\r\n            }\r\n        }\r\n        setLoadingPatient(false);\r\n        setLoadingInfoPatient(false);\r\n    }\r\n\r\n    const handleAppyPantientData = async (dataPantientItem) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setLoadingInfoPatient(true);\r\n        setLoadingPrevDataExamining(true);\r\n        await handleGetMedicalDetailPatient(dataPantientItem.id);\r\n        const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n        _dataPantientsReadyExamining.stt = dataPantientItem.order;\r\n        _dataPantientsReadyExamining.id = dataPantientItem.id;\r\n        _dataPantientsReadyExamining.status = 0;\r\n        _dataPantientsReadyExamining.patientsId = dataPantientItem.patient.patientId;\r\n        _dataPantientsReadyExamining.patientsName = dataPantientItem.patient.fullName;\r\n        _dataPantientsReadyExamining.patientsDOB = dataPantientItem.patient.dayOfBirth;\r\n        _dataPantientsReadyExamining.patientsMonthsOld = dataPantientItem.patient.monthsOfAge;\r\n        _dataPantientsReadyExamining.patientsGender = dataPantientItem.patient.gender;\r\n        _dataPantientsReadyExamining.patientsHeight = dataPantientItem.height;\r\n        _dataPantientsReadyExamining.patientsWeight = dataPantientItem.weight;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsHeadCircumference = dataPantientItem.headCircumference;\r\n        _dataPantientsReadyExamining.patientsPhone = dataPantientItem.patient.phoneMother ? dataPantientItem.patient.phoneMother : dataPantientItem.patient.phoneFather;\r\n        _dataPantientsReadyExamining.patientsAddress = dataPantientItem.patient.fullAddress;\r\n        _dataPantientsReadyExamining.editExamining = dataPantientItem.state === 2 ? true : false;\r\n        _dataPantientsReadyExamining.backRegister = dataPantientItem.state === 3 ? true : false;\r\n        setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n        setLoadingInfoPatient(false);\r\n        setLoadingPrevDataExamining(false);\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //nhấn chọn bệnh nhân để load vào ô thông tin bn\r\n    const handleSelectPantientExamining = async (dataPantientItem) => {\r\n        //console.log(dataPantientItem);\r\n        if(dataPantientItem.state === 0 || dataPantientItem.state === 3 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId === '' || dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 0){\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n            else{\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n        }\r\n        \r\n        else if(dataPantientItem.state === 2 && dataPantientsReadyExamining.patientsName !== dataPantientItem.patient.fullName){\r\n            if(dataPantientsReadyExamining.patientsId !== '' && dataPantientsReadyExamining.status === 1){\r\n                alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám để bắt đầu đợt khám mới!`);\r\n            }\r\n            else{\r\n                await handleAppyPantientData(dataPantientItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    //bắt đầu khám bệnh cho bệnh nhân\r\n    const handleBeginExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            if(prevDataExamining.healthRecords.some(healthRecordsItem => healthRecordsItem.medicalBookId === null)){\r\n                await handleGetRegistersByDateNow();\r\n                await handleSetMainDataExamining();\r\n                toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n            }\r\n            else{\r\n                await handleGetCategoryReExamining();\r\n                await handleGetRegistersByDateNow();\r\n            }\r\n        }\r\n        else if(response.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingPatient(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu khám cho bệnh nhân khám mới\r\n    const handleSetMainDataExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        prevDataExamining.healthRecords.forEach((healthRecordsItem) => {\r\n            if(healthRecordsItem.medicalBookId === null){\r\n                healthRecordsItem.state = 1\r\n            }\r\n        })\r\n        \r\n        //tái khám và có tiền căn đã đụng\r\n        if(dataPantientsReadyExamining.backRegister === true && prevDataExamining.newPredecessor === false){\r\n            const _oldDataPredecessor = _.cloneDeep(prevDataExamining);\r\n            const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n\r\n            const _oldDataPredecessorUpdate = _oldDataPredecessor.categoryPres.map(category => ({       \r\n                categoryName: category.categoryName,\r\n                isPredecessor: true,\r\n                categoryOrder: category.categoryOrder,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                    ...content,\r\n                    categoryContentQuestions: content.categoryContentQuestions.filter(q => q.categoryContentAnswer || q.categoryContentNote)\r\n                })) \r\n            }))\r\n    \r\n            setOldDataPredecessor(_oldDataPredecessorUpdate);\r\n\r\n            const _responseGetUpdatePredecessor = responseGetUpdatePredecessor.data\r\n            _responseGetUpdatePredecessor.forEach((predecessorItem, predecessorIndex) => {\r\n                predecessorItem.categoryContents = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    return {\r\n                        ...categoryContentsItem,\r\n                        categoryPresOrder: predecessorIndex,\r\n                        isLock: true\r\n                    }\r\n                })\r\n                return {...predecessorItem, ...predecessorItem.isLock = true, ...predecessorItem.newPredecessor = false, ...predecessorItem.categoryOrder }\r\n            })\r\n\r\n            setPrevDataPredecessor(_responseGetUpdatePredecessor);\r\n            \r\n            prevDataExamining.categoryPres = _responseGetUpdatePredecessor   \r\n\r\n            const editDataHealthRecordsForConclusion = prevDataExamining.healthRecords.find((healthRecordsItem) => healthRecordsItem.medicalBookId === null)\r\n    \r\n            setDataExaminingForConclusion({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n                conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n                categories: [],\r\n            });\r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExaminingWithoutOldPredecessor(_.cloneDeep(prevDataExamining));\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        //khám mới hoàn toàn hoặc tái khám có tiền căn chưa đụng\r\n        else{\r\n            const editDataCategoryPresForConclusion = prevDataExamining.categoryPres.map((predecessorItem) => {\r\n                const mainCategoryContentsExamining = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n    \r\n                const mainCategoryExamining = {\r\n                    categoryName: predecessorItem.categoryName,\r\n                    isPredecessor: true,\r\n                    categoryOrder: predecessorItem.categoryOrder,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n    \r\n                return mainCategoryExamining\r\n            })\r\n    \r\n            const editDataHealthRecordsForConclusion = prevDataExamining.healthRecords.find((healthRecordsItem) => healthRecordsItem.patientId === dataPantientsReadyExamining.patientsId)\r\n    \r\n            setDataExaminingForConclusion({\r\n                patientId: dataPantientsReadyExamining.patientsId,\r\n                medicalRegisterId: editDataHealthRecordsForConclusion.medicalRegisterId,\r\n                conclusion: editDataHealthRecordsForConclusion.conclusion,\r\n                categories: editDataCategoryPresForConclusion,\r\n            });\r\n    \r\n            prevDataExamining.categoryPres.forEach((categoryPresItem, categoryPresIndex) => {\r\n                categoryPresItem.categoryContents = categoryPresItem.categoryContents.map((categoryContentsItem) => {\r\n                    return {\r\n                        ...categoryContentsItem,\r\n                        categoryPresOrder: categoryPresIndex\r\n                    }\r\n                })\r\n                return {\r\n                    ...categoryPresItem,\r\n                }\r\n            })\r\n    \r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //bắt đầu sửa dữ liệu khám bệnh\r\n    const handleBeginEditExaminingForPantient = async () => {\r\n        setLoadingPatient(true);\r\n        const response = await updateMedicalState(dataPantientsReadyExamining.id, 1)\r\n        if(response.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n            await handleGetCategoryReExamining();\r\n            await handleGetRegistersByDateNow();\r\n            setActiveChip({chipOrder: 0, chipLabel: 'BN chờ khám'});\r\n        }\r\n    }\r\n\r\n    //lấy dữ liệu cây thư mục khám lại\r\n    const handleGetCategoryReExamining = async () => {\r\n        setLoadingCategoryExamining(true);\r\n        const responseGetUpdateMedicalBook = await getUpdateMedicalBook(prevDataExamining.healthRecords[0].medicalBookId);\r\n\r\n        if(responseGetUpdateMedicalBook.status === 200){\r\n            const _dataPantientsReadyExamining = {...dataPantientsReadyExamining};\r\n            _dataPantientsReadyExamining.status = 1;\r\n            setDataPantientsReadyExamining(_dataPantientsReadyExamining);\r\n\r\n\r\n            const _oldDataPredecessor = _.cloneDeep(prevDataExamining);\r\n\r\n            const _oldDataPredecessorUpdate = _oldDataPredecessor.categoryPres.map(category => ({       \r\n                categoryName: category.categoryName,\r\n                isPredecessor: true,\r\n                categoryOrder: category.categoryOrder,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                    ...content,\r\n                    categoryContentQuestions: content.categoryContentQuestions.filter(q => q.categoryContentAnswer || q.categoryContentNote)\r\n                })) \r\n            }))\r\n\r\n            if(prevDataExamining.newPredecessor === false){\r\n                setOldDataPredecessor(_oldDataPredecessorUpdate);\r\n            }\r\n\r\n            await handleSetMainDataReExamining(responseGetUpdateMedicalBook.data);\r\n            toast.success(`Đang khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}`, {toastId: 'success1'});\r\n        }\r\n        else if(responseGetUpdateMedicalBook.status === 400){\r\n            toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error1'});\r\n        }\r\n        setLoadingCategoryExamining(false);\r\n    }\r\n\r\n    //chỉnh dữ liệu cây thư mục khám của chức năng mở khám lại\r\n    const handleSetMainDataReExamining = async (responseGetUpdateMedicalBookData) => {\r\n        prevDataExamining.categoryPres.forEach((predecessorItem, predecessorIndex) => {\r\n            predecessorItem.categoryContents = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                return {\r\n                    ...categoryContentsItem,\r\n                    categoryPresOrder: predecessorIndex,\r\n                    isLock: true\r\n                }\r\n            })\r\n            predecessorItem.isLock = true\r\n        })\r\n        prevDataExamining.healthRecords[0].state = 1\r\n        prevDataExamining.healthRecords[0].categories = responseGetUpdateMedicalBookData.categories\r\n\r\n        const updateHealthRecordsCategoriesForConclusion = prevDataExamining.healthRecords[0].categories.map(category => ({\r\n            categoryName: category.categoryName,\r\n            isHealthRecord: true,\r\n            categoryContents: category.categoryContents.map(content => ({\r\n              ...content,\r\n              categoryContentQuestions: content.categoryContentQuestions.some(q => q.categoryContentAnswer || q.categoryContentNote) \r\n                ? content.categoryContentQuestions.filter(q => q.categoryContentAnswer && q.categoryContentNote) \r\n                : []\r\n            })) \r\n        }))\r\n\r\n        //demo truớc data kết luận\r\n        const demoDataExaminingForConclusion = {\r\n            patientId: dataPantientsReadyExamining.patientsId,\r\n            medicalRegisterId: dataPantientsReadyExamining.id !== prevDataExamining.healthRecords[0].medicalRegisterId ? dataPantientsReadyExamining.id : prevDataExamining.healthRecords[0].medicalRegisterId,\r\n            conclusion: prevDataExamining.healthRecords[0].conclusion,\r\n            categories: updateHealthRecordsCategoriesForConclusion\r\n        }\r\n\r\n        setHealthRecordsContents({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        setCurrentHealthRecordExamining({\r\n            healthRecordsName: prevDataExamining.healthRecords[0].examinationName,\r\n            categoryPatients: prevDataExamining.healthRecords[0].categories\r\n        })\r\n\r\n        const responseGetUpdatePredecessor = await getUpdatePredecessor(dataPantientsReadyExamining.patientsId);\r\n        //tiền căn đợt trước đã đụng (newPredecessor = false)\r\n        if(responseGetUpdatePredecessor.status === 200)\r\n        {\r\n            const _responseGetUpdatePredecessor = responseGetUpdatePredecessor.data\r\n            _responseGetUpdatePredecessor.forEach((predecessorItem, predecessorIndex) => {\r\n                predecessorItem.categoryContents = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    return {\r\n                        ...categoryContentsItem,\r\n                        categoryPresOrder: predecessorIndex,\r\n                        isLock: true\r\n                    }\r\n                })\r\n                return {...predecessorItem, ...predecessorItem.isLock = true, ...predecessorItem.newPredecessor = false, ...predecessorItem.categoryOrder }\r\n            })\r\n\r\n            setPrevDataPredecessor(_responseGetUpdatePredecessor);\r\n            prevDataExamining.categoryPres = _responseGetUpdatePredecessor   \r\n\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExaminingWithoutOldPredecessor(_.cloneDeep(prevDataExamining));\r\n            setPrevDataExamining();\r\n        }\r\n        //tiền căn đợt trước chưa đụng (newPredecessor = true) \r\n        else{\r\n            const responseGetMedicalDetailPatient = await getMedicalDetailPatient(dataPantientsReadyExamining.id);\r\n\r\n            const editDataCategoryPresForConclusion = prevDataExamining.categoryPres.map((predecessorItem) => {\r\n                const mainCategoryContentsExamining = predecessorItem.categoryContents.map((categoryContentsItem) => {\r\n                    const categoryContents = {\r\n                        categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                        categoryContentName: categoryContentsItem.categoryContentName,\r\n                        categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                        categoryContentText: categoryContentsItem.categoryContentText,\r\n                        categoryContentQuestions: []\r\n                    }\r\n                    return categoryContents\r\n                })\r\n    \r\n                const mainCategoryExamining = {\r\n                    categoryName: predecessorItem.categoryName,\r\n                    isPredecessor: true,\r\n                    categoryOrder: predecessorItem.categoryOrder,\r\n                    categoryContents: mainCategoryContentsExamining\r\n                }\r\n    \r\n                return mainCategoryExamining\r\n            })\r\n\r\n            demoDataExaminingForConclusion.categories = editDataCategoryPresForConclusion.concat(updateHealthRecordsCategoriesForConclusion);\r\n\r\n            prevDataExamining.categoryPres = responseGetMedicalDetailPatient.categoryPres\r\n            setMainDataExamining(prevDataExamining);\r\n            setPrevDataExamining();\r\n        }\r\n\r\n        setDataExaminingForConclusion(demoDataExaminingForConclusion);\r\n    }\r\n\r\n    //sửa dữ liệu tiền căn cho mở khám lại hoặc tái khám\r\n    const handleEditDataPredecessor = async (categoryName) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n        setTimeout(() => {\r\n            const findDataPredecessor = prevDataPredecessor.filter(predecessorItem => predecessorItem.categoryName === categoryName);\r\n                findDataPredecessor.forEach(dataPredecessorItem => ({\r\n                    ...dataPredecessorItem,\r\n                    ...dataPredecessorItem.isLock = false\r\n            }))\r\n            \r\n            const updatePredecessorCategoriesForConclusion = prevDataPredecessor.filter(category => category.categoryName === categoryName).map(category => ({\r\n                categoryName: category.categoryName,\r\n                isPredecessor: true,\r\n                categoryOrder: category.categoryOrder,\r\n                categoryContents: category.categoryContents.map(content => ({\r\n                    ...content,\r\n                    categoryContentQuestions: []\r\n                }))\r\n            }))\r\n\r\n            dataExaminingForConclusion.categories.unshift(updatePredecessorCategoriesForConclusion[0]);\r\n\r\n            mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                if(categoryPresItem.categoryName === findDataPredecessor[0].categoryName){      \r\n                    categoryPresItem.isLock = false\r\n                }\r\n                categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                    if(categoryPresItem.categoryName === findDataPredecessor[0].categoryName){      \r\n                        categoryContentsItem.isLock = false\r\n                    }\r\n                })\r\n            })\r\n\r\n            handleSelectCategoryClick(findDataPredecessor[0])\r\n        }, 300)\r\n        setOpenAlertProcessingBackdrop(false);\r\n    }\r\n\r\n    //huỷ không sửa dữ liệu tiền căn nữa\r\n    const handleCancelEditDataPredecessor = (e, categoryName) => {\r\n        setOpenAlertProcessingBackdrop(true);\r\n\r\n        setTimeout(() => {\r\n            const findDataWithoutNewPredecessor = prevDataExaminingWithoutOldPredecessor.categoryPres.find(categoryPresItem => categoryPresItem.categoryName === categoryName);\r\n        \r\n            mainDataExamining.categoryPres.forEach((categoryPresItem) => {\r\n                if(categoryPresItem.categoryName === findDataWithoutNewPredecessor.categoryName){\r\n                    categoryPresItem.categoryContents = findDataWithoutNewPredecessor.categoryContents\r\n                    categoryPresItem.isLock = true\r\n                }\r\n                categoryPresItem.categoryContents.forEach((categoryContentsItem) => {\r\n                    if(categoryPresItem.categoryName === categoryName){      \r\n                        categoryContentsItem.isLock = true\r\n                    }\r\n                })\r\n            })\r\n            \r\n            dataExaminingForConclusion.categories = dataExaminingForConclusion.categories.filter(categoriesItem => categoriesItem.categoryName !== categoryName);\r\n    \r\n            handleSelectCategoryClick(findDataWithoutNewPredecessor);\r\n    \r\n            setOpenAlertProcessingBackdrop(false);\r\n        }, 300)   \r\n    }\r\n\r\n    //tìm danh mục khám gồm tiền căn, sổ sức khỏe, dinh dưỡng...\r\n    const handleGetMedicalDetailPatient = async (id) => {\r\n        const responseDataExamining = await getMedicalDetailPatient(id);\r\n        setPrevDataExamining(responseDataExamining);\r\n    }\r\n\r\n    //chọn mục lục để khám\r\n    const handleSelectCategoryClick = async (categoryIncludeCotent) => {\r\n        if(openCollapseHealthRecords === true){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }\r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                ...categoryIncludeCotent,\r\n                contentQuantity: categoryIncludeCotent.categoryContents.length\r\n            }\r\n        )\r\n\r\n        if(dataPantientsReadyExamining.editExamining !== true && mainDataExamining.newPredecessor === true){\r\n            const editNewCategoryPreForContentCategorySelectedExamining = {...categoryIncludeCotent.categoryContents[0], newCategoryPre: categoryIncludeCotent.newCategoryPre}\r\n            setContentCategorySelectedExamining(editNewCategoryPreForContentCategorySelectedExamining);\r\n            setCurrentContentExamining(1);\r\n        }\r\n        else{\r\n            if(categoryIncludeCotent.categoryName !== categorySelectedExamining.categoryName){\r\n                const editNewCategoryPreForContentCategorySelectedExamining = {...categoryIncludeCotent.categoryContents[0], newCategoryPre: categoryIncludeCotent.newCategoryPre}\r\n                setContentCategorySelectedExamining(editNewCategoryPreForContentCategorySelectedExamining);\r\n                setCurrentContentExamining(1);\r\n            }\r\n            else{\r\n                const editNewCategoryPreForContentCategorySelectedExamining = {...categoryIncludeCotent.categoryContents[currentContentExamining - 1], newCategoryPre: categoryIncludeCotent.newCategoryPre}\r\n                setContentCategorySelectedExamining(editNewCategoryPreForContentCategorySelectedExamining);\r\n            }\r\n        }\r\n    }\r\n\r\n    //chọn cây thư mục khám sổ sức khỏe\r\n    const handleSelectHealthRecords = (healthRecords) => {\r\n        if(openCollapseHealthRecords === false){\r\n            setOpenCollapseHealthRecords(!openCollapseHealthRecords);\r\n        }        \r\n\r\n        if(healthRecordsContents.length !== 0){\r\n            setHealthRecordsContents([]);\r\n        }\r\n\r\n        setCategorySelectedExamining(\r\n            {\r\n                categoryName: 'Sổ sức khỏe',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n\r\n        setContentCategorySelectedExamining(\r\n            {\r\n                healthRecordsContentsType: 'tree',\r\n                categoryContents: healthRecords\r\n            }\r\n        )\r\n    }\r\n\r\n    //chọn chỉ định một sổ khám bệnh (tìm chi tiết một sổ khám bệnh)\r\n    const handleSelectHealthRecordsItem = async (medicalBookId, examinationName, healthRecordsState) => {\r\n        setLoadingContentsExamining(true);\r\n        if(currentHealthRecordExamining){\r\n            if(healthRecordsState === 2){\r\n                await findHealthRecord(medicalBookId, examinationName, healthRecordsState);\r\n            }\r\n            else{\r\n                setHealthRecordsContents({\r\n                    healthRecordsName: examinationName,\r\n                    newMedicalBook: currentHealthRecordExamining.newMedicalBook,\r\n                    categoryPatients: currentHealthRecordExamining.categoryPatients\r\n                })\r\n\r\n                const editHealthRecordsContent = currentHealthRecordExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => {\r\n                    const categoryName = categoryPatientsItem.categoryName;\r\n                    const firstContent = categoryPatientsItem.categoryContents[0];\r\n            \r\n                    return{\r\n                        categoryName: categoryName,\r\n                        categoryContents: firstContent,\r\n                        currentHealthRecordsContent: 1,\r\n                        contentQuantity: categoryPatientsItem.categoryContents.length\r\n                    }\r\n                })\r\n\r\n                const updateHealthRecordsContent = {\r\n                    healthRecordsName: examinationName,\r\n                    newMedicalBook: currentHealthRecordExamining.newMedicalBook,\r\n                    conclusion: dataExaminingForConclusion.conclusion,\r\n                    categoryPatients: editHealthRecordsContent\r\n                }\r\n                setContentCategorySelectedExamining(updateHealthRecordsContent);\r\n            }\r\n        }\r\n\r\n        else{\r\n            await findHealthRecord(medicalBookId, examinationName, healthRecordsState);\r\n        }\r\n        setLoadingContentsExamining(false);\r\n    }\r\n\r\n    const findHealthRecord = async (medicalBookId, examinationName, healthRecordsState) => {\r\n        const responseMedicalBook = await getMedicalBook(medicalBookId ? medicalBookId : 0);\r\n\r\n        //tái khám\r\n        if(dataPantientsReadyExamining.backRegister){\r\n            const editHealthRecordsContent = responseMedicalBook.medicakBook.categories.map((categoryPatientsItem, categoryPatientsIndex) => {\r\n                const categoryName = categoryPatientsItem.categoryName;\r\n                const firstContent = categoryPatientsItem.categoryContents[0];\r\n                \r\n                return{\r\n                    categoryName: categoryName,\r\n                    categoryContents: firstContent,\r\n                    currentHealthRecordsContent: 1,\r\n                    contentQuantity: categoryPatientsItem.categoryContents.length\r\n                }\r\n            })\r\n        \r\n            const updateHealthRecordsContent = {\r\n                healthRecordsName: examinationName,\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                conclusion: responseMedicalBook.medicakBook.conclusion,\r\n                categoryPatients: editHealthRecordsContent\r\n            }\r\n\r\n            setContentCategorySelectedExamining(updateHealthRecordsContent);\r\n            setPrevDataHealthRecords(responseMedicalBook.medicakBook);\r\n\r\n            //medicalBookId truyền vào bằng với medicalBookId của đợt khám hiện tại\r\n            if(medicalBookId === mainDataExamining.healthRecords[0].medicalBookId){\r\n                setHealthRecordsContents({\r\n                    healthRecordsName: examinationName,\r\n                    newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                    categoryPatients: responseMedicalBook.medicakBook.categories\r\n                })\r\n\r\n                setCurrentHealthRecordExamining({\r\n                    healthRecordsName: examinationName,\r\n                    newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                    categoryPatients: responseMedicalBook.medicakBook.categories\r\n                });\r\n            \r\n                const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                    const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                        const categoryContents = {\r\n                            categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                            categoryContentName: categoryContentsItem.categoryContentName,\r\n                            categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                            categoryContentText: categoryContentsItem.categoryContentText,\r\n                            categoryContentQuestions: []\r\n                        }\r\n                        return categoryContents\r\n                    })\r\n                    \r\n                    const mainCategoryExamining = {\r\n                        categoryName: categoriesItem.categoryName,\r\n                        isHealthRecord: true,\r\n                        categoryContents: mainCategoryContentsExamining\r\n                    }\r\n    \r\n                    return mainCategoryExamining\r\n                })\r\n    \r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n        }\r\n\r\n        else{\r\n            setHealthRecordsContents({\r\n                healthRecordsName: examinationName,\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                categoryPatients: responseMedicalBook.medicakBook.categories\r\n            })\r\n    \r\n            setCurrentHealthRecordExamining({\r\n                healthRecordsName: examinationName,\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                categoryPatients: responseMedicalBook.medicakBook.categories\r\n            });\r\n        \r\n            const editHealthRecordsContent = responseMedicalBook.medicakBook.categories.map((categoryPatientsItem, categoryPatientsIndex) => {\r\n                const categoryName = categoryPatientsItem.categoryName;\r\n                const firstContent = categoryPatientsItem.categoryContents[0];\r\n        \r\n                return{\r\n                    categoryName: categoryName,\r\n                    categoryContents: firstContent,\r\n                    currentHealthRecordsContent: 1,\r\n                    contentQuantity: categoryPatientsItem.categoryContents.length\r\n                }\r\n            })\r\n        \r\n            const updateHealthRecordsContent = {\r\n                healthRecordsName: examinationName,\r\n                newMedicalBook: responseMedicalBook.medicakBook.newMedicalBook,\r\n                conclusion: responseMedicalBook.medicakBook.conclusion,\r\n                categoryPatients: editHealthRecordsContent\r\n            }\r\n        \r\n            setContentCategorySelectedExamining(updateHealthRecordsContent);\r\n\r\n            if(healthRecordsState === 1){\r\n                const editDataHealthRecordsItemForConclusion = responseMedicalBook.medicakBook.categories.map((categoriesItem, categoriesIndex) => {\r\n                    const mainCategoryContentsExamining = categoriesItem.categoryContents.map((categoryContentsItem) => {\r\n                        const categoryContents = {\r\n                            categoryContentTitle: categoryContentsItem.categoryContentTitle,\r\n                            categoryContentName: categoryContentsItem.categoryContentName,\r\n                            categoryContentCheck: categoryContentsItem.categoryContentCheck,\r\n                            categoryContentText: categoryContentsItem.categoryContentText,\r\n                            categoryContentQuestions: []\r\n                        }\r\n                        return categoryContents\r\n                    })\r\n                    \r\n                    const mainCategoryExamining = {\r\n                        categoryName: categoriesItem.categoryName,\r\n                        isHealthRecord: true,\r\n                        categoryContents: mainCategoryContentsExamining\r\n                    }\r\n    \r\n                    return mainCategoryExamining\r\n                })\r\n    \r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                editDataHealthRecordsItemForConclusion.map((dataHealthRecordsItemForConclusionItem) => _dataExaminingForConclusion.categories.push(dataHealthRecordsItemForConclusionItem))\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n        }\r\n    }\r\n\r\n    //chọn loại mục khám của một sổ khám bệnh\r\n    const handleOpenHealthRecordsItem = (categoryPatientsIndex) => {\r\n        setOpenCollapseHealthRecordsItem((prevOpen) => {\r\n            const newOpen = [...prevOpen];\r\n            newOpen[categoryPatientsIndex] = !newOpen[categoryPatientsIndex];\r\n            return newOpen;\r\n        });\r\n    }\r\n\r\n    const handleRenderExamsStatus = (status) => {\r\n      if(status === 0){\r\n        return (\r\n          <div className='chipUnDoneExamms'><p className='chipLabel'>Chưa thực hiện</p></div>\r\n        )\r\n      }\r\n      else if(status === 1){\r\n        return (\r\n          <div className='chipDoingExamms'><p className='chipLabel'>Đang thực hiện</p></div>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <div className='chipDoneExamms'><p className='chipLabel'>Đã thực hiện</p></div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const handleOnChangePage = (event, value) => {\r\n         setContentCategorySelectedExamining(categorySelectedExamining.categoryContents[value - 1]);\r\n         setCurrentContentExamining(value);\r\n    }\r\n\r\n    const handeOnChangePageHealthRecords = (event, page, categoryIndex) => {\r\n        const _contentCategorySelectedExamining = {...contentCategorySelectedExamining};\r\n        _contentCategorySelectedExamining.categoryPatients[categoryIndex].categoryContents = healthRecordsContents.categoryPatients[categoryIndex].categoryContents[page - 1];\r\n        _contentCategorySelectedExamining.categoryPatients[categoryIndex].currentHealthRecordsContent = page;\r\n        setContentCategorySelectedExamining(_contentCategorySelectedExamining);\r\n    }\r\n\r\n    const handeOnChangePageOldHealthRecords = (event, page, categoryIndex) => {\r\n        const _contentCategorySelectedExamining = {...contentCategorySelectedExamining};\r\n        _contentCategorySelectedExamining.categoryPatients[categoryIndex].categoryContents = prevDataHealthRecords.categories[categoryIndex].categoryContents[page - 1];\r\n        _contentCategorySelectedExamining.categoryPatients[categoryIndex].currentHealthRecordsContent = page;\r\n        setContentCategorySelectedExamining(_contentCategorySelectedExamining);\r\n    }\r\n\r\n    const handleAnswerCheckQuestion = (questionIndex, answer) => {\r\n        //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng check\r\n        if(answer === null){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            )\r\n        }\r\n        else if(answer === true){\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = false\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            )\r\n        }\r\n        else{\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(_categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            )\r\n        }   \r\n    }\r\n\r\n    const typingRef = useRef(null);\r\n\r\n    const handleNoteCheckQuestion = (questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentNote = takenValue\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n            const isEditNote = true;\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                takenValue,\r\n                isEditNote\r\n            )\r\n        }, 300)\r\n    }\r\n\r\n    const handleAnswerValueQuestion = (questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _categorySelectedExamining = {...categorySelectedExamining};\r\n            _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setCategorySelectedExamining(_categorySelectedExamining);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _categorySelectedExamining.categoryName,\r\n                currentContentExamining - 1,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex],\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder,\r\n                _categorySelectedExamining.categoryContents[currentContentExamining - 1].categoryContentTitle,\r\n            )\r\n        }, 0)\r\n    }\r\n\r\n    const handleAnswerCheckQuestionHealthRecords = (categoryPatientsIndex, currentHealthRecordsContent, questionIndex, answer) => {\r\n        if(answer === null){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                currentHealthRecordsContent - 1,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            );\r\n        }\r\n\r\n        else if(answer === true){\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = false;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                currentHealthRecordsContent - 1,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            );\r\n        }\r\n\r\n        else{\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentAnswer = true;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n\r\n            createSelectedQuestionsExaminingForConclusion(\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryName, \r\n                currentHealthRecordsContent - 1,\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex],\r\n                _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentQuestionOrder\r\n            );\r\n        }\r\n    }\r\n    \r\n    //trả lời câu hỏi của mục sổ khám bệnh\r\n    const handleNoteCheckQuestionHealthRecords = (categoryPatientsIndex, currentHealthRecordsContent, questionIndex, value) => {\r\n        const takenValue = value;\r\n\r\n        if(typingRef.current){\r\n            clearInterval(typingRef.current);\r\n        }\r\n\r\n        typingRef.current = setTimeout(() => {\r\n            //set lại danh mục đang chọn để khám khi trả lời câu hỏi dạng giá trị\r\n            const _healthRecordsContents = {...healthRecordsContents};\r\n            _healthRecordsContents.categoryPatients[categoryPatientsIndex].categoryContents[currentHealthRecordsContent - 1].categoryContentQuestions[questionIndex].categoryContentNote = takenValue;\r\n            setHealthRecordsContents(_healthRecordsContents);\r\n        }, 0)\r\n    }\r\n\r\n    const createSelectedQuestionsExaminingForConclusion = (categoryName, currentCategory, categoryContentQuestion, questionOrder, categoryContentTitle, isEditNote) => {\r\n        //question dạng check nhưng answer là true\r\n        if(isEditNote && categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n            dataExaminingForConclusion.categories.forEach((categoriesItem) => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    if(categoriesItem.categoryContents[currentCategory].categoryContentQuestions.length !== 0){\r\n                        categoriesItem.categoryContents[currentCategory].categoryContentQuestions.forEach((questionItem) => {\r\n                            if(questionItem.categoryContentQuestionOrder === questionOrder){\r\n                                //dùng tạm categoryContentTitle thay cho taken value của note\r\n                                questionItem.categoryContentNote = categoryContentTitle\r\n                            }\r\n                        })\r\n                    }\r\n                    else{\r\n                        categoriesItem.categoryContents[currentCategory].categoryContentQuestions.push(categoryContentQuestion)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            if(categoryContentQuestion.categoryContentAnswer === true && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        categoriesItem.categoryContents[currentCategory].categoryContentQuestions.push(categoryContentQuestion)\r\n                    }\r\n                })\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n            }\r\n\r\n            //question dạng check nhưng answer là false\r\n            else if(categoryContentQuestion.categoryContentAnswer === false && categoryContentQuestion.categoryContentQuestionType === 'check'){\r\n                const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n                _dataExaminingForConclusion.categories.forEach((categoriesItem, categoriesIndex) => {\r\n                    if(categoriesItem.categoryName === categoryName){\r\n                        const removeSelectedQuestion = categoriesItem.categoryContents[currentCategory].categoryContentQuestions.filter((questionItem) => questionItem.categoryContentQuestionOrder !== questionOrder)\r\n                        categoriesItem.categoryContents[currentCategory].categoryContentQuestions = removeSelectedQuestion\r\n                    }\r\n                })\r\n                setDataExaminingForConclusion(_dataExaminingForConclusion)\r\n            }\r\n        }\r\n\r\n        //question dạng giá trị nhưng khác rỗng\r\n        if(categoryContentQuestion.categoryContentNote !== '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            // Duyệt qua từng categoriesItem trong categories\r\n            _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    // Duyệt qua từng categoryContentsItem trong categoryContents\r\n                    categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                        if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                            // Kiểm tra nếu categoryContentQuestions rỗng hoặc không rỗng\r\n                            if (categoryContentsItem.categoryContentQuestions.length > 0) {\r\n                                // Kiểm tra xem đã có categoryContentQuestionName chưa\r\n                                const existingQuestion = categoryContentsItem.categoryContentQuestions.find(question => \r\n                                    question.categoryContentQuestionName === categoryContentQuestion.categoryContentQuestionName\r\n                                );\r\n                \r\n                                if (existingQuestion) {\r\n                                    // Nếu đã tồn tại, cập nhật categoryContentAnswer\r\n                                    existingQuestion.categoryContentNote = categoryContentQuestion.categoryContentNote;\r\n                                } else {\r\n                                    // Nếu không tồn tại, thêm mới đối tượng vào categoryContentQuestions\r\n                                    categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                                }\r\n\r\n                            } else {\r\n                            // Nếu categoryContentQuestions rỗng, thêm trực tiếp đối tượng mới và ngưng vòng lặp để tránh thêm nhiều lần\r\n                                categoryContentsItem.categoryContentQuestions.push(categoryContentQuestion);\r\n                            }\r\n                        }\r\n                    });        \r\n                }\r\n            });\r\n\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n        //question dạng giá trị nhưng là rỗng\r\n        if(categoryContentQuestion.categoryContentNote === '' && categoryContentQuestion.categoryContentQuestionType === 'string'){\r\n            const _dataExaminingForConclusion = {...dataExaminingForConclusion};\r\n            _dataExaminingForConclusion.categories.forEach(categoriesItem => {\r\n                if(categoriesItem.categoryName === categoryName){\r\n                    categoriesItem.categoryContents.forEach(categoryContentsItem => {\r\n                        if(categoryContentsItem.categoryContentTitle === categoryContentTitle){\r\n                            categoryContentsItem.categoryContentQuestions = categoryContentsItem.categoryContentQuestions.filter(categoryContentQuestionsItem => categoryContentQuestionsItem.categoryContentQuestionName !== categoryContentQuestion.categoryContentQuestionName)\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            setDataExaminingForConclusion(_dataExaminingForConclusion);\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          '&.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa\r\n          },\r\n          '&.Mui-checked.Mui-disabled': {\r\n            color: '#d32f2f', // Màu sắc khi checkbox bị vô hiệu hóa và đã được chọn\r\n          },\r\n        },\r\n      });\r\n\r\n    const classes = useStyles();\r\n\r\n    // useEffect(() => {\r\n    //     const handleBeforeUnload = (e) => {\r\n    //         const confirmationMessage = 'Bạn có chắc chắn muốn rời khỏi trang này?';\r\n    //         e.returnValue = confirmationMessage; // Hiển thị thông báo cảnh báo\r\n    //         return confirmationMessage;\r\n    //       };\r\n\r\n    //       const handleUnload = () => {\r\n    //         sessionStorage.setItem('reloaded', 'true');\r\n    //       };\r\n      \r\n    //       window.addEventListener('beforeunload', handleBeforeUnload);\r\n    //       window.addEventListener('unload', handleUnload);\r\n      \r\n    //       return () => {\r\n    //         window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    //         window.removeEventListener('unload', handleUnload);\r\n    //       };\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        if(loading === false && user){\r\n            if(user.isCurrentDoctorExamining === true){\r\n                handleGetRegistersByDateNow();\r\n            }\r\n            else if(user.isCurrentDoctorExamining === false){\r\n                toast.error('Bạn không phải bác sĩ khám hôm nay, không thể dùng chức năng này', {toastId: 'error10'});\r\n            }\r\n        }\r\n    }, [loading, user])\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (event) => {\r\n            if(event.keyCode === 112){\r\n                event.preventDefault();\r\n            }\r\n\r\n            if(dataPantientsReadyExamining.patientsId !== ''){\r\n                if(event.keyCode === 112 && dataPantientsReadyExamining.status === 1){\r\n                    event.preventDefault();\r\n                    handleCancelExamining();\r\n                }\r\n\r\n                else if(event.keyCode === 113 && prevDataExamining){\r\n                    if(dataPantientsReadyExamining.status === 0 && dataPantientsReadyExamining.editExamining === false){\r\n                        handleBeginExaminingForPantient();\r\n                    }\r\n                    else if(dataPantientsReadyExamining.status === 1){\r\n                        alert(`Bạn đang trong quá trình khám cho bệnh nhân ${dataPantientsReadyExamining.patientsName}, vui lòng kết thúc đợt khám hiện tại để bắt đầu đợt khám mới!`);\r\n                    }\r\n                    else if(dataPantientsReadyExamining.status === 0  && dataPantientsReadyExamining.editExamining === true){\r\n                        handleBeginEditExaminingForPantient();\r\n                    }\r\n                }\r\n\r\n                else if(event.keyCode === 115){\r\n                    if(dataPantientsReadyExamining.status === 1){\r\n                        setOpenModalCompleteExamining(true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n\r\n    }, [dataPantientsReadyExamining, openModalCompleteExamining])\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"xl\" sx={{mt: 10.6}}>\r\n                <Box sx={{ bgcolor: '#fff', height: 'auto'}} >\r\n                    <Grid container spacing={2} sx={{pl: 0.6, pr: 0.6}}>\r\n\r\n                        <Grid item xs={5}>\r\n                            {/* <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{`${moment().format('dddd')}, ${moment().format('LL')}`}</Typography> */}\r\n                            <TableContainer component={Paper} sx={{ height: '332px', boxShadow: 5, borderRadius: '10px' }}>\r\n                                {loadingPatient ?\r\n                                    <>\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', backgroundColor: '#e0e0e0', height: '100%'}}>\r\n                                            <CircularProgress />\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu, hãy chờ một chút...</Typography>\r\n                                        </Box>        \r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <Box>\r\n                                            <Stack direction='row' spacing={1} sx={{justifyContent: 'center', mt: 1.4}}>\r\n                                                {listPantientChipState.map((pantientChipStateItem, pantientChipStateIndex) => (\r\n                                                    <Badge badgeContent={pantientChipStateItem.chipContent} color=\"error\" key={`chipPantientState ${pantientChipStateIndex}`}> \r\n                                                        <Chip label={pantientChipStateItem.chipLabel} color={pantientChipStateIndex === activeChip.chipOrder ? 'primary' : 'default'}\r\n                                                        onClick={() => handleSelectedChip(pantientChipStateIndex, pantientChipStateItem.chipLabel)} />  \r\n                                                    </Badge>\r\n                                                ))}\r\n                                            </Stack>\r\n                                            <Typography variant=\"h6\" sx={{mt: 0.2, textAlign: 'center', fontSize: '1.12rem'}}>Danh sách {activeChip.chipLabel} ngày {moment().format(\"DD/MM/YYYY\")}</Typography>\r\n                                            <Box sx={{display: 'flex', justifyContent: 'center', position: 'relative'}}>\r\n                                                <TextField sx={{mb: 0.6, width: 360, '& .MuiInputBase-inputSizeSmall': {textAlign: 'center'}}} size=\"small\" \r\n                                                    variant=\"outlined\" placeholder='Tìm với Mã BN hoặc Tên BN' value={searchPatientsQuery} onChange={(e) => handleSearchPantient(e.target.value)}\r\n                                                    InputProps={{ // <-- This is where the toggle button is added.\r\n                                                        startAdornment: (\r\n                                                            <InputAdornment position='start'><SearchIcon/></InputAdornment>  \r\n                                                        ),\r\n                                                        endAdornment: (\r\n                                                            <InputAdornment position='end'>\r\n                                                                {searchPatientsQuery !== '' ? \r\n                                                                    <CloseIcon sx={{cursor: 'pointer'}} titleAccess='Xóa'\r\n                                                                        onClick={() => [setSearchPatientsQuery(''), setListDataPatientsRegisterSort(listDataPatientsRegisterState)]}\r\n                                                                    /> \r\n                                                                : \r\n                                                                    null\r\n                                                                }\r\n                                                            </InputAdornment>  \r\n                                                        )\r\n                                                    }}>\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Box>\r\n                                \r\n                                        <Table stickyHeader >\r\n                                            <TableHead>\r\n                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>STT</TableCell>\r\n                                                    <TableCell align='left' sx={{fontSize: '0.95rem'}}>Mã bệnh nhân</TableCell>\r\n                                                    <TableCell align=\"left\" sx={{fontSize: '0.95rem'}}>Họ tên</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {listDataPatientsRegisterSort.map((dataPantientItem, dataPantientIndex) => (\r\n                                                    <TableRow hover role=\"checkbox\" key={dataPantientItem.order}\r\n                                                        sx={{ cursor: 'pointer', backgroundColor: dataPantientItem.state === 1 ? '#26c6da' : '#fff', \r\n                                                        ':hover': {backgroundColor: dataPantientItem.state === 1 ? '#00bcd4 !important' : 'rgba(0, 0, 0, 0.1) !important'} }} \r\n                                                        onClick={() => handleSelectPantientExamining(dataPantientItem)}\r\n                                                    >\r\n                                                        <TableCell align='left' sx={{width: '20px'}}>{dataPantientItem.order}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '150px'}}>{dataPantientItem.patient.patientId}</TableCell>\r\n                                                        <TableCell align='left' sx={{width: '240px'}}>{dataPantientItem.patient.fullName}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </>\r\n                                }\r\n                            </TableContainer>\r\n\r\n                            {/* cây thư mục khám */}\r\n                            <Box style={{width: '100%', marginTop: '8px', borderRadius: '10px', border: '2px solid red', height: '250px'}} >\r\n                                {\r\n                                    mainDataExamining.length === 0 && loadingCategoryExamining === false || prevDataExamining === false ?\r\n                                        null\r\n                                    :\r\n                                    <>\r\n                                        {loadingCategoryExamining ?\r\n                                            <Box sx={{backgroundColor: '#e0e0e0', borderRadius: '10px', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu cây thư mục khám, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <>\r\n                                                <div className='category-scrollbar'>\r\n                                                    <List sx={{p: 0, display: 'inline-grid'}}>\r\n                                                        {mainDataExamining.categoryPres.map((predecessorItem, predecessorIndex) => (\r\n                                                            <Box sx={{display: 'inline-flex'}} key={`category ${predecessorIndex}`}>\r\n                                                                <ListItemButton\r\n                                                                    sx={{\r\n                                                                    width: 'fitContent', pt: '4px', pb: '4px', borderRadius: '8px', ':hover': {backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'},\r\n                                                                    backgroundColor: categorySelectedExamining.categoryName === predecessorItem.categoryName ? '#ffd54f' : ''}} \r\n                                                                    onClick={() => handleSelectCategoryClick(predecessorItem)}\r\n                                                                >\r\n                                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                        <ListItemText primary={predecessorItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </Box>\r\n                                                                </ListItemButton>\r\n\r\n                                                                {predecessorItem.newCategoryPre === true && predecessorItem.newPredecessor === true ? \r\n                                                                    null\r\n                                                                :\r\n                                                                    <>\r\n                                                                        {predecessorItem.newCategoryPre === false ?\r\n                                                                            <>  \r\n                                                                                <CheckCircleIcon sx={{color: 'green', fontSize: '1.4rem', margin: 'auto'}} titleAccess='đã theo dõi'/>\r\n                                                                            </>\r\n                                                                        :\r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        {mainDataExamining.newPredecessor ? \r\n                                                                            null\r\n                                                                        :\r\n                                                                            predecessorItem.isLock === true ?\r\n                                                                                <>  \r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={() => handleEditDataPredecessor(predecessorItem.categoryName)}>\r\n                                                                                        <EditIcon sx={{color: 'blue', fontSize: '1.6rem'}} titleAccess='sửa'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>\r\n                                                                            \r\n                                                                            :\r\n                                                                                <>\r\n                                                                                    <IconButton edge=\"end\" sx={{ml: 0.5, zIndex: 100}} onClick={(e) => handleCancelEditDataPredecessor(e, predecessorItem.categoryName)}>\r\n                                                                                        <CancelIcon sx={{color: 'red', fontSize: '1.6rem'}} titleAccess='hủy'/>\r\n                                                                                    </IconButton>\r\n                                                                                </>   \r\n                                                                        }                                  \r\n                                                                    </>\r\n                                                                }\r\n                                                            </Box>\r\n                                                        ))}\r\n\r\n                                                        <ListItemButton \r\n                                                            sx={{pt: '4px', pb: '4px', borderRadius: '8px', backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffd54f' : '',\r\n                                                                ':hover': {backgroundColor: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? '#ffc107' : 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                            onClick={() => handleSelectHealthRecords(mainDataExamining.healthRecords)}\r\n                                                        >\r\n                                                            <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: '#2962ff'}}}>\r\n                                                                <SendIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                            </ListItemIcon>\r\n\r\n                                                            <ListItemText primary={'Sổ sức khỏe'} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>                                                    \r\n                                                        </ListItemButton>\r\n\r\n                                                        <Collapse in={openCollapseHealthRecords} timeout=\"auto\" unmountOnExit>\r\n                                                            <div style={{ paddingLeft: '24px' }}>\r\n                                                                {mainDataExamining.healthRecords.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                    <ListItemButton key={`healthRecords ${healthRecordsIndex}`} sx={{pt: '0px', pb: '0px', width: 'auto', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}} \r\n                                                                        onClick={() => handleSelectHealthRecordsItem(healthRecordsItem.medicalBookId, healthRecordsItem.examinationName, healthRecordsItem.state)}>\r\n                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem', color: healthRecordsItem.state === 1 ? 'red' : '#009688'}}}>\r\n                                                                            <FiberManualRecordIcon sx={{transform: categorySelectedExamining.categoryName === 'Sổ sức khỏe' ? 'rotate(90deg)' : 'rotate(0deg)'}} />\r\n                                                                        </ListItemIcon>\r\n                                                                        <ListItemText primary={healthRecordsItem.examinationName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                    </ListItemButton>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </Collapse>\r\n                                                    </List>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </Box>\r\n                            <div className='instruction' style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                                <Typography variant='h6'><span style={{fontWeight: 'bolder', color: 'red'}}>F1</span> huỷ khám</Typography>\r\n                                <Typography variant='h6'><span style={{fontWeight: 'bolder', color: 'deeppink'}}>F2</span> bắt đầu khám</Typography>\r\n                                <Typography variant='h6'><span style={{fontWeight: 'bolder', color: 'blue'}}>F4</span> kết thúc khám</Typography>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            {/* thông tin bệnh nhân */}\r\n                            <Box sx={{boxShadow: 4, borderRadius: '20px', border: '2px solid blue', height: '220px', mb: '4px', overflow: 'auto'}}>\r\n                                <Typography variant='h6' sx={{color: 'blue', mt: 0.6, mb: 0.6, fontWeight: 'bolder', fontSize: '1.2rem', textAlign: 'center'}}>Thông tin bệnh nhân</Typography>\r\n                                <Box sx={{pl: 4, pr: 4, mt: 1}}>\r\n                                    {loadingInfoPatient ?\r\n                                        <Box sx={{display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', mt: 4}}>\r\n                                            <CircularProgress color=\"inherit\"/>\r\n                                            <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải thông tin bệnh nhân, hãy chờ một chút...</Typography>\r\n                                        </Box>\r\n                                    :\r\n                                        <>\r\n                                            <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 4}}>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <PinIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Mã BN: ${dataPantientsReadyExamining.patientsId || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <PersonIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Họ tên: ${dataPantientsReadyExamining.patientsName || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    {dataPantientsReadyExamining.patientsGender === true ? <MaleIcon sx={{color: 'coral', fontSize: '27px'}}/> : <FemaleIcon sx={{color: 'coral', fontSize: '27px'}}/>}\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Giới tính: ${dataPantientsReadyExamining.patientsGender !== '' ? dataPantientsReadyExamining.patientsGender === true ? 'Nam' : 'Nữ' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <CalendarMonthIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>Ngày sinh: {dataPantientsReadyExamining.patientsDOB ? moment(dataPantientsReadyExamining.patientsDOB).format(\"DD/MM/YYYY\") : ''}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={5} sx={{display: 'inline-flex'}}>\r\n                                                    <InfoIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Tháng tuổi: ${dataPantientsReadyExamining.patientsMonthsOld || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <PhoneIcon sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Sdt: ${dataPantientsReadyExamining.patientsPhone || ''}`}</Typography>\r\n                                                </Grid>\r\n                                                \r\n\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiBodyHeight style={{color: 'tomato', fontSize: '1.42rem', marginLeft: '2px'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 0.8}}>\r\n                                                        {`Chiều cao: ${dataPantientsReadyExamining.patientsHeight ? dataPantientsReadyExamining.patientsHeight + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={4} sx={{display: 'inline-flex'}}>\r\n                                                    <GiWeightScale style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Cân nặng: ${dataPantientsReadyExamining.patientsWeight ? dataPantientsReadyExamining.patientsWeight + ' kg' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={1}/>\r\n                                                <Grid item xs={3} sx={{display: 'inline-flex'}}>\r\n                                                    <TbRulerMeasure style={{color: 'tomato', fontSize: '1.42rem'}}/>\r\n                                                    <Typography variant='subtitle1' sx={{ml: 1}}>\r\n                                                        {`Vòng đầu: ${dataPantientsReadyExamining.patientsHeadCircumference ? dataPantientsReadyExamining.patientsHeadCircumference + ' cm' : ''}`}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                \r\n                                                <Grid item xs={12} sx={{display: 'inline-flex'}}>\r\n                                                    <Home sx={{color: 'tomato'}}/><Typography variant='subtitle1' sx={{ml: 1}}>{`Địa chỉ: ${dataPantientsReadyExamining.patientsAddress || ''}`}</Typography>\r\n                                                </Grid> \r\n\r\n                                            </Grid>\r\n                                        </>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            {/* nội dung khám */}\r\n                            <div className='container-content-examining'>\r\n                                {\r\n                                    loadingPrevDataExamining ? \r\n                                        <>\r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <CircularProgress />\r\n                                                <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu kỳ khám gần nhất, hãy chờ một chút...</Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    :\r\n                                    prevDataExamining ? \r\n                                        prevDataExamining.healthRecords.length === 1 && prevDataExamining.healthRecords[0].medicalBookId === null ? \r\n                                            <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                <Typography variant='h6'>Bệnh nhân không có kỳ khám trước</Typography>\r\n                                            </Box>\r\n                                        :\r\n                                            <div className='content-examining'><PreviewLastExamining prevDataExamining={prevDataExamining} /></div>\r\n                                    :\r\n                                        null\r\n                                }\r\n                                \r\n                                {contentCategorySelectedExamining.length !== 0 ? \r\n                                    <>\r\n                                        <div className='content-examining' style={{height: healthRecordsContents.length === 0 ? '47.4vh' : '50vh'}}>\r\n                                            {loadingContentsExamining ? \r\n                                                <>\r\n                                                    <Box sx={{height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\r\n                                                        <CircularProgress />\r\n                                                        <Typography variant='subtitle1' sx={{mt: 1}}>Đang tải dữ liệu sổ khám bệnh, hãy chờ một chút...</Typography>\r\n                                                    </Box>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    <Box sx={contentCategorySelectedExamining.categoryContentTitle === null ? {marginTop: '30px'} : {}}>\r\n                                                        <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>{contentCategorySelectedExamining.categoryContentTitle || ''}</Typography>\r\n                                                        {contentCategorySelectedExamining.categoryContentQuestions ? \r\n                                                            contentCategorySelectedExamining.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                <Box key={`categoryContentQuestionName ${questionIndex}`}>\r\n                                                                    <Grid container rowSpacing={0}>\r\n\r\n                                                                        {questionIndex === 0 ? \r\n                                                                            <>\r\n                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{contentCategorySelectedExamining.categoryContentName}</Typography>\r\n                                                                                </Grid>\r\n\r\n                                                                                {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                                    <>\r\n                                                                                        <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                            <CheckBoxIcon sx={{fontSize: '1.22rem', color: 'gray'}}/><Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', margin: 'auto', lineHeight: '1.6'}}>{contentCategorySelectedExamining.categoryContentCheck}</Typography>\r\n                                                                                        </Grid>\r\n\r\n                                                                                        <Grid item xs={7} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{contentCategorySelectedExamining.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                    </>\r\n                                                                                    : \r\n                                                                                        <Grid item xs={8} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                            <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{contentCategorySelectedExamining.categoryContentText}</Typography>\r\n                                                                                        </Grid>\r\n                                                                                }                                                                             \r\n                                                                            </> \r\n                                                                            : \r\n                                                                            null\r\n                                                                        }\r\n\r\n                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                            <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                        </Grid>\r\n                                                                \r\n                                                                        {questionItem.categoryContentQuestionType === 'check' ? \r\n                                                                            <>\r\n                                                                                <Grid item xs={1} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                    <Checkbox disabled={contentCategorySelectedExamining.isLock === true ? true : false} checked={questionItem.categoryContentAnswer === true ? true : false } classes={{ root: classes.root }} color='error' sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} onClick={(e) => handleAnswerCheckQuestion(questionIndex, questionItem.categoryContentAnswer)} />\r\n                                                                                </Grid>\r\n\r\n                                                                                <Grid item xs={7} >\r\n                                                                                    <div className='textfield-for-answer'>\r\n                                                                                        <div className='suggest-note' key={`current ${currentContentExamining} - question ${questionIndex} - category ${contentCategorySelectedExamining.categoryContentOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - isLock ${contentCategorySelectedExamining.isLock}`} >                                                                          \r\n                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} disabled={contentCategorySelectedExamining.isLock === true ? true : false}\r\n                                                                                                onChange={(e) => handleNoteCheckQuestion(questionIndex, e.target.value)}\r\n                                                                                                defaultValue={questionItem.categoryContentNote}\r\n                                                                                            />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </Grid>\r\n                                                                            </>   \r\n                                                                            :\r\n                                                                            <>\r\n                                                                                <Grid item xs={8}>\r\n                                                                                    <div className='textfield-for-answer' key={`current ${currentContentExamining} - question ${questionIndex} - category ${contentCategorySelectedExamining.categoryContentOrder} - categoryPresOrder ${contentCategorySelectedExamining.categoryPresOrder} - isLock ${contentCategorySelectedExamining.isLock}`} >\r\n                                                                                        <input type='text' disabled={contentCategorySelectedExamining.isLock === true ? true : false}\r\n                                                                                            className='value-for-answer' onChange={(e) => handleAnswerValueQuestion(questionIndex, e.target.value)} \r\n                                                                                            defaultValue={questionItem.categoryContentNote} \r\n                                                                                        />\r\n                                                                                    </div>\r\n                                                                                </Grid>\r\n                                                                            </>\r\n                                                                        }\r\n                                                                    </Grid>\r\n                                                                </Box>\r\n                                                            ))\r\n                                                            :\r\n                                                            contentCategorySelectedExamining.healthRecordsContentsType === 'tree' && healthRecordsContents.length === 0 ? \r\n                                                                <>\r\n                                                                    <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', mb: 0.2}}>Khám và theo dõi sức khỏe định kỳ</Typography>\r\n                                                                    <TableContainer component={Paper}>\r\n                                                                        <Table stickyHeader>\r\n                                                                            <TableHead>\r\n                                                                                <TableRow sx={{\"& th\": {color: \"rgba(96, 96, 96)\", backgroundColor: \"pink\"}}}>\r\n                                                                                    <TableCell align='left' sx={{fontSize: '0.9rem', color: 'black'}}>Kỳ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Trạng thái</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Ngày khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Bác sĩ khám</TableCell>\r\n                                                                                    <TableCell align=\"left\" sx={{fontSize: '0.9rem'}}>Kết luận</TableCell>\r\n                                                                                </TableRow>\r\n                                                                            </TableHead>\r\n                                                                            <TableBody sx={{borderRadius: '0px'}}>\r\n                                                                                {contentCategorySelectedExamining.categoryContents.map((healthRecordsItem, healthRecordsIndex) => (\r\n                                                                                    <TableRow hover role=\"checkbox\" key={healthRecordsIndex}>\r\n                                                                                        <TableCell align='left' sx={{width: '158px'}}><DescriptionIcon sx={{mr: 0.5, mb: 0.4, color: 'dodgerblue'}}/>{healthRecordsItem.examinationName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '144px'}}>{handleRenderExamsStatus(healthRecordsItem.state)}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '108px'}}>{moment(healthRecordsItem.timeRegister).format(\"DD/MM/YYYY\")}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: '115px'}}>{healthRecordsItem.doctorFullName}</TableCell>\r\n                                                                                        <TableCell align='left' sx={{width: 'auto'}}>{healthRecordsItem.conclusion}</TableCell>\r\n                                                                                    </TableRow>\r\n                                                                                ))}\r\n                                                                            </TableBody>\r\n                                                                        </Table>\r\n                                                                    </TableContainer>\r\n                                                                </>\r\n                                                            :\r\n                                                            <>\r\n                                                                <Typography variant='h6' sx={{fontWeight: 'bolder', textAlign: 'center', fontSize: '1.2rem', lineHeight: 1, mt: 1}}>{contentCategorySelectedExamining.healthRecordsName}</Typography>\r\n                                                                <div className='health-record-content'>\r\n                                                                    <List sx={{p: 0}}>\r\n                                                                        {contentCategorySelectedExamining.categoryPatients.map((categoryPatientsItem, categoryPatientsIndex) => (\r\n                                                                            <div key={`categoryPatients ${categoryPatientsIndex}`}>\r\n                                                                                <ListItemButton     \r\n                                                                                    sx={{pt: '0px', pb: '0px', borderRadius: '8px', ':hover': {backgroundColor: 'rgba(0, 0, 0, 0.1)'}}}\r\n                                                                                    onClick={() => handleOpenHealthRecordsItem(categoryPatientsIndex)}\r\n                                                                                >\r\n                                                                                    <Box sx={{display: 'flex', alignItems: 'center'}}>\r\n                                                                                        <ListItemIcon sx={{minWidth: '30px', '& .MuiSvgIcon-fontSizeMedium': {fontSize: '1rem', color: '#2962ff'}}}><SendIcon /></ListItemIcon>\r\n                                                                                        <ListItemText primary={categoryPatientsItem.categoryName} sx={{'& .MuiListItemText-primary': {fontSize: '1.25rem', fontWeight: 'bolder', color: 'deeppink'}}}/>\r\n                                                                                    </Box>\r\n                                                                                </ListItemButton>\r\n\r\n                                                                                <Collapse in={openCollapseHealthRecordsItem[categoryPatientsIndex]} timeout=\"auto\" unmountOnExit>\r\n                                                                                    <div className='header-health-record' style={{marginTop: '0.4x', marginBottom: '0.4px', border: '2px solid #00bcd4', borderRadius: '20px'}}>\r\n                                                                                        <Typography variant='subtitle1' sx={{fontWeight: 'bolder', textAlign: 'center'}}>{categoryPatientsItem.categoryContents.categoryContentTitle}</Typography>\r\n\r\n                                                                                        <div className='content-health-record' style={{padding: '10px'}}>                                                                                                                                                                \r\n                                                                                            <Grid container rowSpacing={0}>\r\n                                                                                                <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder'}}>{categoryPatientsItem.categoryContents.categoryContentName}</Typography>\r\n                                                                                                </Grid>\r\n\r\n                                                                                                <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderRight: '0px', p: 0.7, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                                                                                                    <CheckBoxIcon sx={{fontSize: '1.2rem', color: 'gray', mr: 0.4}}/>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', lineHeight: '1.6'}}>{categoryPatientsItem.categoryContents.categoryContentCheck}</Typography>\r\n                                                                                                </Grid>\r\n\r\n                                                                                                <Grid item xs={5} sx={{border: '2px solid rgb(218,220,224)', p: 0.7}}>\r\n                                                                                                    <Typography variant='subtitle1' sx={{color: 'blue', fontWeight: 'bolder', ml: 0.5}}>{categoryPatientsItem.categoryContents.categoryContentText}</Typography>\r\n                                                                                                </Grid> \r\n                                                                                                \r\n                                                                                                {categoryPatientsItem.categoryContents.categoryContentQuestions.map((questionItem, questionIndex) => (\r\n                                                                                                    <Box key={`questionItem ${questionIndex} healthRecordsName ${contentCategorySelectedExamining.healthRecordsName}`} style={{display: 'flex', width: '100%'}}>\r\n                                                                                                        <Grid item xs={4} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', alignItems: 'center'}}>\r\n                                                                                                            <Typography variant='subtitle1' sx={{fontSize: '1rem'}}>{questionItem.categoryContentQuestionName}</Typography>\r\n                                                                                                        </Grid>\r\n\r\n                                                                                                        {questionItem.categoryContentQuestionType === 'check' ?\r\n                                                                                                            <>\r\n                                                                                                                <Grid item xs={3} sx={{border: '2px solid rgb(218,220,224)', borderTop: '0px', borderRight: '0px', p: 0.5, display: 'flex', justifyContent: 'center'}}>\r\n                                                                                                                    <Checkbox classes={{ root: classes.root }} checked={questionItem.categoryContentAnswer === true ? true : false }\r\n                                                                                                                        disabled={contentCategorySelectedExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                        sx={{'& .MuiSvgIcon-fontSizeMedium': {fontSize: '1.2rem'}}} color='error'\r\n                                                                                                                        onClick={(e) => handleAnswerCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsItem.currentHealthRecordsContent, questionIndex, questionItem.categoryContentAnswer)} \r\n                                                                                                                    />\r\n                                                                                                                </Grid>\r\n                                                                                                            \r\n                                                                                                                <Grid item xs={5} >\r\n                                                                                                                    <div className='note-for-answer'>\r\n                                                                                                                        <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex}`}>                                                                          \r\n                                                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                disabled={contentCategorySelectedExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsItem.currentHealthRecordsContent, questionIndex, e.target.value)}    \r\n                                                                                                                            />\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                                </Grid>\r\n                                                                                                            </>\r\n                                                                                                        :\r\n                                                                                                            <>\r\n                                                                                                                <Grid item xs={8} >\r\n                                                                                                                    <div className='note-for-answer'>\r\n                                                                                                                        <div className='suggest-note' key={`current ${categoryPatientsItem.currentHealthRecordsContent}-${questionIndex}`}>                                                                          \r\n                                                                                                                            <TextareaAutosize className='textarea-autosize' rows={1} defaultValue={questionItem.categoryContentNote}\r\n                                                                                                                                disabled={contentCategorySelectedExamining.newMedicalBook === false ? true : false}\r\n                                                                                                                                onChange={(e) => handleNoteCheckQuestionHealthRecords(categoryPatientsIndex, categoryPatientsItem.currentHealthRecordsContent, questionIndex, e.target.value)}    \r\n                                                                                                                            />\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                                </Grid>\r\n                                                                                                            </>\r\n                                                                                                        }\r\n                                                                                                    </Box>\r\n                                                                                                ))}\r\n                                                                                            </Grid>\r\n                                                                                        </div>\r\n\r\n                                                                                        <div className='footer-content-examining' style={{backgroundColor: '#00bcd4'}}>\r\n                                                                                            <Pagination count={categoryPatientsItem.contentQuantity} page={categoryPatientsItem.currentHealthRecordsContent} \r\n                                                                                                color=\"error\" sx={{m: 'auto'}} onChange={(e, value) => mainDataExamining.healthRecords[0].examinationName === contentCategorySelectedExamining.healthRecordsName ? handeOnChangePageHealthRecords(e, value, categoryPatientsIndex) : handeOnChangePageOldHealthRecords(e, value, categoryPatientsIndex)}>\r\n                                                                                            </Pagination>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </Collapse>\r\n                                                                            </div>\r\n                                                                        ))}\r\n\r\n                                                                        {contentCategorySelectedExamining.conclusion !== null ?\r\n                                                                            <>\r\n                                                                                <div className='conclusion' style={{marginLeft: '16px', marginTop: '4px'}}>\r\n                                                                                    <Typography variant='h6' sx={{color: 'blueviolet', fontWeight: 'bolder'}}>{`Kết luận của bác sĩ: ${contentCategorySelectedExamining.conclusion}`}</Typography>\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                            :\r\n                                                                                null\r\n                                                                        }\r\n\r\n                                                                    </List>\r\n                                                                </div>\r\n                                                            </>\r\n                                                        }\r\n                                                    </Box>\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n\r\n                                        {contentCategorySelectedExamining.categoryContentQuestions ? \r\n                                            <>\r\n                                                <div className='footer-content-examining'>\r\n                                                    <Pagination count={categorySelectedExamining.contentQuantity} page={currentContentExamining} color=\"success\" sx={{m: 'auto'}} onChange={(event, value) => handleOnChangePage(event, value)} />\r\n                                                </div>\r\n                                            </>\r\n                                            :\r\n                                            <></>\r\n                                        }\r\n                                    </>\r\n                                :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Container>\r\n\r\n            <CompleteExamining openModalCompleteExamining={openModalCompleteExamining} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n                handleCompleteExaminingForPantient={handleCompleteExaminingForPantient} dataExaminingForConclusion={dataExaminingForConclusion} oldDataPredecessor={oldDataPredecessor}\r\n            />\r\n            <AlertProcessingBackdrop \r\n                openAlertProcessingBackdrop={openAlertProcessingBackdrop} changeBackground={true}\r\n            />\r\n            {/* <AlertConfirm openAlertConfirmModal={openAlertConfirmModal.open} onCloseAlertConfirmModal={setOpenAlertConfirmModal} \r\n                titleConfirm={openAlertConfirmModal.title} setOpenModalCompleteExamining={setOpenModalCompleteExamining} \r\n            /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDoctorExamining","import { BrowserRouter, Route, Link, Switch, NavLink, HashRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport Header from \"../components/Nav/Header.jsx\";\nimport Page404 from \"../components/ErrorPage/Page404\";\nimport Login from \"../components/LoginAccount/Log-in\";\nimport MainMedicalRegister from \"../components/MedicalRegister/MainMedicalRegister.jsx\";\nimport MainDoctorExamining from \"../components/DoctorExamining/MainDoctorExamining.jsx\";\n\nconst AppRoutes = (props) => {\n  return (\n    <>\n      <HashRouter>\n        {/* <Header />{\" \"} */}\n        <Switch>\n          <Route exact path=\"/\">home{\" \"}</Route>\n          <Route path=\"/login\"><Login /></Route>\n          <PrivateRoutes path=\"/medicalregister\" component={MainMedicalRegister}></PrivateRoutes>\n          <PrivateRoutes path=\"/doctor-examining\" component={MainDoctorExamining}></PrivateRoutes>\n          <Route path=\"*\"><Page404 />{\" \"}</Route>\n          {/* <PrivateRoutes path=\"/users\" component={Users} /> */}\n        </Switch>\n      </HashRouter>\n    </>\n  );\n};\nexport default AppRoutes;\n","import \"./App.scss\";\nimport { ToastContainer } from \"react-toastify\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Nav/Header\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\nfunction App() {\n\n  return (\n    <>\n      <HashRouter>\n        <div className=\"header-container\">\n          <Header />\n        </div>\n\n        <div className=\"app-container\">\n          <AppRoutes />\n        </div>\n      </HashRouter>\n\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={4000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}